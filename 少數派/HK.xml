<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>少數派</title>
        <link>https://sspai.com</link>
        <description>少數派致力於更好地運用數字產品或科學方法，幫助用户提升工作效率和生活品質</description>
        <language>zh-CN</language>
        <managingEditor>contact@sspai.com (少數派)</managingEditor>
        <pubDate>Tue, 21 Jan 2025 18:37:36 +0800</pubDate>
        <item>
            <title>社區速遞 078 | 你沒見過的社區文章、一週最熱評、派友的遊戲清單</title>
            <link>https://sspai.com/post/95785</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;除了首頁時間流和側欄的精選展位，少數派 Matrix 社區還有很多優秀內容因條件所限無法得到有效曝光，因此我們決定重啟 Matrix 週報，並在此基礎上添加更多社區內容、作者投稿新玩意呈現給大家。&lt;/p&gt;&lt;h2&gt;&#128293;一週熱評&lt;/h2&gt;&lt;p&gt;來自文章&lt;a href=&quot;https://sspai.com/post/95633&quot;&gt;《物念&#183;一個物品價值追蹤網站》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;紅燒牛肉 &lt;/strong&gt;(+1) 試用了下，不清楚你怎麼定義成本高低的，比如買個車子，幾年下來每日成本也攤不到 100 一下，但是車子屬於必需品，和手機平板對比就有點不合適吧&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;o 大狼 o &lt;/strong&gt;(+0) 去試用了一下，有點意思。&lt;/p&gt;&lt;p&gt;我其實買有些東西的時候，也會有類似的想法。&lt;/p&gt;&lt;p&gt;比如 2020 年，Keep 一輛動感單車要 2600 元，我盤算著，如果能騎 200 小時的，每小時成本 13 元，我能接受，就買了。結果一共只騎了 40 小時，大多時間閒置，就 600 元轉讓了。算下來實際每小時使用成本 50 元，大概比去健身房高得多了。&lt;/p&gt;&lt;p&gt;你的網站上現在只有按次計的，但可以多一些方式，比如象健身單車，不可能統計一共騎了幾次，但因為本身有使用時間統計功能，我就按總使用時間計，筆記本電腦、手機什麼的，天天頻繁使用的，只會按天計。&lt;/p&gt;&lt;p&gt;家裡一個空氣炸鍋，挺貴的，但從疫情前開始，一直用到現在，使用頻率極高，一年 200 次是有的，在網站上要體現這個使用次數，還有點難度。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;來自文章&lt;a href=&quot;https://sspai.com/post/95637&quot;&gt;《淺聊藥品集採焦慮》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Gurri &lt;/strong&gt;(+1) 把焦慮轉移到「預防」上，這個説的太好了。國家財政的問題不管我們持什麼觀點，能做的都不多。還是先為自己和家人行動起來。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;來自文章&lt;a href=&quot;https://sspai.com/post/95589&quot;&gt;《AI 輔助編程，真的那麼不靠譜嗎？》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;YTu &lt;/strong&gt;(+22) 作為一個 0 基礎的小白，愣是靠著 ChatGPT 寫了一個 Scriptable 腳本，解決了我一個心念已久的功能：一個財聯社 RSS 閲讀器。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;ZephyrZ &lt;/strong&gt;(+5) 哈哈哈哈哈，「古法手作」看笑了，那還的凸顯一個匠人精神，出了 BUG 那必須鞠躬道歉。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;玉樹芝蘭 &lt;/strong&gt;(+1) 這份 Super 黃編寫的《AI 編程藍皮書》文檔挺有趣，適合入門上手，推薦大家閲讀。&lt;a href=&quot;https://superhuang.feishu.cn/wiki/CBBPwvgEuicVhFkx0s7cPmhpn4e?__readwiseLocation=&quot;&gt;https://superhuang.feishu.cn/wiki/CBBPwvgEuicVhFkx0s7cPmhpn4e?__readwiseLocation=&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;來自文章&lt;a href=&quot;https://sspai.com/post/95681&quot;&gt;《尋微致新：少數派的 2024 年度最佳好物》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;kergee &lt;/strong&gt;(+8) 所以是不是出個小丑牌的文章？&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;衞書有道 &lt;/strong&gt;(+3) 頁面效果不錯，要是每個產品的介紹再多點就好了。或者直接附上少數派社區內相關的文章更好。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;zzsqwq &lt;/strong&gt;(+2) 很讚的頁面效果，和 Apple 成績單一樣都是一種新的嘗試 &#128077;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;來自文章&lt;a href=&quot;https://sspai.com/post/95529&quot;&gt;《人人都可以上手的 Android TV 改造指南，讓你也能開機就能看到節目》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Vincent_Asobi &lt;/strong&gt;(+22) 感覺作者還是比較生疏，文章那麼長，不如這些方案&lt;/p&gt;&lt;ul&gt;&lt;li&gt;電視桌面：Projectivy Launcher（可開箱可定製）&lt;/li&gt;&lt;li&gt;文件管理：Mixplorer（可文件管理可安裝可傳輸）&lt;/li&gt;&lt;li&gt;ADB 工具：ADBToolbox（禁用自帶程序和桌面）&lt;/li&gt;&lt;li&gt;附加安裝工具：Apkmirror 安裝工具（用來安裝 apkmirror 上的 APKM）&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;去夢老婆 &lt;/strong&gt;(+3) Pro 系列沒有開機廣告，小米太真實了。&#128514;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;來自文章&lt;a href=&quot;https://sspai.com/post/95200&quot;&gt;《up 主們在用「蘋果字體」時用對了嗎？》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;來個板燒雞腿堡 &lt;/strong&gt;(+11) 作者做了很仔細的觀察，點贊。一點建議是可以在總結處，給讀者更簡單直接的結論。&lt;/p&gt;&lt;p&gt;正確使用蘋果字體：在蘋果電腦裡直接選擇 SF Pro 作為默認字體。&lt;/p&gt;&lt;p&gt;ps: 如果是給小公司用作商用場景，用蘋方也要小心版權問題，雖然蘋果不像某公司那麼愛追溯，但理論上還是不被允許的。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;鼓手高 &lt;/strong&gt;(+6) 上海城建真該需要你來拯救，地鐵站牌和路牌的字體簡直是地獄&#128557;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;&#128210;社區摘要&lt;/h3&gt;&lt;h2&gt;&#127381;作者的新玩意&lt;/h2&gt;&lt;p&gt;為了讓作者的投稿儘快與廣大讀者見面，我們調整了《新玩意》欄目中作者投稿部分的呈現方式和週期，作者投稿的「新玩意」後續會遷移至本欄目。投稿渠道與獎勵方式仍與以往完全一致，詳情參見文末。我們相信新鮮火熱出爐的分享更能贏得大家的喜愛，也歡迎廣大讀者朋友們踴躍投稿。&lt;/p&gt;&lt;h3&gt;@車不能快：老蛙 FFⅡ 90mmF2.8 鏡頭&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;入手渠道：海鮮市場&lt;/li&gt;&lt;li&gt;參考價格：3280 二手 2000 左右&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自今年 618 購入松下 S5M2 之後，我一直在思考該添置什麼鏡頭好。但無奈的是，馬來松聯盟的 L 卡口生態仍舊是畫大餅狀態，表面上松下有數碼機技術、適馬有鏡頭對焦技術、徠卡有光學積累，但現實便是 ——L 卡口可用的全畫幅鏡頭屈指可數。同時，適馬的重量、徠卡的價格也讓人望而卻步。&lt;/p&gt;&lt;p&gt;當時我手上的鏡頭只有套機帶的 50mm f1.8 和 20-60mm f/3.5-5.6，室內拍攝視頻還是夠用的，但在鍵盤照片拍攝方面，這兩顆鏡頭的焦段就有些不合適了，因為鍵盤是一個相對方正的產品，拍攝整體時我希望獲得一些壓縮感，而不是「近大遠小」的透視關係和強烈的衝擊感。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/d0bf78011bf5bbf527f001deaa322e3b.JPG&quot;&gt;&lt;/figure&gt;&lt;p&gt;最後，在和一位鍵盤拍攝頗有經驗的前輩交流之後，我決定購買一顆 70mm 焦段以上的定焦手動鏡頭。一方面手動頭的選擇面比自動頭要豐富，同時價格跨度也寬泛不少，另一方面，定焦頭的結構相對變焦頭要簡單不少，同樣的價格段下更容易擁有更大的光圈和更好的畫質。&lt;/p&gt;&lt;p&gt;而在觀望了諸多適配 L 卡口的中長焦鏡頭之後，我選擇了老蛙 FFⅡ 90mmF2.8 鏡頭。如今國產鏡頭五花八門，價格和參數也都很誘人，但綜合評估下來，我覺得老蛙的產品力是最實在的，尤其是在微距方面，老蛙還有許多「獨門絕技」，而他們在營銷方面也沒有做國內廠家經常乾的大面積推流和矩陣號，也讓我對這個品牌有一種「腳踏實地做產品」的好感。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/86c92ab43949b11ab4c5f204d0fddd41.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;先來聊聊幾個槽點，首先老蛙的鏡頭蓋的鬆緊尺度感覺做的不是很到位，稍微一碰就會開，其次遮光罩的安裝實在是有點難受，總是給我一種異樣的剮蹭感。同時鏡頭重量也不輕，雖然長焦肯定比短焦重，但近乎同焦段之下，老蛙 90（619g）足足比松下 100mm f2.8（298g）重了一倍有餘，而且松下還是帶有電機對焦的自動頭。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/653fd10ef1f9f1bcf14d8d47c1142e6e.JPG&quot;&gt;&lt;/figure&gt;&lt;p&gt;不過這些問題在這個價格和畫質表現之下瑕不掩瑜，老蛙的畫質表現著實讓我驚喜，憑藉他們自家的 APO 復消色差技術，暗角、畸變、眩光、色散的控制都很不錯。當然，我確實沒用過什麼好鏡頭，但就拍鍵盤而言，我覺得這個素質已經非常夠用了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/3f845e8d8df6cf2a8d7a8549eb7685b4.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;在購入老蛙 90mm 之後，我幾乎所有的鍵盤照片都由這顆鏡頭效勞，畢竟除開 90mm 的焦段，它還是一顆最大 2 倍放大倍率的微距鏡頭，有著極近的對焦距離，可以用來拍攝很多鍵盤的做工細節，雖然用來拍這個確實有點大材小用了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/1254175aa13b6094c48875aea1a0123d.JPG&quot;&gt;&lt;/figure&gt;&lt;p&gt;關於攝影，我能聊的真的不多，畢竟我開始玩才相機半年不到，盡拍攝的次數和題材也相對有限，但攝影帶給我的寧靜感卻讓我在繁忙的生活中找到了難得的片刻喘息，也希望各位能用攝影的方式發現生活中美好。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/d1d0a504e54cada688123ca68e94d7be.JPG&quot;&gt;&lt;/figure&gt;&lt;h3&gt;@夜行列車長：MUJI 斷貨王擦鏡紙&lt;/h3&gt;&lt;p&gt;目前市面上廣泛可見的擦鏡紙多含有酒精或其他清潔劑成分，旨在實現快速乾燥與除菌效果。然而，鑑於多數眼鏡鏡片均附有鍍膜，長期使用含酒精的擦鏡紙擦拭，極易導致鍍膜受損脫落。&lt;/p&gt;&lt;p&gt;在更換上一副眼鏡前，我一直使用配鏡時附帶的擦鏡布以及酒精片來清潔鏡片。結果發現，鏡片鍍膜已略顯斑駁，並伴有多處劃痕。回顧日常擦拭習慣，這些損傷大多源於反覆使用的擦鏡布中夾雜的微小塵粒對鏡片的摩擦，以及酒精棉片中酒精成分對鍍層的侵蝕，共同加速了鏡面鍍膜的脫落。&lt;/p&gt;&lt;figure class=&quot;ss-imgRows&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/caca1f1766edb248e01058b60c5de3c2.JPG&quot; alt&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/ca456e2f445e45e20668890d4284c1e8.JPG&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;在網上衝浪的時候看到不少人推薦 MUJI 的擦鏡紙，於是便在庫存緊張的京東平台上不斷刷新，終於成功搶購到兩包回來試用。若論 MUJI 中性價比高且不踩雷的產品，我個人認為這款擦鏡紙絕對可以入選。作為門店中最實惠的商品之一，擦鏡紙的材質為「丙烯酸無紡布」，每包內有 14 張，長 15 ✖️ 13 cm 的尺寸（約一台 iPhone 11 Pro ）。這個尺寸無論是擦拭眼鏡還是顯示屏都恰到好處，不會顯得太小。而且，擦鏡紙可以多次循環使用，&lt;strong&gt; 切記在使用前抖動去除浮塵，就能有效避免細微塵粒劃傷鏡片。&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/9223571afefd57edd6e87be1680b32d6.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;在使用了擦鏡紙後，還是能很明顯的看出差別。擦拭前，鏡片上的指紋、灰塵彷彿給視野蒙上了一層薄霧；而擦拭後，鏡面很光潔，前後對比之下，那種清晰透亮的視覺效果讓人倍感舒暢。&lt;/p&gt;&lt;p&gt;使用過程中也無需大力擦拭，只需要擦拭兩三次即可將鏡面上的大面積汙漬擦掉，而且還是在沒有使用任何清潔劑的情況下。既省時間又能減少對鏡片的磨損，也是蠻高效溫和的清潔方式。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/cda3697cff56261259084510e2d1d99b.JPG&quot;&gt;&lt;figcaption&gt;&#128072;&#127995;左邊：使用後；                           右邊&#128073;&#127995;：使用前&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不過也有人説這款擦鏡紙有平替 —— 實驗室擦拭紙，具體感興趣的朋友可以去某寶搜索一下，是否有一樣的效果這個還需要等買來對比之後才知道。但從 MUJI 的這款產品目前的表現來看，清潔力、便攜性和性價比都是不錯的。平常不習慣攜帶擦鏡布的朋友可以揣一包放兜裡，需要用的時候隨時取用，放一張的話很有可能當紙巾給扔掉。現在我都是車裡、辦公室、家裡各放一張，需要用的時候都是隨取隨用。&lt;/p&gt;&lt;h2&gt;&#128172;一派熱議&lt;/h2&gt;&lt;p&gt;在上期第 194 期一派投票《&lt;a href=&quot;https://sspai.com/bullet/1736744010&quot;&gt;你的旅途遊戲清單準備好了嗎？ &lt;/a&gt;》中，共有 202 名派友熱情參與，十分感謝！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Gurri &lt;/strong&gt;(+19) 買了開源掌機 35xxsp，最近在補銀河戰士系列。已經通了融合，在玩零點任務。不得不説體驗和手機插個手柄真的是兩種體驗，翻開即玩，小巧的機身都非常契合那個時代的掌機體驗。這個時代唯一可以揣褲兜的掌機只剩下手機了，然而手機遊戲在我們這些老 ass 看來根本沒法稱之為遊戲（純個人感受，如有冒犯請見諒）。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/avatar/ecd8244f99aac3be0891e22076898c0d.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;落雪小凝 &lt;/strong&gt;(+8) 最近沉迷燕雲十六州，當做純粹的單機遊戲，探索的挺開心。&lt;/p&gt;&lt;p&gt;旅途中，上飛機前，會提前登錄一下月圓之夜，打開單機模式，然後切後台。進入飛行模式之後，就可以繼續刷全圖鑑成就啦&lt;/p&gt;&lt;p&gt;&lt;strong&gt;少數派 18510599 &lt;/strong&gt;(+7) 在手機上裝了 GBA 模擬器，希望能在高鐵上打打逆轉裁判 123。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/15/avatar/de8156278b0ed62975eeb3e848323192.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;阿利安卓 &lt;/strong&gt;(+5) 只有 Steamdeck，玩玩土豆兄弟和小丑牌還還是不錯的&lt;/p&gt;&lt;p&gt;手機遊戲嘛，F-droid 上有不少開源好玩的小遊戲，比如 Vector Pinball&lt;/p&gt;&lt;p&gt;&lt;strong&gt;hAPPydOg &lt;/strong&gt;(+3) Delta + 寶可夢水晶，開了 GS 球&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/14/4f8bcd2fae36de0e2e8b30221292de88.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;HZ_Studio &lt;/strong&gt;(+2) Kingdom Rush&lt;/p&gt;&lt;p&gt;&lt;strong&gt;jojo12 &lt;/strong&gt;(+2) 星露穀物語希望把全成就做完。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;zixr365 &lt;/strong&gt;(+2) 最近為了備戰怪獵：荒野，在玩怪獵：世界。不得不説，怪物獵人是真的好玩啊，世界的畫面啥的，也挺好的，並不會顯得過於古舊。打完世界剛好續上荒野。&lt;/p&gt;&lt;p&gt;ps 上剛打完了最後生還者一代重置版，確實很好玩。二代遲遲不進會員庫，另外聽説有覺醒元素，一直在猶豫和等待，實在不想給 zzzq 投錢。&lt;/p&gt;&lt;p&gt;因為打過了最後生還者，感覺對這類喪屍題材的遊戲抗力有了一點點提高，所以考慮打生化危機了，之前一直是想玩不敢玩的。聽説 4 代已經不算恐怖遊戲而算射擊遊戲了，所以在 steam 上買了個豪華版開玩。確實不算很恐怖，開個簡單難度，玩得也挺開心的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;憶夢非諸侯 &lt;/strong&gt;(+2) 歧路旅人 1+2，最近迷上了這種回合制遊戲，從之前的 p5R 到星之海，這種回合制遊戲可太適合 switch 了&lt;/p&gt;&lt;p&gt;&lt;strong&gt;JimLu &lt;/strong&gt;(+1) 突發奇想把 wiiu 又拿了出來，發現老任服務器都關了，更新系統聯 pretendo 折騰老半天，終於玩上了噴射戰士 1 代，還是那個原汁原味的感覺。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/4bd006ae5884054582e8289ccd2b8a28.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Yorkson &lt;/strong&gt;(+1) 在 iPad mini 上裝了 Delta 和 PPSSPP，發現能模擬 PSP 後可以打 GalGame 了，十幾個小時的火車有事兒可做了，另外還買了個三十塊的 shanwan 小手柄，單手按按 AB 比點屏幕方便。雖然有 Delta，還是把 3DS 翻出來，準備打幾個 GBA 遊戲玩玩，比搓屏幕手感好不少。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/0d532c812546f81d514324cae6eca985.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;JuniperPhoton &lt;/strong&gt;(+1) 繼續推薦歧路旅人 2，即便是 Switch 上玩也很棒。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;kendentline &lt;/strong&gt;(+1) 川渝牛馬錶示，隧洞太多了，很難找到連續的信號打遊戲，有時候甚至聽個歌都是奢侈……&lt;/p&gt;&lt;p&gt;&lt;strong&gt;蟬心 &lt;/strong&gt;(+1) 看起來派裡玩絕區零的不少，我也喜歡。&lt;/p&gt;&lt;p&gt;NS 推薦，聖獸之王、十三機兵防衞圈、雪居之地、蒸汽世界，大劫掠 1 / 塞爾達，智慧的再現&lt;/p&gt;&lt;p&gt;Win/SD 推薦，漫威爭鋒，以及過幾天上的，三國無雙，起源&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Leobai &lt;/strong&gt;(+0) 純旅途中的手遊來説是 P5X 和殺戮尖塔。因為出行大多數情況下是一個小時多點的高鐵，因此可以趁機刷刷日常本開一局尖塔。P5X 的主線劇情雖然是亮點，但還是更適合長時間打。&lt;/p&gt;&lt;p&gt;如果是正經玩的話，quest 平台的 demeo 生化 4 和蝙蝠俠阿卡姆之影都很不錯，demeo 是經典下棋跑團，玩不明白但是很上癮，生化 4vr 很經典，蝙蝠俠是很不錯的八向打拳模擬器，流程爽快。&lt;/p&gt;&lt;p&gt;ps 平台個人比較喜歡浪人崛起，把跑圖做的很順暢，非常順滑的進入了忍者組的打人流程。機器人驚喜感很不錯，但有些背板關卡對於我這種操作就會很吃力需要兄弟幫忙代打一部分。&lt;/p&gt;&lt;p&gt;pc 平台或者全平台很喜歡暗喻幻想，首先拋開後半流程劇情全部加速趕工的問題，以及能夠接受腦死跑圖毫無創意的迷宮部分，就公路片形式，劇情沒有雷點甚至有點讓人滿足，以及美術音樂來説可以推一下，你很難不喜歡開最低難度然後控制自己操作速度爭取在音樂達到下一個小高潮切進下一個副歌前打死小怪這種操作，真的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;黃小豬 &lt;/strong&gt;(+0) Arcade 裡的 Sasquatch 兩年前初見的時候點開了一下以為就是個大腳怪整蠱露營者的惡作劇遊戲，但是常年霸榜讓我一直不太理解，後來突然發現除了在營地惡搞以外還有很廣闊的天空可以翱翔，最近一星期都在沉迷。整體畫風很卡通，感覺是小朋友也能玩的遊戲，但是對於一個將將三十歲的大人來説也很上頭，推薦給有 Arcade 訂閲的各位～（有點像肝臟友好版的星露谷）然後還下載了朋友們口中的年度遊戲小丑牌，不過平時不怎麼愛打撲克，打算路上玩膩了 Sasquatch 之後來開拓一下新世界。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;江月何年初照人 &lt;/strong&gt;(+0) 以前在旅途中喜歡玩手機單機遊戲，&lt;/p&gt;&lt;p&gt;小時候最早喜歡玩日本開羅遊戲，一款遊戲能玩一個寒假，懷念在摩托羅拉上喜歡忍者村&lt;/p&gt;&lt;p&gt;之後玩得比較雜，迷你地下城 2，鐵鏽戰爭，移植的守墓人，崩潰大陸，以及當時的很多漢化遊戲，比如手談漢化組的 solar2，太陽系戰爭等，現在也會去找一些這樣的遊戲合集&lt;/p&gt;&lt;p&gt;Mindustry（像素工廠）是唯一一個玩到現在還在保留的遊戲，可以在飛機上玩，比較有趣&lt;/p&gt;&lt;p&gt;&#128226;：下一期的一派討論是數碼圈日經話題《&lt;a href=&quot;https://sspai.com/bullet/1737450027&quot;&gt;2024 踩過的數碼產品「坑」有哪些？ &lt;/a&gt;》，歡迎來聊。&lt;/p&gt;&lt;h2&gt;&#127183;互動環節&lt;/h2&gt;&lt;p&gt;會員社區改版的喜悅也希望能夠分享給派友，《社區速遞》新增互動環節：我們將從會員社區的問答討論中，匿名精選出一些有趣的話題，放在每期《社區速遞》的末尾，作為我們分享與討論的「話題池」。如果你對以下&lt;strong&gt;任一話題&lt;/strong&gt;有獨到的見解或經驗分享，歡迎在評論區留下你的精彩回答，可重複評論參與。我們將認真閲讀每一條評論，對於回答優秀且詳盡的朋友，送上一份少數派會員社區體驗月卡。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;本期話題池：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;你用 Android 機還會 root 嗎？&lt;/li&gt;&lt;li&gt;如何管理 B 站的關注？&lt;/li&gt;&lt;li&gt;2025 蘋果外接顯示器求推薦？&lt;/li&gt;&lt;li&gt;求推薦的低因咖啡豆？&lt;/li&gt;&lt;li&gt;照片的存儲方案？&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;如果你也想分享「新玩意」&#128265;：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;獲取 Matrix 社區寫作權限並簽署 &lt;a href=&quot;https://sspai.com/post/72089&quot;&gt;Matrix 共創計劃&lt;/a&gt;；&lt;/li&gt;&lt;li&gt;在少數派獨家發佈一篇文章，在標題中標註「新玩意」前綴；&lt;/li&gt;&lt;li&gt;用至少 800 字介紹產品，並配上 2-3 張產品的實拍圖片；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在網站個人信息中補充支付寶賬號。&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;成功入選本欄目還可以得到 108 元的「剁手紅包」&#129511;。如果你有興趣參與，就趕緊來稿吧！&lt;/p&gt;&lt;p&gt;&gt; 下載少數派 &lt;a href=&quot;https://sspai.com/page/client&quot;&gt;客戶端&lt;/a&gt;、關注 &lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少數派公眾號&lt;/a&gt;，瞭解更多的新玩意 &#127378;&lt;/p&gt;&lt;p&gt;&gt; 特惠、好用的硬件產品，盡在 &lt;a href=&quot;https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc&quot;&gt;少數派 sspai 官方店鋪 &lt;/a&gt;&#128722;&lt;/p&gt;&lt;/div&gt;</description>
            <author>Matrix 機器人</author>
            <pubDate>Tue, 21 Jan 2025 18:37:36 +0800</pubDate>
        </item>
        <item>
            <title>於單調中別有洞天：等寬字體選擇指南</title>
            <link>https://sspai.com/prime/story/monospaced-fonts</link>
            <description>&lt;div&gt;&lt;p class=&quot;prime__story__summary&quot;&gt; 為自己選擇高質量、合口味的等寬字體，是一種有趣的審美實踐，也能讓寫作、編程環境受益於更悅目和整潔的外觀。 &lt;/p&gt;&lt;article class=&quot;wangEditor-txt prime__story__body&quot;&gt;
&lt;p&gt;如果讓你在紙上寫一個單詞 &lt;code&gt;Hi&lt;/code&gt;，你肯定不會把兩個字母寫成一樣寬。的確，在正常手寫時，字母根據形態、筆畫和大小寫，自然地會被寫成不同寬度。換到數字環境中，我們見到的西文字體也大多如此。這種字體稱為「比例字體」（proportional fonts），也是我們在日常使用中最多見到的。&lt;/p&gt;
&lt;p&gt;但回想一下機械打字機和早期電腦，它們打出的字母卻是個個一樣寬的；這主要是因為技術上的限制。&lt;/p&gt;
&lt;p&gt;在打字機中，每個按鍵所連接的字模在按鍵時敲擊浸有墨水的絲帶，在紙上留下字跡。由於字模都是一樣寬的，純機械機構又不能動態調整字距，只有將字母也做成等寬，才能維持版式的均勻。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/dc5f8528687153188aa83ebce544ef47.gif&quot;&gt; &lt;figcaption&gt;打字機打出的等寬字體&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;而在早期終端和電腦中，由於屏幕不夠精細，芯片也缺少圖形顯示能力，畫面只能被分成數量有限的網格，每個網格固定顯示一個字符。這也把文字「框」成了一樣尺寸。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/383cc3c030af258cc243d796d53fa73f.jpeg&quot;&gt; &lt;figcaption&gt;終端機 VT100 上的等寬字體&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;來到現代，這些技術限制不復存在，但等寬字體（monospaced fonts）卻作為一種風格延續下來，憑藉其天然的網格對齊特徵，在許多場合繼續發揮重要作用。在終端環境中，等寬字體不僅用來顯示內容，也承擔了「繪製」界面的功能；藉助 &lt;a href=&quot;https://en.wikipedia.org/wiki/Ncurses&quot;&gt;ncurses&lt;/a&gt; 等庫的幫助，用純文本也能做出功能豐富、版式美觀的 TUI（文本界面）軟件。在代碼編輯器中，等寬字體與空格、縮進等格式結合，加強了整潔感和可讀性；易於區分的設計也讓形近字符更容易區分，讓錯誤更容易發現。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/6df01663967cdae05627b33e38cfbd00.png&quot;&gt; &lt;figcaption&gt;sc-im 這樣的 TUI 軟件依賴於等寬字體&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;等寬字體的應用也不限於技術場景。許多 Markdown 寫作工具都選擇等寬字體作為默認字體，既是對打字機傳統的致意，也是因為等寬字體能賦予版式一種特殊的簡約肌理，營造出讓不少人覺得更平靜、專注的寫作環境。英文劇本創作中，用 12 號的等寬字體 Courier 是行業慣例，因為經驗上這樣寫出的劇本一頁正好需要一分鐘來演出，方便估算時間。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/d80757636311c4154ca22ede42805a6d.jpg&quot;&gt; &lt;figcaption&gt;Markdown 寫作軟件 iA Writer 的早期版本，使用等寬字體 Nitti&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;好的等寬字體是如何煉成的&lt;/h2&gt;
&lt;p&gt;等寬並不意味著均一和乏味。在看似粗礪的外觀背後，等寬字體的設計是豐富多變、充滿細節的；做好一款等寬字體需要的努力，並不亞於任何抓眼的標題字體或優雅的正文字體。&lt;/p&gt;
&lt;p&gt;那麼，如何辨別和選擇出好的等寬字體呢？我們可以從美觀性和實用性兩個角度考慮：好的等寬字體應該具有考究的設計細節，以及能滿足使用場景的豐富功能。此外，中文用戶可能還需關注字體對中文字符的兼容性。以下分別介紹。&lt;/p&gt;
&lt;h3&gt;設計細節&lt;/h3&gt;
&lt;p&gt;等寬字體一個特別重要的品質就是「不容易看岔」。因此，幾乎所有等寬字體都會關注易混淆字符的設計，特別是數字 &lt;code&gt;1&lt;/code&gt; / 小寫字母 &lt;code&gt;i&lt;/code&gt; / 小寫字母 &lt;code&gt;l&lt;/code&gt; / 大寫字母 &lt;code&gt;I&lt;/code&gt;，以及小寫字母 &lt;code&gt;o&lt;/code&gt;/ 數字 &lt;code&gt;0&lt;/code&gt; 這兩組。&lt;/p&gt;
&lt;p&gt;至於具體如何區分，不同字體的處理方式不同，但一般是在小寫字母 &lt;code&gt;i&lt;/code&gt; 和，小寫字母 &lt;code&gt;l&lt;/code&gt; 頭部和尾部添加襯線（即筆畫是否「出頭」以及出頭的造型），以及數字 &lt;code&gt;0&lt;/code&gt; 中間添加圓點或斜線。這些設計沒有優劣之分，以自己看著順眼並且能看清楚為準即可。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/983eea79f3555398f8f24e79fcb629a1.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;x 字高（x-height）是另一項重要的設計決策。這是指英文字母「四線格」中間兩條線之間部分的高度，也就是小寫字母 x 的高度，它對字體的風格和特徵影響極大。許多等寬字體會採用偏大的 x 字高，因為這能讓外觀更「飽滿」，更容易在小字號下辨認，而這正是等寬字體的主要使用場景。不過，過大的 x 字高也會讓字體看起來有點「愣」，具體尺度就是個人偏好問題了。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/2a5c4ae1eaaf47fe4ceff1ff25e84bee.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;雖然多數等寬字體都會採用無襯線設計，筆畫粗壯並且末端無裝飾，但這也不是唯一的風格。例如，經典字體 Courier 就採用了粗襯線（slab serif）設計，筆畫終端是向外延伸的圓角；PT Mono、Fira Mono 等較晚近的字體也採用了粗襯線。還有一些更具「創意」的字體直接套用了襯線字體的風格（例如 Xanh Mono），或者走復古像素風（例如 VT323），不過實用性就比較有限了。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/82d9620b36fff5de8cd74b3acf9fd849.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;近年來，還有不少字體會把斜體當作展示個性的空間，為其使用和正體截然不同的風格。這股風潮最初可能是大廠 Hoefler &amp; Co. 出品的 &lt;a href=&quot;https://typography.com/fonts/operator/overview&quot;&gt;Operator Mono&lt;/a&gt; 帶起來的，它的斜體模仿了手寫體的設計，&lt;code&gt;f&lt;/code&gt;、&lt;code&gt;l&lt;/code&gt;、&lt;code&gt;s&lt;/code&gt; 等小寫字母俏皮的起筆成為很多後來者（例如免費的 Victor Mono 和付費的 MonoLisa 等）的模仿對象。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/17a8cf12728d63b23c0a40fb6ead3c34.png&quot;&gt; &lt;figcaption&gt;Operator Mono 的「花式」斜體&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;由於斜體在代碼編輯器中經常被用來自動高亮 &lt;code&gt;class&lt;/code&gt;、&lt;code&gt;public&lt;/code&gt; 等關鍵詞，不少程序員喜歡用這種字體來給枯燥的代碼增添一些活潑感。（當然，正如編程界的任何選擇一樣，嘲諷這種字體的聲音也不少見。）&lt;/p&gt;
&lt;p&gt;此外，既然等寬字體的核心特徵就是字符寬度相同，這個寬度到底定多少自然也很重要。與追求寬度適中的正文字體相比，許多等寬字體會選擇做得稍微偏窄，以便節省空間，在相同尺寸窗口中放下更多代碼。這方面的一個極端莫過於 &lt;a href=&quot;https://typography.com/fonts/operator/overview&quot;&gt;Iosevka&lt;/a&gt;，它將寬度壓縮到 1/2 em，也就是每個字母的寬度只有其高度的一半，用在控制枱輸出等空間有限的地方特別緊湊高效，但拿來碼字就看著有點侷促了。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/107f9a04d269a288b9adb10ad196a8a8.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;還有一類字體試圖從根本上挑戰「等寬」的概念，其代表是 &lt;a href=&quot;https://input.djr.com/&quot;&gt;Input Sans&lt;/a&gt; 和 &lt;a href=&quot;https://ia.net/topics/a-typographic-christmas&quot;&gt;iA Writer Duo/Quattro&lt;/a&gt;。這些字體雖然仍具有等寬字體典型的「無機感」，但放鬆了「每個字一樣寬」的約束，不同字符根據其形態特徵，可能佔據多種不同寬度，例如 &lt;code&gt;W&lt;/code&gt; 偏寬而 &lt;code&gt;i&lt;/code&gt; 偏窄。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/3ffe23d47f62aa5aaa855276b89e6165.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;但這樣「不倫不類」的字體還能勝任等寬字體的用途嗎？Input Sans 的作者&lt;a href=&quot;https://input.djr.com/info/&quot;&gt;提出&lt;/a&gt;了一些有趣的主張。在他看來，在編程中，最需要對齊的是行首縮進，而這無論如何不受等寬與否的影響。同時，不等寬的設計反而有助於發現錯誤，例如你在一連串 &lt;code&gt;&lt;span&gt;&lt;/code&gt; 中手滑把其中一個標籤打成了 &lt;code&gt;&lt;spam&gt;&lt;/code&gt;，由此產生的不對齊將是非常顯眼的。當然，如果你是用來寫文章，就更不用在意嚴格對齊了，可變寬度反而會讓排版看起來更和諧舒適。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/e3a5d53f7bad787ca11a8a66c9022603.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;正是因為字符設計上存在這麼多眾口難調的因素，許多較新的字體會通過提供字體家族、可變字體等方式來滿足多樣化需求。例如，Iosevka 在標準版之外還提供了寬度更舒展的 Extended 版本；&lt;a href=&quot;https://www.recursive.design/&quot;&gt;Recursive&lt;/a&gt; 在一個可變字體裡包含了從等寬到變寬、從規整到「奔放」等多種風格；等等。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/34bad1d9809abab3af6e7e6594066d1f.png&quot;&gt; &lt;figcaption&gt;Recursive 在一個可變字體裡包含多種風格&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;額外功能&lt;/h3&gt;
&lt;p&gt;合字（ligatures）可能是當代等寬字體最能玩出花樣的地方。所謂合字，是指為特定字符的組合製作一個專門造型。傳統上，這一般用來為一些存在筆畫勾連的字母組合（例如 &lt;code&gt;fi&lt;/code&gt;、&lt;code&gt;ff&lt;/code&gt;、&lt;code&gt;Th&lt;/code&gt; 等）做特殊設計，使之看起來更自然和協調。&lt;/p&gt;&lt;/article&gt;&lt;/div&gt;</description>
            <author>PlatyHsu</author>
            <pubDate>Tue, 21 Jan 2025 17:25:44 +0800</pubDate>
        </item>
        <item>
            <title>中文播客為什麼偏愛「四字名」？</title>
            <link>https://sspai.com/post/95618</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://science.caixin.com/2025-01-06/102276027.html&quot;&gt;財新最近發了篇報道&lt;/a&gt;，講腦機接口解碼漢語，其中有一段：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;此次突破的漢語言解碼，就面臨獨特的挑戰——漢語作為一種全球現使用的唯一表意語言，&lt;strong&gt;以單音節為主&lt;/strong&gt;，同時具有聲調語言和圖形語言的特徵......&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;這裡有幾點值得商榷，尤其是「以單音節為主」這個説法並不準確。恰好，理解漢語的真實語音特點，能幫我們解答一個困擾播客圈很久的現象——&lt;strong&gt;為什麼中文播客偏愛四字名？&lt;/strong&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;漢語真的「以單音節為主」嗎？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;從書面文字來看，漢語好像真的「以單音節為主」。這種印象主要來自我們對漢字的視覺感受：每個方塊字看起來都像是一個獨立單元，並且具有明顯的單音節特性，同時還代表一個語素（最小意義單位），如「好」字，讀音是 hǎo，意思是積極的。&lt;/p&gt;&lt;p&gt;但這種文字視覺有很大的欺騙性，語言是看人們怎麼説出來，説再決定了寫。我們在説話時，其實更偏愛雙音節詞，有學者做過專門統計：現代漢語常用詞和規範詞中，二字詞（雙音節）佔比均超過 60%，遠超一字詞（單音節）。這一特點在日常交談中也常見，像「播客」「上班」「出軌」這樣的雙音節詞最為常用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/15/article/59e5c13b44a4020bc7f525f98212f258.png&quot;&gt;&lt;figcaption&gt;蘇新春統計了《現代漢語詞頻詞典》與《現代漢語詞典》現代漢語常用詞和規範詞二字詞頻率，基本可以反映現代漢語以雙音節為主的特點。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;為何漢語會以雙音節為主？從歷史演變看，雙音節化能擴充詞彙量，避免同音混淆，這只是現象層面的解釋。我們還得追問：人類自身的發音規律，會給出什麼樣的答案？&lt;/p&gt;&lt;p&gt;答案在漢語的音節特點上：相比英語音節的自然滑動（如 [ai] 是從 [a] 到 [i] 的過程），漢語音節都很短促，單個音節太短，缺少抑揚，&lt;strong&gt;不足以形成穩定的韻律感&lt;/strong&gt;。所以，當我們聽到外國人説中文時，往往會覺得很違和，他們會不自覺地拖長音節，比如把「天」拉長成「梯——安」。&lt;/p&gt;&lt;p&gt;我們也有追求雙音節的傾向，説話時自然地組合音節，像「好吃」「好看」這樣。這種對雙音節的偏愛在口語中表現得更明顯，甚至會把三音節詞吞音快讀成雙音節：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;派出所 =&gt; 派所&lt;/li&gt;&lt;li&gt;公安局 =&gt; 關局&lt;/li&gt;&lt;li&gt;特好吃 =&gt; 套吃&lt;/li&gt;&lt;li&gt;大家好，我是大張偉 =&gt; 大猴兒 / 我 / 襠兒偉&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;理解了這種雙音節特質，我們就能更好地解釋人們偏愛播客四字名的原因。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;為什麼中文播客偏愛四字名？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;小宇宙上線時的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NzU4ODQ2MA==&amp;mid=2676499194&amp;idx=1&amp;sn=784a78866e8623a7f7824e2379870345&amp;scene=21#wechat_redirect&quot;&gt;數據顯示&lt;/a&gt;：平台一百個最熱門的播客中，近 50% 選擇了四字名，這個比例至今仍具參考價值。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/15/article/c4549271fe37b3a71218dff3cde522bc.png&quot;&gt;&lt;figcaption&gt;圖源：《三明治》公眾號&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;要理解這個現象，得從音步説起。音步是語音中的節拍單位，就像音樂中的小節，是人們説話時自然停頓形成的節奏單元。我們前面説到漢語偏愛雙音節，&lt;strong&gt;其實就是説我們習慣用兩個音節作為一個自然的説話單位，即一個音步。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;雙音節名雖然符合這種口語習慣，但在競爭激烈的播客市場中，兩個字的信息量往往不夠，難以讓聽眾快速理解節目定位和內容。比如像「機核」這樣的成功案例並不多見。&lt;/p&gt;&lt;p&gt;而四字名，比如「日談公園」「大內密談」「忽左忽右」，恰好由兩個雙音節詞組成，產生了音義融合優勢。每個雙音節讀起來都很自然，前後疊加又帶來更強的節奏感。&lt;/p&gt;&lt;p&gt;同時，如前文所述，人們説話以雙音節詞為主，這使得大多數雙音節詞都能表達相對完整的含義。比如「日談」暗示日常對話，「公園」帶來開放空間感，合在一起就傳達出一種輕鬆又富有公共性的氛圍。&lt;/p&gt;&lt;p&gt;這種音義融合讓四字名既朗朗上口，又能在短短四個字裡承載豐富的節目信息，因此在播客圈獲得了廣泛歡迎。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;三字名：反常規的獨特美感&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在四字名佔主導的播客圈裡，也有一些節目選擇了三字名，比如「不在場」「山有虎」。三音節在漢語中比較特殊，讀起來不那麼順滑自然。這一點從古詩就能看出來——七言詩裡很少用「為他人 / 做嫁衣裳」（3+4）這樣的折句，反而更愛用「孤帆遠影 / 碧空盡」（4+3）這樣先長後短，奇數在後的節奏，因為這樣更符合人們説話習慣。&lt;/p&gt;&lt;p&gt;乍看之下，三字名似乎不合時宜。但也給了創作者反常規的機會。「不 / 在場」以一個堅決的「不」字開頭，讓發音突出、停頓，語義聚焦，讓聽者立刻對後續「在場」產生質疑；「山 / 有虎」採用典型的存現句式，以地點詞起句，一下子在聽者腦海中構建出一個畫面，既有危險的暗示，又帶著向前的意味。&lt;/p&gt;&lt;p&gt;三字名打破了常規的雙音節節奏，卻在這種「不完美」中獲得了獨特的表達力：以反叛姿態給聽眾帶來新鮮感。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;結語&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;有人試圖從成語的角度解釋四字名的流行，認為成語不僅朗朗上口且內涵豐富。但這種解釋更像是用現象解釋現象。畢竟播客是要説給人聽的，其命名更可能源於最基礎的語言規律：&lt;strong&gt;我們與生俱來的發音習慣和語音節奏。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;有趣的是，許多播客創作者在命名時，可能並未刻意考慮這些語言學理論，而是憑直覺選擇了四字名。這種「不約而同」恰恰印證了語音規律的普遍性和根深蒂固。但也別想當然地認為，起個四字名就能做好播客了，畢竟一個播客的成功還取決於更新頻率、內容質量、運氣等諸多因素。&lt;/p&gt;&lt;p&gt;播客作為一種聲音媒介，讓內容迴歸了語言的最初形式。從語音規律的角度來解釋播客的命名現象，我們得以窺見漢語的某些本質特徵。&lt;/p&gt;&lt;p&gt;最後補充一點：財新説漢語是「全球現使用的唯一表意語言」也不準確。日語也有和制漢字（如「峠」，意為山頂、山嶺），也具有表意特徵。而且現代漢語本身就有高比例的形聲字，更應該説是意音文字。&lt;/p&gt;&lt;p&gt;本文首發「&lt;a href=&quot;https://mp.weixin.qq.com/s/OXrClZKvLfqw1wJZLv-H2Q&quot;&gt;言辭之間&lt;/a&gt;」，同步少數派。&lt;/p&gt;&lt;p&gt;&gt; 關注&#160;&lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少數派公眾號&lt;/a&gt;，解鎖全新閲讀體驗 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 實用、好用的&#160;&lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版軟件&lt;/a&gt;，少數派為你呈現 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>王隱</author>
            <pubDate>Tue, 21 Jan 2025 15:33:12 +0800</pubDate>
        </item>
        <item>
            <title>從「原子化」提交到妙用 rebase，一次搞定清爽的 Git 提交記錄</title>
            <link>https://sspai.com/post/95404</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;strong&gt;Matrix 首頁推薦&lt;/strong&gt;&#160;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/matrix&quot;&gt;Matrix&lt;/a&gt;&#160;是少數派的寫作社區，我們主張分享真實的產品體驗，有實用價值的經驗與思考。我們會不定期挑選 Matrix 最優質的文章，展示來自用戶的最真實的體驗和觀點。&#160;&lt;br&gt;文章代表作者個人觀點，少數派僅對標題和排版略作修改。&lt;/p&gt;&lt;p&gt;作為一名軟件開發者，Git 是我離不開的版本管理工具，它可以記錄並追溯開發進程，功能強大，用法靈活多樣。圍繞著它誕生的協作平台 GitHub、Gitee 等也深入人心。&lt;/p&gt;&lt;p&gt;Git 本身就是一門學問，其重要性不亞於軟件開發。在長期的開源軟件開發維護的過程中，我長期與 Git 打交道，對 Git 有了更多的感悟，也探索了一些非常實用的技巧。這些技巧，充分發揮了 Git 本身的特性，極大改善了我使用 Git 管理項目的體驗。&lt;/p&gt;&lt;p&gt;下面，我就來分享讓我受益最深的幾點技巧，希望能給讀者朋友們一些啟發。&lt;/p&gt;&lt;h2&gt;「原子化」提交，一個提交只做一件事&lt;/h2&gt;&lt;p&gt;小時候，老師和長輩或許都告誡我們，在做事情的時候要「一心一意」，不要分散注意力到其他的事情上，這樣做事才會高效、有成果。&lt;/p&gt;&lt;p&gt;一旦沒有遵循「一心一意」的原則，那麼幹正事的時候碰壁就再尋常不過。就拿我本人來説，做正事的時候「摸魚」，狂歡一陣子後再回來，面對還沒有完成的正式任務，我是容易一臉懵的：我做了啥？進度怎麼樣了？我剛剛是怎麼攻關難題的來著？——顯然，這導致了時間和精力的浪費，更不利於事後覆盤和提升。&lt;/p&gt;&lt;p&gt;不單單是做事，在使用 Git 的過程中，做每一個提交時也需要「一心一意」，也就是「原子化」（atomic）——確保每個提交只完成一項任務。&lt;/p&gt;&lt;h3&gt;1）引例&lt;/h3&gt;&lt;p&gt;可能一些開發者在組織 Git 提交時，習慣讓一個提交做多件事情，&lt;strong&gt;把多項各自獨立且不相關聯的功能修改都放在同一個提交裡&lt;/strong&gt;。比如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;一個項目有 A、B、C 三個功能模塊，作者對這三個模塊都做了修改，還順帶在 2025 年來臨之際修改了所有源碼開頭註釋裡版權説明的年份。&lt;/li&gt;&lt;li&gt;一個算法函數有多個各自獨立的部分，作者在一個提交裡就對這幾個部分做了修改。&lt;/li&gt;&lt;li&gt;作者原本在寫 A 函數，但是發現 B、C、D 這幾個函數的註釋需要補充，於是統統做了修改，並放在同一個提交裡。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;這種提交方式看似省事兒，但無疑會給後續的開發工作「埋雷」。&lt;/p&gt;&lt;h3&gt;2）為什麼會「埋雷」？&lt;/h3&gt;&lt;p&gt;根據筆者自己的經驗體會，如果一個提交做了不止一件事情，那麼有可能會在你日後開發的時候，給你帶來一些「麻煩」：&lt;/p&gt;&lt;h4&gt;0x00：難以排錯&lt;/h4&gt;&lt;p&gt;也許在開發過程中，某個提交給項目引入了 Bug。當你好不容易找到了存在問題的提交，但卻發現這個提交做了不止一件事，你還要花費額外的精力來定位造成 Bug 的地方。&lt;/p&gt;&lt;p&gt;而如果你有不止一個提交都沒有做到「一心一意」，那麼你就很難直接瀏覽提交記錄來找到問題所在，你就不得不翻閲一個個提交，浪費成倍的精力。&lt;/p&gt;&lt;h4&gt;0x01：不便覆盤&lt;/h4&gt;&lt;p&gt;很多時候，開發者需要覆盤自己的提交記錄，看看自己做了哪些工作。然而，&lt;strong&gt;假如一個提交做了不止一件事，那麼就不便於覆盤開發過程。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;例如，當你想要回顧某個功能的實現過程，找出實現該功能的提交時，卻發現關鍵的代碼都被混在幾個大的、綜合的提交裡，難以找出。好比是考前複習的時候，你總結的關鍵知識點混在了一堆厚厚的複習資料裡，自然會影響複習效率。&lt;/p&gt;&lt;p&gt;或許有些讀者會選擇詳盡編寫提交説明，通過檢索提交説明來找出自己想要的提交。不過這帶來的好處有限——你後續還是離不開使用 &lt;code&gt;git show&lt;/code&gt;，在一長串「包羅萬象」的 diff 記錄中，找到真正想找的修改記錄。&lt;/p&gt;&lt;h3&gt;2）「原子化」提交&lt;/h3&gt;&lt;p&gt;踐行「原子化」提交的理念，以上的麻煩將不復存在。&lt;/p&gt;&lt;p&gt;C++ 從 C++11 標準開始，引入了「原子操作」（atomic）特性，可以確保一個變量在同一時間只有一個操作者在讀寫，從而防止多線程搶佔造成衝突。我借鑑了「原子操作」的理念，提出了「原子化」提交——也就是確保每個提交只完成一個任務，從而改進提交記錄的組織方式，防止潛在的雜亂和衝突。&lt;/p&gt;&lt;p&gt;原子化提交最大的優勢，在於&lt;strong&gt;提交記錄簡潔、可追溯、易於查錯&lt;/strong&gt;：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用 &lt;code&gt;git log&lt;/code&gt; 瀏覽提交記錄時，你的開發進程一目瞭然，可以精確到每個提交實現的功能、修復的 Bug，等等，十分利於覆盤。&lt;/li&gt;&lt;li&gt;一旦某個提交出現問題，你可以快速瀏覽提交記錄，短時間內找到可能存在問題的提交。然後，你就可以通過 &lt;code&gt;git checkout &lt;疑似有問題提交的前一個提交&gt;&lt;/code&gt;，暫時回到應用該提交前的狀態，來排查故障。&lt;/li&gt;&lt;li&gt;在實現一個新功能、修復一個 Bug 的時候，你可以先瀏覽提交記錄，快速判定之前是否有做了相關工作，從而避免「無用功」。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;3）實踐「原子化」提交&lt;/h3&gt;&lt;p&gt;下面，我就以幾個在實際開發場景中的例子，來演示「原子化」提交的操作。&lt;/p&gt;&lt;h4&gt;實例一：修復 Bug 的「原子化」提交&lt;/h4&gt;&lt;p&gt;假設你正在開發一個電商平台的項目，最近有用戶反饋在使用優惠券時，無法正確抵扣金額。經過排查，你發現是優惠券計算邏輯中的一個 Bug。你修復了這個 Bug，並且為了提高代碼的可讀性，對相關代碼進行了重構，將一些冗長的函數拆分成了更小的函數。&lt;/p&gt;&lt;p&gt;如果你遵循「原子化」提交的原則，你可以將這個過程分為兩個提交：&lt;/p&gt;&lt;figure class=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;提交序號&lt;/th&gt;&lt;th&gt;提交信息（commit message）&lt;/th&gt;&lt;th&gt;提交內容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1：專門修復 Bug&lt;/td&gt;&lt;td&gt;&lt;code&gt;Fix discount calculation bug in coupon system&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你只修改了計算優惠券金額的代碼，確保 Bug 被修復。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2：進行代碼重構&lt;/td&gt;&lt;td&gt;&lt;code&gt;Refactor coupon calculation code for better readability&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你對代碼進行了拆分和重構，但不涉及任何 Bug 修復的邏輯。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;這樣做的好處是，&lt;strong&gt;如果後續發現修復 Bug 的代碼引入了新的問題，你可以很容易地通過 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 找到第一個提交，然後使用 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;git checkout&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 檢出到修復 Bug 之前的版本&lt;/strong&gt;，快速定位問題。同時，代碼重構的提交也不會干擾到 Bug 修復的提交，使得提交記錄清晰明瞭。&lt;/p&gt;&lt;h4&gt;實例二：新功能開發的「原子化」提交&lt;/h4&gt;&lt;p&gt;假設你正在開發一個在線教育平台，需要添加一個新的功能：允許用戶上傳視頻作業。這個功能涉及到多個方面的開發，包括前端頁面的設計、後端接口的編寫以及數據庫表結構的調整。&lt;/p&gt;&lt;p&gt;如果你遵循「原子化」提交的原則，你可以將這個功能的開發過程分為多個提交：&lt;/p&gt;&lt;figure class=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;提交序號&lt;/th&gt;&lt;th&gt;提交信息（commit message）&lt;/th&gt;&lt;th&gt;提交內容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1：專注於前端頁面設計&lt;/td&gt;&lt;td&gt;&lt;code&gt;Design video assignment upload page&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你創建了新的 HTML 文件和 CSS 樣式，實現了頁面的基本佈局和樣式。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2：編寫後端接口&lt;/td&gt;&lt;td&gt;&lt;code&gt;Implement backend API for video assignment upload&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你創建了新的 API，實現了視頻文件的接收和存儲邏輯。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3：調整數據庫表結構&lt;/td&gt;&lt;td&gt;&lt;code&gt;Add database table for video assignments&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你創建了新的數據庫表，用於存儲視頻作業的相關信息，如用戶 ID、作業 ID、視頻文件路徑等。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通過這樣的「原子化」提交，你可以清晰地記錄每個功能模塊的開發進度，便於後續的覆盤和維護。如果某個模塊出現問題，你可以快速定位到相應的提交，進行針對性的排查和修復，而不會被其他模塊的代碼幹擾。&lt;/p&gt;&lt;h4&gt;實例三：性能優化的原子提交&lt;/h4&gt;&lt;p&gt;假設你正在開發一款合成器軟音源插件，最近發現插件佔用處理器資源過高，影響用戶體驗。經過分析，你發現是由於合成器的振盪器、濾波器算法優化不當，且編譯參數存在問題，拖累性能。為了優化性能，你需要調整合成器算法，並修改編譯系統的編譯參數。&lt;/p&gt;&lt;p&gt;如果你遵循「原子化」提交的原則，你可以將這個優化過程分為多個提交：&lt;/p&gt;&lt;figure class=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;提交序號&lt;/th&gt;&lt;th&gt;提交信息（commit message）&lt;/th&gt;&lt;th&gt;提交內容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1：優化振盪器算法&lt;/td&gt;&lt;td&gt;&lt;code&gt;Optimize oscillator with SIMD&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你使用 SIMD 指令來改善振盪器的性能。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2：優化濾波器算法&lt;/td&gt;&lt;td&gt;&lt;code&gt;Optimize filter with SIMD&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你同樣使用了 SIMD 指令，來提升濾波器的工作效率。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3：優化編譯系統的編譯參數設置&lt;/td&gt;&lt;td&gt;&lt;code&gt;Enable compiler optimization&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在這個提交中，你為編譯系統添加了編譯器優化參數，使編譯器充分優化代碼性能。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通過這樣的原子化提交，你可以清晰地記錄每個優化措施的實施過程，便於後續的評估和維護。如果某個優化措施帶來了新的問題，你可以快速定位到相應的提交，進行針對性的排查和修復，而不會被其他優化措施的代碼幹擾。&lt;/p&gt;&lt;h3&gt;4）原子化提交的潛在優勢&lt;/h3&gt;&lt;p&gt;值得一提的是，原子化提交除了有利於你自己的代碼管理，還能起到「利他」的作用。&lt;/p&gt;&lt;p&gt;在 GitHub 等開源社區中，原子化提交可以方便其他開發者瀏覽你的提交記錄和開發進程，使你的開源成果更好惠及他人。井井有條的提交記錄，還可以給他人留下好印象，彰顯你的專業水準。&lt;/p&gt;&lt;p&gt;另一方面，像 Linux 這樣的大型項目，每個提交也都是原子化的，並且更加規範，這大大方便了二次開發時對新特性的反向移植工作。&lt;/p&gt;&lt;p&gt;我自己也在做 Android 內核的適配，曾經將新版本內核的特性反向移植到華為 P6 的 3.0.6 內核中。開發過程中，我會從新版本內核的提交日誌中找到與某個特性有關的補丁，然後將其應用到當前內核中，幾乎是一找一個準，節省了在海量代碼中「找重點」的精力。&lt;/p&gt;&lt;p&gt;可見，原子化提交利己利人，具有非常顯著的潛在優勢，受益不只一點點。&lt;/p&gt;&lt;h2&gt;善用 &lt;code&gt;git rebase&lt;/code&gt;，合併細碎提交&lt;/h2&gt;&lt;p&gt;記得大概是 2018 年，我在刷知乎的時候見到一個提問：&lt;a href=&quot;https://www.zhihu.com/question/61283395&quot;&gt;&lt;i&gt;《Git commits 歷史是如何做到如此清爽的？》&lt;/i&gt;&lt;/a&gt;，提問者非常驚訝於知名前端框架 Vue.js 源碼庫提交記錄的乾淨、清爽。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/08/0f2275f4985a9701132c5d73248e46fb.png&quot;&gt;&lt;figcaption&gt;&lt;a href=&quot;https://github.com/vuejs/core/commits/main/&quot;&gt;Vue.js core 組件提交記錄&lt;/a&gt;的一部分。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;就在這個問題下，作者尤雨溪（Evan You）&lt;a href=&quot;Git commits 歷史是如何做到如此清爽的？ - 尤雨溪的回答 - 知乎 https://www.zhihu.com/question/61283395/answer/186122300&quot;&gt;現身説法&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;多用 rebase。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;就是大佬這短短三個字的經驗談，讓我對 git rebase 這個功能產生了濃厚的興趣。那時的我恐怕也不會想到，後來的我會如此頻繁地使用 rebase，從而擺脫既往使用 Git 時提交記錄瑣碎、雜亂的問題，離正確使用 Git 更近一步。&lt;/p&gt;&lt;h3&gt;1）瑣碎的提交從何而來？&lt;/h3&gt;&lt;p&gt;大家都知道，作為版本管理系統，Git 要保證提交記錄可靠、可追溯，因此不能像文本編輯那樣隨意更改提交記錄，最多隻提供 &lt;code&gt;git commit --amend&lt;/code&gt; 功能來允許你更改最新的提交。&lt;/p&gt;&lt;p&gt;但在開發過程中，或許你不太可能時時刻刻像 Vue.js 的提交記錄那樣，使自己每個提交都保持清爽、規範。回頭使用 git log 瀏覽提交記錄，你可能會發現你提交了太多瑣碎的內容，「細緻」到寫一行代碼、修一個錯別字、修一個註釋都有單獨的提交。&lt;/p&gt;&lt;p&gt;很多時候這些提交是很瑣碎的，沒有必要單獨保留，好比是你在文字處理軟件中每寫一句話就按「保存」，而每個修改都被單獨保存成了一個文件。久而久之，提交記錄就變得冗長瑣碎，管理的時候就很難追溯到有用的、重要的提交。&lt;/p&gt;&lt;p&gt;這個時候， &lt;code&gt;git rebase&lt;/code&gt; 就派上用場了。&lt;/p&gt;&lt;p&gt;Git 的設計師考慮到用戶整理提交記錄的需求，於是就設計了 &lt;code&gt;git rebase&lt;/code&gt; 這一功能，允許你合併、編輯、重排已有的提交，使修改後的提交井然有序，就像 Vue.js 的提交記錄那樣清晰。&lt;/p&gt;&lt;h3&gt;2）實戰演示如何合併瑣碎提交&lt;/h3&gt;&lt;p&gt;以下面這個提交記錄為例，記錄了某項目從零開始寫 &lt;code&gt;main()&lt;/code&gt; 函數的過程，僅僅是添加文本輸出與修改註釋的提交就有好幾個。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;假設這些提交彼此之間沒有衝突，每個提交都是在原有提交之上的微調。&lt;/p&gt;&lt;/blockquote&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用單行模式輸出提交記錄。最新的提交在前。
3a51f37493191451413b8dc7428d63351ce4b1e3 (HEAD -&gt; main, origin/main) main: 修改註釋中的錯別字
6587eeb437c8b139965085ddf99bd72bae682f89 main: 添加註釋
61b04c318c24434996587eeb437c8b13996587e6 main: 添加操作結束的文本輸出
61500445ebae1eb855ab216c6bbcec6ee73bd270 main: 微調操作開始的文本
7dad6bec684949ab0188085ddf99bc724c7b7b59 main: 添加操作開始的文本輸出
996587eeb437c8b13996451413b8dc7603452f32 main: 添加基本文本輸出
554bb6603452f3bf5705ac200effbdfc0aa97465 main: 創建 main 函數&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下來，筆者就要把所有提交都合併到第一個提交「&lt;code&gt;main: 創建 main 函數&lt;/code&gt;」&lt;i&gt;（以下簡稱「目標提交」）&lt;/i&gt;當中。&lt;/p&gt;&lt;h4&gt;0x00：檢查代碼樹是否有未提交的更改&lt;/h4&gt;&lt;p&gt;為了防止 rebase 弄亂代碼倉庫，Git 強制要求你的工作區「乾淨」，也就是不存在已經修改但沒有提交的文件。否則，你是沒有辦法 rebase 的。&lt;/p&gt;&lt;p&gt;根據你的開發進度，你可以先提交修改；或者是使用 &lt;code&gt;git stash&lt;/code&gt; 將修改暫時保存起來，等到完成 rebase 後再運行 &lt;code&gt;git stash pop&lt;/code&gt; 恢復你的修改。&lt;/p&gt;&lt;h4&gt;0x01：進入 git rebase 模式&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;git log&lt;/code&gt; 查看提交記錄，記住「目標提交」的 ID。然後，運行以下命令，開始 rebase：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;git rebase -i 554bb6603452f3bf5705ac200effbdfc0aa97465~&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;這個命令，允許你修改從「最新提交」到「目標提交」在內的所有提交。&lt;strong&gt;注意不要漏了提交 ID 後面的波浪線，否則會把「目標提交」給漏掉&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;稍等片刻，Git 會自動打開文本編輯器（通常是 Vim 或 Nano），列出一系列提交。其中：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;較新的提交列在文檔的後面&lt;/strong&gt;&lt;strong&gt;，順序是與 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 相反的；&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;每一行前面的 &lt;code&gt;pick&lt;/code&gt; 是操作指令，意為採用該提交。這是默認的行為。&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 創建 main 函數
pick 996587ee main: 添加基本文本輸出
pick 7dad6bec main: 添加操作開始的文本輸出
pick 61500445 main: 微調操作開始的文本
pick 61b04c31 main: 添加操作結束的文本輸出
pick 6587eeb4 main: 添加註釋
pick 3a51f374 main: 修改註釋中的錯別字&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;0x02：合併提交&lt;/h4&gt;&lt;p&gt;在本例中，從&lt;code&gt;996587ee&lt;/code&gt; 到&lt;code&gt;3a51f374&lt;/code&gt; 的這幾個提交，都是要併入「目標提交」的提交。&lt;/p&gt;&lt;p&gt;我們把這些提交對應行行首的 &lt;code&gt;pick&lt;/code&gt; 改為 &lt;code&gt;fixup&lt;/code&gt; （或單個字母「&lt;code&gt;f&lt;/code&gt;」）。&lt;code&gt;fixup&lt;/code&gt; 指令的作用是合併提交，但是隻保留前一個提交（相鄰一個比它早的提交）的説明。如下所示：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 創建 main 函數
f 996587ee main: 添加基本文本輸出
f 7dad6bec main: 添加操作開始的文本輸出
f 61500445 main: 微調操作開始的文本
f 61b04c31 main: 添加操作結束的文本輸出
f 6587eeb4 main: 添加註釋
f 3a51f374 main: 修改註釋中的錯別字&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;隨後，保存文件並關閉編輯器，Git 就會自動開始 rebase，一個個把新的提交併入相鄰的前一個提交中，直到目標提交。這樣，那些瑣碎的提交都被併入我們的目標提交中，如此一來提交記錄就清爽了不少：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用單行模式輸出提交記錄
f5815166356e85a5fe244f6024c2e401f04b10fa (HEAD -&gt; main, origin/main) main: 創建 main 函數&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果你希望保留相關提交的説明文本（以備參考等），那麼你可以使用 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;squash&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 指令（或單個字母「&lt;/strong&gt;&lt;code&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt;」）&lt;/strong&gt;，保存文件並關閉編輯器後， Git 會打開一個新文檔，在這裡你可以檢查、修改提交説明。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;經過 rebase 之後，原本的「目標提交」ID 會發生變化，因為 Git 實際上生成了一個新的提交。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;3）如果瑣碎的提交是後來才做出的&lt;/h3&gt;&lt;p&gt;隨著項目開發的推進，你達成的目標越來越多，提交數量也隨之增長。但你發現一個早期編寫的功能裡，註釋、代碼縮進這些細節存在問題，於是再做了幾個提交來修改。&lt;/p&gt;&lt;p&gt;現在，你想把這些瑣碎的修改合併到該功能的提交中。此時你依然可以運用 &lt;code&gt;git rebase&lt;/code&gt;，先調整提交順序，然後再使用 &lt;code&gt;fixup&lt;/code&gt;（或 &lt;code&gt;squash&lt;/code&gt;）指令來合併提交。&lt;/p&gt;&lt;h4&gt;0x00：準備工作&lt;/h4&gt;&lt;p&gt;在繼續操作之前，你需要確保倉庫裡沒有未提交的更改。&lt;/p&gt;&lt;p&gt;另一方面，你還要保證那些瑣碎的提交不與你既往的修改產生衝突。比如説，如果你的提交除了修改註釋，還順帶修改了函數結構、變量定義等內容，那麼很可能會與你的其他提交造成衝突，需要你手動幹預，造成不必要的麻煩。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;假設下文的提交彼此之間沒有衝突，每個提交都是在原有提交之上的調整。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;0x01：進入 rebase 模式，重排提交順序&lt;/h4&gt;&lt;p&gt;在運行 &lt;code&gt;git rebase&lt;/code&gt; 之前，你需要通過 &lt;code&gt;git log&lt;/code&gt; 檢索提交日誌，找到你的「目標提交」。&lt;/p&gt;&lt;p&gt;在下面的例子中，目標提交是&lt;code&gt;554bb660&lt;/code&gt; &lt;i&gt;（「創建 main」函數）&lt;/i&gt;，你的任務就是要把你的目標是把 &lt;code&gt;3a51f374&lt;/code&gt; 與 &lt;code&gt;6587eeb4&lt;/code&gt; 這兩個瑣碎的提交合併到 &lt;code&gt;554bb660&lt;/code&gt; 這個提交中。&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用單行模式輸出提交記錄
...
3a51f374 main: 修改註釋中的錯別字
6587eeb4 main: 修正代碼縮進
996587ee process: 使用 libfftw3，優化合成器算法邏輯
34e87ac3 process: 創建 process 函數
554bb660 main: 創建 main 函數
...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後，運行 &lt;code&gt;git rebase&lt;/code&gt; 命令：&lt;/p&gt;&lt;pre class=&quot;language-null&quot;&gt;&lt;code&gt;git rebase -i 554bb660~&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此時， Git 依然會打開一個文本編輯器，內容如下：&lt;/p&gt;&lt;pre class=&quot;language-null&quot;&gt;&lt;code&gt;pick 554bb660 main: 創建 main 函數
pick 34e87ac3 process: 創建 process 函數
pick 996587ee process: 使用 libfftw3，優化合成器算法邏輯
pick 6587eeb4 main: 修正代碼縮進
pick 3a51f374 main: 修改註釋中的錯別字&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我們在 &lt;code&gt;git rebase&lt;/code&gt; 給我們打開的文本編輯器裡，把&lt;code&gt;3a51f374&lt;/code&gt; 與 &lt;code&gt;6587eeb4&lt;/code&gt; 這兩個提交對應的行，&lt;strong&gt;整體複製到 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;554bb660&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 的後面，並將原有的行註釋掉&lt;/strong&gt;。就像下面這樣：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 創建 main 函數

# 將提交所對應的行復制到我們的目標提交後面
pick 6587eeb4 main: 修正代碼縮進
pick 3a51f374 main: 修改註釋中的錯別字

pick 34e87ac3 process: 創建 process 函數
pick 996587ee process: 使用 libfftw3，優化合成器算法邏輯

# 為保險起見，將原有的行註釋掉，而不是直接移動
#pick 6587eeb4 main: 修正代碼縮進
#pick 3a51f374 main: 修改註釋中的錯別字&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;警告：&lt;/strong&gt;&lt;br&gt;不要修改 &lt;code&gt;pick&lt;/code&gt; 後面的內容，尤其是提交 ID，否則提交記錄可能會發生混亂。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;0x02：合併提交&lt;/h4&gt;&lt;p&gt;確認提交順序無誤後，將待合併的提交對應行行首的 &lt;code&gt;pick&lt;/code&gt; 指令改為 &lt;code&gt;fixup&lt;/code&gt; （或 &lt;code&gt;squash&lt;/code&gt;），如下所示：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 創建 main 函數

# 將提交所對應的行復制到我們的目標提交後面
fixup 6587eeb4 main: 修正代碼縮進
fixup 3a51f374 main: 修改註釋中的錯別字

pick 34e87ac3 process: 創建 process 函數
pick 996587ee process: 使用 libfftw3，優化合成器算法邏輯

# 為保險起見，將原有的行註釋掉，而不是直接移動
#pick 6587eeb4 main: 修正代碼縮進
#pick 3a51f374 main: 修改註釋中的錯別字&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存文件後，Git 隨即開始 rebase 工作，這樣我們就可以化瑣碎為清爽，得到一個乾淨的提交記錄了。&lt;/p&gt;&lt;h3&gt;3）注意事項&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在進行 rebase 前，務必要檢查你要合併的提交與「目標提交」之間是否存在衝突。&lt;/strong&gt;一旦存在衝突，那麼 &lt;code&gt;git rebase&lt;/code&gt; 就無法繼續，會要求你手工修改你的倉庫代碼來處理衝突，這需要更多的時間和精力——因為你要保證代碼正常無誤。&lt;/p&gt;&lt;p&gt;另一方面，經過 rebase 合併所得的提交，本質上是一個全新的提交，並且也改變了原有的提交記錄，因此如果別人 fork 了你的代碼，在與你的倉庫同步時必定會發生衝突。你或許需要告知你的團隊成員，或者是通過 README 來告知代碼共享平台上的用戶，告訴他們使用 &lt;code&gt;git pull --rebase&lt;/code&gt; 來同步你的修改。&lt;/p&gt;&lt;h2&gt;提交順序不滿意？也可以用 rebase 搞定&lt;/h2&gt;&lt;p&gt;我自己在找到開發項目的新靈感後，會馬上新建一個 Git 倉庫，開始動手實踐，並把我寫的源代碼提交到倉庫裡。然而當我想進一步把倉庫上傳到 GitHub 時，卻發現：我忘了加上許可協議、README 和 &lt;code&gt;.gitignore&lt;/code&gt;！&lt;/p&gt;&lt;p&gt;考慮到這些文件都是在新建項目時就要添加的，如果我在完成了一部分程序功能後補上去，再回看 Git 提交記錄，總是會覺得格外「彆扭」。在這樣的情況下，&lt;strong&gt;我依然可以運用 git rebase，單獨調整提交順序，還我自己一個科學有序的提交記錄。&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;1）實踐如何調整提交順序&lt;/h3&gt;&lt;p&gt;這裡舉一個高度簡化的例子：假設筆者有一個項目，已經完成了程序的主體開發工作，後來才補上 README 與許可協議。提交日誌如下（較新的提交在前面）：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用單行模式輸出提交記錄
0fb4a3b0 添加 README.md
acbc6080 添加許可協議（GPLv3）
a841dbc1 UI 的 bug 修復
16f688a6 DSP 性能優化
75ca23f6 完成 UI 開發
277aad5f 完成 DSP 開發
eb323b0e 初始提交（Initial commit）&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我希望把與 README、許可協議相關的提交──也就是 &lt;code&gt;0fb4a3b0&lt;/code&gt; 、&lt;code&gt;acbc6080&lt;/code&gt; ──挪到時間順序上的初始提交之後，也就是提交日誌中初始提交的前一行。&lt;/p&gt;&lt;h4&gt;0x01：打開 git rebase&lt;/h4&gt;&lt;p&gt;在本例中，我已經確定好了「目標提交」，也就是初始提交，並且已經確保工作區沒有未提交的代碼。&lt;/p&gt;&lt;p&gt;然後，運行 git rebase，定位到目標提交：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;git rebase -i eb323b0e&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下來 Git 會打開文本編輯器，顯示以下內容（較新的提交在文檔的後面）：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 277aad5f 完成 DSP 開發
pick 75ca23f6 完成 UI 開發
pick 16f688a6 DSP 性能優化
pick a841dbc1 UI 的 bug 修復
pick acbc6080 添加許可協議（GPLv3）
pick 0fb4a3b0 添加 README.md&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;需要注意的是，git rebase 不能顯示初始提交，所以我們能看到的最早的提交是緊鄰初始提交之後（比初始提交新）的第一個提交。&lt;/p&gt;&lt;h3&gt;0x02：開始挪動&lt;/h3&gt;&lt;p&gt;先把&lt;code&gt;0fb4a3b0&lt;/code&gt; 、&lt;code&gt;acbc6080&lt;/code&gt; 這兩個提交對應的行整體複製到 &lt;code&gt;277aad5f&lt;/code&gt; （也就是初始提交後的第一個提交）前面，然後將原有的那兩行註釋掉，如下所示：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;# 將提交所對應的行復制到我們的目標提交後面。
# 本例中的目標提交是初始提交，所以我們實際上是把要挪動的提交放在 git rebase 文檔的最前面
pick 0fb4a3b0 添加 README.md
pick acbc6080 添加許可協議（GPLv3）

pick 277aad5f 完成 DSP 開發
pick 75ca23f6 完成 UI 開發
pick 16f688a6 DSP 性能優化
pick a841dbc1 UI 的 bug 修復

# 為保險起見，將原有的行註釋掉，而不是直接移動
#pick acbc6080 添加許可協議（GPLv3）
#pick 0fb4a3b0 添加 README.md&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;確認無誤後，直接保存，此時 Git 就會自動開始 rebase 工作，稍等片刻再查看提交記錄，你會發現提交順序變了，README 與許可協議所對應的提交就出現在了初始提交的後面，大功告成。&lt;/p&gt;&lt;h3&gt;2）注意事項&lt;/h3&gt;&lt;p&gt;考慮到 rebase 時可能會面臨的衝突，你需要三思而後行。&lt;/p&gt;&lt;p&gt;通常只建議重排那些對其他提交記錄幾乎沒什麼幹擾的提交，例如你的提交只創建、修改了某一個特定的文件（README、許可協議這樣的文件）。若重排不慎，你就不得不花費大量的精力來處理 rebase 的衝突，還有可能把提交記錄弄亂。&lt;/p&gt;&lt;p&gt;同樣地，你還需要告知你的團隊成員或用戶，使用 &lt;code&gt;git pull --rebase&lt;/code&gt; 來合併你的更改。&lt;/p&gt;&lt;h2&gt;對於未成型項目，&lt;code&gt;git commit --amend&lt;/code&gt; 也許更適合你&lt;/h2&gt;&lt;p&gt;git commit 是 Git 用於提交修改的命令。它有一個參數 &lt;code&gt;--amend&lt;/code&gt;，允許你修改最新一次提交的內容。有時你發現剛剛提交的代碼有錯誤，或者是提交説明有問題，但是你不想再新建一個提交來修正這些錯誤，那麼你就可以使用 &lt;code&gt;git commit --amend&lt;/code&gt; 這個命令。&lt;/p&gt;&lt;p&gt;然而，對我來説，&lt;code&gt;git commit --amend&lt;/code&gt; 的用途遠不止於此。&lt;strong&gt;在項目還未成型的階段，我使用它來保持提交記錄的清爽。&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;1）為什麼我會常用 &lt;code&gt;git commit --amend&lt;/code&gt;？&lt;/h3&gt;&lt;p&gt;我開發的項目，主要是將現有的開源音頻插件移植到 &lt;a href=&quot;https://github.com/DISTRHO/DPF&quot;&gt;DPF&lt;/a&gt; 這個跨平台框架，這往往是「摸著石頭過河」——無論是 DPF 還是被移植的插件，都缺乏文檔，全靠我自己摸索。&lt;/p&gt;&lt;p&gt;在早期階段，代碼文件結構、模塊和功能代碼、編譯系統等都還沒有定稿，程序也只實現了部分功能：這就是未成型的狀態。我個人習慣一邊寫功能一邊調試，常常反覆調整代碼結構和算法，直到真正實現我預期的目標為止。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;這，往往意味著我要持續修改源代碼庫。&lt;/strong&gt;如此背景之下，如果每個修改都單獨提交到倉庫裡，那麼就意味著倉庫裡會有數十甚至上百條極其瑣碎的提交記錄，待到項目成型時還要用 &lt;code&gt;git rebase&lt;/code&gt; 來整理提交。你可以想象一下，用 WPS 寫文章，每寫一句話就另存一個文件，是什麼樣的感覺。&lt;/p&gt;&lt;h3&gt;2）如何妙用 &lt;code&gt;git commit --amend&lt;/code&gt;？&lt;/h3&gt;&lt;p&gt;為瞭解決上述問題，&lt;code&gt;git commit --amend&lt;/code&gt; 就成為了我最常用的操作之一。我會採用這樣的思路：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;第一步，&lt;/strong&gt;用一個提交來存放項目成型前的所有開發工作。提交説明為「&lt;code&gt;Early development (WIP!)&lt;/code&gt;」，其中「&lt;code&gt;WIP（Work In Progress）&lt;/code&gt;」表示該提交隨時可能被覆蓋。做出這個提交之後，就不要再做新的提交。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;第二步，&lt;/strong&gt;每次完成一部分功能，確認代碼編寫與程序運行無誤時，就使用 &lt;code&gt;git add&lt;/code&gt; 命令來將修改過的文件暫存（stage）起來，隨後使用 &lt;code&gt;git commit --amend&lt;/code&gt; 更新這個提交的內容。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;第三步，&lt;/strong&gt;繼續完成開發，直到項目成型。此時，再運行 &lt;code&gt;git commit --amend&lt;/code&gt;，重新修改提交説明，將「&lt;code&gt;WIP&lt;/code&gt;」等字樣刪除，代表我的早期開發工作已經定稿。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我個人偏向在項目成型之後，才開始轉變為以一個個單獨提交的方式來持續開發。這裡的「成型」，大致可理解為代碼結構穩定，程序預期功能已經實現，至少有可以跑起來的 Alpha 版本推出。&lt;/p&gt;&lt;p&gt;如此一來，提交記錄就會變得清爽，不會讓瑣碎的早期開發記錄「擠佔」你的 git log，事後也不需要再單獨花時間來 rebase。&lt;/p&gt;&lt;h3&gt;3）注意事項&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;由於這種方法並不會為每個更改留下單獨的提交，後續難以通過 &lt;code&gt;git log&lt;/code&gt; 回溯，故只建議在項目未成型時使用。如果你不放心，依然可以每做一組工作就提交一次，對此我建議在提交説明裡做標記，以備項目成形後再 rebase 提交記錄。&lt;/li&gt;&lt;li&gt;在 &lt;code&gt;git commit --amend&lt;/code&gt; 之前，也務必確保程序與代碼無誤，以免混亂。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;除此之外，當你在為你的項目添加新功能時，你也可以在原型設計、測試的階段使用&lt;code&gt;git commit --amend&lt;/code&gt; ，因為這個過程常常就像寫一篇新文章，你或許也不希望每寫一句話就又來另存一個新文檔。&lt;/p&gt;&lt;h2&gt;寫在最後&lt;/h2&gt;&lt;p&gt;在日常與 Git 打交道的過程中，我一直致力於精進 Git 的使用。上面這幾點技巧，就是我自己的實踐成果，著力於讓提交日誌更清爽、規範，方便後續的維護。讓我們再來回顧一下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用「原子化」提交，每個提交只做一件事，利於管理、維護和回顧你的開發進度；&lt;/li&gt;&lt;li&gt;靈活運用 &lt;code&gt;git rebase&lt;/code&gt;，合併細碎的提交，按需要重排提交，使提交記錄清爽、規範；&lt;/li&gt;&lt;li&gt;項目未成型時，活用 &lt;code&gt;git commit --amend&lt;/code&gt;，保持提交記錄清爽。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;當然，以上的技巧，更多體現出我個人的使用習慣，客觀上也改善了我自己 Git 倉庫的質量。相信我的分享能為感興趣的讀者朋友們提供參考，一同將 Git 用得更自在。&lt;/p&gt;&lt;/div&gt;</description>
            <author>愛拼安小匠</author>
            <pubDate>Tue, 21 Jan 2025 11:06:37 +0800</pubDate>
        </item>
        <item>
            <title>派早報：EA Origin 應用將停運，IDC 發佈 2024 年中國手機市場報告等</title>
            <link>https://sspai.com/post/95757</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;EA 於 1 月 18 日發佈通知，宣佈旗下的 Origin 應用將於 2025 年 4 月 17 日停運，後續將切換到 EA app 平台。這一次的關停的主要原因是 Origin 客戶端是基於舊版操作系統開發的，而無論是微軟還是 Apple 都已經停止對舊版操作系統的支持，隨著時間推移也勢必導致安全問題，而遷移到基於現代操作系統的 EA \app 則是最佳的選擇。&lt;a href=&quot;https://help.ea.com/en/help/ea/ea-app/update-operating-system-for-ea-app/&quot;&gt;來源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;IDC：2024 年全年中國智能手機市場觸底反彈&lt;/h3&gt;&lt;p&gt;1 月 20 日，市場研究機構 IDC（國際數據公司）發佈 2024 年中國智能手機市場最新季度跟蹤報告。報告顯示，2024 年第四季度，中國智能手機市場出貨量約 7643 萬台，同比增長 3.9%。市場份額方面，2024 年第四季度前五大廠商分別為 Apple、vivo、華為、小米、榮耀與並列第五的 OPPO，其中 vivo、華為與小米同比增幅達 14.0%、22.8%、28.4%，為 Android 帶去 7% 的市場增幅。全年範圍看，市場份額前五的廠商分別為 vivo、華為、Apple、榮耀與 OPPO。&lt;/p&gt;&lt;p&gt;值得一提的是，2024 年第四季度，摺疊屏手機出貨量自 2022 年第二季度後首次出現同比下降，但全年出貨量仍達 917 萬台，同比增長 30.8%。2024 年摺疊屏市場份額前五的廠商分別為華為、榮耀、vivo、小米、OPPO，其中華為市場份額達 48.6%。&lt;a href=&quot;https://www.idc.com/getdoc.jsp?containerId=prCHC53105325&quot;&gt;來源&lt;/a&gt;&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu774j5b34temt4lrt4g.png&quot; alt=&quot;XUZTbxkfuoWmUbxrj5tcMDtsnye&quot;&gt;&lt;/figure&gt;&lt;h3&gt;字節跳動發佈面向海外的 AI 中文開發環境 IDE：Trae&lt;/h3&gt;&lt;p&gt;字節跳動於 1 月 19 日正式發佈了一款面向專業的開發者提供服務的全新 AI Coding 產品 Trae，該 IDE 由字節跳動旗下新加坡公司 SPRING (SG) PTE.LTD. 提供服務，支持 AI 問答、代碼自動補全、基於 Agent 的 AI 編程等功能，可以幫助程序員自動化完成開發任任務，並在一些項目中可以實現端到端開發（通過用戶的提問直接生產一個完整的代碼項目），該工具可選擇簡體中文或英文，並內置了 GPT-4o、Claude-3.5-Sonnet 模型供免費使用，目前僅支持 Mac 版本，未來將推出 Windows 版本。&lt;a href=&quot;https://www.trae.ai/&quot;&gt;來源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;月之暗面發佈 Kimi k1.5 多模態思考模型&lt;/h3&gt;&lt;p&gt;1 月 20 日，月之暗面宣佈推出 Kimi k1.5 多模態思考模型，宣稱在 short-CoT 模式下，Kimi k1.5 的數學、代碼、視覺多模態和通用能力大幅超越 GPT-4o 和 Claude 3.5 Sonnet；在 long-CoT 模式下，其數學、代碼、多模態推理能力達到 OpenAI o1 正式版水平。該模型預覽版將灰度上線 Kimi 官網與 app。&lt;a href=&quot;https://mp.weixin.qq.com/s/BmOKGKjXP2tjmPyNdU0Hqg&quot;&gt;來源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Google 將通過 Android 和 Chrome 支持沉浸式音頻格式 Eclipsa Audio&lt;/h3&gt;&lt;p&gt;Google 於 1 月 19 日在其官方博客上宣佈，將在 Android 系統和 Chrome 瀏覽器中支持沉浸式音頻格式 Eclipsa Audio，並會很快面向開發者推出 Eclipsa Audio 插件。Eclipsa Audio 基於沉浸式音頻模型和格式（IAMF）的空間音頻格式，IAMF 則是開放媒體聯盟 AOMedia 推出的開源免專利費空間音頻格式，Google 和三星為該開放媒體聯盟的成員。藉助 Eclipsa Audio，內容創作者可以為消費者提供空間音頻，而此前創作空間音頻主要侷限在電影和音樂行業的專業人士。此外 Google 還表示，預計 2025 年下半年，多家電視製造商和條形音箱製造商也會推出支持該空間音頻格式的設備，Google 和三星將推出認證和品牌授權計劃，為消費者提供質量保證。&lt;a href=&quot;https://9to5google.com/2025/01/19/eclipsa-audio-google-chrome-android/?open_in_browser=true&quot;&gt;來源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Elon Musk 於 1 月 20 日在 X 平台發佈推文，表示正「考慮」恢復短視頻平台 Vine。Vine 曾是一個擁有八年曆史的短視頻平台，於 2012 年被 Twitter（X 的前身）收購，其最大的亮點是通過 6 秒的創意短視頻挑戰模式，吸引了大量忠實用戶，後續該應用漸漸被用戶拋棄，Twitter 最終在 2016 年將其關閉。&lt;a href=&quot;https://x.com/elonmusk/status/1880852037212291478&quot;&gt;來源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;微博數碼博主 @體驗 more 稱，OPPO Find N5（PKH110，非衞星通信版）將採用 SM-8750-3-AB，是採用 2+5 核設計的驍龍 8 Elite，比標準版少了一顆性能核。目前洩露的跑分成績為單核 3083，多核 8865，與標準版驍龍 8 Elite 有明顯差距。&lt;a href=&quot;https://weibo.com/3108827753/PapB5nuwp&quot;&gt;來源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;由於海外網友大量湧入，小紅書於 1 月 20 日的最新版本 app 火速上線翻譯功能。上線早期不少用戶發現該功能依靠大模型，且未做提示詞屏蔽，導致大量用戶開始使用翻譯功能生成內容，包括食譜、代碼、提示詞等。目前該漏洞已基本完成封堵。據封堵前該功能就提示詞的回應，翻譯功能由智譜 GLM 提供服務。&lt;a href=&quot;https://www.cnbeta.com.tw/articles/tech/1472606.htm&quot;&gt;來源&lt;/a&gt;&lt;/li&gt;&lt;li&gt;1 月 20 日，爆料人 Evan Blass（@evleaks）發佈了一條&lt;a href=&quot;https://x.com/evleaks/status/1881274150351962611&quot;&gt;源碼截圖&lt;/a&gt;，截圖顯示除了 iPhone SE (4th Gen) 外，還有 iPad (11th Gen)、iPad Air 13 (M3)、iPad Air 11 (M3) 三台未發佈的 iPad。此前，Mark Gurman 在爆料中有提及 iPad 11 會使用 A17 Pro 芯片與 8GB RAM 以支持 Apple Intelligence。&lt;a href=&quot;https://www.macrumors.com/2025/01/20/new-ipad-air-models-with-m3-chip-leak/&quot;&gt;來源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu774jdb34temtjvmqp0.png&quot; alt=&quot;JE55bYl6voZVCVxgLFxcUAf4n1d&quot;&gt;&lt;/figure&gt;&lt;h2&gt;少數派的近期動態&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;少數派年度盤點回歸，我們選出了 16 件產品，涵蓋手機、平板電腦、智能家居、AI 模型等多個領域，並做成了富有交互感的頁面，歡迎&lt;a href=&quot;https://sspai.com/page/2024&quot;&gt;查閲&lt;/a&gt;並&lt;a href=&quot;https://weibo.com/1914010467/Pa0U25do2&quot;&gt;參與微博討論和抽獎&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;少數派「大家給 Apple 的成績單」2024 年結果已上線。你給 Apple 的 2024 年打幾分？歡迎進入&lt;a href=&quot;https://sspai.com/page/apple_report_2024&quot;&gt;專題頁&lt;/a&gt;查閲，還可參與微博&lt;a href=&quot;https://sspai.com/post/95746&quot;&gt;話題討論&lt;/a&gt;與&lt;a href=&quot;https://weibo.com/1914010467/Paup46FAj&quot;&gt;抽獎&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;春節來點「科技年貨」送人送己，少數派年終大促銷開始啦。&lt;a href=&quot;https://sspai.com/post/95456&quot;&gt;&lt;strong&gt;進一步瞭解&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;假期將至，你的旅途遊戲清單列好了嗎？&lt;a href=&quot;https://sspai.com/bullet/1736744010&quot;&gt;&lt;strong&gt;來分享一下吧&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能錯過的文章&lt;/h2&gt;&lt;p&gt;&gt; 下載 &lt;a href=&quot;https://sspai.com/page/client&quot;&gt;少數派 2.0 客戶端&lt;/a&gt;、關注 &lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少數派公眾號&lt;/a&gt;，解鎖全新閲讀體驗 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 實用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版軟件&lt;/a&gt;，少數派為你呈現 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>少數派編輯部</author>
            <pubDate>Tue, 21 Jan 2025 08:00:00 +0800</pubDate>
        </item>
        <item>
            <title>滿分五分，你給 Apple 的 2024 年打幾分？</title>
            <link>https://sspai.com/post/95746</link>
            <description>&lt;article class=&quot;normal-article&quot;&gt; &lt;div id class=&quot;article-body&quot;&gt;&lt;div class=&quot;articleWidth-content&quot;&gt;&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;Apple 的 2024 年從 Vision Pro 的高調亮相開始。這款開啟了全新產品線的 XR 設備帶來了令人驚豔的視聽效果和交互範式，但圍繞其實用性和發展前景的討論，短期內預計還不會終結。M4 處理器先後登陸 iPad 和 Mac，兩個產品線都由此獲得更極致的外觀和更強大的性能，Mac mini 更是成為年內最令人驚喜的新品之一。iPhone 和 Apple Watch 的升級相對謹慎，但 RAM 和屏幕尺寸的提升也為隔代升級的用戶提供了「甜點」。&lt;/p&gt;&lt;p&gt;軟實力方面，面對 AI 浪潮，Apple Intelligence 的發佈交上了及時的答卷，也留下了仍待後續發展的懸念，在中國的前景尤其受到行業和消費者高度關注。面對快速變化的監管環境，App Store、NFC 等生態呈現出更多開放的跡象，但各利益相關方還在磨合中共同探索前進的方向和幅度。在中國，增開的零售店、應用實驗室持續強化著 Apple 的「存在感」和服務能力，但競爭激烈的市場環境也對 Apple 的品牌領導力提出了新的挑戰。&lt;/p&gt;&lt;p&gt;那麼，對於 Apple 這個喜憂兼具的 2024 年，少數派的朋友們都會怎樣評價呢？今年，我們連續第四年推出「大家給 Apple 的成績單」策劃，邀請到更多嘉賓，也結合時事熱點對評分類目、問題設置做了更新，希望能夠為大家呈現一份既反映共識、又體現個性的點評。&lt;/p&gt;&lt;p&gt;與去年一樣，你可以在頁面底部填寫一份自己心目中的「成績單」，然後和少數派嘉賓們的結果一起分享到 &lt;a href=&quot;https://s.weibo.com/weibo?q=%23%E7%BB%99Apple%E6%89%93%E5%88%86%23&quot;&gt;#給 Apple 打分#&lt;/a&gt; 微博話題，2 月 10 日，我們將從分享用戶中抽取 15 位送出招財水獺。期待看到你的觀點，也希望 Apple 能在 2025 年持續為我們帶來驚喜。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/page/apple_report_2024&quot;&gt;&lt;strong&gt;訪問專題頁面&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://sspai.com/page/apple_report_2023&quot;&gt;&lt;strong&gt;2023 年結果回顧&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://sspai.com/page/apple_report&quot;&gt;&lt;strong&gt;2022 年結果回顧&lt;/strong&gt;&lt;/a&gt; | &lt;a href=&quot;https://sspai.com/post/70814&quot;&gt;&lt;strong&gt;2021 年結果回顧&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/57a5c7c5014c649465881f856c682ae9.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/9b4263f2f8dca0f338e0d5e347e673b1.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/09225eb010ec0c049fcc6df554d486d6.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/86419aa2d5938251bdf9c790f44324b1.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/ce4a92b73b3aeb1459b91ce6809fde8c.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/f4c0ed5cfa651607bac929f638f95805.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/58eb4738c7651fc8a6a48304174686ff.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/8419eb99c2e1406f8dd8df410dcc5e83.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/4b5ea91007ff0b92403beb441e9380ac.jpg&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/032a4def4795f1916fd1dc165a0b3a01.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;方法&lt;/strong&gt; 我們從 2024 年 11 月下旬至 12 月中旬期間，陸續向 33 名受訪人發送了相同的問卷。問卷中僅含有少量背景信息、分類説明和官方資訊，不含有其他引導或提示性質的文本。問捲回收結束於 2025 年 1 月 3 日。&lt;/p&gt;&lt;p&gt;除為符合產品規範名稱、語句通順所做的必要編輯外，文章引用的評語均為所回收問卷中的原文。該等評語的權利由相應受訪者保留，其內容不代表少數派立場。&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;article-author articleWidth-687&quot;&gt;&lt;div class=&quot;el-row&quot;&gt;&lt;div class=&quot;el-col el-col-11 center&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/article&gt;</description>
            <author>少數派編輯部</author>
            <pubDate>Mon, 20 Jan 2025 18:25:32 +0800</pubDate>
        </item>
        <item>
            <title>派評 | 近期值得關注的 App</title>
            <link>https://sspai.com/post/95744</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;歡迎收看本期《派評》。你可以通過文章目錄快速跳轉到你感興趣的內容。如果發現了其它感興趣的 App 或者關注的話題，也歡迎在評論區和我們討論。&lt;/p&gt;&lt;h2&gt;值得關注的新 App&lt;/h2&gt;&lt;p&gt;雖然少數派一直在為大家發現和介紹各平台上的優質 App，但仍有不少設計、功能、交互、體驗都非常優秀的 App，還沒有被我們發掘和介紹。它們可能是一款老 App，也可能是近期上架的新 App，我們會在這裡介紹給你。&lt;/p&gt;&lt;h3&gt;Showly：數據更全面的開源影視記錄工具&lt;/h3&gt;&lt;p&gt;&lt;a class=&quot;ss-atUser&quot; href=&quot;https://sspai.com/u/69zxdqx8&quot;&gt;@Noah_Choi&lt;/a&gt;：買了 NAS 之後，總想要收藏各種資源反覆觀看，因此也衍生出了觀影情況記錄的需求。雖然國內有豆瓣之類的記錄平台，但也會因為諸多原因缺少很多冷門資源的條目和信息，許多優秀劇集的幕後花絮、採訪、紀錄片等也沒有收錄。&lt;/p&gt;&lt;p&gt;而 Showly 就完美解決了我的記錄需求，它就是一款數據非常全面並且簡單易用的影視記錄工具。應用可以非常簡潔明瞭地展示當前正在追蹤的影視劇，包括目前已經更新到多少集、你已經看過了多少集等等，由於它的數據來源是 track.tv，支持與平台的雙向同步，我們不必擔心數據缺失，很多電視劇的幕後花絮、紀錄片等也能記錄在冊。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p6db34temtjvmpr0.png&quot; alt=&quot;DxYOb7osfo0o7txI1dzc5fIYnTg&quot;&gt;&lt;/figure&gt;&lt;p&gt;不過 Showly 記錄的邏輯和我們國內很多平台的邏輯有些差別。比如在豆瓣上，想看、在看、看過的標記都相當於加入到了我們的觀看列表中，但在 Showly 裡，標記看過的劇集和加入觀看列表是兩套獨立的操作。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p6lb34temupl6vc0.png&quot; alt=&quot;UUTubHCFooz9l0x80iccb0qfnZd&quot;&gt;&lt;/figure&gt;&lt;p&gt;另外，豆瓣上的標記一般都是以整個電影和整個劇集為單位進行標記，而 Showly 是以「集」為單位，如果你想要標註以前看過的影視劇，需要進入影視詳情頁，在下面選擇每一季的複選框來標註觀看進度。不過值得一提的是，Showly 提供了三種觀看日期標註選項，分別是現在、自定義以及「劇集發佈當日」，而不是像國內平台那樣只能按照標註當天來記錄時間。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p6tb34temupl6vcg.png&quot; alt=&quot;XwnFbd1SkoSfprxqeWGcWzgTnOc&quot;&gt;&lt;/figure&gt;&lt;p&gt;總體來看，Showly 雖然相當於是個套殼 track.tv 的記錄工具，但使用起來清爽乾淨，沒有多餘的功能，也不需要忍受官方客戶端各種 VIP 會員限制，而且它本身還是一個開源作品，作為輕度記錄觀影記錄的工具來説綽綽有餘。現在，你可以在 &lt;a href=&quot;https://github.com/michaldrabik/showly&quot;&gt;GitHub&lt;/a&gt; 和 &lt;a href=&quot;https://apt.izzysoft.de/fdroid/index/apk/com.michaldrabik.showly2&quot;&gt;IzzyOnDroid&lt;/a&gt; 免費下載 Showly。&lt;/p&gt;&lt;h3&gt;Default Browser：用快捷鍵切換默認瀏覽器&lt;/h3&gt;&lt;p&gt;&lt;a class=&quot;ss-atUser&quot; href=&quot;https://sspai.com/u/914r3btn&quot;&gt;@ElijahLee&lt;/a&gt;：Default Browser，顧名思義，是 macOS 上一款快捷切換默認瀏覽器的小工具，它支持菜單欄、快捷鍵等多種便捷方式來快速切換瀏覽器。&lt;/p&gt;&lt;p&gt;下載安裝 Default Browser 之後，應用會在 macOS 的菜單欄添加一枚應用圖標，並自動讀取已經安裝的瀏覽器，目前支持 Safari、Arc、Firefox、Chrome 等多種主流瀏覽器應用。應用為每一個瀏覽器分配了一個數字，這些數字即對應切換瀏覽器的快捷操作。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p75b34temtc0gru0.jpeg&quot; alt=&quot;CwZ5b31VTocqFbxZY09csWLjnPd&quot;&gt;&lt;/figure&gt;&lt;p&gt;使用 Default Browser 切換默認瀏覽器有兩種方式。首先是通過菜單欄方式，點擊菜單欄的應用圖標，待彈出式窗口出現後，再點按對應的數字或者上下方向鍵，即可切換瀏覽器。第二種方式是通過快捷鍵，在應用的設置中，分配快捷鍵，比如 &lt;code&gt;Command - B&lt;/code&gt;，待彈出式窗口出現後繼續按數字鍵或者上下方向鍵。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p7db34temtc0grug.jpeg&quot; alt=&quot;MCyBbSHL3oh4kTx0xhGcaYfonyh&quot;&gt;&lt;/figure&gt;&lt;p&gt;Default Browser 還有一些貼心的功能。首先是菜單欄的圖標有多種選擇，包括瀏覽器的默認 icon 經緯地球，還有切換符號，還有我認為非常實用的方式：直觀地在菜單欄顯示當前默認瀏覽器的應用圖標。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p7lb34temtjvmprg.png&quot; alt=&quot;L5Ibbt3oWoNtJjxx5WZcv0Opnyf&quot;&gt;&lt;/figure&gt;&lt;p&gt;在應用的設置中，還可以設置隱藏菜單欄圖標，只有在切換默認瀏覽器時，短暫地顯示菜單欄圖標。這樣既可以保持菜單欄的簡潔，同時能夠在切換瀏覽器時提供提示。&lt;/p&gt;&lt;p&gt;Default Browser 還支持使用快捷指令、自動化、專注模式等方式來切換默認瀏覽器。添加包含 Default Browser 操作的快捷指令，並配置快捷鍵即可通過快捷指令來切換，在「系統設置 - 專注模式 - 過濾條件」中，選擇 Default Browser 設置默認瀏覽器。自動化則是需要使用 &lt;a href=&quot;https://apps.apple.com/app/id1594183810&quot;&gt;Shortery&lt;/a&gt;，設置時間、地點、Wi-Fi 等條件下，自動觸發切換瀏覽器。&lt;/p&gt;&lt;p&gt;你可以在應用&lt;a href=&quot;https://sindresorhus.com/default-browser#focus-filter&quot;&gt;官網&lt;/a&gt;購買 Default Browser，應用起始售價 4 美元。&lt;/p&gt;&lt;h3&gt;Cobalt：開源在線影音下載工具&lt;/h3&gt;&lt;p&gt;&lt;a class=&quot;ss-atUser&quot; href=&quot;https://sspai.com/u/ul0vcezb&quot;&gt;@Snow&lt;/a&gt;：Cobalt 是一款開源的在線下載工具，它可以幫你保存你喜歡的網站上的視頻、音頻、靜態照片或 GIF 圖。由於 Cobalt 依託於網頁呈現，因而所有支持瀏覽器的平台均可適配。&lt;/p&gt;&lt;p&gt;Cobalt 的使用方法也非常簡單，只需粘貼你想要下載的內容鏈接，點擊 paste 按鈕，Cobalt 就會自動解析並開始下載。當你的下載內容為圖片時，Cobalt 會以網格圖形式提供預覽，方便你有選擇性地下載；當下載內容為視頻時，則可以在左下方的按鈕選擇下載純視頻/音頻內容。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p7tb34temtc0grv0.jpeg&quot; alt=&quot;NOumbIWMgo7FzfxmVYrcqQVlnmd&quot;&gt;&lt;/figure&gt;&lt;p&gt;作為一款效率工具，Cobalt 可自定義項非常豐富。例如，你可以自定義優先下載的視頻格式與分辨率、音頻格式與比特率，針對 YouTube 部分內容，Cobalt 甚至還支持挑選不同語言音軌下載。它還提供了 4 種文件命名方式，方便用戶管理下載內容。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p85b34temtc0grvg.png&quot; alt=&quot;DD2rb5UuboZoshxiJMxcZbOKnNB&quot;&gt;&lt;/figure&gt;&lt;p&gt;此外，Cobalt 還提供了一個測試版的媒體修復功能，可以將現有的編解碼器數據複製到新的媒體容器中，或許可以解決一些信息丟失的問題，同時還可以提升與舊版軟件的兼容性。你只需跳轉至 Remux 一欄，並將需要處理的媒體文件拖入即可。&lt;/p&gt;&lt;p&gt;Cobalt 目前支持 YouTube、X（Twitter）、Pinterest、Tiktok、Instagram、Tumblr 等社交平台，不過由於是第三方工具，並不是每一項服務都非常穩定，例如支持的 B 站視頻，目前就無法使用 Cobalt 下載。&lt;/p&gt;&lt;p&gt;你可以&lt;a href=&quot;https://cobalt.tools/settings/download&quot;&gt;點擊此處&lt;/a&gt;免費使用 Cobalt。&lt;/p&gt;&lt;h3&gt;DigiPaw：數字健康新方式&lt;/h3&gt;&lt;p&gt;&lt;a class=&quot;ss-atUser&quot; href=&quot;https://sspai.com/u/5isr02uh&quot;&gt;@Peggy_&lt;/a&gt;：又一次坐上下班的公交車，車廂裡此起彼伏的都是抖音、快手視頻的聲音，這邊是小美的傳奇經歷，那邊是大聖直擊天靈蓋的聲音，還沒等聽完上個家人的驚爆價，轉頭又傳來了秘聞要事。電子產品從來沒有像今天這樣分散著我們的注意力，吞噬著我們的時間。&lt;/p&gt;&lt;p&gt;現如今，越來越多手機廠商開始在手機裡塞入各種數字健康功能來幫助用戶戒除手機癮，而類似的應用也層出不窮。今天介紹的 DigiPaw 也是一款主打數字健康的應用。其功能涵蓋了隨時開啟專注時段並屏蔽特定應用、特定時間屏蔽特定應用、屏蔽關鍵詞、手機使用統計等。優勢在於功能更多、使用較為方便。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p85b34temtc0gs00.jpeg&quot; alt=&quot;XDjAbcQcwoZDdzxCsKUcxx59ngc&quot;&gt;&lt;/figure&gt;&lt;p&gt;在使用前我們需要授予 DigiPaw 相應權限，這裡針對不同的功能選項，我們可以授予不同的無障礙權限，對於不需要的部分功能也可以選擇不給予其對應權限。首先是專注模式，在這一功能下，我們可以根據自己的習慣來選擇屏蔽導致我們分心的應用。每次要使用時，便可以點擊開始專注，並靈活更改專注時長。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p8lb34temupl6vd0.jpeg&quot; alt=&quot;XHTsb8eawo0TgZxeaxacQBe5nBf&quot;&gt;&lt;/figure&gt;&lt;p&gt;其次便是應用屏蔽功能，我們可以選擇所有想要屏蔽的應用，並設置警告界面出現的時間和具體內容，例如打開相應應用 5 分鐘便彈出警告界面，當然我們可以結合自己的自律程度選擇是否允許繼續瀏覽應用。如果希望更加嚴格，那麼便可以在到達規定時長後強制退出應用。當然了，我們安裝應用的初衷畢竟還是為了娛樂，全天禁止的效果倒不如不安裝。因而 DigiPaw 也允許我們設置多個時段，並在此時段內小小地「作弊」來使用某些已經屏蔽的應用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p8tb34temtjvmps0.jpeg&quot; alt=&quot;X64abuAfyoL8AixA91Jczi4fnwh&quot;&gt;&lt;/figure&gt;&lt;p&gt;關鍵詞屏蔽功能更加……一言難盡，只要手機屏幕上出現了我們添加的關鍵詞，不論這個詞出現在哪個位置，頁面便會被快速定向到下面這個網頁，輕易不要嘗試。比如我添加了關鍵詞「YouTube」，而這個應用又被我放在了主屏，所以就非常魔性地只要切到主屏，就得看一段勁歌熱舞。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p8tb34temt4lrsig.jpeg&quot; alt=&quot;YrmfbvMOVol1orxWBpYczc8onle&quot;&gt;&lt;/figure&gt;&lt;p&gt;其餘功能由於篇幅有限，不再一一説明，如果你對 DigiPaw 感興趣，可以通過 &lt;a href=&quot;https://f-droid.org/packages/nethical.digipaws/&quot;&gt;F-Droid&lt;/a&gt; 下載體驗。&lt;/p&gt;&lt;h3&gt;Horizon Live Wallpapers：跟隨日月天氣變化的動態壁紙&lt;/h3&gt;&lt;p&gt;&lt;a class=&quot;ss-atUser&quot; href=&quot;https://sspai.com/u/liuxiaofengone&quot;&gt;@化學心情下 2&lt;/a&gt;：雖説 Google Pixel 內置了動態壁紙，但官方原生提供的壁紙可謂是寥寥無幾，尤其是我喜歡根據每天的日落日出來動態調整系統主題，所以很長一段時間都通過 Breezy Weather 實現背景壁紙的動態交替。不過每次看壁紙都是天氣符號也略顯單調，那麼有沒有同樣支持淺色/深色主題切換，且支持節律的動態壁紙呢？&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p9db34temt4lrsj0.jpeg&quot; alt=&quot;AlnIb9ha0o7G2cx6IR7c3jffnze&quot;&gt;&lt;/figure&gt;&lt;p&gt;Horizon Live Wallpapers 是近期上架的一款融合了天氣、月相、日出、日落的動態壁紙應用，支持根據日出日落生成不同的全天候動態壁紙。打開應用後，你可以選擇壁紙集、設置天氣和位置、選擇控制方式、調整月相顯示等等。&lt;/p&gt;&lt;p&gt;首先是壁紙集的設置，默認情況下是隨機選定一個免費的壁紙，當然在這裡面你可以單獨選擇壁紙的樣式，大多數都提供了淺色/深色主題選項，除了免費的壁紙集也可以付費購買一些有更多樣式的壁紙，比如有些付費壁紙除了白天和夜晚的主題之外，還有清晨以及傍晚的主題，一天下來會有更為豐富的視覺效果。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71p9lb34temupl6vdg.jpeg&quot; alt=&quot;M5G4b9UX7ozaFxxQx5gcoQcUnyf&quot;&gt;&lt;/figure&gt;&lt;p&gt;這些變化其實是基於當地位置和天氣所產生的，因此在 Horizon Live Wallpapers 中你需要單獨設置天氣和位置，在獲取定位並打開天氣+天氣效果之後，動態壁紙上將會呈現當地的天氣，比如下雪、或者下雨的效果，這樣你打開手機桌面就能知道戶外的天氣是什麼，結合原本壁紙上的風景還是相當有趣的。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71pa5b34temupl6ve0.jpeg&quot; alt=&quot;VNoWbripto8q8sxhwKlcXiiJnpf&quot;&gt;&lt;/figure&gt;&lt;p&gt;除了天氣之外， Horizon Live Wallpapers 還支持設置月相，也可以在動態壁紙上呈現月亮的升起以及月圓月缺的效果，你還可以將小組件放置在桌面用來當作天氣預報提示使用，當然比起專業的天氣應用還是比較羸弱的，所以只能説是一個天氣情況的補充而已。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71padb34temtjvmpsg.jpeg&quot; alt=&quot;OIBkbzzFdoGhIwx9WpIcXDswntf&quot;&gt;&lt;/figure&gt;&lt;p&gt;總的來説，Horizon Live Wallpapers 更像是結合了天氣的動態壁紙應用，更為豐富的壁紙畫面場景、結合月相、天氣、以及日升日落的動態變化，讓你的 Android 手機桌面變成一個不斷變化的風景畫，你可以在 &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.seresk.horizon.realtime.live.wallpapers&quot;&gt;Play Store&lt;/a&gt; 免費下載並使用。&lt;/p&gt;&lt;h2&gt;不容錯過的 App 更新&lt;/h2&gt;&lt;p&gt;除了「新鮮」App，App Store 中的許多老面孔也在不斷迭代、更新，增加更多有趣和實用的功能。少數派希望幫你篩選 App Store 中值得關注的 App 動態，讓你快速瞭解 App 和開發者們的最新動態。&lt;/p&gt;&lt;h3&gt;Craft：新年首次更新及 2025 年更新計劃&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;平台：iOS / iPadOS / macOS / Windows / Web / visionOS&lt;/li&gt;&lt;li&gt;關鍵詞：文檔協作、筆記工具&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;a class=&quot;ss-atUser&quot; href=&quot;https://sspai.com/u/whoops&quot;&gt;@Vanilla&lt;/a&gt;：繼去年底的大版本更新之後，知名在線筆記應用 Craft 又在新年伊始為我們帶來了 2025 年的第一次更新，同時也預告了新一年中的更新計劃，包括了導航、文件組織、鍵盤快捷鍵、收藏與任務、搜索、圖像處理、AI、Windows 應用以及提升性能，不過其中最讓我感到興奮的是標籤功能，不知道等了這麼久是否能在 2025 年如願以償。&lt;/p&gt;&lt;p&gt;在今年的第一個新版本中，最重要的一個更新內容是 Craft 支持了 Apple Intelligence 中的 Image Playground（圖樂園）功能。如果你將設備更新到了 iOS 18.2 或者 macOS 15.2 以上的版本，同時設備支持 Apple Intelligence，那麼就可以在 Craft 中直接調用圖樂園功能來創建 AI 圖像。&lt;/p&gt;&lt;p&gt;目前，我們可以在 Craft 中的封面圖片、行內圖片和膠帶部分使用圖樂園功能創建圖像，只需要點擊 Create 按鈕即可在應用內喚起圖樂園界面，然後我們可以通過文字描述、上傳圖片、預設模版等來創建圖像，完成後直接插入到 Craft 中使用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71palb34temtjvmpt0.jpeg&quot; alt=&quot;VvUdbOfSZoUmNfxZwJLcSnwRnKb&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71pb5b34temupl6veg.jpeg&quot; alt=&quot;KKQtbT3daoEIERxmMd5cPjohnaf&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71pb5b34temupl6vf0.jpeg&quot; alt=&quot;R0EYbPESSop408xTar0cSQsEnf9&quot;&gt;&lt;/figure&gt;&lt;p&gt;另外一個新版本主要更新內容是上下文菜單。Craft 在新版本中重新設計了上下文菜單的樣式，放棄了 Craft 自己的 UI 風格，而是採用了 iOS 系統原生樣式，因此在 iOS/iPadOS 平台上使用 Craft 時會看起來更加和諧。&lt;/p&gt;&lt;p&gt;新的上下文菜單現在已經深入了 Craft 應用中的各個地方，包括文檔視圖、任務視圖、日曆視圖等，我們都可以通過原生樣式的上下文菜單和次級菜單來獲得更多的操作功能。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71pblb34temtjvmptg.jpeg&quot; alt=&quot;QBUWbi7vcomQbOxN4TicTcoynJd&quot;&gt;&lt;/figure&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu71pbtb34temtc0gs0g.jpeg&quot; alt=&quot;DXWMbc3A4o9eYpxYv9ncOAkknih&quot;&gt;&lt;/figure&gt;&lt;p&gt;除了上述提到的更新內容，Craft 還在新版本中更新了圖片庫、增加了日期選擇器上的字體大小選項、更新了拼寫檢查的實線顏色等，具體內容可以在官網更新日誌中查看。Craft 可以在各個應用商店或者官網下載使用，目前已經支持了 iOS、iPadOS、macOS、Windows、Web 等多個平台，採用了免費使用 + 付費訂閲的收費方式。&lt;/p&gt;&lt;span class=&quot;ss-application&quot;&gt;&#160;&lt;/span&gt;&lt;h2&gt;App 速報&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;Parallels Desktop（&lt;a href=&quot;https://prf.hn/l/7R0aWV9&quot;&gt;macOS&lt;/a&gt;）：更新至 v20.2，針對 Apple Silicon 架構的 Mac 加入了 64 位 x86 系統模擬，併為 Windows 應用帶來 Apple Intelligence 寫作工具（Writing Tools）支持。&lt;/li&gt;&lt;li&gt;Start11（&lt;a href=&quot;https://www.stardock.com/products/start11/history&quot;&gt;Windows&lt;/a&gt;）：更新至 v2.5，可以將任務欄停靠在顯示器的任何一側。同時修復了此前拖動任務欄按鈕的錯誤、Win + X 菜單、將鼠標懸停在自定義開始按鈕上時任務欄閃爍、對齊等問題。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&gt; 下載少數派 &lt;a href=&quot;https://sspai.com/page/client&quot;&gt;客戶端&lt;/a&gt;、關注 &lt;a href=&quot;https://sspai.com/link?target=https%3A%2F%2Fwww.xiaohongshu.com%2Fuser%2Fprofile%2F63f5d65d000000001001d8d4&quot;&gt;少數派小紅書&lt;/a&gt;，感受精彩數字生活 &#127811;&lt;/p&gt;&lt;p&gt;&gt; 實用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版軟件&lt;/a&gt;，少數派為你呈現 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>少數派編輯部</author>
            <pubDate>Mon, 20 Jan 2025 17:55:06 +0800</pubDate>
        </item>
        <item>
            <title>從打工小妹到創業大佬：折騰但精彩的搞錢人生</title>
            <link>https://sspai.com/post/95725</link>
            <description>&lt;article class=&quot;normal-article&quot;&gt; &lt;div id class=&quot;article-body&quot;&gt;&lt;div class=&quot;articleWidth-content&quot;&gt;&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;「拼命搞錢」是許多人常常掛在嘴邊的玩笑口號，但本期節目的嘉賓饅頭卻從學生時代就將之視為人生目標。她曾經在工廠擰過螺絲，當過微商，開過淘寶，搞過代購，做過小紅書博主，雖然歷經各種折騰，但每一步都恰好踩在時代的風口上，也賺到了自己的第一二三四五桶金。&lt;/p&gt;&lt;p&gt;如今的她再度更換賽道，與合作伙伴共同建立了國內規模最大之一的 AI 算力池，她的工作模式也從單打獨鬥變成了團隊協作。本期節目中，我們就來聽饅頭講講她的折騰人生。&lt;/p&gt;&lt;h2&gt;直接收聽&lt;/h2&gt;&lt;p class=&quot;ss-audioSource&quot; id=&quot;136&quot; src=&quot;https://v.typlog.com/sspai/8262719831_87638.mp3&quot;&gt;Audio&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://sspai.com/link?target=https%3A%2F%2Fsspai.typlog.io%2Ffeed%2Faudio.xml&quot;&gt;節目 RSS 鏈接&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://podcasts.apple.com/hk/podcast/%E4%B8%80%E6%B4%BE-podcast/id1483157529&quot;&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://sspai.com/link?target=https%3A%2F%2Fwww.xiaoyuzhoufm.com%2Fpodcast%2F5e280fb1418a84a0461fc567&quot;&gt;小宇宙&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://sspai.com/link?target=https%3A%2F%2Fopen.spotify.com%2Fshow%2F7pJ5EHWj7i5wQwqzY9kHr5&quot;&gt;Spotify&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://sspai.com/link?target=https%3A%2F%2Fpod.link%2F1483157529&quot;&gt;其它平台&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;饅頭：愛折騰的創業女孩&lt;/li&gt;&lt;li&gt;張奕源 Nick：少數派編輯部成員&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;歡迎寫信至 &lt;a href=&quot;mailto:nick@sspai.com&quot;&gt;nick@sspai.com&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&gt; 關注&#160;&lt;a href=&quot;https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4&quot;&gt;少數派小紅書&lt;/a&gt;，感受精彩數字生活 &#127811;&lt;/p&gt;&lt;p&gt;&gt; 實用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版軟件&lt;/a&gt;，少數派為你呈現 &#128640;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;article-copyrights&quot;&gt;&lt;p class=&quot;followUpAdmin&quot;&gt;&lt;span class=&quot;nickname&quot;&gt;本文責編：@&lt;a href=&quot;/u/nicholaszhang&quot;&gt;張奕源 Nick&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&#169; 本文著作權歸作者所有，並授權少數派獨家使用，未經少數派許可，不得轉載使用。&lt;/div&gt; &lt;div class=&quot;article-author articleWidth-687&quot;&gt;&lt;div class=&quot;el-row&quot;&gt;&lt;div class=&quot;el-col el-col-11 center&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/article&gt;</description>
            <author>少數派編輯部</author>
            <pubDate>Mon, 20 Jan 2025 15:00:00 +0800</pubDate>
        </item>
        <item>
            <title>讓新知識成為冒險遊戲，用 AI 重構「學習」這件事</title>
            <link>https://sspai.com/post/95426</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;最近和一位遊戲設計專家聊天時，我突然意識到一件很有趣的事。&lt;/p&gt;&lt;p&gt;——我已經好幾個月沒打遊戲了。&lt;/p&gt;&lt;p&gt;不是因為工作太忙，更不是因為突然想通了要戒掉遊戲。恰恰相反——我發現了一個比遊戲還讓人上癮的東西：用 AI 學點什麼。&lt;/p&gt;&lt;p&gt;我大概和他講了講我的方法，那位遊戲設計專家興奮地打斷了我：「等等，你知道你這種學習方式用上了遊戲設計中最核心的幾個原理嗎？」&lt;/p&gt;&lt;p&gt;他説了一堆專業術語，什麼「核心遊戲循環」「心流狀態」「學習曲線」「成就係統」，説白了就是：&lt;/p&gt;&lt;p&gt;我搭建了&lt;strong&gt;一個關卡體系、一個開放世界、一套遊戲地圖和成就係統、一條動態難度曲線、一個即時反饋的夥伴系統&lt;/strong&gt;，從而達到了&lt;strong&gt;上癮的心流體驗。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;於是我決定把這個發現聊給更多人聽。&lt;/p&gt;&lt;h2&gt;一、你一定見過的冒險遊戲&lt;/h2&gt;&lt;p&gt;如果你玩過開放世界的冒險遊戲，常見的設計是：你扮演一個勇者，站在一片未知的大陸上。這片大陸被迷霧籠罩，只有你所在的這座山丘周圍是清晰可見的。遠處若隱若現的城堡指引著你的終極目標，但通往那裡的路徑卻有無數種可能。&lt;/p&gt;&lt;p&gt;這個遊戲的妙處在於：首先，你不必按照固定的路線前進。你可能會被遠處山頂的寶箱吸引，也可能對眼前的古老遺蹟充滿好奇，或者乾脆沿著小溪一路探索。每個人都能找到自己感興趣的方向。在最初，你遇到的都是些簡單的挑戰，比如跳過小溪，推開石頭。而在城堡、迷宮、遺蹟這種大型關卡，你會碰到 boss 還有傳奇的裝備。隨著你獲得新的裝備和技能，你解鎖了更豐富的遊戲體驗。&lt;/p&gt;&lt;p&gt;你有一個隨從，當你找不到方向時，他不會直接告訴你答案，但總能在你需要時給出恰到好處的指引。&lt;/p&gt;&lt;p&gt;你會有一個地圖系統，清晰地知道遊戲的進度，隨著探索的深入，地圖上的迷霧漸漸散去。你不僅能看到更遠的地方，還會發現原本看似毫無關聯的區域居然暗藏著密道。每當你點亮一座燈塔，解開一個機關，獲得一件新裝備，都會感受到自己正在一步步接近那座神秘的城堡。&lt;/p&gt;&lt;p&gt;等等，這不就是……塞爾達傳説、上古卷軸、輻射 4、艾爾登法環？&lt;/p&gt;&lt;h2&gt;二、我的方法非常簡單：&lt;/h2&gt;&lt;h3&gt;1、搭建關卡，案例即關卡（Quests as Cases）&lt;/h3&gt;&lt;p&gt;在接觸新領域後，先把教材扔給人工智能幫我總結知識點。我會讓 AI 提出三到四個案例，把每個知識點都落到具體的例子裡。我會直接學習具體案例，通過案例來反推這些知識點還有知識點之間的聯繫——它們可能是跨章節的。我不會從基礎知識或基礎概念開始學習，因為太抽象太零散。&lt;/p&gt;&lt;p&gt;這是把學習遊戲化最關鍵的一步：我把線性的知識有機地聚攏成了幾個遊戲裡的大型關卡，每開一個都有寶藏。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/08/5157f00216df46340696abb41a5c957c.png&quot;&gt;&lt;figcaption&gt;編程的 4 大關卡，就像塞爾達荒野之息的四大神獸&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;任務目標化：&lt;/strong&gt;傳統課本把知識切得太碎，而通過 AI 精選的大型案例學習，就像設計了幾個核心關卡 —— 每個案例都會串聯起多個知識點。比如在學習金融時，一個特斯拉股票定價的案例就會涉及市場預期、風險溢價、行業估值等多個概念。通過啃下這樣三四個大案例，整個學科的核心知識點就都串聯起來了。這種案例驅動的方式不僅讓零散的知識有了聯繫，更讓抽象的概念有了具體的應用場景。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;任務分解與分級：&lt;/strong&gt;有些 boss 打不過時，我們會先去刷野怪。當 AI 給出一個複雜案例時，我會要求它進行任務分解。比如學習「設計模式」時，不直接理解完整的工廠模式，而是讓 AI 把它拆解成遞進的小任務：從簡單工廠到抽象工廠。每個小任務都建立在前一個的基礎上，形成清晰的進階路徑。如果某個概念特別難懂，就讓 AI 設計更多的中間任務，確保學習過程始終處於適度挑戰的狀態。&lt;/p&gt;&lt;h3&gt;2、開放世界機制，自由探索（Open World Mechanism）：&lt;/h3&gt;&lt;p&gt;我一定從最簡單最好理解的地方開始學，就像一個大地圖，我會先去有趣的地方探索。這有點像玩遊戲的新手教程，從試玩版開始進入一個領域，我很快就能有一些初始的認識。遇到不懂的，就和 AI 聊天，把新概念和已有的認知連接起來。&lt;/p&gt;&lt;p&gt;從原來跟著書的目錄來看，變成了哪裡好看就看哪裡：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;興趣優先機制：&lt;/strong&gt;開放世界讓你可以隨時選擇探索的方向。我的學習也是如此 —— 不必從「第一章第一節」開始，而是直接切入最感興趣的知識點。編程不一定從變量定義開始，可以直接做一個簡單的計算器，讓興趣指引學習的方向。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;開放式獎勵：&lt;/strong&gt;教材之外和 AI 聊出來的「白痴問題」往往藏著最有趣的知識點。比如「為什麼鋼琴鍵從 C 而不是 A 開始編號？這用戶體驗設計得也太差了。」這些看似無關的「彩蛋」不僅滿足好奇心，更幫助建立起對領域的深層理解。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/08/440d8aa7860a02fc606ba56b66c664d6.png&quot;&gt;&lt;figcaption&gt;白痴的問題，非常有趣&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;自我驅動的獨特劇情：&lt;/strong&gt;當你根據自己的理解和節奏探索時，就會形成個性化的學習體驗。你的提問會引導 AI 展開新的知識分支，讓學習變成一場由你主導的探險。這種「我在設計自己的探索」的掌控感，讓學習始終充滿動力。&lt;/p&gt;&lt;h3&gt;3、進度系統（Exploration Map）：構建認知地圖&lt;/h3&gt;&lt;p&gt;AI 總結出來的知識點會作為我的學習地圖和進度指示。在探索過程中，我會隨時回看這些知識點，&lt;strong&gt;不是去看知識點具體的解釋，只是用來確認自己的學習深度和方向。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;知識點的目錄只是我反覆確認的 todo list：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;可視化的成就係統：&lt;/strong&gt;每掌握一個知識點，就像在探索地圖上點亮一座燈塔，每理解一個概念間的聯繫，就像獲得了一枚成就徽章。這些清晰的進度標記不僅讓學習變得充滿成就感，更像遊戲中的成就係統一樣，激勵我們去解鎖更多未知的領域。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;全局視圖更新：&lt;/strong&gt;隨著探索的深入，認知地圖也在不斷進化。新掌握的知識就像驅散迷霧，讓我們看到更遠的地方；發現的知識聯繫則像開啟密道，連通了原本看似獨立的區域。這種實時更新的地圖系統，讓我們既能縱覽全局，找準自己的位置，也能看清下一步該往哪裡去。&lt;/p&gt;&lt;h3&gt;4、動態難度調節（Dynamic Difficulty）：成癮性的心流體驗&lt;/h3&gt;&lt;p&gt;在學習的過程中，絕對不要讓自己卡殼。如果碰到抽象的概念，我一定會讓人工智能具體化、案例化、打比喻，有了人工智能，那些半懂不懂的概念我可以迅速連接弄懂，這讓我很有探索的驚喜感。&lt;/p&gt;&lt;p&gt;如果還是卡殼，我就馬上切換方向，我把這個原則叫做「&lt;strong&gt;好吃的先吃&lt;/strong&gt;」。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;我不要用意志力，只要持續的正反饋&lt;/strong&gt;：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;實時調整難度：&lt;/strong&gt;遊戲最讓人上癮的機制之一是動態難度系統。在和 AI 學習時，它也會根據你的理解程度實時調整內容的複雜度。當發現概念太抽象，AI 會立即切換到更基礎的解釋方式；當掌握了基礎知識，它又會引入更深層的內容。這種實時調整確保了學習始終處在「恰好有挑戰」的狀態。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;低成本試錯：&lt;/strong&gt;在和 AI 對話時，我經常用自己的話複述學到的概念。當理解有偏差時，AI 會及時指出並引導思考。當遇到理解障礙時，AI 會迅速提供替代路徑。它不會固守一種解釋方式，而是靈活調整策略，從不同角度幫助理解。這種低成本的試錯機制正反饋極強，鼓勵迭代。&lt;/p&gt;&lt;h3&gt;5、即時反饋夥伴系統（Instant Feedback System）：AI 作為 NPC&lt;/h3&gt;&lt;p&gt;還有一點很關鍵，當我們在進行聊天時地學習時，我們不僅在用「費曼學習法」，我們也有了一個極度聰明的隨從，它可以幫我們：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;實時問題解答：&lt;/strong&gt;有了 AI 作為 NPC，每個疑問都能得到即時回應。這種即時反饋讓學習變成了一場流暢的對話，不會因為困惑而卡殼，極大地提升了學習的連續性和效率。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;虛擬團隊：&lt;/strong&gt;雖然自學是「單人遊戲」，但 AI 能完美扮演不同角色 —— 有時是耐心的導師，有時是糾錯的搭檔，有時是啟發思考的對手。這種虛擬團隊的存在讓獨學不再孤獨，每個想法都能得到及時的回應和深化。&lt;/p&gt;&lt;h2&gt;三、重新發現學習的樂趣&lt;/h2&gt;&lt;p&gt;聽完他的分析，我才明白為什麼這種方式這麼讓人上癮，學習就像在玩塞爾達，而且它不是時間的消費，反而獲得了生產力。&lt;/p&gt;&lt;p&gt;傳統的學習會被大家視為寒窗苦讀。固定低效的線性路徑忽視了每個人的興趣和節奏。即使你對後面的內容充滿好奇，也得硬著頭皮按部就班地先搞懂前置概念。&lt;/p&gt;&lt;p&gt;另外，進度總是模糊不清。除了考試成績，很難知道自己到底學得怎麼樣。這種不確定感讓學習之路顯得格外漫長。而且反饋來得太慢，你可能要等到月考或期末，才知道自己理解得對不對。&lt;/p&gt;&lt;p&gt;最後，互動幾乎不存在，當遇到困惑時，往往只能獨自苦惱，小紅書總是提倡死磕，真實情況是很容易把自己磕死。&lt;/p&gt;&lt;p&gt;是時候找回真正的樂趣了。&lt;/p&gt;&lt;p&gt;我之前寫過一篇用人工智能速通考試的帖子，有讀者覺得我只是在講應試。成年人的世界，機會都稍縱即逝，最後脫穎而出的，往往是那些敢於在準備不足的情況下依然主動出擊的人。他們在最短的時間內武裝自己，然後直接撞上去。&lt;/p&gt;&lt;p&gt;這絕不是在否定多年實踐基礎知識的價值，也不是在鼓吹「速通主義」。而是在提倡一種更接近遊戲開發的「最小可行產品」理念 —— 先快速搭建一個簡單但能運行的原型，然後在實踐中不斷迭代，逐步補充基礎知識。&lt;/p&gt;&lt;p&gt;出了學校才發現教育是一種昂貴的服務。大家發現了嗎，有一個有趣的現象，在少數派，「在職備考」類的文章很容易上熱搜。&lt;/p&gt;&lt;p&gt;我們中年人，很少考慮要不要當行業大咖，發愁的都是還有沒有機會入行。&lt;/p&gt;&lt;p&gt;AI 不僅給了我們抓住機會的可能性，更讓我們重新找回了學習最初的模樣：那不該是痛苦地前行，而是一場充滿好奇與驚喜的探索。每掌握一項新技能，都像獲得了認知世界的新的眼睛，體驗那些本來讀不懂的生命裡的驚喜。這是學習最動人的饋贈。&lt;/p&gt;&lt;p&gt;當然什麼都想學只會害了你，再怎麼學習仍然不是創造，而&lt;strong&gt;創造是更高級的快樂。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;這篇文章怎麼來的：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://sspai.com/post/94340&quot;&gt;工作最忙的 78 天，我用 ChatGPT 考了 CFA&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://sspai.com/post/95339&quot;&gt;方法太好，不想公開，使喚 AI 幹活的 100 個小妙招&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/08/0960d7f09d4916c97f69dfe48a7aa991.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;我搭了一個&lt;strong&gt;遊戲大王&lt;/strong&gt;：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/08/ea694d8437873db0462679f47865a765.png&quot;&gt;&lt;figcaption&gt;這就是我那位遊戲設計專家朋友：遊戲大王&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;想和&lt;strong&gt;遊戲大王&lt;/strong&gt;聊天請訪問：&lt;br&gt;&lt;a href=&quot;https://chatgpt.com/g/g-677aa66cd5088191b3b0374676a71b58-you-xi-da-wang&quot;&gt;https://chatgpt.com/g/g-677aa66cd5088191b3b0374676a71b58-you-xi-da-wang&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&gt; 關注&#160;&lt;a href=&quot;https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4&quot;&gt;少數派小紅書&lt;/a&gt;，感受精彩數字生活 &#127811;&lt;/p&gt;&lt;p&gt;&gt; 實用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版軟件&lt;/a&gt;，少數派為你呈現 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>工作很忙中年人</author>
            <pubDate>Mon, 20 Jan 2025 11:28:34 +0800</pubDate>
        </item>
        <item>
            <title>App+1 | 我開發了一款旅行記錄 app，讓照片背後的記憶更鮮活：山河旅記</title>
            <link>https://sspai.com/post/95430</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;strong&gt;Matrix 首頁推薦&lt;/strong&gt;&#160;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/matrix&quot;&gt;Matrix&lt;/a&gt;&#160;是少數派的寫作社區，我們主張分享真實的產品體驗，有實用價值的經驗與思考。我們會不定期挑選 Matrix 最優質的文章，展示來自用戶的最真實的體驗和觀點。&#160;&lt;br&gt;文章代表作者個人觀點，少數派僅對標題和排版略作修改。&lt;/p&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;旅行的意義是什麼？當我又一次翻看手機相冊，這個老掉牙的問題浮現於腦海。記錄美景，抑或放鬆身心？都行。這個問題的答案取決你自己。無不例外的是，我們都希望回憶起那段美好旅行時，嘴角能在生活的重壓之下浮現出一抹微笑。&lt;/p&gt;&lt;p&gt;可照片依然鮮活，記憶卻逐漸模糊，這些零散的照片就像沒有標註的故事書，隨著時間流逝，漸漸泛黃。&lt;/p&gt;&lt;p&gt;我去過的地方不算多，但每一次旅行都讓我收穫獨特的體驗，曾隻身一人遊歷於香港，也曾與愛的人相擁於 4680 米的雪山，不論是遇見有趣的人和事，還是探索沒有見過的街和景，旅行的每一個瞬間都另我十分享受。&lt;/p&gt;&lt;p&gt;但現在回看相冊裡成百上千張的照片，卻只能幫我回憶起那些標誌性的景點，真正打動人心的細節反而慢慢淡去了：是哪家不起眼的小店讓我念念不忘？路邊偶遇的街頭藝人又是在古鎮的哪個角落？&lt;/p&gt;&lt;p&gt;這種感覺很遺憾。照片記錄的只是一個瞬間，但旅行的意義遠不止於此。每一次旅行，都是由無數個精彩瞬間串聯而成的故事，有時甚至是那些看似不夠完美的片段，反倒成為了最珍貴的回憶。&lt;/p&gt;&lt;p&gt;我嘗試過各種方式來保存這些記憶：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;寫旅行博客 ，但經常因為太麻煩而半途而廢。&lt;/li&gt;&lt;li&gt;發朋友圈，但朋友圈的內容總是經過精心 P 圖和篩選的，不夠真實。&lt;/li&gt;&lt;li&gt;專門的旅行應用，要麼功能太複雜，要麼強制社交，沒有單純記錄旅行足跡的應用。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我需要的是一個更簡單的工具，就像一本隨身攜帶的旅行筆記本。它應該足夠輕便，讓記錄不再成為負擔；它應該足夠私密，讓我可以毫無顧忌地記錄每一個真實的想法；它還應該足夠智能，能自動幫我串聯起這些零散的記憶。&lt;/p&gt;&lt;p&gt;正是帶著這樣的念頭，我開發了「山河旅記」這款應用。希望它能成為每個旅行者的可靠夥伴，幫助大家保存旅途中的點點滴滴。&lt;/p&gt;&lt;h2&gt;記錄旅程的三個要素&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;閲讀提示：本文中「旅程」指的是旅行中的最小單元，一次旅行可能會包含多個旅程。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;記錄是為了日後能夠藉此回憶起當下，太簡單會丟失很多細節，太複雜則又會帶來負擔，本末倒置，如何找到這個平衡點，是我在「山河旅記」開發過程中思考最多的問題。&lt;/p&gt;&lt;p&gt;於是我將旅程拆解為三個核心要素：元數據、照片、足跡。&lt;/p&gt;&lt;p&gt;元數據，是旅程的骨架。地點、時間、聯繫與標籤，構成了一個旅程的基本定義。時間與地點描述了一個旅程是在何時發生的，比如：我在 2024 年去了一趟雲南。而聯繫與標籤則定義了旅程之間的關係，比如某次旅行中「洱海」的&lt;strong&gt;下一站&lt;/strong&gt;是「麗江古城」，「麗江古城」與另一個 2023 年的旅程「平遙古城」之間可能又存在一個共同標籤「&lt;strong&gt;古城打卡&lt;/strong&gt;」。這些基本信息之間的關聯讓零散的記憶重新連接，幫助我們在未來更容易回憶起整個旅程的脈絡。&lt;/p&gt;&lt;p&gt;照片，是旅程的眼睛。它不僅僅是記錄美景的工具，更是生活瞬間的見證者。在「山河旅記」中，我們鼓勵用戶記錄下更多真實的場景：排隊等候時街邊的煙火氣，或是雨天被困在客棧時的慵懶時光。這些照片也許不夠「精緻」，但卻最能勾起我們對旅途的真實回憶。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/513f07b27be37eb8a5ac8a659302000d.PNG&quot;&gt;&lt;figcaption&gt;「山河旅記」使用「照片牆」和「圖譜」多維度展現旅程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;足跡，是旅程的血肉。它記錄了我們在一個地方的完整活動軌跡，回想起一個人旅行的時候，我最喜歡的就是在古城裡七拐八拐的探索，在路邊隨意坐下觀察過往的行人……這些軌跡不僅僅是一條條線路，更是一個個故事。足跡是旅程中佔比最大的部分，可也是我們忘的最快，最缺少記錄的部分。當我垂垂老矣邁不動腳的時候，回看曾經因為逛古城而腿痠腳麻在一個街角癱坐了半個小時，似乎也是種不錯的體驗。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/7044547455563ee29aace81a25c516f0.PNG&quot;&gt;&lt;figcaption&gt;「山河旅記」中可以保存旅行足跡和細節，支持回放&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;元數據提供了旅程的基本框架，照片記錄了視覺瞬間，而足跡則串聯起整個旅程的完整故事，正是這三者相輔相成，才能真正幫助我們在未來重溫旅行時的點點滴滴。&lt;/p&gt;&lt;h2&gt;無壓記錄旅程&lt;/h2&gt;&lt;p&gt;基於旅程的三個基本要素，需要思考的是如何使用最少的成本將這些要素記錄下來。最佳的方式是&lt;strong&gt;讓記錄成為旅行的自然延伸，而不是額外的負擔&lt;/strong&gt;，所以我首先設計了「足跡旅程」這一概念。&lt;/p&gt;&lt;p&gt;在「山河旅記」，你可以輕鬆地記錄一條完整的旅行足跡，只需要在旅程開始時啟動「足跡」功能，結束時關閉即可，系統會自動為你生成一個「足跡旅程」。不論是旅程中拍攝的照片（需要在設置打開「隨旅拍」功能哦），還是某次駐足停留，都會保存在足跡線上。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;示意圖見本文第二張圖。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;這是我最推薦的旅程記錄方式、輕鬆且全面。但你我已經歷了這麼多的人生，那些走過的路不可能重走一遍。&lt;/p&gt;&lt;p&gt;為此，「山河旅記」還提供了另一種記錄方式，你可以將手機內的旅行照片導入到應用，應用會自動讀取照片信息中的位置與時間信息。&lt;/p&gt;&lt;p&gt;當然，如果一次性導入全部照片，無窮多的位置信息勢必會造成旅程管理的混亂，這隻會演變為另一個雜亂的「相冊」。為了在導入便利性和功能完整性之間取得平衡，「山河旅記」做了適當的限制：同一次導入的照片都會被歸類為同一個旅程，你可以從導入的照片中自由選擇一個地點用作整個旅程的位置信息。&lt;/p&gt;&lt;h2&gt;為旅程建立聯繫&lt;/h2&gt;&lt;p&gt;旅程之間往往相互關聯，就像我們總是懷揣著期待奔赴下一趟旅程，每一段旅途都可能與過往的經歷產生共鳴，或是為未來的行程埋下伏筆。在「山河旅記」，你可以通過「聯繫」和「標籤」功能，為每段旅程建立起獨特的關聯網絡，讓零散的旅行記憶串聯成一幅完整的人生畫卷。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/279a30cbc2f9c86f9fb3214a8f6c4e60.PNG&quot;&gt;&lt;figcaption&gt;通過「圖譜」查看旅程聯繫&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;相信有不少派友是知識管理愛好者吧，這個功能很容易讓人聯想到 Obsidian 的知識圖譜。我也熱愛做知識管理，所以在開發這款旅程管理工具時，特意將圖譜功能融入到旅程管理的一環。&lt;/p&gt;&lt;p&gt;在「圖譜」界面，你可以從宏觀視角一覽所有旅程，看到彼此交織的時空脈絡。藉助這種網狀結構，不僅能輕鬆發現旅程間的潛在聯繫，更能脫離時間與空間的束縛，梳理出專屬於你的旅行軌跡。這種體驗，就像在進行一場別開生面的知識管理探索，讓每一段旅程都煥發出新的意義。&lt;/p&gt;&lt;p&gt;最後也提一點個人建議：為了充分發揮圖譜的優勢，建議將一次完整的旅行細分為多個精細的「旅程」單元，併為它們添加相應的「聯繫」與「標籤」。比如，你可以將一次長途旅行分解為不同的城市站點，並且為其打上有意義的標籤。就像做知識管理一樣！&lt;/p&gt;&lt;h2&gt;多維度的回顧方式&lt;/h2&gt;&lt;p&gt;「旅行圖譜」功能在上文已經介紹過了，但「山河旅記」還提供了更多回顧旅程的視角。&lt;/p&gt;&lt;h3&gt;旅行地圖與照片牆&lt;/h3&gt;&lt;p&gt;2024 年下半年，我正忙於裝修小家，繁忙之中懷揣著對未來的期待。在設計書房區域時，我特意留出了一面大白牆，準備用來貼上過去和未來的旅行照片。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/0b554382a09b8c0149a3eac83154bd7a.jpg&quot;&gt;&lt;figcaption&gt;類似這樣&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;這個構想也激發了「山河旅記」的核心功能之一——旅行地圖。應用的主界面是一張可自由縮放的世界地圖，所有旅程都以縮略圖標的形式呈現其上。通過這種地理位置的直觀展示，你可以一目瞭然地看到哪些地方尚未探索，又是哪些角落讓你流連忘返。&lt;/p&gt;&lt;p&gt;點擊任一縮略圖，便會展開旅程的詳細內容——一面由照片組成的照片牆。受我曾經鍾愛的拍立得相機啟發，「山河旅記」在展示照片的時候特意復現了拍立得相片的效果，只需輕點任意照片縮略圖，系統就會呈現一張類似風格的相片，為你的旅行記憶增添一份獨特韻味。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/10/b08ac18a2ebb727a1e22e140157768b6.png&quot;&gt;&lt;figcaption&gt;旅行地圖與照片牆&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;回放足跡旅程&lt;/h3&gt;&lt;p&gt;每一段旅程都值得細細品味。在「山河旅記」，你可以通過回放功能重溫整個足跡旅程，看著地圖上的軌跡線隨時間推移逐步展開，彷彿重返當時的時空。系統會根據你的行進距離，恰到好處地彈出你在某條街邊拍攝的照片，或者某個角落的停留時間。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/9a8cfcb81a19d520ea90d9b6a5eba5e2.PNG&quot;&gt;&lt;figcaption&gt;豐富的足跡回放功能&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;為了讓你能夠充分回顧各種旅程細節，「山河旅記」提供了豐富的回放選項：你可以通過進度條自由調節播放進度，選擇 0.5 倍速細品精彩瞬間，或是使用 2 倍、4 倍速快覽全程。&lt;/p&gt;&lt;p&gt;此外，在觀看視角上，「山河旅記」提供了兩種模式：「鏡頭更隨」模式會沿著足跡線的繪製腳步，實時展示你曾經的行進軌跡；而「自由視角」則可以讓你跳出局部，以全局視角審視整段旅程。&lt;/p&gt;&lt;p&gt;無論是短途漫步還是跨城遠行，你都能找到最舒適的回顧方式。&lt;/p&gt;&lt;h3&gt;時間線&lt;/h3&gt;&lt;p&gt;「旅行地圖」為我們展現了旅程的空間維度，而時間則是串聯起人生故事的隱形紐帶。在「山河旅記」，你可以通過時間線視圖一覽所有旅程，從最初的探索到最新的足跡，構成了一部完整的時光旅記。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/3b7ddb6fb67e1b8e2ced2ca0ba8faffc.PNG&quot;&gt;&lt;figcaption&gt;按照時間順序排布的旅程&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;通過右上角的視圖切換按鈕，你可以自由選擇詳細或簡略的展示方式，找到最適合當下的瀏覽體驗。&lt;/p&gt;&lt;h3&gt;日曆&lt;/h3&gt;&lt;p&gt;時間線展現了旅程的宏觀脈絡，而日曆視角則讓旅程與具體日期緊密相連。在「山河旅記」，每個旅程都會在對應的日期上留下一個縮略圖標。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/07/93f52af8d8a8dd9416c11b78c7ecb1ea.PNG&quot;&gt;&lt;figcaption&gt;從日曆視角可以清晰地查看旅程頻次&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;這種傳統的日曆形式既方便查看過往旅程，也便於規劃新的行程。無論是短期出行還是長途旅行，都能在日曆中一目瞭然地看到時間分佈。&lt;/p&gt;&lt;h2&gt;數據安全&lt;/h2&gt;&lt;p&gt;作為用戶，我深知數據隱私的重要性。除了必要的在線工具外，我更傾向於選擇無需服務器、無需登錄、數據本地存儲的應用，如使用 Trilium 做筆記、用 Bitwarden 管理密碼。&lt;/p&gt;&lt;p&gt;作為開發者，我秉持這一理念。「山河旅記」採用完全的本地存儲方案，你的所有旅程數據都將安全地保存在設備中，無需登錄賬號，無需聯網，隨時隨地都能使用。&lt;/p&gt;&lt;p&gt;為了確保數據安全，應用還提供了 iCloud 備份和本地導出功能，讓你的旅行記憶得到雙重保障。&lt;/p&gt;&lt;h2&gt;未來的開發計劃&lt;/h2&gt;&lt;p&gt;作為一款偏向小眾的旅程管理應用，「山河旅記」目前的功能已經足夠豐富了，但除了常規的細節優化和 bug 修復之外，我腦袋裡還有非常多的想法想要去實現：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;記錄更多的足跡細節&lt;/li&gt;&lt;li&gt;更全面的規劃旅程功能&lt;/li&gt;&lt;li&gt;更多的數據導入方式&lt;/li&gt;&lt;li&gt;更多的旅程回顧方式&lt;/li&gt;&lt;li&gt;添加小組件支持&lt;/li&gt;&lt;li&gt;添加 Watch 端支持&lt;/li&gt;&lt;li&gt;快捷指令支持&lt;/li&gt;&lt;li&gt;……&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;希望大家提出寶貴的意見，「山河旅記」接受任何類型的批評與建議。&lt;/p&gt;&lt;h2&gt;結語&lt;/h2&gt;&lt;p&gt;「山河旅記」誕生於一個簡單的想法：讓旅行記錄迴歸本質，既不打擾當下的體驗，又能完整保存每一段珍貴回憶。在開發的過程中，我始終堅持著這個初心，努力打造一個優雅且實用的旅程管理工具。&lt;/p&gt;&lt;p&gt;這是一款專注於個人使用的小眾應用。它不追求社交分享，不渲染情緒，而是安靜地做好記錄這件事。希望它能成為你旅途中的可靠夥伴，讓每一段旅程都能被妥善收藏。&lt;/p&gt;&lt;p&gt;歡迎各位在評論區留言，我將抽 10 位讀者送上「山河旅記」的永久兌換碼。&lt;/p&gt;&lt;p&gt;應用下載鏈接：「&lt;a href=&quot;https://apps.apple.com/cn/app/%E5%B1%B1%E6%B2%B3%E6%97%85%E8%AE%B0-%E6%97%85%E8%A1%8C%E5%9C%B0%E5%9B%BE-%E8%B6%B3%E8%BF%B9%E5%9B%9E%E6%94%BE-%E6%97%85%E7%A8%8B%E5%9B%BE%E8%B0%B1-%E8%A1%8C%E7%A8%8B%E8%A7%84%E5%88%92/id6739272460&quot;&gt;山河旅記&lt;/a&gt;」&lt;/p&gt;&lt;span class=&quot;ss-application&quot;&gt;&#160;&lt;/span&gt;&lt;p&gt;&gt; 關注&#160;&lt;a href=&quot;https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4&quot;&gt;少數派小紅書&lt;/a&gt;，感受精彩數字生活 &#127811;&lt;/p&gt;&lt;p&gt;&gt; 實用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版軟件&lt;/a&gt;，少數派為你呈現 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>_東東_</author>
            <pubDate>Sun, 19 Jan 2025 14:37:54 +0800</pubDate>
        </item>
        <atom:link href="https://sspai.com/feed" type="application/rss+xml" ref="self"></atom:link>
        <atom:link href="https://sspai.com/feed" type="application/rss+xml" ref="hub"></atom:link>
    </channel>
</rss>