<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>少数派</title>
        <link>https://sspai.com</link>
        <description>少数派致力于更好地运用数字产品或科学方法，帮助用户提升工作效率和生活品质</description>
        <language>zh-CN</language>
        <managingEditor>contact@sspai.com (少数派)</managingEditor>
        <pubDate>Fri, 24 Jan 2025 08:26:49 +0800</pubDate>
        <item>
            <title>派早报：三星推出 Galaxy S25 系列新机、OpenAI 推出 AI 代理工具 Operator</title>
            <link>https://sspai.com/post/95852</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;三星于 1 月 23 日的 Galaxy 全球新品发布会上正式推出全新旗舰智能手机 Galaxy S25 系列，包括 Galaxy S25、Galaxy S25+ 和 Galaxy S25 Ultra 三款机型。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpltb34temtc0h42g.png&quot; alt=&quot;Riw9blsZeoVS8WxJrjWcO1TFnZc&quot;&gt;&lt;/figure&gt;&lt;p&gt;在外观设计上，Galaxy S25 系列成为三星有史以来最纤薄的 S 系列机型，边框进一步收窄，并采用直屏与直角边框设计。具体尺寸方面，Galaxy S25 为 70.5 &#215; 146.9 &#215; 7.2 mm，重 162 克；Galaxy S25+ 为 75.8 &#215; 158.4 &#215; 7.3 mm，重 190 克；Galaxy S25 Ultra 则为 77.6 &#215; 162.8 &#215; 8.2 mm，重 218 克。&lt;/p&gt;&lt;p&gt;屏幕方面，S25 系列全系搭载第二代动态 AMOLED 显示屏，支持 120Hz 自适应刷新率，并具备视觉增强技术（Vision Booster）和自适应色调。Galaxy S25 和 Galaxy S25+ 分别配备 6.2 英寸 FHD+ 和 6.7 英寸 QHD+ 屏幕，而 Galaxy S25 Ultra 则配备 6.9 英寸 QHD+ 屏幕，带来更出色的视觉体验。&lt;/p&gt;&lt;p&gt;影像方面，全系支持 10-bit HDR 录制，并配备 1200 万像素前置摄像头。后置摄像模组方面，Galaxy S25 和 Galaxy S25+ 采用 5000 万像素广角、1200 万像素超广角及 1000 万像素长焦镜头，而 Galaxy S25 Ultra 则配备 5000 万像素超广角、2 亿像素广角主摄、5000 万像素长焦和 1000 万像素长焦镜头，提供更强大的拍摄能力。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpm5b34temt4ls4n0.png&quot; alt=&quot;V8fqbmagwoyAeGxxUqfc26denob&quot;&gt;&lt;/figure&gt;&lt;p&gt;性能方面，S25 系列搭载专为 Galaxy 量身定制的高通骁龙 8 至尊版移动平台。该芯片组带来 40% NPU 性能提升、37% CPU 性能提升和 30% GPU 性能提升，并支持全新的 ProScaler 屏幕超分辨率算法与 mDNle 屏幕画质增强技术，借助 AI 技术提升图像质量。&lt;/p&gt;&lt;p&gt;电池续航方面，Galaxy S25 配备 4000mAh 电池，Galaxy S25+ 提供 4900mAh 电池，而 Galaxy S25 Ultra 采用 5000mAh 电池。全系支持 45W 有线快充、无线加速充电 2.0，并支持反向无线充电功能。在散热方面，优化后的散热结构采用增大 40% 的散热板，并使用定制导热材料（TIM），热效率提高 20%，确保设备在高强度使用和 AI 处理任务下依然保持稳定。&lt;/p&gt;&lt;p&gt;系统方面，S25 系列运行基于 Android 15 的 One UI 7，深度融合 AI 智能体，带来 AI Select（AI 多截图）、Circle to Search（即圈即搜）、对话式搜索、跨应用执行链等多项智能功能，同时新增 Now Brief 和 Now Bar，进一步优化多任务处理体验。三星承诺，S25 系列将提供长达 7 年的系统和安全更新，支持至 2032 年。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpmdb34temupl77q0.png&quot; alt=&quot;DJu5bBpKOo6oeAxjJalcAw51nwf&quot;&gt;&lt;/figure&gt;&lt;p&gt;在存储配置方面，Galaxy S25 和 Galaxy S25+ 提供 256GB + 12GB 和 512GB + 12GB 版本，起售价为 6499 元。Galaxy S25 Ultra 另提供 1TB + 16GB 高配版本，售价 13699 元。同时宣布国行发布会定档 2 月 11 日，目前新机已经开启抢鲜预订，订单将于 2 月 14 日起发货。&lt;a href=&quot;https://insights.samsung.com/2025/01/22/samsung-unpacked-january-2025-full-replay-and-highlights/&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpmlb34temupl77qg.png&quot; alt=&quot;LRrIbHhX9oufp7x0uuhcqtGxnwb&quot;&gt;&lt;/figure&gt;&lt;p&gt;三星还预览了 Galaxy S25 Edge，这款超薄智能手机将成为 Galaxy S25 系列的新成员。尽管三星尚未公布详细参数，但从现场展示的图片来看，Galaxy S25 Edge 采用银色机身，配备双摄系统，而标准版 Galaxy S25 则采用三摄配置。据悉，Galaxy S25 Edge 机身厚度仅为 6.4mm，比标准版 S25 的 7.2mm 更加纤薄，进一步巩固其轻薄旗舰的定位。三星目前尚未公布 Galaxy S25 Edge 的上市日期及定价信息，预计将在未来几周内发布更多细节。&lt;a href=&quot;https://www.theverge.com/2025/1/22/24349658/samsung-galaxy-s25-edge-photos-unpacked&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;OpenAI 推出 AI 代理工具 Operator&lt;/h3&gt;&lt;p&gt;OpenAI 今日正式推出全新 AI 代理工具——Operator，旨在自动执行各类网页任务，如填写表单、预订服务和在线购物，帮助用户节省时间并提升工作效率。Operator 基于最新的 Computer-Using Agent（CUA）模型，结合 GPT-4o 的视觉能力和强化学习推理技术，使其能够模拟人类操作网页图形用户界面（GUI），实现输入、点击、滚动等交互。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpmtb34temupl77r0.png&quot; alt=&quot;Z2zSbm83Aoax2oxn5facJY3In0b&quot;&gt;&lt;/figure&gt;&lt;p&gt;目前，Operator 作为研究预览版，仅向美国 Pro 用户开放，未来将逐步扩展至 Plus、Team 和 Enterprise 用户，最终集成至 ChatGPT 平台。用户可通过 operator.chatgpt.com 访问该服务，并自定义任务流程，保存常用操作，以提升使用便捷性。&lt;/p&gt;&lt;p&gt;在安全性方面，Operator 采用多层防护措施，包括在输入敏感信息时会自动触发用户接管模式、操作前确认机制，以及恶意网站检测与防御功能，确保用户数据的安全性。OpenAI 还计划开放 CUA 模型 API，供开发者构建定制化的自动化代理服务，拓展技术应用场景。&lt;/p&gt;&lt;p&gt;目前，OpenAI 正与 Instacart、Uber、DoorDash 等企业合作，确保 Operator 能够满足多种业务需求。&lt;a href=&quot;https://openai.com/index/introducing-operator/&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;p&gt;此外，OpenAI 的 CEO Sam Altman 表示，ChatGPT 免费版将能使用 o3-mini 模型，Plus 订阅用户将能获得更多 o3-mini 模型的使用次数。&lt;a href=&quot;https://x.com/sama/status/1882478782059327666&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;佳能宣布推出 4.1 亿像素 35mm 相机传感器&lt;/h3&gt;&lt;p&gt;佳能于 1 月 23 日宣布推出全新 4.1 亿像素的 35mm 全画幅 CMOS 传感器，分辨率高达 24592 x 16704 像素，相当于 24K，约为 8K 分辨率的 12 倍、FHD 分辨率的 198 倍。佳能表示，这款传感器是 35mm 全画幅规格中像素数量最高的一次，主要面向监控、医疗及其他对超高分辨率有需求的工业应用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpmtb34temt4ls4ng.png&quot; alt=&quot;F0pcbtTOAoSASAxmJ8Vcgk09nBd&quot;&gt;&lt;/figure&gt;&lt;p&gt;该传感器采用全新设计的电路架构，并引入新开发的背照式叠层结构，使像素部分与信号处理部分相互交叠。凭借这一设计，传感器的读取速度可达每秒 3280 万像素，能够以每秒 8 帧的速度拍摄全分辨率图像。&lt;/p&gt;&lt;p&gt;此外，佳能还提供单色版传感器，具备「四像素分档」功能，可将相邻四个像素合并为一个，提高弱光环境下的感光性能。虽然整体分辨率有所降低，但单色版传感器可实现每秒 24 帧、1 亿像素的视频拍摄。&lt;a href=&quot;https://global.canon/en/news/2025/20250122.html&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Xbox 游戏主机将支持大于 16TB 的外接硬盘&lt;/h3&gt;&lt;p&gt;微软于 1 月 22 日向 Xbox Insider 用户推出全新的 Alpha-Skip Ahead 更新，带来了多项修复及一项重要改进。自版本号 2502.250120-2200 起，Xbox 主机正式支持容量超过 16TB 的外接硬盘。用户现在可以连接并格式化大容量硬盘，存储更多游戏。&lt;/p&gt;&lt;p&gt;微软特别提醒，超过 16TB 的硬盘需重新格式化后方可在 Xbox 主机上使用。完成格式化后，系统会将硬盘划分为多个分区，用户在已连接设备列表中将看到多个驱动器。目前，微软尚未透露该功能向所有用户推送的具体时间。&lt;a href=&quot;https://support.xbox.com/en-us/help/hardware-network/xbox-insider-release-notes/console/alpha-skip-ahead/2025/01/alpha-skip-ahead-2502-250120-2200&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;索尼宣布 2 月起停止生产刻录用蓝光光盘&lt;/h3&gt;&lt;p&gt;索尼存储媒体解决方案公司宣布，计划于 2025 年 2 月全面停止生产刻录用蓝光光盘（BD-RE、BD-R），并不再推出相关产品。此次停产计划还包括录音用迷你光盘（MD 介质）及 MiniDV 磁带的所有型号。不过，索尼仍将继续为游戏、电影等行业生产商业用途的蓝光光盘，以满足特定市场需求。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpn5b34temupl77rg.png&quot; alt=&quot;LAHSbQv8GoEIVoxjRGncRo11ntd&quot;&gt;&lt;/figure&gt;&lt;p&gt;目前，索尼官方商店仍在销售 11 款 BD-RE 和 BD-R 光盘，消费者可在停产前进行购买。索尼表示，光盘存储市场需求的下降以及数字化存储方案的普及是停产的主要原因。&lt;/p&gt;&lt;p&gt;蓝光光盘自 2008 年正式成为高清光盘标准以来，凭借 405nm 蓝紫色激光技术，支持 YCbCr 色域空间、4:2:0 色度抽样和 8bit 色彩深度，广泛应用于影音娱乐领域。随著东芝于 2008 年退出 HD DVD 业务，蓝光光盘成为主流高清光盘格式，影响深远。业内人士认为，索尼此次退出刻录用光盘市场，进一步表明消费级光学存储正在逐步被云存储和固态存储设备取代。未来，存储行业将持续朝著数字化、网络化的方向发展。&lt;a href=&quot;https://www.cnbeta.com.tw/articles/tech/1473404.htm&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h3&gt;Google 计划引入 VIVE 工程团队加速 Android XR 开发&lt;/h3&gt;&lt;p&gt;Google 近日宣布与 HTC 达成合作协议，将部分 HTC VIVE 工程团队引入其内部。此次合作协议金额达 2.5 亿美元，Google 还将获得 HTC 在 XR 领域的相关知识产权（IP）非独占访问权。根据协议，HTC 仍可继续研发和销售其 Vive 系列 AR/VR 产品，且不受此次合作的限制。这意味著 HTC 在拓展自身 AR/VR 业务的同时，能够借助 Google 的资源进一步推动其技术发展。预计该交易将在 2025 年第一季度完成，尚需获得相关监管部门的批准。&lt;/p&gt;&lt;p&gt;据悉，近年来，Google 在 AR/VR 领域的布局持续深化；在 2024 年 12 月 Google 宣布推出全新专注于 VR 头显和 AR 智能眼镜的平台 Android XR。在昨日举行的 Galaxy Unpacked 大会上，三星展示了其和 Google 正在开发的 Project Moohan 头显设备。&lt;a href=&quot;https://www.androidpolice.com/google-levels-up-its-xr-ambitions-with-another-htc-acquisition/&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/editor/u_/cu9dpndb34temupl77s0.png&quot; alt=&quot;TGcebSvrdoMizlxlsjscvxwkn5b&quot;&gt;&lt;/figure&gt;&lt;h3&gt;微软宣布弃用 Windows 10 / Windows 11 主题包支持页面&lt;/h3&gt;&lt;p&gt;微软于 1 月 22 日发布公告，宣布将删除其官方 Windows 10 和 Windows 11 主题包支持页面，并建议用户直接通过 Microsoft Store 应用商店下载 Windows 主题。&lt;/p&gt;&lt;p&gt;目前，该官方主题包页面将主题分为 13 个类别，分别为：动物、艺术作品（插图）、艺术作品（摄影）、汽车、游戏、节日与季节、电影、自然奇观、地点与风景、植物与花卉、社区精选、品牌主题、全景以及自定义主题。&lt;a href=&quot;https://support.microsoft.com/en-us/windows/windows-themes-94880287-6046-1d35-6d2f-35dee759701e&quot;&gt;来源&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;看看就行的小道消息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;据报道，Valve 计划在 2025 年上半年推出面向第三方掌机设备的 SteamOS 3 分支测试版镜像。初期版本将重点优化搭载 AMD 锐龙 Z1 和 Z2 系列 SoC 的设备，以确保最佳的兼容性和性能表现。同时，该系统在较新的 AMD APU 设备上也能稳定运行，并将在未来逐步扩展对英特尔处理器设备的支持。预计在未来几个月内，Valve 将发布更多关于 SteamOS 3 兼容设备及系统功能的详细信息。&lt;a href=&quot;https://prohardver.hu/hir/steamos_iden_legtobb_kezikonzol_telepitheto_lesz.html&quot;&gt;来源&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;少数派的近期动态&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;少数派年度盘点回归，我们选出了 16 件产品，涵盖手机、平板电脑、智能家居、AI 模型等多个领域，并做成了富有交互感的页面，欢迎&lt;a href=&quot;https://sspai.com/page/2024&quot;&gt;查阅&lt;/a&gt;并&lt;a href=&quot;https://weibo.com/1914010467/Pa0U25do2&quot;&gt;参与微博讨论和抽奖&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;少数派「大家给 Apple 的成绩单」2024 年结果已上线。你给 Apple 的 2024 年打几分？欢迎进入&lt;a href=&quot;https://sspai.com/page/apple_report_2024&quot;&gt;专题页&lt;/a&gt;查阅，还可参与微博&lt;a href=&quot;https://sspai.com/post/95746&quot;&gt;话题讨论&lt;/a&gt;与&lt;a href=&quot;https://weibo.com/1914010467/Paup46FAj&quot;&gt;抽奖&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;假期将至，你的旅途游戏清单列好了吗？&lt;a href=&quot;https://sspai.com/bullet/1736744010&quot;&gt;&lt;strong&gt;来分享一下吧&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;你可能错过的好文章&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&#129511; &lt;a href=&quot;https://sspai.com/post/95666&quot;&gt;辞旧岁迎新春，好吃、好看、好用的年货你都买了啥？&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&#127802; &lt;a href=&quot;https://sspai.com/post/95829&quot;&gt;AFFiNE 体验报告：笔记白板 PPT 三合一，可以玩出什么新花样？&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&gt; 下载 &lt;a href=&quot;https://sspai.com/page/client&quot;&gt;少数派 2.0 客户端&lt;/a&gt;、关注 &lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>少数派编辑部</author>
            <pubDate>Fri, 24 Jan 2025 08:26:49 +0800</pubDate>
        </item>
        <item>
            <title>AFFiNE 体验报告：笔记白板 PPT 三合一，可以玩出什么新花样？</title>
            <link>https://sspai.com/post/95829</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;最近深度体验了一款工具，它叫 &lt;a href=&quot;https://affine.pro/&quot;&gt;AFFiNE&lt;/a&gt;，巧妙结合了文档笔记、白板、演示和 AI 功能，并且在这些功能之间做了很有意思的互通。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/90327c35024dcb416f2fa34d7d519d4d.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;我会分成下面几个部分展开介绍：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;文档的组织和编辑功能&lt;/li&gt;&lt;li&gt;白板的基本元素和功能&lt;/li&gt;&lt;li&gt;文档与白板的交互操作及演示功能&lt;/li&gt;&lt;li&gt;特色 AI 功能&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;文档的组织&lt;/h2&gt;&lt;p&gt;AFFiNE 使用 4 &#160;种方式来组织文档，分别是：&lt;strong&gt;收藏夹、文件夹、标签、精选&lt;/strong&gt;。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/e316aa5cb61d81917dd8fd9a9c05bf2b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;前三种方式很容易理解，文件夹的图标和标签的颜色可以自定义，不支持多层标签；第四个「&lt;strong&gt;精选&lt;/strong&gt;」功能比较有意思，一个精选可以理解为自定义规则的文件夹，当一个文档符合特定的创建时间、标签等情况，就会自动加入这个精选，在追踪某些特定的项目时比较好用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/08df7b31fd140cecb7d4cec7e5f1010c.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;你可以打开多个文档，在顶部用标签栏切换文档，也支持左右分屏显示不同的文档。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/f4c4aed8c62e08274e4627f5980f5ea4.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;单篇文档的顶部是信息区，可以展开查看文档的属性，比如标签、创建者、更新时间等，也可以自己创建新的属性。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/7492b3f13133014e2e0b8020ae291313.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;比较特殊的是「Journal」属性，勾选之后笔记就会变成一篇日记，文档顶部会显示日历，左侧的面板也有一键直达所有日记的快捷入口。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/dac3eb9de975ee44c08fc1486f867b14.png&quot;&gt;&lt;/figure&gt;&lt;h2&gt;文档编辑&lt;/h2&gt;&lt;p&gt;AFFiNE 支持 Markdown 语法，同时与 Notion 类似，以「块」为基本单位，每个标题、段落都是一个独立的块，可以拖拽操作。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/a936653697e2e33ea4ae60762f5d9088.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;它也支持斜杠命令，你可以一键调用标题、代办、引用、列表等块格式。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/3e47a8fdeb50bea21d4fff09373d6a4d.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;把 AFFiNE 当做笔记工具来使用，则可以利用它的双向链接功能。使用&lt;strong&gt;@命令&lt;/strong&gt;引用其他笔记，被引用的笔记以卡片的形式展示在文章里，文档最下方也会显示笔记的反向链接和外链。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/43f0bea491e584058d867c5214bba6ca.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;和 Notion 类似，AFFiNE 也支持 Database 功能，可以实现简单的列表、排序、分组、筛选等操作。不过目前版本功能还相对简单，只支持表格视图和看板视图。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/d71a1caab94b7ddbec30bb610efc53cc.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;文档编辑的整体感受比较丝滑顺畅，UI 细节也很优雅，下面聊聊 AFFiNE 与其他软件最大的区别——&lt;strong&gt;和文档联动的白板功能&lt;/strong&gt;。&lt;/p&gt;&lt;h2&gt;白板的基本元素和功能&lt;/h2&gt;&lt;p&gt;AFFiNE 软件中这个功能叫「无界（Edgeless）」，为了便于理解我们还是先用白板来称呼它。在任何一个文档的左上角，你都可以一键切换成白板模式。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/a3f64ccaea3f6ca1788d29548badc9a5.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;后面我们会聊到，AFFiNE 的文档和白板其实是一回事，它们是同样内容的不同组织和展示形式。这里先来说白板的基础功能，插入形状、文本、手写、图片、PDF 等该有的都有，UI 设计也很优雅。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/9e5e9e7db23c0da54ba4e2a3f2c521ed.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;白板中可以插入思维导图，有多种样式可以选择，这一点很惊喜：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/0b83d7087bee6839a1e3883fa320a578.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;它还提供了很多可编辑的预设模板，如果喜欢这种风格，你甚至可以用这些模板来做 PPT。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/497c508dc439b3e6154bc56e362a39fc.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;元素的框选、编组、对齐、批量修改样式等操作都非常丝滑，哪怕只看白板这一项，AFFiNE 都已经做得很成熟了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/3440b261119128b739f4c1707d331786.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;比较特殊的是「&lt;strong&gt;Note&lt;/strong&gt;」元素，你可以理解为「文档的片段」，它是白板和文档之间发生联动的关键。插入的 Note 和文档中的编辑方式是一样的，同样支持 Markdown 语法、各种块命令，也可以把 Database 插入到白板里。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/f4d0493468280cd9eaa8861410c84712.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;相比其他元素，Note 元素有更丰富的样式，包括边框、阴影、颜色、圆角等，都可以改成喜欢的风格。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/f396325e632472cb99dfe5e3e1bad128.png&quot;&gt;&lt;/figure&gt;&lt;h2&gt;文档与白板的交互操作和演示功能&lt;/h2&gt;&lt;p&gt;接下来就是 AFFiNE 最独特的地方了，前面说 AFFiNE 的文档和白板其实是一回事，它们只是同样内容的不同组织形式。为了说明这一点，我会假设两个不同的场景，以正反两个方向，说明文档和白板之间的转换关系。&lt;/p&gt;&lt;h3&gt;长文拆分演示：从文档到白板&lt;/h3&gt;&lt;p&gt;假设这么一个场景：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你已经用 AFFiNE 写好一篇长文档，或者从其他地方复制一篇文档过来，想用更容易理解的方式展现给他人。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;在左上角，一键从文档模式切换到白板模式，你会看到整篇文档已经作为一张 Note 卡片，被放到了白板上。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/e30f3552203a1187869f6d1018a3d50e.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;想要把这个长卡片拆分，有两种方法。第一种方法是选中卡片，使用 Cutting 模式，把它一刀一刀切成更短小的卡片：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/35062e2c3c135820e70530da34486e56.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;第二种方法是双击编辑卡片，选中一部分段落，直接拖出来，就会生成新的卡片。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/78084fa0305445929914796d15cfa298.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;目前白板里的卡片都来自同一篇文档的切片，你还可以拖入其他的文档到白板里，双击就可以全屏打开，被拖入的文档也会建立双链，会在文档最下方显示它被哪个白板引用了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/192243d0f94f93f27799edd96d877ee2.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;接下来就是白板的常规操作，改变布局、添加各种元素、设置卡片样式、给卡片之间连线等等，很快你就可以把一篇长文拆解成漂亮的演示白板了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/6f9187fb7d42ac7191dd4a21bbb97a94.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;AFFiNE 还真的加了一个还不错的演示功能叫作「&lt;strong&gt;Frame&lt;/strong&gt;」，我理解为切片或者视角。你可以多选几个元素，一键生成一个 Frame，也可以框出一个 Frame 来包住多个元素，每次都会在屏幕右侧边栏里自动生成一个对应编号的 Frame。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/ee875d5c8fe618f4139088ba980d66a9.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;双击某个 Frame，视角就会跳转到对应的位置：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/d8534e2eb262db13c838551395ca1afe.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;还可以在右上角找到 Presentation 按钮，一键打开全屏模式，按照设置好的 Frame 顺序进行演示，这样一块白板就真的变成一份 PPT 了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/b432a585e3cd07c599e6c380f9634d76.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;AFFiNE 免费版就支持把白板公开发布，分享给其他人在线观看，或者邀请其他人加入协作。如果提前设置好了 Frame，那么打开链接的人也可以用使用演示模式。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/2c958acc5e955ab316c8470881487368.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;这篇文章就对应著一块白板，我开启了分享，你可以&lt;a href=&quot;https://app.affine.pro/workspace/213d580e-f4b7-45ec-a765-f9c880cc4664/actpzaIUaGo_9sdOJ8wgC?mode=edgeless&quot;&gt;看看效果&lt;/a&gt;。当然，这篇文章并不是先有了文档再拆分成卡片，顺序正相反，下面就聊聊从卡片「组装」成文章的过程。&lt;/p&gt;&lt;h3&gt;非线性卡片写作：从白板到文档&lt;/h3&gt;&lt;p&gt;虽然文章最终是线性呈现的，但写作的过程其实是混乱的，经常会一边写一边找资料，还会不停地往回看，修改错误、插入新的想法，这些操作会占用非常高的注意力，写过长文的朋友们肯定知道这里边儿的水有多深。&lt;/p&gt;&lt;p&gt;白板的好处是可以先零散著写，看到什么材料就放什么进去，有什么想法就开张新卡，等有了一定数量的卡片，再通过分组、连线，去思考内容之间的逻辑。这样可以很明显地降低写作时的思维负担。&lt;/p&gt;&lt;p&gt;不过使用白板完成内容整理之后，还需要一点点誊抄到文档里，有些麻烦，AFFiNE 就很好地解决了这个问题。白板中的每一张 Note 卡片都有三种不同的状态，分别是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;只在白板中显示（Show in Edgeless Only）&lt;/li&gt;&lt;li&gt;只在文档中显示（Show in Page Only）&lt;/li&gt;&lt;li&gt;在白板和文档中都显示（Show in Both）&lt;/li&gt;&lt;/ul&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/5dc2eb1e79013927570327f07faaa126.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;每次把一张卡片的状态从「Show in Edgeless Only」改为「Show in Both」，就相当于把这张卡片的内容「推送」到了文章里。可以左右分屏进行，有种奇特的爽感。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/8a307093cfe403b9b44c2525f7526de3.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;这样的操作是可逆的，你可以随时把某张卡片调整为其他的显示状态。这样就可以控制哪些内容进入文章，哪些内容留在白板中。注意只有「&lt;strong&gt;Note&lt;/strong&gt;」元素可以进行这样的操作。&lt;/p&gt;&lt;p&gt;按照「推送」操作的顺序，对应的卡片下方会显示蓝色的序号，也就是它们依次出现在文档里的顺序。而其他只在白板中显示的卡片，则会在下方显示一个闭著的小眼睛。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/fdca0b965b34e3b79de27bec31ee0043.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;目前的版本这个功能藏得挺深的，被放到了实验功能的「&lt;strong&gt;高级可见性控制&lt;/strong&gt;」，我联系了开发者才找到它，对方说后面的版本会做比较大的调整。另一个还不太完善的地方是，卡片插入文档的顺序完全取决于改变状态的操作顺序，如果想在过程中调整顺序，要么在白板中重来一遍、依次改变卡片状态，要么就只能去文档里剪切粘贴了。&lt;/p&gt;&lt;p&gt;另外在白板中一旦选择了「Show in Page Only」，那么卡片内容就只会在文档中显示，而在白板中消失，操作也就变得不可逆了。相比之下我想象中更合理的操作是：左右分屏状态，从白板中直接拖拽卡片到文档对应位置，在文档中允许以卡片为单位进行拖拽，改变顺序或拖拽回到白板。&lt;/p&gt;&lt;p&gt;但瑕不掩瑜，目前的功能已经很惊喜。&lt;/p&gt;&lt;p&gt;我用这样的方式组织素材各种素材，写完看了你看到的这篇文章。每个时刻只关注一张卡片，最后再补充内容、组织结构，比线性写作的注意力提升很多，上帝视角去查看整体结构也很舒适。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/ed9ee0c932ed3d4930058dde7e8b83e4.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;此外，白板中用于演示的视角（Frame），或者多个元素的编组，也可以被一键插入到文档中，双击就可以打开跳转，算是打通了文章与白板之间的边界。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/5f357814ba673be6ffb4dfa5a5e2dd6b.gif&quot;&gt;&lt;/figure&gt;&lt;p&gt;文章写完之后，可以打包导出 Markdown 文件，或者与白板类似地公开发布、邀请其他人协作。虽然白板与文档是同一个文件，但分享链接是彼此独立的。&lt;/p&gt;&lt;h2&gt;特色 AI 功能&lt;/h2&gt;&lt;p&gt;现在的文档和笔记工具，不带 AI 功能都不好意思跟人家打招呼，AFFiNE 也不例外。&lt;/p&gt;&lt;p&gt;你可以在文档中随时呼出 AI，做个翻译、取个标题、总结内容、扩写改写等等，都是比较常见的操作了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/7e001b1e3ed1c2216ce224859dc83e23.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;也有一些基于文档和白板交互的 AI 功能，是 AFFiNE 独有的特色。比如选中一段文字让 AI 自动生成一张卡片图：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/5b8069120bd662be4a6ffe4896232c04.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;再比如让 AI 根据卡片内容生成一个思维导图：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/c2b80e649fdebbd2151391a40b271ac5.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;或是干脆让 AI 帮你生成一份 PPT、分好 Frame，按顺序插入到白板和文章里：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/cfb115064578b2f7e67a1d021320a492.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;这些功能目前都还在 Beta 阶段，我也很期待 AFFiNE 未来在文章+白板+PPT 的深度交互中，迭代出更有特色的 AI 功能。&lt;/p&gt;&lt;h2&gt;软件收费和总结&lt;/h2&gt;&lt;p&gt;目前 AFFiNE 在 MIT 许可下开源，免费状态下基本没有功能限制，有 10G 的云空间、单个文件 10MB、以及最多 3 个协作成员的限制，我觉得个人轻度使用已经很大方了。专业版和团队版主要是在这些方面更多地放宽了限制。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/e9968c073592f13ddbf48922e0b094c4.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;另外，AI 功能单独收费，个人觉得在国内的价格有点高。希望考虑推出更适合国内的收费方式和价格。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/22/42c445cca1f94d65edd50a9806094a7b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;截止这篇文章发布，AFFiNE 的 Mac 版本是 0.19.6，可能会在后续版本有比较大的变化。软件尚不到 1.0 正式版，但已经有了不小的创新，尤其是文档和白板之间的打通，很期待后续的迭代。&lt;/p&gt;&lt;p&gt;本文提到的功能，全部以免费版功能为基础进行写作，无利益相关，如果 AFFiNE 看到文章愿意送个专业版啥的，那可是再开心不过了：）&lt;/p&gt;&lt;p&gt;希望能帮到你，有啥问题评论区见。&lt;/p&gt;&lt;p&gt;&gt; 关注 &lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>孙彬</author>
            <pubDate>Thu, 23 Jan 2025 15:00:00 +0800</pubDate>
        </item>
        <item>
            <title>辞旧岁迎新春，好吃、好看、好用的年货你都买了啥？</title>
            <link>https://sspai.com/post/95666</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;虽然每个地区关于春节的习俗都有所不同，但买年货、贴春联却是大部分家庭都会做的事。临近春节，刘德华恭喜你的歌声在各大商超响起，货架上也都摆满了红彤彤、金灿灿的福字、摆件、年货礼盒，网购平台也纷纷开启满减活动、推送春节商品。新的一年你打算买什么年货送给亲戚朋友、选什么装饰布置房间？今年我们邀请了 7 位作者，来聊聊他们选购的年货好物，&#128587; 也欢迎大家在评论区分享你为春节购置的那些好吃的、好看的、好用的有趣年货。&lt;/p&gt;&lt;p&gt;本文不含任何推广性内容，请放心阅读，提前祝大家新春快乐！&lt;/p&gt;&lt;h2&gt;好吃的年货&lt;/h2&gt;&lt;h3&gt;轩妈低糖蛋黄酥礼盒&lt;/h3&gt;&lt;p&gt;@程天冲：我每年春节送年货的原则都很统一：吃的为主。老人们总觉得送吃的「很实在」，同辈的兄弟姐妹们，送吃的也很容易分享。所以今年我还是跟往常一样，在能吃的年货上下功夫。&lt;/p&gt;&lt;p&gt;最常见的春节礼盒就是糕点礼盒。我家上年纪的老人不少，但不是不爱吃太甜的，就是因为身体原因不能吃太甜的。因此，今年我决定送出轩妈的低糖蛋黄酥礼盒。轩妈应该能算是蛋黄酥网红的元老级品牌，大概两三年前我就自己买过尝试。印象中，他们也是比较早推出低糖款的品牌之一。&lt;/p&gt;&lt;p&gt;常规款和低糖款的馅料是一致的，都是蛋黄 + 红豆沙为主，且蛋黄咸度适中，不会出现咸甜不平衡的情况。不同的是低糖款不使用任何蔗糖，跟同类品比起来基本等于是低 GI 食物，能相对减缓食用者的血糖上升速度，对喜欢吃点心但需要控糖的老人来说是个可以尝试的选项（但我看到小红书上有人 challenge 反式脂肪酸，对于选春节礼盒来说这倒不是我在意的点，如果你很在意，请谨慎选择）。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/article/45e435af7ad470c81991cc520969f800.jpeg&quot;&gt;&lt;/figure&gt;&lt;p&gt;和往年不同的是，今年的礼盒还配上了蛇年的葫芦插画（葫芦娃和蛇精的故事魅力在蛇年又有用武之地了），因此外包装上看起来更有特色，配色也从往年的大红转变为了粉红，不论是送亲戚还是送朋友都拿得出手。不过需要注意的是，这款的保质期只有 35 天，切忌下单太早导致春节回家已经过期了……&lt;/p&gt;&lt;h3&gt;东方甄选每日坚果新年年货礼盒（不含果干款）&lt;/h3&gt;&lt;p&gt;@程天冲：送给老人除了好吃，&lt;strong&gt;健康&lt;/strong&gt;也是一个重要的考虑点。这个时候考虑营养均衡可能过了点儿，简单无脑又正确的选择就是每日坚果，所以我就选择了东方甄选不含果干的每日坚果礼盒。&lt;/p&gt;&lt;p&gt;咱们平时吃的每日坚果里的葡萄干、蔓越莓等这些果干，对于需要控糖的老人来说并不是一个好选项，所以不含果干的坚果就是我选择的主要目标。东方甄选这款由腰果仁、扁桃仁、榛子仁、开心果仁、夏威夷果仁以及碧根果仁 6 种坚果组成，果仁也都相对大颗，省去了自己开碧根果和夏威夷果的烦恼。6 种果仁的组合基本上把一天需要的营养物质覆盖全面，不含果干的设计也做到了更加健康。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/article/83d3ef51cb701c4293ff763e11dfcec8.jpeg&quot;&gt;&lt;/figure&gt;&lt;p&gt;我进行了一些简单地对比，市面上的每日坚果基本按月食用的规格制作，也就是每箱 30 袋，每袋的重量也基本都是 25-30g 左右。虽然规格大差不差，但价格浮动区间却有点儿大的吓人，便宜的 69 元一箱，贵的 199 元甚至更高，东方甄选这款 109 元的价格算是适中合理，而且品牌知名度高，送给家里的老人也很安全放心。&lt;/p&gt;&lt;h3&gt;PM 小立方萃芯坚果混合巧克力节日礼盒&lt;/h3&gt;&lt;p&gt;@程天冲：送给长辈们要考虑&lt;strong&gt;实用性&lt;/strong&gt;，送给同辈的兄弟姐妹就没有这么多负担了。过年是个喜庆日子，一年没见的兄弟姐妹们自然是要分享甜蜜和喜悦的，巧克力作为幸福的佐餐再合适不过。&lt;/p&gt;&lt;p&gt;我要推荐一个对国内来说相对小众的、成立于 1995 年的比利时巧克力品牌：Pierre Marcolini，它们家的小立方萃芯坚果礼盒是我今年打算送给兄弟姐妹们的春节礼物。黑巧虽然健康但有些无聊，其他很多巧克力又很容易甜腻，坚果巧克力就刚好能够平衡。我选择的 8 颗款分别为：腰果白巧、肉桂、焦糖牛奶、榛果黑巧、榛果牛奶、开心果、牛轧糖以及扁桃仁，丰富且口味多变。加入了坚果以后，从口感上来说明显清爽了很多，少了很多甜腻感，并且咀嚼以后还能充分感受到坚果的香味，总体来说层次丰富，味道分明。目前，这家店仅在上海开设了一家线下门店，不在上海的朋友只能通过天猫国际购买，经过我的实测，正品无误。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/52e584e8db5b5c79833cc17a7f5c7dac.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;如果你还在头痛送什么给兄弟姐妹和朋友，那不如直接来一盒甜甜的巧克力共度新春吧！&lt;/p&gt;&lt;h3&gt;三顿半蛇年限定零食礼盒&lt;/h3&gt;&lt;p&gt;@拐子狼：我还挺喜欢国产的各类新势力品牌出品的「本职以外的限定产品」的，比如即刻的日历、小宇宙的徽章、茶颜悦色的面包碎、旺仔的保温杯等等。当然，还有所有厂商都爱出的文化衫。这类产品常常比市场上的同类产品更注重品质和细节，虽然也贵上一些，却有著扎实的用料和美丽的外观设计。这回朋友寄来了三顿半的蛇年限定零食礼盒作为过年礼物，我翻了翻价格，如果自己买著吃是不太舍得，不过拿来送礼是很不错。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/003a821129ec7cf4f5405e12dbf644cd.jpg&quot;&gt;&lt;/figure&gt;&lt;h4&gt;肉桂苹果巧克力 12g*8 颗 65 元&lt;/h4&gt;&lt;p&gt;此前在一些文章里听说过喜茶、瑞幸等厂牌的原材料采购故事，好像很有趣，而这款巧克力这款使用了云南昭通的苹果和云南楚雄肉桂，云南可以说是饮品类新势力国产品牌最喜欢探访的目的地之一，想来三顿半在那里应该也有不少货源，这次用云南的苹果和肉桂组合做巧克力，比过去常吃的进口巧克力更有新意且新鲜。&lt;/p&gt;&lt;p&gt;苹果是手工蒸晒后作为果干夹心，所以口感和我一向对巧克力以脆为主的印象很不一样，是弹软的，吃起来还挺 juicy，巧克力附著在上，综合出一种果味的清甜，不像纯巧克力那般甜腻；肉桂更是增加了些许温香，就像在冬天喝肉桂热巧。此外还有「个旧奶白酒酿」的味道可选，不过我的朋友说尝起来口味独特，未必人人都能接受就没寄给我。看三顿半自己的说法是「别样的、具有地方特色的」，有机会我再试试吧。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/article/d7dd7de0ae01e9364808636b2c59b40e.jpeg&quot;&gt;&lt;/figure&gt;&lt;h4&gt;风味烘焙腰果 130g 58 元&lt;/h4&gt;&lt;p&gt;这款 130g 的腰果我硬生生吃了三天，每次都是吃几口就产生了饱腹感。或许是因为制作工艺的问题？看官方的说法，制作过程以香料包裹发酵为主，全程没有添加一滴油，所以能尽量保留腰果的「腰果味」。吃起来也的确脆脆的，伴有焦糖肉桂的香气。我寻思可以用加热的盘子呈上来招待客人，用温度来略微散发肉桂的香气，应该很有过年的氛围。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/article/da14e7ca33767f2b1a0925b0f1557ad7.jpeg&quot;&gt;&lt;figcaption&gt;包装设计很棒，密封方便&lt;/figcaption&gt;&lt;/figure&gt;&lt;h4&gt;浓缩咖啡牛轧糖 12g*12 颗 58 元&lt;/h4&gt;&lt;p&gt;咖啡公司做零食必然少不了咖啡味，不过牛轧糖倒是个我没意料到的载体。三顿半还准备了三种浓度，用不同的颜色加以区分。朋友寄给我的是一杯浓缩咖啡风味的，内含扎实的夏威夷果颗粒，吃起来脆香脆香，咖啡味不多不少符合我的口味，再多估计就有点过分浓郁了。美中不足是这几款零食果腹感都挺足的，牛轧糖也属于一回吃一两颗就差不多的水平，我在朋友聚餐时带出来大家都吃不下几颗，可以说是用料太扎实带来的烦恼吧。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/f3e695c5c1338431af796df5158eca4a.jpg&quot;&gt;&lt;/figure&gt;&lt;h3&gt;上海咸肉、湘西腊肉和菜盘子&lt;/h3&gt;&lt;p&gt;@宛潼：今年过年不回家，和伴侣及朋友一起过，因此打算做全国各地的菜系招待朋友，其中就有来自浙沪的腌笃鲜、来自湖南的湘西腊肉和来自中山的脆肉鲩（huan）—— 买这些倒也没问朋友爱不爱吃，主要是自己想吃啦。&lt;/p&gt;&lt;p&gt;为了做这些菜，我提前买好了上海咸肉和湘西腊肉。上海咸肉基本上开袋简单清洗之后就能切菜备用，放锅里先加姜蒜末炒炒，加入热水和排骨后炖个四十分钟，炖出来的汤不需要加任何调料就简直比牛奶还要白。而湘西腊肉由于盐下得更重且有烟熏的过程，因此需要先下锅煮上半小时以上去去灰尘和盐味，然后再切片备用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/98fd8fb817fd0c8039ddb820fc27d43d.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;除此之外，作为粤北的客家人，我也怀念家乡的味道，因此准备了一些梅干菜来做梅菜扣肉和菜干煲。不过，梅菜扣肉虽然好吃，但著实是个大工程，不仅要炸肉，还要蒸两个小时以保障肉的软烂入味。所以为了节省时间，我打算提前先把肉炸好梅干菜炒好，然后再码好包上保鲜膜放冰箱，等除夕夜直接放进高压锅压上 40 分钟。&lt;/p&gt;&lt;h2&gt;好看的装饰&lt;/h2&gt;&lt;h3&gt;可爱蛇蛇静电窗花、挂饰&lt;/h3&gt;&lt;p&gt;@Irisleilei：新年新气象，为了增添喜庆的气氛，但又不能落俗，购置了一些价格美丽但非常可爱的蛇年周边家居装饰，让家里充满仪式感。为了搭配的统一性，挑选了一下，选中自己喜欢的风格集中在一家淘宝店购买。&lt;/p&gt;&lt;p&gt;静电窗花贴是我的首选，无胶无痕，不仅方便爱护家具，还可反复使用，是害怕留痕的强迫症家居星人、懒人手残党的福音。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/19/d970c1b26099b084237e6877be539ec9.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;静电贴依靠静电吸附，撕下窗花直接贴附在玻璃上，用卡片挤压贴膜气泡，贴歪了也可以反复调整，手残党省去一次贴成功的烦恼。但还是要避免粘贴时间过久，仍然会留下痕迹，节日后及时撕下，和普通日子区分一下，也更能凸显节日的氛围。并且静电贴样式多、价格便宜，小价格买来新春氛围的好物。&lt;/p&gt;&lt;p&gt;喜庆氛围要一眼看到。由于家里房间的窗户并不靠南，并且常年百叶窗拉著，玻璃窗没有适用的机会。于是我索性直接贴到阳台落地大玻璃去了。阳台朝南，采光很好，并且阳台恰好正对入户门，每天一进门就能看到窗花，过年氛围拉满。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/19/283c8c5fe31c51a7ba2edd54080a14fc.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;大家也可以尝试拓宽窗花的适用场景，除了落地玻璃，还可以贴到镜子上，可以适用的场景有很多，大可发挥脑洞。&lt;/p&gt;&lt;p&gt;除了静电窗花。我还购买了同系列的新年挂饰，可以点缀家里的绿植，氛围感马上溢满。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/19/e4831c39b54a53e22fa86f0a6895ab9e.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;淘宝有很多专门做新春配饰的店铺，购买时可以尽量保持风格统一性，搭配更好看。一年之计在于春，小小家居配饰，大大增加家里新春氛围，开启新鲜又元气的 2025。&lt;/p&gt;&lt;h3&gt;蛇年台历、日历&lt;/h3&gt;&lt;p&gt;每年选购日历属于仪式感的一部分。选择带有蛇年元素、自己喜欢图案的日历，整张 12 月日历使用无痕贴贴在了家里比较醒目的位置，提醒自己时间的流逝。枱历放在书房，主要用来辅助工作记录 TO DO LIST。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/19/9e21c2f8005bd2823f3d5321a5658879.jpg&quot;&gt;&lt;/figure&gt;&lt;h3&gt;蛇年对联&lt;/h3&gt;&lt;p&gt;@Voyager_1：蛇这个属相国人一般称之为小龙，一方面如果取真实蛇的造型难免会觉得吓人，另一方面也让人我们对蛇的感觉更加亲切。电商平台上蛇年的对联等产品都会尽量将蛇设计得可爱亲人，我们挑选的这款对联个人觉得尤其可爱。横批是一条蛇宝宝横穿，福字和上下联则设计了蛇宝宝抱福、蛇宝宝顶橘和蛇宝宝祈福 &#128591; 的姿态，憨憨的十分可爱。&lt;/p&gt;&lt;figure class=&quot;ss-imgRows&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/eb6a4b329b5cb3f91777dc479435c5fd.jpg&quot; alt&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/db79dad72f05331839c3eaede67df390.jpg&quot; alt&gt;&lt;/figure&gt;&lt;h3&gt;Pingu 新春福盒、发财喜乐挂饰&lt;/h3&gt;&lt;p&gt;@Lotta：随著近些年各大文创 IP 的兴起，再加上装饰新家的热乎劲，今年春节我决定买一套较往年更有新意、也更合自己心意的节日装饰。&lt;s&gt;但秉承著勤俭的家风、环保的理念，&lt;/s&gt;我特意没有选择时效性更强、拥有蛇图案的装饰，这样不易损坏的室内挂饰和静电贴，每年都可以拿出来循环使用。就这样，在闲逛淘宝时，pingu 联名的可爱春节装饰映入眼帘，于是我就趁著满减活动买下了 pingu 的新春福盒和发财喜乐挂饰。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/e065abc94bdf53b8a924a7a4fe88c2c3.png&quot;&gt;&lt;figcaption&gt;新春福盒产品图（左）发财喜乐挂饰（右）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;新春福盒包括一个手提礼盒、1 对春联和对应的横批福字，还有 1 张财运福字、5 张小福字、2 对吉语春条、2 个门挂和 3 张静电贴窗花，图画中的小企鹅形态各异，可爱又喜庆。礼盒中还附赠了无痕胶，无论是送礼还是自用都很合适。这下不仅房屋大门有了春联，房间门也可以贴上吉语春条和小福字了，窗户玻璃则是静电贴的主场，等花市开了再抱回来一盆小小金桔树，已经开始搓手期待春节时喜气洋洋的场面了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/b516775a748eadd28fba8db109a8319e.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;发财喜乐挂饰由单面图案的卡纸、挂绳、流苏和小铁环组成，需要亲自动手用小铁环将它们连接在一起，手作难度为 0，几分钟就搞定了。现在被我挂在工作室的洞洞板上，一进门就能看到 pingu 在烟花和灯笼下一边快乐地手舞足蹈，一边抱著鱼祝我发财。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/8d0b5dc4b09cc75ba9326aa2a25df864.png&quot;&gt;&lt;figcaption&gt;发财喜乐挂饰（左）新春福盒门挂（右）&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;今年不少 IP 都推出了春节装饰礼盒，不妨选个自己喜欢的，让新的一年换上新气象！&lt;/p&gt;&lt;h3&gt;宝可梦春联贴纸&lt;/h3&gt;&lt;p&gt;@Lotta：周末在名创优品闲逛时，在货架上看到了宝可梦主题的春联贴纸，看著皮卡丘穿著中式服装的可爱模样，想著 8 元两张的价格也不算太贵，就为今年的春节装饰又添上一员。至于贴在什么地方，买下来再想也不迟嘛。&lt;/p&gt;&lt;p&gt;这种小尺寸春联贴在门上会有些过于「秀气」，但如果是猫窝、狗窝、娃屋的门口就再合适不过了。由于我家没有养宠物，兜来转去，最后发现扫地机器人的基站竟意外地合适，想来又怎么不算是一种电子宠物的小窝呢（&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/58d362749fe9b37aa29fd17c2dddbaa5.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;可爱又有节日气氛的贴纸装饰似乎是很容易冲动消费的商品，常常抱著「总有地方可以贴」的心态买下，又不想随便贴在哪里折损了它可爱的模样，反而慢慢变成了一摞摞压箱底的「好看废物」，比起「为心爱之物创造需求」，不如还是好好考虑，按需购买吧。&lt;/p&gt;&lt;h3&gt;洒金瓦当对联纸&lt;/h3&gt;&lt;p&gt;@宛潼：好久没有拿起毛笔了，刚好趁著快过年的契机，去买了一些对联纸、一瓶金墨和一瓶黑墨，准备给朋友们写写对联和挥春。在我看来，送朋友对联其实要比送吃的喝的更好，我可以直接喊朋友来家里，按照她们想要的内容给她写一份独一无二的对联，不仅能拉近友谊关系，还更能在当下感受到非凡的年味。&lt;/p&gt;&lt;p&gt;不过和传统普通的对联红纸不同，我选购的是带有洒金和瓦当的对联纸。所谓洒金，就是在纸面撒上了以黄铜粉、金色颜料为主的金点，在不同角度看时，会有种星星在闪耀的效果，让对联看起来更加华美。而红金搭配也更有喜庆和正式的感觉，作为一份心意送给朋友也更合适。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/423bcd755d0c075a8af9a8d08f096afc.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;瓦当则是指对联纸上还印有七个瓦当图案，对应了对联上七个字的位置。瓦当是传统中式建筑房顶中的圆形或半圆形瓦片装饰，图案都华丽精美。后来，人们也把这种图案也印在纸上，不仅让纸张看起来更加贵气，但最重要的还是方便在书写时定位。&lt;/p&gt;&lt;p&gt;也正是因为这些装饰，这些对联纸的售价可「不菲」，平均一对的价格接近 5 块钱，和普通的红纸相比几乎翻倍。但想到这些是贴在自己家门上和送给朋友的，多花点钱买个自己和朋友开心，倒是也能接受了。&lt;/p&gt;&lt;p&gt;唯一的问题在于，这些东西太沾手了，每次写完碰完都像是给手指头画了个红运眼妆。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/3ddf1b96f85a9d567988a435c12fb229.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;墨汁就不多赘述了，就是从小用到大的一得阁。不过这次发现文房四宝店里还有卖金墨，就顺带买了一瓶回来，可以用来写一些「福」「富」「钱」之类的单字，感觉也蛮好玩的。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/24deab3a7f4afcb22dd897d4aa6b45ed.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;值得一提的是，回家的路上还顺带买了瓶二锅头，用来兑墨汁——这是以前一个书法老师傅传授给我的秘籍。而且这个二锅头是有讲究的，得 56 度以上。在写对联之前滴上几滴到墨汁里，不仅能把墨汁晕开，还能加快墨汁干透的速度，避免笔画弯折或粗的地方残留的墨水在移动对联纸时流到纸上。更好玩的是，在写的过程中，还能飘著满屋子的白酒味。&lt;/p&gt;&lt;h3&gt;泡泡玛特金蛇贺岁&#183;新年好牌积木盲盒&lt;/h3&gt;&lt;p&gt;@潘誉晗：今年我所购买的新春年货，是泡泡玛特家的积木盲盒「蛇年贺岁款：金蛇贺岁&#183;新年好牌」系列。系列总共有 12 款常规款，每一款都来自于泡泡玛特自家的经典 IP ，分别是 PUCKY 的「剪纸集」、 ZSIGA 的「观戏园」、 SWEET BEAN 的「元宝阁」、LABUBU 的「跃龙门」、 MOLLY 的「年味铺」、 SKULLPANDA 的「缘结坞」、 HIRONO 的「听街雪」、 DIMOO 的「祈愿池」、 CRYBABY 的「纸鸢坊」、 HACIPUPU 的「鼓乐堂」、KUBO 的「花灯亭」、 PINO JELLY 的「吹糖人儿」。此外，系列另有 2 款隐藏 SKULLPANDA 的「桃源茶室」、 HIRONO 的「辞旧岁」，以及 1 款特别版， ZSIGA 的「观戏园」。&lt;/p&gt;&lt;p&gt;这款的单个售价是 99 元 。如果集齐一盒，就可以得到一副完整的「十三么」，所以在官方在宣传这个新系列时，提到的关键词也是：「很长。」&lt;/p&gt;&lt;figure class=&quot;ss-imgRows&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/9f3574e41d295c9e92cdd1e97d72ee25.jpg&quot; alt&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/aa2f8eaebe60b2fb3162b6788464ebc4.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;虽然时常会提醒自己不要盲目地陷入各种消费陷阱，但说实话，当你走进泡泡玛特的旗舰店，看到摆出来的潮玩、以及店员们无比热情的「蛇年出新品，买一个吧」，家里本就有十几套泡泡玛特的我，确实很难抵住这份诱惑。于是当我回过神的时候，已经拿著一个盲盒出现在收银台了。&lt;/p&gt;&lt;p&gt;我个人喜欢 HIRONO 和 DIMOO 系列，这次他俩的发挥也很对我的审美，只是很可惜，最后我抽中的是抽中的是 HACIPUPU 家的「鼓乐堂」，不过这款也不难看。&lt;/p&gt;&lt;p&gt;泡泡玛特家的积木不难拼，按照不同的部分分成了几个小包，塑料袋上写上了序号，说明书也标注得非常清楚。即使是像我这样对动手能力没有太大信心的人，大概不到五十分钟，也拼完了。拼完后把附赠的 IP 牌插到在积木后的卡槽中就可以了，而且这次的 IP 卡牌，还有与盲盒所相配的背景图案。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/019693a2a5d8e65d4600fad3f9a53c9d.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;虽然我这次只买了一盒，但大红的配色，加上一些很中国的元素组合在一起，所以单个摆放起来，还是很喜气洋洋的～&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/5e4b622b3ef5d5b100a39d6eb50f256c.png&quot;&gt;&lt;/figure&gt;&lt;h2&gt;好用的厨具&lt;/h2&gt;&lt;h3&gt;回老家能用上的一口锅&lt;/h3&gt;&lt;p&gt;@Voyager_1：每年春节回老家，都是一场味蕾的美妙享受，于是春节前几天总是胡吃海喝把一年来没吃到的家乡滋味都吃个遍，到后半段亲戚家循环一套菜色的时候，就会开始怀念起城市里的烤肉、烤鱼、火锅……就像时尚是一场循环一样，人类的胃对食物的期待不过也是一场「美味」循环，吃多家常菜偶尔也会想要「复古」一下。&lt;/p&gt;&lt;p&gt;今年果断把给家里小辈带零食大礼包的想法先搁置了，先把自己的「年货」采买完毕。结果就是逛山姆的时候看到了这口我们觉得非常合适带回家使用的多功能电热锅。一来过年期间，全家人备好食材餐桌烤肉会很方便（过年的菜很容易吃腻的）；二来我们回城后，家中长辈拿来做个小火锅、煮粥、复炸春卷、藕饼等场景也很实用。临近春节，以防质量问题我们已经提前用烤肉尝试了一番，使用体验非常不错。之前我们已经有一口圆型的象印多功能锅，现在这款松下的方形使用起来更加方便，而且容量也完全够用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/270eedb04989e5e77c19b07342c57780.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;不过，吸引我们的当然还有这款小家电的颜值，高一点的锅可以用来蒸包子，矮一点的锅则可以用来煎炸烤。如果春节期间想送人礼物，挑个精致实用的厨具也是非常不错的选择。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/16/0b2abd2c1af1c4785c3d7c6011e8ccd6.png&quot;&gt;&lt;figcaption&gt;图源：山姆官方评论区&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Staub 的六件套碗&lt;/h3&gt;&lt;p&gt;@Kasper：添新碗，置新箸，来年米谷停无住。每当新年临近，家里总会添置一些新的东西，象征著辞旧迎新，迎接更好的运势。小时候，家里过年，爸妈总是在这时换上一套新的碗筷，寓意新年有个好彩头。这份仪式感，直到今天还刻在我的记忆里。今年算是第一次在我自己的家里过年，该有的仪式感必须拿捏到位。于是，在逛山姆的时候，特地挑选了几件兼具实用和美观的餐具。&lt;/p&gt;&lt;p&gt;Staub 是一家法国的家居品牌，大家最熟悉也是最经典的产品应该就是他家的铸铁锅了。经典的法式设计和高质量的工艺，使得他家的铸铁锅成为了厨房里的「神器」。而他家的这一套碗，则继承了品牌一贯的精致与耐用。碗的设计基本上沿袭了他家铸铁锅的设计，而颜色上也和他家的铸铁锅相得益彰。无论是盛汤、米饭或者是小菜，这个尺寸的碗都非常的合适。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/19/b17c6c3b02b05d0d9e9f5d58e2fcb24e.png&quot;&gt;&lt;/figure&gt;&lt;h3&gt;TR Gallery 深盘六件套、MM 松木纤维筷&lt;/h3&gt;&lt;p&gt;@Kasper：这一套深盘的设计相对简约，没有过多的装饰，但也正是这样极简的风格，能够让它在餐桌上和其他餐具完美搭配。白色的釉面质地，和现在家中的盘子唯一能区别开来的就是它的深度，适合盛放一些稍微带汤汁的菜品，比如炖鱼、炖肉等。&lt;/p&gt;&lt;p&gt;MM 抗菌松木纤维筷最大的特点就是它的质感，与市面上常见的光面的筷子不同，它有一种非常细腻的磨砂质感，握在手里非常舒服，而且磨砂质地带来的摩擦力更加容易操作。加上有抗菌工艺以及最重要的可以进洗碗机的特性，让我觉得这幅筷子可以用的久一些。值得一提的是，它整套筷子里面还有两副加长筷，方便做菜以及作为公筷使用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/19/article/af77a118103c402c473f9d80b9155330.jpeg&quot;&gt;&lt;/figure&gt;&lt;p&gt;关联阅读：&lt;a href=&quot;https://sspai.com/post/86297&quot;&gt;年货买了啥？分享 12 件好吃、好玩、好用的春节好物&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&#128587;：你有为春节采购吗？有什么好吃、好玩、好用的东西，欢迎在评论区一起分享。&lt;/p&gt;&lt;p&gt;&gt; 关注&#160;&lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的&#160;&lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>少数派编辑部</author>
            <pubDate>Thu, 23 Jan 2025 11:01:37 +0800</pubDate>
        </item>
        <item>
            <title>深入《无边记》：一种革命性的知识管理体系</title>
            <link>https://sspai.com/post/95775</link>
            <description>&lt;article class=&quot;normal-article&quot;&gt; &lt;div id=&quot;article-title&quot; class=&quot;article-body&quot;&gt;&lt;div class=&quot;articleWidth-content&quot;&gt;&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;传统的知识管理体系实在是太无聊了。&lt;/p&gt;&lt;p&gt;无论基于传统笔记的《Evernote》类，还是基于区块的《Notion》类，抑或基于 To-do 的《Todoist》类工具，它们都要涉及很复杂的素材分类和整理环节。当我看到某些碎片化的小东西，比如一张图片、一段文字、一个链接等时，我更希望自己可以快速收集，统一处理，不要花时间在素材归类和整理上。&lt;/p&gt;&lt;p&gt;直到我最近研究了《无边记》（Freeform），一张无边的画布，一个无界线的收纳盒，才在我的眼前展开。&lt;/p&gt;&lt;p&gt;你将会在本期视频中看到：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;一套基于《无边记》的、全新的知识管理体系&lt;/li&gt;&lt;li&gt;摆脱了传统文件结构的素材收集方式&lt;/li&gt;&lt;li&gt;基于白板和位置的、更符合直觉的素材整理方案&lt;/li&gt;&lt;li&gt;有趣的拍摄手法&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;观看方式&lt;/h2&gt;&lt;p&gt;你可以直接在站内播放，也可以在以下平台中选择你更喜欢的那个，观看影片的高清完整版：&lt;/p&gt;&lt;p&gt;&gt; 关注&#160;&lt;a href=&quot;https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4&quot;&gt;少数派小红书&lt;/a&gt;，感受精彩数字生活 &#127811;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div class=&quot;article-author articleWidth-687&quot;&gt;&lt;div class=&quot;el-row&quot;&gt;&lt;div class=&quot;el-col el-col-11 center&quot;&gt;&lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;/article&gt;</description>
            <author>张奕源 Nick</author>
            <pubDate>Wed, 22 Jan 2025 17:00:10 +0800</pubDate>
        </item>
        <item>
            <title>学生偷懒用 AI 完成作业，老师该怎么办？</title>
            <link>https://sspai.com/post/95749</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt;&#160;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/matrix&quot;&gt;Matrix&lt;/a&gt;&#160;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&#160;&lt;/p&gt;&lt;p&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果我们用昨天的方法，教今天的学生，我们就剥夺了他们的明天。&lt;/p&gt;&lt;/blockquote&gt;&lt;h2&gt;&lt;strong&gt;疑惑&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;作为教学评价的必要手段，老师们经常需要布置作业或课程结课论文。然而，如今不少学生开始借助人工智能（AI）来完成这些任务，这让老师们颇为头疼。&lt;/p&gt;&lt;p&gt;我有个朋友前两天就遇到了这个问题。&lt;/p&gt;&lt;p&gt;他教的课程一直要求学生在期末提交一份与课程相关的案例报告。以前他批改作业时，感觉挺轻松愉快，因为一眼就能看出学生写得是否认真。但今年他发现，有些作业写得特别好，好到让他怀疑是不是用 AI 写的。&lt;/p&gt;&lt;p&gt;这就让他很为难：如果这些作业真的是 AI 写的，那给他们高分，对那些自己认真写（但是质量稍微低一些）的同学是否不公平？但如果直接因为文笔流畅就判断说学生「你这是 AI 写的」，直接给低分，似乎也不太合适。&lt;/p&gt;&lt;p&gt;于是，他问我一个很实际的问题：有没有工具能准确检测出 AI 写的东西？如果有，那评判时就有依据了。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;检测&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;AI 查重工具当然是有的。早在两年前 ChatGPT 刚出来时，OpenAI 就推出了一款官方的 AI 检测工具。但有趣的是，2023 年还没过完，他们就把这个工具下线了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/b8b25513052868d46e72d4d317fd3b87.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;至于原因，很简单：这种工具无法做到百分之百准确，可用性非常有限。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/889ccfaeb0bc6de3b400f7e16431575a.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;如果你了解 AI ，或许会感到困惑——无论是情感分析还是图片分类任务，AI 大都无法做到 100% ，为什么这些任务上 AI 就被当成有用，但 AI 检测任务就定如此苛刻的标准？&lt;/p&gt;&lt;p&gt;这是因为，AI 检测任务哪怕错一次，都会带来严重后果 —— 如果一个学生非常认真地写了一篇近乎完美的作业，结果被 AI 检测工具判定为「疑似 AI 写作」，那可就糟糕了。这不仅对学生不公平，还会传递一个错误的信号：写得越好越容易被冤枉为「滥用 AI」。&lt;/p&gt;&lt;p&gt;这样一来，学生可能会为了避免被误判而故意主动降低写作质量，以保障 AI 检测率在阈值下方。这显然不是我们教学活动想要的结果。&lt;/p&gt;&lt;p&gt;另一方面，AI 检测的原理究竟是什么？我们鼓励学生在写作业、学期论文甚至毕业论文时，展现出原创思维和深刻思考，这才是我们最看重的。然而，AI 检测工具的&lt;strong&gt;原理并不是检测原创性&lt;/strong&gt;，而是通过某些特征来判断最终的结果文本是否由 AI 生成，这与我们之前使用的查重系统完全不同。&lt;/p&gt;&lt;p&gt;传统查重主要检测文本与已知成果之间的重合度，即是否存在大量与他人已经产出结果相似的内容，即使你换了说法也能被发现。而 AI 查重则是&lt;strong&gt;基于概率分布的检测&lt;/strong&gt;方式。&lt;/p&gt;&lt;p&gt;生成式 AI 的工作原理是：根据前一个词预测下一个词，逐步生成完整内容。AI 查重就是检测这种生成模式 —— 如果每个词后面出现的词都是高概率的，就判定为 AI 生成。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/48cd14dad603b38735169d50585be621.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;这种检测方式存在两个主要问题：&lt;/p&gt;&lt;p&gt;首先是&lt;strong&gt;舍本逐末&lt;/strong&gt;。假设你辛苦收集数据、提出原创分析方法，只是用 AI 润色文字以消除技术性错误，这本来是被学术界认可的。但 AI 查重会认为这是 AI 生成，可能给出 90% 以上的 AI 使用率，导致不公正的惩罚。&lt;/p&gt;&lt;p&gt;其次是&lt;strong&gt;误判问题&lt;/strong&gt;。有些人写作水平高，写出的文章自然流畅，也可能被误判为 AI 生成。这种误判在学术评价中会造成严重后果。&lt;/p&gt;&lt;p&gt;所以目前的 AI 检测工具只能作为参考，绝不能作为评判依据。某名校的规定也提到，只有当检测结果达到一定阈值时，会给学生警示要求修改，而不是直接判定为抄袭或作弊。再强调一遍，AI 检测任务上，&lt;strong&gt;误判的后果可能比漏判更严重&lt;/strong&gt;。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;保守&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;前几天我作为教学督导和学院的青年教师座谈，讨论学生使用 AI 写作业的问题时，一位年轻老师提到，他的做法是让学生手写作业练习，不允许参考任何资料。这种方法类似于传统的闭卷考试。对于记忆性或理论性较强的课程，这种做法或许还说得过去。但问题在于，如果课程本身是动手实践、上机编程的综合实验课，最后却让学生坐在那里填空、选择、手写大题，这种做法就显得有些奇怪了。可他要教的，恰恰是一门综合实践类课程。&lt;/p&gt;&lt;p&gt;在《预测之书》中，沈祖芸老师引用了教育家杜威在 100 年前说的一句话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;如果我们用昨天的方法，教今天的学生，我们就剥夺了他们的明天。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我最近才看到这句话，并且深以为然。在那次讨论会上，我向这位年轻老师表达了类似的观点。&lt;/p&gt;&lt;p&gt;我说，我们教育的目的是&lt;strong&gt;让学生成为更好的自己&lt;/strong&gt;，&lt;strong&gt;而不是让教学变得轻松&lt;/strong&gt;。学生们毕业后，未来的工作环境中，与 AI 协作可预见是必然的。我们教的课程与编程和系统开发密切相关，学生将来与 AI 协作的能力可以算作是「吃饭的技能」。如果我们现在告诉他们学习、练习不能使用 AI，那么他们所学的内容与未来的工作之间就会存在&lt;strong&gt;巨大的鸿沟&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;对编程任务来说，GitHub Copilot, Cursor 和 Winsurf 这样的工具已经取代了记忆和查找 API，手工编代码的过程。这些工具在推理能力上还有争议，但「编程不再需要记忆那些 API 和开发文档」却已经是业界共识。如果我们今天还让学生背诵、手动默写这些内容，默写得准确就能得高分，这对他们将来的工作和能力培养又有什么帮助呢？&lt;/p&gt;&lt;p&gt;这番话让那位年轻老师陷入了沉思。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;对轰&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;当然，教学实践中也早有人尝试了更激进的做法。去年 12 月在珠海的数据智能会议上，有老师提到了「魔法对轰」的现象 —— 学生用 AI 写程序并直接提交，助教则用 AI 来检测和评分。&lt;/p&gt;&lt;p&gt;结果有一次，学生发现自己的程序明明是对的，却被 AI 判错了，跑到老师这边申诉。助教检查后发现，确实是 AI 当时「犯傻」了。&lt;/p&gt;&lt;p&gt;这种情况让人哭笑不得，双方谁都没有对教学活动真正负责 —— 学生不自己写，助教不自己判，两个 AI 在那里「沟通」。这到底有什么意义呢？&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/171310fe3a87cad5bee2295bbab62219.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;h2&gt;&lt;strong&gt;思路&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在面对学生作业提交的问题时，我们需要&lt;strong&gt;采取新的策略&lt;/strong&gt;。传统的只让学生提交论文或报告文稿的方式已经不再适用。&lt;/p&gt;&lt;p&gt;过去，提交的文稿质量体现著学生尽力完成任务时的能力水平，但现在情况完全不同。学生可能完全依赖 AI 生成海量内容，看似有板有眼，但没有进行任何深入思考或学习。&lt;/p&gt;&lt;p&gt;为了应对这种情况，我建议采取以下措施：&lt;/p&gt;&lt;p&gt;首先，在学生提交作业后，&lt;strong&gt;必须进行现场答辩&lt;/strong&gt;。从 2023 年开始，我每个学期期末都会这样做。学生需要解释他们的工作内容、选题意义、选择的具体方法或技术路线的原因，并回答老师（也就是我本人）和同学们（如有，一般没有）当场提出的问题。&lt;/p&gt;&lt;p&gt;当然了，千万不要把这件事弄成走过场。仅仅让学生讲述是不够的，因为他们的讲稿也可能由 AI 生成。只有通过提出关键问题，并且查看学生的回答反应，我们才可以判断学生是否真正投入了工作，进行了深入的思考。&lt;/p&gt;&lt;p&gt;其次，我们不但不能完全屏蔽 AI ，甚至还应该要求学生&lt;strong&gt;必须使用 AI 来辅助完成作业&lt;/strong&gt;。以今天很多大模型近乎免费、甚至已经免费的价格，这不会给学生造成多大的额外经济压力。这话其实多余，因为如果学生们真的用不起 AI ，咱们也没有必要探讨今天的主题了，不是吗？&lt;/p&gt;&lt;p&gt;让学生使用 AI 辅助完成作业和练习的目的，是确保学生在这个过程中与 AI 协作，并且注重发挥自己（人）的作用。AI 可以提供一个初步结果，但学生需要对其进行&lt;strong&gt;理解、消化和判断&lt;/strong&gt;，&lt;strong&gt;找出问题并提出改进方向&lt;/strong&gt;。通过这种方式，学生需要与 AI 进行多次交互。&lt;/p&gt;&lt;p&gt;提交的时候也不能只是呈现最终结果，而要完整展示他们如何从 AI 回答的初始版本，反馈迭代，推进到更完善的版本。这个结果应该体现学生的专业品味和判断力，展示他们认为合适的质量水平究竟如何。通过这种方式，我们可以更好地评估学生对专业知识和技能的理解深度。&lt;/p&gt;&lt;p&gt;这种方法不仅能督促和帮助学生真正动脑筋，还能让我们更好地识别他们在工作中实质的参与程度。与其单纯依赖检测工具，不如采用这种引导性的方式，「堵」不如「疏」嘛。&lt;/p&gt;&lt;p&gt;行文至此，我知道你早已按捺不住了。别著急，我知道你想问什么。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;负担&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;这里有一个重要的问题需要讨论，那就是&lt;strong&gt;工作量&lt;/strong&gt;。想象一下，原本只需要学生提交一份作业，现在却要求他们展示多个版本的迭代过程。这意味著老师需要审阅的内容至少是原来的 3 到 6 倍。此外，老师还需要与每位学生进行个性化问答，针对每个问题提出关键性的反馈和评价。这样的工作量对于老师来说无疑是巨大的，尤其是如果一学期要教授多门课程，老师可能会感到不堪重负。&lt;/p&gt;&lt;p&gt;那么，如何解决这个问题呢？&lt;/p&gt;&lt;p&gt;「解铃还须系铃人」，我们可以利用 AI 技术来减轻老师的负担。&lt;/p&gt;&lt;p&gt;首先，AI 可以帮助老师处理学生提交的不同版本作业。其次，AI 可以记录学生的回答过程，无论是通过录音还是录像，这些记录都可以被转换成文本，便于后续的评审和分析。例如，过去两年中，我在本科课程中就要求助教全程录像，这不仅作为评分依据，也便于解决可能的争议。以后，我会更加深度挖掘这些资料。&lt;/p&gt;&lt;p&gt;当然，有人可能会质疑，这是否又回到了「魔法对轰」的低层次使用 AI 的方式。&lt;/p&gt;&lt;p&gt;不。&lt;/p&gt;&lt;p&gt;问题的关键在于我们如何使用 AI。如果只是简单地让 AI 评判作业的对错或打分，那确实是不够的。我们需要的是让 AI 辅助老师进行更深入的评估和反馈，而不是完全替代老师的角色。&lt;/p&gt;&lt;p&gt;教学评价是教师的一项重要职责，当然不能完全外包出去。我们可以借助 AI 来辅助分析，比如让 AI 比较不同版本之间的差异，找出质量提升的具体体现，并识别出一系列关键问题。这些 AI 分析出的问题，可以作为教师向学生当场提问时的参考（因为完整的报告是在展示之前就已经提交的），帮助教师更好地了解学生的理解深度。&lt;/p&gt;&lt;p&gt;接下来，教师可以根据自己的专业和具体课程要求，设计一个结构化的提示词，让 AI 从学生的回答中提炼出关键点，并生成一份清晰的报告。通过审视这个报告，教师可以判断学生的回答是否切中要点。让 AI 以标准化的方式呈现文本中的关键点，可以帮助教师更好地对回答质量进行判断。&lt;/p&gt;&lt;p&gt;这里的关键是，不要依赖 AI 来评判学生的对错或打分，因为 AI 的评分可能完全不靠谱。但是 AI 把信息从一种形式（学生现场口语化的回答），转换成另一种形式（梳理逻辑之后的全部评分关键点），那就靠谱多了。&lt;/p&gt;&lt;p&gt;不过，AI 的表现除了跟提示词质量相关，还取决于所使用的模型。如果模型不够先进，AI 的提炼结果可能会不尽如人意。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;模型&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;我写作本文时，世界上能力最强的公开发布大语言模型，是 &lt;a href=&quot;https://mp.weixin.qq.com/s/J7DfDDSyt0PQitkE6Ltnkw&quot;&gt;OpenAI o1 pro&lt;/a&gt;。但价格较高，每月需要 200 美元。好在，你未必非得为了教学活动额外付出这么高的订阅费，因为也有一些性价比高的替代方案。&lt;/p&gt;&lt;p&gt;比如 Google 的 &lt;a href=&quot;https://mp.weixin.qq.com/s/h5hGl-pEil0deV5QZFgxdg&quot;&gt;Gemini 2.0 Flash Thinking 模型&lt;/a&gt;就很好。这个模型不仅具备较强的推理能力，还能很好地遵循指令，在处理长文本时表现出色。最重要的是，它目前是免费的，通过第三方中转服务使用也非常便宜。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/198ca61ee710e8b7fab6cadb67576fee.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;此外，国内也有一些类似的模型技术在快速发展中，比如深度求索（&lt;a href=&quot;https://mp.weixin.qq.com/s/rBidAEwh6ymff_sPlGB0eg&quot;&gt;Deepseek&lt;/a&gt;）公司正在开发的反思式模型。我最近看到一个关于它能力的榜单，但一直没机会测试它的 API。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/dbf76a2c9205ba839b386f0e1839bf59.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;好在 Deepseek 官网上确实有个选项，可以进行「深度思考」。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/article/bfdec671eda02cb1af36972db23c67dd.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;你可以试试，然后把自己的感受在留言区跟大伙儿分享一下。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;小结&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;本文从「学生用 AI 代替自己写作业」这个愈发普遍的问题切入进行了探讨。我觉得以下要点你可以参考。&lt;/p&gt;&lt;p&gt;首先，我们不能忽视 AI 的存在。有必要让学生在学习过程中融入与 AI 的协作，这对他们未来的职场竞争力会有帮助。&lt;/p&gt;&lt;p&gt;其次，不要图省事。无论是「魔法对轰」还是简单粗暴地滥用 AI 检测结果，都是不负责任的做法。尤其是后者，一旦出现问题，负面效果显著。&lt;/p&gt;&lt;p&gt;第三，传统的仅提交文本作为评判依据的方式在今天已不再适用。我们应该鼓励学生使用 AI，但要求他们完整呈现协作过程，并通过提问来评估他们的参与度和思考质量。&lt;/p&gt;&lt;p&gt;作为老师，这些新技术确实增加了我们的工作负担和难度。但这是我们这个时代的机遇和挑战，面对它们比逃避要好得多。&lt;/p&gt;&lt;p&gt;祝老师和同学们 AI 辅助技能精进之路顺利！&lt;/p&gt;&lt;p&gt;如果你觉得本文有用，请&lt;strong&gt;充电&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;如果本文可能对你的朋友有帮助，请&lt;strong&gt;转发&lt;/strong&gt;给他们。&lt;/p&gt;&lt;p&gt;欢迎&lt;strong&gt;关注&lt;/strong&gt;&lt;a href=&quot;https://sspai.com/column/245&quot;&gt;我的专栏「科研利器」&lt;/a&gt;，以便及时收到后续的更新内容。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/prime/subscription?referral=314606736&quot;&gt;点击这个链接加入少数派会员&lt;/a&gt;，立享 9 折优惠！获得专属会员内容、会员播客以及会员定制周边。在更多的领域和方向帮你打开脑洞，找到新的兴趣点。与少数派一起洞悉当下，探索新知。&lt;/p&gt;&lt;h4&gt;&lt;strong&gt;延伸阅读&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;&gt; 关注&#160;&lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的&#160;&lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>玉树芝兰</author>
            <pubDate>Wed, 22 Jan 2025 15:00:00 +0800</pubDate>
        </item>
        <item>
            <title>年度计划完不成，可能是好事</title>
            <link>https://sspai.com/post/95558</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt;&#160;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/matrix&quot;&gt;Matrix&lt;/a&gt;&#160;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&#160;&lt;br&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;p&gt;又到了晒年度计划的时节。我的朋友圈被两种帖子刷屏：&lt;/p&gt;&lt;p&gt;一种在信心满满地分享明年的目标清单，另一种在自嘲地回顾今年未完成的心愿。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/12/a5fcf449c7ce06856e305a8387e40d15.png&quot;&gt;&lt;figcaption&gt;你们梗图也太过分了，时间改改就继续发&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;看著自己 2024 年的成果清单，还算满意：&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/12/92a1361fdeb5bed3ae6893dc178d7600.png&quot;&gt;&lt;figcaption&gt;2024 年的事项总结&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;我也有了一个意外的发现。作为一个曾经研究过各种效率方法论的时间管理工具控，今年最大的突破，恰恰来自于一次彻底的「放手」。&lt;/p&gt;&lt;h2&gt;我们的年度计划注定失败&lt;/h2&gt;&lt;p&gt;生活本质上其实是一个&lt;strong&gt;复杂性系统&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;这不是一个简单的比喻，复杂性系统（Complex System）是一个专业术语，它描述的是由大量相互作用的组成部分构成的系统，这些系统通常表现出非线性、多样性、涌现性、自组织、自适应等特征，其行为和性质难以通过传统的线性思维方式进行预测和解释。&lt;/p&gt;&lt;p&gt;简单来说，我们的生活其实不完全属于自己，而是由无数变量相互作用产生的涌现结果。&lt;/p&gt;&lt;p&gt;当我们制定年度计划时，追求的必然是改变和突破。毕竟这是许愿的范畴，谁会许愿「明年要过得和今年一模一样」？&lt;/p&gt;&lt;p&gt;&lt;strong&gt;许愿大家都要求个大的，复杂性系统算什么，我要逆天改命！&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我们在计划里勾画新的领域、新的技能、新的突破。这意味著要去做自己不熟悉甚至完全不擅长的事情。为了获得掌控感，我们按照季度、月份写下里程碑。&lt;/p&gt;&lt;p&gt;这本身没有错，旧世界没有新故事。但写一个完善的年度计划并拿它检视自己本身就很「学生思维」。这个词如今听起来有点像骂人，放在这里是贴切的：因为我们试图用一张妥帖的课程表去对应混沌的未知。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;生活很复杂，目标很伟大，方法很固化，我看结局已经注定：年底拿试卷哭著回家。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我之前做过一家公司的总经理，后面就特别关注各大企业家的预测和规划。这些年经济的剧烈波动让我们见到了无数「大佬失灵」的案例——这些曾被奉为商业先知的顶尖企业家，他们的年度预判往往在第二年就被现实完全推翻。这些大佬背后都有著强大的智库和研究团队，掌握著最全面的数据，拥有最专业的分析工具，可以调动最权威的咨询资源。&lt;/p&gt;&lt;p&gt;但即便如此，他们仍然无法与&lt;strong&gt;复杂性&lt;/strong&gt;相抗衡。&lt;/p&gt;&lt;h2&gt;﻿面对复杂性，不要预测，而是演进&lt;/h2&gt;&lt;p&gt;生物学告诉我们，在环境剧烈变化的时期，存活下来的往往不是最强壮的物种，而是最能适应变化的物种。在意识到这一点后，我开始思考：既然复杂系统不可能被完全控制，那我们需要的是一种更灵活的方式。&lt;/p&gt;&lt;p&gt;这不就是&lt;strong&gt;敏捷开发&lt;/strong&gt;的方法论吗？&lt;/p&gt;&lt;p&gt;面对复杂性，不要预测，要演进：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;快速迭代，持续交付：&lt;/strong&gt;以短周期的迭代为核心，每次迭代都交付一个可用的产品增量。通过频繁的交付和测试，快速发现问题并优化产品，确保持续为客户创造价值。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;拥抱变化，灵活调整：&lt;/strong&gt;将需求变化视为提升产品质量的机会，而不是障碍。根据用户反馈和环境变化不断调整计划和开发方向，保持对市场需求的敏捷响应，通过试错来跑通数据的正反馈。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;以人为本，高效协作：&lt;/strong&gt;强调团队成员之间的沟通与合作，信任自组织团队的能力。与客户紧密合作，确保产品开发始终围绕用户需求，简化流程，专注核心目标。&lt;/p&gt;&lt;h2&gt;一种极简而可持续的方式&lt;/h2&gt;&lt;p&gt;基于这种认识，我开始尝试一种全新的实践方式。这种方法主要包含三个核心要素：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一个允许自己完不成的经常调整的目标。&lt;/strong&gt;它的目的是仅仅是指明大方向，是我知道在什么领域发力的线索，毕竟出来混最重要的是出来。如果我们太过执著于完成原定计划，反而可能错过计划之外的可能性。&lt;/p&gt;&lt;p&gt;另外，计划不要一上来就大开大合，不如先想想第一个产品原型多久可以跑出来，只在大方向上做短期的可以快速验证的计划。&lt;/p&gt;&lt;p&gt;不用一上来就想自己年底要达到日语 n2，先想想 50 音什么时候能背完。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一个特别重视正反馈的心态&lt;/strong&gt;。不要用完成计划与否来评判自己，而是关注每一个进步，哪怕是微小的。这种善待自己的态度，反而能带来持续的动力。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;最重要的是：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;一种极简形式的日记方式。&lt;/strong&gt;不再追求格式完整，也不在意错别字。每天就用流水账的形式记录今天的进展，聚焦于几个想要发展的关键领域，比如健康、编程、学习、工作等，采用粗略的分类而不是过于精细的划分。&lt;/p&gt;&lt;p&gt;每天的记录不求完整，能记多少是多少。关键是要降低记录的门槛，减轻认知负担。主要是聚焦于自己今天完成了什么。这种轻量级的记录方式不仅降低了维护成本，更重要的是保护了宝贵的心理资源。按照这种只记录进展的简单方式，我不需要纠结于每天是否都有内容可写，也不用担心错过了某个环节。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/12/2c0b1f96723be732969a5a1ec2d77fad.png&quot;&gt;&lt;figcaption&gt;就是这么记的&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;我会定期把日记交给 AI 大模型去总结，重点关注在各个领域取得的重要进展，然后对目标进行调整，形成闭环。&lt;/strong&gt;AI 的分析帮助我把那些零散的日常进步串联成一个更有意义的故事。它不仅能看到我做了什么，还能理解这些行动背后的逻辑和价值。它经常会让我发现一些意想不到的收获。有时候我以为自己在某个领域毫无进展，但 AI 的分析会指出一些微小但持续的改变。有时候我觉得某个月过得很糟糕，但数据分析显示那恰恰是一个重要的转折点。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/12/8ca0a81d3363b9fb9dfe3e649a27e2ac.png&quot;&gt;&lt;figcaption&gt;问 Claude：我 1 月份都干嘛了&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这种客观的、数据驱动的分析，让我对自己的成长轨迹有了更清晰的认识。﻿现在回头看，那个开头提到的 2024 年的成果截图，其实就是这种方式的结晶。它不是通过强迫自己完成一个个计划得来的，而是在照顾好自己的心力、持续记录、科学分析的过程中自然形成的。&lt;/p&gt;&lt;h2&gt;放弃复杂的时间管理系统，远离工具焦虑&lt;/h2&gt;&lt;p&gt;我之前用过很多时间管理的方法，To Do List、GTD、番茄工作法等。每个方法刚开始都充满希望，但最后计划完不成的时候，整个人会很暴躁。在传统观念里，计划就意味著「使命必达」。完不成就会被视为意志力薄弱的表现。很多人包括我自己，都在这种自我怀疑中不断内耗。&lt;/p&gt;&lt;p&gt;﻿很多畅销书都会教你如何写日记，强调格式完整、内容清晰、持续记录等要求。现在回想，这些理论实际上在紧张的生活中又加入了额外的负担。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;大家连按时上班都需要人脸识别打卡了，现在为了管理时间还要坚持写日记，开什么玩笑？&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;下次碰到那些在售的漂亮的 notion「人生管理模板」，请第一时间关掉，用精巧的系统来管理多变的系统，这是什么屎山代码？&lt;/p&gt;&lt;h2&gt;真正该管理的是对自己的正反馈&lt;/h2&gt;&lt;p&gt;要呵护自己想干事的动念，首先就要放弃对目标的执念。时间管理就是个伪命题，在这个复杂系统里，你管理的永远是优先级。&lt;/p&gt;&lt;p&gt;那些暂时没做完的事，不必太过焦虑，不要老想著收益最大，时间是有限的，不如我们换个思路，想想如何遗憾最小。&lt;/p&gt;&lt;p&gt;与其纠结那些未完成的待办，不如看看自己在真正重要的事情上取得了哪些进展，要事第一，毕竟：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;发展的问题发展解决。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我还学会了另一件重要的事：不要指责自己，要学会对自己好一点。&lt;/p&gt;&lt;p&gt;太多人在追求目标的过程中，把自己逼得太紧。我们总是习惯于用意志力来对抗身体发出的信号，认为克服疲惫、饥饿是一种坚持和毅力的体现。但这种想法本身就值得商榷。&lt;/p&gt;&lt;p&gt;要拒绝一切形式的负反馈。当感觉没有动力时，第一反应不是责备自己意志力差，而是回到最基础的生理需求：我是不是饿了、渴了、累了、困了？很多时候解决方案就是这么简单：吃个饭，喝杯水，睡个觉。&lt;/p&gt;&lt;p&gt;一个总是处于饥饿、疲惫状态的人，是很难有多余的心力去思考提升和发展的。那些完不成的计划，可能不是因为我们不够努力，而是我们忽视了最基本的自我照顾。当我学会更好地照顾自己，反而更容易进入一个良性循环：状态好了，做事效率高了，完成了计划就有了成就感，有了成就感就更有动力继续前进。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/12/05d4c7e88ec17ec909d550a82c7a4e75.png&quot;&gt;&lt;figcaption&gt;我 2024 年都是怎么表扬自己的&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;计划完不成，可能是好事&lt;/h2&gt;&lt;p&gt;回顾这一年，我最大的收获不是完成了多少计划，而是学会了如何与自己和解。那些所谓的「失败」，反而让我找到了更适合自己的节奏。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;计划赶不上变化很正常，老想用计划去预测到变化才是妄念。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;与其用完美的计划来限制自己，不如放开手脚去拥抱变化。毕竟人生不是一道解题过程，而是一场未知的冒险。&lt;/p&gt;&lt;p&gt;那些完不成的计划，是生活给我们的礼物。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;关联阅读：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&gt; 关注&#160;&lt;a href=&quot;https://www.xiaohongshu.com/user/profile/63f5d65d000000001001d8d4&quot;&gt;少数派小红书&lt;/a&gt;，感受精彩数字生活 &#127811;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的 &lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>工作很忙中年人</author>
            <pubDate>Wed, 22 Jan 2025 11:30:00 +0800</pubDate>
        </item>
        <item>
            <title>社区速递 078 | 你没见过的社区文章、一周最热评、派友的游戏清单</title>
            <link>https://sspai.com/post/95785</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;除了首页时间流和侧栏的精选展位，少数派 Matrix 社区还有很多优秀内容因条件所限无法得到有效曝光，因此我们决定重启 Matrix 周报，并在此基础上添加更多社区内容、作者投稿新玩意呈现给大家。&lt;/p&gt;&lt;h2&gt;&#128293;一周热评&lt;/h2&gt;&lt;p&gt;来自文章&lt;a href=&quot;https://sspai.com/post/95633&quot;&gt;《物念&#183;一个物品价值追踪网站》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;红烧牛肉 &lt;/strong&gt;(+1) 试用了下，不清楚你怎么定义成本高低的，比如买个车子，几年下来每日成本也摊不到 100 一下，但是车子属于必需品，和手机平板对比就有点不合适吧&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;o 大狼 o &lt;/strong&gt;(+0) 去试用了一下，有点意思。&lt;/p&gt;&lt;p&gt;我其实买有些东西的时候，也会有类似的想法。&lt;/p&gt;&lt;p&gt;比如 2020 年，Keep 一辆动感单车要 2600 元，我盘算著，如果能骑 200 小时的，每小时成本 13 元，我能接受，就买了。结果一共只骑了 40 小时，大多时间闲置，就 600 元转让了。算下来实际每小时使用成本 50 元，大概比去健身房高得多了。&lt;/p&gt;&lt;p&gt;你的网站上现在只有按次计的，但可以多一些方式，比如象健身单车，不可能统计一共骑了几次，但因为本身有使用时间统计功能，我就按总使用时间计，笔记本电脑、手机什么的，天天频繁使用的，只会按天计。&lt;/p&gt;&lt;p&gt;家里一个空气炸锅，挺贵的，但从疫情前开始，一直用到现在，使用频率极高，一年 200 次是有的，在网站上要体现这个使用次数，还有点难度。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;来自文章&lt;a href=&quot;https://sspai.com/post/95637&quot;&gt;《浅聊药品集采焦虑》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Gurri &lt;/strong&gt;(+1) 把焦虑转移到「预防」上，这个说的太好了。国家财政的问题不管我们持什么观点，能做的都不多。还是先为自己和家人行动起来。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;来自文章&lt;a href=&quot;https://sspai.com/post/95589&quot;&gt;《AI 辅助编程，真的那么不靠谱吗？》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;YTu &lt;/strong&gt;(+22) 作为一个 0 基础的小白，愣是靠著 ChatGPT 写了一个 Scriptable 脚本，解决了我一个心念已久的功能：一个财联社 RSS 阅读器。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;ZephyrZ &lt;/strong&gt;(+5) 哈哈哈哈哈，「古法手作」看笑了，那还的凸显一个匠人精神，出了 BUG 那必须鞠躬道歉。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;玉树芝兰 &lt;/strong&gt;(+1) 这份 Super 黄编写的《AI 编程蓝皮书》文档挺有趣，适合入门上手，推荐大家阅读。&lt;a href=&quot;https://superhuang.feishu.cn/wiki/CBBPwvgEuicVhFkx0s7cPmhpn4e?__readwiseLocation=&quot;&gt;https://superhuang.feishu.cn/wiki/CBBPwvgEuicVhFkx0s7cPmhpn4e?__readwiseLocation=&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;来自文章&lt;a href=&quot;https://sspai.com/post/95681&quot;&gt;《寻微致新：少数派的 2024 年度最佳好物》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;kergee &lt;/strong&gt;(+8) 所以是不是出个小丑牌的文章？&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;衞书有道 &lt;/strong&gt;(+3) 页面效果不错，要是每个产品的介绍再多点就好了。或者直接附上少数派社区内相关的文章更好。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;zzsqwq &lt;/strong&gt;(+2) 很赞的页面效果，和 Apple 成绩单一样都是一种新的尝试 &#128077;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;来自文章&lt;a href=&quot;https://sspai.com/post/95529&quot;&gt;《人人都可以上手的 Android TV 改造指南，让你也能开机就能看到节目》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Vincent_Asobi &lt;/strong&gt;(+22) 感觉作者还是比较生疏，文章那么长，不如这些方案&lt;/p&gt;&lt;ul&gt;&lt;li&gt;电视桌面：Projectivy Launcher（可开箱可定制）&lt;/li&gt;&lt;li&gt;文件管理：Mixplorer（可文件管理可安装可传输）&lt;/li&gt;&lt;li&gt;ADB 工具：ADBToolbox（禁用自带程序和桌面）&lt;/li&gt;&lt;li&gt;附加安装工具：Apkmirror 安装工具（用来安装 apkmirror 上的 APKM）&lt;/li&gt;&lt;/ul&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;去梦老婆 &lt;/strong&gt;(+3) Pro 系列没有开机广告，小米太真实了。&#128514;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;来自文章&lt;a href=&quot;https://sspai.com/post/95200&quot;&gt;《up 主们在用「苹果字体」时用对了吗？》&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;来个板烧鸡腿堡 &lt;/strong&gt;(+11) 作者做了很仔细的观察，点赞。一点建议是可以在总结处，给读者更简单直接的结论。&lt;/p&gt;&lt;p&gt;正确使用苹果字体：在苹果电脑里直接选择 SF Pro 作为默认字体。&lt;/p&gt;&lt;p&gt;ps: 如果是给小公司用作商用场景，用苹方也要小心版权问题，虽然苹果不像某公司那么爱追溯，但理论上还是不被允许的。&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;鼓手高 &lt;/strong&gt;(+6) 上海城建真该需要你来拯救，地铁站牌和路牌的字体简直是地狱&#128557;&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;&#128210;社区摘要&lt;/h3&gt;&lt;h2&gt;&#127381;作者的新玩意&lt;/h2&gt;&lt;p&gt;为了让作者的投稿尽快与广大读者见面，我们调整了《新玩意》栏目中作者投稿部分的呈现方式和周期，作者投稿的「新玩意」后续会迁移至本栏目。投稿渠道与奖励方式仍与以往完全一致，详情参见文末。我们相信新鲜火热出炉的分享更能赢得大家的喜爱，也欢迎广大读者朋友们踊跃投稿。&lt;/p&gt;&lt;h3&gt;@车不能快：老蛙 FFⅡ 90mmF2.8 镜头&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;入手渠道：海鲜市场&lt;/li&gt;&lt;li&gt;参考价格：3280 二手 2000 左右&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;自今年 618 购入松下 S5M2 之后，我一直在思考该添置什么镜头好。但无奈的是，马来松联盟的 L 卡口生态仍旧是画大饼状态，表面上松下有数码机技术、适马有镜头对焦技术、徕卡有光学积累，但现实便是 ——L 卡口可用的全画幅镜头屈指可数。同时，适马的重量、徕卡的价格也让人望而却步。&lt;/p&gt;&lt;p&gt;当时我手上的镜头只有套机带的 50mm f1.8 和 20-60mm f/3.5-5.6，室内拍摄视频还是够用的，但在键盘照片拍摄方面，这两颗镜头的焦段就有些不合适了，因为键盘是一个相对方正的产品，拍摄整体时我希望获得一些压缩感，而不是「近大远小」的透视关系和强烈的冲击感。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/d0bf78011bf5bbf527f001deaa322e3b.JPG&quot;&gt;&lt;/figure&gt;&lt;p&gt;最后，在和一位键盘拍摄颇有经验的前辈交流之后，我决定购买一颗 70mm 焦段以上的定焦手动镜头。一方面手动头的选择面比自动头要丰富，同时价格跨度也宽泛不少，另一方面，定焦头的结构相对变焦头要简单不少，同样的价格段下更容易拥有更大的光圈和更好的画质。&lt;/p&gt;&lt;p&gt;而在观望了诸多适配 L 卡口的中长焦镜头之后，我选择了老蛙 FFⅡ 90mmF2.8 镜头。如今国产镜头五花八门，价格和参数也都很诱人，但综合评估下来，我觉得老蛙的产品力是最实在的，尤其是在微距方面，老蛙还有许多「独门绝技」，而他们在营销方面也没有做国内厂家经常干的大面积推流和矩阵号，也让我对这个品牌有一种「脚踏实地做产品」的好感。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/86c92ab43949b11ab4c5f204d0fddd41.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;先来聊聊几个槽点，首先老蛙的镜头盖的松紧尺度感觉做的不是很到位，稍微一碰就会开，其次遮光罩的安装实在是有点难受，总是给我一种异样的剐蹭感。同时镜头重量也不轻，虽然长焦肯定比短焦重，但近乎同焦段之下，老蛙 90（619g）足足比松下 100mm f2.8（298g）重了一倍有余，而且松下还是带有电机对焦的自动头。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/653fd10ef1f9f1bcf14d8d47c1142e6e.JPG&quot;&gt;&lt;/figure&gt;&lt;p&gt;不过这些问题在这个价格和画质表现之下瑕不掩瑜，老蛙的画质表现著实让我惊喜，凭借他们自家的 APO 复消色差技术，暗角、畸变、眩光、色散的控制都很不错。当然，我确实没用过什么好镜头，但就拍键盘而言，我觉得这个素质已经非常够用了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/3f845e8d8df6cf2a8d7a8549eb7685b4.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;在购入老蛙 90mm 之后，我几乎所有的键盘照片都由这颗镜头效劳，毕竟除开 90mm 的焦段，它还是一颗最大 2 倍放大倍率的微距镜头，有著极近的对焦距离，可以用来拍摄很多键盘的做工细节，虽然用来拍这个确实有点大材小用了。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/1254175aa13b6094c48875aea1a0123d.JPG&quot;&gt;&lt;/figure&gt;&lt;p&gt;关于摄影，我能聊的真的不多，毕竟我开始玩才相机半年不到，尽拍摄的次数和题材也相对有限，但摄影带给我的宁静感却让我在繁忙的生活中找到了难得的片刻喘息，也希望各位能用摄影的方式发现生活中美好。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/05/d1d0a504e54cada688123ca68e94d7be.JPG&quot;&gt;&lt;/figure&gt;&lt;h3&gt;@夜行列车长：MUJI 断货王擦镜纸&lt;/h3&gt;&lt;p&gt;目前市面上广泛可见的擦镜纸多含有酒精或其他清洁剂成分，旨在实现快速干燥与除菌效果。然而，鉴于多数眼镜镜片均附有镀膜，长期使用含酒精的擦镜纸擦拭，极易导致镀膜受损脱落。&lt;/p&gt;&lt;p&gt;在更换上一副眼镜前，我一直使用配镜时附带的擦镜布以及酒精片来清洁镜片。结果发现，镜片镀膜已略显斑驳，并伴有多处划痕。回顾日常擦拭习惯，这些损伤大多源于反复使用的擦镜布中夹杂的微小尘粒对镜片的摩擦，以及酒精棉片中酒精成分对镀层的侵蚀，共同加速了镜面镀膜的脱落。&lt;/p&gt;&lt;figure class=&quot;ss-imgRows&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/caca1f1766edb248e01058b60c5de3c2.JPG&quot; alt&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/ca456e2f445e45e20668890d4284c1e8.JPG&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;在网上冲浪的时候看到不少人推荐 MUJI 的擦镜纸，于是便在库存紧张的京东平台上不断刷新，终于成功抢购到两包回来试用。若论 MUJI 中性价比高且不踩雷的产品，我个人认为这款擦镜纸绝对可以入选。作为门店中最实惠的商品之一，擦镜纸的材质为「丙烯酸无纺布」，每包内有 14 张，长 15 ✖️ 13 cm 的尺寸（约一台 iPhone 11 Pro ）。这个尺寸无论是擦拭眼镜还是显示屏都恰到好处，不会显得太小。而且，擦镜纸可以多次循环使用，&lt;strong&gt; 切记在使用前抖动去除浮尘，就能有效避免细微尘粒划伤镜片。&lt;/strong&gt;&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/9223571afefd57edd6e87be1680b32d6.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;在使用了擦镜纸后，还是能很明显的看出差别。擦拭前，镜片上的指纹、灰尘仿佛给视野蒙上了一层薄雾；而擦拭后，镜面很光洁，前后对比之下，那种清晰透亮的视觉效果让人倍感舒畅。&lt;/p&gt;&lt;p&gt;使用过程中也无需大力擦拭，只需要擦拭两三次即可将镜面上的大面积污渍擦掉，而且还是在没有使用任何清洁剂的情况下。既省时间又能减少对镜片的磨损，也是蛮高效温和的清洁方式。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/cda3697cff56261259084510e2d1d99b.JPG&quot;&gt;&lt;figcaption&gt;&#128072;&#127995;左边：使用后；                           右边&#128073;&#127995;：使用前&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;不过也有人说这款擦镜纸有平替 —— 实验室擦拭纸，具体感兴趣的朋友可以去某宝搜索一下，是否有一样的效果这个还需要等买来对比之后才知道。但从 MUJI 的这款产品目前的表现来看，清洁力、便携性和性价比都是不错的。平常不习惯携带擦镜布的朋友可以揣一包放兜里，需要用的时候随时取用，放一张的话很有可能当纸巾给扔掉。现在我都是车里、办公室、家里各放一张，需要用的时候都是随取随用。&lt;/p&gt;&lt;h2&gt;&#128172;一派热议&lt;/h2&gt;&lt;p&gt;在上期第 194 期一派投票《&lt;a href=&quot;https://sspai.com/bullet/1736744010&quot;&gt;你的旅途游戏清单准备好了吗？ &lt;/a&gt;》中，共有 202 名派友热情参与，十分感谢！&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Gurri &lt;/strong&gt;(+19) 买了开源掌机 35xxsp，最近在补银河战士系列。已经通了融合，在玩零点任务。不得不说体验和手机插个手柄真的是两种体验，翻开即玩，小巧的机身都非常契合那个时代的掌机体验。这个时代唯一可以揣裤兜的掌机只剩下手机了，然而手机游戏在我们这些老 ass 看来根本没法称之为游戏（纯个人感受，如有冒犯请见谅）。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/13/avatar/ecd8244f99aac3be0891e22076898c0d.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;落雪小凝 &lt;/strong&gt;(+8) 最近沉迷燕云十六州，当做纯粹的单机游戏，探索的挺开心。&lt;/p&gt;&lt;p&gt;旅途中，上飞机前，会提前登录一下月圆之夜，打开单机模式，然后切后台。进入飞行模式之后，就可以继续刷全图鉴成就啦&lt;/p&gt;&lt;p&gt;&lt;strong&gt;少数派 18510599 &lt;/strong&gt;(+7) 在手机上装了 GBA 模拟器，希望能在高铁上打打逆转裁判 123。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/15/avatar/de8156278b0ed62975eeb3e848323192.jpeg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;阿利安卓 &lt;/strong&gt;(+5) 只有 Steamdeck，玩玩土豆兄弟和小丑牌还还是不错的&lt;/p&gt;&lt;p&gt;手机游戏嘛，F-droid 上有不少开源好玩的小游戏，比如 Vector Pinball&lt;/p&gt;&lt;p&gt;&lt;strong&gt;hAPPydOg &lt;/strong&gt;(+3) Delta + 宝可梦水晶，开了 GS 球&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/14/4f8bcd2fae36de0e2e8b30221292de88.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;HZ_Studio &lt;/strong&gt;(+2) Kingdom Rush&lt;/p&gt;&lt;p&gt;&lt;strong&gt;jojo12 &lt;/strong&gt;(+2) 星露谷物语希望把全成就做完。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;zixr365 &lt;/strong&gt;(+2) 最近为了备战怪猎：荒野，在玩怪猎：世界。不得不说，怪物猎人是真的好玩啊，世界的画面啥的，也挺好的，并不会显得过于古旧。打完世界刚好续上荒野。&lt;/p&gt;&lt;p&gt;ps 上刚打完了最后生还者一代重置版，确实很好玩。二代迟迟不进会员库，另外听说有觉醒元素，一直在犹豫和等待，实在不想给 zzzq 投钱。&lt;/p&gt;&lt;p&gt;因为打过了最后生还者，感觉对这类丧尸题材的游戏抗力有了一点点提高，所以考虑打生化危机了，之前一直是想玩不敢玩的。听说 4 代已经不算恐怖游戏而算射击游戏了，所以在 steam 上买了个豪华版开玩。确实不算很恐怖，开个简单难度，玩得也挺开心的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;忆梦非诸侯 &lt;/strong&gt;(+2) 歧路旅人 1+2，最近迷上了这种回合制游戏，从之前的 p5R 到星之海，这种回合制游戏可太适合 switch 了&lt;/p&gt;&lt;p&gt;&lt;strong&gt;JimLu &lt;/strong&gt;(+1) 突发奇想把 wiiu 又拿了出来，发现老任服务器都关了，更新系统联 pretendo 折腾老半天，终于玩上了喷射战士 1 代，还是那个原汁原味的感觉。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/4bd006ae5884054582e8289ccd2b8a28.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Yorkson &lt;/strong&gt;(+1) 在 iPad mini 上装了 Delta 和 PPSSPP，发现能模拟 PSP 后可以打 GalGame 了，十几个小时的火车有事儿可做了，另外还买了个三十块的 shanwan 小手柄，单手按按 AB 比点屏幕方便。虽然有 Delta，还是把 3DS 翻出来，准备打几个 GBA 游戏玩玩，比搓屏幕手感好不少。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/20/0d532c812546f81d514324cae6eca985.jpg&quot; alt&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;JuniperPhoton &lt;/strong&gt;(+1) 继续推荐歧路旅人 2，即便是 Switch 上玩也很棒。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;kendentline &lt;/strong&gt;(+1) 川渝牛马表示，隧洞太多了，很难找到连续的信号打游戏，有时候甚至听个歌都是奢侈……&lt;/p&gt;&lt;p&gt;&lt;strong&gt;蝉心 &lt;/strong&gt;(+1) 看起来派里玩绝区零的不少，我也喜欢。&lt;/p&gt;&lt;p&gt;NS 推荐，圣兽之王、十三机兵防衞圈、雪居之地、蒸汽世界，大劫掠 1 / 塞尔达，智慧的再现&lt;/p&gt;&lt;p&gt;Win/SD 推荐，漫威争锋，以及过几天上的，三国无双，起源&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Leobai &lt;/strong&gt;(+0) 纯旅途中的手游来说是 P5X 和杀戮尖塔。因为出行大多数情况下是一个小时多点的高铁，因此可以趁机刷刷日常本开一局尖塔。P5X 的主线剧情虽然是亮点，但还是更适合长时间打。&lt;/p&gt;&lt;p&gt;如果是正经玩的话，quest 平台的 demeo 生化 4 和蝙蝠侠阿卡姆之影都很不错，demeo 是经典下棋跑团，玩不明白但是很上瘾，生化 4vr 很经典，蝙蝠侠是很不错的八向打拳模拟器，流程爽快。&lt;/p&gt;&lt;p&gt;ps 平台个人比较喜欢浪人崛起，把跑图做的很顺畅，非常顺滑的进入了忍者组的打人流程。机器人惊喜感很不错，但有些背板关卡对于我这种操作就会很吃力需要兄弟帮忙代打一部分。&lt;/p&gt;&lt;p&gt;pc 平台或者全平台很喜欢暗喻幻想，首先抛开后半流程剧情全部加速赶工的问题，以及能够接受脑死跑图毫无创意的迷宫部分，就公路片形式，剧情没有雷点甚至有点让人满足，以及美术音乐来说可以推一下，你很难不喜欢开最低难度然后控制自己操作速度争取在音乐达到下一个小高潮切进下一个副歌前打死小怪这种操作，真的。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;黄小猪 &lt;/strong&gt;(+0) Arcade 里的 Sasquatch 两年前初见的时候点开了一下以为就是个大脚怪整蛊露营者的恶作剧游戏，但是常年霸榜让我一直不太理解，后来突然发现除了在营地恶搞以外还有很广阔的天空可以翱翔，最近一星期都在沉迷。整体画风很卡通，感觉是小朋友也能玩的游戏，但是对于一个将将三十岁的大人来说也很上头，推荐给有 Arcade 订阅的各位～（有点像肝脏友好版的星露谷）然后还下载了朋友们口中的年度游戏小丑牌，不过平时不怎么爱打扑克，打算路上玩腻了 Sasquatch 之后来开拓一下新世界。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;江月何年初照人 &lt;/strong&gt;(+0) 以前在旅途中喜欢玩手机单机游戏，&lt;/p&gt;&lt;p&gt;小时候最早喜欢玩日本开罗游戏，一款游戏能玩一个寒假，怀念在摩托罗拉上喜欢忍者村&lt;/p&gt;&lt;p&gt;之后玩得比较杂，迷你地下城 2，铁锈战争，移植的守墓人，崩溃大陆，以及当时的很多汉化游戏，比如手谈汉化组的 solar2，太阳系战争等，现在也会去找一些这样的游戏合集&lt;/p&gt;&lt;p&gt;Mindustry（像素工厂）是唯一一个玩到现在还在保留的游戏，可以在飞机上玩，比较有趣&lt;/p&gt;&lt;p&gt;&#128226;：下一期的一派讨论是数码圈日经话题《&lt;a href=&quot;https://sspai.com/bullet/1737450027&quot;&gt;2024 踩过的数码产品「坑」有哪些？ &lt;/a&gt;》，欢迎来聊。&lt;/p&gt;&lt;h2&gt;&#127183;互动环节&lt;/h2&gt;&lt;p&gt;会员社区改版的喜悦也希望能够分享给派友，《社区速递》新增互动环节：我们将从会员社区的问答讨论中，匿名精选出一些有趣的话题，放在每期《社区速递》的末尾，作为我们分享与讨论的「话题池」。如果你对以下&lt;strong&gt;任一话题&lt;/strong&gt;有独到的见解或经验分享，欢迎在评论区留下你的精彩回答，可重复评论参与。我们将认真阅读每一条评论，对于回答优秀且详尽的朋友，送上一份少数派会员社区体验月卡。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;本期话题池：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;你用 Android 机还会 root 吗？&lt;/li&gt;&lt;li&gt;如何管理 B 站的关注？&lt;/li&gt;&lt;li&gt;2025 苹果外接显示器求推荐？&lt;/li&gt;&lt;li&gt;求推荐的低因咖啡豆？&lt;/li&gt;&lt;li&gt;照片的存储方案？&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;如果你也想分享「新玩意」&#128265;：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;获取 Matrix 社区写作权限并签署 &lt;a href=&quot;https://sspai.com/post/72089&quot;&gt;Matrix 共创计划&lt;/a&gt;；&lt;/li&gt;&lt;li&gt;在少数派独家发布一篇文章，在标题中标注「新玩意」前缀；&lt;/li&gt;&lt;li&gt;用至少 800 字介绍产品，并配上 2-3 张产品的实拍图片；&lt;/li&gt;&lt;li&gt;&lt;strong&gt;在网站个人信息中补充支付宝账号。&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;成功入选本栏目还可以得到 108 元的「剁手红包」&#129511;。如果你有兴趣参与，就赶紧来稿吧！&lt;/p&gt;&lt;p&gt;&gt; 下载少数派 &lt;a href=&quot;https://sspai.com/page/client&quot;&gt;客户端&lt;/a&gt;、关注 &lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少数派公众号&lt;/a&gt;，了解更多的新玩意 &#127378;&lt;/p&gt;&lt;p&gt;&gt; 特惠、好用的硬件产品，尽在 &lt;a href=&quot;https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc&quot;&gt;少数派 sspai 官方店铺 &lt;/a&gt;&#128722;&lt;/p&gt;&lt;/div&gt;</description>
            <author>Matrix 机器人</author>
            <pubDate>Tue, 21 Jan 2025 18:37:36 +0800</pubDate>
        </item>
        <item>
            <title>於单调中别有洞天：等宽字体选择指南</title>
            <link>https://sspai.com/prime/story/monospaced-fonts</link>
            <description>&lt;div&gt;&lt;p class=&quot;prime__story__summary&quot;&gt; 为自己选择高质量、合口味的等宽字体，是一种有趣的审美实践，也能让写作、编程环境受益于更悦目和整洁的外观。 &lt;/p&gt;&lt;article class=&quot;wangEditor-txt prime__story__body&quot;&gt;
&lt;p&gt;如果让你在纸上写一个单词 &lt;code&gt;Hi&lt;/code&gt;，你肯定不会把两个字母写成一样宽。的确，在正常手写时，字母根据形态、笔画和大小写，自然地会被写成不同宽度。换到数字环境中，我们见到的西文字体也大多如此。这种字体称为「比例字体」（proportional fonts），也是我们在日常使用中最多见到的。&lt;/p&gt;
&lt;p&gt;但回想一下机械打字机和早期电脑，它们打出的字母却是个个一样宽的；这主要是因为技术上的限制。&lt;/p&gt;
&lt;p&gt;在打字机中，每个按键所连接的字模在按键时敲击浸有墨水的丝带，在纸上留下字迹。由于字模都是一样宽的，纯机械机构又不能动态调整字距，只有将字母也做成等宽，才能维持版式的均匀。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/dc5f8528687153188aa83ebce544ef47.gif&quot;&gt; &lt;figcaption&gt;打字机打出的等宽字体&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;而在早期终端和电脑中，由于屏幕不够精细，芯片也缺少图形显示能力，画面只能被分成数量有限的网格，每个网格固定显示一个字符。这也把文字「框」成了一样尺寸。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/383cc3c030af258cc243d796d53fa73f.jpeg&quot;&gt; &lt;figcaption&gt;终端机 VT100 上的等宽字体&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;来到现代，这些技术限制不复存在，但等宽字体（monospaced fonts）却作为一种风格延续下来，凭借其天然的网格对齐特征，在许多场合继续发挥重要作用。在终端环境中，等宽字体不仅用来显示内容，也承担了「绘制」界面的功能；借助 &lt;a href=&quot;https://en.wikipedia.org/wiki/Ncurses&quot;&gt;ncurses&lt;/a&gt; 等库的帮助，用纯文本也能做出功能丰富、版式美观的 TUI（文本界面）软件。在代码编辑器中，等宽字体与空格、缩进等格式结合，加强了整洁感和可读性；易于区分的设计也让形近字符更容易区分，让错误更容易发现。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/6df01663967cdae05627b33e38cfbd00.png&quot;&gt; &lt;figcaption&gt;sc-im 这样的 TUI 软件依赖于等宽字体&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;等宽字体的应用也不限于技术场景。许多 Markdown 写作工具都选择等宽字体作为默认字体，既是对打字机传统的致意，也是因为等宽字体能赋予版式一种特殊的简约肌理，营造出让不少人觉得更平静、专注的写作环境。英文剧本创作中，用 12 号的等宽字体 Courier 是行业惯例，因为经验上这样写出的剧本一页正好需要一分钟来演出，方便估算时间。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/d80757636311c4154ca22ede42805a6d.jpg&quot;&gt; &lt;figcaption&gt;Markdown 写作软件 iA Writer 的早期版本，使用等宽字体 Nitti&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;好的等宽字体是如何炼成的&lt;/h2&gt;
&lt;p&gt;等宽并不意味著均一和乏味。在看似粗砺的外观背后，等宽字体的设计是丰富多变、充满细节的；做好一款等宽字体需要的努力，并不亚于任何抓眼的标题字体或优雅的正文字体。&lt;/p&gt;
&lt;p&gt;那么，如何辨别和选择出好的等宽字体呢？我们可以从美观性和实用性两个角度考虑：好的等宽字体应该具有考究的设计细节，以及能满足使用场景的丰富功能。此外，中文用户可能还需关注字体对中文字符的兼容性。以下分别介绍。&lt;/p&gt;
&lt;h3&gt;设计细节&lt;/h3&gt;
&lt;p&gt;等宽字体一个特别重要的品质就是「不容易看岔」。因此，几乎所有等宽字体都会关注易混淆字符的设计，特别是数字 &lt;code&gt;1&lt;/code&gt; / 小写字母 &lt;code&gt;i&lt;/code&gt; / 小写字母 &lt;code&gt;l&lt;/code&gt; / 大写字母 &lt;code&gt;I&lt;/code&gt;，以及小写字母 &lt;code&gt;o&lt;/code&gt;/ 数字 &lt;code&gt;0&lt;/code&gt; 这两组。&lt;/p&gt;
&lt;p&gt;至于具体如何区分，不同字体的处理方式不同，但一般是在小写字母 &lt;code&gt;i&lt;/code&gt; 和，小写字母 &lt;code&gt;l&lt;/code&gt; 头部和尾部添加衬线（即笔画是否「出头」以及出头的造型），以及数字 &lt;code&gt;0&lt;/code&gt; 中间添加圆点或斜线。这些设计没有优劣之分，以自己看著顺眼并且能看清楚为准即可。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/983eea79f3555398f8f24e79fcb629a1.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;x 字高（x-height）是另一项重要的设计决策。这是指英文字母「四线格」中间两条线之间部分的高度，也就是小写字母 x 的高度，它对字体的风格和特征影响极大。许多等宽字体会采用偏大的 x 字高，因为这能让外观更「饱满」，更容易在小字号下辨认，而这正是等宽字体的主要使用场景。不过，过大的 x 字高也会让字体看起来有点「愣」，具体尺度就是个人偏好问题了。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/2a5c4ae1eaaf47fe4ceff1ff25e84bee.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;虽然多数等宽字体都会采用无衬线设计，笔画粗壮并且末端无装饰，但这也不是唯一的风格。例如，经典字体 Courier 就采用了粗衬线（slab serif）设计，笔画终端是向外延伸的圆角；PT Mono、Fira Mono 等较晚近的字体也采用了粗衬线。还有一些更具「创意」的字体直接套用了衬线字体的风格（例如 Xanh Mono），或者走复古像素风（例如 VT323），不过实用性就比较有限了。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/82d9620b36fff5de8cd74b3acf9fd849.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;近年来，还有不少字体会把斜体当作展示个性的空间，为其使用和正体截然不同的风格。这股风潮最初可能是大厂 Hoefler &amp; Co. 出品的 &lt;a href=&quot;https://typography.com/fonts/operator/overview&quot;&gt;Operator Mono&lt;/a&gt; 带起来的，它的斜体模仿了手写体的设计，&lt;code&gt;f&lt;/code&gt;、&lt;code&gt;l&lt;/code&gt;、&lt;code&gt;s&lt;/code&gt; 等小写字母俏皮的起笔成为很多后来者（例如免费的 Victor Mono 和付费的 MonoLisa 等）的模仿对象。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/17a8cf12728d63b23c0a40fb6ead3c34.png&quot;&gt; &lt;figcaption&gt;Operator Mono 的「花式」斜体&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;由于斜体在代码编辑器中经常被用来自动高亮 &lt;code&gt;class&lt;/code&gt;、&lt;code&gt;public&lt;/code&gt; 等关键词，不少程序员喜欢用这种字体来给枯燥的代码增添一些活泼感。（当然，正如编程界的任何选择一样，嘲讽这种字体的声音也不少见。）&lt;/p&gt;
&lt;p&gt;此外，既然等宽字体的核心特征就是字符宽度相同，这个宽度到底定多少自然也很重要。与追求宽度适中的正文字体相比，许多等宽字体会选择做得稍微偏窄，以便节省空间，在相同尺寸窗口中放下更多代码。这方面的一个极端莫过于 &lt;a href=&quot;https://typography.com/fonts/operator/overview&quot;&gt;Iosevka&lt;/a&gt;，它将宽度压缩到 1/2 em，也就是每个字母的宽度只有其高度的一半，用在控制枱输出等空间有限的地方特别紧凑高效，但拿来码字就看著有点局促了。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/107f9a04d269a288b9adb10ad196a8a8.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;还有一类字体试图从根本上挑战「等宽」的概念，其代表是 &lt;a href=&quot;https://input.djr.com/&quot;&gt;Input Sans&lt;/a&gt; 和 &lt;a href=&quot;https://ia.net/topics/a-typographic-christmas&quot;&gt;iA Writer Duo/Quattro&lt;/a&gt;。这些字体虽然仍具有等宽字体典型的「无机感」，但放松了「每个字一样宽」的约束，不同字符根据其形态特征，可能占据多种不同宽度，例如 &lt;code&gt;W&lt;/code&gt; 偏宽而 &lt;code&gt;i&lt;/code&gt; 偏窄。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/3ffe23d47f62aa5aaa855276b89e6165.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;但这样「不伦不类」的字体还能胜任等宽字体的用途吗？Input Sans 的作者&lt;a href=&quot;https://input.djr.com/info/&quot;&gt;提出&lt;/a&gt;了一些有趣的主张。在他看来，在编程中，最需要对齐的是行首缩进，而这无论如何不受等宽与否的影响。同时，不等宽的设计反而有助于发现错误，例如你在一连串 &lt;code&gt;&lt;span&gt;&lt;/code&gt; 中手滑把其中一个标签打成了 &lt;code&gt;&lt;spam&gt;&lt;/code&gt;，由此产生的不对齐将是非常显眼的。当然，如果你是用来写文章，就更不用在意严格对齐了，可变宽度反而会让排版看起来更和谐舒适。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/e3a5d53f7bad787ca11a8a66c9022603.png&quot;&gt;&lt;/figure&gt;
&lt;p&gt;正是因为字符设计上存在这么多众口难调的因素，许多较新的字体会通过提供字体家族、可变字体等方式来满足多样化需求。例如，Iosevka 在标准版之外还提供了宽度更舒展的 Extended 版本；&lt;a href=&quot;https://www.recursive.design/&quot;&gt;Recursive&lt;/a&gt; 在一个可变字体里包含了从等宽到变宽、从规整到「奔放」等多种风格；等等。&lt;/p&gt;
&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/21/34bad1d9809abab3af6e7e6594066d1f.png&quot;&gt; &lt;figcaption&gt;Recursive 在一个可变字体里包含多种风格&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h3&gt;额外功能&lt;/h3&gt;
&lt;p&gt;合字（ligatures）可能是当代等宽字体最能玩出花样的地方。所谓合字，是指为特定字符的组合制作一个专门造型。传统上，这一般用来为一些存在笔画勾连的字母组合（例如 &lt;code&gt;fi&lt;/code&gt;、&lt;code&gt;ff&lt;/code&gt;、&lt;code&gt;Th&lt;/code&gt; 等）做特殊设计，使之看起来更自然和协调。&lt;/p&gt;&lt;/article&gt;&lt;/div&gt;</description>
            <author>PlatyHsu</author>
            <pubDate>Tue, 21 Jan 2025 17:25:44 +0800</pubDate>
        </item>
        <item>
            <title>中文播客为什么偏爱「四字名」？</title>
            <link>https://sspai.com/post/95618</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://science.caixin.com/2025-01-06/102276027.html&quot;&gt;财新最近发了篇报道&lt;/a&gt;，讲脑机接口解码汉语，其中有一段：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;此次突破的汉语言解码，就面临独特的挑战——汉语作为一种全球现使用的唯一表意语言，&lt;strong&gt;以单音节为主&lt;/strong&gt;，同时具有声调语言和图形语言的特征......&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这里有几点值得商榷，尤其是「以单音节为主」这个说法并不准确。恰好，理解汉语的真实语音特点，能帮我们解答一个困扰播客圈很久的现象——&lt;strong&gt;为什么中文播客偏爱四字名？&lt;/strong&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;汉语真的「以单音节为主」吗？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;从书面文字来看，汉语好像真的「以单音节为主」。这种印象主要来自我们对汉字的视觉感受：每个方块字看起来都像是一个独立单元，并且具有明显的单音节特性，同时还代表一个语素（最小意义单位），如「好」字，读音是 hǎo，意思是积极的。&lt;/p&gt;&lt;p&gt;但这种文字视觉有很大的欺骗性，语言是看人们怎么说出来，说再决定了写。我们在说话时，其实更偏爱双音节词，有学者做过专门统计：现代汉语常用词和规范词中，二字词（双音节）占比均超过 60%，远超一字词（单音节）。这一特点在日常交谈中也常见，像「播客」「上班」「出轨」这样的双音节词最为常用。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/15/article/59e5c13b44a4020bc7f525f98212f258.png&quot;&gt;&lt;figcaption&gt;苏新春统计了《现代汉语词频词典》与《现代汉语词典》现代汉语常用词和规范词二字词频率，基本可以反映现代汉语以双音节为主的特点。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;为何汉语会以双音节为主？从历史演变看，双音节化能扩充词汇量，避免同音混淆，这只是现象层面的解释。我们还得追问：人类自身的发音规律，会给出什么样的答案？&lt;/p&gt;&lt;p&gt;答案在汉语的音节特点上：相比英语音节的自然滑动（如 [ai] 是从 [a] 到 [i] 的过程），汉语音节都很短促，单个音节太短，缺少抑扬，&lt;strong&gt;不足以形成稳定的韵律感&lt;/strong&gt;。所以，当我们听到外国人说中文时，往往会觉得很违和，他们会不自觉地拖长音节，比如把「天」拉长成「梯——安」。&lt;/p&gt;&lt;p&gt;我们也有追求双音节的倾向，说话时自然地组合音节，像「好吃」「好看」这样。这种对双音节的偏爱在口语中表现得更明显，甚至会把三音节词吞音快读成双音节：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;派出所 =&gt; 派所&lt;/li&gt;&lt;li&gt;公安局 =&gt; 关局&lt;/li&gt;&lt;li&gt;特好吃 =&gt; 套吃&lt;/li&gt;&lt;li&gt;大家好，我是大张伟 =&gt; 大猴儿 / 我 / 裆儿伟&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;理解了这种双音节特质，我们就能更好地解释人们偏爱播客四字名的原因。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;为什么中文播客偏爱四字名？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;小宇宙上线时的&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NzU4ODQ2MA==&amp;mid=2676499194&amp;idx=1&amp;sn=784a78866e8623a7f7824e2379870345&amp;scene=21#wechat_redirect&quot;&gt;数据显示&lt;/a&gt;：平台一百个最热门的播客中，近 50% 选择了四字名，这个比例至今仍具参考价值。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper image_resized&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/15/article/c4549271fe37b3a71218dff3cde522bc.png&quot;&gt;&lt;figcaption&gt;图源：《三明治》公众号&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;要理解这个现象，得从音步说起。音步是语音中的节拍单位，就像音乐中的小节，是人们说话时自然停顿形成的节奏单元。我们前面说到汉语偏爱双音节，&lt;strong&gt;其实就是说我们习惯用两个音节作为一个自然的说话单位，即一个音步。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;双音节名虽然符合这种口语习惯，但在竞争激烈的播客市场中，两个字的信息量往往不够，难以让听众快速理解节目定位和内容。比如像「机核」这样的成功案例并不多见。&lt;/p&gt;&lt;p&gt;而四字名，比如「日谈公园」「大内密谈」「忽左忽右」，恰好由两个双音节词组成，产生了音义融合优势。每个双音节读起来都很自然，前后叠加又带来更强的节奏感。&lt;/p&gt;&lt;p&gt;同时，如前文所述，人们说话以双音节词为主，这使得大多数双音节词都能表达相对完整的含义。比如「日谈」暗示日常对话，「公园」带来开放空间感，合在一起就传达出一种轻松又富有公共性的氛围。&lt;/p&gt;&lt;p&gt;这种音义融合让四字名既朗朗上口，又能在短短四个字里承载丰富的节目信息，因此在播客圈获得了广泛欢迎。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;三字名：反常规的独特美感&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在四字名占主导的播客圈里，也有一些节目选择了三字名，比如「不在场」「山有虎」。三音节在汉语中比较特殊，读起来不那么顺滑自然。这一点从古诗就能看出来——七言诗里很少用「为他人 / 做嫁衣裳」（3+4）这样的折句，反而更爱用「孤帆远影 / 碧空尽」（4+3）这样先长后短，奇数在后的节奏，因为这样更符合人们说话习惯。&lt;/p&gt;&lt;p&gt;乍看之下，三字名似乎不合时宜。但也给了创作者反常规的机会。「不 / 在场」以一个坚决的「不」字开头，让发音突出、停顿，语义聚焦，让听者立刻对后续「在场」产生质疑；「山 / 有虎」采用典型的存现句式，以地点词起句，一下子在听者脑海中构建出一个画面，既有危险的暗示，又带著向前的意味。&lt;/p&gt;&lt;p&gt;三字名打破了常规的双音节节奏，却在这种「不完美」中获得了独特的表达力：以反叛姿态给听众带来新鲜感。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;有人试图从成语的角度解释四字名的流行，认为成语不仅朗朗上口且内涵丰富。但这种解释更像是用现象解释现象。毕竟播客是要说给人听的，其命名更可能源于最基础的语言规律：&lt;strong&gt;我们与生俱来的发音习惯和语音节奏。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;有趣的是，许多播客创作者在命名时，可能并未刻意考虑这些语言学理论，而是凭直觉选择了四字名。这种「不约而同」恰恰印证了语音规律的普遍性和根深蒂固。但也别想当然地认为，起个四字名就能做好播客了，毕竟一个播客的成功还取决于更新频率、内容质量、运气等诸多因素。&lt;/p&gt;&lt;p&gt;播客作为一种声音媒介，让内容回归了语言的最初形式。从语音规律的角度来解释播客的命名现象，我们得以窥见汉语的某些本质特征。&lt;/p&gt;&lt;p&gt;最后补充一点：财新说汉语是「全球现使用的唯一表意语言」也不准确。日语也有和制汉字（如「峠」，意为山顶、山岭），也具有表意特征。而且现代汉语本身就有高比例的形声字，更应该说是意音文字。&lt;/p&gt;&lt;p&gt;本文首发「&lt;a href=&quot;https://mp.weixin.qq.com/s/OXrClZKvLfqw1wJZLv-H2Q&quot;&gt;言辞之间&lt;/a&gt;」，同步少数派。&lt;/p&gt;&lt;p&gt;&gt; 关注&#160;&lt;a href=&quot;https://sspai.com/s/J71e&quot;&gt;少数派公众号&lt;/a&gt;，解锁全新阅读体验 &#128240;&lt;/p&gt;&lt;p&gt;&gt; 实用、好用的&#160;&lt;a href=&quot;https://sspai.com/mall&quot;&gt;正版软件&lt;/a&gt;，少数派为你呈现 &#128640;&lt;/p&gt;&lt;/div&gt;</description>
            <author>王隐</author>
            <pubDate>Tue, 21 Jan 2025 15:33:12 +0800</pubDate>
        </item>
        <item>
            <title>从「原子化」提交到妙用 rebase，一次搞定清爽的 Git 提交记录</title>
            <link>https://sspai.com/post/95404</link>
            <description>&lt;div class=&quot;content wangEditor-txt minHeight&quot;&gt;&lt;p&gt;&lt;strong&gt;Matrix 首页推荐&lt;/strong&gt;&#160;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://sspai.com/matrix&quot;&gt;Matrix&lt;/a&gt;&#160;是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。&#160;&lt;br&gt;文章代表作者个人观点，少数派仅对标题和排版略作修改。&lt;/p&gt;&lt;p&gt;作为一名软件开发者，Git 是我离不开的版本管理工具，它可以记录并追溯开发进程，功能强大，用法灵活多样。围绕著它诞生的协作平台 GitHub、Gitee 等也深入人心。&lt;/p&gt;&lt;p&gt;Git 本身就是一门学问，其重要性不亚于软件开发。在长期的开源软件开发维护的过程中，我长期与 Git 打交道，对 Git 有了更多的感悟，也探索了一些非常实用的技巧。这些技巧，充分发挥了 Git 本身的特性，极大改善了我使用 Git 管理项目的体验。&lt;/p&gt;&lt;p&gt;下面，我就来分享让我受益最深的几点技巧，希望能给读者朋友们一些启发。&lt;/p&gt;&lt;h2&gt;「原子化」提交，一个提交只做一件事&lt;/h2&gt;&lt;p&gt;小时候，老师和长辈或许都告诫我们，在做事情的时候要「一心一意」，不要分散注意力到其他的事情上，这样做事才会高效、有成果。&lt;/p&gt;&lt;p&gt;一旦没有遵循「一心一意」的原则，那么干正事的时候碰壁就再寻常不过。就拿我本人来说，做正事的时候「摸鱼」，狂欢一阵子后再回来，面对还没有完成的正式任务，我是容易一脸懵的：我做了啥？进度怎么样了？我刚刚是怎么攻关难题的来著？——显然，这导致了时间和精力的浪费，更不利于事后覆盘和提升。&lt;/p&gt;&lt;p&gt;不单单是做事，在使用 Git 的过程中，做每一个提交时也需要「一心一意」，也就是「原子化」（atomic）——确保每个提交只完成一项任务。&lt;/p&gt;&lt;h3&gt;1）引例&lt;/h3&gt;&lt;p&gt;可能一些开发者在组织 Git 提交时，习惯让一个提交做多件事情，&lt;strong&gt;把多项各自独立且不相关联的功能修改都放在同一个提交里&lt;/strong&gt;。比如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;一个项目有 A、B、C 三个功能模块，作者对这三个模块都做了修改，还顺带在 2025 年来临之际修改了所有源码开头注释里版权说明的年份。&lt;/li&gt;&lt;li&gt;一个算法函数有多个各自独立的部分，作者在一个提交里就对这几个部分做了修改。&lt;/li&gt;&lt;li&gt;作者原本在写 A 函数，但是发现 B、C、D 这几个函数的注释需要补充，于是统统做了修改，并放在同一个提交里。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这种提交方式看似省事儿，但无疑会给后续的开发工作「埋雷」。&lt;/p&gt;&lt;h3&gt;2）为什么会「埋雷」？&lt;/h3&gt;&lt;p&gt;根据笔者自己的经验体会，如果一个提交做了不止一件事情，那么有可能会在你日后开发的时候，给你带来一些「麻烦」：&lt;/p&gt;&lt;h4&gt;0x00：难以排错&lt;/h4&gt;&lt;p&gt;也许在开发过程中，某个提交给项目引入了 Bug。当你好不容易找到了存在问题的提交，但却发现这个提交做了不止一件事，你还要花费额外的精力来定位造成 Bug 的地方。&lt;/p&gt;&lt;p&gt;而如果你有不止一个提交都没有做到「一心一意」，那么你就很难直接浏览提交记录来找到问题所在，你就不得不翻阅一个个提交，浪费成倍的精力。&lt;/p&gt;&lt;h4&gt;0x01：不便覆盘&lt;/h4&gt;&lt;p&gt;很多时候，开发者需要覆盘自己的提交记录，看看自己做了哪些工作。然而，&lt;strong&gt;假如一个提交做了不止一件事，那么就不便于覆盘开发过程。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;例如，当你想要回顾某个功能的实现过程，找出实现该功能的提交时，却发现关键的代码都被混在几个大的、综合的提交里，难以找出。好比是考前复习的时候，你总结的关键知识点混在了一堆厚厚的复习资料里，自然会影响复习效率。&lt;/p&gt;&lt;p&gt;或许有些读者会选择详尽编写提交说明，通过检索提交说明来找出自己想要的提交。不过这带来的好处有限——你后续还是离不开使用 &lt;code&gt;git show&lt;/code&gt;，在一长串「包罗万象」的 diff 记录中，找到真正想找的修改记录。&lt;/p&gt;&lt;h3&gt;2）「原子化」提交&lt;/h3&gt;&lt;p&gt;践行「原子化」提交的理念，以上的麻烦将不复存在。&lt;/p&gt;&lt;p&gt;C++ 从 C++11 标准开始，引入了「原子操作」（atomic）特性，可以确保一个变量在同一时间只有一个操作者在读写，从而防止多线程抢占造成冲突。我借鉴了「原子操作」的理念，提出了「原子化」提交——也就是确保每个提交只完成一个任务，从而改进提交记录的组织方式，防止潜在的杂乱和冲突。&lt;/p&gt;&lt;p&gt;原子化提交最大的优势，在于&lt;strong&gt;提交记录简洁、可追溯、易于查错&lt;/strong&gt;：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用 &lt;code&gt;git log&lt;/code&gt; 浏览提交记录时，你的开发进程一目了然，可以精确到每个提交实现的功能、修复的 Bug，等等，十分利于覆盘。&lt;/li&gt;&lt;li&gt;一旦某个提交出现问题，你可以快速浏览提交记录，短时间内找到可能存在问题的提交。然后，你就可以通过 &lt;code&gt;git checkout &lt;疑似有问题提交的前一个提交&gt;&lt;/code&gt;，暂时回到应用该提交前的状态，来排查故障。&lt;/li&gt;&lt;li&gt;在实现一个新功能、修复一个 Bug 的时候，你可以先浏览提交记录，快速判定之前是否有做了相关工作，从而避免「无用功」。&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;3）实践「原子化」提交&lt;/h3&gt;&lt;p&gt;下面，我就以几个在实际开发场景中的例子，来演示「原子化」提交的操作。&lt;/p&gt;&lt;h4&gt;实例一：修复 Bug 的「原子化」提交&lt;/h4&gt;&lt;p&gt;假设你正在开发一个电商平台的项目，最近有用户反馈在使用优惠券时，无法正确抵扣金额。经过排查，你发现是优惠券计算逻辑中的一个 Bug。你修复了这个 Bug，并且为了提高代码的可读性，对相关代码进行了重构，将一些冗长的函数拆分成了更小的函数。&lt;/p&gt;&lt;p&gt;如果你遵循「原子化」提交的原则，你可以将这个过程分为两个提交：&lt;/p&gt;&lt;figure class=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;提交序号&lt;/th&gt;&lt;th&gt;提交信息（commit message）&lt;/th&gt;&lt;th&gt;提交内容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1：专门修复 Bug&lt;/td&gt;&lt;td&gt;&lt;code&gt;Fix discount calculation bug in coupon system&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你只修改了计算优惠券金额的代码，确保 Bug 被修复。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2：进行代码重构&lt;/td&gt;&lt;td&gt;&lt;code&gt;Refactor coupon calculation code for better readability&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你对代码进行了拆分和重构，但不涉及任何 Bug 修复的逻辑。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样做的好处是，&lt;strong&gt;如果后续发现修复 Bug 的代码引入了新的问题，你可以很容易地通过 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 找到第一个提交，然后使用 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;git checkout&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 检出到修复 Bug 之前的版本&lt;/strong&gt;，快速定位问题。同时，代码重构的提交也不会干扰到 Bug 修复的提交，使得提交记录清晰明了。&lt;/p&gt;&lt;h4&gt;实例二：新功能开发的「原子化」提交&lt;/h4&gt;&lt;p&gt;假设你正在开发一个在线教育平台，需要添加一个新的功能：允许用户上传视频作业。这个功能涉及到多个方面的开发，包括前端页面的设计、后端接口的编写以及数据库表结构的调整。&lt;/p&gt;&lt;p&gt;如果你遵循「原子化」提交的原则，你可以将这个功能的开发过程分为多个提交：&lt;/p&gt;&lt;figure class=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;提交序号&lt;/th&gt;&lt;th&gt;提交信息（commit message）&lt;/th&gt;&lt;th&gt;提交内容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1：专注于前端页面设计&lt;/td&gt;&lt;td&gt;&lt;code&gt;Design video assignment upload page&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你创建了新的 HTML 文件和 CSS 样式，实现了页面的基本布局和样式。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2：编写后端接口&lt;/td&gt;&lt;td&gt;&lt;code&gt;Implement backend API for video assignment upload&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你创建了新的 API，实现了视频文件的接收和存储逻辑。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3：调整数据库表结构&lt;/td&gt;&lt;td&gt;&lt;code&gt;Add database table for video assignments&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你创建了新的数据库表，用于存储视频作业的相关信息，如用户 ID、作业 ID、视频文件路径等。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过这样的「原子化」提交，你可以清晰地记录每个功能模块的开发进度，便于后续的覆盘和维护。如果某个模块出现问题，你可以快速定位到相应的提交，进行针对性的排查和修复，而不会被其他模块的代码干扰。&lt;/p&gt;&lt;h4&gt;实例三：性能优化的原子提交&lt;/h4&gt;&lt;p&gt;假设你正在开发一款合成器软音源插件，最近发现插件占用处理器资源过高，影响用户体验。经过分析，你发现是由于合成器的振荡器、滤波器算法优化不当，且编译参数存在问题，拖累性能。为了优化性能，你需要调整合成器算法，并修改编译系统的编译参数。&lt;/p&gt;&lt;p&gt;如果你遵循「原子化」提交的原则，你可以将这个优化过程分为多个提交：&lt;/p&gt;&lt;figure class=&quot;table&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;提交序号&lt;/th&gt;&lt;th&gt;提交信息（commit message）&lt;/th&gt;&lt;th&gt;提交内容&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;1：优化振荡器算法&lt;/td&gt;&lt;td&gt;&lt;code&gt;Optimize oscillator with SIMD&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你使用 SIMD 指令来改善振荡器的性能。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;2：优化滤波器算法&lt;/td&gt;&lt;td&gt;&lt;code&gt;Optimize filter with SIMD&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你同样使用了 SIMD 指令，来提升滤波器的工作效率。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;3：优化编译系统的编译参数设置&lt;/td&gt;&lt;td&gt;&lt;code&gt;Enable compiler optimization&lt;/code&gt;&lt;/td&gt;&lt;td&gt;在这个提交中，你为编译系统添加了编译器优化参数，使编译器充分优化代码性能。&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;通过这样的原子化提交，你可以清晰地记录每个优化措施的实施过程，便于后续的评估和维护。如果某个优化措施带来了新的问题，你可以快速定位到相应的提交，进行针对性的排查和修复，而不会被其他优化措施的代码干扰。&lt;/p&gt;&lt;h3&gt;4）原子化提交的潜在优势&lt;/h3&gt;&lt;p&gt;值得一提的是，原子化提交除了有利于你自己的代码管理，还能起到「利他」的作用。&lt;/p&gt;&lt;p&gt;在 GitHub 等开源社区中，原子化提交可以方便其他开发者浏览你的提交记录和开发进程，使你的开源成果更好惠及他人。井井有条的提交记录，还可以给他人留下好印象，彰显你的专业水准。&lt;/p&gt;&lt;p&gt;另一方面，像 Linux 这样的大型项目，每个提交也都是原子化的，并且更加规范，这大大方便了二次开发时对新特性的反向移植工作。&lt;/p&gt;&lt;p&gt;我自己也在做 Android 内核的适配，曾经将新版本内核的特性反向移植到华为 P6 的 3.0.6 内核中。开发过程中，我会从新版本内核的提交日志中找到与某个特性有关的补丁，然后将其应用到当前内核中，几乎是一找一个准，节省了在海量代码中「找重点」的精力。&lt;/p&gt;&lt;p&gt;可见，原子化提交利己利人，具有非常显著的潜在优势，受益不只一点点。&lt;/p&gt;&lt;h2&gt;善用 &lt;code&gt;git rebase&lt;/code&gt;，合并细碎提交&lt;/h2&gt;&lt;p&gt;记得大概是 2018 年，我在刷知乎的时候见到一个提问：&lt;a href=&quot;https://www.zhihu.com/question/61283395&quot;&gt;&lt;i&gt;《Git commits 历史是如何做到如此清爽的？》&lt;/i&gt;&lt;/a&gt;，提问者非常惊讶于知名前端框架 Vue.js 源码库提交记录的干净、清爽。&lt;/p&gt;&lt;figure class=&quot;image ss-img-wrapper&quot;&gt;&lt;img src=&quot;https://cdnfile.sspai.com/2025/01/08/0f2275f4985a9701132c5d73248e46fb.png&quot;&gt;&lt;figcaption&gt;&lt;a href=&quot;https://github.com/vuejs/core/commits/main/&quot;&gt;Vue.js core 组件提交记录&lt;/a&gt;的一部分。&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;就在这个问题下，作者尤雨溪（Evan You）&lt;a href=&quot;Git commits 历史是如何做到如此清爽的？ - 尤雨溪的回答 - 知乎 https://www.zhihu.com/question/61283395/answer/186122300&quot;&gt;现身说法&lt;/a&gt;：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;多用 rebase。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;就是大佬这短短三个字的经验谈，让我对 git rebase 这个功能产生了浓厚的兴趣。那时的我恐怕也不会想到，后来的我会如此频繁地使用 rebase，从而摆脱既往使用 Git 时提交记录琐碎、杂乱的问题，离正确使用 Git 更近一步。&lt;/p&gt;&lt;h3&gt;1）琐碎的提交从何而来？&lt;/h3&gt;&lt;p&gt;大家都知道，作为版本管理系统，Git 要保证提交记录可靠、可追溯，因此不能像文本编辑那样随意更改提交记录，最多只提供 &lt;code&gt;git commit --amend&lt;/code&gt; 功能来允许你更改最新的提交。&lt;/p&gt;&lt;p&gt;但在开发过程中，或许你不太可能时时刻刻像 Vue.js 的提交记录那样，使自己每个提交都保持清爽、规范。回头使用 git log 浏览提交记录，你可能会发现你提交了太多琐碎的内容，「细致」到写一行代码、修一个错别字、修一个注释都有单独的提交。&lt;/p&gt;&lt;p&gt;很多时候这些提交是很琐碎的，没有必要单独保留，好比是你在文字处理软件中每写一句话就按「保存」，而每个修改都被单独保存成了一个文件。久而久之，提交记录就变得冗长琐碎，管理的时候就很难追溯到有用的、重要的提交。&lt;/p&gt;&lt;p&gt;这个时候， &lt;code&gt;git rebase&lt;/code&gt; 就派上用场了。&lt;/p&gt;&lt;p&gt;Git 的设计师考虑到用户整理提交记录的需求，于是就设计了 &lt;code&gt;git rebase&lt;/code&gt; 这一功能，允许你合并、编辑、重排已有的提交，使修改后的提交井然有序，就像 Vue.js 的提交记录那样清晰。&lt;/p&gt;&lt;h3&gt;2）实战演示如何合并琐碎提交&lt;/h3&gt;&lt;p&gt;以下面这个提交记录为例，记录了某项目从零开始写 &lt;code&gt;main()&lt;/code&gt; 函数的过程，仅仅是添加文本输出与修改注释的提交就有好几个。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;假设这些提交彼此之间没有冲突，每个提交都是在原有提交之上的微调。&lt;/p&gt;&lt;/blockquote&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用单行模式输出提交记录。最新的提交在前。
3a51f37493191451413b8dc7428d63351ce4b1e3 (HEAD -&gt; main, origin/main) main: 修改注释中的错别字
6587eeb437c8b139965085ddf99bd72bae682f89 main: 添加注释
61b04c318c24434996587eeb437c8b13996587e6 main: 添加操作结束的文本输出
61500445ebae1eb855ab216c6bbcec6ee73bd270 main: 微调操作开始的文本
7dad6bec684949ab0188085ddf99bc724c7b7b59 main: 添加操作开始的文本输出
996587eeb437c8b13996451413b8dc7603452f32 main: 添加基本文本输出
554bb6603452f3bf5705ac200effbdfc0aa97465 main: 创建 main 函数&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来，笔者就要把所有提交都合并到第一个提交「&lt;code&gt;main: 创建 main 函数&lt;/code&gt;」&lt;i&gt;（以下简称「目标提交」）&lt;/i&gt;当中。&lt;/p&gt;&lt;h4&gt;0x00：检查代码树是否有未提交的更改&lt;/h4&gt;&lt;p&gt;为了防止 rebase 弄乱代码仓库，Git 强制要求你的工作区「干净」，也就是不存在已经修改但没有提交的文件。否则，你是没有办法 rebase 的。&lt;/p&gt;&lt;p&gt;根据你的开发进度，你可以先提交修改；或者是使用 &lt;code&gt;git stash&lt;/code&gt; 将修改暂时保存起来，等到完成 rebase 后再运行 &lt;code&gt;git stash pop&lt;/code&gt; 恢复你的修改。&lt;/p&gt;&lt;h4&gt;0x01：进入 git rebase 模式&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;git log&lt;/code&gt; 查看提交记录，记住「目标提交」的 ID。然后，运行以下命令，开始 rebase：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;git rebase -i 554bb6603452f3bf5705ac200effbdfc0aa97465~&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个命令，允许你修改从「最新提交」到「目标提交」在内的所有提交。&lt;strong&gt;注意不要漏了提交 ID 后面的波浪线，否则会把「目标提交」给漏掉&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;稍等片刻，Git 会自动打开文本编辑器（通常是 Vim 或 Nano），列出一系列提交。其中：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;较新的提交列在文档的后面&lt;/strong&gt;&lt;strong&gt;，顺序是与 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;git log&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 相反的；&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;每一行前面的 &lt;code&gt;pick&lt;/code&gt; 是操作指令，意为采用该提交。这是默认的行为。&lt;/li&gt;&lt;/ul&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 创建 main 函数
pick 996587ee main: 添加基本文本输出
pick 7dad6bec main: 添加操作开始的文本输出
pick 61500445 main: 微调操作开始的文本
pick 61b04c31 main: 添加操作结束的文本输出
pick 6587eeb4 main: 添加注释
pick 3a51f374 main: 修改注释中的错别字&lt;/code&gt;&lt;/pre&gt;&lt;h4&gt;0x02：合并提交&lt;/h4&gt;&lt;p&gt;在本例中，从&lt;code&gt;996587ee&lt;/code&gt; 到&lt;code&gt;3a51f374&lt;/code&gt; 的这几个提交，都是要并入「目标提交」的提交。&lt;/p&gt;&lt;p&gt;我们把这些提交对应行行首的 &lt;code&gt;pick&lt;/code&gt; 改为 &lt;code&gt;fixup&lt;/code&gt; （或单个字母「&lt;code&gt;f&lt;/code&gt;」）。&lt;code&gt;fixup&lt;/code&gt; 指令的作用是合并提交，但是只保留前一个提交（相邻一个比它早的提交）的说明。如下所示：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 创建 main 函数
f 996587ee main: 添加基本文本输出
f 7dad6bec main: 添加操作开始的文本输出
f 61500445 main: 微调操作开始的文本
f 61b04c31 main: 添加操作结束的文本输出
f 6587eeb4 main: 添加注释
f 3a51f374 main: 修改注释中的错别字&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;随后，保存文件并关闭编辑器，Git 就会自动开始 rebase，一个个把新的提交并入相邻的前一个提交中，直到目标提交。这样，那些琐碎的提交都被并入我们的目标提交中，如此一来提交记录就清爽了不少：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用单行模式输出提交记录
f5815166356e85a5fe244f6024c2e401f04b10fa (HEAD -&gt; main, origin/main) main: 创建 main 函数&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;如果你希望保留相关提交的说明文本（以备参考等），那么你可以使用 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;squash&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 指令（或单个字母「&lt;/strong&gt;&lt;code&gt;&lt;strong&gt;s&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt;」）&lt;/strong&gt;，保存文件并关闭编辑器后， Git 会打开一个新文档，在这里你可以检查、修改提交说明。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;经过 rebase 之后，原本的「目标提交」ID 会发生变化，因为 Git 实际上生成了一个新的提交。&lt;/p&gt;&lt;/blockquote&gt;&lt;h3&gt;3）如果琐碎的提交是后来才做出的&lt;/h3&gt;&lt;p&gt;随著项目开发的推进，你达成的目标越来越多，提交数量也随之增长。但你发现一个早期编写的功能里，注释、代码缩进这些细节存在问题，于是再做了几个提交来修改。&lt;/p&gt;&lt;p&gt;现在，你想把这些琐碎的修改合并到该功能的提交中。此时你依然可以运用 &lt;code&gt;git rebase&lt;/code&gt;，先调整提交顺序，然后再使用 &lt;code&gt;fixup&lt;/code&gt;（或 &lt;code&gt;squash&lt;/code&gt;）指令来合并提交。&lt;/p&gt;&lt;h4&gt;0x00：准备工作&lt;/h4&gt;&lt;p&gt;在继续操作之前，你需要确保仓库里没有未提交的更改。&lt;/p&gt;&lt;p&gt;另一方面，你还要保证那些琐碎的提交不与你既往的修改产生冲突。比如说，如果你的提交除了修改注释，还顺带修改了函数结构、变量定义等内容，那么很可能会与你的其他提交造成冲突，需要你手动干预，造成不必要的麻烦。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;br&gt;假设下文的提交彼此之间没有冲突，每个提交都是在原有提交之上的调整。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;0x01：进入 rebase 模式，重排提交顺序&lt;/h4&gt;&lt;p&gt;在运行 &lt;code&gt;git rebase&lt;/code&gt; 之前，你需要通过 &lt;code&gt;git log&lt;/code&gt; 检索提交日志，找到你的「目标提交」。&lt;/p&gt;&lt;p&gt;在下面的例子中，目标提交是&lt;code&gt;554bb660&lt;/code&gt; &lt;i&gt;（「创建 main」函数）&lt;/i&gt;，你的任务就是要把你的目标是把 &lt;code&gt;3a51f374&lt;/code&gt; 与 &lt;code&gt;6587eeb4&lt;/code&gt; 这两个琐碎的提交合并到 &lt;code&gt;554bb660&lt;/code&gt; 这个提交中。&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用单行模式输出提交记录
...
3a51f374 main: 修改注释中的错别字
6587eeb4 main: 修正代码缩进
996587ee process: 使用 libfftw3，优化合成器算法逻辑
34e87ac3 process: 创建 process 函数
554bb660 main: 创建 main 函数
...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后，运行 &lt;code&gt;git rebase&lt;/code&gt; 命令：&lt;/p&gt;&lt;pre class=&quot;language-null&quot;&gt;&lt;code&gt;git rebase -i 554bb660~&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此时， Git 依然会打开一个文本编辑器，内容如下：&lt;/p&gt;&lt;pre class=&quot;language-null&quot;&gt;&lt;code&gt;pick 554bb660 main: 创建 main 函数
pick 34e87ac3 process: 创建 process 函数
pick 996587ee process: 使用 libfftw3，优化合成器算法逻辑
pick 6587eeb4 main: 修正代码缩进
pick 3a51f374 main: 修改注释中的错别字&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们在 &lt;code&gt;git rebase&lt;/code&gt; 给我们打开的文本编辑器里，把&lt;code&gt;3a51f374&lt;/code&gt; 与 &lt;code&gt;6587eeb4&lt;/code&gt; 这两个提交对应的行，&lt;strong&gt;整体复制到 &lt;/strong&gt;&lt;code&gt;&lt;strong&gt;554bb660&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; 的后面，并将原有的行注释掉&lt;/strong&gt;。就像下面这样：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 创建 main 函数

# 将提交所对应的行复制到我们的目标提交后面
pick 6587eeb4 main: 修正代码缩进
pick 3a51f374 main: 修改注释中的错别字

pick 34e87ac3 process: 创建 process 函数
pick 996587ee process: 使用 libfftw3，优化合成器算法逻辑

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick 6587eeb4 main: 修正代码缩进
#pick 3a51f374 main: 修改注释中的错别字&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;警告：&lt;/strong&gt;&lt;br&gt;不要修改 &lt;code&gt;pick&lt;/code&gt; 后面的内容，尤其是提交 ID，否则提交记录可能会发生混乱。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;0x02：合并提交&lt;/h4&gt;&lt;p&gt;确认提交顺序无误后，将待合并的提交对应行行首的 &lt;code&gt;pick&lt;/code&gt; 指令改为 &lt;code&gt;fixup&lt;/code&gt; （或 &lt;code&gt;squash&lt;/code&gt;），如下所示：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 554bb660 main: 创建 main 函数

# 将提交所对应的行复制到我们的目标提交后面
fixup 6587eeb4 main: 修正代码缩进
fixup 3a51f374 main: 修改注释中的错别字

pick 34e87ac3 process: 创建 process 函数
pick 996587ee process: 使用 libfftw3，优化合成器算法逻辑

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick 6587eeb4 main: 修正代码缩进
#pick 3a51f374 main: 修改注释中的错别字&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存文件后，Git 随即开始 rebase 工作，这样我们就可以化琐碎为清爽，得到一个干净的提交记录了。&lt;/p&gt;&lt;h3&gt;3）注意事项&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在进行 rebase 前，务必要检查你要合并的提交与「目标提交」之间是否存在冲突。&lt;/strong&gt;一旦存在冲突，那么 &lt;code&gt;git rebase&lt;/code&gt; 就无法继续，会要求你手工修改你的仓库代码来处理冲突，这需要更多的时间和精力——因为你要保证代码正常无误。&lt;/p&gt;&lt;p&gt;另一方面，经过 rebase 合并所得的提交，本质上是一个全新的提交，并且也改变了原有的提交记录，因此如果别人 fork 了你的代码，在与你的仓库同步时必定会发生冲突。你或许需要告知你的团队成员，或者是通过 README 来告知代码共享平台上的用户，告诉他们使用 &lt;code&gt;git pull --rebase&lt;/code&gt; 来同步你的修改。&lt;/p&gt;&lt;h2&gt;提交顺序不满意？也可以用 rebase 搞定&lt;/h2&gt;&lt;p&gt;我自己在找到开发项目的新灵感后，会马上新建一个 Git 仓库，开始动手实践，并把我写的源代码提交到仓库里。然而当我想进一步把仓库上传到 GitHub 时，却发现：我忘了加上许可协议、README 和 &lt;code&gt;.gitignore&lt;/code&gt;！&lt;/p&gt;&lt;p&gt;考虑到这些文件都是在新建项目时就要添加的，如果我在完成了一部分程序功能后补上去，再回看 Git 提交记录，总是会觉得格外「别扭」。在这样的情况下，&lt;strong&gt;我依然可以运用 git rebase，单独调整提交顺序，还我自己一个科学有序的提交记录。&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;1）实践如何调整提交顺序&lt;/h3&gt;&lt;p&gt;这里举一个高度简化的例子：假设笔者有一个项目，已经完成了程序的主体开发工作，后来才补上 README 与许可协议。提交日志如下（较新的提交在前面）：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;$ git log --pretty=oneline    # 使用单行模式输出提交记录
0fb4a3b0 添加 README.md
acbc6080 添加许可协议（GPLv3）
a841dbc1 UI 的 bug 修复
16f688a6 DSP 性能优化
75ca23f6 完成 UI 开发
277aad5f 完成 DSP 开发
eb323b0e 初始提交（Initial commit）&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我希望把与 README、许可协议相关的提交──也就是 &lt;code&gt;0fb4a3b0&lt;/code&gt; 、&lt;code&gt;acbc6080&lt;/code&gt; ──挪到时间顺序上的初始提交之后，也就是提交日志中初始提交的前一行。&lt;/p&gt;&lt;h4&gt;0x01：打开 git rebase&lt;/h4&gt;&lt;p&gt;在本例中，我已经确定好了「目标提交」，也就是初始提交，并且已经确保工作区没有未提交的代码。&lt;/p&gt;&lt;p&gt;然后，运行 git rebase，定位到目标提交：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;git rebase -i eb323b0e&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来 Git 会打开文本编辑器，显示以下内容（较新的提交在文档的后面）：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;pick 277aad5f 完成 DSP 开发
pick 75ca23f6 完成 UI 开发
pick 16f688a6 DSP 性能优化
pick a841dbc1 UI 的 bug 修复
pick acbc6080 添加许可协议（GPLv3）
pick 0fb4a3b0 添加 README.md&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;需要注意的是，git rebase 不能显示初始提交，所以我们能看到的最早的提交是紧邻初始提交之后（比初始提交新）的第一个提交。&lt;/p&gt;&lt;h3&gt;0x02：开始挪动&lt;/h3&gt;&lt;p&gt;先把&lt;code&gt;0fb4a3b0&lt;/code&gt; 、&lt;code&gt;acbc6080&lt;/code&gt; 这两个提交对应的行整体复制到 &lt;code&gt;277aad5f&lt;/code&gt; （也就是初始提交后的第一个提交）前面，然后将原有的那两行注释掉，如下所示：&lt;/p&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code&gt;# 将提交所对应的行复制到我们的目标提交后面。
# 本例中的目标提交是初始提交，所以我们实际上是把要挪动的提交放在 git rebase 文档的最前面
pick 0fb4a3b0 添加 README.md
pick acbc6080 添加许可协议（GPLv3）

pick 277aad5f 完成 DSP 开发
pick 75ca23f6 完成 UI 开发
pick 16f688a6 DSP 性能优化
pick a841dbc1 UI 的 bug 修复

# 为保险起见，将原有的行注释掉，而不是直接移动
#pick acbc6080 添加许可协议（GPLv3）
#pick 0fb4a3b0 添加 README.md&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;确认无误后，直接保存，此时 Git 就会自动开始 rebase 工作，稍等片刻再查看提交记录，你会发现提交顺序变了，README 与许可协议所对应的提交就出现在了初始提交的后面，大功告成。&lt;/p&gt;&lt;h3&gt;2）注意事项&lt;/h3&gt;&lt;p&gt;考虑到 rebase 时可能会面临的冲突，你需要三思而后行。&lt;/p&gt;&lt;p&gt;通常只建议重排那些对其他提交记录几乎没什么干扰的提交，例如你的提交只创建、修改了某一个特定的文件（README、许可协议这样的文件）。若重排不慎，你就不得不花费大量的精力来处理 rebase 的冲突，还有可能把提交记录弄乱。&lt;/p&gt;&lt;p&gt;同样地，你还需要告知你的团队成员或用户，使用 &lt;code&gt;git pull --rebase&lt;/code&gt; 来合并你的更改。&lt;/p&gt;&lt;h2&gt;对于未成型项目，&lt;code&gt;git commit --amend&lt;/code&gt; 也许更适合你&lt;/h2&gt;&lt;p&gt;git commit 是 Git 用于提交修改的命令。它有一个参数 &lt;code&gt;--amend&lt;/code&gt;，允许你修改最新一次提交的内容。有时你发现刚刚提交的代码有错误，或者是提交说明有问题，但是你不想再新建一个提交来修正这些错误，那么你就可以使用 &lt;code&gt;git commit --amend&lt;/code&gt; 这个命令。&lt;/p&gt;&lt;p&gt;然而，对我来说，&lt;code&gt;git commit --amend&lt;/code&gt; 的用途远不止于此。&lt;strong&gt;在项目还未成型的阶段，我使用它来保持提交记录的清爽。&lt;/strong&gt;&lt;/p&gt;&lt;h3&gt;1）为什么我会常用 &lt;code&gt;git commit --amend&lt;/code&gt;？&lt;/h3&gt;&lt;p&gt;我开发的项目，主要是将现有的开源音频插件移植到 &lt;a href=&quot;https://github.com/DISTRHO/DPF&quot;&gt;DPF&lt;/a&gt; 这个跨平台框架，这往往是「摸著石头过河」——无论是 DPF 还是被移植的插件，都缺乏文档，全靠我自己摸索。&lt;/p&gt;&lt;p&gt;在早期阶段，代码文件结构、模块和功能代码、编译系统等都还没有定稿，程序也只实现了部分功能：这就是未成型的状态。我个人习惯一边写功能一边调试，常常反复调整代码结构和算法，直到真正实现我预期的目标为止。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;这，往往意味著我要持续修改源代码库。&lt;/strong&gt;如此背景之下，如果每个修改都单独提交到仓库里，那么就意味著仓库里会有数十甚至上百条极其琐碎的提交记录，待到项目成型时还要用 &lt;code&gt;git rebase&lt;/code&gt; 来整理提交。你可以想象一下，用 WPS 写文章，每写一句话就另存一个文件，是什么样的感觉。&lt;/p&gt;&lt;h3&gt;2）如何妙用 &lt;code&gt;git commit --amend&lt;/code&gt;？&lt;/h3&gt;&lt;p&gt;为了解决上述问题，&lt;code&gt;git commit --amend&lt;/code&gt; 就成为了我最常用的操作之一。我会采用这样的思路：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;第一步，&lt;/strong&gt;用一个提交来存放项目成型前的所有开发工作。提交说明为「&lt;code&gt;Early development (WIP!)&lt;/code&gt;」，其中「&lt;code&gt;WIP（Work In Progress）&lt;/code&gt;」表示该提交随时可能被覆盖。做出这个提交之后，就不要再做新的提交。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;第二步，&lt;/strong&gt;每次完成一部分功能，确认代码编写与程序运行无误时，就使用 &lt;code&gt;git add&lt;/code&gt; 命令来将修改过的文件暂存（stage）起来，随后使用 &lt;code&gt;git commit --amend&lt;/code&gt; 更新这个提交的内容。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;第三步，&lt;/strong&gt;继续完成开发，直到项目成型。此时，再运行 &lt;code&gt;git commit --amend&lt;/code&gt;，重新修改提交说明，将「&lt;code&gt;WIP&lt;/code&gt;」等字样删除，代表我的早期开发工作已经定稿。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我个人偏向在项目成型之后，才开始转变为以一个个单独提交的方式来持续开发。这里的「成型」，大致可理解为代码结构稳定，程序预期功能已经实现，至少有可以跑起来的 Alpha 版本推出。&lt;/p&gt;&lt;p&gt;如此一来，提交记录就会变得清爽，不会让琐碎的早期开发记录「挤占」你的 git log，事后也不需要再单独花时间来 rebase。&lt;/p&gt;&lt;h3&gt;3）注意事项&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;由于这种方法并不会为每个更改留下单独的提交，后续难以通过 &lt;code&gt;git log&lt;/code&gt; 回溯，故只建议在项目未成型时使用。如果你不放心，依然可以每做一组工作就提交一次，对此我建议在提交说明里做标记，以备项目成形后再 rebase 提交记录。&lt;/li&gt;&lt;li&gt;在 &lt;code&gt;git commit --amend&lt;/code&gt; 之前，也务必确保程序与代码无误，以免混乱。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;除此之外，当你在为你的项目添加新功能时，你也可以在原型设计、测试的阶段使用&lt;code&gt;git commit --amend&lt;/code&gt; ，因为这个过程常常就像写一篇新文章，你或许也不希望每写一句话就又来另存一个新文档。&lt;/p&gt;&lt;h2&gt;写在最后&lt;/h2&gt;&lt;p&gt;在日常与 Git 打交道的过程中，我一直致力于精进 Git 的使用。上面这几点技巧，就是我自己的实践成果，著力于让提交日志更清爽、规范，方便后续的维护。让我们再来回顾一下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;使用「原子化」提交，每个提交只做一件事，利于管理、维护和回顾你的开发进度；&lt;/li&gt;&lt;li&gt;灵活运用 &lt;code&gt;git rebase&lt;/code&gt;，合并细碎的提交，按需要重排提交，使提交记录清爽、规范；&lt;/li&gt;&lt;li&gt;项目未成型时，活用 &lt;code&gt;git commit --amend&lt;/code&gt;，保持提交记录清爽。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;当然，以上的技巧，更多体现出我个人的使用习惯，客观上也改善了我自己 Git 仓库的质量。相信我的分享能为感兴趣的读者朋友们提供参考，一同将 Git 用得更自在。&lt;/p&gt;&lt;/div&gt;</description>
            <author>爱拼安小匠</author>
            <pubDate>Tue, 21 Jan 2025 11:06:37 +0800</pubDate>
        </item>
        <atom:link href="https://sspai.com/feed" type="application/rss+xml" ref="self"></atom:link>
        <atom:link href="https://sspai.com/feed" type="application/rss+xml" ref="hub"></atom:link>
    </channel>
</rss>