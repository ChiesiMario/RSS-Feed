<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 07 Aug 2025 07:42:17 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>开源 AI 客户端 Cherry Studio v1.5.4 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;开源 AI 助手平台 Cherry Studio v1.5.4 已发布，这是一个重要的版本更新，共合并了 125 个拉取请求（Pull Requests），由核心团队及社区贡献者共同完成。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-438d9fbdaff56b2a32861da4a553348a808.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;一、核心功能与平台集成&lt;/h4&gt; 
&lt;p&gt;v1.5.4 在平台能力上进行了重要拓展，集成了多个新的服务与功能。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;集成 AWS Bedrock API （#8383）&lt;/strong&gt;：新增对 Amazon Bedrock 的支持，用户可直接调用其提供的模型服务。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持 Vertex AI （Claude） （#7564）&lt;/strong&gt;：新增对 Google Cloud Vertex AI 及其 Claude 模型系列的支持。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;引入 Cherry Studio as a Service （CSaaS） （#8098）&lt;/strong&gt;：为未来的服务化部署提供了基础框架。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;二、新增模型支持&lt;/h4&gt; 
&lt;p&gt;新增了对以下供应商和模型的支持。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;新增供应商&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Poe (#8758)&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;新增模型&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI&lt;/strong&gt;: o3 （Omni） 系列模型 （#8253）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grok&lt;/strong&gt;: Grok 4 模型 （#8545）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;阿里通义千问&lt;/strong&gt;： Qwen 3-235B 等新模型，并优化了&amp;nbsp;thinking&amp;nbsp;状态的判断逻辑 （#8537， #8641， #8854）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智谱 AI&lt;/strong&gt;: Zhipu 新模型 （#8609）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本次更新包含&amp;nbsp;&lt;strong&gt;超过 10 项&lt;/strong&gt;&amp;nbsp;与模型直接相关的改动。&lt;/p&gt; 
&lt;h4&gt;三、用户体验与功能优化&lt;/h4&gt; 
&lt;p&gt;对用户界面和现有功能进行了多项改进，旨在提升日常使用效率和便利性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;UI/UX 改进 （超过 15 项）&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;拖拽上传&lt;/strong&gt;： 支持将文本文件拖拽至输入框 （#8579）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;消息多选&lt;/strong&gt;： 对话中的消息支持多选模式 （#8653）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;界面优化&lt;/strong&gt;： 改进了模型列表、弹窗等组件的加载速度和交互动画 （#8667， #8797）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;参数调整&lt;/strong&gt;： 新增 Top-P 参数的设置开关 （#8137）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Markdown 增强&lt;/strong&gt;： 支持 GitHub 风格的 Alert 语法 （#8842）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;核心功能增强&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;后台翻译&lt;/strong&gt;： 翻译任务可于后台运行，不阻塞前台操作 （#7892）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;备份路径&lt;/strong&gt;： 备份目录支持使用相对路径 （#8471）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;网络代理&lt;/strong&gt;： 新增绕过系统代理（Bypass Proxy）的选项 （#8791）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;四、性能与代码质量&lt;/h4&gt; 
&lt;p&gt;为了提升应用的稳定性和可维护性，此版本进行了多项底层的优化和重构。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;性能提升 （Performance）&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;内存优化&lt;/strong&gt;： 修复了部分场景下的内存泄漏问题 （#8619）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;加载提速&lt;/strong&gt;： 优化了模型列表和国际化文本的加载逻辑，提升了响应速度 （#8751， #8548）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;API 健康检查&lt;/strong&gt;： 优化了 API 检查的超时逻辑，减少不必要的等待 （#8830）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代码重构 （Refactor）&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;架构调整&lt;/strong&gt;： 对&amp;nbsp;ApiService、aiCore&amp;nbsp;等核心模块进行了代码重构，提升了逻辑清晰度 （#8671， #8618）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;构建工具升级&lt;/strong&gt;： 将 Vite 升级为 Rolldown，以提升开发构建效率 （#8460）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;UI 组件库更新&lt;/strong&gt;： 统一使用 Lucide 图标库，并重写了虚拟列表等基础组件 （#8803， #8711）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本次更新包含&amp;nbsp;&lt;strong&gt;超过 20 项&lt;/strong&gt;&amp;nbsp;与性能和代码重构相关的提交。&lt;/p&gt; 
&lt;h4&gt;五、问题修复&lt;/h4&gt; 
&lt;p&gt;修复了&amp;nbsp;&lt;strong&gt;超过 30 个&lt;/strong&gt;&amp;nbsp;已知问题，主要包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了部分场景下工具调用（Tool Call）失败的问题 （#8526）。&lt;/li&gt; 
 &lt;li&gt;解决了特定 Qwen 模型无法禁用&amp;nbsp;thinking&amp;nbsp;模式的问题 （#8854）。&lt;/li&gt; 
 &lt;li&gt;修正了多个界面的响应式布局和显示错误 （#8517， #8606）。&lt;/li&gt; 
 &lt;li&gt;修复了备份、数据导出、代理设置等功能中的多个逻辑缺陷。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下载地址：https://github.com/CherryHQ/cherry-studio/releases/tag/v1.5.4&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364804/cherry-studio-1-5-4</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364804/cherry-studio-1-5-4</guid>
      <pubDate>Sun, 03 Aug 2025 06:36:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌 AI 编程工具 Gemini CLI v0.1.18 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌 Gemini 命令行工具 (Gemini CLI&amp;nbsp;) v0.1.18&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2Fdiscussions%2F5698" target="_blank"&gt;已发布，&lt;/a&gt;带来了一系列新功能和改进。&lt;/p&gt; 
&lt;p&gt;主要变化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;全面提升了 Gemini 2.5 Pro 的使用额度&lt;/li&gt; 
 &lt;li&gt;新增多目录支持，用户可通过--include-directories 参数在启动时加载多个目录，或在运行时使用/directory 命令添加新目录&lt;/li&gt; 
 &lt;li&gt;当 Gemini 记忆信息时，会请求用户许可&lt;/li&gt; 
 &lt;li&gt;新增/init 命令，可自动生成定制化的 GEMINI.md 项目说明文件&lt;/li&gt; 
 &lt;li&gt;允许扩展通过.toml 文件提供自定义斜杠命令&lt;/li&gt; 
 &lt;li&gt;Gemini CLI 现在支持自动更新&lt;/li&gt; 
 &lt;li&gt;改进了 GEMINI.md 的导入功能，支持更多文件类型&lt;/li&gt; 
 &lt;li&gt;增加/chat delete 命令用于删除已保存的对话&lt;/li&gt; 
 &lt;li&gt;将 Emacs 添加为默认的外部编辑器选项。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2Freleases%2Ftag%2Fv0.1.18" target="_blank"&gt;下载地址&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Gemini CLI 是谷歌开源的免费 AI 编程工具，该工具将 Gemini 的能力带到了开发者最常用的终端，能够提供轻量化的 Gemini 访问通道。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1705" src="https://static.oschina.net/uploads/space/2025/0626/100936_PeVk_2720166.png" width="2435" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;该工具&lt;/span&gt;支持通过自然语言实现代码编写、问题调试及工作流优化，还可以作为多功能本地工具，完成内容生成、问题解决、深度研究及任务管理等各类任务。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364794</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364794</guid>
      <pubDate>Sun, 03 Aug 2025 06:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>⚡模型即服务 - Wow 框架 v6.0.6 发布！🏗️</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;&lt;img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"&gt;&lt;img alt="License" src="https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"&gt;&lt;img alt="Integration Test Status" src="https://oscimg.oschina.net/oscnet/badge.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"&gt;&lt;img alt="Awesome Kotlin Badge" src="https://oscimg.oschina.net/oscnet/awesome-kotlin.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt="👉" height="14" src="https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="👈" height="14" src="https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;Wow v6.0.6 发布日志：命令等待策略全面升级！&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;🎉 本次更新聚焦&lt;strong&gt;命令处理传播链&lt;/strong&gt;，引入革命性的等待策略机制，显著提升分布式系统交互体验！同时修复关键问题，增强文档可视化，为开发者带来更流畅的开发体验。&lt;/p&gt; 
  &lt;h2&gt;&lt;img alt="命令处理传播链" src="https://oscimg.oschina.net/oscnet//697f95efe1d73e107ed462d27f9e4bfa.svg" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
  &lt;h4&gt;✨ 核心亮点&lt;/h4&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;1. 命令处理引擎全面升级&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SimpleWaitingForChain&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持，实现轻量级等待命令传播链策略&lt;/li&gt; 
   &lt;li&gt;引入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;NamedFunctionInfo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;API，统一函数信息标准化管理&lt;/li&gt; 
   &lt;li&gt;命令等待策略重构：支持信号聚合与函数物料化接口&lt;/li&gt; 
   &lt;li&gt;添加命令大小监控到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WaitSignal&lt;/code&gt;，实时掌控处理负载&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;2. 分布式事务可靠性增强&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;优化命令传播逻辑，提升跨服务消息可达性&lt;/li&gt; 
   &lt;li&gt;无状态 Saga 函数支持 Header 传播，保障上下文一致性&lt;/li&gt; 
   &lt;li&gt;修复信号等待逻辑，解决异步处理边界条件问题&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;3. 开发体验优化&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;命令网关文档全面更新，新增最佳实践指南&lt;/li&gt; 
   &lt;li&gt;错误信息增强：支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;toDefault&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;自动转换&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;hr&gt; 
  &lt;h4&gt;🛠 关键修复&lt;/h4&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; box-sizing:border-box; display:block; margin-bottom:16px; margin-top:0px; overflow:auto; width:1116px; word-break:initial"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;th&gt;模块&lt;/th&gt; 
     &lt;th&gt;修复内容&lt;/th&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;建模&lt;/strong&gt;&lt;/td&gt; 
     &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;修正简单命令聚合函数上下文名称&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;核心&lt;/strong&gt;&lt;/td&gt; 
     &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;修复测试用例&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;sendAndWaitThenNotify&lt;/code&gt;&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;依赖&lt;/strong&gt;&lt;/td&gt; 
     &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;同步更新 Angular/Swagger/Gradle 等 15+依赖至安全版本&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
  &lt;hr&gt; 
  &lt;h4&gt;⚡ 性能优化&lt;/h4&gt; 
  &lt;ul&gt; 
   &lt;li&gt;命令等待通知器改用命令列表，降低内存占用 30%&lt;/li&gt; 
   &lt;li&gt;ServerSentEvent 处理逻辑重构，提升响应式流吞吐量&lt;/li&gt; 
   &lt;li&gt;快照函数信息标准化，优化事件溯源存储效率&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html" target="_blank"&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Features" src="https://oscimg.oschina.net/oscnet//54a600b304080a0d57d184160d0b98b6.png" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Architecture" src="https://oscimg.oschina.net/oscnet//83252afbddae4112f6b32b7210decbc5.svg" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;命令处理传播链&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="WaitingForChain" src="https://oscimg.oschina.net/oscnet//eaaa67b23cda23a305daac27691cbbc3.svg" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html" target="_blank"&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="WaitingForStage" src="https://oscimg.oschina.net/oscnet//c6b6ea58efc246571204af083050da6f.svg" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html" target="_blank"&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html%23%25E8%2581%259A%25E5%2590%2588%25E5%2591%25BD%25E4%25BB%25A4" target="_blank"&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364788/wow-6-0-6-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364788/wow-6-0-6-released</guid>
      <pubDate>Sun, 03 Aug 2025 05:38:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>给予虚拟成像台尝鲜版八，枚举和哑数据模式支持图片删除功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;给予虚拟成像台尝鲜版八，枚举和哑数据模式支持图片删除功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;给予虚拟成像台尝鲜版八，更多测试，更多缺陷修复，此版本优化了代码生成物的图片删除功能，增加了确认对话框，并且人工智能向导界面也支持了图片在线编辑功能。此版本修复了尝鲜版七的一些错误，并更大范围的测试，代码生成质量明显提高。详细介绍视频请见：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1EktAzbEGx%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1EktAzbEGx/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;给予虚拟成像台尝鲜版七，代码生成物图片功能大翻新，新支持图片删除功能，并有功能更新和缺陷修复。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在通用代码生成器原有的图片功能实现中，只有图片的新增和更新功能，故而图片的删除比较麻烦，您可能只有上传一张代表空白的图片将就一下，总不能直接删数据库中的字段。现在，新增了一个删除按钮，删除图片就变得很容易了。演示视频请见：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1q1hWzZExz%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1q1hWzZExz/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在前几个尝鲜版中，已完成代码生成器的在线图片编辑功能，此功能意味着，您可以在编辑器中方便的管理初始化数据中的图片信息，非常方便的管理和更新初始化数据中的图片信息，演示视频请见：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ndb9z1ESY%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1ndb9z1ESY/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台的 Rust 语言和相关的软件框架已更新，情况如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust 从 1.78 更新至 1.85&lt;/li&gt; 
 &lt;li&gt;Axum 从 0.6.20 更新至 0.8.4&lt;/li&gt; 
 &lt;li&gt;Tokio 从 1.32.0 更新至 1.46.1&lt;/li&gt; 
 &lt;li&gt;Sqlx 从 0.7.1 更新至 0.8.6&lt;/li&gt; 
 &lt;li&gt;不再使用 axum-sessions 改用 tower-sessions&lt;/li&gt; 
 &lt;li&gt;Oracle 0.5.7 更新至 0.6.3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;演示视频请见：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GTubzCEZ4%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1GTubzCEZ4/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台将强大的生产力赋能广大程序员。无论是新开发的软件还是通过遗留数据库反射以再次开发的遗留项目，您都可以使用动词算子式通用代码生成器的强大生产力大大加速研发速度。给予虚拟成像台永远是广大程序员的瑞士军刀，是加快开发速度和提高开发质量的利器。&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台&lt;span style="background-color:#ffffff; color:#333333"&gt;的项目地址：&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/Given"&gt;https://gitee.com/jerryshensjf/Given&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;给予虚拟成像台&lt;/h1&gt; 
&lt;h4&gt;介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;项目名：给予虚拟成像台&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;Project Name: Given the gateway&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;为第二代动词算子架构的通用代码生成器阵列，目前支持 Rust 语言，技术状态已领先于 Rust 通用代码生成器莲花，红莲尝鲜版三十六。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台是一款彻底插件化的多语言通用代码生成器阵列。其所有功能由插件提供，插件不分语言，如果支持某种语言的生成需求，它就会生成压缩包，如果不支持，软件会报一个编译错误。现有的 Rust 语言代码生成功能由标准插件提供。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台有完善的插件管理功能。未来所有的功能增强都会通过不同的插件提供。给予虚拟成像台的插件机制，构成了第二代动词算子架构的主要部分。&lt;/p&gt; 
&lt;h3&gt;项目图片&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//66be1776f5cf95e9126f127d70d69b74.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;生成功能界面截图&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//0499bdad0c36942d59ec675d1b2acc42.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//3dea6168d825826f0ef70db2564d7553.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//6b1348ede5a7c6b10614b4f4af95c5a9.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//2221f19e2ae00700c74a150b3fa01b22.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//3672a87aacde232625f517b056bc955e.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//71c43090a615504fb790b6e565a91a7a.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//4dbacdb5a8ecd237e4e1ce1f0d621304.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;统一的插件架构&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;内含动词算子，标准域对象，界面和模块&lt;/li&gt; 
 &lt;li&gt;动词算子库，模块库和界面库是统一的，因内含物的不同提供不同的服务&lt;/li&gt; 
 &lt;li&gt;对象的标准命名:插件名.模块名.对象名&lt;/li&gt; 
 &lt;li&gt;不分语言和技术栈，生成时匹配语言，技术栈，数据库类型，前端技术，后端技术并输出结果，如果不匹配返回 Null 或抛 ValidateException&lt;/li&gt; 
 &lt;li&gt;可以引用本插件和其他插件的模块&lt;/li&gt; 
 &lt;li&gt;一个代码生成器阵列以一个阵列本体和一系列插件 Jar 组成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;完整功能&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台支持动词算子式通用代码生成器的完整功能。包括但不限于&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;哑数据模式&lt;/li&gt; 
 &lt;li&gt;DBTools 模式&lt;/li&gt; 
 &lt;li&gt;数据库自动反射功能&lt;/li&gt; 
 &lt;li&gt;Oracle 数据库支持&lt;/li&gt; 
 &lt;li&gt;数据磨坊功能群&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本功能群&lt;/li&gt; 
 &lt;li&gt;动态椰子树功能群&lt;/li&gt; 
 &lt;li&gt;动词否定功能群&lt;/li&gt; 
 &lt;li&gt;字段否定功能群&lt;/li&gt; 
 &lt;li&gt;高级定制功能群&lt;/li&gt; 
 &lt;li&gt;部分生成功能群&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;顺便说一句 Rust 通用代码生成器莲花也是支持 Oracle 数据库的，&lt;/p&gt; 
&lt;h3&gt;组件清单&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;曲速引擎前端代码生成器&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/WarpEngine"&gt;https://gitee.com/jerryshensjf/WarpEngine&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;表反射引擎&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/ReflectTable"&gt;https://gitee.com/jerryshensjf/ReflectTable&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;标准插件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/StdPlugin"&gt;https://gitee.com/jerryshensjf/StdPlugin&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;蛋糕商城插件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/CookieShopPlugin"&gt;https://gitee.com/jerryshensjf/CookieShopPlugin&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;版本发布&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台尝鲜版八，更多测试，更多缺陷修复，此版本优化了代码生成物的图片删除功能，增加了确认对话框，并且人工智能向导界面也支持了图片在线编辑功能。此版本修复了尝鲜版七的一些错误，并更大范围的测试，代码生成质量明显提高。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台译已发布尝鲜版七，代码生成物图片功能大翻新，支持图片删除。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台尝鲜版六，支持模板向导生成界面在线编辑图片。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台已发布尝鲜版五，此版本增强支持了 Oracle 数据库，并更新了相关文档。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;已发布给予尝鲜版四，此版本更新了 Rust 语言和主要框架的版本。技术实现已领先于 Rust 通用代码生成器莲花。具体软件版本更新如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rust 从 1.78 更新至 1.85&lt;/li&gt; 
 &lt;li&gt;Axum 从 0.6.20 更新至 0.8.4&lt;/li&gt; 
 &lt;li&gt;Tokio 从 1.32.0 更新至 1.46.1&lt;/li&gt; 
 &lt;li&gt;Sqlx 从 0.7.1 更新至 0.8.6&lt;/li&gt; 
 &lt;li&gt;不再使用 axum-sessions 改用 tower-sessions&lt;/li&gt; 
 &lt;li&gt;Oracle 0.5.7 更新至 0.6.3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;已发布给予尝鲜版三，完善支持人工智能脚本运行。&lt;/p&gt; 
&lt;h3&gt;插件概要&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;StdPlugin 标准插件由红莲三十六改过来&lt;/li&gt; 
 &lt;li&gt;CookieShopPlugin 蛋糕商城插件&lt;/li&gt; 
 &lt;li&gt;SimpleAuthPlugin 简易认证插件&lt;/li&gt; 
 &lt;li&gt;SimpleAuth2Plugin 简易认证插件 2&lt;/li&gt; 
 &lt;li&gt;AdvancedAuthPlugin 先进认证插件&lt;/li&gt; 
 &lt;li&gt;DictionaryPlugin 字典插件&lt;/li&gt; 
 &lt;li&gt;OrgnizationPlugin 组织插件&lt;/li&gt; 
 &lt;li&gt;LocationPlugin 地点插件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;介绍视频&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版八&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1EktAzbEGx%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1EktAzbEGx/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版七&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1q1hWzZExz%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1q1hWzZExz/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版六&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ndb9z1ESY%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1ndb9z1ESY/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版五&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1higLzgEY1%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1higLzgEY1/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版四&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GTubzCEZ4%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1GTubzCEZ4/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版三&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1CSGNzqEVY%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1CSGNzqEVY/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版二&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ry34z4EhC%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1ry34z4EhC/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;尝鲜版&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1g4KDzbED3%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1g4KDzbED3/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;后端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将后端项目下载并解压&lt;/li&gt; 
 &lt;li&gt;根据您的数据库选项，配置好您后端的数据库，并使用后端代码生成物的 sql 文件夹下的数据库脚本完成建库建表并加载初始化数据&lt;/li&gt; 
 &lt;li&gt;您需要检查后端代码生成物内的配置文件，确认数据库和用户名密码的正确性&lt;/li&gt; 
 &lt;li&gt;您需要安装配置好 rust 1.85 或其他兼容版本的 rust 环境&lt;/li&gt; 
 &lt;li&gt;在后端代码生成物的根目录下运行 cargo run 命令启动 rust 后端项目&lt;/li&gt; 
 &lt;li&gt;启动完毕后访问后端代码生成物，&lt;a href="https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8082" target="_blank"&gt;http://localhost:8082&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将前端代码生成物解压&lt;/li&gt; 
 &lt;li&gt;确认您已经安装好和您选择的 Nodejs 版本相容的前端 Nodejs 环境&lt;/li&gt; 
 &lt;li&gt;使用 npm install -registry=&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org" target="_blank"&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;安装 Nodejs 依赖包&lt;/li&gt; 
 &lt;li&gt;如果您使用的是 Nodejs 21 和 Nodejs18，请运行命令：export NODE_OPTIONS=--openssl-legacy-provider&lt;/li&gt; 
 &lt;li&gt;运行命令：node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js&lt;/li&gt; 
 &lt;li&gt;如此访问前端代码生成物，&lt;a href="https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8000%2F" target="_blank"&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364776</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364776</guid>
      <pubDate>Sun, 03 Aug 2025 04:19:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>AI 编程工具 Cursor 发布 1.4，改进 Agent 工具、新增用量统计显示</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Cursor 1.4 已正式发布，重点改进了 Agent 的工具、可控性和使用可见性。&lt;/p&gt; 
&lt;p&gt;主要变化如下&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Agent 功能显著优化&lt;/strong&gt;：通过自然语言指令即可启动后台 Agent，处理代码生成、错误修复等复杂任务，支持任务队列预排，效率更高。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;远程独立运行&lt;/strong&gt;：Agent 可在独立远程环境中克隆 GitHub 仓库并操作独立分支，支持无缝任务交接，开发者可随时介入审查。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用量统计与提醒&lt;/strong&gt;：界面实时显示用量详情，达到 50% 时提醒，可自定义关闭。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;紧凑聊天模式&lt;/strong&gt;：隐藏工具图标、默认收起代码差异，界面更简洁。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-bf39cc249cbdfb695abb773d64a6be7c8bc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0807/115838_ydjb_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcursor.com%2Fen%2Fchangelog%2F1-4" target="_blank"&gt;详情查看发布说明&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364775/cursor-v1-4-release</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364775/cursor-v1-4-release</guid>
      <pubDate>Sun, 03 Aug 2025 03:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Electron 37.2.6 发布，跨平台桌面应用开发工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Electron 是一个使用 JavaScript、HTML 和 CSS 构建跨平台的桌面应用程序。它基于 Node.js 和 Chromium，被 Atom 编辑器和许多其他应用程序使用。Electron 兼容 Mac、Windows 和 Linux，可以构建出三个平台的应用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Electron v37.2.6 现已发布，一些更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;修复&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Referer&lt;/code&gt;修复了使用时无法正确设置标题的错误&lt;code&gt;webContents.downloadURL()&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47865" target="_blank"&gt;#47865&amp;nbsp;&lt;/a&gt;&lt;span&gt;（也适用于&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47866" target="_blank"&gt;36&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47867" target="_blank"&gt;38&lt;/a&gt;）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webContents&lt;/code&gt;修复了在，之后调用某些函数时发生的崩溃问题&lt;code&gt;window.close()&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47954" target="_blank"&gt;#47954&amp;nbsp;&lt;/a&gt;&lt;span&gt;（同样适用于&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47953" target="_blank"&gt;36&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47952" target="_blank"&gt;38&lt;/a&gt;）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;setContentProtection&lt;/code&gt;修复了某些旧 Windows 版本无法按预期工作的问题。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47887" target="_blank"&gt;#47887&amp;nbsp;&lt;/a&gt;&lt;span&gt;（也适用于&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47888" target="_blank"&gt;36&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47886" target="_blank"&gt;38&lt;/a&gt;）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;accentColor&lt;/code&gt;修复了将无效颜色作为字符串传递会导致白色强调色的问题。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47800" target="_blank"&gt;#47800&amp;nbsp;&lt;/a&gt;&lt;span&gt;（也在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47684" target="_blank"&gt;38&lt;/a&gt;中）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;修复了视频擦洗无法在播放时正确保持新位置的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47971" target="_blank"&gt;#47971&amp;nbsp;&lt;/a&gt;&lt;span&gt;（也适用于&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47965" target="_blank"&gt;38 版&lt;/a&gt;）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;修复了 Windows 在 Linux 上始终使用深色主题而对系统主题更改没有反应的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47920" target="_blank"&gt;#47920&amp;nbsp;&lt;/a&gt;&lt;span&gt;（也在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47919" target="_blank"&gt;38&lt;/a&gt;中）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;修复了在 Windows 上创建窗口时正确应用背景材质的问题，恢复了动画，同时还修复了动态设置背景材质无效的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47956" target="_blank"&gt;#47956&amp;nbsp;&lt;/a&gt;&lt;span&gt;（也适用于&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47957" target="_blank"&gt;36&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47814" target="_blank"&gt;38&lt;/a&gt;）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其他变化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;将 Chromium 更新至 138.0.7204.185。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F47909" target="_blank"&gt;#47909&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Freleases%2Ftag%2Fv37.2.6" target="_blank"&gt;https://github.com/electron/electron/releases/tag/v37.2.6&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364757/electron-37-2-6-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364757/electron-37-2-6-released</guid>
      <pubDate>Sun, 03 Aug 2025 03:03:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ip2region 2.12.0 发布 - 开源 IP 数据管理框架和定位库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fip2region.net" target="_blank"&gt;ip2region&lt;/a&gt; 是一个离线的 IP 数据管理框架和定位库，支持亿级别的 IP 断管理，10 微秒级别的查询性能，提供了很多主流编程语言的 xdb 数据格式的生成和查询实现。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;ip2region 官方社区已正式上线旨提强化 IP 相关的工具链和数据服务，目前提供了稳定的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fip2region.net%2Fproducts%2Foffline" target="_blank"&gt;商用离线数据&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fip2region.net%2Fsearch%2Fdemo" target="_blank"&gt;在线查询测试&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fip2region.net%2Fdoc%2F" target="_blank"&gt;xdb 使用/技术文档&lt;/a&gt;。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;strong&gt;ip2region 2.12.0 详细更新如下&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;1、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Ftree%2Fmaster%2Fbinding%2Fcsharp" target="_blank"&gt;C# 查询客户端&lt;/a&gt;&amp;nbsp;增加基于 VectorIndex 缓存 / 纯文件，查询的并发支持，同时增加对 netstandard2.0 的支持，项目打包的时候移除 changelog.md。&lt;/p&gt; 
&lt;p&gt;2、增加 rust xdb 生成器的实现，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Ftree%2Fmaster%2Fmaker%2Frust" target="_blank"&gt;[rust-xdb-maker]&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;3、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Ftree%2Fmaster%2Fbinding%2Fc" target="_blank"&gt;C 查询客户端&lt;/a&gt;&amp;nbsp;增加对 windows 的兼容，ANSI 标准。&lt;/p&gt; 
&lt;p&gt;4、增加 C++ xdb 生成器和数据编辑器的实现，[&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Ftree%2Fmaster%2Fmaker%2Fcpp" target="_blank"&gt;cpp-xdb-maker&lt;/a&gt;]。&lt;/p&gt; 
&lt;p&gt;5、修复 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Ftree%2Fmaster%2Fbinding%2Fpython" target="_blank"&gt;python 查询客户端&lt;/a&gt;&amp;nbsp;的 getInt2 的实现 bug [&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Fpull%2F344" target="_blank"&gt;PR#334&lt;/a&gt;]。&lt;/p&gt; 
&lt;p&gt;6、增加 typescript xdb 查询客户端的实现，[&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Ftree%2Fmaster%2Fbinding%2Ftypescript" target="_blank"&gt;typescript-xdb-client&lt;/a&gt;]。&lt;/p&gt; 
&lt;p&gt;7、golang 和 java 的 xdb 生成程序增加 --log-level 参数，默认为 info，屏蔽生成过程中的大量日志输出，极大的减少 xdb 的生成时间。&lt;/p&gt; 
&lt;p&gt;8、golang 和 java 的 xdb 生成程序增加&amp;nbsp;--field-list 参数，用于 xdb 文件的自定义字段指定，[&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fip2region.net%2Fdoc%2Fdata%2Fipv4_xdb_make%23field-list" target="_blank"&gt;xdb-自定义字段&lt;/a&gt;]，详细请参考 [&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fip2region.net%2Fdoc%2Fdata%2Fipv4_xdb_make" target="_blank"&gt;XDB-V4 文件生成教程&lt;/a&gt;]。&lt;br&gt; &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ip2region 2.12.0 下载地址&lt;/strong&gt;：&lt;/p&gt; 
&lt;p&gt;1、Gitee：&lt;a href="https://gitee.com/lionsoul/ip2region/tree/v2.12.0"&gt;https://gitee.com/lionsoul/ip2region/tree/v2.12.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;2、Github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flionsoul2014%2Fip2region%2Freleases%2Ftag%2Fv2.12.0" target="_blank"&gt;https://github.com/lionsoul2014/ip2region/releases/tag/v2.12.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364754/ip2region-2-12-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364754/ip2region-2-12-0-released</guid>
      <pubDate>Sun, 03 Aug 2025 02:52:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>FreeCAD 1.0.2 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;FreeCAD 1.0.2 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.freecad.org%2F2025%2F08%2F06%2Ffreecad-1-0-2-released%2F" target="_blank"&gt;发布&lt;/a&gt;，其中包含 30 多个错误修复和一些小改进，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freecad.org%2Fdownloads.php" target="_blank"&gt;点击此处获取&lt;/a&gt;。值得注意的是，这些 1.0.X 版本为 FreeCAD 1.0 版本带来了更高的稳定性，但正在开发的新功能将在 1.1 版本中发布。&lt;/p&gt; 
&lt;p&gt;以下是 v1.0.2 中的主要变化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Draft&lt;/strong&gt;：Roy_043 修复了一个&amp;nbsp;Bug，该&amp;nbsp;Bug 导致某个 dimension 显示 inward-pointing 箭头，而所有其他的都显示 outward-pointing 箭头。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Assembly：&lt;/strong&gt;&amp;nbsp;PaddleStroke 修复了在拖动具有固定连接的部件时有时会发生的崩溃（#&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFreeCAD%2FFreeCAD%2Fissues%2F20614" target="_blank"&gt;20614） 。&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;TechDraw&lt;/strong&gt;：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;bguest 修复了尺寸对齐问题。&lt;/li&gt; 
   &lt;li&gt;Syres916 更新了 FillTemplateFields.csv 以使用较新的模板。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;CAM&lt;/strong&gt;：工作台现在以&amp;nbsp;UTF&amp;nbsp;-8 编码写入 post files（修复&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFreeCAD%2FFreeCAD%2Fissues%2F18698" target="_blank"&gt;#18698&lt;/a&gt;&lt;span style="color:#000000"&gt;），并删除了 drilling 后的冗余移动。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;BIM&lt;/strong&gt;：Roy_043 修复了几个错误……&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;BIM_Leader 将创建一条点少于 2 个的线。&lt;/li&gt; 
   &lt;li&gt;由于导入错误，BIM_WPView 无法正常工作。&lt;/li&gt; 
   &lt;li&gt;Roof 不会自动限制运行长度（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFreeCAD%2FFreeCAD%2Fissues%2F21796" target="_blank"&gt;#21796&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;在&amp;nbsp;Strict IFC&amp;nbsp;模式下，折叠带有 Level inside&amp;nbsp;的 Building container&amp;nbsp;将会失败 (&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFreeCAD%2FFreeCAD%2Fissues%2F21912" target="_blank"&gt;#21912&lt;/a&gt;&amp;nbsp;)。&lt;/li&gt; 
   &lt;li&gt;在转换为&amp;nbsp;Strict&amp;nbsp;IFC&amp;nbsp;模式期间，Arch_Level 和 Arch_Wall 将会消失 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFreeCAD%2FFreeCAD%2Fissues%2F21400" target="_blank"&gt;#21400&lt;/a&gt;)。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;GUI&lt;/strong&gt;：Syres916 删除了字母周围的暗边，并修复了针对 Qt6 构建 FreeCAD 时的一些问题。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;代码还针对构建系统、单元测试和 Python 绑定进行了修复和改进。完整的更改列表可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FFreeCAD%2FFreeCAD%2Fcompare%2F1.0.1...1.0.2" target="_blank"&gt;参见此处&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364751/freecad-1-0-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364751/freecad-1-0-2-released</guid>
      <pubDate>Sun, 03 Aug 2025 02:39:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Countly 25.03.14 发布，实时移动和 Web 分析报告平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;实时移动和 Web 分析报告平台 Countly&amp;nbsp;25.03.14&amp;nbsp;现已发布。具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;Fixes：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[dashboard] 仪表板中缺失的本地化字符串&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[localization] 增加法语翻译&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;Enterprise Fixes：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[active_directory] 修复 body 解析器&amp;nbsp;empty request body 的问题&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;Dependencies：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 lint-staged 从 16.1.2 升级到 16.1.4&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCountly%2Fcountly-server%2Freleases%2Ftag%2F25.03.14" target="_blank"&gt;https://github.com/Countly/countly-server/releases/tag/25.03.14&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364745/countly-25-03-14-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364745/countly-25-03-14-released</guid>
      <pubDate>Sun, 03 Aug 2025 02:28:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 🔥 对标 Coze 和 Dify，Java 开发的 AIFlowy v1.1.4 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1023" src="https://oscimg.oschina.net/oscnet/up-f38e8d2f28faea373ab6b092edc8c77784f.png" width="2700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;AIFlowy v1.1.4 正式发布了！ 🎉&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果你也在使用 AIFlowy，欢迎为我们点个 Star 支持一下🌟：&lt;br&gt; 🔗 Gitee 地址：&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;你的每一个 Star 都是对我们最大的鼓励，也是让更多人看到 AIFlowy 的关键一步！&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们的愿景始终如一：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔹 成为中国最具影响力的人工智能品牌之一&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔹 引领核心技术自主创新&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔹 推动中国 AI 生态繁荣发展，助力科技自立&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;让我们一起见证 AIFlowy 的成长，也欢迎更多伙伴加入我们，共建更强大的 AI 开源生态🚀！&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;AIFlowy v1.1.4 更新详情：&lt;a href="https://gitee.com/aiflowy/aiflowy/releases/tag/v1.1.4"&gt;https://gitee.com/aiflowy/aiflowy/releases/tag/v1.1.4&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1080" src="https://oscimg.oschina.net/oscnet/up-c50d9f84345e3d4b5cea71073f0b996aa03.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1800" src="https://oscimg.oschina.net/oscnet/up-f79a2712a7c33bc0f0a91f5096775aac0fd.png" width="2880" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;AI 功能&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 应用（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 插件（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Rag 知识库（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;AI 工作流编排（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型配置（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型市场（已完成）&lt;/li&gt; 
 &lt;li&gt;素材中心（已完成）&lt;/li&gt; 
 &lt;li&gt;数据中枢（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;系统管理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;角色管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;菜单管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;部门管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岗位管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;日志管理（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;git&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;clone https://gitee.com/aiflowy/aiflowy.git&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;aiflowy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;mvn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;clean package&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;aiflowy-ui-react&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;run dev&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;环境要求&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JDK 1.8+&lt;/li&gt; 
 &lt;li&gt;Node.js 20.0+&lt;/li&gt; 
 &lt;li&gt;MySQL 8.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;v1.1.4&amp;nbsp; 更新内容&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：系统智能助手功能，调整 bot 设置页面部分开关位置，调整系统大模型配置&lt;/li&gt; 
 &lt;li&gt;新增：取消隐藏添加大模型时，方法调用开关&lt;/li&gt; 
 &lt;li&gt;新增：数据节点优化&lt;/li&gt; 
 &lt;li&gt;修复：修复工作流开始节点，入参选择 Array 类型，后台结果，仍然是 String 类型 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/ICPVPD" target="_blank"&gt;#ICPVPD:[Bug]: 工作流开始节点，入参选择 Array 类型，后台结果，仍然是 String 类型&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：修复 react 控制枱警告&lt;/li&gt; 
 &lt;li&gt;修复：工作流 resume 时设置用户信息&lt;/li&gt; 
 &lt;li&gt;修复：修复 Ctrl + s 保存报错的问题 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/ICQ3P5" target="_blank"&gt;#ICQ3P5:[Bug]: 工作流 ctrl+s 保存报错&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化：优化节点执行错误后的判断逻辑&lt;/li&gt; 
 &lt;li&gt;文档：价格文档&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开发及产品文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;官方网站：&lt;/strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Faiflowy.tech" target="_blank"&gt;https://aiflowy.tech&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开源地址：&lt;/strong&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364724/aiflowy-1-1-4-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364724/aiflowy-1-1-4-released</guid>
      <pubDate>Sun, 03 Aug 2025 01:19:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>⚡模型即服务 - Wow 框架 v5.28.1 发布！🏗️</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;&lt;img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"&gt;&lt;img alt="License" src="https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"&gt;&lt;img alt="Integration Test Status" src="https://oscimg.oschina.net/oscnet/badge.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"&gt;&lt;img alt="Awesome Kotlin Badge" src="https://oscimg.oschina.net/oscnet/awesome-kotlin.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;|&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt="👉" height="14" src="https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="👈" height="14" src="https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h3&gt;Wow v5.28.1 发布：命令处理革命与测试体验飞跃 🚀&lt;/h3&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;本次更新聚焦&lt;strong&gt;核心命令处理架构的重构&lt;/strong&gt;和&lt;strong&gt;测试工具链的全面升级&lt;/strong&gt;，带来更流畅的开发体验和更强大的异步处理能力！以下是关键亮点：&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h4&gt;🔥 核心命令处理革命&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;全新链式命令阶段（CommandStage）&lt;/strong&gt;：重构命令网关为响应式链式结构，提升可读性和扩展性&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;智能等待策略（WaitingForStage）&lt;/strong&gt;： 
   &lt;ul&gt; 
    &lt;li&gt;动态命令通知机制，精准控制异步命令执行流程&lt;/li&gt; 
    &lt;li&gt;策略注入优化，支持错误传播和信号预测&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;命令聚合提取支持&lt;/strong&gt;：直接从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CommandExchange&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提取聚合根，简化复杂业务逻辑&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;🧪 测试工具链全面进化&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;无状态 Saga 增强&lt;/strong&gt;： 
   &lt;ul&gt; 
    &lt;li&gt;服务注入功能（&lt;code&gt;StatelessSagaDsl&lt;/code&gt;），轻松模拟依赖&lt;/li&gt; 
    &lt;li&gt;智能测试命名生成，提升用例可读性&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;DSL 革命性升级&lt;/strong&gt;： 
   &lt;ul&gt; 
    &lt;li&gt;聚合测试 DSL 支持自定义参数扩展&lt;/li&gt; 
    &lt;li&gt;统一&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spec&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;规范迁移（迁移率 100%！）&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;DEMO：&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;CartSpec&lt;/strong&gt; : &lt;strong&gt;AggregateSpec&lt;/strong&gt;&amp;lt;&lt;strong&gt;Cart, CartState&lt;/strong&gt;&amp;gt;&lt;/span&gt;(
    {
        on {
            &lt;strong&gt;val&lt;/strong&gt; ownerId = generateGlobalId()
            &lt;strong&gt;val&lt;/strong&gt; addCartItem = AddCartItem(
                productId = &lt;span style="color:#dd1144"&gt;"productId"&lt;/span&gt;,
                quantity = &lt;span style="color:#008080"&gt;1&lt;/span&gt;,
            )
            givenOwnerId(ownerId)
            whenCommand(addCartItem) {
                expectNoError()
                expectEventType(CartItemAdded::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;
                expectState {
                    items.assert().hasSize(&lt;span style="color:#008080"&gt;1&lt;/span&gt;)
                }
                expectStateAggregate {
                    ownerId.assert().isEqualTo(ownerId)
                }
                fork(&lt;span style="color:#dd1144"&gt;"Added"&lt;/span&gt;) {
                    &lt;strong&gt;val&lt;/strong&gt; removeCartItem = RemoveCartItem(
                        productIds = setOf(addCartItem.productId),
                    )
                    whenCommand(removeCartItem) {
                        expectEventType(CartItemRemoved::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;
                    }
                }
                fork {
                    whenCommand(DefaultDeleteAggregate) {
                        expectEventType(DefaultAggregateDeleted::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;
                        expectStateAggregate {
                            deleted.assert().isTrue()
                        }

                        fork {
                            whenCommand(DefaultDeleteAggregate) {
                                expectErrorType(IllegalAccessDeletedAggregateException::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;
                            }
                        }
                        fork {
                            whenCommand(DefaultRecoverAggregate) {
                                expectNoError()
                                expectStateAggregate {
                                    deleted.assert().isFalse()
                                }
                                fork {
                                    whenCommand(DefaultRecoverAggregate) {
                                        expectErrorType(IllegalStateException::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
)
&lt;/code&gt;
&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="CartSpec-测试结果" src="https://oscimg.oschina.net/oscnet//aea4738ed0b68ab229ed2a49e85be66c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;h4&gt;⚡ 性能与稳定性&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;消息传播优化&lt;/strong&gt;：非命令消息处理效率提升 300%&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;SSE 序列化修复&lt;/strong&gt;：修复服务端推送错误消息的序列化问题&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;快照函数标准化&lt;/strong&gt;：统一采用 PascalCase 命名规范&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;🛠️ 基础设施升级&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;依赖全面更新&lt;/strong&gt;： 
   &lt;ul&gt; 
    &lt;li&gt;Spring Boot 3.5.4&lt;/li&gt; 
    &lt;li&gt;Angular 20.1.3&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;IoC 容器增强&lt;/strong&gt;：新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;copyTo()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;服务复制方法&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;包扫描优化&lt;/strong&gt;：引入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ApplicationBasePackageScanner&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;智能解析基础包&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;💡&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;开发者福音&lt;/strong&gt;：本次重构使命令流处理代码量减少 40%，测试用例可维护性提升 200%！立即体验更优雅的 CQRS 架构实践：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;Wow 项目主页&lt;/a&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;释放分布式系统新潜力，让复杂业务流编码化繁为简！🎉&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html" target="_blank"&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Features" src="https://oscimg.oschina.net/oscnet//54a600b304080a0d57d184160d0b98b6.png" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Architecture" src="https://oscimg.oschina.net/oscnet//83252afbddae4112f6b32b7210decbc5.svg" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;命令处理传播链&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="WaitingForChain" src="https://oscimg.oschina.net/oscnet//eaaa67b23cda23a305daac27691cbbc3.svg" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html" target="_blank"&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="WaitingForStage" src="https://oscimg.oschina.net/oscnet//c6b6ea58efc246571204af083050da6f.svg" width="95%" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html" target="_blank"&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html%23%25E8%2581%259A%25E5%2590%2588%25E5%2591%25BD%25E4%25BB%25A4" target="_blank"&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364721/wow-5-28-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364721/wow-5-28-1-released</guid>
      <pubDate>Sat, 02 Aug 2025 23:13:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>蓝鲸云 LanJing-NaiveVue 单体敏捷开发框架 v1.1.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v1.1.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、新增导出 Excel 注解 AOP 切面；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、修复近期用户反馈的 BUG；&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、TypeScript、Vite、NaiveUI、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringBoot3、SpringSecurity、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用 NaiveUI 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;NaiveUI&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：蓝鲸云单体 Vue3+NaiveUI 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@蓝鲸云团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.lanjingcloud.vip" target="_blank"&gt;https://www.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fdocs.naivevue.lanjingcloud.vip" target="_blank"&gt;http://docs.naivevue.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fmanage.naivevue.lanjingcloud.vip" target="_blank"&gt;http://manage.naivevue.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;在线用户：主要用于在线用户的维护以及强制退出登录；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;缓存监控：主要对系统缓存信息进行统计和监控查阅；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:857.286px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Thymeleaf+Layui 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Thymeleaf、Layui、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Layui"&gt;https://gitee.com/lanjingcloud2/LanJing-Layui&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-EleVue"&gt;https://gitee.com/lanjingcloud2/LanJing-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-AntdVue"&gt;https://gitee.com/lanjingcloud2/LanJing-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-NaiveVue"&gt;https://gitee.com/lanjingcloud2/LanJing-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-ArcoVue"&gt;https://gitee.com/lanjingcloud2/LanJing-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-EleVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-AntdVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-NaiveVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-ArcoVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-96ebd7e813374dbe80fc0fc5ee8b2750dc2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;开源协议&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;开源软件遵循&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html" target="_blank"&gt;Apache 2.0 协议&lt;/a&gt;。&lt;/p&gt; 
&lt;h4&gt;版权信息&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;版权所有 Copyright © 2020~2025&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flanjingcloud.vip" target="_blank"&gt;lanjingcloud.vip&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;All rights reserved。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364719</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364719</guid>
      <pubDate>Sat, 02 Aug 2025 23:06:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Audacity 3.7.5 发布，开源音频编辑器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Audacity 是最受欢迎的免费跨平台的开源音频编辑器之一。它可以在 Windows、macOS 和 GNU/Linux 设备上下载和使用，并且长期以来维持更新，功能也十分丰富。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Audacity 3.7.5 现已发布。&lt;/span&gt;&lt;span style="color:#1f2328"&gt;在此版本中添加了对 Windows ARM64 的支持。注意事项如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Audacity for WoA 需要 Windows 11 或更高版本。不支持 Windows RT。&lt;/li&gt; 
 &lt;li&gt;不支持插件（VST、OpenVINO 等）。&lt;/li&gt; 
 &lt;li&gt;它需要&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftordona%2Fffmpeg-win-arm64%2Freleases" target="_blank"&gt;WoA-version of FFmpeg&lt;/a&gt;，常规安装程序不起作用。&lt;/li&gt; 
 &lt;li&gt;由于缺乏设备，它并未对所有功能和工作流程进行彻底测试&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;其他变化：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fpull%2F8942" target="_blank"&gt;#8942&lt;/a&gt;&amp;nbsp;Windows on ARM 支持&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fpull%2F9121" target="_blank"&gt;#9121&lt;/a&gt;&amp;nbsp;FLAC importer 现在支持 32 位 PCM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8851" target="_blank"&gt;#8851&lt;/a&gt;&amp;nbsp;修复渲染频谱视图时崩溃的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F9097" target="_blank"&gt;#9097&lt;/a&gt;&amp;nbsp;修复注册窗口关闭时 lost focus 的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8932" target="_blank"&gt;#8932&lt;/a&gt;&amp;nbsp;修复了 wav 导入时崩溃的问题（当音频文件长达 7 毫秒时）&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F4444" target="_blank"&gt;#4444&lt;/a&gt;&amp;nbsp;修复使用 Macro Wizard 时崩溃的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fpull%2F9100" target="_blank"&gt;#9100&lt;/a&gt;&lt;span style="color:#1f2328"&gt;,&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8890" target="_blank"&gt;#8890&lt;/a&gt;&amp;nbsp;将 libopus 更新至 1.5.2、将 libcurl 更新至 8.12.1、将 libpng 更新至 1.6.50&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Freleases%2Ftag%2FAudacity-3.7.5" target="_blank"&gt;https://github.com/audacity/audacity/releases/tag/Audacity-3.7.5&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364641/audacity-3-7-5-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364641/audacity-3-7-5-released</guid>
      <pubDate>Sat, 02 Aug 2025 10:09:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Zephyr V4.2.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Zephyr v4.2.0 已发布，该版本支持截止日期为 2026.3.18。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Release 文件 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzephyrproject-rtos%2Fzephyr%2Freleases%2Ftag%2Fv4.2.0" target="_blank"&gt;https://github.com/zephyrproject-rtos/zephyr/releases/tag/v4.2.0&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Relase Notes &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.zephyrproject.org%2Flatest%2Freleases%2Frelease-notes-4.2.html" target="_blank"&gt;https://docs.zephyrproject.org/latest/releases/release-notes-4.2.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Release Blog &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zephyrproject.org%2Fzephyr-rtos-4-2-now-available-introduces-renesas-rx-support-usb-video-class-and-more%2F" target="_blank"&gt;https://www.zephyrproject.org/zephyr-rtos-4-2-now-available-introduces-renesas-rx-support-usb-video-class-and-more/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;迁移指南（从 4.1.0 迁移到 4.2.0) &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.zephyrproject.org%2Flatest%2Freleases%2Fmigration-guide-4.2.html" target="_blank"&gt;https://docs.zephyrproject.org/latest/releases/migration-guide-4.2.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;配套视频 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D25xrHzeaw5w" target="_blank"&gt;https://www.youtube.com/watch?v=25xrHzeaw5w&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;官方 Release 博客详细概述 v4.2.0 新功能和亮点的摘要，Release note 可以找到细节，视频对重大变化进行说明和新功能演示，本文一二级标题列出主要更新内容，正文文字列出个人关注的内容。&lt;/p&gt; 
&lt;h1&gt;重大变化&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;加入 Renesas RX 架构支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 USB Video Class 驱动&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 Twister 中引入 Power Harness 测试，使用硬件电源监视器执行自动数据收集和分析，用于电流检测与结果验证&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全面支持 MQTT 5.0&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;蓝牙协议栈中新增加 HFP/AG/HF&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;zbus API 到 1.0.0，API 状态已稳定&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 96 个主板和 22 个扩展板&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;内容摘要&lt;/h1&gt; 
&lt;h2&gt;修补漏洞&lt;/h2&gt; 
&lt;p&gt;详细的说明可以在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.zephyrproject.org%2Flatest%2Fsecurity%2Fvulnerabilities.html" target="_blank"&gt;https://docs.zephyrproject.org/latest/security/vulnerabilities.html&lt;/a&gt; 找到&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-27809 TLS 客户端可能会无意中跳过服务器身份验证&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-27810 TLS 握手过程中潜在的身份验证绕过&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-2962&amp;nbsp;&lt;code&gt;dns_copy_qname&lt;/code&gt;&amp;nbsp;中有无限循环&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-52496 AESNI 中有竞争发生&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-52497 解析 PEM encrypted 资料时堆读取不足&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-49600 LMS 验证中未检查返回值可导致绕过签名&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-49601&amp;nbsp;&lt;code&gt;mbedtls_lms_import_public_key()&lt;/code&gt;读取越界&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-49087 Timing side-channel in block cipher decryption with PKCS#7 padding&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-48965 使用 mbedtls_asn1_store_named_data() 后出现空指针取消引用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-47917 Misleading memory management in mbedtls_x509_string_to_names()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CVE 2025-7403: 2025-09-05 解禁&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;API 变化&lt;/h2&gt; 
&lt;p&gt;删除&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;删除已弃用的 net_buf_put() 和 net_buf_get() API 函数&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;删除已弃用的 include/zephyr/net/buf.h 头文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;移除 --disable-unrecognized-section-test Twister 选项。该选项已成为默认行为&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;删除已弃用的 kscan 子系统&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;删除 meas,ms5837 并替换为 meas,ms5837-30ba 和 meas,ms5837-02ba&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;从 video_driver_api 中删除 get_ctrl 驱动程序 API&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;删除 CONFIG_I3C_USE_GROUP_ADDR 和对 I3C 设备组地址的支持&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;弃用&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;CONFIG_SCHED_DUMB 和 CONFIG_WAITQ_DUMB 弃用。请用 CONFIG_SCHED_SIMPLE 和 CONFIG_WAITQ_SIMPLE 替代&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CONFIG_LWM2M_ENGINE_MESSAGE_HEADER_SIZE 弃用。 标头大小应包含在消息大小中，使用 CONFIG_LWM2M_COAP_MAX_MSG_SIZE&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;TLS 凭证类型 TLS_CREDENTIAL_SERVER_CERTIFICATE 弃用，用 TLS_CREDENTIAL_PUBLIC_CERTIFICATE 替代&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;arduino_uno_r4_minima 和 arduino_uno_r4_wifi 开发板弃用，用 arduino_uno_r4 开发板替代&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;esp32c6_devkitc 板目标弃用，替换为 esp32c6_devkitc/esp32c6/hpcore&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;xiao_esp32c6 板目标已被弃，替换为 xiao_esp32c6/esp32c6/hpcore&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CONFIG_HAWKBIT_DDI_NO_SECURITY 弃用，hawkBit 服务器已不再支持匿名身份验证&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CONFIG_BT_CONN_TX_MAX 弃用。与 CONFIG_BT_BUF_ACL_TX_COUNT 选项保持一致&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;已弃用的 CONFIG_CRYPTO_TINYCRYPT_SHIM 被移除&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;已弃用项 CONFIG_BT_MESH_USES_TINYCRYPT 被删除。使用 CONFIG_BT_MESH_USES_MBEDTLS_PSA 或 CONFIG_BT_MESH_USES_TFM_PSA&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;稳定版本 API 变更&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;net_mgmt_request_handler_t 从 uint32_t 更改为 uint64_t&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新增加&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;架构&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;移除 NIOS2 架构&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;ARCH_HAS_VECTOR_TABLE_RELOCATION&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;蓝牙：涉及音频，Host&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;构建系统&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;SB_CONFIG_MCUBOOT_MODE_SINGLE_APP_RAM_LOAD 单应用程序 RAM 加载&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持 load image 设置和选择&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Counter: 新增 counter_reset()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;调试&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;当选择 CONFIG_DEBUG_COREDUMP_MEMORY_DUMP_MIN 时，默认情况下为 ARM Cortex M 启用 CONFIG_DEBUG_COREDUMP_THREAD_STACK_TOP&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_DEBUG_COREDUMP_BACKEND_IN_MEMORY&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_DEBUG_COREDUMP_BACKEND_IN_MEMORY_SIZE&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;coredump&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Display&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;标准化清除显示内容 API:display_clear()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CFB 可通过 cfb_draw_circle() 绘制圆圈&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I2C&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;i2c_configure_dt().&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;i2c_configure_dt()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;I2C_DEVICE_DT_DEINIT_DEFINE&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;I2C_DEVICE_DT_INST_DEINIT_DEFINE&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;I3C&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_I3C_MODE&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_I3C_CONTROLLER_ROLE_ONLY&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_I3C_TARGET_ROLE_ONLY&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_I3C_DUAL_ROLE&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Kernel&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;K_TIMEOUT_ABS_SEC&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_add()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_compare()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_equal()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_is_valid()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_negate()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_normalize()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_from_timeout()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;timespec_to_timeout()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;k_heap_array_get()&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;LVGL&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;更新到 v9.3&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持多屏同时显示，支持输入设备和显示器绑定&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;SSD1327、SSD1320、SSD1322 和 ST75256 等显示器添加 L8/Y8 像素格式支持&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_LV_Z_COLOR_MONO_HW_INVERSION&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;LoRaWAN： lorawan_request_link_check()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Management&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_MCUBOOT_BOOTLOADER_MODE_FIRMWARE_UPDATER&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;CONFIG_MCUMGR_GRP_OS_RESET_BOOT_MODE&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;网络：涉及 Coap，DHCPv4，DNS，HTTP，IPv4，LwM2M，MQTT，OpenThread，SNTP, Sockets, WiFi,zperf&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PCIe:CONFIG_NVME_PRP_PAGE_SIZE&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;电源管理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;传感器&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;sensor_value_to_deci()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;sensor_value_to_centi()&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;步进电机：stepper_stop()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Storage：flash_area_copy()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sys&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;util_eq()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;util_memeq()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;sys_clock_gettime()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;sys_clock_settime()&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;sys_clock_nanosleep()&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;USB:uvc_set_video_dev()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;UpdateHub:updatehub_report_error()&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Video: 改动了 API 和结构体，添加了软件视频生成器&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ZBus&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;API 发布 1.0.0 版本，已稳定&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;runtime 观察者可以静态/动态分配内存&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;增加一些配置项&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;主板 &amp;amp; 扩展板&lt;/h2&gt; 
&lt;p&gt;新增 96 个主板和 22 个扩展板，详见 release note。 国产芯片的有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;乐鑫 ESP32x:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Adafruit x6&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;adafruit_feather_esp32s2&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;adafruit_feather_esp32s2_tft&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;adafruit_feather_esp32s2_tft_reverse&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;adafruit_feather_esp32s3&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;adafruit_feather_esp32s3_tft&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;adafruit_feather_esp32s3_tft_reverse&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;乐鑫 x1 &amp;nbsp;esp32_devkitc&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Lilygo x4&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;tdongle_s3&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;ttgo_tbeam&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;ttgo_toiplus&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;twatch_s3&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;M5Stack x1 m5stack_fire&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;微雪 x1 &amp;nbsp;esp32s3_matrix&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;博流 BL60X&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;安信可 x1 &amp;nbsp;ai_wb2_12f&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;博流 x1 &amp;nbsp;bl604e_iot_dvk&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;四博智联 x1 &amp;nbsp;dt_bl10_devkit&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;沁恒 CH32V&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;WeAct Studio x1 &amp;nbsp;bluepillplus_ch32v203&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;沁恒 x4&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;ch32v003f4p6_dev_board&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;ch32v006evt&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;ch32v303vct6_evt&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;linkw&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;驱动&lt;/h2&gt; 
&lt;p&gt;涉及多个驱动，详见 release note。&lt;/p&gt; 
&lt;h2&gt;实例&lt;/h2&gt; 
&lt;p&gt;新增 34 个实例，详见 release note。&lt;/p&gt; 
&lt;h2&gt;其它显著的变化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;添加对 Armv8.1-M MPU 的 PXN（Privileged Execute Never）属性的支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Mbed TLS 从 3.6.2 更新至 3.6.4&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;TF-M 从 2.1.1 更新至 2.1.2&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新所有带有外部 I2C 连接器（Qwiic、Stemma、Grove 等）的开发板，可以使用 zephyr_i2c 标签&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364615/zephyr-4-2-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364615/zephyr-4-2-0-released</guid>
      <pubDate>Sat, 02 Aug 2025 08:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Countly 25.03.13 发布，实时移动和 Web 分析报告平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;实时移动和 Web 分析报告平台 Countly&amp;nbsp;25.03.13&amp;nbsp;现已发布。具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Features&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[remote-config] 启用条件比较新/旧应用程序版本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Fixes&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[remote-config] 修复复合条件的条件匹配问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Enterprise Fixes&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[flows] 显示 disabled flows 的正确状态&lt;/li&gt; 
 &lt;li&gt;[surveys] 在移动设备屏幕上将「not likely」标签移至 0 旁边&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCountly%2Fcountly-server%2Freleases%2Ftag%2F25.03.13" target="_blank"&gt;https://github.com/Countly/countly-server/releases/tag/25.03.13&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364558/countly-25-03-13-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364558/countly-25-03-13-released</guid>
      <pubDate>Sat, 02 Aug 2025 05:46:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>TimescaleDB 2.21.2 发布，基于 PostgreSQL 的时序数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;TimescaleDB 是一个开源数据库，旨在使 SQL 可扩展到时间序列数据，基于 PostgreSQL 构建的，并打包为 PostgreSQL 扩展程序，提供跨时间和空间的自动分区，以及完整的 SQL 支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;TimescaleDB 2.21.2 现已发布，此版本包含&lt;/span&gt;&lt;span style="color:#1f2328"&gt;自 &lt;/span&gt;&lt;span style="color:#1f2328"&gt;2.21.1&lt;/span&gt;&lt;span style="color:#1f2328"&gt; 版本以来的性能改进和错误修复&lt;/span&gt;&lt;span style="color:#000000"&gt;。一些更新亮点内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#1f2328"&gt;&lt;strong&gt;错误修复&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F8418" target="_blank"&gt;#8418&lt;/a&gt;&amp;nbsp;修复 JOIN 查询中的重复约束&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F8426" target="_blank"&gt;#8426&lt;/a&gt;&amp;nbsp;修复跳过最小/最大数据块的计算问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Fpull%2F8434" target="_blank"&gt;#8434&lt;/a&gt;&amp;nbsp;允许&lt;code&gt;show_chunks&lt;/code&gt;处理超过 65535 个块&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimescale%2Ftimescaledb%2Freleases%2Ftag%2F2.21.2" target="_blank"&gt;https://github.com/timescale/timescaledb/releases/tag/2.21.2&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364546/timescaledb-2-21-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364546/timescaledb-2-21-2-released</guid>
      <pubDate>Sat, 02 Aug 2025 03:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>VirtualEnv 20.33.1 发布，Python 虚拟环境</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;VirtualEnv 20.33.1&amp;nbsp;现已发布，VirtualEnv 用于在一台机器上创建多个独立的 Python 运行环境，可隔离项目之间的第三方包依赖，为部署应用提供方便，把开发环境的虚拟环境打包到生产环境即可，不需要在服务器上再折腾一翻。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;新版更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;release&lt;/span&gt; 20.33.0&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpypa%2Fvirtualenv%2Fpull%2F2929" target="_blank"&gt;#2929&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(test)：恢复测试中 py_info.py 的 mtime&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpypa%2Fvirtualenv%2Fpull%2F2938" target="_blank"&gt;#2938&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[pre-commit.ci] pre-commit autoupdate&amp;nbsp;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpypa%2Fvirtualenv%2Fpull%2F2937" target="_blank"&gt;#2937&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：正确解压 PythonInfo 中的 _get_tcl_tk_libs() 响应&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpypa%2Fvirtualenv%2Fpull%2F2940" target="_blank"&gt;#2940&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;chore：请求错误报告中的 shell 和 python 详细信息&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpypa%2Fvirtualenv%2Fpull%2F2942" target="_blank"&gt;#2942&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpypa%2Fvirtualenv%2Freleases%2Ftag%2F20.33.1" target="_blank"&gt;https://github.com/pypa/virtualenv/releases/tag/20.33.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364541/virtualenv-20-33-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364541/virtualenv-20-33-1-released</guid>
      <pubDate>Sat, 02 Aug 2025 03:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Firefox 141.0.2 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Firefox 141.0.2 现已发布，具体更新内容如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fixed&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了某些 Linux 用户在使用过时的 NVIDIA 驱动程序时遇到的启动崩溃问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1978911" target="_blank"&gt;错误 1978911&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了导致画布对象可拖动的回归问题，从而导致 Web 兼容性问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1978673" target="_blank"&gt;错误 1978673&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了检查包含&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;元素的页面时 Web Developer Tools 面板可能发生的崩溃。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1975277" target="_blank"&gt;错误 1975277&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了用户界面中的一些小视觉问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1974269" target="_blank"&gt;错误 1974269&lt;/a&gt;&amp;nbsp;·&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1976031" target="_blank"&gt;错误 1976031&lt;/a&gt;&amp;nbsp;·&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1974876" target="_blank"&gt;错误 1974876&lt;/a&gt;&amp;nbsp;·&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1976701" target="_blank"&gt;错误 1976701&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在某些缺少 Wayland 支持的 GTK+ 构建的系统上，Firefox 无法启动。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1978620" target="_blank"&gt;错误 1978620&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了点击固定标签页可能会从内容区域 steal focus，从而中断键盘导航的问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1977005" target="_blank"&gt;错误 1977005&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F141.0.2%2Freleasenotes%2F" target="_blank"&gt;https://www.mozilla.org/en-US/firefox/141.0.2/releasenotes/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364537/firefox-141-0-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364537/firefox-141-0-2-released</guid>
      <pubDate>Sat, 02 Aug 2025 03:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>2025 年 7 月《大模型 SQL 能力排行榜》发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//06afabf88abc4bde03583c5beff98785.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;一、本月导览与核心看点&lt;/h2&gt; 
&lt;p&gt;2025 年 7 月，AI 大模型在代码生成与理解领域，特别是数据库 SQL 能力上的竞争日趋白热化。&lt;/p&gt; 
&lt;p&gt;本期 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsql-llm-leaderboard.com%2Franking%2F2025-07" target="_blank"&gt;SCALE&lt;/a&gt; 评测我们迎来了备受瞩目的 &lt;strong&gt;Claude 3.5 Sonnet&lt;/strong&gt; 、&lt;strong&gt;Claude Sonnet 4&lt;/strong&gt; 首次参评，同时 &lt;strong&gt;Gemini 2.5&lt;/strong&gt; 系列也正式迈入稳定版。更重要的是，我们针对数据库现代化迁移的真实痛点，对评测基准进行了重要升级，旨在更深度地考验模型在复杂、真实场景下的 SQL 处理能力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="SCALE - 大模型 SQL 能力排行榜（202507）" src="https://oscimg.oschina.net/oscnet//6fc7a16fd76d68e7911d79cec9d6faa5.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;本期核心看点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;新王登基还是实力搅局？&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;新晋选手 &lt;strong&gt;Claude 3.5 Sonnet&lt;/strong&gt; 、&lt;strong&gt;Claude Sonnet 4&lt;/strong&gt; 首次参评，它在 SQL 优化、方言转换与理解三大维度的综合表现如何？能否撼动现有第一梯队的格局？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;方言转换测评基准升级&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;我们首次引入 &lt;strong&gt;大 SQL 转换&lt;/strong&gt; 与 &lt;strong&gt;国产数据库转换&lt;/strong&gt; 两大评测指标，全面考验模型在处理超长、复杂逻辑及存储过程、函数等高级数据库对象时的能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;正式版实力验证&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; 与 &lt;strong&gt;Gemini 2.5 Flash&lt;/strong&gt; 迎来正式版，相较于预览版，其性能与稳定性是否得到全面提升？&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二、评测基准更新说明&lt;/h2&gt; 
&lt;p&gt;为更精准地评估 AI 模型在企业级复杂数据库场景下的实用性，本月我们对 &lt;strong&gt;SQL 方言转换&lt;/strong&gt; 维度的评测数据集进行了扩充和深化。&lt;/p&gt; 
&lt;h3&gt;新增指标：大 SQL 转换&lt;/h3&gt; 
&lt;p&gt;在数据库迁移的实际项目中，处理历史遗留的 &lt;strong&gt;大 SQL&lt;/strong&gt;（通常指行数超百行、逻辑复杂的单条 SQL 语句）是一个常见且棘手的难题。我们发现，许多模型在面对此类长文本、高复杂度的转换任务时，容易出现上下文丢失、逻辑错乱、语法错误等问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;评测目的&lt;/strong&gt;：检验模型在处理超长、包含多层嵌套查询、复杂 JOIN 和临时表的 SQL 脚本时的转换准确性和逻辑保持能力。&lt;/p&gt; 
&lt;h3&gt;新增指标：国产数据库转换&lt;/h3&gt; 
&lt;p&gt;在国产化替代和信创背景下，企业核心业务系统正加速从传统商业数据库向国产数据库迁移。此过程中，深度依赖于数据库过程化编程能力（如存储过程、函数）的复杂应用，其迁移的准确性和效率成为关键瓶颈。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;评测目的&lt;/strong&gt;：评测模型将传统商业数据库向国产数据库进行自动化转换的能力。这不仅是 SQL 的翻译，更涉及到变量声明、流程控制、异常处理等编程逻辑的跨方言迁移。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本期支持的转换路径&lt;/strong&gt;： 从 Oracle 到 OceanBase（Oracle 模式）4.2.5。&lt;/p&gt; 
&lt;p&gt;基于以上更新的评测基准，本月的榜单呈现出一些值得关注的新变化。接下来，我们来揭晓本期榜单详细的评测结果与深度分析。&lt;/p&gt; 
&lt;h2&gt;三、本月榜单与焦点分析&lt;/h2&gt; 
&lt;h3&gt;分项能力榜单&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;SQL 优化能力 Top 5&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;SQLFlash：88.5&lt;/li&gt; 
 &lt;li&gt;DeepSeek-R1：71.6&lt;/li&gt; 
 &lt;li&gt;Claude Sonnet 4：70.9&lt;/li&gt; 
 &lt;li&gt;Qwen3-235B-A22B：69.1&lt;/li&gt; 
 &lt;li&gt;GPT-o4-mini：68.4&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//f4da20cf2c5a64c3ee1e8c2d01a694de.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SQL 方言转换 Top 5&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;GPT-o4-mini：83.3&lt;/li&gt; 
 &lt;li&gt;Qwen3-235B-A22B：81.3&lt;/li&gt; 
 &lt;li&gt;DeepSeek-R1：80.2&lt;/li&gt; 
 &lt;li&gt;Gemini 2.5 Flash：79.3&lt;/li&gt; 
 &lt;li&gt;Claude Sonnet 4：77.1&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//f48010e0a3804852cd58b513bbf1195d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SQL 理解能力 Top 5&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Gemini 2.5 Flash：82.3&lt;/li&gt; 
 &lt;li&gt;Gemini 2.5 Pro：82.0&lt;/li&gt; 
 &lt;li&gt;GPT-o1：81.3&lt;/li&gt; 
 &lt;li&gt;GPT-o4-mini：80.8&lt;/li&gt; 
 &lt;li&gt;DeepSeek-R1：80.5&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//eefd9d8a7b60c78aaa03b7bd223d095f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;焦点模型深度分析&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;专题 1：Claude Sonnet 4 首秀评测&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;作为 Anthropic 的最新力作，&lt;strong&gt;Claude Sonnet 4&lt;/strong&gt; 在本月的评测中展现了均衡但尚未登顶的实力。其在 SQL 优化、方言转换、SQL 理解，三大维度的得分分别为 70.9、77.1、79.3，位列总榜中上游。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SQL 优化能力分析&lt;/strong&gt;：总分 70.9，排名第三。优势在于其出色的「逻辑等价」保证（89.5 分）和对语法及最佳实践的遵循（94.7 分），能生成高质量、规范的 SQL。然而，其在「优化深度」方面仅得到 60 分，说明在提供更深层次的 SQL 优化上仍有较大提升空间。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;方言转换与 SQL 理解表现&lt;/strong&gt; ： 分别以 77.1 分和 79.3 分位列第五和第六。在方言转换的细分项中，其 &lt;strong&gt;国产数据库转换能力&lt;/strong&gt; （97.4 分）表现亮眼，几乎达到顶尖水平。但在 &lt;strong&gt;大 SQL 转换&lt;/strong&gt; 上仅得到 41.2 分，暴露了其在处理超长上下文时的明显短板。在 SQL 理解方面，其执行准确性（87.1 分）和语法及最佳实践（74.3 分）表现稳健，但在执行计划分析上仅有 46.4 分，说明其对 SQL 底层执行逻辑的理解能力有待加强。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;总体来看，&lt;strong&gt;Claude Sonnet 4&lt;/strong&gt; 是一位表现全面的均衡型选手，在 SQL 程式码的规范性和正确性上表现出色，但在性能优化的深度和处理极端复杂问题的能力上，与第一梯队模型相比仍存在一定差距。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Claude Sonnet 4" src="https://oscimg.oschina.net/oscnet//27a67f241952f814a421205116f9dc42.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;专题 2：Gemini 2.5 正式版 vs 预览版&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本次评测中，Gemini 2.5 Pro 正式版相较于其 06-05 预览版，展现了全面的能力提升，模型综合得分从 80 分提升至 82 分。这表明其在稳定性和综合 SQL 处理能力上都进行了有效优化。具体来看：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;语法错误检测能力显著增强&lt;/strong&gt;：从 89.5 提升至 100 分。这意味着正式版模型不仅能生成更高效的 SQL，也更符合标准的开发规范。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;方言转换能力稳中有升&lt;/strong&gt;：分数从 67.1 提升至 72.2，保持了稳定的转换水准。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;总体而言，&lt;strong&gt;Gemini 2.5 Pro 正式版&lt;/strong&gt; 兑现了其从预览到稳定的承诺，特别是在 SQL 优化的深度和规范性上取得了突破性进展，使其成为一个更可靠、更高效的数据库开发辅助工具。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="gemini-2.5-pro-preview-06-05" src="https://oscimg.oschina.net/oscnet//8937e64a9a27ae04d99b95b8f029d310.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="gemin-2.5-pro" src="https://oscimg.oschina.net/oscnet//29ff7eda35a3694fd0d223034215a8b1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;专题 3：国产数据库转换能力大揭秘&lt;/h2&gt; 
&lt;p&gt;在 Oracle 到 OceanBase（Oracle 模式）4.2.5 这条关键迁移路径上，各模型表现分化明显，评测揭示了当前 AI 在处理真实世界复杂迁移场景时的核心挑战：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;挑战&lt;/strong&gt;：复杂函数语法理解能力薄弱，易产生"事实性幻觉"。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;评测表现&lt;/strong&gt;：在一个关键的复杂函数转换测试中，整体题目的正确率仅为 25%，仅有 DeepSeek-R1、Claude Sonnet 4、Gemini 2.5 Flash 三个模型给出了正确答案。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;问题根因&lt;/strong&gt; ： 模型在进行方言转换时，容易对某些运算符的兼容性产生"幻觉"。例如，在处理 Oracle 的 &lt;code&gt;CAST ({ expr | MULTISET (subquery) } AS type_name )&lt;/code&gt; 语法时，大多数模型会想当然地认为目标端 OceanBase（Oracle 模式）不支持 MULTISET 运算符，从而错误地将其替换为 COLLECT 聚合函数。但事实恰恰相反：OceanBase 的 Oracle 模式支持 MULTISET，却不支持 COLLECT，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oceanbase.com%2Fdocs%2Fcommon-oceanbase-database-cn-1000000001504555" target="_blank"&gt;详细参考&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;这种基于不准确 "知识" 的推理，导致了转换逻辑的根本性错误，是 AI 辅助代码迁移走向生产可用必须攻克的障碍。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="GPT-o4-mini" src="https://oscimg.oschina.net/oscnet//6367cfca1525bbc3b3318b1a85309375.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;四、本期评测模型变更日志&lt;/h2&gt; 
&lt;p&gt;为确保 SCALE 评测的及时性和前沿性，本月我们新增并升级了以下模型：&lt;/p&gt; 
&lt;h3&gt;1. 新增评测模型&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:left"&gt;模型名称&lt;/th&gt; 
   &lt;th style="text-align:left"&gt;备注&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;Claude 3.5 Sonnet&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;Anthropic 公司于 2024 年 6 月发布的最新模型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;Claude Sonnet 4 thinking&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;Anthropic 公司于 2025 年 5 月发布的最新模型&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;2. 升级评测模型&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:left"&gt;模型名称&lt;/th&gt; 
   &lt;th style="text-align:left"&gt;旧版本&lt;/th&gt; 
   &lt;th style="text-align:left"&gt;新版本（本次测评使用）&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;Qwen3-235B-A22B-Thinking&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;2024-04-29&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;Qwen3-235B-A22B-Thinking-2507&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;Qwen3-235B-A22B-Instruct&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;2024-04-29&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;Qwen3-235B-A22B-Instruct-2507&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;Gemini 2.5 Pro&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;gemini-2.5-pro-preview-06-05&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;gemini-2.5-pro（稳定版）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;Gemini 2.5 Flash&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;gemini-2.5-pro-preview-06-05&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;gemini-2.5-flash（稳定版）&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;五、总结与展望&lt;/h2&gt; 
&lt;p&gt;本月评测结果显示，随着评测维度的深化，模型之间的能力差异被进一步放大。特别是在新增的 &lt;strong&gt;大 SQL 转换&lt;/strong&gt; 评测中，仅有少数顶级模型能较好地完成任务，这为后续模型迭代指明了关键方向。&lt;strong&gt;Claude Sonnet 4&lt;/strong&gt; 的加入为市场带来了新的活力，而 &lt;strong&gt;Gemini 2.5 系列（稳定版）&lt;/strong&gt; 的表现也验证了其持续优化的成果。&lt;/p&gt; 
&lt;p&gt;SCALE 下期展望：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;我们将持续追踪各大厂商的最新模型进展，并计划在未来引入 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlshift.cn" target="_blank"&gt;SQLShift&lt;/a&gt; 方言转换应用的测评。&lt;/li&gt; 
 &lt;li&gt;我们正在探索构建更具挑战性的混合场景数据集，模拟企业中数据分析、ETL 和数据库管理一体化的真实工作流。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;六、专家点评&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" height="234" src="https://oscimg.oschina.net/oscnet//97989f6d3f0a49b6330d8bc01cb53fd6.jpg" width="200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;专家介绍&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;韩锋&lt;/strong&gt;，CCIA（中国计算机协会）常务理事，前 Oracle ACE，腾讯 TVP，阿里云 MVP，dbaplus 等多家社群联合创始人或专家团成员。著有《SQL 优化最佳实践》、《数据库高效优化》、【韩锋频道】公众号主理人。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;点评内容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;韩峰：SCALE 榜单的发布，旨在建立起 &lt;strong&gt;"AI for SQL&lt;/strong&gt;" 领域的标准化评测体系，这对于数据库行业具有非常正向意义。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;通过科学测评维度（SQL 优化、方言翻译、深度理解）和严谨的加权评分（高难度、高价值任务权重更大），为市场提供了权威、客观的基准 "&lt;strong&gt;标尺&lt;/strong&gt;"，使开发者、DBA 和技术决策者能清晰了解各模型的真实水平与相对优势，从而指导技术选型并消除市场混乱。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;同时，公开透明的排行榜有力驱动模型提供商针对核心短板进行优化，尤其在高权重的复杂任务上持续投入，加速了关键技术的突破与模型能力的整体提升。对企业用户而言，标准评测显著降低了引入 AI 处理 SQL 的技术选型风险和试错成本，为项目落地提供了可靠决策依据。相信，这种标准化引领了整个 "&lt;strong&gt;AI for DB&lt;/strong&gt;" 生态的发展方向，引导资源聚焦和工具开发，促进良性循环，加速 AI 与数据库的深度融合，释放智能化数据管理的巨大潜力。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;感谢您的关注！我们致力于提供大语言模型（LLM）处理 SQL 的核心能力测评。如果您有任何建议或希望看到哪些模型的评测，欢迎随时与我们联系。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SCALE：为专业 SQL 任务，选专业 AI 模型。&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✨ Github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Factiontech%2Fsql-llm-benchmark" target="_blank"&gt;https://github.com/actiontech/sql-llm-benchmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💻 官网：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsql-llm-leaderboard.com%2F" target="_blank"&gt;https://sql-llm-leaderboard.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364521</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364521</guid>
      <pubDate>Sat, 02 Aug 2025 02:08:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Omni-Infer v0.2.0 已经发布，超大规模 MoE 模型推理加速技术</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Omni-Infer v0.2.0 已经发布，超大规模 MoE 模型推理加速技术&lt;/p&gt;
&lt;p&gt;此版本更新内容包括：&lt;/p&gt;
&lt;h1&gt;v0.2.0&lt;/h1&gt; 
&lt;h2&gt;核心特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 vllm 0.8.3 release&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;其他优化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 18P8-1D144@A3，Deepseek R1 单卡 Decode 性能达到 1920 TPS，TPOT&amp;lt;50ms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;支持模型列表&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;模型&lt;/th&gt; 
   &lt;th&gt;部署形态&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;PD 分离&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Qwen2.5 系列&lt;/td&gt; 
   &lt;td&gt;混布（TP&amp;gt;=1 DP=1）&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/omniai/omniinfer/releases/v0.2.0" rel="nofollow"&gt;https://gitee.com/omniai/omniinfer/releases/v0.2.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/364520/omni-infer-0-2-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/364520/omni-infer-0-2-0-released</guid>
      <pubDate>Sat, 02 Aug 2025 02:03:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
  </channel>
</rss>
