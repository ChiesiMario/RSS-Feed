<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 09 Sep 2024 06:43:48 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>🍋 分布式运维监控平台 WGCLOUD v3.5.4 正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wgstart.com&quot; target=&quot;_blank&quot;&gt;WGCLOUD&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wgstart.com&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/a&gt;是一款集成度较高的分布式运维监控平台，具有集群监控，易部署、易上手使用、轻量、高效、自动化等特点，server 端基于&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;springboot 开发，agent 端使用 go 编写。核心模块包括：&lt;strong&gt;主机系统信息监控，CPU 监控，CPU 温度监控，内存监控，网络流量监控，磁盘 IO 监控，磁盘空间监测，系统负载监控，硬盘 smart 健康检测，应用进程监控，端口监控，docker 监控，日志文件监控，文件防篡改保护，数据可视化监控，自动生成拓扑图、大屏可视化，数通设备监测，服务接口监测，K8S 监测，设备账号管理，web ssh ，指令下发，告警信息（邮件、钉钉、微信等）推送&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;color: rgb(51, 51, 51); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;码云仓库：&lt;/span&gt;&lt;a href=&quot;https://gitee.com/wanghouhou/wgcloud&quot;&gt;https://gitee.com/wanghouhou/wgcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(51, 51, 51); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;GITHUB 仓库：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftianshiyeben%2Fwgcloud&quot; target=&quot;_blank&quot;&gt;https://github.com/tianshiyeben/wgcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(51, 51, 51); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;WGCLOUD 唯一官网：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wgstart.com&quot; target=&quot;_blank&quot;&gt;http://www.wgstart.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;WGCLOUD 支持监测的操作系统平台&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;支持监测 Linux：Debian，RedHat，CentOS，Ubuntu，Fedora，SUSE，麒麟，统信 (UOS)，龙芯 (mips) 等&lt;br&gt; 支持监测 Windows：Windows Server 2008 R2，Windows Server 2012，Windows Server 2016，Windows Server 2019，Windows Server 2022，Windows 7，Windows 8，Windows 10，Windows 11&lt;br&gt; 支持监测 Unix：Solaris，FreeBSD，OpenBSD，AIX&lt;br&gt; 支持监测 MacOS：MacOS amd64，MacOS arm64&lt;br&gt; 其他支持：ARM，Android (安卓)，Riscv64，S390x，树莓派，深度 deepin，群晖，凝思，飞腾 CPU，海光 CPU，兆芯 CPU，鲲鹏 OS，龙蜥 Anolis，EulerOS 欧拉，BC-Linux 等&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;WGCLOUD-v3.5.4 更新说明&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;1. 新增，Docker 容器监控，支持监控容器 cpu 使用率%&lt;/p&gt; 
 &lt;p&gt;2. 新增，端口监控，支持监控 UDP 类型的端口&lt;/p&gt; 
 &lt;p&gt;3. 新增，文件防篡改监控，支持设置自动恢复指令，系统在发现文件或者文件夹被篡改后，agent 在几分钟内迅速执行恢复指令&lt;/p&gt; 
 &lt;p&gt;4. 新增，根据最近一周每个磁盘的使用数据，系统自动计算出每个磁盘预计可以使用的天数&lt;/p&gt; 
 &lt;p&gt;5. 改造，SNMP 监控，支持采集设备基本信息，支持监测设备的每个接口的传输速率（上行和下行），不再监测设备的总传输速率（上行和下行）&lt;/p&gt; 
 &lt;p&gt;6. 优化，下发指令的执行时间缩短至 10s 左右，也可以自定义设置，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wgstart.com%2Fhelp%2Fdocs2.html&quot; target=&quot;_blank&quot;&gt;查看配置项 shellGetSeconds&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;7. 优化，巡检报告完善，更详细更专业&lt;/p&gt; 
 &lt;p&gt;8. 优化，资产设备管理，支持上传附件&lt;/p&gt; 
 &lt;p&gt;9. 优化，自定义告警管理，列表页面支持批量启用和停用配置&lt;/p&gt; 
 &lt;p&gt;10. 优化，基础组件库统一升级，提升运行性能和安全&lt;/p&gt; 
 &lt;p&gt;11. 修复漏洞，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsecurity-tracker.debian.org%2Ftracker%2FCVE-2024-1597&quot; target=&quot;_blank&quot;&gt;PostgreSQL JDBC SQL 注入漏洞 (CVE-2024-1597)&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;12. 一些已知的 bug 修复，优化 UI，代码结构优化&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1961&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2df1dba14f15dd31f19e38ed5c1d4f940fc.jpg&quot; width=&quot;1889&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;2179&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9af58507aec4c3b30d1c632c34839f2da9b.png&quot; width=&quot;1890&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-90010c1635f996318e7fc5fa6aa657e080e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e86b6015c1e66ab0e6497404b0aa6ce3600.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8c1e6f02a53d1df5acd342e790a435aac35.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;up-eb8b552dcc652a42e1a29cfe48dbec15c0d.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-eb8b552dcc652a42e1a29cfe48dbec15c0d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;up-d984aefd21d3fda515eee1632eee780d868.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d984aefd21d3fda515eee1632eee780d868.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b7e2275cc31dae0af63dc8faba03285044f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;1800&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a13450856ca7c00c9fa3644d9f7f3cf566c.png&quot; width=&quot;1344&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-512dcd1385117b366100db0e73223fd8098.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;857&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8a521055045be6d46a3929c452a9b705f6a.jpg&quot; width=&quot;1899&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;853&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a445a516d2c5579c83098d77e012e263345.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-df26d8ed17a38dc1fc088150be872d3dba2.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; height=&quot;1073&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5714da989c114752b382a31a17d35a581fe.jpg&quot; width=&quot;1899&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1337&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3d179a8f481a746c959986b9c4f80840824.jpg&quot; width=&quot;1877&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311133/wgcloud-3-5-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311133/wgcloud-3-5-4-released</guid>
            <pubDate>Mon, 09 Sep 2024 03:23:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>FileZilla Server 1.9.0 发布，开源 FTP 服务器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FileZilla Server 是一个免费开源的 FTP 和 FTPS 服务器，能够提供与服务器的安全加密连接。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;FileZilla Server 1.9.0 正式发布，更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;已修复漏洞：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;MSW：如果在 Program Files 之外安装服务器，会因自定义目录权限过松而发出警告&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;错误修复和细微更改：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了导致连接停滞的竞争条件&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;*nix：修复了在服务器关闭时向服务器发送 SIGINT 可能导致的崩溃的问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复更新检查机制&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了旧版 0.9.x 配置转换器在处理本地路径中的占位符时出现的问题&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;更新说明：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffilezilla-project.org%2F&quot; target=&quot;_blank&quot;&gt;https://filezilla-project.org/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311131/filezilla-server-1-9-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311131/filezilla-server-1-9-0-released</guid>
            <pubDate>Mon, 09 Sep 2024 03:18:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>JTopCMS V4 更新，系统监视报警与安全配置</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp; &amp;nbsp; 介绍 ：&amp;nbsp; JTopCMS V4 开发进度更新！为更加高效定位运维问题，方便管理人员快速响应运维故障，本次研发增加对服务器及 CMS 环境，站群各相关配置自动检测与报警功能。对於单节点或集群部署下的 CMS 各节点，将监视 CPU 内存&amp;nbsp; 硬盘容量&amp;nbsp; 网络流量，各站点访问情况，发布接口，第三发依赖软件等等状态信息，当达到阈值事件时，可通过站内信，邮件，短信通知方式，告知管理员。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;1.&lt;strong&gt;对环境的监视与展现&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;780&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-734ce30954cbc20cd076161fc16c391a0d1.png&quot; width=&quot;1676&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;856&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-348d2a3a9db318f206abe6cd463cfa4ccf0.png&quot; width=&quot;1676&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;880&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-47f6cf3a8d80d008649d2d1351ee502c05b.png&quot; width=&quot;1696&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;608&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ed9adc5f701403c11a83e67247be75b599b.png&quot; width=&quot;1691&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;2.&lt;strong&gt;对安全参数细化配置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;838&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-102e2b09e3b1c0f28d2b342fa21cb97508a.png&quot; width=&quot;1691&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;系统特色&lt;/h1&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;1. 基于 JAVA 标准，支持国产信创环境，国产数据库以及国产中间件 ，能高效便捷的进行站点文档采编，审核，页面模板制作。具有性能优秀，稳定，安全，易扩展等特点，适合建设政府机构，教育部门以及企事业单位的站群系统，支持集群管理，系统支持集群化部署，可任意增加和较少 CMS 服务节点，根据业务需要独立部署服务节点，加强系统容错性，并发能力及扩展能力。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;2. 站点支持静态化发布，内容静态化发布，不但支持生成 html，更可通过生成 shtml 方式，精确控制页面局部静态化，最大限度提高站点并发访问性能以及可维护性。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;3. 内容模型自定义支持，支持自定义模型功能，内置完善的字段类型，所定义字段还可参与联合查询，高级搜索，使您的站点具备高度扩展能力，方便应对各种业务需要。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;4. 强大可扩展权限系统，支持等级化的按部门划分的子站点管理，下级无法越权，明确权限职责。支持粗（菜单级）、细（业务数据）粒度权限控制，可按照组织、角色、用户进行授权， 有效划分权限范围，收放自如，职责清晰。并支持二次开发功能整合&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;5. 安全防护能力，系统能自动拦截并记录分析各种非法访问，及时通知站点管理员进行处理，对于恶意访问者，以黑名单制度自动进行阻止，为您的站点安全保驾护航。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;6. 高级搜索支持，支持类似百度的高级搜索功能，支持大数据下的快速搜索，具有可配置性，结合自定义模型功能，可快速打造符合你需求的信息模型搜索。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;7. 网站群架构支持，一套 CMS 产品可支持部署多个站点，由 JTopcms 统一管理，但各站点彼此数据和逻辑性完全独立，且又可相互进行数据共享交流，为用户提供最大价值&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;8. 实施网站开发简单 JTopcms 提供了完善的标签体系，只需要使用者具备 html 和美工知识储备，在 CMS 标签的帮助下，即可高效的制作出可管理的动态站点。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;9. 灵活的数据组织方式，支持基本栏目和专题分类，TAG 标签分类，更支持页面区块化碎片管理，自定义推荐位，数据组合方式灵活强大，满足各种数据组织需求。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;10. 二次开发高效 JTopcms 基于 J2EE 核心模式自主研发，立项之初即考虑二次开发支持，扩展新模块只需具备 Java web 开发基础以及 SQL 能力， 就可快速上手，高效无侵入方式开发功能。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;11. 支持资源发布点，支持自动将图片，视频，文件，以及静态发布 html 发布到各资源服务器，动静分离，静态前端访问和动态后端访问独立处理，提升性能和安全性。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311125/jtopcms-v4-update</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311125/jtopcms-v4-update</guid>
            <pubDate>Mon, 09 Sep 2024 02:55:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>智能制造 v3.14.4 发布，ERP 商城</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;智能制造一体化管理系统&amp;nbsp;[SpringBoot2 - 快速开发平台]，适用于制造业、建筑业、汽车行业、互联网、教育、政府机关等机构的管理。包含文件在线操作、工作日志、多班次考勤、CRM、ERP 进销存、项目管理、EHR、拖拽式生成问卷、日程、笔记、工作计划、行政办公、薪资模块、动态表单、知识库、公告模块、企业论坛、云售后模块、生产模块、系统模块化同步模块等多种复杂业务功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Skyeye 云系列所有产品&lt;strong&gt;源代码&lt;/strong&gt;已针对&lt;strong&gt;知识星球用户&lt;/strong&gt;全面开放，有需要的联系我加入啦。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;我们这次&lt;strong&gt;源代码开放&lt;/strong&gt;给很多用户带来了疑问，为什么企业版的全部开放源代码？确定是所有源代码？不会有后门吧？等等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;在此，作者声明，源代码确定是全部开放，毫无保留，全部开放。开放的原因是我们修改了我们未来的发展方向，方便大家使用和学习。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;智能制造 v3.14.4 发布&amp;nbsp;，发布内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Skyeye 云已加入 Dromara 社区&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;ERP 商品支持同步到商城，同时支持指定规格的同步&lt;/li&gt; 
 &lt;li&gt;新增购物车逻辑&lt;/li&gt; 
 &lt;li&gt;新增品牌管理的逻辑&lt;/li&gt; 
 &lt;li&gt;ERP 商品规格新增已使用的逻辑限制，防止规格参数被改之后无法对应商品的问题&lt;/li&gt; 
 &lt;li&gt;开发文档已新增至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;114&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;篇&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;源代码对星球用户开放&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;解决若干问题。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Skyeye 具备&lt;strong&gt;低代码、快捷开发、可视化设计、微服务&lt;/strong&gt;等特点，方便客户二次开发，极大的提高了开发效率。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;erp：&amp;nbsp;&lt;a href=&quot;https://gitee.com/doc_wei01/skyeye&quot;&gt;https://gitee.com/doc_wei01/skyeye&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;OA：&amp;nbsp;&lt;a href=&quot;https://gitee.com/dromara/skyeye&quot;&gt;https://gitee.com/dromara/skyeye&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;报表：&lt;a href=&quot;https://gitee.com/doc_wei01/skyeye-report&quot;&gt;https://gitee.com/doc_wei01/skyeye-report&lt;/a&gt;&amp;nbsp; 有问题可以联系作者，详情请看开发计划。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;效果图&lt;/th&gt; 
   &lt;th&gt;效果图&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;1837&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f9b9af6f1edae25c2894ce3ed4b653b27c8.png&quot; width=&quot;3839&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;1837&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f61d84e301c2949ed920b757455b451501f.png&quot; width=&quot;3839&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt; &lt;p&gt;&lt;img height=&quot;1837&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c292eea19603de5e84ae1259ce67cb69f4e.png&quot; width=&quot;3839&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt; &lt;p&gt;&lt;img height=&quot;1837&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-212592eead525c8e60e153d94b4e39b461f.png&quot; width=&quot;3839&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311123/win10-skyeye-3-14-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311123/win10-skyeye-3-14-4-released</guid>
            <pubDate>Mon, 09 Sep 2024 02:50:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Simple Admin - Go 语言分布式后台管理系统 v1.5.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h2&gt;Simple Admin - Go 语言分布式后台管理系统 v1.5.6 更新&lt;/h2&gt; 
&lt;h3&gt;项目介绍&lt;/h3&gt; 
&lt;p&gt;Simple Admin 是一个开箱即用的分布式微服务后端管理系统，基于 go-zero 开发，为开发小型到大型项目后台提供了丰富的功能，易于扩展，支持三端代码生成。 官方自带多种扩展，助力中小企业快速上云，快速迭代。项目全部采用中英双语支持，方便应用出海，深度支持国际化。适合用于微服务学习和商用，开源免费。&lt;/p&gt; 
&lt;h3&gt;Simple Admin Core / Job / MCMS / FMS / Common v1.5.6 更新&lt;/h3&gt; 
&lt;h4&gt;介绍&lt;/h4&gt; 
&lt;p&gt;核心模块 Core, 定时任务模块 Job, 消息中心模块 MCMS, 以及文件管理模块 FMS 均已升级&lt;/p&gt; 
&lt;p&gt;核心模块用于基础的后台运行，其余模块可根据需求选用。&lt;/p&gt; 
&lt;h4&gt;特性&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;最新技术栈&lt;/strong&gt;：使用 ent, casbin, kafka 等前沿技术开发&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;完全支持 go-swagger&lt;/strong&gt;: 直接在 api 文件内编写注释即可直接生成 swagger 文档&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;统一的错误处理&lt;/strong&gt;: 整个系统拥有国际化的统一错误处理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;国际化&lt;/strong&gt;：内置完善的国际化方案&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;服务注册发现&lt;/strong&gt;: 完善的服务注册发现机制，原生支持 K8s&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;权限&lt;/strong&gt;: 内置完善的动态路由权限生成方案, 集成 RBAC 权限控制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代码生成&lt;/strong&gt;: 内置三端 Web, API, RPC 代码生成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多种扩展&lt;/strong&gt;: 提供多种扩展，同时具有非常简单的接入功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其他&lt;/strong&gt;: 流量控制， ES 服务&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ORM&lt;/strong&gt;: 强大的 Ent 框架支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;本次更新&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新：go zero 升级至 1.7.2 版本支持&lt;/li&gt; 
 &lt;li&gt;优化 (Core): 返回禁用的动态配置&lt;/li&gt; 
 &lt;li&gt;新增 (Core): 新增 Core Only 仅本地部署 Core 服务部署文件&lt;/li&gt; 
 &lt;li&gt;更新: 更新 all in one 配置&lt;/li&gt; 
 &lt;li&gt;更新: 更新依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Simple Admin Backend UI v1.5.6 更新&lt;/h3&gt; 
&lt;h4&gt;介绍&lt;/h4&gt; 
&lt;p&gt;Simple Admin UI 是基于 vue-vben-admin 二次开发的为 Simple Admin 专门开发的后台管理界面，基于 Vue3 和 TypeScript 开发， 提供后台错误统一处理，国际化等功能，本项目完全免费，可用于学习和商用.&lt;/p&gt; 
&lt;h4&gt;特性&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;最新技术栈&lt;/strong&gt;：基于 Vue3/vite5 等最新技术开发&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: 采用 Typescript 的语言&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;主题&lt;/strong&gt;：可配置的主题&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;国际化&lt;/strong&gt;：内置完善的国际化方案&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mock 数据&lt;/strong&gt; 内置 Mock 数据测试方案&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;权限&lt;/strong&gt; 支持动态路由权限&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;组件&lt;/strong&gt; 二次封装了多个常用的组件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remeda&lt;/strong&gt;: 使用 remeda 作为数据处理工具&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;本次更新&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复： 后台用户修改头像无法显示问题&lt;/li&gt; 
 &lt;li&gt;重构： 优化大量页面为 setup 语法&lt;/li&gt; 
 &lt;li&gt;修复： 部分导入路径缺失&lt;/li&gt; 
 &lt;li&gt;优化 (ApiMultipleSelect): 优化组件&lt;/li&gt; 
 &lt;li&gt;优化： tab 新增图标，面包屑默认启用图标显示&lt;/li&gt; 
 &lt;li&gt;修复： 动态配置禁用时恢复默认&lt;/li&gt; 
 &lt;li&gt;优化： 移除无用组件，移除 vxe table 支持，可自行导入，不再二次封装维护&lt;/li&gt; 
 &lt;li&gt;优化： 移除重复 Util ，改为 remeda&lt;/li&gt; 
 &lt;li&gt;新增： header 新增暗夜模式按钮, 不再需要进入 setting 使用&lt;/li&gt; 
 &lt;li&gt;更新： 更新依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Goctls v1.8.12 更新&lt;/h3&gt; 
&lt;h4&gt;介绍&lt;/h4&gt; 
&lt;p&gt;Goctls 是一个基于 Go Zero 官方生成工具 Goctl 开发的针对 Simple Admin 适配优化的生成工具。提供强大的代码生成功能，同时集成了许多定制工具，实现快速开发微服务接入后台和前台 。三端代码生成可以大大提升开发效率，欢迎体验 。&lt;/p&gt; 
&lt;h4&gt;特性&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;go-swagger&lt;/strong&gt; : 基于 go-swagger 生成 API 文档，只需一行注释即可生成文档&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;i18n&lt;/strong&gt;: 所有生成模板均实现多国语言支持&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;: 优化错误信息处理, 支持多语言错误&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Validator&lt;/strong&gt;: 简单易用的校验器, 只需添加 tag 即可校验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;三端代码生成&lt;/strong&gt;: 支持三端代码生成，生成 API, RPC 和 web 端的 CRUD 代码&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RPC 接口分组&lt;/strong&gt;： rpc logic group 分组&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;proto 文件拆分&lt;/strong&gt;: 支持 proto 文件拆分，方便管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ent 支持&lt;/strong&gt;: 全面支持 Ent 代码生成，包括数据库导入，schema 生成，模板管理，自动升级等功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;额外工具&lt;/strong&gt;: 额外工具如本地日志查看，环境变量查看&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;本次更新&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化 (vben): 修复 definedOption 缺失导致的问题&lt;/li&gt; 
 &lt;li&gt;新增 (api): api ent/proto 命令新增 --model_chinese_name 和 --model_english_name 参数用于补充 api 注释&lt;/li&gt; 
 &lt;li&gt;更新： 更新依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;文档地址:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.ryansu.tech%2Fzh%2Fguide%2Fbasic-config%2Fall_in_one.html&quot; target=&quot;_blank&quot;&gt;点击访问&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311121/simple-admin-go-1-5-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311121/simple-admin-go-1-5-6-released</guid>
            <pubDate>Mon, 09 Sep 2024 02:48:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>SraAdmin 前端更新到 2.1.0，切换到 Vite</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h2&gt;简介&lt;/h2&gt; 
&lt;p&gt;SraAdmin&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;是一个前后端分离的后台管理系统，引入了市面上常用的工具包以及核心框架，实现了用户、字典、角色、权限等常见功能， 能够快速搭建一个 web 项目。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;SraAdmin-Vue 项目更新事项&lt;/h2&gt; 
&lt;h3&gt;版本：2.1.0&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;重构：原 vue 脚手架改成 vite&lt;/li&gt; 
 &lt;li&gt;升级：vue 版本升级到 3.4.37&lt;/li&gt; 
 &lt;li&gt;升级：typescript 升级到 5.5.3&lt;/li&gt; 
 &lt;li&gt;优化：删除未引用的代码&lt;/li&gt; 
 &lt;li&gt;优化：精简 Home 页面内容&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311112</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311112</guid>
            <pubDate>Mon, 09 Sep 2024 02:23:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Jdao v2.1.0: 如何构建更高效灵活的动态 SQL</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;text-align:start&quot;&gt;在复杂应用环境中，数据访问层的设计不仅需要高效，还需要具备灵活性。为了满足对数据库操作的高性能与灵活需求，Jdao 提供了全面的持久层解决方案。&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;Jdao 是 Java 持久层框架，它结合了 Hibernate 的抽象性和 MyBatis 的灵活性。它解决 Hibernate 和 MyBatis 的痛点，如过度封装、复杂配置以及 SQL 维护的挑战。它既适合小型项目，也能胜任大型企业应用，帮助团队在不同场景中灵活应对持久层开发需求&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;在版本 v2.1.0 中，Jdao 特别加强了动态 SQL 的构建功能，使其更加高效和灵活。本文重点介绍 Jdao v2.1.0 中动态 SQL 功能，并展示如何利用这些新特性来构建更高效的数据库操作。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;动态 SQL 的重要性及 Jdao 的动态 SQL 简介&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;动态 SQL 允许根据不同的条件或需求动态地生成 SQL 语句，这对于处理那些条件时有时无、逻辑复杂多变的场景尤为重要。在 Jdao 中，动态 SQL 的实现不仅提高了代码的灵活性和可维护性，还增强了 SQL 语句的安全性，避免了 SQL 注入等风险。&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;jdao 提供了 3 种方式构建动态 SQL&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#2c2c36&quot;&gt;实体类构建动态 SQL&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#2c2c36&quot;&gt;XML 映射动态 SQL 标签&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;SqlBuilder 基于 java 程序构建动态 SQL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;Jdao 提供了构建动态 SQL 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;&lt;strong&gt;if&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;&lt;strong&gt;where&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;&lt;strong&gt;choose&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;&lt;strong&gt;foreach&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;&lt;strong&gt;set&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;strong&gt;,&lt;/strong&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;&lt;strong&gt;trim&lt;/strong&gt;&lt;/code&gt;&lt;/span&gt;&lt;strong&gt;等系列标签。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;注意：Jdao 没有提供 bind 标签和$变量替换。原因是实践中，bind 标签与$ 会带来一些问题&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;bind 标签&lt;/code&gt;&lt;/span&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;不常用&lt;/strong&gt;：在实际开发中，bind 标签并不常用，因为它提供的功能可以通过其他方式（比如使用&amp;lt;if&amp;gt;标签结合#{}参数化方式）来实现，而且这种方式更加安全和直观。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;维护问题&lt;/strong&gt;：bind 绑定通常将 java 编码转移到 xml 文件上，导致更加难以维护，和更容易导致错误。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:var(--bs-code-color)&quot;&gt;&lt;code&gt;$符号&lt;/code&gt;&lt;/span&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#2c2c36&quot;&gt;&lt;strong&gt;安全性问题&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#2c2c36&quot;&gt;：进行变量替换是 SQL 注入攻击的源头，如果参数包含恶意构造的 SQL 语句，则可能会被数据库引擎当作合法的 SQL 命令执行&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#2c2c36&quot;&gt;&lt;strong&gt;可以代替：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;通常$变量替换可以通过其他方式实现。它的存在并不是必需的。即使无法通过其他配置的方式实现，也可以通过 SqlBuilder 实现动态 sql 构建。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;Jdao 动态 sql 性能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&amp;nbsp; &amp;nbsp;动态 sql 构建效率通常受到构建条件的影响，复杂多条件，多分支的构建条件，程序需要执行更多的判断与基础数据查询，可能导致动态 Sql 总体执行更慢，这是客观的因素，但是这情况通常不是总体性能决定因素。性能的关键在于底层的实现，条件表达式的分析等；Jdao 底层实现了非常高效的 sql 动态构建性能，它的性能几乎接近直接原生 Sql 查询的性能。具体的压测数据，请查询 J&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fjdaodoc&quot; target=&quot;_blank&quot;&gt;dao 使用文档&lt;/a&gt;的 jdao 性能压测，章节。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;Jdao 动态 SQL 快速入门示例&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;安装 jdao 依赖包&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;# 使用 Maven 安装
&lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.github.donnie4w&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jdao&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.0&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h4&gt;&lt;strong&gt;Xml 配置动态 sql 构建，兼容 mybatis 动态 Sql 标签&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;示例程序 1&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span style=&quot;color:#6a737d&quot;&gt;&amp;lt;!-- where if --&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;select&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;demo1&quot;&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;resultType&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;io.github.donnie4w.jdao.dao.Hstest&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        SELECT * FROM hstest
        &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;where&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;test&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;rowname!= &#39;hello&#39;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                and rowname = #{rowname}
            &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;test&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id &amp;gt;0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                AND id = #{id}
            &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;where&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    &lt;span style=&quot;color:#6a737d&quot;&gt;//测试 where if 标签&lt;/span&gt;
    &lt;span style=&quot;color:#005cc5&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;demo1&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;throws&lt;/span&gt; JdaoException, JdaoClassException, SQLException {
        &lt;span style=&quot;color:#d73a49&quot;&gt;Hstest&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;hs&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;Hstest&lt;/span&gt;();
        hs.setId(&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;);
        hs.setRowname(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;hello&quot;&lt;/span&gt;);
        List&amp;lt;Hstest&amp;gt; list = jdaoMapper.selectList(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;io.github.donnie4w.jdao.action.Dynamic.demo1&quot;&lt;/span&gt;, hs);
    }&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;执行日志&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SELECTLIST SQL[SELECT * FROM hstest &lt;span style=&quot;color:#d73a49&quot;&gt;WHERE&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;id&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; ?]ARGS[&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;示例程序 2&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;    &lt;span style=&quot;color:#6a737d&quot;&gt;&amp;lt;!-- trim --&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;select&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;demo2&quot;&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;resultType&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;io.github.donnie4w.jdao.dao.Hstest&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        SELECT * FROM hstest
        &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;trim&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;prefix&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;WHERE&quot;&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;prefixOverrides&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;AND|OR&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;test&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;rowname != null&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                AND rowname = #{rowname}
            &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt;&amp;gt;&lt;/span&gt;
            &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;test&lt;/span&gt;=&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id != null&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                AND id = #{id}
            &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;if&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;trim&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#22863a&quot;&gt;select&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;    &lt;span style=&quot;color:#6a737d&quot;&gt;//测试 trim&lt;/span&gt;
    &lt;span style=&quot;color:#005cc5&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;demo2&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;throws&lt;/span&gt; JdaoException, JdaoClassException, SQLException {
        &lt;span style=&quot;color:#d73a49&quot;&gt;Hstest&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;hs&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;Hstest&lt;/span&gt;();
        hs.setId(&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;);
        hs.setRowname(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;hello&quot;&lt;/span&gt;);
        List&amp;lt;Hstest&amp;gt; list = jdaoMapper.selectList(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;io.github.donnie4w.jdao.action.Dynamic.demo2&quot;&lt;/span&gt;, hs);
    }&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;执行日志&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SELECTLIST SQL[SELECT * FROM hstest &lt;span style=&quot;color:#d73a49&quot;&gt;WHERE&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;rowname&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; ? &lt;span style=&quot;color:#d73a49&quot;&gt;AND&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;id&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; ?]ARGS[hello, &lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h4&gt;&lt;strong&gt;SqlBuilder 动态 SQL 构建&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;示例 1&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;testAppendIf&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;throws&lt;/span&gt; JdaoException, SQLException {
   Map&amp;lt;String, Object&amp;gt; context = &lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();
   context.put(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;);

   &lt;span style=&quot;color:#d73a49&quot;&gt;SqlBuilder&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;builder&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; SqlBuilder.newInstance();
   builder.append(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;SELECT * FROM HSTEST where 1=1&quot;&lt;/span&gt;)
          .appendIf(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id&amp;gt;0&quot;&lt;/span&gt;, context, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;and id=?&quot;&lt;/span&gt;, context.get(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id&quot;&lt;/span&gt;))  &lt;span style=&quot;color:#6a737d&quot;&gt;//若表达式 id&amp;gt;0 成立， 添加 SQL : and id=?&lt;/span&gt;
          .append(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;ORDER BY id ASC&quot;&lt;/span&gt;);

   List&amp;lt;DataBean&amp;gt; list = builder.selectList();

}&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;说明：&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;strong&gt;append &amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;添加 sql 语句，没有条件表达式。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;strong&gt;appendIf&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;通过条件表达式判断是否添加 sql 语句，if 条件，功能等同&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;if 标签&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;执行日志&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;信息: [SqlBuilder SQL] SELECT * FROM HSTEST where &lt;span style=&quot;color:#005cc5&quot;&gt;1&lt;/span&gt;=&lt;span style=&quot;color:#005cc5&quot;&gt;1&lt;/span&gt;  and id=? ORDER BY id ASC [ARGS][&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;示例 2&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;testAppendChoose&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;throws&lt;/span&gt; JdaoException, SQLException {
    &lt;span style=&quot;color:#d73a49&quot;&gt;Hstest&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;hstest&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;Hstest&lt;/span&gt;();
    hstest.setRowname(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;www&amp;gt;&amp;gt;&amp;gt;&amp;gt;2&quot;&lt;/span&gt;);
    hstest.setId(&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;);
    hstest.setValue(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;2421209491375900&quot;&lt;/span&gt;);
    hstest.setAge(&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;);

    &lt;span style=&quot;color:#d73a49&quot;&gt;SqlBuilder&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;builder&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; SqlBuilder.newInstance();
    builder.append(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;SELECT * FROM HSTEST where 1=1&quot;&lt;/span&gt;)
            .appendChoose(hstest, choose -&amp;gt; choose
                    .when(&lt;span style=&quot;color:#032f62&quot;&gt;&quot; age &amp;lt;30 &amp;amp;&amp;amp; age&amp;gt;10&quot;&lt;/span&gt;, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;AND age =?&quot;&lt;/span&gt;, hstest.getAge())
                    .when(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;rowname!=null&quot;&lt;/span&gt;, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;AND rowname like ?&quot;&lt;/span&gt;, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;%&quot;&lt;/span&gt; + hstest.getRowname() + &lt;span style=&quot;color:#032f62&quot;&gt;&quot;%&quot;&lt;/span&gt;)
                    .otherwise(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;AND id &amp;gt;0&quot;&lt;/span&gt;)).append(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;limit 2&quot;&lt;/span&gt;);

    List&amp;lt;DataBean&amp;gt; list = builder.selectList();

}&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;strong&gt;appendChoose&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;通过条件表达式判断是否添加 sql 语句，switch 条件 &amp;nbsp;功能等同 &amp;nbsp;&lt;/span&gt;choose 标签&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;执行日志&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;信息: [SqlBuilder SQL] SELECT * FROM HSTEST where &lt;span style=&quot;color:#005cc5&quot;&gt;1&lt;/span&gt;=&lt;span style=&quot;color:#005cc5&quot;&gt;1&lt;/span&gt;  AND rowname like ?  limit &lt;span style=&quot;color:#005cc5&quot;&gt;2&lt;/span&gt; [ARGS][%www&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;span style=&quot;color:#005cc5&quot;&gt;2&lt;/span&gt;%]&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;示例 3&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//appendForeach&lt;/span&gt;
&lt;span style=&quot;color:#005cc5&quot;&gt;@Test&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;testAppendForeach&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;throws&lt;/span&gt; JdaoException, SQLException {
    &lt;span style=&quot;color:#d73a49&quot;&gt;SqlBuilder&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;builder&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;=&lt;/span&gt; SqlBuilder.newInstance();
    builder.append(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;SELECT * FROM hstest where id in&quot;&lt;/span&gt;)
            .appendForeach(&lt;span style=&quot;color:#005cc5&quot;&gt;null&lt;/span&gt;, &lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#6f42c1&quot;&gt;int&lt;/span&gt;[]{&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;, &lt;span style=&quot;color:#005cc5&quot;&gt;32&lt;/span&gt;, &lt;span style=&quot;color:#005cc5&quot;&gt;33&lt;/span&gt;}, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;item&quot;&lt;/span&gt;, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;,&quot;&lt;/span&gt;, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;(&quot;&lt;/span&gt;, &lt;span style=&quot;color:#032f62&quot;&gt;&quot;)&quot;&lt;/span&gt;, foreachBuilder -&amp;gt; foreachBuilder
                    .body(&lt;span style=&quot;color:#032f62&quot;&gt;&quot;#{item}&quot;&lt;/span&gt;)
            );
    List&amp;lt;DataBean&amp;gt; list = builder.selectList();
    &lt;span style=&quot;color:#d73a49&quot;&gt;for&lt;/span&gt; (DataBean bean : list) {
        System.out.println(bean);
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;说明&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;background-color:#f8f9fa; color:#212529&quot;&gt;&lt;strong&gt;appendForeach&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#f8f9fa; color:#212529&quot;&gt;可循环拼接 appendForeach 中的内容，如 in(?,?,?,?) &amp;nbsp; . &amp;nbsp;foreach 条件，功能等同 &amp;nbsp;&lt;/span&gt;foreach 标签&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;执行日志&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;信息: [SqlBuilder SQL] SELECT * FROM hstest where id &lt;span style=&quot;color:#6f42c1&quot;&gt;in&lt;/span&gt; &lt;span&gt;(?,?,?)&lt;/span&gt;[ARGS][&lt;span style=&quot;color:#005cc5&quot;&gt;31&lt;/span&gt;, &lt;span style=&quot;color:#005cc5&quot;&gt;32&lt;/span&gt;, &lt;span style=&quot;color:#005cc5&quot;&gt;33&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;JDAO 简介&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;Jdao 是一种创新的持久层解决方案。主要目的在于，减少编程量，提高生产力，提高性能，支持多数据源整合操作，支持数据读写分离，制定持久层编程规范。 灵活运用 Jdao，可以在持久层设计上，减少 30% 甚至 50% 以上的编程量，同时形成持久层的统一编程规范，减少持久层错误，同时易于维护和扩展。&lt;br&gt; Jdao 的映射模块实现了 SQL 与程序分离的特性，映射模块与 myBatis 的核心功能相同。是除了 mybatis 和基于 myBatis 系列的 orm 外，唯一实现该特性的 orm 框架.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GitHub : &amp;nbsp;&lt;/strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fjdao&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;Jdao Repository&lt;/u&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;示例程序:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fjdaodemo&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;Jdaodemo&lt;/u&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;使用文档:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fjdaodoc&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;Jdaodoc&lt;/u&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;主要特点&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;轻量&lt;/strong&gt;：Jdao 没有任何依赖，所有特性均为 Jdao 本身实现，不会由于其他项目的更新或功能修改而受到影响，可以轻松融入各类项目中。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高效&lt;/strong&gt;：Jdao 功能均自身实现最重要目的就是实现高效性，没有多余的包袱。性能与直接 JDBC 调用极为接近，ORM 封装的性能损耗非常小。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;灵活&lt;/strong&gt;：Jdao 支持丰富的动态 SQL 构建功能，包括原生动态 SQL，映射动态 SQL，实体类动态 SQL。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;安全&lt;/strong&gt;：Jdao 没有 SQL 注入的风险。Jdao 提供了 Mybatis 相同的映射功能，并去掉了 sql 注入的潜在隐患。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;全面&lt;/strong&gt;：Jdao 结合了 Hibernate 的抽象性和 MyBatis 的灵活性，提供规范且高效的 ORM 运用方案。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;主要功能&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;生成代码&lt;/strong&gt;：运行 jdao 代码生成工具，创建数据库表的标准化实体类。类似&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fthrift&quot; target=&quot;_blank&quot;&gt;thrift&lt;/a&gt;/&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fprotocolbuffers%2Fprotobuf&quot; target=&quot;_blank&quot;&gt;protobuf&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高效序列化&lt;/strong&gt;：表的标准化实体类实现了高效的序列化与反序列化。比标准库序列化方法高 3-12 倍，而序列化体积只有其 20% 左右。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持数据读写分离&lt;/strong&gt;：jdao 支持绑定多数据源，并支持数据源绑定表，类，映射接口等属性。并支持数据读写分离&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持数据缓存&lt;/strong&gt;：jdao 支持数据缓存，并支持对缓存数据时效，与数据回收等特性进行细致控制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;广泛兼容性&lt;/strong&gt;：jdao 理论上支持所有实现 JDBC 接口的数据库&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高级特性&lt;/strong&gt;：支持事务，存储过程，批处理等数据库操作&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持动态 SQL&lt;/strong&gt;：jdao 实现了 mybatis 的动态 sql 功能，去掉了安全隐患及无实用特性。同时为原生 SQL 提供了编写动态 SQL 的特性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;兼容 myBatis&lt;/strong&gt;：jdao 在映射模块中，采用了 mybatis 的标签定义，并实现了相同的功能特性。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;更多 Jdao 的详细信息，请查阅&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fjdaodoc&quot; target=&quot;_blank&quot;&gt;Jdao 使用文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;更多 Jdao 使用示例，请参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fjdaodemo&quot; target=&quot;_blank&quot;&gt;jdaodemo&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311098/jdao-2-1-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311098/jdao-2-1-0-released</guid>
            <pubDate>Mon, 09 Sep 2024 01:50:18 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🔥🔥🔥一款兼具 「高性能、高颜值、高活跃」的分布式任务调度与重试平台 1.2.0-beta1 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#141212; margin-left:0; margin-right:0; text-align:left&quot;&gt;🔥🔥🔥 灵活，可靠和快速的分布式任务重试和分布式任务调度平台&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:left&quot;&gt;✅️ 可重放，可管控、为提高分布式业务系统一致性的分布式任务重试平台 ✅️ 支持秒级、可中断、可编排的高性能分布式任务调度平台&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;号外&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;br&gt; &lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;Snail Job 目前已经支持 Python、Jdk1.8 客户端、Jdk17 客户端，后续即将支持 Go 客户端，有兴趣的加群了解.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;&lt;strong&gt;了解更多请加群&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnailjob.opensnail.com%2Fdocs%2Fgroup_chat.html&quot; target=&quot;_blank&quot;&gt;https://snailjob.opensnail.com/docs/group_chat.html&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;Go 客户端:&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;a href=&quot;https://gitee.com/opensnail/snail-job-go&quot;&gt;https://gitee.com/opensnail/snail-job-go&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;Python 客户端:&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;a href=&quot;https://gitee.com/opensnail/snail-job-python&quot;&gt;https://gitee.com/opensnail/snail-job-python&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;&lt;strong&gt;Jdk1.8 客户端&lt;/strong&gt;&lt;/span&gt;:&amp;nbsp;&lt;a href=&quot;https://gitee.com/aizuda/snail-job/tree/client-jdk8/&quot;&gt;https://gitee.com/aizuda/snail-job/tree/client-jdk8&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;&lt;strong&gt;项目特性&lt;/strong&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;易用性&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;业务接入成本小。避免依赖研发人员的技术水平，保障稳定性&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;灵活性&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;能够动态调整配置，启动 / 停止任务，以及终止运行中的任务&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;操作简单&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;分钟上手，支持 WEB 页面对任务数据 CRUD 操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;数据大盘&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;实时管控系统任务数据&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;分布式重试任务&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;支持多样化退避策略、多样化重试类型、流量管控等&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;分布式调度任务&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;提供丰富的任务触发策略、任务分片、停止恢复、失败重试等&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;工作流任务编排&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;仿钉钉设计的流程编排引擎，支持复杂的功能编排、失败重试、告警等&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;任务数据管理&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;可以做到数据不丢失、数据一键回放&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;容器化部署&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;服务端支持 docker 容器部署&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;高性能调度平台&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;支持服务端节点动态扩容和缩容&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;支持多样化的告警方式&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;邮箱、企业微信、钉钉、飞书、自定义告警&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;支持多种流行数据库&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;mysql、mariadb、sqlserver、oracle、postgres 数据库&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;开源组件对比&lt;/strong&gt;&lt;/h1&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#000000; cursor:pointer; display:table; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:803px; word-break:keep-all; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style=&quot;height:auto; text-align:left; width:auto&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;项目&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; 
   &lt;th style=&quot;height:auto; text-align:left; width:auto&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;Quartz&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; 
   &lt;th style=&quot;height:auto; text-align:left; width:auto&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;Elastic-Job&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; 
   &lt;th style=&quot;height:auto; text-align:left; width:auto&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;XXL-JOB&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; 
   &lt;th style=&quot;height:auto; text-align:left; width:auto&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;PowerJob&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; 
   &lt;th style=&quot;height:auto; text-align:left; width:auto&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;Snail Job&lt;/strong&gt;&lt;/span&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;定时调度&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;Cron&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;Cron&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;Cron&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;CRON、固定频率、固定延迟、OpenAPI&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 定时任务 2. 秒级任务 (无需依赖外部中间件) 3. 固定频率 4.OpenAPI (开发中)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;重试任务&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 支持本地 &amp;amp; 远程重试模式 2. 支持各种常用组件的重试，比如 dubbo/feign 3. 支持多种退避策略 4. 丰富的重试风暴管控手段 ......&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;任务编排&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;仿钉钉工作流设计，颜值高、体验好&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;分布式计算&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;静态分片&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;广播&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 广播执行 2. 集群执行 3. 静态分片&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;4. 动态分片&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;多语言&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;Java&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. Java 2. 脚本任务&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. Java 2. 脚本任务&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. Java (已支持) 2. 脚本任务 (CMD/POWERSHELL/SHELL) 3. HTTP 任务 (已支持)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;用户管理&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;完备的用户管理和权限管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;安全 Token&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;不支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;可视化&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;无&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;弱&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 历史记录 2. 运行日志（不支持存储）3. 监控大盘&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 历史记录 2. 实时日志 (支持持久化、可视化) 3. 监控大盘 (实时调度数据展示) 4. 失败调度排名 5. 在线集群查看等&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;可运维&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;无&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;启用、禁用任务&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 启用、禁用任务 2. 手动运行任务 3. 停止任务&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;1. 启用、禁用任务 2. 手动运行任务 3. 停止任务 4、手动重试&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;报警监控&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;无&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;邮件&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;邮件&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;邮件&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;支持配置多种告警场景，通知方式支持: 1. 邮件 2. 钉钉 3. 企微 4. 飞书 5、Webhook&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;性能&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;每次调度通过 DB 抢锁，对 DB 压力大&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;ZooKeeper 是性能瓶颈&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;采用 Master 节点调度，Master 节点压力大&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;无锁化设计&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;系统采用多 bucket 模式，借助负载均衡算法，确保每个节点能够均衡处理任务，同时支持无限水平扩展，轻松应对海量任务调度&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;接入成本&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;只依赖 DB 接入成本低&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;需引入 Zookeeper 增加系统复杂性和维护成本&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;只依赖 DB 接入成本低&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;依赖 DB 接入成本低&lt;/td&gt; 
   &lt;td style=&quot;border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto&quot;&gt;只依赖 DB 接入成本低&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;&lt;strong&gt;更新日志&lt;/strong&gt;&lt;/h1&gt; 
&lt;blockquote&gt;
 1. 新增人大金仓数据库【新增】
 &lt;br&gt; 2. 优化 mybatis xml 的加载顺序, 支持多个 id 同时加载【优化】
 &lt;br&gt; 3. docker-compose.yaml 更新达梦镜像【优化】
 &lt;br&gt; 4. 增加工作流决策节点模拟上下文校验结果返回【新增】
 &lt;br&gt; 5. 优化 json 转换失败的日志【优化】
 &lt;br&gt; 6. 增加第一个及最后一个客户端路由功能【新增】
 &lt;br&gt; 7. 增加路由缓存定期清理功能【新增】
 &lt;br&gt; 8. 修复 Map 任务问题不能重试【BUG】
 &lt;br&gt; 9. PaginationInnerInterceptor 不制定 dbType，由 mp 自动管理，解决 Oracle 11g 分页兼容问题。【优化】
 &lt;br&gt; 10. 去除动态 tablePrefix 配置【优化】
 &lt;br&gt; 11. 修复 Map/MapReduce 重试问题,及手动暂停相关逻辑【BUG】
 &lt;br&gt; 12. 新增 CMD、PowerShell、Shell、Http 相关执行器【新增】
 &lt;br&gt; 13. 修复 oracle 任务状态变更偶发失败情况【BUG】
 &lt;br&gt; 14. 重构结果处理逻辑【优化】
 &lt;br&gt; 15. 去除定时任务结果更新的分布式锁【优化】
 &lt;br&gt; 16. map 和 map reduce 支持配置参数全路径传递【新增】
 &lt;br&gt; 17. 优化客户端线程池，当获取缓存线程池时才设置并行度【优化】
 &lt;br&gt; 18. 添加任务执行时间【新增】 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;参与者设计开发人员名单&lt;/strong&gt;&lt;br&gt; 1. https://gitee.com/xlsea&lt;br&gt; 2. https://gitee.com/xiaowoniu168&lt;br&gt; 3. https://gitee.com/dhb52&lt;br&gt; 4. https://gitee.com/srzou&lt;/p&gt; 
&lt;div&gt; 
 &lt;h1&gt;&lt;strong&gt;核心功能&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;459&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0524/094848_ACSn_4252687.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;h1&gt;&lt;strong&gt;项目地址&lt;/strong&gt;&lt;/h1&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p style=&quot;color:#141212; margin-left:0; margin-right:0; text-align:left&quot;&gt;官网:&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnailjob.opensnail.com%2F&quot; target=&quot;_blank&quot;&gt;http://snailjob.aizuda.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;color:#141212; margin-left:0; margin-right:0; text-align:left&quot;&gt;gitee:&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/aizuda/snail-job&quot;&gt;https://gitee.com/aizuda/snail-job&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;color:#141212; margin-left:0; margin-right:0; text-align:left&quot;&gt;github：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faizuda%2Fsnail-job&quot; target=&quot;_blank&quot;&gt;https://github.com/aizuda/snail-job&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style=&quot;color:#141212; margin-left:0; margin-right:0; text-align:left&quot;&gt;体验地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnailjob.opensnail.com%2Fdocs%2Fpreview.html&quot; target=&quot;_blank&quot;&gt;http://snailjob.aizuda.com/docs/preview.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;color:#141212; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;方便的话给项目一个 star，你的支持是我们前进的动力！&lt;/strong&gt;&lt;/p&gt; 
 &lt;h1&gt;&lt;strong&gt;先睹为快&lt;/strong&gt;&lt;/h1&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-14e6a8b356b5af81ef5d29c5f11f409ec8e.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c211e2ed8bb50b0b5a98a80c66a6b1c22eb.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7f89940ef3ca77fcbc7c59a5ef1b7ee2f32.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-aaffbff80000f50760580f5c1b9eb129326.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d22af7154271453ef9e474480b365de7fe8.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b3960db7ec76046317a437129983d1b0fdb.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c30f296734992f54c595489070242d5bedb.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9ce9d14406c04e4a174fdb261f7a3dbb3c4.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-251bcb5854c6b194d572a2c9f749dcfa88c.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fb4cc7f4d4c63d268cbc5d1b899ba0890cb.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-779062ece3bf7fbd7b815316043a9a81b17.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fd2cbb9b59710fb961bee83ade1acea0ee2.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e2a4fb0f130d1f3eceb5c05b0913074d12f.jpg&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311088/snail-job-1-2-0-beta1</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311088/snail-job-1-2-0-beta1</guid>
            <pubDate>Mon, 09 Sep 2024 00:56:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🎉 降低 DDD 实践成本 | Wow 3.12.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架&quot; src=&quot;https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg&quot; width=&quot;150&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow&quot;&gt;&lt;img alt=&quot;Integration Test Status&quot; src=&quot;https://oscimg.oschina.net/oscnet/badge.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin&quot;&gt;&lt;img alt=&quot;Awesome Kotlin Badge&quot; src=&quot;https://oscimg.oschina.net/oscnet/awesome-kotlin.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt=&quot;👉&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt=&quot;👈&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h2&gt;更新内容&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;特性 (query): 支持或非（&lt;code&gt;NOR&lt;/code&gt;）逻辑运算符。&lt;/li&gt; 
  &lt;li&gt;依赖 (dashboard): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;typescript&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;~5.5.0&lt;/code&gt;。&lt;/li&gt; 
  &lt;li&gt;依赖 (opentelemetry): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;io.opentelemetry:opentelemetry-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.42.0&lt;/code&gt;。&lt;/li&gt; 
  &lt;li&gt;依赖 (build): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;detekt&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.23.7&lt;/code&gt;。&lt;/li&gt; 
  &lt;li&gt;依赖 (dashboard): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;jasmine-core&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;~5.3.0&lt;/code&gt;。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;QueryDsl&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;condition {
    deleted(&lt;span&gt;false&lt;/span&gt;)
    and {
        tenantId(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;tenantId&quot;&lt;/span&gt;)
        all()
    }
    nor {
        all()
    }
    id(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;id&quot;&lt;/span&gt;)
    ids(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;id2&quot;&lt;/span&gt;)
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field1&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value1&quot;&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field2&quot;&lt;/span&gt; ne &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value2&quot;&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;filed3&quot;&lt;/span&gt; gt &lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field4&quot;&lt;/span&gt; lt &lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field5&quot;&lt;/span&gt; gte &lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field6&quot;&lt;/span&gt; lte &lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field7&quot;&lt;/span&gt; contains &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value7&quot;&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field8&quot;&lt;/span&gt; isIn listOf(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value8&quot;&lt;/span&gt;)
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field9&quot;&lt;/span&gt; notIn listOf(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value9&quot;&lt;/span&gt;)
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field10&quot;&lt;/span&gt; between (&lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt; to &lt;span style=&quot;color:#008080&quot;&gt;2&lt;/span&gt;)
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field100&quot;&lt;/span&gt; between &lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt; to &lt;span style=&quot;color:#008080&quot;&gt;2&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field11&quot;&lt;/span&gt; all listOf(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value11&quot;&lt;/span&gt;)
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field12&quot;&lt;/span&gt; startsWith &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value12&quot;&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field12&quot;&lt;/span&gt; endsWith &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value12&quot;&lt;/span&gt;
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field13&quot;&lt;/span&gt; elemMatch {
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field14&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value14&quot;&lt;/span&gt;
    }
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field15&quot;&lt;/span&gt;.isNull()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field16&quot;&lt;/span&gt;.notNull()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field17&quot;&lt;/span&gt;.isTrue()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field18&quot;&lt;/span&gt;.isFalse()
    and {
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field3&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value3&quot;&lt;/span&gt;
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field4&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value4&quot;&lt;/span&gt;
    }
    or {
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field3&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value3&quot;&lt;/span&gt;
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field4&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value4&quot;&lt;/span&gt;
    }
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field19&quot;&lt;/span&gt;.today()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field20&quot;&lt;/span&gt;.tomorrow()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field21&quot;&lt;/span&gt;.thisWeek()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field22&quot;&lt;/span&gt;.nextWeek()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field23&quot;&lt;/span&gt;.lastWeek()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field24&quot;&lt;/span&gt;.thisMonth()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field25&quot;&lt;/span&gt;.lastMonth()
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field26&quot;&lt;/span&gt;.recentDays(&lt;span style=&quot;color:#008080&quot;&gt;1&lt;/span&gt;)
    raw(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;1=1&quot;&lt;/span&gt;)
    &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;state&quot;&lt;/span&gt; nested {
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field27&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value27&quot;&lt;/span&gt;
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field28&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value28&quot;&lt;/span&gt;
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;child&quot;&lt;/span&gt; nested {
            &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field29&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value29&quot;&lt;/span&gt;
        }
        nested(&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;&quot;&lt;/span&gt;)
        &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;field30&quot;&lt;/span&gt; eq &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;value30&quot;&lt;/span&gt;
    }
}
&lt;/code&gt;
&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html&quot; target=&quot;_blank&quot;&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Features&quot; src=&quot;https://oscimg.oschina.net/oscnet/Features.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Architecture&quot; src=&quot;https://oscimg.oschina.net/oscnet/Architecture.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html&quot; target=&quot;_blank&quot;&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html&quot; target=&quot;_blank&quot;&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;传统架构 VS 事件溯源&quot; src=&quot;https://oscimg.oschina.net/oscnet/300ee974_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;ETL 同步流程&quot; src=&quot;https://oscimg.oschina.net/oscnet/5fda25c1_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311086/wow-3-12-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311086/wow-3-12-6-released</guid>
            <pubDate>Mon, 09 Sep 2024 00:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>RuleGo v0.24.0 发布：国产轻量级、全场景、新一代组件编排规则引擎</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;code&gt;RuleGo&lt;/code&gt; 是一个基于 &lt;code&gt;Go&lt;/code&gt; 语言的轻量级、高性能、嵌入式、组件编排新一代规则引擎。它可以帮助你快速构建低耦合、灵活的系统，实现复杂的业务逻辑。RuleGo 还提供大量可复用的组件，支持对数据进行聚合、过滤、分发、转换、丰富和执行各种动作，也能和各种协议、系统进行联动和集成。让你快人一步实现自动化营销、物联网、应用集成等解决方案。&lt;/p&gt; 
&lt;p&gt;该项目在低代码、业务代码编排、数据集成、工作流、大模型智能体、边缘计算、自动化、IoT 等多种场景具有广泛的应用潜力。&lt;/p&gt; 
&lt;h4&gt;典型使用场景&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;边缘计算：&lt;/strong&gt; 可以在边缘服务器部署 &lt;code&gt;RuleGo&lt;/code&gt;，对数据进行预处理，筛选、聚合或者计算后再上报到云端。数据的处理规则和分发规则可以通过规则链动态配置和修改，而不需要重启系统。&lt;span style=&quot;background-color:#ffffff; color:#080808&quot;&gt;国产替代&lt;/span&gt;&lt;code&gt;node-red&lt;/code&gt;&lt;span style=&quot;background-color:#ffffff; color:#080808&quot;&gt;系统。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;物联网：&lt;/strong&gt; 收集设备数据上报，经过规则链的规则判断，触发一个或者多个动作，例如：发邮件、发告警、和其他设备或者系统联动。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据分发：&lt;/strong&gt; 可以根据不同的消息类型，调用 HTTP、MQTT 或者 gRPC 把数据分发到不同系统。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;应用集成：&lt;/strong&gt; 把 &lt;code&gt;RuleGo&lt;/code&gt; 当做胶水连接各种系统或者协议，例如：ssh、webhook、kafka、消息队列、数据库、chatGPT、第三方应用系统。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;异构系统数据集中处理：&lt;/strong&gt; 从不同的数据源（如 MQTT、HTTP、WS、TCP/UDP 等）接收数据，然后对数据进行过滤、格式转换、然后分发到数据库、业务系统或者仪表板。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高度定制化业务：&lt;/strong&gt; 把高度定制化或者经常变化的业务解耦出来，交给 &lt;code&gt;RuleGo&lt;/code&gt; 规则链进行管理。业务需求变化而不需要重启主程序。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;复杂业务编排：&lt;/strong&gt; 把业务封装成自定义组件，通过 &lt;code&gt;RuleGo&lt;/code&gt; 编排和驱动这些自定义的组件，业务逻辑并支持动态调整和替换。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;微服务编排：&lt;/strong&gt; 通过 &lt;code&gt;RuleGo&lt;/code&gt; 编排和驱动微服务，或者动态调用第三方服务处理业务，并返回结果。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;业务代码和业务逻辑解耦：&lt;/strong&gt; 例如：用户积分计算系统、风控系统。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自动化：&lt;/strong&gt; 例如：CI/CD 系统、流程自动化系统、营销自动化系统。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;低代码：&lt;/strong&gt; 例如：低代码平台、iPaaS 系统、ETL、类 &lt;code&gt;Langflow&lt;/code&gt; 系统（对接&lt;code&gt;大模型&lt;/code&gt;提取用户意图，然后触发规则链与其他系统进行联动或者进行业务处理）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;架构图&lt;/h3&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1536&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-64da4b87a62dbe96e2cda29fe1e7ba01878.png&quot; width=&quot;2149&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;可视化&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;999&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9997e9e4807b438912b9685ab3409eee505.png&quot; width=&quot;1557&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;本次更新&lt;/strong&gt;&lt;/h3&gt; 
&lt;h2&gt;[v0.24.0] 2024/09/09&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;feat:增加节点连接资源复用机制&lt;/li&gt; 
 &lt;li&gt;feat:网络连接类组件支持共享连接池&lt;/li&gt; 
 &lt;li&gt;feat:增加引用节点的节点&lt;/li&gt; 
 &lt;li&gt;feat:exec node 允许通过 stderr 获取数据&lt;/li&gt; 
 &lt;li&gt;feat:http endpoint 允许响应 html 页面&lt;/li&gt; 
 &lt;li&gt;fix(server):post msg api 没有 workDir&lt;/li&gt; 
 &lt;li&gt;feat(server):增加节点复用相关 api&lt;/li&gt; 
 &lt;li&gt;feat(server):加载全局共享组件&lt;/li&gt; 
 &lt;li&gt;feat(rulego-components):增加 rabbitmq endpoint 和节点组件&lt;/li&gt; 
 &lt;li&gt;feat(rulego-components):增加 opengemini 读和 opengemini 写组件&lt;/li&gt; 
 &lt;li&gt;feat(rulego-components):组件支持连接池&lt;/li&gt; 
 &lt;li&gt;refactor(rulego-components):kafka 组件 brokers 字段改成 server&lt;/li&gt; 
 &lt;li&gt;feat(rulego-editor):规则链 ID 默认使用 nanoid&lt;/li&gt; 
 &lt;li&gt;feat(rulego-editor):endpoint 支持多路由&lt;/li&gt; 
 &lt;li&gt;feat(rulego-editor):增加连接类型国际化&lt;/li&gt; 
 &lt;li&gt;feat(rulego-editor):增加连接池下拉选项&lt;/li&gt; 
 &lt;li&gt;feat(rulego-editor):增加最新版本节点配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;本次重点&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;本次更新实现了两种复用组件机制：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt;网络类组件客户端共享机制，允许多个组件共用同一个客户端连接资源，达到连接复用的目的。&lt;/li&gt; 
 &lt;li&gt;引用组件的组件，允许引用当前规则链或者别的规则链某一个节点，达到节点复用目的。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;另外框架提供了更加灵活的规则引擎逻辑控制方法，你可以实现更高级的自定义组件功能。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;内置组件方面&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;本次新增 5 个内置组件，分别是：rabbitmq endpoint 组件、rabbitmq 节点组件、opengemini 读和写组件、节点引用组件。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RuleGo 除了提供规则解析和组件编排外，还内置了大量的开箱即用的公共组件。你可以很方便通过统一的配置方式动态调用以下组件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;数据库：支持 sqlite3、mysql、postgres、Microsoft SQL Server、Oracle、TDengine、Snowflake、ClickHouse、Vertica、opengemini、influxdb&lt;/li&gt; 
 &lt;li&gt;消息队列：mqtt、redis sub、redis stream、rabbitmq、nats&lt;/li&gt; 
 &lt;li&gt;脚本语言：Lua、JavaScript、Expr 表达式&lt;/li&gt; 
 &lt;li&gt;协议类：tcp/udp、http、websocket、ssh、命令行&lt;/li&gt; 
 &lt;li&gt;控制类：for、if、节点引用、子规则链、节点组、消息路由、延迟、定时调度&lt;/li&gt; 
 &lt;li&gt;通知类：webhook（钉钉、企业微信、飞书等）、邮件、消息模板&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他信息&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;欢迎在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/rulego/rulego&quot; target=&quot;_blank&quot;&gt;Gitee&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或者&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frulego%2Frulego&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;上提交反馈或建议&lt;/li&gt; 
 &lt;li&gt;如果喜欢这个项目，请给我们点个 Star&lt;/li&gt; 
 &lt;li&gt;文档官网：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2F&quot; target=&quot;_blank&quot;&gt;rulego.cc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;rulego-editor：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Feditor.rulego.cc&quot; target=&quot;_blank&quot;&gt;editor.rulego.cc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F8.134.32.225%3A9090%2Fui%2F&quot; target=&quot;_blank&quot;&gt;体验地址&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311029/rulego-0-24-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311029/rulego-0-24-0-released</guid>
            <pubDate>Sun, 08 Sep 2024 09:28:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>nginxWebUI 4.2.4 发布，nginx 网页配置工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;nginxWebUI 4.2.4 已经发布，nginx 网页配置工具&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;1.提升在网页执行命令的安全性&lt;/p&gt; 
&lt;p&gt;2.提升解压 zip 包时的安全性 jar&lt;/p&gt; 
&lt;p&gt;下载地址: &lt;a href=&quot;https://gitee.com/cym1102/nginxWebUI/releases/download/4.2.4/nginxWebUI-4.2.4.jar&quot; target=&quot;_blank&quot;&gt;https://gitee.com/cym1102/nginxWebUI/releases/download/4.2.4/nginxWebUI-4.2.4.jar&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;docker 地址: cym1102/nginxwebui:4.2.4&lt;/p&gt; 
&lt;p&gt;docker 国内地址: registry.cn-hangzhou.aliyuncs.com/cym19871102/nginxwebui:4.2.4&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href=&quot;https://gitee.com/cym1102/nginxWebUI/releases/4.2.4&quot;&gt;https://gitee.com/cym1102/nginxWebUI/releases/4.2.4&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310888</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310888</guid>
            <pubDate>Sat, 07 Sep 2024 09:07:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>GoooQo v0.1.4 已经发布，OQM 技术的 Golang 实现</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;GoooQo v0.1.4 已经发布，OQM 技术的 Golang 实现&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[rdb] 支持 OR/AND 混合语句的构造&lt;/li&gt; 
 &lt;li&gt;[rdb] 优化 SQL 日志&lt;/li&gt; 
 &lt;li&gt;[rdb] 新增回调式事务接口&lt;/li&gt; 
 &lt;li&gt;[rdb] 支持发生 panic 时回滚事务接&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href=&quot;https://gitee.com/doyto/goooqo/compare/v0.1.3...v0.1.4&quot; target=&quot;_blank&quot;&gt;https://gitee.com/doyto/goooqo/compare/v0.1.3...v0.1.4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;关于 OR 语句的构造可参考文章: &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fmy.oschina.net%2Ff0rb%2Fblog%2F15632491&quot; target=&quot;_blank&quot;&gt;https://my.oschina.net/f0rb/blog/15632491&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;GoooQo 是一个可以仅根据对象自动构建 SQL 语句并执行的 OQM 框架。&lt;/p&gt; 
&lt;p&gt;OQM 是一项仅通过对象来构建数据库查询语句的技术，专注于研究面向对象编程语言和数据库查询语言之间的映射关系。&lt;/p&gt; 
&lt;p&gt;OQM 主要依靠以下三类对象来映射数据库查询语句：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Entity Object&lt;/code&gt;实体对象用于映射 SQL 语句中的静态部分，例如表名和列名；&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Query Object&lt;/code&gt;查询对象用于映射 SQL 语句中的动态部分，例如过滤条件、分页和排序；&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;View Object&lt;/code&gt;视图对象用于映射复杂查询语句中的静态部分，例如表名、列名、嵌套视图和分组列。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;GoooQo 中的前三个 o 即代表上述三类对象，Qo 代表 Query Object，是 OQM 技术中最核心的对象概念。&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href=&quot;https://gitee.com/doyto/goooqo/releases/v0.1.4&quot;&gt;https://gitee.com/doyto/goooqo/releases/v0.1.4&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310764/goooqo-0-1-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310764/goooqo-0-1-4-released</guid>
            <pubDate>Fri, 06 Sep 2024 09:55:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Visual Studio Code 1.93 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;Visual Studio Code 1.93 已&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;&lt;span style=&quot;color:#333333&quot;&gt;，具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_new-profiles-editor&quot; target=&quot;_blank&quot;&gt;Profiles editor&lt;/a&gt;&amp;nbsp;- 从一个地方切换和管理你的配置文件。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新的 Profiles 编辑器现在可在 Visual Studio Code 中全面使用。此体验包括创建新配置文件、编辑和删除现有配置文件以及导入和导出配置文件以与他人共享。有关更多信息，可参阅 Profiles&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fdocs%2Feditor%2Fprofiles&quot; target=&quot;_blank&quot;&gt;文档&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;316&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2a086557321282bf470f71d9a22b9b40263.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_django-unit-test-support&quot; target=&quot;_blank&quot;&gt;Django 单元测试支持&lt;/a&gt;&amp;nbsp;- 从 Test Explorer 发现并运行 Django 单元测试。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;228&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ca96116b93a29f7cc55df3db6423499c18a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_full-project-intellisense-and-package-typings-on-vscodedev&quot; target=&quot;_blank&quot;&gt;vscode.dev 上的 IntelliSense&lt;/a&gt;&amp;nbsp;- 使用 IntelliSense 提升 vscode.dev 中的 JS 和 TS 编码效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Chrome、Microsoft Edge 和 Firefox 支持 Package typings 和完整的&amp;nbsp;project IntelliSense。Safari 尚不受支持，因为它未实现&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FReadableByteStreamController&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;ReadableByteStreamController&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;238&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-641f233044b5da52c79fe59fd6cdd82d74d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;248&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6ec2f4fb24aab147d91611ed3c5c4e86d7e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_show-or-hide-unchanged-cells-in-the-diff-view&quot; target=&quot;_blank&quot;&gt;Notebook diff viewer&lt;/a&gt;&amp;nbsp;- 通过折叠未更改的单元格有效地查看 Notebook 中的更改。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;372&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-76ebecab6acf719c4cc1e7db48d60991721.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_resize-table-columns-via-the-keyboard&quot; target=&quot;_blank&quot;&gt;通过键盘调整列大小&lt;/a&gt;&amp;nbsp;- 通过键盘可以更轻松地调整 VS Code 中的表列大小。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新命令&lt;code&gt;list.resizeColumn&lt;/code&gt;可让你使用键盘调整列大小。触发此命令时，选择要调整大小的列并提供要设置的宽度百分比。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;201&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-766a2d825318281862b47bd49dac2db700d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_source-control-graph-view&quot; target=&quot;_blank&quot;&gt;Source Control Graph&lt;/a&gt;&amp;nbsp;- 轻松隐藏、折叠或移动 Source Control Graph。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;将上一个里程碑启用的 history graph 从 Source Control 视图移至名为&amp;nbsp;&lt;strong&gt;Source Control Graph &lt;/strong&gt;的新视图。这减少了主视图的信息过载，并使用户能够根据需要隐藏/折叠/移动新视图。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;314&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6743ba13f410b4294788d41d98628adac13.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_github-copilot-override&quot; target=&quot;_blank&quot;&gt;GitHub Copilot&lt;/a&gt;&amp;nbsp;- 在快速聊天中添加上下文，改进测试生成和聊天历史记录。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;209&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-981bbe092c211c0d13779571d456dbd1d94.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_code-generation-instructions&quot; target=&quot;_blank&quot;&gt;实验性：自定义 Copilot 指令&lt;/a&gt;&amp;nbsp;- 为 Copilot 定义特定的代码生成指令。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a5c932a26ee41e6e21562543b47177e1bac.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93&quot; target=&quot;_blank&quot;&gt;查看发布公告&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310721/vs-code-1-93-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310721/vs-code-1-93-released</guid>
            <pubDate>Fri, 06 Sep 2024 07:50:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🔥一款超级强大的 ORM 框架 mybatis-mp 1.6.7 正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;官网 ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;https://mybatis-mp.cn&lt;/a&gt;&lt;/h1&gt; 
&lt;h1&gt;更新：&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;1: 优化代码生成器&lt;/li&gt; 
 &lt;li&gt;2：增强 Fetch 注解 (实现可动态 select)&lt;/li&gt; 
 &lt;li&gt;3：优化底层代码&lt;/li&gt; 
 &lt;li&gt;4：修复多个不同数据库无法识别 db 类型的问题&lt;/li&gt; 
 &lt;li&gt;5：修复 insert select 在 ORACLE 环境异常问题&lt;/li&gt; 
 &lt;li&gt;6: InsertChain 增加新 insert select 方法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;为什么推荐 mybatis-mp ？：&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;mybatis-mp 是一款超级强大的 ORM 框架&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;1：可多表 join（不再只能单表了）&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;2：良好 resultMap 结果映射能力（不怕映射错误了）&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;3：良好的扩展能力：orm+sql 模板 （让 ORM 框架不再死板，扩展性极强）&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;4：就算 xml 也不用再增加什么插件了，自带 xml 分页&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;5：强大的各种数据库适配，可在一套代码中，实现多个数据库适配；真正的 ORM hibernate 都做不到&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;6：极简的 api 设计，让开发者，不再迷糊&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;7：还很多很多独特优良的设计，只有前往体验，才能感受了；不相信可以试试！！！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span&gt;&amp;nbsp;1.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;单表 +@Fetch 注解 + fetchFilter 方法&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@Data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ResultEntity&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;) &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;SysUserVo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Integer id;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String userName;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String password;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Integer roleId;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; LocalDateTime create_time;

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@Fetch&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(source = SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;property&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;= &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;roleId&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, target = SysRole&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;targetProperty&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;= &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; List&amp;lt;SysRoleVo&amp;gt; sysRoles;

}&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List&amp;lt;SysUserVO&amp;gt; list = QueryChain.of(sysUserMapper)
        .from(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .fetchFilter(SysUserVO::getRoles,where-&amp;gt;where.eq(SysRole::getStatus,&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;))
        .returnType(SysUserVO&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .list();&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;fetchFilter 方法是对 @Fetch 注解的增强，没有特殊要求一般，可忽略&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;2. 单表查询&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUser sysUser = QueryChain.of(sysUserMapper)
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getId, 1)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getUserName,&#39;admin&#39;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .get();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3.VO 映射&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@Data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@ResultEntity&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(SysUser.class)
public class SysUserVo {

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;userName&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//字段名字不一样时&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    @&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;ResultEntityField&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(property = &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUserVO sysUserVO = QueryChain.of(sysUserMapper)
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getId, 1)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getUserName,&#39;admin&#39;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .returnType(SysUserVO.class)
        .list();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4. join 查询&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@Data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ResultEntity(SysUser.class)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;SysUserVo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Integer id;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String userName;

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//字段名字不一样时&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ResultEntityField(property = &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&quot;password&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String pwd;
    
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//映射一个对象 1 对 1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@NestedResultEntity(target = SysRole.class)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    prviate SysRole sysRole;
    
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//映射多个对象 1 对多&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@NestedResultEntity(target = SysRole.class)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    prviate List&amp;lt;SysRole&amp;gt; sysRoles;

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List&amp;lt;SysUserRoleVO&amp;gt; list = QueryChain.&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(sysUserMapper)
        .&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .join(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;SysRole&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .returnType(SysUserRoleVO&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .list();&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;还有很多很多超级方便有趣的写法，欢迎大家来使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;https://mybatis-mp.cn&lt;/a&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;例如：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;1 . 多表 join A 内嵌 B B 内嵌 C 都可以&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;2 . 不使用 join 使用 @Fetch 注解 + fetchFilter 方法实现，将 A JOIN B 变成 query A + query B&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;3 . 使用 @Paging 注解，实现你的 xml 自动分页&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;4 . 使用 SQL 模板，让你 ORM 更简单更容易扩展，再也不怕被框架限制了&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310705/mybatis-mp-1-6-7-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310705/mybatis-mp-1-6-7-released</guid>
            <pubDate>Fri, 06 Sep 2024 06:47:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>LiteFlow v2.12.3 正式版本发布，国内好用优秀的规则引擎框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h2&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;这一个版本 2.12.3 做了挺久的。虽然涉及到的 issue 只有 9 个，但是其中有些 issue 涉及到了 LF 的核心数据结构的变动。为了能让 LF 的源码设计更加优秀，是做了大量的优化的。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;如果你在使用 2.12.X 系列的版本，可以无缝升级。如果是以下版本，请看官网的升级指南。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;嵌套循环获取 N 层下标/迭代对象&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;在之前版本中，这一直是循环体系中不太完美的地方，开发者只能取到当前层的循环下标/迭代对象。而无法取到上层的值。之前版本没提供也是因为涉及到了底层的对象结构的变更，没有很好的思路去入手。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;在这个版本中，我们终于提供了这一个特性。不仅能取到上一层的循环下标/迭代对象，还能取到前 N 层的。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;关于这个特性的详细使用方法请参照【&lt;strong&gt;常规组件-&amp;gt;次数循环组件&lt;/strong&gt;】以及【&lt;strong&gt;常规组件-&amp;gt;迭代循环组件&lt;/strong&gt;】。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;隐式子流程嵌套的问题&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;其实这个问题和循环嵌套获取 N 层下标的问题类似，都是属于底层对象结构的不完善导致的。我们这个版本花了很长时间去思考了这个问题，并从底层去解决了本质问题。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;在 Solon 体系中支持声明式的组件&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;Solon 是一个优秀的纯血国产应用开发框架，LF 一直对 Solon 有支持，但是在之前的版本中，在 solon 中开发声明式的组件一直存在问题。后来得益于 solon 作者的帮助，这个问题才得以解决。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;span&gt;现在你可以在 solon 体系中更好的使用&lt;/span&gt;&lt;span&gt;LiteFlow&lt;/span&gt;&lt;span&gt;了。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;测试用例数提升到 2056 个&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;测试用例数我认为直接反映了一个开源项目的可靠性和稳定性。所以我们在对待测试用例这件事上是有和对待核心代码同样的极致追求。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;每一个 issue，每一个特性，每一个 bug，每一个增强，我们都有相应的测试用例来佐证，并且所有的 PR 提交都会要求通过所有的测试用例才能合入。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;其他要说的&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;我们一直积极在回答社区里的各种问题。随着社群人数不断激增，问题也在不断变多。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;我们在回答的同时也发现了很多现象，我总结了下主要有以下几类：&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;1.LF 概念性的问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;2.开发中碰到使用 LF 常见的问题，反复被提问&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;3.文档有明确的显示提及，但在社区内还是被反复提问&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;4.某一个功能特性使用有问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;5.同自己公司业务结合设计方面的问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;6.提出建议性 LF 需要改进的点，新增的特性&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;&lt;strong&gt;7.报 LF 使用过程中已经明确的 Bug&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;目前 LF 一共有 15 个群，每天都会有非常多的社区问题，我们做不到细致的回答每一个人的问题，而这种模式也并非健康长久的模式。所以我也在思索如何去优化社区答疑这个体验。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;对于问题类型一，LF 官网可能会在之后增加一栏去专门解释概念，用在哪里，如何选型方面的一些文章。目前的确这方面的解释在官网上有缺失。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;对于问题类型二，反复被提问这是我的问题，而非开发者的问题。常见的问题虽然在 LF 官网有专门栏目，但是没有及时更新和增加，在之后，我会去花时间建立一个比较全面的常见问题知识库供大家查阅。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;对于问题类型三，这个只能希望使用者多去看文档，在社区群里也只会给一个指引，而不会过多的去解释。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;对于问题类型四，我们建立庞大数量的测试用例一方面是为了保障项目稳定，另一方面也希望使用者在碰到问题时能去源码查询下对应的测试用例，但我遗憾的发现，只有很少的开发者会去查看测试用例，估计能查看源码的人更少了。但是我之后还是会引导社区里的同学去查看对应的测试用例。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;对于问题类型五，这个我真没办法回答，尤其是 XXX 业务可不可以用，要如何设计这类问题，因为我并不精通使用者公司的业务，拿 LF 如何设计业务这种问题和业务紧密绑定，需要对业务要有很深的理解才可以。&lt;/p&gt; 
&lt;p style=&quot;color:#353535&quot;&gt;对于问题六，七，其实这两类问题，是对 LF 本身有很大推动作用的。目前我们都会根据问题去建立相应的 issue，并且推动迭代和修复。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;2.12.3 完整更新列表&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;特性&amp;nbsp;&lt;em&gt;#I9T6PB&amp;nbsp;嵌套循环获得任意外层的下标或者对象&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/I9T6PB

增强&amp;nbsp;&lt;em&gt;#IAH00W&amp;nbsp;增加在 LiteflowResponse 中超时节点的 Id 获取方式&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAH00W

增强&amp;nbsp;&lt;em&gt;#IAMBU8&amp;nbsp;ELBus&amp;nbsp;增加普通节点构建方法&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAMBU8

增强&amp;nbsp;&lt;em&gt;#IAOW43&amp;nbsp;在 solon 体系中支持声明式的组件&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAOW43

增强&amp;nbsp;&lt;em&gt;#IAGJ2F&amp;nbsp;在使用最新版决策路由功能时发现 SPI 加载有报错问题&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAGJ2F

修复&amp;nbsp;&lt;em&gt;#IAERN6&amp;nbsp;隐式子流程嵌套报错&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAERN6

修复&amp;nbsp;&lt;em&gt;#IAIH89&amp;nbsp;在 SQL 插件多个数据源都能检测执行通过的情况下，有可能会出现连接泄露&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAIH89

修复&amp;nbsp;&lt;em&gt;#IAJR32&amp;nbsp;修复在 ParallelStrategyExecutor 可能出现的 NPE 问题&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAJR32

修复&amp;nbsp;&lt;em&gt;#IAOICK&amp;nbsp;GraalJavaScriptExecutor&amp;nbsp;这个类的 compile() 方法中新开的 context 没有关闭，可能有隐患&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAOICK&lt;/code&gt;&lt;/pre&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310695/liteflow-2-12-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310695/liteflow-2-12-3-released</guid>
            <pubDate>Fri, 06 Sep 2024 06:14:43 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Electron v32.0.2 发布，跨平台桌面应用开发工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;Electron 是一个使用 JavaScript、HTML 和 CSS 构建跨平台的桌面应用程序。它基于 Node.js 和 Chromium，被 Atom 编辑器和许多其他应用程序使用。Electron 兼容 Mac、Windows 和 Linux，可以构建出三个平台的应用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Electron v32.0.2&amp;nbsp;&lt;span style=&quot;color:#333333&quot;&gt;更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;Fixes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 focused window 为&lt;code&gt;BaseWindow&lt;/code&gt;时，&lt;code&gt;MenuItem.click&lt;/code&gt;处理程序不设置&lt;code&gt;focusedWindow&lt;/code&gt;参数的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43437&quot; target=&quot;_blank&quot;&gt;#43437&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了&lt;code&gt;BaseWindow.setTouchBar&lt;/code&gt;无法按预期工作的问题。&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43421&quot; target=&quot;_blank&quot;&gt;#43421&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了相机权限影响屏幕共享的错误。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43544&quot; target=&quot;_blank&quot;&gt;#43544&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了 devtools 以允许在启用 WCO 时在 Linux 上恢复已保存的 dock 状态。#&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43501&quot; target=&quot;_blank&quot;&gt;43501&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了从其他应用启动时 ozone/wayland 中的电子应用无法聚焦的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43548&quot; target=&quot;_blank&quot;&gt;#43548&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;Other Changes&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;将 Chromium 更新至 128.0.6613.84。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43425&quot; target=&quot;_blank&quot;&gt;#43425&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;Documentation&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档变更：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F43459&quot; target=&quot;_blank&quot;&gt;#43459&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Freleases%2Ftag%2Fv32.0.2&quot; target=&quot;_blank&quot;&gt;https://github.com/electron/electron/releases/tag/v32.0.2&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310686/electron-32-0-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310686/electron-32-0-2-released</guid>
            <pubDate>Fri, 06 Sep 2024 05:41:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Hikyuu 2.1.4 发布，开源高性能量化交易框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;Hikyuu 是一款基于 C++/Python 的高性能开源量化交易研究框架&lt;/strong&gt;，用于 A 股全市场快速策略分析及回测。与其他量化平台或回测软件相比，具备：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;超快的数据加载与回测速度：A 股全市场（1913 万日 K 线）仅加载全部日线计算 20 日 MA 并求最后 MA 累积和，HDF5 存储首次执行边计算边数据加载，耗时 6 秒，数据加载完毕后计算耗时 166 毫秒 &quot;；&lt;/li&gt; 
 &lt;li&gt;针对系统交易理念进行组件化，实现真正的 「积木化」 积累&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;更多信息，参见:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目主页:&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhikyuu.org&quot; target=&quot;_blank&quot;&gt;https://hikyuu.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitee 地址：&lt;a href=&quot;https://gitee.com/fasiondog/hikyuu&quot;&gt;https://gitee.com/fasiondog/hikyuu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffasiondog%2Fhikyuu&quot; target=&quot;_blank&quot;&gt;https://github.com/fasiondog/hikyuu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;2.1.4 版本主要更新&lt;/strong&gt;&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;fixed 分钟级别行情数据更新错误&lt;/li&gt; 
 &lt;li&gt;优化提速 HikyuuTdx 数据下载&lt;/li&gt; 
 &lt;li&gt;优化数据加载策略，优先加载同一 K 线类型数据&lt;/li&gt; 
 &lt;li&gt;优化内部使用线程数节省系统资源&lt;/li&gt; 
 &lt;li&gt;hikyuu.interactive 可以使用环境变量控制部分数据加载策略。可在使用 .py 文件进行策略分析时，节省首次执行时间。&lt;/li&gt; 
 &lt;li&gt;完善 Strategy 和 StrategyContext&lt;/li&gt; 
 &lt;li&gt;fixed OperatorSelector 序列化时内存泄漏&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;&lt;strong&gt;HikyuuTdx 行情采集支持 qmt （需要自行有 qmt 客户端及权限）&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img height=&quot;256&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bcc3c426eea5e945353f0581542671b0e19.png&quot; width=&quot;522&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;hikyuu.interactive 支持通过环境变量控制数据加载&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;通过环境变量控制数据加载，对于直接使用 .py 文件只分析部分证券时，可以以更快的速度执行&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;214&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1799baaca8cee66c422a67c0dfaf17393fd.png&quot; width=&quot;733&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;完善及添加有关 Strategy 方式执行的相关示例&lt;/h2&gt; 
&lt;p&gt;hikyuu.interactive 主要用于日常交互式分析和测试系统策略，如何将分析好的策略用于实盘测试，则需要使用 Strategy 运行时进行调度，也就是常见的量化框架在数据变动时或者定时点的执行策略。&lt;/p&gt; 
&lt;p&gt;python 示例可参见安装目录下 strategy 子目录中的相关 demo&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;228&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-85d3ed6a0b84feb78d867efc1e0c12187de.png&quot; width=&quot;380&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;cpp 相关示例请参见源码 hikyuu_cpp/demo 目录&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310671/hikyuu-2-1-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310671/hikyuu-2-1-4-released</guid>
            <pubDate>Fri, 06 Sep 2024 03:34:41 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>DBeaver 24.2 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 24.2 现已发布，更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;SQL Editor：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了启用语义分析选项时 functions 和 procedures 的&amp;nbsp;block $$ 的高亮显示问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;改进了警告和错误的处理和显示&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;增强了子查询语义分析&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;改进了 CREATE 和 DROP 查询处理&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了启用新 completion engine&amp;nbsp;后提案重复的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了启用新 completion engine&amp;nbsp;时的错误建议&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;AI 助手：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;添加了新模型「gpt-4o-mini」&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;删除了弃用的模型「gpt-3.5-turbo-16K」&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了启用格式化时查询生成的问题&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Data Editor：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;一些数据类型图标被更改&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了对带有空格的列进行过滤的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;如果结果集中存在「color」列，则添加了以指定颜色呈现几何形状的功能&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据 SQL 方言改进了分组面板中 fully qualified names 的处理&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;本地链接打开受到限制&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Datatransfer：数据传输窗口宽度已固定&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Connectivity：修复了通过 SSH 连接时 127.0.01 主机的验证问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;General：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复 macOS Sequoia 上的 flipping splash screen&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;外部 Data wrappers 配置器已修复&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;「Open auth links in embedded browser’」设置默认处于禁用状态&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;偏好设置中的搜索功能得到改进：为 reopen、open、Hippie、autosave 等添加了关键字&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了更改具有相似名称的数据库连接时选择错误数据库的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;简单视图中的文件夹显示问题已修复&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;现在支持 Windows Registry 中的&amp;nbsp;Numeric (DWORD) 类型参数&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了用于「Previous Edit Location」和「Next Edit Location」的「Ctrl+Alt+Left / Right’」热键&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Databases：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Clickhouse：按日期数据类型过滤已修复&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;MySQL：错误/输出日志转储已修复&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;PostgreSQL 的：&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;数据网格中按 interval datatypes 排序的问题已修复&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 SQL 编辑器中添加了 regexp 函数支持&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Redshift：&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;连接稳定性明显提升&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;DDL 演示已修复&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;角色、用户和组的显示已修复&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;SQL Server：&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;SQL Server 驱动已更新至版本 12.8.0&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;修复了自定义数据类型的 DDL 和列显示&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;本地化：法语本地化已更新&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详情可查看：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2024%2F09%2F01%2Fdbeaver-24-2%2F&quot; target=&quot;_blank&quot;&gt;https://dbeaver.io/2024/09/01/dbeaver-24-2/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310661/dbeaver-24-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310661/dbeaver-24-2-released</guid>
            <pubDate>Fri, 06 Sep 2024 02:46:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>OpenSSL 3.4 Alpha 1</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;OpenSSL 3.4 首个 Alpha 版本已发布。&lt;/p&gt; 
&lt;p&gt;主要变化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;作为 FIPS 140-3 要求的一部分，在 FIPS 提供者中添加了 FIPS 指标。&lt;/li&gt; 
 &lt;li&gt;使用静态链接的 jitterentropy 库的新随机种子源 RNG JITTER。&lt;/li&gt; 
 &lt;li&gt;openssl list&quot;命令现在可以检索已配置的 TLS 签名算法。&lt;/li&gt; 
 &lt;li&gt;改进了 Base64 BIO 的正确性和错误报告。&lt;/li&gt; 
 &lt;li&gt;在 IBM s390x 架构上支持 HMAC 硬件加速。&lt;/li&gt; 
 &lt;li&gt;在 PKCS#12 中实现 RFC 9579 (PBMAC1)&lt;/li&gt; 
 &lt;li&gt;支持直接获取的复合签名算法，如 RSA-SHA2-256。&lt;/li&gt; 
 &lt;li&gt;支持 RFC 9150 和 TLS 1.3 中的 TLS_SHA256_SHA256 和 TLS_SHA384_SHA384 纯密码套件&lt;/li&gt; 
 &lt;li&gt;支持属性证书 (RFC 5755)。&lt;/li&gt; 
 &lt;li&gt;OpenSSL 现在支持使用新的&quot;enable-pie&quot;配置选项构建位置独立可执行文件（PIE），以支持 OpenSSL 可执行文件的地址空间布局随机化（ASL）R。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Freleases%2Ftag%2Fopenssl-3.4.0-alpha1&quot; target=&quot;_blank&quot;&gt;下载地址&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssl%2Fopenssl%2Fblob%2Fmaster%2FCHANGES.md&quot; target=&quot;_blank&quot;&gt;更新日志&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310659/openssl-3-4-alpha-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310659/openssl-3-4-alpha-1-released</guid>
            <pubDate>Fri, 06 Sep 2024 02:32:06 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🎉 降低 DDD 实践成本 | Wow 3.12.5 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架&quot; src=&quot;https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg&quot; width=&quot;150&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow&quot;&gt;&lt;img alt=&quot;Integration Test Status&quot; src=&quot;https://oscimg.oschina.net/oscnet/badge.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin&quot;&gt;&lt;img alt=&quot;Awesome Kotlin Badge&quot; src=&quot;https://oscimg.oschina.net/oscnet/awesome-kotlin.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt=&quot;👉&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt=&quot;👈&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;特性 (compensation): 合并领域事件补偿、状态事件补偿为事件补偿。&lt;/li&gt; 
 &lt;li&gt;特性 (mongo): 自动为快照创建&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;deleted&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引。&lt;/li&gt; 
 &lt;li&gt;重构 (query): 移除重复的状态字段定义。&lt;/li&gt; 
 &lt;li&gt;依赖 (doc): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;vitepress&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;v1.3.4&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;依赖 (dashboard): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;monaco-editor&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;^0.51.0&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;依赖 (openapi): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;io.swagger.core.v3:swagger-core-jakarta&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;v2.2.23&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;依赖 (compensation): 更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;me.ahoo.coapi:coapi-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;v1.6.9&lt;/code&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html&quot; target=&quot;_blank&quot;&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Features&quot; src=&quot;https://oscimg.oschina.net/oscnet/Features.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Architecture&quot; src=&quot;https://oscimg.oschina.net/oscnet/Architecture.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html&quot; target=&quot;_blank&quot;&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html&quot; target=&quot;_blank&quot;&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;传统架构 VS 事件溯源&quot; src=&quot;https://oscimg.oschina.net/oscnet/300ee974_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;ETL 同步流程&quot; src=&quot;https://oscimg.oschina.net/oscnet/5fda25c1_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310640/wow-3-12-5-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310640/wow-3-12-5-released</guid>
            <pubDate>Fri, 06 Sep 2024 00:39:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>