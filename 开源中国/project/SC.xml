<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Jun 2025 07:44:28 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>pgSCV 0.14.1 发布，PostgreSQL 生态系统指标收集器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="text-align:left"&gt;&lt;span style="color:#000000"&gt;pgSCV 0.14.1 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fabout%2Fnews%2Fpgscv-0141-released-3091%2F" target="_blank"&gt;发布&lt;/a&gt;。自 pgSCV v0.13.0 以来，新版本实现了许多新功能并修复了许多问题。以下是主要新功能的简短列表：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;添加了从 pg_stat_ssl 收集统计信息的功能 (PostgreSQL 9.5+)；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;添加了从 pg_stat_subscription 收集统计信息的功能 (PostgreSQL 10+)；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;增加了对 pg_stat_io 中新列的支持 (postgres_stat_io_*_bytes)；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;更新 Grafana 仪表板（pgSCV 0.14.0 版）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;更新 golang 和 alpinelinux；&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCHERTS%2Fpgscv%2Freleases" target="_blank"&gt;https://github.com/CHERTS/pgscv/releases&lt;/a&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357012/pgscv-0141-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357012/pgscv-0141-released</guid>
      <pubDate>Tue, 24 Jun 2025 07:34:26 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>HeidiSQL 12.11.1.167 Linux beta 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;HeidiSQL 12.11.1.167 Linux beta 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fforum.php%3Ft%3D44184" target="_blank"&gt;发布&lt;/a&gt;。HeidiSQL 是一个功能非常强大的数据库客户端软件，采用 Delphi 开发，支持 Windows 操作系统。支持 MySQL、MariaDB、Percona Server 和微软的 SQL Server。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此版本一些显著更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;大部分更新都是&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fforum.php%3Ft%3D44138" target="_blank"&gt;在 Windows 版本上完成的&lt;/a&gt;，另外还有：&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F2197" target="_blank"&gt;Issue #2197&lt;/a&gt;：由于文件未打开错误，无法设置日志记录&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F2182" target="_blank"&gt;Issue #2182&lt;/a&gt;：mariadb 无法添加用户&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F2177" target="_blank"&gt;Issue #2177&lt;/a&gt;：对数据和查询网格的列标题中的图标进行排序&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F2165" target="_blank"&gt;Issue #2165&lt;/a&gt;：支持 MySQL 的 libperconaserverclient&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fissues%2F2189" target="_blank"&gt;Issue #2189&lt;/a&gt;：错误的数字分隔符本地化版本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;完整更新日志：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHeidiSQL%2FHeidiSQL%2Fcommits%2Flazarus%2F" target="_blank"&gt;https://github.com/HeidiSQL/HeidiSQL/commits/lazarus/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357007/heidisql-12-11-1-167-beta</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357007/heidisql-12-11-1-167-beta</guid>
      <pubDate>Tue, 24 Jun 2025 07:01:26 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Kotlin 2.2.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#19191c"&gt;Kotlin 2.2.0 版本现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fkotlin%2F2025%2F06%2Fkotlin-2-2-0-released%2F" target="_blank"&gt;发布&lt;/a&gt;。此版本包含全新和稳定的语言功能、工具更新、针对不同平台的性能改进以及重要修复。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#19191c"&gt;一些亮点更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;Language：&lt;/strong&gt;预览版中的新语言功能，包括上下文参数。一些之前处于实验阶段的功能现已稳定，例如 guard conditions、non-local break and continue 以及 multi-dollar interpolation。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin compiler：&lt;/strong&gt;统一管理编译器警告。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin/JVM：&lt;/strong&gt;接口函数的默认方法生成发生变化。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin/Native：&lt;/strong&gt;&amp;nbsp;LLVM 19 和用于跟踪和调整内存消耗的新功能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin/Wasm：&lt;/strong&gt;分离的 Wasm target，以及为每个项目配置 Binaryen 的功能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin/JS：&lt;/strong&gt;修复为@JsPlainObject 接口生成的复制方法。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gradle：&lt;/strong&gt;&amp;nbsp;Kotlin Gradle 插件中包含二进制兼容性验证。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Standard library：&lt;/strong&gt;稳定的 Base64 和 HexFormat API。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#19191c"&gt;有关更改的完整列表可参阅&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fkotlinlang.org%2Fdocs%2Fwhatsnew22.html" target="_blank"&gt;Kotlin 2.2.0 中的新增功能&lt;/a&gt;或&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJetBrains%2Fkotlin%2Freleases%2Ftag%2Fv2.2.0" target="_blank"&gt;GitHub 上的发行说明&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357003/kotlin-2-2-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357003/kotlin-2-2-0-released</guid>
      <pubDate>Sun, 11 May 2025 06:34:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Spring Modulith 1.4.1 和 1.3.7 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Spring Modulith 1.4.1 和 1.3.7 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F06%2F23%2Fspring-modulith-1-4-1-and-1-3-7-released" target="_blank"&gt;发布&lt;/a&gt;，这两个版本包含对最新 Spring Boot 和 Framework 版本的常规依赖升级。&lt;/p&gt; 
&lt;p&gt;1.4.1 还修复了以下错误并进行了改进：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Improvements&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GraalVM 上应用程序模块标识符的 JSONPath 查找中缺少反射元数据&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-modulith%2Fissues%2F1250" target="_blank"&gt;#1250&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;防止由于无效的附加包导致应用程序模块配置错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-modulith%2Fissues%2F1247" target="_blank"&gt;#1247&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bugs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;KAPT 与 Maven 的路径处理不兼容&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-modulith%2Fissues%2F1255" target="_blank"&gt;#1255&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Moments 工件的自动模块名称&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-modulith%2Fissues%2F1220" target="_blank"&gt;#1220&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详细信息可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-modulith%2Freleases%2Ftag%2F1.4.1" target="_blank"&gt;参阅 1.4.1&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-modulith%2Freleases%2Ftag%2F1.3.7" target="_blank"&gt;1.3.7&lt;/a&gt;&amp;nbsp;的完整更新日志。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357001/spring-modulith-1-4-1-and-1-3-7-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357001/spring-modulith-1-4-1-and-1-3-7-released</guid>
      <pubDate>Sun, 11 May 2025 06:22:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>IntelliJ IDEA 2025.1.3 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;IntelliJ IDEA 2025.1.3 现已发布，包含许多有用的修复。&lt;/p&gt; 
&lt;p&gt;最新更新带来以下改进：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;IDE 不再错误地在 Dart 测试的 Run tool 窗口的 &amp;nbsp;Test Results tree&amp;nbsp;中显示&lt;code&gt;&amp;lt;no name&amp;gt;&lt;/code&gt;。[&amp;nbsp;_&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-328307%2FDart-tests-no-name-shown-under-Test-Results" target="_blank"&gt;IDEA-328307&lt;/a&gt;&amp;nbsp;]&lt;/li&gt; 
 &lt;li&gt;预览面板现在可用于 AsyncAPI 3.0 文件。[&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIJPL-63246%2FAsyncAPI-Preview-not-available-for-version-3.0" target="_blank"&gt;IJPL-63246&lt;/a&gt;&amp;nbsp;]&lt;/li&gt; 
 &lt;li&gt;IDE 在构建过程输出中不再在等号处截断&lt;code&gt;postCreateCommand&lt;/code&gt;环境变量。[&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIJPL-188006%2FPostCreateCommand-environment-variables-are-truncated-at-equals-signs" target="_blank"&gt;IJPL-188006&lt;/a&gt;&amp;nbsp;]&lt;/li&gt; 
 &lt;li&gt;IDE 不再错过 Aarch64 发行版中特定于操作系统的插件，包括 Python 解释器中 WSL 支持所需的插件。[&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIJPL-189778%2FOS-specific-plugins-could-be-missing-in-Aarch64-distributions" target="_blank"&gt;IJPL-189778&lt;/a&gt;&amp;nbsp;]&lt;/li&gt; 
 &lt;li&gt;Run/Debug Configuration 界面中的 Modify classpath 区域现在以正确的大小显示。[&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIJPL-190373%2FRun-Debug-Configuration-Interface-Modify-classpath-area-is-too-small" target="_blank"&gt;IJPL-190373&lt;/a&gt;&amp;nbsp;]&lt;/li&gt; 
 &lt;li&gt;IDE 现在会在适当的情况下，在快速修复列表的顶部正确建议&amp;nbsp;Implement 方法，而不是 Make class abstract。[&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-371881%2FMake-interface-abstract-is-the-first-fix-now-instead-of-implement-interface" target="_blank"&gt;IDEA-371881&lt;/a&gt;&amp;nbsp;]&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 GitHub 作为任务服务器搜索任务时，IDE 不再显示误导性警告。[&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIJPL-184393%2FWeird-warnings-during-the-search-of-a-task" target="_blank"&gt;IJPL-184393&lt;/a&gt;&amp;nbsp;]&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;有关修复的完整概述可参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Farticles%2FIDEA-A-2100662461%2FIntelliJ-IDEA-2025.1.3-251.26927.53-build-Release-Notes" target="_blank"&gt;发行说明。&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356996/intellij-idea-2025-1-3</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356996/intellij-idea-2025-1-3</guid>
      <pubDate>Sun, 11 May 2025 06:05:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>VTJ.PRO 开放在线版接入 AI+低代码源码</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;这是一个基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;VTJ&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;低代码引擎实现的在线开发平台全功能示例，支持多平台应用开发。项目包含以下核心功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;设计器与渲染器集成&lt;/li&gt; 
 &lt;li&gt;自定义&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Service&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;OpenAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现&lt;/li&gt; 
 &lt;li&gt;设计器个性化定制扩展，项目功能完整度达到生产环境要求，支持定制、编译和部署。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;准备工作&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E5%2587%2586%25E5%25A4%2587%25E5%25B7%25A5%25E4%25BD%259C" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;本项目是低代码平台前端工程，默认集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;VTJ&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;官方标准服务接口。由于接口调用需要登录授权，如需静默自动授权，请获取账号授权签名。&lt;/p&gt; 
&lt;h3&gt;获取授权签名&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E8%258E%25B7%25E5%258F%2596%25E6%258E%2588%25E6%259D%2583%25E7%25AD%25BE%25E5%2590%258D" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flcdp.vtj.pro%2F" target="_blank"&gt;https://lcdp.vtj.pro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;登录后，点击右上角用户信息卡片中的"查看签名"按钮&lt;/li&gt; 
 &lt;li&gt;复制签名内容&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//f8bfd41d3adc5aef8a02a62b8140be32.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;配置环境变量&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E9%2585%258D%25E7%25BD%25AE%25E7%258E%25AF%25E5%25A2%2583%25E5%258F%2598%25E9%2587%258F" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;将获取的签名粘贴到项目根目录的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;env.json&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件中：&lt;/p&gt; 
&lt;div&gt;
 &lt;span style="color:#929295"&gt;json&lt;/span&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#005cc5"&gt;  "AUTH_CODE"&lt;/span&gt;&lt;span style="color:#24292e"&gt;: &lt;/span&gt;&lt;span style="color:#032f62"&gt;"在此处粘贴您的账号签名"&lt;/span&gt;&lt;span style="color:#24292e"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#005cc5"&gt;  "REMOTE"&lt;/span&gt;&lt;span style="color:#24292e"&gt;: &lt;/span&gt;&lt;span style="color:#032f62"&gt;"https://lcdp.vtj.pro"&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;完成以上配置后，您将获得一个功能完善、支持多平台（Web、H5、UniApp）的在线低代码开发环境。&lt;/p&gt; 
&lt;h2&gt;项目脚本&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E9%25A1%25B9%25E7%259B%25AE%25E8%2584%259A%25E6%259C%25AC" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;table cellspacing="0" style="--vp-code-copy-copied-text-content:&amp;quot;已复制&amp;quot;; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:#3c3c43; display:table !important; font-family:&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:20px 0px; orphans:2; overflow-x:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:720px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;命令&lt;/th&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;&lt;code&gt;npm run setup&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;registry.npmmirror.com&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;镜像源安装依赖&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;&lt;code&gt;npm run dev&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;启动开发服务器&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;&lt;code&gt;npm run sit&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;测试环境构建&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;生产环境构建&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;&lt;code&gt;npm run preview&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;预览构建产物&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;&lt;code&gt;npm run clean&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;清理项目工程&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;项目结构&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E9%25A1%25B9%25E7%259B%25AE%25E7%25BB%2593%25E6%259E%2584" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;本项目使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;@vtj/cli&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;搭建，基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vite + Vue3 + TypeScript&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术栈。采用多平台应用页面入口设计，实现环境隔离和优化打包体积。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;code&gt;vite.config.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中配置了多入口打包：&lt;/p&gt; 
&lt;div&gt;
 &lt;span style="color:#929295"&gt;typescript&lt;/span&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;span style="color:#005cc5"&gt; pages&lt;/span&gt;&lt;span style="color:#d73a49"&gt; =&lt;/span&gt;&lt;span style="color:#24292e"&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 平台主应用：包含应用管理和设计器&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  main: &lt;/span&gt;&lt;span style="color:#032f62"&gt;'./index.html'&lt;/span&gt;&lt;span style="color:#24292e"&gt;,&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // Web 应用预览&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  web: &lt;/span&gt;&lt;span style="color:#032f62"&gt;'./web/index.html'&lt;/span&gt;&lt;span style="color:#24292e"&gt;,&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // H5 应用预览&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  h5: &lt;/span&gt;&lt;span style="color:#032f62"&gt;'./h5/index.html'&lt;/span&gt;&lt;span style="color:#24292e"&gt;,&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // UniApp 应用预览&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  uniapp: &lt;/span&gt;&lt;span style="color:#032f62"&gt;'./uniapp/index.html'&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;工程目录说明&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E5%25B7%25A5%25E7%25A8%258B%25E7%259B%25AE%25E5%25BD%2595%25E8%25AF%25B4%25E6%2598%258E" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;项目结构与标准工程基本一致，以下是 VTJ 特有的重要目录说明：&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//5733e56f9f7e24f2ff5a2f663cd4a713.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;最佳实践&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E6%259C%2580%25E4%25BD%25B3%25E5%25AE%259E%25E8%25B7%25B5" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;设计器集成&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E8%25AE%25BE%25E8%25AE%25A1%25E5%2599%25A8%25E9%259B%2586%25E6%2588%2590" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;设计器实现位于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/src/views/designer.vue&lt;/code&gt;，所有平台共用同一设计器，通过加载项目 DSL 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;platform&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性确定目标平台功能。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;设计器路由格式：&lt;code&gt;/:platform/:id&lt;/code&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;platform&lt;/strong&gt;: 平台标识（web、h5、uniapp）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: 应用标识（对应项目 DSL 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;id&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;渲染器集成&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E6%25B8%25B2%25E6%259F%2593%25E5%2599%25A8%25E9%259B%2586%25E6%2588%2590" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;各平台渲染器实现文件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/src/platform/web/main.ts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;H5&lt;/strong&gt;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/src/platform/h5/main.ts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UniApp&lt;/strong&gt;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/src/platform/uniapp/main.ts&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;自定义 Service&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E8%2587%25AA%25E5%25AE%259A%25E4%25B9%2589-service" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;低代码平台的项目、文件和历史记录通过 Service 进行存储管理。&lt;code&gt;/src/shared/service.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现了远程 Service，将数据保存至后端数据库。&lt;/p&gt; 
&lt;h3&gt;自定义 OpenAPI&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E8%2587%25AA%25E5%25AE%259A%25E4%25B9%2589-openapi" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;OpenAPI 提供低代码平台的远程服务能力，如页面模板和 AI 助手功能。&lt;code&gt;/src/extension/openapi.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现了自定义 OpenAPI，您可以根据需求调整 API 接口，只需确保函数签名符合类型要求。&lt;/p&gt; 
&lt;h3&gt;设计器扩展&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E8%25AE%25BE%25E8%25AE%25A1%25E5%2599%25A8%25E6%2589%25A9%25E5%25B1%2595" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;如需扩展设计器功能，可通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/src/extension/install.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;进行开发。可用平台 API 包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;widgetManager&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;depsManager&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;setterManager&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;后端实现&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E5%2590%258E%25E7%25AB%25AF%25E5%25AE%259E%25E7%258E%25B0" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;后端实现可自行设计，只需满足 Service 和 OpenAPI 的接口规范。具体实现细节请参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;docs&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;目录下的文档。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//ab99ff9d320d5468a9f5b63cadb36052.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;重要说明&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E9%2587%258D%25E8%25A6%2581%25E8%25AF%25B4%25E6%2598%258E" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;API 方法统一在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/src/apis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;目录下定义，函数都带有 TS 签名和注释， 可以按自己的需求更换对应接口。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;代码中的 Access 是为了适配官方接口服务的权限控制，如果你改为自己实现的服务，可以不需要 Access&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;请求工具使用了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;setGlobalRequest&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置全局的&lt;code&gt;request&lt;/code&gt;, 如果在设计器中的设计视图和预览也需要用相同的&lt;code&gt;request&lt;/code&gt;, 可以通过参数传入到引擎和&lt;code&gt;createProvider&lt;/code&gt;。&lt;/p&gt; 
  &lt;div&gt;
   &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
   &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;// 传入引擎&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;span style="color:#005cc5"&gt; engine&lt;/span&gt;&lt;span style="color:#d73a49"&gt; =&lt;/span&gt;&lt;span style="color:#d73a49"&gt; new&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; Engine&lt;/span&gt;&lt;span style="color:#24292e"&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  //省略其他代码&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  adapter: {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;    request&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;});&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;// 传入 createProvider&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;span style="color:#24292e"&gt; { &lt;/span&gt;&lt;span style="color:#005cc5"&gt;provider&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#005cc5"&gt;onReady&lt;/span&gt;&lt;span style="color:#24292e"&gt; } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; createProvider&lt;/span&gt;&lt;span style="color:#24292e"&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  //省略其他代码&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  adapter: {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;    request&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;如果您不需要模版和 AI 功能，就不需要定义 OpenAPI， 只需要把引擎的&lt;code&gt;remote&lt;/code&gt;参数设置为&lt;code&gt;null&lt;/code&gt;就可以关闭这两个功能。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;设计器交互&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E8%25AE%25BE%25E8%25AE%25A1%25E5%2599%25A8%25E4%25BA%25A4%25E4%25BA%2592" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//481fd78995a5a8b02249ed7c2c033115.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//0f65e1ceeb32ca1152d0ae4a16e67022.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//8ecf250cc2da9ba2963f2c64590a87fc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;在线体验&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fservice%2Fintro.html%23%25E5%259C%25A8%25E7%25BA%25BF%25E4%25BD%2593%25E9%25AA%258C" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;访问 Demo:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fdemo%2F" target="_blank"&gt;https://vtj.pro/demo/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356993</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356993</guid>
      <pubDate>Sun, 11 May 2025 05:42:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gtoken v2.0.2 正式发布，基于 GoFrame 的 token 插件</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;更新说明：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 为安全性考虑，去除 EncryptKey 打印&lt;br&gt; 2. 将中间件错误码参数改为返回函数，可以更自由的设计认证失败返回效果&lt;br&gt; 3. 优化 ReadMe 文档&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;gtoken v2.X.X 架构全面升级，不再兼容 v1.X.X，&lt;strong&gt;升级需谨慎&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;gtoken&lt;/h1&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GoFrame&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的 token 插件，通过服务端验证方式实现 token 认证；已完全可以支撑线上 token 认证，通过 Redis 支持集群模式；使用简单，大家可以放心使用；&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GoFrame v2.X.X 全面适配&lt;/li&gt; 
 &lt;li&gt;GoFrame v1.X.X 请使用 gtoken v1.4.X 相关版本；&lt;/li&gt; 
 &lt;li&gt;Github 地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgtoken" target="_blank"&gt;https://github.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee 地址：&lt;a href="https://gitee.com/goflyfox/gtoken"&gt;https://gitee.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;gtoken 优势&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gtoken 支撑单点应用测试使用内存存储，支持个人小项目文件存储，也支持企业集群使用 redis 存储；完全适用于企业生产级使用；&lt;/li&gt; 
 &lt;li&gt;有效的避免了 jwt 服务端无法退出问题；&lt;/li&gt; 
 &lt;li&gt;解决 jwt 无法作废已颁布的令牌，只能等到令牌过期问题；&lt;/li&gt; 
 &lt;li&gt;通过用户扩展信息存储在服务端，有效规避了 jwt 携带大量用户扩展信息导致降低传输效率问题；&lt;/li&gt; 
 &lt;li&gt;有效避免 jwt 需要客户端实现续签功能，增加客户端复杂度；支持服务端自动续期，客户端不需要关心续签逻辑；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;特性说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持 token 认证，不强依赖于 session 和 cookie，适用 jwt 和 session 认证所有场景；&lt;/li&gt; 
 &lt;li&gt;支持单机 gcache 和集群 gredis 模式；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;# 缓存模式 1 gcache 2 gredis 3 fileCache&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
CacheMode = 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持服务端缓存自动续期功能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 注：通过 MaxRefresh，默认当用户第五天访问时，自动续期&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 超时时间，默认 10 天&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
Timeout &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;int&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 缓存刷新时间，默认为超时时间的一半&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
MaxRefresh &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;int&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;框架使用简单，只需要认证拦截器注册、登录 Token 生成、登出 Token 销毁即可；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;安装教程&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;获取最新版本:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;初始化配置 gtoken.Options {}, 并创建 gtoken 对象 (&lt;code&gt;gtoken.NewDefaultToken&lt;/code&gt;)；参数详情见《配置项说明》部分&lt;/li&gt; 
 &lt;li&gt;注册认证中间件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken.NewDefaultMiddleware(gfToken).Auth&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;登陆认证成功后，生成 Token（&lt;code&gt;gfToken.Generate&lt;/code&gt;）并返回给客户端&lt;/li&gt; 
 &lt;li&gt;登出时销毁 Token (&lt;code&gt;gfToken.Destroy&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;建议：由于中间件采用洋葱模型，注册 MiddlewareAuth 认证中间件，放在在 MiddlewareCORS 后，用户权限 MiddlewareUserPermissions 认证和 Response 处理 MiddlewareHandlerResponse 之前 &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 创建 gtoken 对象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
    gftoken := gtoken.NewDefaultToken(gtoken.Options{})
s.Group(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(group *ghttp.RouterGroup)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
group.Middleware(CORS)
&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 注册 GfToken 中间件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
group.Middleware(gtoken.NewDefaultMiddleware(gfToken).Auth)

        group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/system/data"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
            &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 获取登陆信息&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
            _, data, err := gfToken.Get(r.Context(), r.GetCtxVar(gtoken.KeyUserKey).String())
            &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
                r.Response.WriteJson(RespError(err))
            }
            r.Response.WriteJson(RespSuccess(data))
        })
group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/user/logout"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
    &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 登出销毁 Token &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
_ = gfToken.Destroy(ctx, r.GetCtxVar(gtoken.KeyUserKey).String())
r.Response.WriteJson(RespSuccess(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"user logout"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;))
})
})

s.BindHandler(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/login"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 认证成功调用 Generate 生成 Token&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
token, err := gfToken.Generate(ctx, username, &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
r.Response.WriteJson(RespError(err))
r.ExitAll()
}
r.Response.WriteJson(RespSuccess(g.Map{
gtoken.KeyUserKey: username,
gtoken.KeyToken:   token,
}))

})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;配置项说明&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;具体可参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GfToken&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;结构体，字段解释如下：&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:701.5px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;名称&lt;/th&gt; 
   &lt;th&gt;配置字段&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存模式&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CacheMode&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1 gcache 2 gredis 3 fileCache 默认 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CachePreKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认缓存前缀&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GToken:&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;超时时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Timeout&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 10 天（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存刷新时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MaxRefresh&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认为超时时间的一半（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 分隔符&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;TokenDelimiter&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;code&gt;_&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 加密 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;EncryptKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;12345678912345678912345678912345&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;是否支持多端登录&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MultiLogin&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截排除地址&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;AuthExcludePaths&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截器参数：此路径列表不进行认证&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截返回函数&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ResFun&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截器参数：认证失败返回函数，默认返回 Code：300&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;示例&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用示例，请先参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken/example/sample/test/backend/server.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件&lt;/p&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gf 框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf" target="_blank"&gt;https://github.com/gogf/gf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;历史文档 v1：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1115974" target="_blank"&gt;https://goframe.org/pages/viewpage.action?pageId=1115974&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356988/gtoken-2-0-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356988/gtoken-2-0-2-released</guid>
      <pubDate>Sun, 11 May 2025 05:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Roo Code 3.21.4 发布，添加新的 Claude Code 提供商</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Roo Code 3.21.4 已发布，此版本添加了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.roocode.com%2Fproviders%2Fclaude-code" target="_blank"&gt;新的 Claude Code 提供商&lt;/a&gt;，允许用户通过 Claude Code 直接在 Roo Code 中使用其现有的 Claude Max 订阅。这意味着用户可以利用其订阅权益，无需额外支付按令牌计费的 API 费用，并可访问 Claude Sonnet 4、Opus 4 等高级模型，同时享受零设置复杂性和对 Claude 思维模式及推理能力的完全访问。&lt;/p&gt; 
&lt;p&gt;此次更新还修复了多文件差异应用时的起始行参数不正确问题，以及 Ollama 在某些模型上出现的验证错误。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 Claude Code provider 可用于本地 CLI 集成，允许用户将 Claude Max 订阅直接在 Roo Code 中使用，连接订阅后，使用订阅福利而非按 token 支付 API 费用，还可使用 Claude Sonnet 4、Opus 4 等高级模型，且在初始设置时选择 Claude Code 作为提供商，无需 API 密钥，还能完全访问 Claude 的思考模式和推理能力。&lt;/li&gt; 
 &lt;li&gt;修复了多个文件差异应用时起始行参数未正确工作的错误，以及解决了导致 Ollama 无法与某些模型配合使用的验证错误。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.roocode.com%2Fupdate-notes%2Fv3.21.4" target="_blank"&gt;https://docs.roocode.com/update-notes/v3.21.4&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356980/roocode-3-21-4</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356980/roocode-3-21-4</guid>
      <pubDate>Sun, 11 May 2025 03:54:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>BootstrapBlazor v9.7.4 已经发布，Bootstrap 样式的 Blazor UI 组件库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;BootstrapBlazor v9.7.4 已经发布，Bootstrap 样式的 Blazor UI 组件库&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;Release 2025-6-24 V9.7.4&lt;/h2&gt; 
&lt;h3&gt;Break changes&lt;/h3&gt; 
&lt;h3&gt;Bugs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix(OtpInput): 修复密码模式下禁用或者只读功能导致显示明文问题 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6212" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6212&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(Select): 修复点击清空按钮时不触发 &lt;code&gt;OnSelectedItemsChanged&lt;/code&gt; 问题 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6234" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6234&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;feat(Tab): 新增 &lt;code&gt;OrdinalIgnoreCase&lt;/code&gt; 参数适配泰语等文化导致路由寻址时失败问题 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6215" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6215&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(FlipClock): 增加 &lt;code&gt;ShowDay&lt;/code&gt; 参数用于显示日 by @Mydashixiong in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6218" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6218&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(FlipClock): 增加 &lt;code&gt;ShowMonth&lt;/code&gt; 参数用于显示月 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6222" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6222&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(FlipClock): 增加 &lt;code&gt;ShowYear&lt;/code&gt; 参数用于显示年 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6224" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6224&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Vditor): 增加 &lt;code&gt;Vditor&lt;/code&gt; 视频会议组件 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6228" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6228&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Light): 重命名样式为 &lt;code&gt;bb-light&lt;/code&gt; 防止与其他样式冲突 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6232" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6232&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(CherryMarkdown): 增加 &lt;code&gt;IsSupportMath&lt;/code&gt; 参数用于控制是否支持数学公式 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6237" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6237&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(DockView): 增加 &lt;code&gt;overflow&lt;/code&gt; 样式防止悬浮窗内容溢出 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6241" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6241&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(Table): 重新设计表格组件列排序逻辑 &lt;code&gt;OnColumnCreating&lt;/code&gt; 的排序作为最终顺序 by &lt;a href="https://gitee.com/yacper" target="_blank"&gt;@yacper&lt;/a&gt; in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6242" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6242&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ErrorLogger): 增加 &lt;code&gt;EnableILogger&lt;/code&gt; 参数用于控制是否记录日志 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6246" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6246&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IpAddress): 增加支持 &lt;code&gt;ArrowLeft&lt;/code&gt; &lt;code&gt;ArrowRight&lt;/code&gt; 键盘支持 by &lt;a href="https://gitee.com/momijijin" target="_blank"&gt;@jin momiji&lt;/a&gt; in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6244" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6244&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Table): 增加 &lt;code&gt;ShowColorWhenToolbarButtonsCollapsed&lt;/code&gt; 参数控制小屏工具栏按钮样式 by &lt;a href="https://gitee.com/momijijin" target="_blank"&gt;@jin momiji&lt;/a&gt; in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6251" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6251&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ITcpSocketFactory): 增加 &lt;code&gt;ITcpSocketFactory&lt;/code&gt; 服务用于 Socket 套接字服务 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6254" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6254&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(TableExport): &lt;code&gt;TableExport&lt;/code&gt; 更新版本到 &lt;code&gt;9.2.6&lt;/code&gt; 依赖更新到最新版本 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6280" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6280&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(OtpInput ): 增加适配移动端样式 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6284" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6284&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(OfficeViewer): 增加 &lt;code&gt;OfficeViewer&lt;/code&gt; 组件用于预览微软 Office 文档 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6287" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6287&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;perf(Table): 使用 &lt;code&gt;ReferenceEqualityComparer&lt;/code&gt; 提高比较性能 by @kimdiego2098 in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6238" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6238&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;perf(TreeView): 实用 &lt;code&gt;Remove&lt;/code&gt; 方法代替 &lt;code&gt;RemoveWhere&lt;/code&gt; 提供性能 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6258" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6258&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;doc(Localization): 更新德语本地化资源文件 by @rabauss in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6217" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6217&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;doc(Pre): 更新 &lt;code&gt;Pre&lt;/code&gt; 组件样式防止样式污染 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6230" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6230&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;doc(Select): 更新 &lt;code&gt;ShowSwal&lt;/code&gt; 示例代码文档 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6248" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6248&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;doc(ITcpSocketFactory): 增加 &lt;code&gt;ITcpSocketFactory&lt;/code&gt; 服务使用文档 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6256" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6256&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;New Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;@rabauss made their first contribution in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6217" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6217&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;@Mydashixiong made their first contribution in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6218" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6218&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/yacper" target="_blank"&gt;@yacper&lt;/a&gt; made their first contribution in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6242" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6242&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fcompare%2Fv9.7.3...v9.7.4" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/compare/v9.7.3...v9.7.4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v9.7.4"&gt;https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v9.7.4&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356977/bootstrapblazor-9-7-4-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356977/bootstrapblazor-9-7-4-released</guid>
      <pubDate>Sun, 11 May 2025 03:42:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Stellarium 25.2 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Stellarium 25.2 已发布。Stellarium 是一款免费开源 GPL（自由软件基金会 GNU 通用公共许可证）软件，它使用 OpenGL 图形接口对星空进行实时渲染。软件可以模拟肉眼、双筒望远镜和小型天文等观察天空，根据观测者所处时间和位置，计算出天空中太阳、月球、行星等天体位置，并将其精确地显示出来。还可以绘制星座、演示天文现象，如流星雨、日食和月食等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;Stellarium 还被应用于天文馆中作为教学展示软件，作为天文爱好者星空望远镜观测辅助软件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="374" src="https://oscimg.oschina.net/oscnet/up-0aa6143a3e2a1325d21d488ecfd731d4a83.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此版本的主要变化内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持&amp;nbsp;sky cultures 的诸多变化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;添加了 2 个新插件：Mosaic Camera 和 Custom Nebula Textures&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Core 中的许多改进&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;sky cultures 的更新（包括新的）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;详情可参阅&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstellarium.org%2Frelease%2F2025%2F06%2F22%2Fstellarium-25.2.html" target="_blank"&gt;完整的更改列表&lt;/a&gt;&lt;span style="color:#000000"&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356963/stellarium-25-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356963/stellarium-25-2-released</guid>
      <pubDate>Sun, 11 May 2025 02:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🎉夜莺监控 V8 发版，内置支持 DeepSeek 对接</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; text-align:left"&gt;夜莺监控发布了 v8.beta14 版本，这个版本是可以上生产的，强烈建议升级。正式版会在每年夜莺大会上发布，今年预计是 7.4 号。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;下面快速介绍一下 v8.beta14 的主要更新。&lt;/p&gt; 
&lt;h2&gt;beta14 重点更新&lt;/h2&gt; 
&lt;h3&gt;支持 Postgres 告警&lt;/h3&gt; 
&lt;p style="color:#333333; text-align:left"&gt;又支持了一个新的告警数据源：Postgres，可以对 Postgres 中的数据做异常判定啦，有些业务数据（比如订单数据、商品数据）可能是存在 Postgres 或 MySQL 等 OLTP 库中，所以这算是多了一个业务数据告警的手段，业务监控的告警规则不用很多，但是通常都极为关键。&lt;/p&gt; 
&lt;p&gt;&lt;img height="630" src="https://oscimg.oschina.net/oscnet/up-e30994bca7c3d950bb85c39db5c1e5ccd77.png" width="1890" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;您可以在&lt;code&gt;集成中心-数据源&lt;/code&gt;添加 Postgres 数据源，目前的开源版本，该数据源仅支持告警，不支持看图（即时查询、仪表盘等）。&lt;/p&gt; 
&lt;h3&gt;对接 AI 做 Summary&lt;/h3&gt; 
&lt;p style="color:#333333; text-align:left"&gt;告警事件 Pipeline 新增一个新的内置处理器：AI Summary，可以使用 DeepSeek 等对告警事件做总结，将总结之后的信息附加到告警事件中，进而通过告警消息发出。让您的监控与 AI 之间的联动触手可及。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1190" src="https://oscimg.oschina.net/oscnet/up-8c07f9b00aebd755c3f0a894362cb7207f8.png" width="2002" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;填入 AI 服务器的地址和 API Key，以及要使用的模型，即可引入 AI Summary 的能力。夜莺内置提供了一个提示词，您可以根据自己的需求修改提示词。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;更多使用文档，可以参考红色箭头指向的那个&lt;code&gt;使用说明&lt;/code&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;事件处理器非常具有想象力，欢迎给我们投稿分享您的实践案例。&lt;/p&gt; 
&lt;h3&gt;告警事件匿名访问&lt;/h3&gt; 
&lt;p style="color:#333333; text-align:left"&gt;重新设计了告警事件匿名访问的逻辑。您可以在告警事件详情页面找到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;生成分享链接&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的入口。最新逻辑是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;默认不支持匿名访问，必须登录才能看到事件详情&lt;/li&gt; 
 &lt;li&gt;通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;生成分享链接&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可以生成一个带 token（有过期时间）的 URL，访问那个 URL 就可以匿名访问了&lt;/li&gt; 
 &lt;li&gt;如果夜莺配置文件 config.toml 中直接开启了全局的匿名访问，则匿名访问的 token 就没用了，只要访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/share/alert-his-events/${id}&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;就会直接放行，配置文件中的全局匿名访问配置位置是：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;&lt;span&gt;&lt;span&gt;[&lt;span style="color:#a6e22e"&gt;Center&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;AnonymousAccess&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;PromQuerier&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 就是下面这个&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;AlertDetail&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; text-align:left"&gt;如果夜莺开放在公网，请不要打开匿名访问！&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;其他 Changelog 请参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale%2Freleases%2Ftag%2Fv8.0.0-beta.14" target="_blank"&gt;github release&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;页面。&lt;/p&gt; 
&lt;h2&gt;升级须知&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;大家可以从夜莺的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale%2Freleases" target="_blank"&gt;github releases&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;页面下载到最新的发布包。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;v6/v7 版本都可以平滑升级：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;建议先备份老版本的二进制、配置、integrations 目录等，留好后路，然后就可以放心大胆升级了&lt;/li&gt; 
 &lt;li&gt;如果夜莺所用的 DB 账号有建表、改表权限，会自动更新表结构，否则就要参考代码仓库里&amp;nbsp;docker/migratesql&amp;nbsp;手工改表结构了&lt;/li&gt; 
 &lt;li&gt;integrations 目录可以直接替换成新版&lt;/li&gt; 
 &lt;li&gt;配置文件 etc/config.toml 建议认真 diff 一下&lt;/li&gt; 
 &lt;li&gt;容器启动的话，直接拉取 latest 镜像重启即可&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;夜莺产品特性介绍的 PPT&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;有些人可能对夜莺的产品还不太了解，特准备了一份 PPT，请参考：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc9xudyniiq.feishu.cn%2Fslides%2FO6xJsUzZclzeUrdMb9DcynVtnSf" target="_blank"&gt;PPT&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356937/nightingale-release-v8beta-14</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356937/nightingale-release-v8beta-14</guid>
      <pubDate>Sun, 11 May 2025 00:17:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>速来体验丨 MeterSphere 支持 AI 生成测试用例！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:start"&gt;随着 AI 技术的快速普及，利用 AI 大模型强大的自然语言处理能力自动生成测试用例，已经成为提升软件测试效率和覆盖率的最新趋势。2025 年 6 月 18 日，MeterSphere v3.6.4 LTS 版本发布。从这一版本开始，MeterSphere 开源持续测试工具正式支持以 AI 的方式生成测试用例。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;本文将为您介绍如何在 MeterSphere 开源持续测试工具中接入外部 AI 服务，从而实现基于需求描述或接口定义的自动化测试用例生成。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-bdd232a2d8c19c5b6fb6bdf311eb8684a29.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 1 MeterSphere AI 对接技术架构示意&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;一、AI 服务接入配置&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;入口一：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;在 MeterSphere 操作主界面中依次选择「系统设置」→「系统参数」→ 「模型设置」&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-284d39ab110568f45d60a5c15a7635a0045.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 2 MeterSphere 模型设置界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;入口二：&lt;/strong&gt;在 MeterSphere 登录用户的「个人中心」，选择「模型设置」选项。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fbeea1274f100373dc0e0510224e2b9e893.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 3 MeterSphere 模型接入配置界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;目前，MeterSphere 支持接入所有兼容 OpenAI API 标准的大模型，以 Qwen 模型为例，具体配置界面如下：&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b5e9b59bb637985527e8bb7994ccaa7cff3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 4 MeterSphere 对接 Qwen 模型配置界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="278" src="https://oscimg.oschina.net/oscnet/up-43ccb4ceff11be72d97865fe8602f3c3520.png" width="1044" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲附表 MeterSphere 模型对接配置项及相关说明&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;二、功能入口及使用说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;顶部公共入口：AI 智能助手&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;在 MeterSphere 顶部导航栏中点击「AI 智能助手」图标，即可打开助手机器人，辅助解决软件测试工作过程中遇到的各类问题（包括但不限于测试用例生成、故障排查、文档解读等）。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1564" src="https://oscimg.oschina.net/oscnet/up-3a9d732732dcf84b915c90d5dc36d4e0140.png" width="2932" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲图 5 MeterSphere 导航栏内置 AI 助手&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-76188ee4deb3609563e4222cf0396196dcc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲图 6 MeterSphere AI 助手会话界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;接口测试用例生成入口&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;生成单条用例：&lt;/strong&gt;输入 API 信息（例如 URL、Method、Headers、Body 结构等）和用户提示词，AI 将生成一条对应的测试用例；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;批量生成用例：&lt;/strong&gt;输入 API 信息（例如 Swagger/OpenAPI 文档 URL 或内容）和用户提示词，AI 将自动分析并生成多条相关的测试用例。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5da4fb44094ea955ceee4b1bf38af3d32f9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 7 MeterSphere AI 生成接口测试用例入口&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1564" src="https://oscimg.oschina.net/oscnet/up-8c6cd83b0f00b31f0c481eb2a4f755881bc.png" width="2938" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲图 8 MeterSphere AI 生成单条接口测试用例示例&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="1576" src="https://oscimg.oschina.net/oscnet/up-3ef4f0fc51742d0296d87f08f9caf066c9e.png" width="2944" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲图 9 MeterSphere AI 批量生成接口测试用例示例&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-21dbc7ba04a36914dec45221974035affcb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲图 10 MeterSphere AI 生成的接口测试用例列表&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;功能测试用例生成入口&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;生成单条用例：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;直接输入对测试场景的自然语言描述（例如：「测试用户登录成功场景，使用正确的用户名和密码」），AI 将自动生成一条对应的测试用例；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;批量生成用例：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;输入包含多个测试需求描述的文档或列表，AI 将批量生成对应的多条测试用例。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-941ebdbdfb5c8434c734684a35b56ff5bb5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 11 MeterSphere AI 生成功能用例入口&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9c30fba4d54afbdaf128aa5f5aedfc3b1dd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 12 MeterSphere AI 批量生成功能用例示例&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cf45f14815adc46262fc63bfebfb0e026c5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 13 MeterSphere AI 生成功能用例列表&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;查看与编辑用例&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;单条测试用例生成完毕后，页面自动跳转到「草稿」编辑页面，用户可以预览 AI 生成的用例步骤，并按需调整参数。批量生成的测试用例，用户可以在测试用例列表中查看。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;三、最佳实践&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;提示词优化：&lt;/strong&gt;结合接口细节和业务背景，提供精准的上下文，可以显著提升测试用户的生成质量；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;批量生成验证：&lt;/strong&gt;批量生成测试用例后，建议先对部分用例进行人工校验；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;模型选择：&lt;/strong&gt;不同模型在生成速度和准确度上有所差异，可以根据项目需求灵活切换。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;四、常见问题&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;在 MeterSphere 开源持续测试工具中利用 AI 生成测试用例时，也会遇到一些问题。常见的问题以及相应排查解决思路如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;用例生成速度较慢：&lt;/strong&gt;可以检查网络的连通性、调整超时配置，以及尝试使用计算资源更高的模型；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;用例生成不符合预期：&lt;/strong&gt;尝试优化提示词，或者细化接口文档字段描述；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#783887"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;API 调用失败：&lt;/strong&gt;请确认 Base URL 和 Key 是否正确，也可以查看服务端日志，以便定位错误代码。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356892</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356892</guid>
      <pubDate>Sat, 10 May 2025 11:11:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Ant Design Mobile v5.40.0 发布，AntD 移动端设计规范</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Ant Design Mobile v5.40.0&amp;nbsp;发布了。Ant Design Mobile 即 Ant Design 移动端设计规范，&lt;code&gt;antd-mobile&lt;/code&gt;&amp;nbsp;是 Ant Design 的移动规范的 React 实现，服务于蚂蚁及口碑无线业务。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;更新内容如下：&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;React: 支持&amp;nbsp;&lt;code&gt;unstableSetRender&lt;/code&gt;&amp;nbsp;属性以配置兼容 React 19。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6860" target="_blank"&gt;#6860&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;VirtualInput: 支持设置光标位置。6843&lt;/li&gt; 
 &lt;li&gt;Locale: 国际化改进俄语相关翻译。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6838" target="_blank"&gt;#6838&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;DatePicker:&amp;nbsp;&lt;code&gt;renderLabel&lt;/code&gt;&amp;nbsp;属性支持额外参数获取选中状态。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6880" target="_blank"&gt;#6880&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Calendar: 范围选择调整描述以让用户感知可以选择同一天。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6886" target="_blank"&gt;#6886&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;NumberKeyboard: 支持配置&amp;nbsp;&lt;code&gt;--adm-safe-area-multiple&lt;/code&gt;&amp;nbsp;css 变量以调整安全区域间距。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6844" target="_blank"&gt;#6844&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Button: 支持&amp;nbsp;&lt;code&gt;form&lt;/code&gt;&amp;nbsp;属性以关联表单。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6855" target="_blank"&gt;#6855&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Space: 修复最后一个元素后方有额外空间占位的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Fpull%2F6841" target="_blank"&gt;#6841&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design-mobile%2Freleases%2Ftag%2Fv5.40.0" target="_blank"&gt;https://github.com/ant-design/ant-design-mobile/releases/tag/v5.40.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356868/ant-design-mobile-5-40-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356868/ant-design-mobile-5-40-0-released</guid>
      <pubDate>Sat, 10 May 2025 08:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Parcel v2.15.3 发布，零配置构建工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Parcel 是用于 Web 的零配置构建工具。它将出色的开箱即用开发体验与可扩展的体系结构相结合，可将你的项目从零发展为大规模生产应用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Parcel 2.15.3 已发布，具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fixed&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;将行数和列数公开给&amp;nbsp;macros –&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Fpull%2F10171" target="_blank"&gt;详细信息&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;React Server Components&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;当添加页面或客户端组件更改时使 ReactStaticPackager 中的缓存无效 -&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Fcommit%2F3405c22220ce40a161964af76893554ddc25c03e" target="_blank"&gt;详细信息&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 &lt;span style="background-color:#ffffff; color:#1f2328"&gt;lazy mode with React Server Components&lt;/span&gt; –&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Fcommit%2Fa76b47ec65b30cb13f649f6cab807479ca4ad139" target="_blank"&gt;详细信息&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复&lt;code&gt;@parcel/rsc&lt;/code&gt;重复类型 –&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Fcommit%2F9cb4b8660cbcd13f01e1efac88757de2bedb0895" target="_blank"&gt;详细信息&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;确保 react-static packager 中的 publicUrl 以斜杠结尾 –&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Fcommit%2Fa90f06a2fb97716f01e86664b45f952648172ba3" target="_blank"&gt;详细信息&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 react-static packager 中的 hash reference 替换问题 –&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Fcommit%2F4c3226fe522c8283dcf2186db8adf26eae96046b" target="_blank"&gt;详细信息&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fparcel-bundler%2Fparcel%2Freleases%2Ftag%2Fv2.15.3" target="_blank"&gt;https://github.com/parcel-bundler/parcel/releases/tag/v2.15.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356842/parcel-2-15-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356842/parcel-2-15-3-released</guid>
      <pubDate>Sat, 10 May 2025 07:07:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>jsoup 1.21.1 发布，Java HTML 解析器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;jsoup 1.21.1 现已发布。此版本具有强大的全新节点选择功能，可让用户使用 CSS 选择器锁定特定的 DOM 节点（例如注释和文本节点）、通过新的 TagSet 回调系统进行动态标签自定义，并通过简化的属性转义增强了对突变 XSS 攻击的防御能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此版本还默认提供 HTTP/2 支持，并进行了多项 API 改进以提升开发者体验，并修复了多个 edge-case parsing 问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;Changes&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;删除了以前弃用的方法。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2317" target="_blank"&gt;#2317&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;由于&lt;code&gt;:matchText&lt;/code&gt;pseduo-selector 对 DOM 的副作用，已将其弃用；改用新的&lt;code&gt;::textnode&lt;/code&gt;&lt;span style="color:#192943"&gt;&amp;nbsp;selector&lt;/span&gt;和 &lt;span style="color:#192943"&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23selectNodes%28java.lang.String%2Cjava.lang.Class%29" target="_blank"&gt;Element#selectNodes(String css, Class&amp;lt;T&amp;gt; type)&lt;/a&gt;&lt;/code&gt;方法。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2343" target="_blank"&gt;#2343&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;已弃用&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23bufferUp%28%29" target="_blank"&gt;Connection.Response#bufferUp()&lt;/a&gt;&lt;/code&gt;，以代替&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23readFully%28%29" target="_blank"&gt;Connection.Response#readFully()&lt;/a&gt;&lt;/code&gt;，后者会抛出一个已检查的 IOException。&lt;/li&gt; 
 &lt;li&gt;已弃用的内部方法&lt;span style="color:#192943"&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fhelper%2FValidate.html%23ensureNotNull%28java.lang.Object%29" target="_blank"&gt;Validate#ensureNotNull(Object)&lt;/a&gt;&lt;/code&gt;（由 t&lt;span style="color:#192943"&gt;yped&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fhelper%2FValidate.html%23expectNotNull%28T%29" target="_blank"&gt;Validate#expectNotNull(T)&lt;/a&gt;&lt;/code&gt;替代）；来自 Attribute 和 Node 的受保护 HTML 附加程序。&lt;/li&gt; 
 &lt;li&gt;如果你碰巧正在使用任何已弃用的方法，官方建议立即借此机会迁移它们，因为它们将在未来的版本中被删除。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;Improvements&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;增强了&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FSelector.html" target="_blank"&gt;Selector&lt;/a&gt;&lt;/code&gt;，支持直接匹配注释和文本节点等节点。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2324" target="_blank"&gt;#2324&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTagSet.html%23onNewTag%28java.util.function.Consumer%29" target="_blank"&gt;TagSet#onNewTag(Consumer&amp;lt;Tag&amp;gt; customizer)&lt;/a&gt;：注册一个回，当每个新的或克隆的标签插入到集合中时，都会调用该回调函数。该函数支持动态调整标签选项（例如，将所有自定义标签标记为自闭合，或将给定命名空间中的所有内容标记为保留空格）。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2330" target="_blank"&gt;#2330&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;使&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTokenQueue.html" target="_blank"&gt;TokenQueue&lt;/a&gt;&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FCharacterReader.html" target="_blank"&gt;CharacterReader&lt;/a&gt;&lt;/code&gt;可自动关闭，以确保它们将缓冲区释放回缓冲池，以供以后重用。&lt;/li&gt; 
 &lt;li&gt;添加了&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FSelector.html%23evaluatorOf%28java.lang.String%29" target="_blank"&gt;Selector#evaluatorOf(String css)&lt;/a&gt;&lt;/code&gt;，以更清晰的方式从 CSS 查询中获取评估器。这是&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FQueryParser.html%23parse%28java.lang.String%29" target="_blank"&gt;QueryParser.parse(String css)&lt;/a&gt;&lt;/code&gt;的别名。&lt;/li&gt; 
 &lt;li&gt;可以将外部命名空间（例如 SVG）中的自定义标签（通过&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTagSet.html" target="_blank"&gt;TagSet&lt;/a&gt;&lt;/code&gt;定义）配置为数据标签进行解析。&lt;/li&gt; 
 &lt;li&gt;添加&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FNodeVisitor.html%23traverse%28org.jsoup.nodes.Node%29" target="_blank"&gt;NodeVisitor#traverse(Node)&lt;/a&gt;&lt;/code&gt;以简化节点遍历调用（相对于导入&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FNodeTraversor.html" target="_blank"&gt;NodeTraversor&lt;/a&gt;&lt;/code&gt;）。&lt;/li&gt; 
 &lt;li&gt;更新了默认用户代理字符串以提高兼容性。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2341" target="_blank"&gt;#2341&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HTML 解析器现在允许为已知标签自定义特定的文本数据类型 (Data、RcData)。（之前此功能仅支持自定义标签。）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2326" target="_blank"&gt;#2326&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加了&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23readFully%28%29" target="_blank"&gt;Connection.Response#readFully()&lt;/a&gt;&lt;/code&gt;，以替代&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23bufferUp%28%29" target="_blank"&gt;Connection.Response#bufferUp()&lt;/a&gt;&lt;/code&gt;，并明确了 IOException。同样，添加&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23readBody%28%29" target="_blank"&gt;Connection.Response#readBody()&lt;/a&gt;&lt;/code&gt;代替&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23body%28%29" target="_blank"&gt;Connection.Response#body()&lt;/a&gt;&lt;/code&gt;。已弃用&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23bufferUp%28%29" target="_blank"&gt;Connection.Response#bufferUp()&lt;/a&gt;&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2327" target="_blank"&gt;#2327&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;序列化 HTML 时，属性中的&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;gt;&lt;/code&gt;字符现在会被转义。这有助于防止一类变异 XSS 攻击。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2337" target="_blank"&gt;#2337&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;已更改&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html" target="_blank"&gt;Connection&lt;/a&gt;&lt;/code&gt;为优先使用 JDK 的 HttpClient 而非 HttpUrlConnection（如果可用），以默认启用 HTTP/2 支持。用户可以通过禁用&lt;code&gt;-Djsoup.useHttpClient=false&lt;/code&gt;关闭该功能。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2340" target="_blank"&gt;#2340&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;Bug Fixes&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;code&gt;svg&lt;/code&gt;外部上下文中的&lt;code&gt;script&lt;/code&gt;内容应被解析为脚本数据，而非文本。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2320" target="_blank"&gt;#2320&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTag.html%23isFormSubmittable%28%29" target="_blank"&gt;Tag#isFormSubmittable()&lt;/a&gt;&lt;/code&gt;正在更新标签的选项。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2323" target="_blank"&gt;#2323&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;当文本跟在块元素中的内联元素之后时，HTML pretty-printer&amp;nbsp;会错误地修剪空格。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2325" target="_blank"&gt;#2325&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;名称中带有连字符或其他非字母字符的自定义标签现在可以正确用作 Data 或 RcData 标签。它们的结束标签现在也能正确标记。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2332" target="_blank"&gt;#2332&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;克隆元素时，克隆将保留源的缓存子元素列表（如果有），这可能导致在修改克隆的子元素时出现不正确的结果。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2334" target="_blank"&gt;#2334&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fnews%2Frelease-1.21.1" target="_blank"&gt;https://jsoup.org/news/release-1.21.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356839/jsoup-1-21-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356839/jsoup-1-21-1-released</guid>
      <pubDate>Sat, 10 May 2025 06:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>DBeaver 25.1.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 25.1.1 已发布，更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:1.5em"&gt; 
 &lt;li&gt;SQL Editor： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;增加了对 CTE 列扩展的支持&lt;/li&gt; 
   &lt;li&gt;增加了对 TSQL「TOP」表达式的支持&lt;/li&gt; 
   &lt;li&gt;增加了对子查询中 CTE 名称的支持&lt;/li&gt; 
   &lt;li&gt;在 DBeaver SQL 命令中禁用 SQL 自动补全功能&lt;/li&gt; 
   &lt;li&gt;修复了使用列别名时长查询中的代码补全失败的问题&lt;/li&gt; 
   &lt;li&gt;修复了执行搜索后大部分输出丢失的问题&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;AI 助手：GitHub Copilot 授权对话框得到改进&lt;/li&gt; 
 &lt;li&gt;Metadata Editor： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;添加了加载项目的进度可视化以及列表为空时的消息提示&lt;/li&gt; 
   &lt;li&gt;修复索引等对象的排序&lt;/li&gt; 
   &lt;li&gt;修复了调整堆叠多行字段大小时的布局问题&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Data Editor：修复过滤器自动完成后的光标定位&lt;/li&gt; 
 &lt;li&gt;Navigator： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;修复了「Hide」和「Show Only」过滤选项，增加了使用参数按名称过滤的支持&lt;/li&gt; 
   &lt;li&gt;修复删除打开的项目时发生的异常&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Connectivity： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;修复了添加 SSH 配置文件后 SSL 设置被删除的问题&lt;/li&gt; 
   &lt;li&gt;重新设计了 DBeaver 连接配置文件，以改进结构和可用性&lt;/li&gt; 
   &lt;li&gt;更改过期的数据库密码后，现在可以立即使用新密码测试连接&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;General： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;事务提交/回滚按钮现在有下拉菜单，可以显示此事务中的查询&lt;/li&gt; 
   &lt;li&gt;修复了表的&amp;nbsp;compact DDL 生成&lt;/li&gt; 
   &lt;li&gt;将英语设置为 Microsoft Store 发行版中的默认语言&lt;/li&gt; 
   &lt;li&gt;改进了深色主题中多个数据库 logo 的外观&lt;/li&gt; 
   &lt;li&gt;修复了输出查看器中的异常&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Databases： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;CUBRID： 
    &lt;ul style="margin-left:0; margin-right:0"&gt; 
     &lt;li&gt;增加了删除序列号和视图注释的功能&lt;/li&gt; 
     &lt;li&gt;修复了在服务器上删除属性和注释时发生的错误&lt;/li&gt; 
     &lt;li&gt;修复了在元数据编辑器中编辑空值时出现的错误&lt;/li&gt; 
     &lt;li&gt;修复了视图 DDL 截断 UNION ALL 语句的问题&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Clickhouse： 
    &lt;ul style="margin-left:0; margin-right:0"&gt; 
     &lt;li&gt;修复数据网格中嵌套数组的显示和 SQL 生成&lt;/li&gt; 
     &lt;li&gt;修复了使用驱动程序版本 8.0.x 或更高版本时导航器中文件夹显示的问题&lt;/li&gt; 
     &lt;li&gt;修复数据类型加载和数组编辑问题&lt;/li&gt; 
     &lt;li&gt;从元数据编辑器中删除了外键和引用选项卡&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;DuckDB：改进了数据编辑器中结构化数据类型键的显示&lt;/li&gt; 
   &lt;li&gt;Exasol 驱动程序已更新至 25.2.3 版本&lt;/li&gt; 
   &lt;li&gt;Firebird：删除了旧版 Firebird 表别名前的「AS」&lt;/li&gt; 
   &lt;li&gt;Neo4j 从社区版本中删除&lt;/li&gt; 
   &lt;li&gt;Oracle：在权限视图中添加了列级权限&lt;/li&gt; 
   &lt;li&gt;PostgreSQL： 
    &lt;ul style="margin-left:0; margin-right:0"&gt; 
     &lt;li&gt;修复了 INTERVAL 关键字的语法高亮&lt;/li&gt; 
     &lt;li&gt;修复了数据库名称包含斜杠导致访问架构时出现连接错误的问题&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Salesforce Data Cloud：现在默认使用 shaded driver 版本&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2025%2F06%2F22%2Fdbeaver-25-1-1%2F" target="_blank"&gt;https://dbeaver.io/2025/06/22/dbeaver-25-1-1/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356836/dbeaver-25-1-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356836/dbeaver-25-1-1-released</guid>
      <pubDate>Sat, 10 May 2025 06:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>HServer 3.7.0 已经发布，高性能 Webserver</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;HServer 3.7.0 已经发布，高性能 Webserver&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;1、添加静态资源拦截器&lt;/p&gt; 
&lt;p&gt;2、升级 Netty 为 4.2.*版本&lt;/p&gt; 
&lt;p&gt;3、添加 mcp 服务插件&lt;/p&gt; 
&lt;p&gt;4、支持 sse 输出&lt;/p&gt; 
&lt;p&gt;5、升级 sa-token 插件&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/HServer/HServer/releases/3.7.0"&gt;https://gitee.com/HServer/HServer/releases/3.7.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356835/hserver-3-7-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356835/hserver-3-7-0-released</guid>
      <pubDate>Sat, 10 May 2025 06:16:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>GoooQo v0.2.3 已经发布，OQM 技术的 Golang 实现</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;GoooQo v0.2.3 已经发布，OQM 技术的 Golang 实现&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;版本更新说明&lt;/h2&gt; 
&lt;h3&gt;新增功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持通过抽象实体路径标签查询关联实体&lt;/li&gt; 
 &lt;li&gt;支持关联表的增删改查操作&lt;/li&gt; 
 &lt;li&gt;将代码生成工具&lt;code&gt;gen&lt;/code&gt;重命名为&lt;code&gt;gooogen&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;增强 SQL 构建器的生成功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;使用指南&lt;/h3&gt; 
&lt;h4&gt;gooogen 工具&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;在查询结构体前声明&lt;code&gt;go:generate gooogen&lt;/code&gt;指令：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;//go:generate gooogen  
type UserQuery struct {  
PageQuery  
IdGt     *int  
IdIn     *[]int  
//...  
}  
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;执行&lt;code&gt;go generate&lt;/code&gt;命令，在指定文件中生成对应的查询构造方法&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;更多详情请查阅 README 或项目文档。&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/doyto/goooqo/releases/v0.2.3"&gt;https://gitee.com/doyto/goooqo/releases/v0.2.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356818/goooqo-0-2-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356818/goooqo-0-2-3-released</guid>
      <pubDate>Sat, 10 May 2025 04:57:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>《灯灯》多租户快速开发平台 5.3.1 发布，增强稳定性与功能，优化前端体验</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top%2Fupgrade%2F5.x%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7%25E6%2597%25A5%25E5%25BF%2597.html%23%25F0%259F%2593%25A6-%25E4%25BE%259D%25E8%25B5%2596%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7" target="_blank"&gt;#&lt;/a&gt;📦 依赖版本升级&lt;/h2&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; color:#2c3e50; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Roboto,Oxygen,Ubuntu,Cantarell,&amp;quot;Fira Sans&amp;quot;,&amp;quot;Droid Sans&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,STHeiti,&amp;quot;Microsoft YaHei&amp;quot;,SimSun,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:1rem 0px; orphans:2; overflow-x:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;依赖库&lt;/th&gt; 
   &lt;th&gt;升级版本&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;hutool&lt;/td&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;&amp;gt; 5.8.38&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;lombok&lt;/td&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;&amp;gt; 1.18.38&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;oshi&lt;/td&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;&amp;gt; 6.8.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;groovy&lt;/td&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;&amp;gt; 4.0.26&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;antisamy&lt;/td&gt; 
   &lt;td style="border-color:#cfd4db; border-style:solid; border-width:1px"&gt;&amp;gt; 1.7.8&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top%2Fupgrade%2F5.x%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7%25E6%2597%25A5%25E5%25BF%2597.html%23%25F0%259F%259B%25A0-%25E4%25BF%25AE%25E5%25A4%258D%25E4%25B8%258E%25E4%25BC%2598%25E5%258C%2596" target="_blank"&gt;#&lt;/a&gt;🛠 修复与优化&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top%2Fupgrade%2F5.x%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7%25E6%2597%25A5%25E5%25BF%2597.html%23%25F0%259F%2594%25A7-%25E4%25BF%25AE%25E5%25A4%258D-fix" target="_blank"&gt;#&lt;/a&gt;🔧 修复 (Fix)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-validator-starter&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;修复方法参数重复导致的多接口校验信息错乱问题&lt;/li&gt; 
   &lt;li&gt;解决无法获取字段多个校验参数的问题&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-web-max-vben&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;修复子应用切换后退出登录的重定向问题&lt;/li&gt; 
   &lt;li&gt;解决 1 级菜单配置外链时的页面显示与跳转异常&lt;/li&gt; 
   &lt;li&gt;员工管理页面看不到用户名等信息&lt;/li&gt; 
   &lt;li&gt;邀请用户加入企业时，查询后未勾选点确认报错，可以换成更清晰的提示&lt;/li&gt; 
   &lt;li&gt;个人中心页面， 在页面切换后，无法获取 getFormData 内容&lt;/li&gt; 
   &lt;li&gt;消息中心页面，富文本内容，直接显示出了代码格式&lt;/li&gt; 
   &lt;li&gt;参数维护页面，查询条件为多选时，查询会报错&lt;/li&gt; 
   &lt;li&gt;字典管理页面，点击添加按钮，报 not found&lt;/li&gt; 
   &lt;li&gt;字典管理页面，父级标识查询出来的结果为空，子级的内容还是上次显示的数据。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-data-scope-sdk&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;修复单位用户使用部门权限时的数据查询异常&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-web-pro&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;解决表单中&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;integer&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型参数校验失败问题&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top%2Fupgrade%2F5.x%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7%25E6%2597%25A5%25E5%25BF%2597.html%23%25E2%259C%25A8-%25E5%258A%259F%25E8%2583%25BD-feature" target="_blank"&gt;#&lt;/a&gt;✨ 功能 (Feature)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-system&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;资源管理新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;link&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段（支持外链/内链跳转）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-web-pro&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新增开放文档功能&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-web-max-vben&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;完成，移动资源，功能&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftangyh.top%2Fupgrade%2F5.x%25E7%2589%2588%25E6%259C%25AC%25E5%258D%2587%25E7%25BA%25A7%25E6%2597%25A5%25E5%25BF%2597.html%23%25E2%2599%25BB%25EF%25B8%258F-%25E9%2587%258D%25E6%259E%2584-refactor" target="_blank"&gt;#&lt;/a&gt;♻️ 重构 (Refactor)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;sop-service-support&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;OpenContext&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;添加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;charset&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;全局优化&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;按&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;maven-checkstyle-plugin&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;规范统一代码注释&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;lamp-web-pro&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;用户编辑页支持修改用户名等字段&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;体验网址&lt;/h1&gt; 
&lt;table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:500px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;vben2 版&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;vben5 版&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;soybean 版&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;数据源模式&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasource.tangyh.top" target="_blank"&gt;点我体验&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmax-datasource.tangyh.top" target="_blank"&gt;点我体验&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsoy-datasource.tangyh.top" target="_blank"&gt;点我体验&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;字段模式&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fcolumn.tangyh.top" target="_blank"&gt;点我体验&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmax-column.tangyh.top" target="_blank"&gt;点我体验&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fsoy-column.tangyh.top" target="_blank"&gt;点我体验&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;关于 lamp&lt;/span&gt;&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;code&gt;灯灯&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(简称灯，&amp;nbsp;英文名：lamp)，她是一个项目集，为满足高内聚低耦合设计原则，将一个&lt;strong&gt;大项目&lt;/strong&gt;拆解为以下几个子项目：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;lamp-util：后端工具集&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;lamp-cloud&lt;/strong&gt;：基于 Spring Cloud 实现的后台&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;lamp-boot：基于 Spring Boot 实现的后台&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;lamp-job：基于 xxl-job 集成本项目的分布式定时任务&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;lamp-generator：代码生成器&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;lamp-web：前端&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;&lt;span&gt;lamp-cloud&amp;nbsp;简介&lt;/span&gt;&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;code&gt;lamp-cloud&lt;/code&gt;&lt;span&gt;是基于&lt;/span&gt;&lt;code&gt;SpringCloudAlibaba、&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringCloud、&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringBoot&lt;/code&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;开发的微服务中后台快速开发平台，支持&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;jdk17、&lt;/span&gt;&lt;code&gt;&lt;span&gt;jdk11 和 jdk8，&lt;/span&gt;&lt;/code&gt;&lt;span&gt;专注于多租户 (SaaS 架构) 解决方案，亦可作为普通项目（非 SaaS 架构）的基础开发框架使用，目前已实现&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;数据库隔离&lt;/strong&gt;&lt;span&gt;、&lt;/span&gt;&lt;strong&gt;字段隔离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;等租户隔离方案以及非租户隔离的解决方案。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;她拥有自研 RBAC（基于租户应用的角色权限控制体系）、网关统一鉴权、数据权限、优雅缓存解决方案、防缓存击穿、前后端统一表单校验、字典数据自动回显、可视化前后端代码生成器、支持多种文件存储、支持多种短信邮件发送接口、灰度发布、防 XSS 攻击、防 SQL 注入、分布式事务、分布式定时任务等功能；支持多业务系统并行开发，&amp;nbsp;支持多服务并行开发，是中后台系统开发脚手架的最佳选择。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;lamp-cloud 代码简洁，注释齐全，架构清晰，非常适合个人学习以及中小企业作为基础框架使用。采用 Spring Cloud Alibaba、SpringBoot、Mybatis、Seata、Sentinel、RabbitMQ、FastDFS/MinIO、SkyWalking 等主要框架和中间件。本项目旨在实现基础框架能力，不涉及具体业务。&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;关注项目&lt;/span&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;官网：https://tangyh.top&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;源码：https://github.com/dromara/lamp-cloud&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;源码：https://gitee.com/dromara/lamp-cloud&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356817/lamp-cloud-5-3-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356817/lamp-cloud-5-3-1-released</guid>
      <pubDate>Sat, 10 May 2025 04:50:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Solon AI &amp; MCP v3.3.3 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;Solon AI&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon AI ，是 Solon 官方推出的 Java AI 应用开发框架。旨在为 Java 开发者提供统一的接口抽象层，简化与 OpenAI、DeepSeek、QWen 等主流 AI 模型的集成流程，以及简化 Mcp 的开发体验。特点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;一套接口支持不同提供者、不同大模型调用（通过方言适配）&lt;/li&gt; 
 &lt;li&gt;支持 Prompt 和 PromptTemplate&lt;/li&gt; 
 &lt;li&gt;支持会话记忆（ChatSession）&lt;/li&gt; 
 &lt;li&gt;支持 Function Call&lt;/li&gt; 
 &lt;li&gt;支持 RAG（Document loader, Document splitter, Document repository）&lt;/li&gt; 
 &lt;li&gt;支持 MCP（McpServer、McpClient、McpProxy）&lt;/li&gt; 
 &lt;li&gt;支持 AI-Flow（与&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Flearn-solon-flow" target="_blank"&gt;Solon Flow&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配合）&lt;/li&gt; 
 &lt;li&gt;支持同步接口（call）与流式接口（stream）&lt;/li&gt; 
 &lt;li&gt;支持聊天生成模型（ChatModel） 、图片生成模型（ImageModel） 、多态模型等&lt;/li&gt; 
 &lt;li&gt;支持嵌入模型（EmbeddingModel） 、排序模型（RankingModel）&lt;/li&gt; 
 &lt;li&gt;支持 Java 8 到 Java 24&lt;/li&gt; 
 &lt;li&gt;支持 Spring、jFinal、Vert.x 等 Solon 以外的框架&lt;/li&gt; 
 &lt;li&gt;等......更多内容，参考官网介绍&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;最近更新了什么？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 solon-ai-flow 插件&lt;/li&gt; 
 &lt;li&gt;新增 solon-ai-load-ddl 插件&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core ToolSchemaUtil 对 Map 的处理（有些框架，太细不支持）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core ToolSchemaUtil 对 Collection 的处理（有些框架，太细不支持）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp MethodPromptProvider,MethodResourceProvider 改用 clz 构建 (兼容外部代理情况)&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core MethodToolProvider 改用 clz 构建 (兼容外部代理情况)&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core ChatConfig.toString （增加 proxy）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core Tool:outputSchema 改为必出&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core 添加 ToolCallException 异常类型，用于 tool call 异常传递（之前为 ChatException）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core tool 空参数时的不同大模型兼容性&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core ChatSession 的作用，为限数提供支持&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core MethodFunctionTool 移除对 Mapping 注解的支持（语意更清楚，之前 MethodToolProvider 已经移除，这个落了）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core EmbeddingRequest，ImageRequest，RerankingRequest 当 resp.getError() 非 null 时，直接出抛异常&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai OpenaiChatDialect 方言，tool 消息也附带所有的 tools 元信息（之前被过滤了）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp McpServerContext 同步连接时的请求参数，方便在 Tool 方法里获取&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp McpProviders 在 sse 时，支持 env 也作为 header 处理（有些服务方的配置，是用 env 的）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp 取消 RefererFunctionTool（由 FunctionToolDesc 替代）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp 基于 McpServerParameters 的构建能力&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core RepositoryStorable:insert(Doc...) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatInterceptor 聊天拦截机制&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatMessage:ofUserAugment 替代 augment（后者标为弃用）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ProxyDesc 的 Serializable 接口实现&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatOptions:response_format 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core AssistantMessage:getSearchResultsRaw 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatMessage:ofUser(media) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatSession:addMessage(ChatPrompt) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatSession:addMessage(Collection) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core RerankingConfig,RerankingModel toString 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core 模型的网络代理支持（支持简单配置，和复杂构建）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpoint:enableOutputSchema 支持（默认为 false）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:getMessageEndpoint 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerParameters http 参数支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientProvider 本地缓存支持（默认 30 秒）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp 原语处理异常日志&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp 客户端的网络代理简单配置支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp messageEndpoint 端点配置支持（应对特殊需求，一般自动更好）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp ToolMapping,ResourceMapping 注解方法对 Produces 注解的支持（用它可指定结果转换处理）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp ToolCallResultConverter:matched 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp 资源模板的响应适配&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientProvider:getResourceTemplates 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp 检查原语是否存在的方法（hasTool, hasPrompt, hasResource）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp 提示语支持 UserMessage 拆解成多条 mcp 内容（如果，同时有媒体和文本的话）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-core ToolCallResultConverter 接口定义（增加返回类型参数）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-core 移除 QueryCondition:doFilter 方法（避免误解）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-mcp tool,resource 结果默认处理改为 ToolCallResultJsonConverter&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-repo-elasticsearch 搜索类型，默认改为相似搜索（之前为精准，需要脚本权限）&lt;/li&gt; 
 &lt;li&gt;mcp 优化 WebRxSseClientTransport 连接等待处理（异常时立即结束）&lt;/li&gt; 
 &lt;li&gt;elasticsearch-rest-high-level-client 升为 7.17.28&lt;/li&gt; 
 &lt;li&gt;milvus-sdk-java 升为 2.5.10&lt;/li&gt; 
 &lt;li&gt;vectordatabase-sdk-java 升为 2.4.5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目仓库地址？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;gitee：&lt;a href="https://gitee.com/opensolon/solon-ai"&gt;https://gitee.com/opensolon/solon-ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitcode:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fopensolon%2Fsolon-ai" target="_blank"&gt;https://gitcode.com/opensolon/solon-ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopensolon%2Fsolon-ai" target="_blank"&gt;https://github.com/opensolon/solon-ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;官网？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Flearn-solon-ai" target="_blank"&gt;https://solon.noear.org/article/learn-solon-ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356815/solon-ai-3-3-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356815/solon-ai-3-3-3-released</guid>
      <pubDate>Sat, 10 May 2025 04:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
  </channel>
</rss>
