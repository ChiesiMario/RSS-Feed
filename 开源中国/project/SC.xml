<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Thu, 25 Jul 2024 11:44:53 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>TigerVNC 1.14.0 发布，VNC 客户端和服务器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TigerVNC 1.14.0 现已发布。TigerVNC 是一个高级的 VNC 远程访问的实现，允许你查看运行在网络上另一台计算机上的虚拟桌面环境并与之交互；它是基于 RealVNC 4 和 X.org 代码库的高速 VNC 版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;重点更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Xvnc 现在在支持 GBM 的驱动程序上（&lt;span style=&quot;color:#1f2328&quot;&gt;FOSS 驱动程序和较新的 Nvidia 驱动程序&lt;/span&gt;）支持硬件加速 OpenGL 和 Vulkan&lt;/li&gt; 
 &lt;li&gt;viewers 和 servers 现在遵循 XDG 基本目录规范，如「~/.config」，用于将文件存储在主目录中。现有用户将继续使用旧版「~/.vnc」目录，但新用户将获得 XDG 目录。&lt;/li&gt; 
 &lt;li&gt;native viewer 现在支持 Apple 的 Diffie-Hellman 和 UltraVNC 的 MSLogonII 身份验证方法&lt;/li&gt; 
 &lt;li&gt;Java viewer 现在支持 RealVNC 的 RSA-AES 身份验证方法&lt;/li&gt; 
 &lt;li&gt;新增 Ubuntu 24.04 软件包&lt;/li&gt; 
 &lt;li&gt;Red Hat Enterprise Linux 7 和 Ubuntu 18.04 软件包已被删除，因为它们已停止使用&lt;/li&gt; 
 &lt;li&gt;native viewer 的 UI 外观进行了轻微的更新&lt;/li&gt; 
 &lt;li&gt;现在可以强制将反向连接设为&amp;nbsp;view-only&lt;/li&gt; 
 &lt;li&gt;可以为「PlainUsers」指定特殊的「％u」标记，以动态指示运行服务器的用户&lt;/li&gt; 
 &lt;li&gt;vncserver 无需 fork 即可运行，以便与更多系统服务管理器更好地兼容&lt;/li&gt; 
 &lt;li&gt;x0vncserver 现在支持 systemd socket 激活&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#24292f&quot;&gt;二进制文件可从 SourceForge 获得：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fprojects%2Ftigervnc%2Ffiles%2Fstable%2F1.14.0&quot; target=&quot;_blank&quot;&gt;https://sourceforge.net/projects/tigervnc/files/stable/1.14.0&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTigerVNC%2Ftigervnc%2Freleases%2Ftag%2Fv1.14.0&quot; target=&quot;_blank&quot;&gt;查看更新说明&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303812/tigernvc-1-14-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303812/tigernvc-1-14-0-released</guid>
            <pubDate>Thu, 25 Jul 2024 05:57:01 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>轻量 ioc/aop 框架 loveqq 1.0.3 发布，响应式缓存，更强大的条件注解推断</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h4&gt;&lt;strong&gt;本次更新：&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化： loveqq-mvc，控制器全局异常切面实现从代理改为异常处理器，减少代理调用&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-cache，新增响应式缓存支持，默认提供&amp;nbsp;ConcurrentHashMap 实现&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-cache-redis，整合 redisson 响应式缓存支持&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-boot-starter-netty，优化过滤器、拦截器均为响应式接口&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;响应式缓存示例：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;下面的示例展示了缓存注解用法，并且实现了响应式/命令式一致的操作体验&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@RestController
public class UserController {
    @Autowired
    private UserMapper userMapper;

    @GetMapping
    @Cacheable(value = &quot;anyUser&quot;, ttl = 3)
    public Mono&amp;lt;User&amp;gt; anyUser() {
        return Mono.fromSupplier(() -&amp;gt; this.userMapper.listAll().get(0));
    }

    @GetMapping
    @Cacheable(&quot;listAllUser&quot;)
    public Flux&amp;lt;User&amp;gt; listAllUser() {
        return Flux.fromStream(() -&amp;gt; this.userMapper.listAll().stream());
    }

    @GetMapping
    @CacheClear(value = &quot;listAllUser&quot;, condition = &quot;retVal&quot;, preClearTimeout = 2000)
    public Mono&amp;lt;Boolean&amp;gt; deleteAsync(Long id) {
        return Mono.just(true);
    }

    @GetMapping
    @Transactional
    @Cacheable(&quot;listAllUserWithTransactional&quot;)
    public List&amp;lt;User&amp;gt; listAllUserWithTransactional() {
        return this.userMapper.listAll();
    }

    @GetMapping(&quot;delete&quot;)
    @CacheClear(value = &quot;listAllUserWithTransactional&quot;, condition = &quot;retVal&quot;)
    public boolean update(Long id) {
        return true;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;和 spring 的联系&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;初期是以学习 spring 进行开发的，但是却并没有参考 spring 的实现，仅仅是把 spring 当做一个&lt;strong&gt;黑盒接口&lt;/strong&gt;，根据 spring 的&lt;strong&gt;外在功能表现&lt;/strong&gt;，使用自己的想法去实现功能，所以该框架，即不是模仿 spring，也不是 spring 的二开。而是一个全新的，但又高度符合 spring 开发者使用习惯的完整的 ioc/aop 框架&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;和 spring 的区别&lt;/h4&gt; 
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 和 spring 最大的区别就是，loveqq 具有更强大的条件注解推断，因此&lt;span style=&quot;color:#e74c3c&quot;&gt;&lt;strong&gt;不需要 @&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;AutoConfigureBefore、@AutoConfigureAfter&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt; 等辅助自动配置的注解，仅仅需要正常配置 bean 即可，无需关心 bean 加载顺序的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;下面就是一个很好的例子：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@BootApplication
public class ConditionTest {
    private boolean isOverride;

    @Autowired(required = false)
    private List&amp;lt;Inter&amp;gt; cons;

    @Bean
    public BB bbOverride() {
        this.isOverride = true;
        return new BB();
    }

    @EventListener
    public void onComplete(ContextRefreshedEvent event) {
        Assert.isTrue(this.isOverride);
        Assert.isTrue(this.cons.size() == 5);
    }

    public static void main(String[] args) {
        SpringApplication.run(ConditionTest.class, args);
    }
}

interface Inter {}

@Component
@ConditionalOnBean({CC.class, BB.class})
@ConditionalOnClass(name = &quot;com.kfyty.condition.ConditionTest&quot;)
class AA implements Inter {}

@Component
@ConditionalOnMissingBean(BB.class)
class BB implements Inter {}

@Component
@ConditionalOnBean(BB.class)
class CC implements Inter {

    @Bean
    @ConditionalOnBean(AA.class)
    public EE ee() {
        return new EE();
    }
}

class DD implements Inter {}

@Component
@ConditionalOnMissingBean(DD.class)
class DDF implements FactoryBean&amp;lt;DD&amp;gt; {

    @Override
    public Class&amp;lt;?&amp;gt; getObjectType() {
        return DD.class;
    }

    @Override
    public DD getObject() {
        return new DD();
    }
}

class EE implements Inter {}&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;上述代码，首先 BB 是无条件直接定义的，所以 BB 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 CC 仅依赖 BB 存在，所以 CC 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 AA 仅依赖 BB、CC 的存在，以及主类的存在，因此 AA 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 EE 仅依赖 AA，因此 EE 一定存在；&lt;/li&gt; 
 &lt;li&gt;而我们没有直接定义 DD，因此 DDF 一定存在，而 DDF 属于 FactoryBean，它生产了 DD，所以 DD 一定存在；&lt;/li&gt; 
 &lt;li&gt;所以 AA、BB、CC、DD、EE 的条件都成立，cons.size () 应该是 5。&lt;/li&gt; 
 &lt;li&gt;而上述代码在 spring 下无法通过测试，但是在 loveqq-framework 中是可以测试通过的。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;感兴趣的可以体验体验~&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303809/loveqq-framework-1-0-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303809/loveqq-framework-1-0-3-released</guid>
            <pubDate>Thu, 25 Jul 2024 05:19:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>wlnmp 一键安装包更新 240725</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;wlnmp 一键安装包 240725 更新内容如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;（新增）OpenCloudos9.x（x86_64、AArch64）新增 MySQL8.4、faad2，目前仅针对 OpenCloudos9.x（x86_64、AArch64）发布了 MySQL8.4 版本，后续其它系统，陆续开发适配中。&lt;/li&gt; 
 &lt;li&gt;（其它）MySQL8.4 主要更新内容：删除 binlog_format，因为已被弃用；innodb_log_file_size = 32M 已被弃用，修改为 innodb_redo_log_capacity = 32M&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;关于 wlnmp&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;从 2019 年初开始维护 wlnmp 一键安装包这个项目，起初只是为了在日常运维过程中，可以快速的部署 lnmp 服务。wlnmp 已支持国产龙蜥 AnolisOS、OpenCloudOS、欧拉 OpenEuler 系统等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;wlnmp 一键安装包基于上游开源软件二次开发，可以在 x86_64、aarch64 架构的 Linux 系统上通过 wlnmp 提供的镜像源，快速部署 Nginx/Mysql/PHP 等常用软件，支持 php、MySQL 多个版本在同一系统中并存。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#72c490&quot;&gt;&lt;strong&gt;系统支持：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;Alibaba CloudLinux 2.1903/3&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;AlmaLinux 8.x/9.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;AnolisOS 7.x/8.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;CentOS 7.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;CentOS 8.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;OpenCloudOS 8.x/9.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦ OpenEuler 20.03&lt;/span&gt;(SP1~SP4)&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;OpenEuler 22.03&lt;/span&gt;(SP1~SP3)&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;OpenEuler 24.03&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;RockyLinux 8.x/9.x&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;传统方式添加 wlnmp 镜像源，实现 yum 一键安装部署！&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;安装便捷，稳定更新，模块集成&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;免费使用，为爱发电&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;安装使用见：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Finstall&quot; target=&quot;_blank&quot;&gt;install&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更新日志可查看：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Fchangelog&quot; target=&quot;_blank&quot;&gt;ChangeLo&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Fchangelog&quot; target=&quot;_blank&quot;&gt;g&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303805</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303805</guid>
            <pubDate>Thu, 25 Jul 2024 04:20:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>​Rust 通用代码生成器：莲花，代码生成物登录系统讲读</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;Rust 通用代码生成器：莲花，代码生成物登录系统讲读&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Rust 通用代码生成器：莲花可以生成带登录系统，现在，已经发布了视频，解释了其代码生成物的登录系统。视频请见：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1kZ421T7oT%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1kZ421T7oT/&lt;/a&gt;&lt;br&gt; 莲花代码生成物中的登录系统主要包含了 LoginController，LoginService，LoginMiddleware。采用了 sha1 算法散列，jwt 登录框架。实现细节请见视频。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;Rust 通用代码生成器莲花，红莲尝鲜版二十六，此版本完善了数据库自动反射功能。完善了多对多候选功能，完善了下拉列表的空值。&lt;br&gt; Rust 通用代码生成器：莲花将强大的生产力赋能广大程序员。无论是新开发的软件还是通过遗留数据库反射以再次开发的遗留项目，您都可以使用动词算子式通用代码生成器的强大生产力大大加速研发速度。莲花永远是广大程序员的瑞士军刀，是加快开发速度和提高开发质量的利器。&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;代码生成器的项目地址：&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus&quot;&gt;https://gitee.com/jerryshensjf/Lotus&lt;/a&gt;&lt;br&gt; 二进制 war 包的下载地址:&amp;nbsp;&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus/attach_files&quot;&gt;https://gitee.com/jerryshensjf/Lotus/attach_files&lt;/a&gt; &lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;Rust 通用代码生成器：莲花&lt;/h1&gt; 
&lt;h3&gt;项目介绍&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器：莲花，是 Java 写成的 Rust 通用代码生成器，目前的版本采用 openjdk 17 编译。软件为一 war 包，可以部署在 Tomcat 9 的 webapps 目录下，启动即可运行。&lt;/p&gt; 
&lt;h4&gt;项目图片&lt;/h4&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/RedLotus.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/pl_3.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;软件架构&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;后端代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;前端代码生成物可运行在 Nodejs 21,18 或 14 上。是 Vue ElementUI 架构。&lt;/p&gt; 
&lt;h3&gt;近期版本&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十五，此版本完善了 PostgreSQL 数据库自动反射功能。完善了编辑器，所有 Domain 可以通过下拉菜单选择。完善了多对多候选叠加时的语法检查。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十四，此版本完善了多对多候选功能，实现了多对多候选的持久化和反射功能。增强了数据库自动反射功能和模板向导的元数据与数据编辑器。改进了编译警告和编译错。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十三，此版本新增了多对多候选功能，增强了数据库自动反射功能和模板向导的编辑器。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十二，此版本新增了数据库自动反射功能，可以为遗留数据库配上操作软件。此版本增强了模板向导界面的编辑器功能，可以不清空数据的情况下编辑项目的元数据和数据。可以切换域对象和枚举，可以清洗登录数据。此版本彻底修复了枚举和哑数据功能。并有前端界面更新。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通用代码生成器阵列是通过 Excel 模板来表征系统的。和市面上大多数使用数据库来表征系统的不一样。此功能可以将数据库反射成通用代码生成器的一个项目。并进一步反射成 Excel 模板和前端后端的代码生成物。此功能拥有强大的编辑器功能，可以对反射而来的元数据和数据深入编辑，生成相应的结果。同时，对编辑器的深度改进，使用户可以方便的将域对象切换为枚举，或将枚举切换为域对象，也可以清洗登录数据，使密码自动设为用户名。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;有了数据库自动反射功能，Rust 通用代码生成器莲花成了可以在数分钟内为遗留数据库配上完整的 Rust 后端软件和 Vue 前端软件的能力。非常实用，非常强大。欢迎大家试用。&lt;/p&gt; 
&lt;h3&gt;重点组件和功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;动词算子&lt;/li&gt; 
 &lt;li&gt;域对象&lt;/li&gt; 
 &lt;li&gt;棱柱&lt;/li&gt; 
 &lt;li&gt;项目&lt;/li&gt; 
 &lt;li&gt;时空之门前端代码生成器引擎&lt;/li&gt; 
 &lt;li&gt;弹性登录模块&lt;/li&gt; 
 &lt;li&gt;Grid 页生成模块&lt;/li&gt; 
 &lt;li&gt;多对多生成模块&lt;/li&gt; 
 &lt;li&gt;数据库脚本生成模块&lt;/li&gt; 
 &lt;li&gt;动态椰子树功能群&lt;/li&gt; 
 &lt;li&gt;动词否定功能群&lt;/li&gt; 
 &lt;li&gt;字段否定功能群&lt;/li&gt; 
 &lt;li&gt;高级定制功能群&lt;/li&gt; 
 &lt;li&gt;部分生成功能群&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本功能群&lt;/li&gt; 
 &lt;li&gt;上传生成界面&lt;/li&gt; 
 &lt;li&gt;模板向导生成界面&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本生成界面&lt;/li&gt; 
 &lt;li&gt;Excel 数据导出功能&lt;/li&gt; 
 &lt;li&gt;PDF 数据导出功能&lt;/li&gt; 
 &lt;li&gt;数据库后端模式&lt;/li&gt; 
 &lt;li&gt;数据库工具模式&lt;/li&gt; 
 &lt;li&gt;哑数据模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安装教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;先装好 open jdk 17 和 Apache Tomcat 9，如果您从源码编译代码生成器还需要事先装好 Apache Maven&lt;/li&gt; 
 &lt;li&gt;下载编译好的 Rust 通用代码生成器莲花的 war 包，或者下载源码，解压后使用 mvn install 命令编译，得到代码生成器的 war 包&lt;/li&gt; 
 &lt;li&gt;把代码生成器的 war 包的名字改短，成为 Lotus.war，并放置在 Apache Tomcat 9 的 webapps 目录下&lt;/li&gt; 
 &lt;li&gt;启动 Apache Tomcat 9&lt;/li&gt; 
 &lt;li&gt;访问&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8080%2FLotus%2F&quot;&gt;http://localhost:8080/Lotus/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;即可使用代码生成器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;后端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将后端项目下载并解压&lt;/li&gt; 
 &lt;li&gt;根据您的数据库选项，配置好您后端的数据库，并使用后端代码生成物的 sql 文件夹下的数据库脚本完成建库建表并加载初始化数据&lt;/li&gt; 
 &lt;li&gt;您需要检查后端代码生成物内的配置文件，确认数据库和用户名密码的正确性&lt;/li&gt; 
 &lt;li&gt;您需要安装配置好 rust 1.69 或其他兼容版本的 rust 环境&lt;/li&gt; 
 &lt;li&gt;在后端代码生成物的根目录下运行 cargo run 命令启动 rust 后端项目&lt;/li&gt; 
 &lt;li&gt;启动完毕后访问后端代码生成物，&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8082&quot;&gt;http://localhost:8082&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将前端代码生成物解压&lt;/li&gt; 
 &lt;li&gt;确认您已经安装好和您选择的 Nodejs 版本相容的前端 Nodejs 环境&lt;/li&gt; 
 &lt;li&gt;使用 npm install -registry=&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org&quot;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;安装 Nodejs 依赖包&lt;/li&gt; 
 &lt;li&gt;如果您使用的是 Nodejs 21 和 Nodejs18，请运行命令：export NODE_OPTIONS=--openssl-legacy-provider&lt;/li&gt; 
 &lt;li&gt;运行命令：node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js&lt;/li&gt; 
 &lt;li&gt;如此访问前端代码生成物，&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8000%2F&quot;&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303804</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303804</guid>
            <pubDate>Thu, 25 Jul 2024 04:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Java 微服务框架 HP-SOA v1.1.2 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/HP-SOA.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;HP-SOA —— 功能完备，简单易用，高度可扩展的 Java 微服务框架。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目主页&amp;nbsp;:&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/p/hp-soa&quot; target=&quot;_blank&quot;&gt;https://www.oschina.net/p/hp-soa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;下载地址&amp;nbsp;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fldcsaa%2FHP-Socket&quot; target=&quot;_blank&quot;&gt;https://github.com/ldcsaa/&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fttps%3A%2F%2Fgithub.com%2Fldcsaa%2Fhp-soa&quot; target=&quot;_blank&quot;&gt;hp-soa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;开发文档&amp;nbsp;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/README.md&quot; target=&quot;_blank&quot;&gt;https://gitee.com/ldcsaa/hp-soa/blob/master/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;QQ Group:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjq.qq.com%2F%3F_wv%3D1027%26k%3D3UAbrhTG&quot; target=&quot;_blank&quot;&gt;44636872&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjq.qq.com%2F%3F_wv%3D1027%26k%3DuYBpc6bG&quot; target=&quot;_blank&quot;&gt;663903943&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;1.1.2 版本更新内容：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化应用程序打包发布方案。&lt;/li&gt; 
 &lt;li&gt;增加 Docker 环境下应用程序镜像构建和容器运行通用方案。&lt;/li&gt; 
 &lt;li&gt;补充【&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/deploy.md&quot; target=&quot;_blank&quot;&gt;应用程序打包发布&lt;/a&gt;】方案与实施文档。&lt;/li&gt; 
 &lt;li&gt;支持运行期设置应用程序只读（&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;配置参考：&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/nacos.md&quot; target=&quot;_blank&quot;&gt;Nacos 配置中心&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;支持运行期动态修改日志级别（&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;配置参考：&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/nacos.md&quot; target=&quot;_blank&quot;&gt;Nacos 配置中心&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;组件更新： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Spring-Boot -&amp;gt; 3.2.7&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Spring-Cloud -&amp;gt; 2023.0.3&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Dubbo -&amp;gt; 3.2.14&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;【&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/app_integration.md&quot;&gt;快速开始&lt;/a&gt;】&lt;/p&gt; 
&lt;h3&gt;技术架构&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://gitee.com/ldcsaa/my-hp-soa/raw/dev/misc/doc/images/Technical-Architecture.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/Technical-Architecture.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;技术集成&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web 服务框架：spring-boot 3.x&lt;/li&gt; 
 &lt;li&gt;微服务框架：spring-cloud 4.x&lt;/li&gt; 
 &lt;li&gt;微服务框架：Dubbo 3.x&lt;/li&gt; 
 &lt;li&gt;服务注册中心：Nacos&lt;/li&gt; 
 &lt;li&gt;配置中心：Nacos&lt;/li&gt; 
 &lt;li&gt;服务治理中心：Dubbo Admin&lt;/li&gt; 
 &lt;li&gt;流量控制中心：Sentinel Dashboard + Nacos&lt;/li&gt; 
 &lt;li&gt;数据库：MySQL、Druid、mybatis-plus（支持多数据源）&lt;/li&gt; 
 &lt;li&gt;缓存：Redis + Redisson（支持多实例）&lt;/li&gt; 
 &lt;li&gt;NoSQL 数据库：MongoDB&lt;/li&gt; 
 &lt;li&gt;搜索引擎：Elasticsearch&lt;/li&gt; 
 &lt;li&gt;消息总线：RabbitMQ（支持多实例，支持可靠消息）&lt;/li&gt; 
 &lt;li&gt;消息队列：Kafka（支持可靠消息）&lt;/li&gt; 
 &lt;li&gt;MQTT 发布订阅：Eclipse PAHO mqttv5&lt;/li&gt; 
 &lt;li&gt;分布式 Job：xxl-job&lt;/li&gt; 
 &lt;li&gt;轻量级 Job：Redisson + Spring Scheduled&lt;/li&gt; 
 &lt;li&gt;分布式事务：Seata&lt;/li&gt; 
 &lt;li&gt;全局 ID：Leaf（支持 Snowflake ID 和 Segment ID）&lt;/li&gt; 
 &lt;li&gt;统一日志：Log4j + Kafka + ELK&lt;/li&gt; 
 &lt;li&gt;调用链跟踪：Skywalking&lt;/li&gt; 
 &lt;li&gt;监控告警：Prometheus + Grafana + Alert Manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;模块说明&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-dependencies&quot;&gt;hp-soa-dependencies&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖管理模块，定义依赖包及其版本&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-core&quot;&gt;hp-soa-framework-core&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;基础模块，定义 HP-SOA 基础组件和工具&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-web&quot;&gt;hp-soa-framework-web&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Web 应用模块，集成 spring-boot 和 Dubbo，提供核心微服务功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-leaf&quot;&gt;hp-soa-framework-leaf&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Leaf 全局 ID 模块，基于 Leaf，提供分布式全局 ID 功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-framework/hp-soa-framework-gelf&quot;&gt;hp-soa-framework-gelf&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;GELF 日志模块，提供 TCP、UDP、HTTP、Redis、Kafka 等远程日志传输功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-util&quot;&gt;hp-soa-framework-util&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;扩展工具包模块，提供文件处理、邮件、远程访问等组件和工具&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-web&quot;&gt;hp-soa-starter-web&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Web 应用启动器，配置并启动应用服务，所有 HP-SOA 项目都必须引入该启动器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-web-cloud&quot;&gt;hp-soa-starter-web-cloud&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Spring Cloud 启动器，开启 Spring Cloud 微服务功能，所有 Spring Cloud 微服务项目都必须引入该启动器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-web-dubbo&quot;&gt;hp-soa-starter-web-dubbo&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Dubbo 启动器，开启 Dubbo 微服务功能，所有 Dubbo 微服务项目都必须引入该启动器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-task&quot;&gt;hp-soa-starter-task&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Task 启动器，开启 Spring Task 功能，并为 Spring Task 提供日志关联和调用链跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-nacos&quot;&gt;hp-soa-starter-nacos&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Nacos 配置中心启动器，开启配置中心功能，应用程序可以从远程配置中心加载配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-data-mysql&quot;&gt;hp-soa-starter-data-mysql&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MySQL 启动器，开启 MySQL 数据库访问功能，并提供动态数据源、数据源监控和全局事务管理等能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-data-redis&quot;&gt;hp-soa-starter-data-redis&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Redis 启动器，开启 Redis 访问功能，支持多 Redis 实例，支持 Spring Cache&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-data-mongodb&quot;&gt;hp-soa-starter-data-mongodb&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MongoDB 启动器，开启 MongoDB 访问功能，支持通过 Spring Data 接口方式访问 MongoDB&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-data-elasticsearch&quot;&gt;hp-soa-starter-data-elasticsearch&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Elasticsearch 启动器，开启 Elasticsearch 访问功能，支持通过 Spring Data 接口方式访问 Elasticsearch&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-rabbitmq&quot;&gt;hp-soa-starter-rabbitmq&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Rabbitmq 启动器，开启 Rabbitmq 访问功能，支持多 Rabbitmq 实例，提供可靠消息实施方案以及消息跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-kafka&quot;&gt;hp-soa-starter-kafka&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Kafka 启动器，开启 Kafka 访问功能，提供可靠消息实施方案以及消息跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-mqtt&quot;&gt;hp-soa-starter-mqtt&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MQTT 启动器，开启 MQTT 发布订阅功能，全面支持 mqttv5 协议&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-job-exclusive&quot;&gt;hp-soa-starter-job-exclusive&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;轻量级 Job 启动器，开启轻量级排他 Job 功能，提供 Job 执行日志关联和调用链跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-job-xxljob&quot;&gt;hp-soa-starter-job-xxljob&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Xxl-Job 启动器，开启 Xxl-Job 功能，结合 xxl-job-admin 提供分布式 Job 能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-leaf&quot;&gt;hp-soa-starter-leaf&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Leaf 全局 ID 启动器，开启 Leaf 全局 ID 功能，支持通过 Snowflake 算法和 Segment 算法生成全局 ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-seata&quot;&gt;hp-soa-starter-seata&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Seata 启动器，开启 Seata 分布式事务功能，结合 Seata TC 提供分布式事务能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-sentinel&quot;&gt;hp-soa-starter-sentinel&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Sentinel 启动器，开启 Sentinel 流量控制功能，结合 Sentinel Dashboard 和 Nacos 提供流量控制和流控规则持久化能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-skywalking&quot;&gt;hp-soa-starter-skywalking&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Skywalking 启动器，开启 Skywalking 调用链跟踪功能，结合 Skywalking Agent 和 Skywalking Server 提供调用链跟踪能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;应用接入（参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-demo&quot;&gt;hp-demo&lt;/a&gt;）&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;pom.xml 中添加 HP-SOA 依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;em&gt;&amp;lt;!-- 添加 hp-soa 依赖管理 --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.hpsocket&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hp-soa-dependencies&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${hp-soa.version}&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- 普通项目引用 hp-soa-starter-web --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.hpsocket&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hp-soa-starter-web&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- Spring Cloud 项目引用 hp-soa-starter-web-cloud --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!--&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;groupId&amp;gt;io.github.hpsocket&amp;lt;/groupId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;artifactId&amp;gt;hp-soa-starter-web-cloud&amp;lt;/artifactId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;/dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- Dubbo 项目引用 hp-soa-starter-web-dubbo --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!--&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;groupId&amp;gt;io.github.hpsocket&amp;lt;/groupId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;artifactId&amp;gt;hp-soa-starter-web-dubbo&amp;lt;/artifactId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;/dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- 根据项目需要，引用其它 hp-soa starter --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.hpsocket&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hp-soa-starter-xxx&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;修改应用配置&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;（参考 Demo&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-demo/hp-demo-bff-basic&quot;&gt;hp-demo-bff-basic&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-demo/hp-demo-bff-basic/src/main/resources/bootstrap.yml&quot;&gt;本地配置文件&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，配置中心的&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/misc/nacos/config/namespace-DEV/GLOBAL_GROUP&quot;&gt;远程配置文件&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;），主要配置项：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;hp.soa.web&lt;/li&gt; 
   &lt;li&gt;spring.cloud (Spring Cloud 项目)&lt;/li&gt; 
   &lt;li&gt;dubbo (Dubbo 项目)&lt;/li&gt; 
   &lt;li&gt;server&lt;/li&gt; 
   &lt;li&gt;spring&lt;/li&gt; 
   &lt;li&gt;management&lt;/li&gt; 
   &lt;li&gt;springdoc&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;修改全局配置（可选） 
  &lt;ul&gt; 
   &lt;li&gt;系统配置文件，用于设置系统属性，默认配置文件：&lt;code&gt;/opt/hp-soa/config/system-config.properties&lt;/code&gt;参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/opt/hp-soa/config/system-config.properties&quot;&gt;system-config.properties&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;扩展配置文件，用于配置注册中心地址、配置中心地址等公共属性，默认配置文件：&lt;code&gt;/opt/hp-soa/config/extended-config.properties&lt;/code&gt;参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/opt/hp-soa/config/extended-config.properties&quot;&gt;extended-config.properties&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;实现 HTTP 鉴权接口（可选） 
  &lt;ul&gt; 
   &lt;li&gt;如果是 Gateway/BFF 应用，并且应用属性&lt;code&gt;hp.soa.web.access-verification.enabled = true&lt;/code&gt;，则需要实现&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-framework/hp-soa-framework-web/src/main/java/io/github/hpsocket/soa/framework/web/service/AccessVerificationService.java&quot;&gt;AccessVerificationService&lt;/a&gt;接口，用于 HTTP 请求鉴权。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;启动应用 
  &lt;ul&gt; 
   &lt;li&gt;以&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-framework/hp-soa-framework-web/src/main/java/io/github/hpsocket/soa/framework/web/server/main/AppStarter.java&quot;&gt;io.github.hpsocket.soa.framework.web.server.main.AppStarter&lt;/a&gt;作为启动类，启动应用程序。&lt;/li&gt; 
   &lt;li&gt;JVM 启动参数参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/misc/jvm/java-opts.txt&quot;&gt;JVM 启动参数示例&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/user_guide.md&quot;&gt;用户指南&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303798/hp-soa-1-1-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303798/hp-soa-1-1-2-released</guid>
            <pubDate>Thu, 25 Jul 2024 03:29:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>openKylin 社区塞拉利昂用户组首场活动圆满举行！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;524&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6467d0f4b89cd3e19a3caa3383042ad9d88.png&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;openKylin 用户组&lt;/strong&gt;是为方便全球各国家及地区开源爱好者交流 openKylin 系统版本及用户体验、推广 openKylin 操作系统而成立的开源爱好者组织，其目的在于将开源社区的相关合作拓展至全球范围，吸引更多国际开发者贡献代码、想法和经验，提升 openKylin 社区的国际品牌影响力，并获得持续发展的创新动力。&lt;strong&gt;截至目前，openKylin 社区已累计成立 11 个国际用户组。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;810&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f91b854fde30b0d26466ec8d72184208d1.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;近日，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;openKylin 社区国际用户组活动在西非国家&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;塞拉利昂&lt;/span&gt;&lt;span&gt;成功举行&lt;/span&gt;&lt;/strong&gt;。这次活动是由不久前成立的塞拉利昂 openKylin 用户组组织的首次小型活动，标志着 openKylin 在非洲大陆的推广工作迈出了重要一步。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;活动主持人 Moses Kargbo 是 openKylin 社区国际推广大使，也是塞拉利昂用户组的创始人&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;。他在深入参与 openKylin 国际交流后，回国着手组建起本地用户组，并积极筹划了这次推广活动。活动于当地时间下午举行，吸引了&lt;strong&gt;20 名&lt;/strong&gt;热情的参与者。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;活动期间，Moses Kargbo 为各位参与者详细介绍了 openKylin 的发展历程和社区成果，引导参与者深入了解 openKylin 社区，展示 openKylin 系统的功能和优势。同时，通过实际操作，让参与者深刻感受到 openKylin 系统的流畅性和易用性。在两小时的活动中，参与者对 openKylin&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;开源操作系统&lt;/span&gt;&lt;span&gt;的功能和特点表现出浓厚的兴趣，并积极参与互动。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次活动的成功举办，不仅为 openKylin 在塞拉利昂乃至整个西非地区的普及与推广奠定了坚实的基础，更激发了当地民众对于开源技术的浓厚兴趣与探索欲望。Moses Kargbo 表示，这仅仅是一个开始，他期待未来能有更多类似的活动在塞拉利昂乃至整个非洲大陆举办，让 openKylin 的光芒照亮更多角落，促进技术与文化的交流互鉴。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区对塞拉利昂用户组的发展给予了高度关注和支持。社区计划在未来继续支持类似的国际交流活动，以进一步扩大其全球影响力，携手全球伙伴共同推动开源技术的普及与发展，为构建更加开放、协同、创新的数字世界贡献力量。这一系列举措不仅彰显了中国开源力量的崛起与自信，也为中非乃至全球技术合作与交流搭建了重要舞台。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303793</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303793</guid>
            <pubDate>Thu, 25 Jul 2024 03:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Apache Doris 2.1.5 版本正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;亲爱的社区小伙伴们，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Apache Doris 2.1.5 版本已于 2024 年 7 月 24 日正式发布。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;2.1.5 版本在湖仓一体、多表物化视图、半结构化数据分析等方面进行了全面更新及改进，同时在倒排索引、查询优化器、查询引擎、存储管理等 10 余方向上完成了若干问题修复，欢迎大家下载使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;官网下载：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2FbGSQmU&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://doris.apache.org/&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;GitHub 下载：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2FfB7Wu8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://github.com/apache/doris/releases/tag/2.1.5-rc02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;行为变更&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;JDBC Catalog 的默认连接池大小从 10 调整为 30。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37023&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37023&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;创建 JDBC Catalog 时，参数 &lt;/span&gt;&lt;span&gt;&lt;code&gt;connection_pool_max_size&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 的默认值改为 30，以避免高并发场景下连接池耗尽的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;将系统的保留内存的最小值，即 &lt;/span&gt;&lt;span&gt;&lt;code&gt;low water mark&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 调整为 min （6.4G， MemTotal * 5%），以更好地防止 BE 出现 OOM 问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修改了单请求多个语句的处理逻辑，当客户端未设置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;CLIENT_MULTI_STATEMENTS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 标志位时，将仅返回最后一个语句的结果，而非所有语句结果。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;不再允许直接更改异步物化视图的数据。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37129&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37129&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加会话变量 &lt;/span&gt;&lt;span&gt;&lt;code&gt;use_max_length_of_varchar_in_ctas&lt;/code&gt;&lt;/span&gt;&lt;span&gt;，用于控制 CTAS 时 VARCHAR 和 CHAR 类型长度的生成行为。默认值是 true。当设置为 false 时，使用推导出的 VARCHAR 长度，而不是使用最大长度。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37284&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37284&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;统计信息收集，默认开启了通过文件大小预估 Hive 表行数的功能。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37694&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37694&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;默认开启异步物化视图透明改写机制。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35897&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35897&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;透明改写利用分区物化视图，如果分物物化视图部分分区失效，默认行为是将所有基础表与物化视图联合，以保证查询数据的正确性。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35897&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35897&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;湖仓一体&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;会话变量 &lt;/span&gt;&lt;span&gt;&lt;code&gt;read_csv_empty_line_as_null&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 用于控制在读取 CSV 格式文件时，是否忽略空行。默认情况下忽略空行，当设置为 true 时，空行将被读取为所有列均为 Null 的行。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37153&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37153&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;新增兼容 Presto 的复杂类型输出格式。通过设置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;set serde_dialect=&quot;presto&quot;&lt;/code&gt;&lt;/span&gt;&lt;span&gt;，可以控制复杂类型的输出格式，与 Presto 一致，用于平滑迁移 Presto 业务。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37253&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37253&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;多表物化视图&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持在构建物化视图中使用非确定性函数。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持原子替换异步物化视图定义。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37147&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37147&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持通过 &lt;/span&gt;&lt;span&gt;&lt;code&gt;show create materialized view&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 查看异步物化视图创建语句。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37125&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37125&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对多维聚合查询的透明改写。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37436&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37436&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对非聚合物化视图的聚合查询进行透明改写。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37497&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37497&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持使用 Key 列，对查询中的 DISTINCT 聚合做透明改写。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对物化视图进行分区，通过使用 &lt;/span&gt;&lt;span&gt;&lt;code&gt;date_trunc&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 对分区进行汇总。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F31812&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#31812&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35562&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35562&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持分区表值函数（TVF） &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36479&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36479&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;半结构化数据分析&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;使用 VARIANT 类型的表支持部分列更新。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F34925&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#34925&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持默认开启 PreparedStatement。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36581&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36581&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;VARIANT 类型支持导出为 CSV 格式。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37857&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37857&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持 &lt;/span&gt;&lt;span&gt;&lt;code&gt;explode_json_object&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 函数，用于将 JSON Object 行转列。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36887&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36887&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;ES Catalog 将 ES 的 NESTED 或者 OBJECT 类型映射成 Doris JSON 类型。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37101&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37101&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;默认情况下，对于具有指定分词器的倒排索引，默认开启 &lt;/span&gt;&lt;span&gt;&lt;code&gt;support_phrase&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 以提升 &lt;/span&gt;&lt;span&gt;&lt;code&gt;match_phrase&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 系列查询性能。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37949&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37949&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持 &lt;/span&gt;&lt;span&gt;&lt;code&gt;explain DELETE FROM&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 语句。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37100&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37100&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持常量表达式参数的 Hint 形式。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37988&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37988&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;内存管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加了 HTTP API 以清除缓存。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36599&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36599&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;权限管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对表值函数（TVF）中的资源进行鉴权。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37132&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37132&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;改进提升&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;湖仓一体&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;将 Paimon 升级至 0.8.1 版本。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复在部分情况下，查询 Paimon 表时导致 &lt;/span&gt;&lt;span&gt;&lt;code&gt;org.apache.commons.lang.StringUtils&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37512&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37512&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持腾讯云 LakeFS。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36891&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36891&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了外部表查询时获取文件列表的超时时间。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36842&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36842&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;可通过会话变量 &lt;/span&gt;&lt;span&gt;&lt;code&gt;fetch_splits_max_wait_time_ms&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 进行设置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;改进了 SQLServer JDBC Catalog 的默认连接逻辑。默认情况下，不干预连接加密设置。仅当 &lt;/span&gt;&lt;span&gt;&lt;code&gt;force_sqlserver_jdbc_encrypt_false&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 设置为 true 时，才会强制在 JDBC URL 中添加 &lt;/span&gt;&lt;span&gt;&lt;code&gt;encrypt=false&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 以减少认证错误，从而提供更灵活的控制加密行为的能力。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36971&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36971&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Hive 表的 &lt;/span&gt;&lt;span&gt;&lt;code&gt;show create table&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 语句增加序列化/反序列化。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37096&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37096&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;FE 端 Hive 表列表默认缓存时间由 1 天改为 4 小时&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;数据导出（Export/Outfile）支持指定 Parquet 和 ORC 的压缩格式。参考&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Fsql-manual%2Fsql-statements%2FData-Manipulation-Statements%2FManipulation%2FEXPORT%2F%3F_highlight%3Dcompress_type&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Fsql-manual%2Fsql-statements%2FData-Manipulation-Statements%2FManipulation%2FEXPORT%2F%3F_highlight%3Dcompress_type&quot; target=&quot;_blank&quot;&gt;https://doris.apache.org/docs/sql-manual/sql-statements/Data-Manipulation-Statements/Manipulation/EXPORT/?_highlight=compress_type&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当使用 CTAS+TVF 创建表时，TVF 中的分区列将被自动映射为 Varchar（65533） 而非 String，以便该分区列能够作为内表的分区列使用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37161&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37161&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Hive 写入操作元数据的访问次数。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37127&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37127&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;ES Catalog 支持将 NESTED/OBJECT 类型映射到 Doris 的 JSON 类型。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37182&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37182&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化使用低版本 OBJECT 驱动连接 Oracle 时的报错信息。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37634&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37634&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当 Hudi 表 Incremental Read 返回空集时，Doris 同样返回空集而非报错。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37634&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37636&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下内外表关联查询可能导致 FE 超时的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37757&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37757&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在从旧版本升级到新版本时，如果开启了 Hive Metastore Even Listener 情况下，可能出现 FE 元数据回放错误的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37757&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37757&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;多表物化视图&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;创建异步物化视图时，支持自动选择 Key 列。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36601&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36601&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;异步物化视图分区刷新支持定义中使用 &lt;/span&gt;&lt;span&gt;&lt;code&gt;date_trunc&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 函数。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35562&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35562&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;嵌套物化视图中，当下层命中聚合上卷改写后，上层现在依然可以继续进行透明改写。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当 Schema Change 不影响异步物化视图数据正确性时，异步物化视图保持可用状态。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37122&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37122&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;提升了透明改写的规划速度。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37935&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37935&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;计算异步物化视图可用性时，不再考虑当前的刷新状态。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36617&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36617&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;半结构化数据管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;通过采样优化 DESC 查看 VARIANT 子列的性能。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37217&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37217&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;行存 &lt;/span&gt;&lt;span&gt;&lt;code&gt;page_size&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 默认从 4K 调到 16K 压缩率提升 30%，而且支持表级别可配置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;JSON 类型支持 Key 为空的特殊 JSON 数据。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36762&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36762&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;倒排索引&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;减少倒排索引 Exists 调用避免对象存储访问延迟。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36945&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36945&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化倒排索引查询流程额外开销。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35357&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35357&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;在物化视图中不创建倒排索引。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36869&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36869&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当比较表达式两侧都是 Literal 时，String Literal 会尝试向另一侧的类型转换。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36921&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36921&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;重构了 VARIANT 类型的子路径下推功能，现在可以更好地支持复杂的下推场景。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36923&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36923&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了物化视图代价计算的逻辑，能够更准确的选择代价更低的物化视图。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37098&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37098&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;提升了 SQL 中使用用户变量时的 SQL 缓存规划速度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37119&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37119&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了 NOT NULL 表达式的估行逻辑，当查询中存在 NOT NULL 时可以获得更好的性能。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37498&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37498&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了 LIKE 表达式的 NULL 拒绝推导逻辑。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37864&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37864&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化查询指定分区失败时的报错信息，可以更清楚看到是哪个表导致的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37280&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37280&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询引擎&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;将某些场景下 BITMAP_UNION 算子的性能提升了 3 倍。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;提升 Arrow Flight 在 ARM 环境下的读取性能。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了 &lt;/span&gt;&lt;span&gt;&lt;code&gt;explode&lt;/code&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;code&gt;explode_map&lt;/code&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;code&gt;explode_json&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 函数的执行性能。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;数据导入&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持为 &lt;/span&gt;&lt;span&gt;&lt;code&gt;INSERT INTO ... FROM TABLE VALUE FUNCTION&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 语句设置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;max_filter_ratio&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 参数。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;Bug 修复&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;湖仓一体&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下查询 Parquet 格式导致 BE 宕机的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37086&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37086&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复查询 Parquet 格式，BE 端打印大量日志的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37012&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37012&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下 FE 端重复创建大量 FileSystem 对象的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37142&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37142&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，写入 Hive 后的事务信息未清理的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37172&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37172&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，Hive 表写入操作导致线程泄露的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37247&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37247&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，无法正确获取 Hive Text 格式行列分隔符的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37188&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37188&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，读取 lz4 压缩块时的并发问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37187&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37187&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，Iceberg 表 &lt;/span&gt;&lt;span&gt;&lt;code&gt;count(*)&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 返回错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37810&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37810&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，创建基于 MinIO 的 Paimon Catalog 导致 FE 元数据回放错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37249&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37249&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下使用 Ranger 创建 Catalog 客户端卡死的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37551&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37551&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;多表物化视图&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当基表增加新的分区时，可能导致的分区聚合上卷改写后结果错误的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复关联的基表分区删除后，物化视图分区状态没有被置为不同步的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36602&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36602&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复异步物化视图构建偶现的死锁问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37133&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37133&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复异步物化视图单次刷新大量分区时偶现的，报错 &lt;/span&gt;&lt;span&gt;&lt;code&gt;nereids cost too much time&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37589&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37589&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复创建异步物化视图时，如果最终的 Select List 中存在 Null Literal，则无法创建的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37281&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37281&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复单表物化视图，如果构建了聚合的物化视图，虽然改写成功，但是 CBO 没有选择的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35721&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35721&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36058&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36058&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Join 输入都是聚合的情况下，构建分区物化视图，分区推导失败的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F34781&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#34781&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;半结构化数据管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 VARIANT 在并发/异常数据等特殊情况下的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37976&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37976&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37839&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37839&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37794&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37794&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37674&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37674&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36997&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36997&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 VARIANT 用在不支持的 SQL 中 Coredump 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37640&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37640&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 1.x 版本升级到 2.x 或者更高版本时因为 MAP 数据类型 Coredump 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36937&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36937&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 ES Catalog 对 Array 的支持。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36936&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36936&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;倒排索引&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复倒排索引 v2 DROP INDEX 元数据没有删除的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37646&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37646&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复字符串长度超过 「ignore above」 时查询准确性问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37679&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37679&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复索引大小统计的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37232&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37232&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37564&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37564&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分因为保留关键字而导致导入无法执行的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35938&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35938&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在创建表时 CHAR（255） 类型错误的记录为 CHAR（1） 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37671&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37671&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在相关子查询中的连接表达式为复杂表达式时返回错误结果的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37683&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37683&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了 DECIMAL 类型分桶裁剪有可能错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38013&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38013&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了部分场景下开启 Pipeline Local Shuffle 后，聚合算子计算结果错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38016&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38061&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当聚合算子中存在相等的表达式时，可能出现的规划报错问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36622&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36622&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当聚合算子中存在 Lambda 表达式时，可能出现的规划报错问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37285&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37285&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了由窗口函数生成的字面量在优化为字面量时类型错误导致无法执行的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37283&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37283&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了聚合函数 &lt;/span&gt;&lt;span&gt;&lt;code&gt;foreach combinator&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 错误输出 Null 属性问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37980&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37980&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了 acos 函数在参数为超越范围值的字面量时不能规划的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37996&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37996&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当查询指定的同步物化视图时，显示指定查询分区导致规划报错的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36982&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36982&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在规划过程中偶尔出现 NPE 的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38024&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38024&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询引擎&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 DELETE WHERE 语句中，在 DECIMAL 数据类型作为条件报错的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37801&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37801&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复查询执行结束，但是 BE 内存不释放的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37792&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37792&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37297&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37297&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复在千级别 QPS 场景下，Audit Log 占用 FE 内存太多的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37786&quot; target=&quot;_blank&quot;&gt;https://github.com/apache/doris/pull/37786&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 sleep 函数在输入非法值时 BE Core 的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37681&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37681&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复执行过程中 &lt;/span&gt;&lt;span&gt;&lt;code&gt;sync filter size meet error&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37103&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37103&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复执行过程中，使用时区时结果不对的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37062&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37062&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 &lt;/span&gt;&lt;span&gt;&lt;code&gt;cast string&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 到 &lt;/span&gt;&lt;span&gt;&lt;code&gt;int&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 时结果不对的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36788&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36788&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Arrow Flight 协议在开启 Pipelinex 时查询报错的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35804&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35804&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 &lt;/span&gt;&lt;span&gt;&lt;code&gt;cast string to date/datetime&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 报错的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35637&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35637&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复使用 &lt;/span&gt;&lt;span&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 做大表关联查询时 BE Core 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36263&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36263&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;存储管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复列更新写入时遇到 DELETE SIGN 数据不可见问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36755&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36755&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Schema Change 期间 FE 的内存占用。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36756&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36756&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 BE 重启时事务没有 Abort 导致的 BE 下线卡住问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36437&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36437&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 NOT-NULL 到 NULL 类型变更的偶发报错问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36389&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36389&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 BE 宕机时的副本修复调度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36897&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36897&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;单个 BE 创建 Tablet 时支持 round-robin 选择磁盘。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36900&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36900&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Publish 慢导致的查询 -230 错误。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36222&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36222&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Partition Balance 的速度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36976&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36976&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;使用 FD 数目和内存控制 Segment Cache 避免 FD 不足。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37035&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37035&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Clone 和 Alter 并发可能导致的副本丢失问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36858&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36858&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复不能调整列顺序问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37226&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37226&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;禁止自增列的部分 Schema Change 操作。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37331&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37331&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Delete 操作报错不准确。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37374&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37374&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;BE 侧 Trash 过期时间调整为一天。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37409&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37409&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Compaction 内存占用和调度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37491&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37491&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;检查潜在的过大 Backup 导致 FE 重启的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37466&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37466&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;恢复动态分区删除策略以及交叉分区的行为到 2.1.3。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37570&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37570&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37506&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37506&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 DELETE 谓词重部分 DECIMAL 报错问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37710&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37710&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;数据导入&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复导入时错误处理竞争导致的数据不可见问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36744&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36744&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Stream Load 导入支持 &lt;/span&gt;&lt;span&gt;&lt;code&gt;hhl_from_base64&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36819&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36819&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复潜在的单表非常多 Tablet 导入失败时可能导致 FE OOM 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36944&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36944&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 FE 主从切换时自增列可能重复的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36961&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36961&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 INSERT INTO SELECT 自增列报错问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37029&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37029&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;降低数据下刷线程数，优化内存占用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37092&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37092&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Routine Load 任务自动恢复和错误信息。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37371&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37371&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加 Routine Load 默认攒批大小。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37388&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37388&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Routine Load 在 Kafka EOF 过期的任务停止问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37983&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37983&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复一流多表 Coredump 。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37370&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37370&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Group Commit 内存估计不准导致的提前反压问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37379&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37379&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Group Commit BE 侧线程占用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37380&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37380&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复数据没有分区时没有错误 URL 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37401&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37401&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复导入时潜在的内存误操作问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38021&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38021&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;主键模型&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;降低主键表 Compaction 的内存占用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36968&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36968&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复主键副本 Clone 失败时可能的重复数据问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37229&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37229&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;内存管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Jemalloc Cache 统计不准的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37464&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37464&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复在 K8s / CGroup 中不能正确获取内存大小的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36966&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36966&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;权限管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Table Valued Function 引用 Resource 时没有鉴权的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37132&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37132&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Show Role 语句中没有 Workload Group 权限的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36032&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36032&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复创建 Row Policy 时，同时执行两条语句，导致 FE 重启失败的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37342&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37342&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，老版本升级后，因为 Row Policy 导致 FE 元数据回放失败的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37342&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37342&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;其他&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复计算节点参与内部表创建的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37961&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37961&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 &lt;/span&gt;&lt;span&gt;&lt;code&gt;enable_strong_read_consistency = true&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 时从延迟问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37641&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37641&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303789/apache-doris-2-1-5-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303789/apache-doris-2-1-5-released</guid>
            <pubDate>Thu, 25 Jul 2024 03:03:12 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>sra-admin 近期更新事项（v2.0.5）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p&gt;SRA-ADMIN 是一个前后端分离的后台管理系统，引入了市面上常用的工具包以及核心框架，实现了用户、字典、角色、权限等常见功能， 能够快速搭建一个 web 项目。 &amp;nbsp; 后端技术栈：springboot3+sqltoy+satoken+hutool &amp;nbsp; 前端技术栈：vue3+vue-router+typescript+elementui&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;h4&gt;v2.0.5&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：系统日志添加‘接口路径’保存字段&lt;/li&gt; 
 &lt;li&gt;新增：系统日志添加@LogPersistence 注解拦截存储&lt;/li&gt; 
 &lt;li&gt;优化：系统日志查询列表默认根据 id 倒敍&lt;/li&gt; 
 &lt;li&gt;优化：创建 Logger 实例增加 static 关键词&lt;/li&gt; 
 &lt;li&gt;变更：初始化脚本变成 ddl+data 两个文件（PS：table_ddl.sql 是表结构）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;v2.0.4&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化：前端界面优化（sra-admin-vue 仓库）&lt;/li&gt; 
 &lt;li&gt;修复：私钥缓存失效问题&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;v2.0.3&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化：验证码缓存键从 ip 改成用 UUID 标识&lt;/li&gt; 
 &lt;li&gt;优化：登陆成功删除验证码缓存&lt;/li&gt; 
 &lt;li&gt;变更：验证码接口方法 post 改成 get&lt;/li&gt; 
 &lt;li&gt;新增：密码参数使用 sm2 加密传输&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;v2.0.2&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化：接口访问限制如果不配置或者小于零表示不开启&lt;/li&gt; 
 &lt;li&gt;修复：使用@PathVariable 增加别名，避免「Name for argument of type」异常&lt;/li&gt; 
 &lt;li&gt;sqltoy-orm 和 sqltoy-plus 升级到 5.6.9&lt;/li&gt; 
 &lt;li&gt;删除 MultiWrapper 写法&lt;/li&gt; 
 &lt;li&gt;修复系统日志列表「日志编号」查询条件类型转换异常问题&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;v2.0.1&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;修复 validation 引入异常问题&lt;/li&gt; 
 &lt;li&gt;优化异常日志打印&lt;/li&gt; 
 &lt;li&gt;路由放行测试接口&lt;/li&gt; 
 &lt;li&gt;增加 MethodArgumentNotValidException 异常拦截&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;拓展&lt;/h2&gt; 
&lt;p&gt;sra-admin-solon 版本也同步更新功能点&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303780/sra-admin-2-0-5</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303780/sra-admin-2-0-5</guid>
            <pubDate>Thu, 25 Jul 2024 02:20:12 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Firefox 128.0.2 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Firefox 128.0.2 现已发布，具体更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了特定条件下 macOS 上视频通话中的音频回声问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1908539&quot; target=&quot;_blank&quot;&gt;错误 1908539&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Adguard 扩展弹出窗口未显示的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1906132&quot; target=&quot;_blank&quot;&gt;错误 1906132&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了在富文本编辑器中按字符导航时导致某些屏幕阅读器无法读取的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1905021&quot; target=&quot;_blank&quot;&gt;错误 1905021&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了在 Windows ARM 设备中启用暗模式时出现的视觉故障。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1897444&quot; target=&quot;_blank&quot;&gt;错误 1897444&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了导致 NTLM 身份验证失败的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1908115&quot; target=&quot;_blank&quot;&gt;错误 1908115&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了鼠标悬停时显示的内容未被屏幕截图捕获的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1905468&quot; target=&quot;_blank&quot;&gt;错误 1905468&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;各种稳定性修复。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F128.0.2%2Freleasenotes%2F&quot; target=&quot;_blank&quot;&gt;https://www.mozilla.org/en-US/firefox/128.0.2/releasenotes/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303779/firefox-128-0-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303779/firefox-128-0-2-released</guid>
            <pubDate>Thu, 25 Jul 2024 02:06:40 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>数据备份工具 BackupSerenity V2.1 新增 CSV 导入工具集</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;数据备份工具 BackupSerenity V2.1 新增 CSV 导入工具集&lt;/h1&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;CSV 导入工具集&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;作用：将&lt;span style=&quot;background-color:rgba(212, 222, 231, 0.098)&quot;&gt;将包含表头的 CSV 文件批量导入至 MYSQL&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:rgba(212, 222, 231, 0.098)&quot;&gt;使用方式：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;启动脚本&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;nohup python3 csv_input_mysql.py &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; csv_input_mysql.log &amp;amp;
&lt;/span&gt;&lt;span&gt;生成的文件名称 csv_input_mysql.log 可以根据情况修改&lt;/span&gt;&lt;span style=&quot;color:#f75464&quot;&gt;，&lt;/span&gt;&lt;span&gt;如果想保留全部日志可以将 &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 替换为 &lt;/span&gt;&lt;span style=&quot;color:#bcbec4&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 即可&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;导出错误日志&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;cat csv_input_mysql.log | grep &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;创建失败&#39;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; csv_input_mysql.log.ERR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;获取全部 CSV 文件名称&lt;span&gt;&amp;nbsp;&lt;/span&gt;[成功]&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;cat csv_input_mysql.log | grep &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;正在疯狂处理&#39;&lt;/span&gt;&lt;span&gt; | awk &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;{print $2}&#39;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; csv_files.list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;获取全部表名称&lt;/span&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;[成功]&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;cat csv_input_mysql.log | grep &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;创建成功&#39;&lt;/span&gt;&lt;span&gt; | awk &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;{print $2}&#39;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; table_names.list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;数据验证&lt;/h2&gt; 
&lt;p style=&quot;color:#bcbec4; text-align:start&quot;&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;源数据无法预估质量，会出现源数据换行等情况，此时可以使用清洗工具进行清洗，清洗后即可进行验证&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;通过数据导入程序进行导入程序后&lt;/span&gt;&lt;span style=&quot;color:#f75464&quot;&gt;，&lt;/span&gt;&lt;span&gt;对原始 csv 进行清洗
&lt;/span&gt;&lt;span&gt;编辑 cleaned_data.py 文件修改
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span style=&quot;color:#7a7e85&quot;&gt;# 清洗前源数据&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;input_file = &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;you_file.csv&#39;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span style=&quot;color:#7a7e85&quot;&gt;# 清洗后数据&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;output_file = &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;cleaned_you_file.csv&#39;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;修改完成后进行执行
&lt;/span&gt;&lt;span&gt;python3 cleaned_data.py
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;执行成功后通过 wc 命令进行行数获取
&lt;/span&gt;&lt;span&gt;wc -l cleaned_you_file.csv
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;数据库通过
&lt;/span&gt;&lt;span&gt;SELECT COUNT&lt;/span&gt;&lt;span style=&quot;color:#bcbec4&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#2aacb8&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#bcbec4&quot;&gt;)&lt;/span&gt;&lt;span&gt; FROM you_file
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;得出的数差值为 1
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;数据验证成功&lt;/span&gt;&lt;span style=&quot;color:#f75464&quot;&gt;！&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;具体点击原文链接查看，或直接访问 &lt;a href=&quot;https://gitee.com/heike07code/Backup-tools/blob/main/data_tools/csv/csv_input_mysql.md&quot;&gt;此链接&lt;/a&gt; 查看&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303777/backupserenity-2-1-updated</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303777/backupserenity-2-1-updated</guid>
            <pubDate>Thu, 25 Jul 2024 01:47:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>ICEPOS 开源收银系统 x64 位+Framework 4.6 更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;ICEPOS 开源收银系统 C#客户端 x64 位 + 支持 Framework4.6&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;64 位版本，更新 Lib 文件夹下面的 System.Data.SQLite.dll 为 x64 位版本+支持 Framework4.6&lt;/p&gt; 
&lt;p&gt;ICE.POS 文件夹下，增加 SQLite.Interop.dll，是 System.Data.SQLite.dll 的支持库， 必须添加到 release 的文件夹下面（已添加自动引用，生成时候回自带），即输出目录下，与 ICE POS.exe 目录同级&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;ICE.POS.Transfer ICE.POS.Common ICE.Utility ... 等类库生成目标请选择 x64&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;490&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-52551cb89ff3a0348424e0e3209458b07e8.jpg&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303743</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303743</guid>
            <pubDate>Wed, 24 Jul 2024 12:44:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>wangmarketCMS v7.0，增加 AI 全自动 SEO 优化推广能力</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div class=&quot;ckeditor-html5-video&quot;&gt; 
 &lt;video controlslist=&quot;nodownload&quot; poster=&quot;https://video.zvo.cn/aiseo/info.jpg&quot; width=&quot;650&quot;&gt;
  &amp;nbsp;
 &lt;/video&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;ai 自动帮你根据关键词写文章并且每天不重样，你也可以自己采集通过我们系统开放 API 将文章导入。全面解决了随着日积月累文章逐渐增多的情况下服务器因数据量大而响应缓慢的问题，彻底解决亿级大数据情况下网站的高速访问及超低成本投入。&lt;/p&gt; 
&lt;h2&gt;更新说明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;增加全新的混合云架构的 AI-SEO 版本，私有云计算，公有云访问，拥有政务级安全能力，自动化搜索引擎提交，自动生成多个语种的 html 页面支持多语种收录、全自动化的增量备份保障数据安全，支持亿级文章数据，公有云服务器只需要买个 1 核 1G 服务器即可承载，全面降低大规模文章的行业站运营及维护成本。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;增加混合云架构 AI-SEO 版本的一键部署脚本&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;增加跟网站 html 页面翻译生成小语种的 tcdn.admin 的对接，并增加单次翻译的 url 上限到十万次。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;siteapi 插件中，获取文章列表，增加根据栏目代码获取文章列表的能力&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化 site.keywords 字段有 38 字改为 200 字，以适配 seo 版本&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;修复网站转移插件，文章内容转移后换行符会丢失的问题。如果是默认的富文本编辑器不会产生任何影响，但是如果自定义改为了 markdown 方式则会受到换行符丢失影响&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;fileupload-framework-ueditor 增加对 ueditor 上传保存模板的单独自定义&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;将网站中图片上传接口从 sitecontroller 剥离出来&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/83aed2f737bd08e8ebdd3b3f939ed08bd87ea9b7&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;模板导入优化，避免模板名字异常导致找不到本地私有的模板&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/f15c24585fbbf863d15c4cb5162515148e756b0f&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化 Template.replaceAll 以避免某些极端情况下生成整站时出现特殊字符异常导致无法生成整站的问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/1a313bb4a4b9c85631ad2541e8984089d4512e97&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;模板开发时，对定义模板名字优化，避免字符转全角会导致访问异常问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/9a82d1df9087eb9c655719b3398d4d9a3208034c&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化项目启动时，windows 一件运行包默认域名有时不加载的问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/06fa895c4fd06b478f5fae7abaca6c9716937d85&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;调整模板开发，允许对第三方开发好的模板进行再次改动&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/f2173548f7a21b69fcda9d709d9c25b321d8c5c7&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化栏目管理-子栏目列表，有时通过模板导入的值会变为隐藏的问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/ec62296fab4bbca151e72996bd540a2ed0819ba4&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化静态 html 生成类的参数改为公有&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/83d0186f00b3eb4dd99bf004d87cfbc3f805105d&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;news 文章表增加 column_code 字段作为栏目代码关联的预留字段&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下载使用&lt;/h2&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fcms.zvo.cn%2F40828.html&quot; target=&quot;_blank&quot;&gt;Linux 一键安装命令&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fcms.zvo.cn%2F40829.html&quot; target=&quot;_blank&quot;&gt;windows 一键运行包&lt;/a&gt;&amp;nbsp; | &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcms.zvo.cn%2F43911.html&quot; target=&quot;_blank&quot;&gt;AI-SEO 版本一键安装命令&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303707/wangmarketcms-7-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303707/wangmarketcms-7-0-released</guid>
            <pubDate>Wed, 24 Jul 2024 09:10:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Codes 重新定义 SaaS 模式的研发项目管理平台开源版 4.5.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;一：简介&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt; &amp;nbsp;Codes 重新定义 SaaS 模式 =&amp;nbsp;云端认证 + 程序及数据本地安装 + 不限功能 + 30 人免费&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Codes&amp;nbsp; 是一个&amp;nbsp;高效、简洁、轻量的一站式研发项目管理平台。包含需求管理，任务管理，测试管理，缺陷管理，自动化测试，cicd&amp;nbsp;等功能； Codes 帮助企业加速融合研发、测试、运维一体化进程。商业版不限功能，本地安装只限用户数，30 个用户免费&amp;nbsp;; 社区版当前只开放了测试跟踪管理 (主要功能用例管理，缺陷管理)，后续接着分离其他功能代码出来。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;官网&lt;/strong&gt;&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ficodes.work%2F&quot; target=&quot;_blank&quot;&gt;https://icodes.work/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;gitee 代码仓库&lt;/strong&gt;&amp;nbsp; https://gitee.com/xiaoming1q/icodes&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;本次发布 4.5.6&amp;nbsp; 一共 11 个更新 ，8 个优化更新，3 个 Bug&amp;nbsp; Fixed&amp;nbsp;详见&amp;nbsp;第三部分&lt;/strong&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;二：图文简说 Codes&amp;nbsp;&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;Codes&amp;nbsp;的产品理念：让老板感知数据，让中层管理者感受先进，让基层员工感到舒心&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;理念在产品中的落地就是：以便捷的方式给管理人员抓手，使管理抓得住，抓得好；以不增加负担的方式让执行人员专注本职工作和高效协同。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;好的工具，即要易用，又要方便管理：易用解决执行层面的协同问题，方便管理才能促进高效的执行，也就是说：协同仅是解决执行层面的问题，管理才是高效协同的抓手&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;功能架构&lt;/strong&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/da912e35-b58a-4ec8-9f14-185a40699f50.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、一&amp;nbsp; &amp;nbsp;&amp;nbsp;让老板感知数据&lt;/h2&gt; 
&lt;h3&gt;先来看 Codes 管理的抓手」&amp;nbsp;抓 「什么&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;1、做什么&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; 作为管理者，最关心的是在特定的前一时段内团队做了什么，特定的当前时段内正在做什么，接下来特定时段内要做什么&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;2、做得怎样&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;然后是各时段都有什么问题或是风险，比如：计划内的事情完成得咋样，解决的历史工作债务，又增加多少新的工作债务，当前累积了多少工作债务&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;3、瓶颈在哪里&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;就像找到了堵点才能解决交通拥堵一样，要先识别出哪里才生了积压，积压是人的问题，还是其他问题&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp;再来举例说明，Codes 如何通过数据感知的方式轻松的」 抓 「管理&lt;/p&gt; 
&lt;h3&gt;（1）宏观微观兼顾：迭代数据与阶段数据并存、粗细兼有&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/3f6708ad-414d-4598-b065-6f5d177d00a0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（2）负载分析以日历和甘特图的形式显示，洞察工作饱和度&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/449be79d-9a22-44b7-90b6-0f5556f22c97.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（3）待办排名，了解全局 「堵点」&amp;nbsp;，一目了然当前进度瓶颈&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/df58dbb5-7b56-44a9-ae9b-d31616aeb362.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（4）迭代人员分工，了解局部 「堵点」&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1fbb6d7-391e-4c50-9f17-9c1f4254fb7a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（5）任务覆盘，覆盘做什么、做得如何（排期，延期，债务解决及累积）&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;减少不必要的例会，比如解决的历史债务，新增债务，当前累积的债务等。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/086dd4e6-f6d8-4bfc-956a-ac3b3e104142.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（6）各职位人员产出及工时&amp;nbsp;一目了然&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/28bf78a2-5aa3-4d4d-984e-efb91f272a21.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（7）人员产出：工时、事项&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c8be6dd8-9dcb-4448-a43a-9b4e6b517333.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（8）工时趋势&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c02d5112-fa75-4c4f-b42d-2461122f1bec.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（9）全局看板，一目了然项目情况&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/aeefe606-915f-4f04-8335-8f977023ec9b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/cd8baab5-d4d0-44c6-adba-434bfa9fee79.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（10）工时，日报，进度，全局事项总览全局&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/aab18584-2d2e-4c44-aa6d-3e90f22e9a86.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/6f5f1ff7-8d55-4b1d-b045-4285b571034d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（11）风险拓扑，以直观的方式显示风险根因&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/50cbb235-285d-4892-8ee0-abb1b8485401.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（12）项目周报、部门周报、项目月报，全司项目月报&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; 解放 PM，让他们专注于过程跟进，汇报内容弹指生成&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/17794713-0654-4a24-a827-d988810c0b4d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、二&amp;nbsp; &amp;nbsp; Codes 让中层管理者感受先进&lt;/h2&gt; 
&lt;h3&gt;（1）首创的事件驱动 + 信息流实时推送的管理模式&lt;/h3&gt; 
&lt;h3&gt;事找人，实时推流。&lt;/h3&gt; 
&lt;h3&gt;&lt;strong&gt;为后续事件编排 + 工作流编排打下基础，同时一个页面搞定一切工作&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/7471a058-2d48-4113-9d3d-b27ca4454d84.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;时间轴视图&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/469d3f2b-2f94-4f01-9fdd-df675ffabc44.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（2）首创的事件驱动 +&amp;nbsp;事件订阅&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp;订阅事件时，还可以带上细粒度的条件，当然也可以只订阅事件&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/cef1492e-75ab-4c93-8553-ad8a678aa266.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（3）敏捷、瀑布、看板润物细无声方式融合&amp;nbsp;&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;底层一套数据，可以随意切换。瀑布以阶段为主，敏捷以迭代为主&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/0ac13752-1c79-45e2-bd51-ae0f3d07a8a4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/0328a820-9561-4951-b7d0-6a67bc193041.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;瀑布与敏捷隔合：瀑布各阶段或里程碑下以迭代来规化阶段内的工作事项，可以有多个迭代；如前期以敏捷为主，后续可批量把迭代分配到阶段中，然后 Coodes 自动推导阶段进度&lt;/p&gt; 
&lt;h3&gt;（4）生成式全局看板，再也不需手动创建看板&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;以逆向的方式，也就是通过定义查询条件的方式，来生成看板。所有人共用一个全局看板，定制各自的看板&lt;br&gt; 需求、任务、需求评审、用例、缺陷把它们各自的不同状态，泛化为：规划中、进行中，已完成，终止｜暂停这几种状态， 并显示在对应的看板泳道中。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c68497fc-f2d7-485e-a709-72b50945f3fa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;看板分组，可按人员、项目、迭代分组，以便分组后再显示各分组数据的看板&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/e9bd8a32-5c0e-4ae0-8ea7-1826901e2e6c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（5）多事项闭环迭代 ， 过程管理更通透和全面&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;一个迭代是一个完整研发周期闭环：从需求--&amp;gt;到研发任务--&amp;gt;到测试--&amp;gt;到上线 &amp;nbsp;&lt;br&gt; 包含了从需求、到任务、到用例、到测试、到缺陷、到自动化测试到上线，并自动生成迭代总结并存档&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2391eacd-15e3-49c6-87b3-3941e9cf5829.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/89f1718b-a616-4b9b-9444-bd605d3de205.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; 需求、任务、用例、缺陷都可分组显示，方便从不同维度来查看相关工作项&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/73d49bef-b8f3-482d-9a53-5705f3905e6b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（6）日报工时融合，让日报无操作空间&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;如果日报上罗列的事项和实际工作安排就没有紧密关联，「混子」 对日报就有 「操作空间」；管的人越多，越难记住每个人的具体工作。如果混子瞎编日报，也难以察觉，一看满满当当，以为产出还不错，干的事项不少嘛。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;填写日报时，要自动列出当日事项。加待处理事项和其他事项让日报更全面，且和实际工作安排关联，日报还可发往第三方平台&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/b476a767-fbb7-4b8a-a280-7ae2ad150966.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（7）日报工时融合，自动生成项目日报、项目周报&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/24a67bdb-28c0-492f-bbdb-7247a7aa0ba5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（8）落地敏捷测试&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;传统的测试计划只定义了工作项，且只是用例相关，最关键，只有工作项，没有分工， 不便于团队协作，也不便于跟踪各自的进度。在同一个迭代下分配工作即有全局又有，个体的分工及任务跟踪。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/26aab9be-88e3-4f43-a891-b291ff145340.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/5b239b9e-acc3-4ced-bbbe-70eb5c05dcbb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（9）流程驱动缺陷管理&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;流程驱动测试，告别一刀切。因地制宜」，可按需实时调整测试流程， 以反应不同管控目的； 不同流程对应不同的 bug 状态 , 更能反应项目实况， 并根据流程推动 bug 状态的演化。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/bfea4769-fb9c-4773-9911-bbdc1fc690a3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（10）任务批量排期，省事省事&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;批量排期（粗加工），再拉会（精加工）调整，月初或月底排期工作省事快捷，可顺排也可倒排&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/de8a5e63-5bfb-42f1-acec-2f2fa60c4908.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（11）自动层层推算进度&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;需求下有用任务，或子需求&amp;nbsp;用任务或子需求的工时来推算父需求的工时，如需注多有也是层层推算。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/6de90f90-557b-443f-b99a-56f55537c713.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、三&amp;nbsp; &amp;nbsp;让基层员工感到舒心&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;Codes 以不增加负担的方式，让专注本职工作和高效协同，以低代码提升个人工作效率&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;执行过程事找人、透明化、可追溯；围绕需求拉通所有研发活动，全场景业务数据惯通不割裂。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;对于具体干活的人员，主要是两件事，我的工作有什么如何汇报我的工作，团队的工作如何组织实施&lt;/p&gt; 
&lt;h3&gt;（1）我的事项&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &lt;strong&gt;事找我&lt;/strong&gt;，在我的待办事项中处理一切事务，实时推流的方式推给我，然后在工作区办理一切事项&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/5b3ad4fd-d2f2-4352-929c-e0929de36948.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（2）我关注的事项&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;可以通过订阅的方式，订阅事件，然后按订阅关系推流，订阅时除了可订阅事件，还支持各种复杂的条件，如下图所示&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/af68ae64-cc46-4c2e-b839-6aafb07884c4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;时间轴视图&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/b3c7eee2-f186-46e8-9e2c-272c8f228689.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（3）工时日报融合，集工是填报工时，方便快捷&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;以批量的形式分分钟填好工时，让烦人的工时，不再烦人！，并自动生成项目日报方便 PM 查阅，工时可以配置无审批，或 PM 审批，部门负责人审批&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;自动生成项目日报&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;自动列出当日事项，在其后填写工时，缺陷及用例都计算了工时，可以完整统计迭代进度，项目进度，以及部门工时。按支持层层下钻到人，如项目下钻到迭代，再从迭代下钻到人，或是从部门下钻到人&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/fe7bf7e1-12b5-45c2-95e1-68a9a6ad3d25.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;还会贴心的提重醒写日报，对于大老粗很友好&lt;/h3&gt; 
&lt;h3&gt;（4）各功能中心可分多维度分组显示，如任务中心，需求中心等&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/5fe4a5cd-f0c4-4c32-9f9e-cef6bd250dc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/0e97f1e2-6c59-408a-a43b-102bb4a6ee19.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（5）以迭代为中心来组织，且多事项迭代，从需求到测试到上线&amp;nbsp;形成闭环。&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;需求评审后，规化到迭代中，然后开发人员拆分需求为任务，同时测试可写测试用例，过程中间的产出放到迭代的交付物中，自动和项目文档关联，在发布中定义上线事项及执行人&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/daceb033-3f26-49ed-a678-970faa318a11.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&amp;nbsp;（6）围绕需求拉通所有研发活动&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;多种视图模式，满足不同需要，围绕需求拉通所有研发活动，确保干系人信息对齐，一个页面实现主要研发活动的联动。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;再也不会在需求下不能直观看到任务和用例了，产品视图让产品专注于需求，全景视图让研发人员一目了然&amp;nbsp;需求拆解，看板和甘特图视图。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/18ff14b3-fb40-44e9-b945-98c281b86b17.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（7）通过低代码降低 CI CD , 接口测试技术门槛&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;零代码拖拽式实现代码的编译和部署&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/cc807880-db70-4bcd-8d69-08e1b24765cb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;零代码拖拽式进行接口自动化编排&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/025f800b-3b83-4b44-ba84-468e71906f12.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;自动推导接口依赖拓补关系图，让接口关系不再是黑匣子，便捷的接口调用链&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/e53686a0-d191-4fed-b50d-2477eadccba6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;拖拽生成断言和拖拽提取参数，让接口测试傻瓜化； 创新式接口混沌测试，瞬间完成接口健壮性测试。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/99746f91-663b-49e5-ac44-ae2ffe2741bc.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c4e818ad-64f4-4860-b23f-14bff46db97a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;三：4.5.6&amp;nbsp; 更新说明&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;本次发布一共 11 个更新 ，8 个优化更新，3 个 Bug&amp;nbsp;&amp;nbsp;fixed&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;8 个更新&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;1、BUG 属加一个非必填属性，当需求引起的问题时，可以选择对应的产品人员，以便后续的处理如统计。&lt;br&gt; 2、安全增加，删除了不用的包，以及升级 app scan 扫描出来的有漏洞的 jar。&lt;br&gt; 3、迭代中加上限制，一个接口测试场景，只能加入到一个迭代中。&lt;br&gt; 4、在迭代明细界面，地删除加了限制，不能删除当前迭代。&lt;br&gt; 5、 BUG 查询中增加产品人员查询条件。&lt;br&gt; 6、BUG 处理历史中，处理说明，显示不全时，增加光标指上时，悬浮显示所有。&lt;br&gt; 7、增加一个产品人员简报的 BUG 分析。&lt;br&gt; 8、迭代下用例包中，增加二次分配用例功能，以前要是需要二次分配用例，需要在测试包管理中去处理，不方便。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;3 个 BUG 修复&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;1、迭代中如果有多个迭代，一个用例包，可能分到多个迭代，现在修改为一个测试包只能加一个迭代中。&lt;br&gt; 2、在测试流程设置中，取消某个流程后，停留在此流程的 BUG，有的点修改时，页面没内容。&lt;br&gt; 3、用例转 BUG，有时候上传不了附件，一直在 loading。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303695/codes-4-5-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303695/codes-4-5-6-released</guid>
            <pubDate>Wed, 24 Jul 2024 08:31:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🔥netty 分步式游戏服务器框架 &amp; 真轻量级网络编程框架 ioGame 21.13 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;ioGame 源码完全开放、最新文档阅读完全开放；使用完全自由、免费（遵守开源协议）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;ioGame 是一个&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;轻量级的&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;网络编程框架，适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;及各种需要长连接的场景。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#e6edf3; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;文档与日志&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fjavadoc%2Findex.html&quot; target=&quot;_blank&quot;&gt;ioGame javadoc api&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fab15oe&quot; target=&quot;_blank&quot;&gt;框架版本更新日志 (yuque.com)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame&quot; target=&quot;_blank&quot;&gt;ioGame 网络游戏服务器框架 (yuque.com)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;版本更新汇总&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;blockquote&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span&gt;[external] &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F334&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#334&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 顶号操作 bug，有概率触发并发问题&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;[core] FlowContext 新增 createRequestCollectExternalMessage 方法&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;[javadoc] 源码 javadoc 增强&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/blockquote&gt; 
 &lt;/div&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;[core]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;FlowContext 新增 createRequestCollectExternalMessage 方法，request 与游戏对外服交互。相关使用文档请阅读 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fivxsw5&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;获取游戏对外服的数据与扩展 (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;... ... 省略部分代码
@ActionMethod(ExternalBizRegionCmd.listOnlineUserAll)
public List&amp;lt;Long&amp;gt; listOnlineUserAll(FlowContext flowContext) {

    // 创建 RequestCollectExternalMessage
    var request = flowContext
            .createRequestCollectExternalMessage(MyExternalBizCode.onlineUser);

    // 访问多个【游戏对外服】
    var collectExternalMessage = flowContext
            .invokeExternalModuleCollectMessage(request);

    return listUserId(collectExternalMessage);
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;[其他更新]&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;netty.version&amp;gt;4.1.112.Final&amp;lt;/netty.version&amp;gt;
&amp;lt;lombok.version&amp;gt;1.18.34&amp;lt;/lombok.version&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#40485b&quot;&gt;ioGame 使用趋势数据&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;关注 ioGame 的游戏服务器开发者持续增多，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;2022-09 ~ 至今&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;各月&lt;/span&gt;&lt;span&gt;的统计数据；&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;这里的统计信息是关于开发者关注 ioGame 框架相关的，从统计数据中可以看出，由于 ioGame 上手简单，功能强大等优点，得到了众多开发者的关注。如果你想知道 ioGame 有没有人在使用，可以先到这里看下统计数据、开发者的评价与讨论。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://www.yuque.com/iohao/game/gpxk93#TwVa8&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;这里展示了每月的统计数据，统计数据来源于语雀后台，这些数据都是&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;真实的、客观存在的、活的&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;blockquote&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;因为成本的原因，某宝某多还没有出现能提供这种服务的商家，所以这样的统计数据也更具真实性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;通过统计数据，我们可以看到每天会有很多开发者在访问 ioGame 的在线文档，并且这些统计数据不是来源于口嗨的，也不是主观创造的。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;所以，还在犹豫要不要使用 ioGame 的开发者们，更应该讨论的是 「为什么这些开发者会选择使用 ioGame」，而不是 ioGame 有没有人在使用的问题。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;点击我，到语雀后台查看 ioGame 的数据&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/9852fe44_5475.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;hr&gt; 
  &lt;h2&gt;ioGame 网络游戏服务器框架简介&lt;/h2&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;你是否想要开发一个&lt;/span&gt;&lt;strong&gt;&lt;span&gt;高性能、稳定、易用、自带负载均衡、避免类爆炸设计、可跨进程跨机器通信、集群无中心节点、集群自动化、有状态多进程的分布式的&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;网络编程服务器呢？如果是的话，这里向你推荐一个由 java 语言编写的网络编程框架 ioGame。下面将会从多个方面来对框架做一些简单的介绍。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 是一个&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;轻量级的&lt;/span&gt;&lt;span&gt;网络编程框架，适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景；&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 有以下特点：&lt;/span&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span&gt;无锁异步化、事件驱动的架构设计&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;同时支持 TCP、WebSocket、UDP 多种连接方式，并且可扩展&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;支持 protobuf、json 等不同的通信协议&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;集群无中心节点、集群自动化、分布式的设计&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;真轻量级，不依赖任何第三方中间件或数据库就能支持集群、分布式&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;提供多种通讯方式，且逻辑服之间可以相互跨机器通信&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;ioGame 是纯 javaSE 的，使得 ioGame 能与其他框架方便的进行集成、融合；如 spring ... 等&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;学习成本低，开发体验好&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;支持多服单进程、多服多进程的启动和部署方式&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;提供游戏文档生成的辅助功能&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;包体小、启动快、内存占用少&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;提供优雅的路由访问权限控制&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;提供了灵活的线程扩展、设置&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;具备智能的同进程亲和性&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;具备全链路调用日志跟踪特性&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;业务框架提供了插件机制，插件是可插拨、可扩展的&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;JSR380 验证、断言 + 异常机制 = 更少的维护成本&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;action 支持自动装箱、拆箱基础类型，用于解决&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的问题&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/blockquote&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 是一个专为网络编程设计的&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;轻量级&lt;/span&gt;&lt;span&gt;框架，它可以帮助你快速地搭建和运行自己的网络服务器。ioGame 适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景。如各种类型和规模的网络游戏，无论是 H5、手游还是 PC 游戏，无论是简单的聊天室，还是复杂的&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;全球同服&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;、回合制游戏、策略游戏、放置休闲游戏、即时战斗、&lt;/span&gt;&lt;span&gt;MMORPG 等，ioGame 都可以满足你的需求。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;ioGame 在打包、内存占用、启动速度等方面也是优秀的。打 jar 包后大约&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;15MB&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;，应用通常会在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;0.x 秒&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;内完成启动，内存占用小。详细请看&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzm6qg2%23LF8Qh&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;快速从零编写服务器完整示例&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#262626&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在生态融合方面，ioGame 可以很方便的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fevkgnz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;与&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;spring 集成&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（5 行代码）；除了 spring 外，还能与任何其他的框架做&lt;/span&gt;&lt;strong&gt;&lt;span&gt;融合&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，如：&lt;/span&gt;&lt;span&gt;solon&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;... 等，从而使用其他框架的相关生态。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;ioGame 在架构上解决了传统框架所产生的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;N*N 问题&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;（&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fcklv8p&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;与传统架构对比&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#262626&quot;&gt;）。传统架构在扩展机器时，需要借助很多第三方中间件，如：Redis、MQ、ZooKeeper ... 等，才能满足整体架构的运作。通常，只要引入了需要安装的中间件才能做到扩展的，那么你的架构或者说框架，基本上与轻量级无缘了。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在轻量级方面，ioGame&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;不依赖任何第三方&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;中间件或数据库&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;就能支持集群、分布式&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，只需要 java 环境就可以运行。这意味着在使用上简单了，在部署上也为企业减少了部署成本、维护难度。使用 ioGame 时，只需一个依赖即可获得整个框架，而无需安装其他服务，如： Nginx、Redis、MQ、Mysql、ZooKeeper、Protobuf 协议编译工具 ... 等。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 具备&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzurusq&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;全链路调用日志跟踪&lt;/span&gt;&lt;/a&gt;&lt;span&gt;特性，这在分布式下非常的实用。该特性为每个请求分配一个唯一标识，并记录在日志中，通过唯一标识可以快速的在日志中过滤出指定请求的信息。ioGame 提供的全链路调用日志跟踪特性更是强大，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;支持跨机器、跨进程&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。简单的说，从玩家的请求进来到结束，无论该请求经过了多少个游戏逻辑服，都能精准记录。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在通讯方式方面，大部分框架只能支持推送（广播）这一类型的通讯方式；ioGame 则提供了多种类型的通讯方式，通过对各种通讯方式的组合使用，可以简单完成以往难以完成的工作，并且这些通讯方式都支持跨进程、跨机器通信，且具备全链路调用日志跟踪。这些通讯方式分别是&lt;/span&gt;&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fkrzxcmgoispw0gl8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;请求响应&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（单次请求处理）&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fqv4qfo&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;广播&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（推送）&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fanguu6&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;单个逻辑服间的相互通讯&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（可跨机器通信、可跨进程通信）&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Frf9rb9&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;与同类型多个逻辑服相互通讯&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（可跨多个机器通信、可跨多个进程通信）&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzgaldoxz6zgg0tgn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;脉冲通讯&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（可跨多个机器通信、可跨多个进程通信）&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmxz33&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;分布式事件总线&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（类似 MQ、Redis 发布订阅机制；可跨多个机器通信、可跨多个进程通信）&lt;/span&gt;&lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在编码风格上，ioGame 为开发者提供了类 MVC 的编码风格（无入侵的 Java Bean ），这种设计方式很好的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;避免了类爆炸&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。同时，框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问；这使得开发者所编写的代码会非常的优雅，并且具备全链路调用日志跟踪。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;从 ioGame21 开始，框架添加了虚拟线程的相关支持。各逻辑服之间通信阻塞部分使用虚拟线程，这样可以很好的避免阻塞业务线程，并大幅提高了框架的吞吐量。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在线程安全方面，框架为开发者解决了单个玩家的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;并发问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;；即使玩家重新登录后，也会使用相同的线程来消费业务，并推荐使用&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmfy1k&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;领域事件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;来解决同一房间或业务内多个玩家的并发问题。&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Feixd6x&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;框架在线程的扩展性&lt;/span&gt;&lt;/a&gt;&lt;span&gt;上提供了友好的支持，开发者可以很容易的编写出无锁并发代码，这得益于 ioGame 独有的线程执行器设计与扩展。换句话说，你不会因为并发问题烦恼。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在无锁并发方面，ioGame 提供了优雅、独特的线程执行器设计。通过该特性，开发者能轻易的编写出无锁高并发的代码。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在连接方式方面，ioGame 允许开发者&lt;/span&gt;&lt;strong&gt;&lt;span&gt;使用一套业务代码&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;同时支持&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多种连接方式，无需进行任何修改。ioGame 已经支持了 TCP、WebSocket 和 UDP 连接方式，并且也支持在这几种连接方式之间进行灵活切换。连接方式是可扩展的，并且扩展操作也很简单，这意味着之后如果支持了 KCP，无论你当前项目使用的是 TCP、WebSocket 还是 UDP，都可以切换成 KCP；注意了，即使切换到 KCP 的连接方式，现有的业务代码也无需改变。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在通信协议方面，ioGame 让开发者&lt;/span&gt;&lt;strong&gt;&lt;span&gt;用一套业务代码&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，就能轻松&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fuq2zrltrc7to27bt&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;切换和扩展不同的通信协议&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，如 Protobuf、JSON 等。只需一行代码，就可以从 Protobuf 切换到 JSON，无需改变业务方法。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在增减协议方面，ioGame 可以让你在&lt;/span&gt;&lt;strong&gt;&lt;span&gt;新增或减少协议&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;时，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;无需重启&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;游戏对外服与 Broker（游戏网关）；这样既能避免玩家断线，又能避免因新增、减少协议而重启所有机器的痛点。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在协议碎片方面，action 支持自动装箱、拆箱基础类型特性，用于解决&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的问题。同时该特性除了能使你的业务代码更加清晰以外，还能大幅提高开发者在该环节的生产力。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在集群方面，ioGame 的 Broker （游戏网关）采用无中心节点、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fqmo56c&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;自动化的集群设计&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，所有节点平等且自治，不存在单点故障。集群能够&lt;/span&gt;&lt;strong&gt;&lt;span&gt;自动管理和弹性扩缩&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，节点加入或退出时，能够自动保证负载均衡和数据一致性，不影响服务可用性。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在分布式方面，ioGame 的逻辑服使用了分布式设计思想，将服务器分为&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwotnhl&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fensevx&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;游戏逻辑服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;等不同层次，并且每一层都有明确的职责和接口。这样可以提高代码可读性和可维护性，并且方便进行&lt;/span&gt;&lt;strong&gt;&lt;span&gt;水平扩展&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在学习成本方面，ioGame 的学习成本非常低，可以说是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;零学习成本&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，即使没有游戏编程经验，也能轻松上手。开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能用框架开发业务。框架不要求开发者改变编码习惯，而是自身适应开发者的需求。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Funp26u&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;同进程亲和性&lt;/span&gt;&lt;/a&gt;&lt;span&gt;方面，在同一进程内，不同 Netty 实例之间的通信，是通过内存进行传输的，不需要经过网络传输，数据传输速度极快。同进程亲和性指的是，优先访问同进程内的游戏逻辑服，当同进程内没有能处理请求的游戏逻辑服时，才会去其他进程或机器中查找能处理请求的游戏逻辑服；简单点说，框架对于请求的处理很智能，会优先将请求给同进程内的逻辑服消费。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在开发体验方面，ioGame 非常注重开发者的开发体验；框架提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fghng6g&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;JSR380 验证&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Favlo99&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;断言 + 异常机制&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fpf3sx0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;业务代码定位&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，action 支持自动装箱、拆箱基础类型，用于解决&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的问题 ... 等。诸多丰富的功能，使得开发者的业务代码更加的清晰、简洁；&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;业务框架提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fbsgvzglvlr5tenao&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;插件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;机制，插件是可插拨、可扩展的。框架内置提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fpf3sx0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;DebugInOut&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fznapzm1dqgehdyw8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;action 调用统计&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzoqabk4gez3bckis&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;业务线程监控插件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fumzk2d6lovo4n9gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;各时间段调用统计插件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;... 等插件；不同的插件提供了不同的关注点，比如我们可以使用调用、监控等插件相互配合，可以让我们在开发阶段就知道&lt;/span&gt;&lt;strong&gt;&lt;span&gt;是否存在性能问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。合理利用好各个插件，可以让我们在开发阶段就能知道问题所在，提前发现问题，提前预防问题。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在分布式开发体验方面，通常在开发分布式应用时是需要启动多个进程的。这会让调试与排查问题变得非常困难，从而降低开发者的效率、增加工作量等，这也是很多框架都&lt;/span&gt;&lt;strong&gt;&lt;span&gt;解决不了的问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，但 ioGame 做到了！ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分布式系统时更加简单。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;与前端对接联调方面，ioGame 提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Firth38&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;游戏文档生成&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的辅助功能，可以做到&lt;/span&gt;&lt;strong&gt;&lt;span&gt;代码即对接文档&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。简单地说，当业务代码编写完后，框架会自动生成最新的文本文档。ioGame 除了能提供文本文档的生成外，还能支持生成与客户端联调的代码（即代码文档）、并且是可扩展的。通常，客户端联调代码有：&lt;/span&gt;&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;&lt;span&gt;支持生成 C# 客户端的联调代码，通常用在 Unity、Godot 客户端，具体可阅读&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ffgrizbhz4qqzd1vl&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;SDK C# 代码生成&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;支持生成 TypeScript 客户端的联调代码，通常用在 cocos、laya 客户端，具体可阅读&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fmywnvkhemv8wm396&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;SDK TypeScript 代码生成&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。&lt;/span&gt;&lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;与前端对接联调方面，ioGame 提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fmywnvkhemv8wm396&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;生成与客户端联调的代码&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。代码生成可为客户端开发者减少巨大的工作量，并可为客户端开发者屏蔽路由等概念。直接面向接口编程，面向接口编程的几个优点&lt;/span&gt;&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;&lt;span&gt;帮助客户端开发者减少巨大的工作量。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;为双方联调&lt;/span&gt;&lt;strong&gt;&lt;span&gt;减少心智负担&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。联调代码使用简单，与本地方法调用一般丝滑。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;帮助客户端开发者屏蔽与服务器交互部分，将更多的精力放在真正的业务上。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;方法&lt;/span&gt;&lt;strong&gt;&lt;span&gt;参数类型安全、明确&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。可有效避免安全隐患，从而减少联调时的低级错误。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;减少服务器与客户端双方对接时的沟通成本，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;代码即文档&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。生成的联调代码中有文档与使用示例，即使是新手，也能将使用成本拉到 0。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;抛弃传统面向协议的对接方式，使用直观易用面向接口的对接方式。传统的对接方式，在客户端发送请求后并不能知道该请求会返回什么，这通常需要在协议文件中阅读与查找。如果协议较少时，这样做的问题并不大，但如果有数百个协议时，这样的工作方式是低效的，因为协议文件中存在着大量的干扰因素。&lt;/span&gt;&lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;在部署方面，ioGame 支持&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;多服单进程&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;的方式部署，也支持&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;多服多进程&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;多机器的方式部署；在部署方式上可以随意的切换而不需要更改代码。日常中我们可以按照单体思维开发，到了生产可以选择使用多进程的方式部署。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;在安全方面，所有的游戏逻辑服&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fcklv8p%23NQ6Oc&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;不需要开放端口，天然地避免了扫描攻击&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#262626&quot;&gt;。由于不需要为每个逻辑服分配独立的端口，那么我们在使用诸如云服务器之类的服务时，就不需要担心端口开放权限的问题了。别小看这一个环节，通常这些小细节最浪费开发者的时间。由于我们不需要管理这些 IP:Port，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;这部分的工作量就自然地消失了&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;在模拟客户端测试方面，ioGame 提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ftc83ud&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;压测 &amp;amp; 模拟客户端请求&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#333333&quot;&gt;模块。此模块是用于模拟客户端，简化模拟工作量，只需要编写对应请求与回调。除了可以模拟简单的请求外，通常还可以做一些复杂的请求编排，并支持复杂业务的压测。&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;与单元测试不同的是，该模块可以模拟真实的网络环境，并且在模拟测试的过程中与服务器的交互是可持续的、可互动的，同时也是支持自动化的&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzqgdv3g9if8w37vr&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;架构灵活性&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;方面，ioGame 的架构由三部分组成：1. 游戏对外服、2.Broker（游戏网关）、3. 游戏逻辑服；三者既可相互独立，又可相互融合。这意味着使用 ioGame 可以&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;适应任何类型的游戏&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，因为只需通过调整部署方式，就可以满足不同类型的游戏需求。在 ioGame 中进行这些调整工作非常简单，而且不会对现有代码产生不良影响。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;架构是可以动态扩缩的，游戏对外服、游戏逻辑服、Broker（游戏网关）都&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持动态增加和减少&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;。无论未来玩家数量增加或减少，我们都能够轻松应对。同时，架构是&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持玩家无感知更新&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;的，这得益于分布式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;开发者基于 ioGame 编写的项目模块，通常是条理清晰的，得益于框架对&lt;/span&gt;&lt;strong&gt;&lt;span&gt;路由的合理设计&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，同时也为路由提供了优雅的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fnap5y8p5fevhv99y&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;访问权限控制&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。当我们整理好这些模块后，对于其他开发者接管项目或后续的维护中，会是一个不错的帮助（&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fruaqza%2F%23OBwXQ&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;模块的整理与建议&lt;/span&gt;&lt;/a&gt;&lt;span&gt;）。或许现阶段你感受不到这块的威力，随着你深入地使用实践就能体会到这么设计的诸多好处与优势。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;开发者基于 ioGame 编写的项目，通常是语法简洁的、高性能的、低延迟的。框架最低要求使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;JDK21&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;，这样即可以让项目享受到&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;分代 ZGC&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;带来的改进，还能享受语法上的简洁。分代 ZGC 远低于其&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;亚毫秒级&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;暂停时间的目标，&lt;/span&gt;&lt;span&gt;可以在不影响游戏速度的情况下，清理掉多余的内存；这样就不会出现卡顿或者崩溃的问题了，&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;相当于在项目中变相的引入了一位 JVM 调优大师。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;综上所述，ioGame 是一个非常适合网络游戏开发的框架。可以让你轻松地创建高性能、低延迟、易扩展的游戏服务器，并且节省时间和资源。如果你想要快速地开发出令人惊艳的网络游戏，请不要犹豫，立即选择 ioGame 吧！框架&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;屏蔽了很多复杂且重复性的工作，并可为项目中的功能模块结构、开发流程等进行&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;清晰的组织定义&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;，减少了后续的项目维护成本。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;框架在开发、部署、压测 &amp;amp; 模拟测试 ... 等，各个阶段都提供了很好的支持。&lt;/span&gt;&lt;span&gt;相信你已经对 ioGame 有了一个初步的了解，虽然还有很多丰富的功能与特性没有介绍到，但你可以通过后续的实践过程中来深入了解。感谢你的阅读，并期待你使用 ioGame 来打造自己的游戏服务器。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
   &lt;hr&gt; 
   &lt;h2&gt;&lt;span&gt;ioGame 的组成&lt;/span&gt;&lt;/h2&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;ioGame 由 [&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;网络通信框架&lt;/span&gt;&lt;span&gt;] 和 [&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;业务框架&lt;/span&gt;&lt;span&gt;] 组成&lt;/span&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;网络通信框架：职责是各服务器之间的网络通信&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;业务框架：职责是业务逻辑的处理方式和编写方式&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;网络通信框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sofastack.tech%2Fprojects%2Fsofa-bolt%2Foverview%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;SOFABolt&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;是蚂蚁金融服务集团开发的一套基于 Netty 实现的网络通信框架。&lt;/span&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span&gt;为了让 Java 程序员能将&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;更多的精力放在&lt;/span&gt;&lt;span&gt;基于网络通信的&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;业务逻辑实现上&lt;/span&gt;&lt;span&gt;，而不是过多的纠结于网络底层 NIO 的实现以及处理难以调试的网络问题，Netty 应运而生。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;为了让中间件开发者能将更多的精力放在产品功能特性实现上，而不是重复地一遍遍制造通信框架的轮子，SOFABolt 应运而生。&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;Bolt 名字取自迪士尼动画 - 闪电狗，是一个基于 Netty 最佳实践的&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;轻量、易用、高性能、易扩展&lt;/span&gt;&lt;span&gt;的通信框架。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;业务框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;如果说&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;sofa-bolt&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;是为了让 Java 程序员能&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;将更多的精力放在基于网络通信的业务逻辑实现上&lt;/span&gt;&lt;span&gt;。而业务框架正是&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;解决&lt;/span&gt;&lt;span&gt;业务逻辑&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;如何方便实现&lt;/span&gt;&lt;span&gt;这一问题上。业务框架是游戏框架的一部分，职责是简化程序员的业务逻辑实现，业务框架使程序员能够快速的开始编写游戏业务。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;业务框架对于每个 action （即业务的处理方法） 都是通过&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/p/reflectasm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;asm&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;与 Singleton、Flyweight 、Command 等设计模式结合，对 action 的获取上通过 array 来得到，是一种近原生的方式。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;单线程中，业务框架平均每秒可以执行 1152 万次业务逻辑。&lt;/p&gt; 
   &lt;hr&gt; 
   &lt;div&gt; 
    &lt;h2&gt;&lt;span&gt;架构简图&lt;/span&gt;&lt;/h2&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;387&quot; src=&quot;https://oscimg.oschina.net/oscnet/12963674_5475.jpeg&quot; width=&quot;621&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;通过 ioGame 你可以很容易的搭建出一个集群无中心节点、集群自动化、分布式的网络游戏服务器！&lt;/span&gt;&lt;/p&gt; 
    &lt;blockquote&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;从图中可以看出，游戏网关支持以集群方式启动多个实例。这个设计选择了集群的方式，因为游戏网关通常是无状态的，主要作用是解耦各逻辑服之间的关系、负载均衡、调度和转发任务。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;而游戏对外服、游戏逻辑服使用分布式设计，支持启动多个相同类型的服务。这意味着，当玩家数量增加时，我们可以轻松增加相应类型的游戏逻辑服以处理更多请求。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;以游戏逻辑服为例，假设我们启动了两个 A 类型的游戏逻辑服，分别为 A-1 和 A-2。当玩家向 A 类型的游戏逻辑服发起多次请求时，游戏网关会使用默认的随机负载策略将请求分配给 A-1 和 A-2 来处理。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;现在我们明白，游戏对外服和游戏逻辑服都支持动态增加和减少。无论未来玩家数量增加或减少，我们都能够轻松应对。架构是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;支持玩家无感知更新&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的，这得益于分布式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;此外，框架还支持玩家&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fidl1wm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;动态绑定游戏逻辑服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;；玩家与游戏逻辑服绑定后，之后的请求都由该游戏逻辑服来处理。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;除了游戏之外，ioGame 也适用于物联网相关项目。只需将图中的玩家视为具体的设备，即使存在数亿个设备，ioGame 的架构也可以轻松支持。从 2022 年开始，已经有一些物联网公司开始采用这一解决方案，并得到了很好的体验。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景；&lt;/span&gt;&lt;/p&gt; 
    &lt;/blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;无锁异步化与事件驱动的架构设计、集群无中心节点、自带负载均衡、分布式支持、可动态增减机器、避免类爆炸的设计；&lt;/span&gt;&lt;/p&gt; 
    &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border-spacing:1px; border:1px solid #d9d9d9; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 20px; max-width:100%; overflow:auto; table-layout:fixed; width:583px; word-break:keep-all&quot;&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td style=&quot;background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;名称&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;扩展方式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;职责&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;与玩家连接、交互&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;游戏逻辑服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;处理具体业务逻辑&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;Broker（游戏网关）&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;集群&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;调度和转发任务；&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
    &lt;hr&gt; 
    &lt;h2&gt;通过 ioGame 可以使得游戏编程变得简单，下面是一个业务示例&lt;/h2&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;协议文件定义&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;首先我们自定义一个协议文件，这个协议文件作为我们的业务载体描述。这个协议是纯 java 代码编写的，使用的是 jprotobuf，jprotobuf 是对&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;google protobuf&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;的简化使用，性能同等。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;可以把这理解成 DTO、POJO、业务数据载体等，其主要目的是用于业务数据的传输；&lt;/span&gt;&lt;/p&gt; 
    &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;/** 请求 */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@ProtobufClass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@FieldDefaults&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(level = AccessLevel.PUBLIC)
public class HelloReq {
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;Action&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;游戏服务器的编程，游戏服务器接收业务数据后，对业务数据进行处理；下面这段代码可以同时支持 TCP、WebSocket、UDP 通信方式。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;示例代码中展示了玩家的请求与响应处理，还展示了跨服（跨进程、跨机器）的请求处理的示例。&lt;/span&gt;&lt;span style=&quot;background-color:#f5f5f5; color:#262626&quot;&gt;无入侵的 Java Bean。&lt;/span&gt;&lt;/p&gt; 
    &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ActionController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;DemoAction&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ActionMethod&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; HelloReq &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(HelloReq helloReq)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 业务数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; newHelloReq = &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; HelloReq();
        newHelloReq.name = helloReq.name + &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;, I&#39;m here &quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; newHelloReq;
    }

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 注意，这个方法只是为了演示而写的；（ioGame21 开始支持）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 效果与上面的方法一样，只不过是用广播（推送）的方式将数据返回给请求方&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ActionMethod&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(HelloReq helloReq, FlowContext flowContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 业务数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; newHelloReq = &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; HelloReq();
        newHelloReq.name = helloReq.name + &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;, I&#39;m here &quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

        flowContext.broadcastMe(newHelloReq);
    }

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 跨服调用示例，下面分别展示了同步与异步回调的写法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;testShowInvokeModule&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(FlowContext flowContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;/* * 框架为跨服请求提供了同步、异步、异步回调的编码风格 api。（ioGame21 开始支持） */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; cmdInfo = CmdInfo.of(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; yourData = ... 你的请求参数
        
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 跨服请求（异步回调 - 无阻塞）-- 路由、请求参数、回调。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        flowContext.invokeModuleMessageAsync(cmdInfo, yourData, responseMessage -&amp;gt; {
            &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; helloReq = responseMessage.getData(HelloReq&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
             &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// --- 此异步回调，具备全链路调用日志跟踪 ---&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
            log.info(&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;异步回调 : {}&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, helloReq);
        });


        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 跨服请求（同步 - 阻塞）-- 路由、请求参数。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        ResponseMessage responseMessage = flowContext.invokeModuleMessage(cmdInfo, yourData);
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; helloReq = responseMessage.getData(HelloReq&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
        log.info(&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;同步调用 : {}&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, helloReq);
    }
}&lt;/code&gt;&lt;/pre&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;一个方法（here）在业务框架中表示一个&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsqcevl&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Action&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（一个业务动作）。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;方法声明的参数是用于接收前端传入的业务数据，在方法 return 时，数据就可以被游戏前端接收到。程序员可以不需要关心业务框架的内部细节。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;从上面的示例可以看出，这和普通的 java 类并无区别，同时这种设计方式&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#fa8c16&quot;&gt;避免了类爆炸&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。如果&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;只负责编写游戏业务&lt;/span&gt;&lt;span&gt;，那么对于业务框架的学习可以&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;到此为止&lt;/span&gt;&lt;span&gt;了。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;游戏编程就是如此简单&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;问：我可以开始游戏服务&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;器&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;的编程了吗？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;是的，你已经可以开始游戏服务&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;器&lt;/span&gt;&lt;span&gt;的编程了。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;访问示例（控制枱）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;当我们访问&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;here&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;方法时（通常由游戏前端来请求），控制枱将会打印&lt;/span&gt;&lt;/p&gt; 
    &lt;pre&gt;&lt;code&gt;┏━━━━━ &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;Debug&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[(DemoAction.java:4).hello]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[cmd:1-0 65536]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[逻辑服 [xxx 逻辑服]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[76526c134cc88232379167be83e4ddfc]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]
┣ &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;userId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
┣ 参数: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;active&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(id=&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;101&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, name=塔姆)
┣ 响应: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(name=塔姆, I&#39;m here )
┣ 时间: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (业务方法总耗时)
┗━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[ioGameVersion]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[线程:User-8-2]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[traceId:956230991452569600]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━&lt;/code&gt;&lt;/pre&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;控制枱打印说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;blockquote&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;Debug. [(DemoAction.java:4).here]&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;表示执行业务的是&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;DemoAction&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;类下的&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;here&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;方法，&lt;/span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;表示业务方法所在的代码行数。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在工具中点击控制枱的&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;DemoAction.java:4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;这条信息，就可以跳转到对应的代码中（&lt;/span&gt;&lt;span style=&quot;color:#52c41a&quot;&gt;快速导航到对应的代码&lt;/span&gt;&lt;span&gt;），这是一个开发良好体验的开始！&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;userId&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: 当前发起请求的，用户 id。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;参数&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: 通常是游戏前端传入的值。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;响应&lt;/span&gt;&lt;span&gt;：通常是业务方法返回的值 ，业务框架会把这个返回值推送到游戏前端。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;时间&lt;/span&gt;&lt;span&gt;：执行业务方法总耗时，我们可根据业务方法总耗时的时长来优化业务。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;路由信息&lt;/span&gt;&lt;span&gt;：[cmd - subCmd]&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsoxp4u&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;路由&lt;/span&gt;&lt;/a&gt;&lt;span&gt;是唯一的访问地址。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;ioGameVersion&lt;/span&gt;&lt;span&gt;：表示当前所使用的 ioGame 版本。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;线程&lt;/span&gt;&lt;span&gt;：当前执行 action 所使用的线程。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;traceId&lt;/span&gt;&lt;span&gt;：全链路调用日志跟踪 id，每个请求唯一。（该特性在分布式下非常实用）&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;逻辑服&lt;/span&gt;&lt;span&gt;：当前游戏逻辑服与其 id&lt;/span&gt;&lt;/p&gt; 
    &lt;/blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;有了以上信息，游戏开发者可以很快的定位问题。如果没有可视化的信息，开发中会浪费很多时间在前后端的沟通上。问题包括：&lt;/span&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span&gt;是否传参问题 （游戏前端说传了）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;是否响应问题（游戏后端说返回了）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;业务执行时长问题 （游戏前端说没收到响应， 游戏后端说早就响应了）&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;其中&lt;/span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;代码导航&lt;/span&gt;&lt;span&gt;可以让开发者快速的跳转到业务类对应代码中，在多人合作的项目中，可以快速的知道业务经过了哪些方法的执行，使得我们可以快速的进行阅读或修改；&lt;/span&gt;&lt;/p&gt; 
    &lt;hr&gt; 
    &lt;h2&gt;&lt;span&gt;框架内置的其他功能&lt;/span&gt;&lt;/h2&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span&gt;内置多种可选模块，可按需选择，以方便应用开发：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmfy1k&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;领域事件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;（&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;轻量级&lt;/span&gt;&lt;span&gt;单机最快 MQ --&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;disruptor&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;；通过&lt;/span&gt;&lt;span&gt;领域事件模块，可为你的系统实现类似 Guava-EventBus、Spring 事件驱动模型 ApplicationEvent、业务解耦、规避并发、不阻塞主线程... 等，各种浪操作）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fniflk0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;任务延时器&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;（将来某个时间可对任务进行执行、暂停、取消等操作，并不是类似 Quartz 的任务调度）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fekx6ve&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;多环境切换&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;（不同运行环境下的配置支持）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fvpe2t6&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;light-jprotobuf&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;补足 jprotobuf 不能让多个对象在单个 .proto 源文件中生成的需求，并简化 jprotobuf 对源文件的注释&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwz7af5&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;分布式锁&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(基于 Redisson 的简单实现)&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fvtzbih&quot; target=&quot;_blank&quot;&gt;room 桌游、房间类&lt;/a&gt;，该模块是桌游类、房间类游戏的解决方案。比较适合桌游类、房间类的游戏基础搭建，基于该模型可以做一些如，炉石传说、三国杀、斗地主、麻将 ... 等类似的桌游。或者说只要是房间类的游戏，该模型都适用。比如，CS、泡泡堂、飞行棋、坦克大战 ... 等。&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span&gt;内置的其他功能：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fuueq3i&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;心跳相关&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fhv5qqh&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;用户上线、离线相关的钩子方法&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwg6lk7&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;UserSessions&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;（对所有用户 UserSession 的管理，统计在线用户等）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwg6lk7&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;UserSession&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(与 channel 是 1:1 的关系，可取到对应的 userId、channel 等信息。)&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ftywkqv&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;登录相关&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（提供重复登录、顶号等相关增强功能）&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;业务参数基础类型，自动装箱、拆箱&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（解决协议碎片）&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;hr&gt; 
    &lt;h2&gt;&lt;span&gt;适合人群？&lt;/span&gt;&lt;/h2&gt; 
    &lt;ol&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;长期从事 web 内部系统开发人员， 想了解游戏的&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;刚从事游戏开发的&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;未从事过游戏开发，但却对其感兴趣的&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;对设计模式在实践中的应用和 sofa-bolt 有兴趣的学习者&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span&gt;可以接受新鲜事物的&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#40485b&quot;&gt;想放弃祖传代码的&lt;/span&gt;&lt;/li&gt; 
    &lt;/ol&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;推荐实际编程经验一年以上的人员。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;ioGame&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;提供了丰富的在线高质量使用文档，为你的团队助力，带上你们的小伙伴一起，这样就不用手把手的教了。&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303680/iogame-21-13-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303680/iogame-21-13-released</guid>
            <pubDate>Wed, 24 Jul 2024 08:05:40 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开放签电子签章工具版 bug 修复日志及迭代计划</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;近两月根据开源用户的反馈，主要解决非 A4 版式和纸张方向横竖版座标计算问题、及其他常见小问题，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;请大家及时更新同步代码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/19563556e9029a1dadd1d8c1c050650b9975e592&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决本地签发证书格式化时间错误的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/6f640a7f2fe57146fe46b16cbf4d43abedb7d4ff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决无效时间戳验签失败的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/e7af0df81c41ff76e0dd364f273bac8ba236f19e&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决 CA 时间小于本地时间的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/c70530fc9d890ffc56d8d189358b7b37cb29b1b5&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决关键字签署签名图片大小自定义的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/ddc585ce07a76681916ff79e52d3128acfcbd6b1&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决签署后文件的权限修改的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/520f57d5e72297e9303cc2c2b223fb7abb684e5e&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决文件旋转过后 PDF 关键字位置不准确的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/f47cd03be4ccfae41318b566940cf45c2efe1c7b&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决 BC 无法解析的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/kaifangqian/kaifangqian-base/commit/691a532f710e8ef92ff0b1d51b661e3ac0b033dc&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决非标准 A4 版式关键字签署位置错位的问题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同样根据用户的需求反馈，工具版下一步重点计划将放在场景式接口开发，比如实名认证、制章流程、BtoC 签约场景、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;BtoB 签约场景、创建合同草稿、意愿校验签约、签章撤销等接口，目的近一步减少集成电子签章业务场景的开发，同时部分接口也会配备相应的前端页面，减少重复造轮子的过程。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303666</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303666</guid>
            <pubDate>Wed, 24 Jul 2024 07:37:40 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Docker 27.1.1 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Docker 27.1.1 现已发布。&lt;/p&gt; 
&lt;p&gt;此版本包含对 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcve.mitre.org%2Fcgi-bin%2Fcvename.cgi%3Fname%3DCVE-2024-41110&quot; target=&quot;_blank&quot;&gt;CVE-2024-41110&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Fsecurity%2Fadvisories%2FGHSA-v23v-6jw2-98fq&quot; target=&quot;_blank&quot;&gt;GHSA-v23v-6jw2-98fq&lt;/a&gt; 的修复，该漏洞影响了使用&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.docker.com%2Fengine%2Fextend%2Fplugins_authorization%2F&quot; target=&quot;_blank&quot;&gt;授权插件 (AuthZ)&lt;/a&gt; 进行访问控制的设置。此版本不包含其他更改，对不使用 AuthZ 插件的用户而言，此版本与其他版本完全相同。&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;Packaging updates&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新 Compose 至&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fcompose%2Freleases%2Ftag%2Fv2.29.1&quot; target=&quot;_blank&quot;&gt;v2.29.1&lt;/a&gt;。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdocker%2Fdocker-ce-packaging%2Fpull%2F1041&quot; target=&quot;_blank&quot;&gt;moby/docker-ce-packaging#1041&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmoby%2Fmoby%2Freleases%2Ftag%2Fv27.1.1&quot; target=&quot;_blank&quot;&gt;https://github.com/moby/moby/releases/tag/v27.1.1&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303644/docker-27-1-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303644/docker-27-1-1-released</guid>
            <pubDate>Wed, 24 Jul 2024 05:42:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>GNU C Library 2.40 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;GNU C Library 2.40 已发布，GNU C Library 被设计为可移植和高性能的 C 库。它遵循所有相关标准，包括 ISO C11 和 POSIX.1-2017，也是已知的最完善的国际化接口之一，广泛应用于&amp;nbsp;GNU/Linux 系统以及其他使用 Linux 内核的系统。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此版本带来了包括对 ISO C23 标准的部分支持、一个用于测试 setuid 程序的新可调程序、改进的 64 位 Arm 向量支持，以及一些安全修复。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;主要新功能包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;当使用 GCC 14.1 或更高版本来使用 __builtin_stdc_bit_ceil 等内置函数时，&amp;lt;stdbit.h&amp;gt; header type-generic macros 已被更改，以便在目标文件支持时，支持具有任意精度的&amp;nbsp;unsigned __int128 和/或 unsigned _BitInt(N) 操作数。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;GNU C 库现在支持功能测试宏 _ISOC23_SOURCE，以启用 ISO C23 标准中的功能。GNU C 库仅支持此标准中的部分功能。旧名称 _ISOC2X_SOURCE 仍受支持。C23 中的功能也可通过 _GNU_SOURCE 启用，或通过使用 GCC 选项 -std=c23、-std=gnu23、-std=c2x 或 -std=gnu2x 进行编译来启用。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;lt;math.h&amp;gt; 中现在支持以下 ISO C23 函数系列（在 TS 18661-4:2015 中引入）。每个系列都包含 float、double、long double、_FloatN 和 _FloatNx 函数，以及 &amp;lt;tgmath.h&amp;gt; 中的 type-generic 宏。&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;指数函数：exp2m1、exp10m1。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对数函数：log2p1、log10p1、logp1。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;可以使用新的可调参数 glibc.rtld.enable_secure 来运行程序，就像它是 setuid 进程一样。目前，这是一个测试工具，用于对 AT_SECURE 程序进行更广泛的验证测试，并非安全功能。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 Linux 上，epoll header 已更新，包含 epoll ioctl 定义以及 Linux kernel 6.9 中添加的相关结构。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;fortify 功能已得到显著增强，可用于使用 clang 针对 GNU C 库构建程序。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;为 aarch64 的矢量库添加了许多函数： acosh、asinh、atanh、cbrt、cosh、erf、erfc、hypot、pow、sinh、tanh&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 x86 上，memset 现在可以使用 non-temporal stores 来提高大量写入的性能。此行为由新的可调参数 x86_memset_non_temporal_threshold 控制。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详细信息可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.gnu.org%2Farchive%2Fhtml%2Finfo-gnu%2F2024-07%2Fmsg00013.html&quot; target=&quot;_blank&quot;&gt;参阅发布公告&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303621/gnu-c-lib-2-40-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303621/gnu-c-lib-2-40-released</guid>
            <pubDate>Wed, 24 Jul 2024 03:25:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>云原生 Kafka AutoMQ 1.1.2-rc0 正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;h2&gt;AutoMQ 介绍&lt;/h2&gt; 
 &lt;div&gt;
  Apache Kafka 自诞生之日起，就以其卓越的设计和强大的功能，很快成为了流系统领域的事实标准。它不仅定义了现代流系统的架构，更以其独特的分布式日志抽象，为实时数据流的处理和分析提供了前所未有的能力。Kafka 的成功，在于它能够满足各种规模企业对于高吞吐量、低延迟数据处理的需求，经过多年的发展铸就了极其丰富的 Kafka 生态并被广泛应用于各种生产场景。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  然而，随着云计算和云原生技术的飞速发展，Kafka 面临的挑战也日益严峻。传统的存储架构已难以适应云环境下用户对更优成本、弹性的诉求，这引发了大家对 Kafka 存储模型的重新思考。分层存储（Tiered Storage）一度被视为可能的解决方案，它试图通过将数据分层存储在不同的介质上，来降低成本并延长数据的生命周期。但实践表明，这种方法并没有彻底解决 Kafka 的痛点，反而增加了系统的复杂性和运维难度。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq&quot; target=&quot;_blank&quot;&gt;AutoMQ&lt;/a&gt; 是一个源代码开放的 Kafka 分叉项目，通过存算分离的方式将 Kafka 的存储层替换成了基于 S3 和 EBS 的共享存储架构，并且复用了 Kafka 100% 的计算层代码，保证了对 Kafka API 协议和生态的完全兼容。如下图所示，通过这种创新的共享存储架构，不仅获得了共享存储带来的技术和成本优势，彻底解决了原有 Kafka 在成本、弹性等方面的弊病，同时不会牺牲延迟。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h2&gt;与其他流系统的对比&lt;/h2&gt; 
 &lt;div&gt; 
  &lt;table cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border:none; table-layout:fixed; width:500px&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       特性
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       AutoMQ
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Apache Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Confluent
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Apache Pulsar
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Redpanda
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Warpstream
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Apache Kafka 兼容性[1]
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       原生 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       原生 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       原生 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       非 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Kafka 协议兼容
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Kafka 协议兼容
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是否开源
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       无状态 Broker
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       P99 延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.warpstream.com%2Fblog%2Fwarpstream-benchmarks-and-tco&quot; target=&quot;_blank&quot;&gt;&amp;gt; 1200 毫秒&lt;/a&gt;
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       持续自平衡
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       扩展/缩减效率
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时/天计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计 (缩减);
      &lt;/div&gt; 
      &lt;div&gt;
       以秒计 (扩展)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; 
      &lt;div&gt;
       以秒计 (仅限企业版)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Spot 实例支持
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       分区重新分配
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时/天计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; 
      &lt;div&gt;
       以秒计 (仅限企业版)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       组件
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       ZooKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       (非 KRaft)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       ZooKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       (非 KRaft)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       ZooKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       BookKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       (可选)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理元数据服务器
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       持久性
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 S3/EBS 保证[2]
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 ISR 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 ISR 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 BookKeeper 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 Raft 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 S3 保证
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       跨可用区网络费用
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
   [1] Apache Kafka 兼容性的定义来自这篇 
   &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kai-waehner.de%2Fblog%2F2021%2F05%2F09%2Fkafka-api-de-facto-standard-event-streaming-like-amazon-s3-object-storage%2F&quot; target=&quot;_blank&quot;&gt;博客&lt;/a&gt;。
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
   [2] EBS 持久性：在 Azure、GCP 和阿里云上，区域 EBS 副本跨多个可用区。在 AWS 上，通过在不同可用区的 EBS 和 S3 Express One Zone 进行双写来确保持久性。
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;h2&gt;创新的存储架构&lt;/h2&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet/.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;h2&gt;更新内容&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;fix(log):&lt;span style=&quot;color:#000000&quot;&gt; 修复消费者偏移负载缺失的问题&lt;/span&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx&quot; target=&quot;_blank&quot;&gt;，作者@superhx&lt;/a&gt;，&lt;/strong&gt;&lt;span&gt;PR&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1606&quot; target=&quot;_blank&quot;&gt;#1606&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;fix(auto_balancer): 修复潜在的内存泄漏 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1612&quot; target=&quot;_blank&quot;&gt;#1612&lt;/a&gt;)&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh&quot; target=&quot;_blank&quot;&gt;，作者@SCNieh&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;，&lt;/strong&gt;PR&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1613&quot; target=&quot;_blank&quot;&gt;#1613&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;fix(build): 修复 e2e 测试版本检查&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShadowySpirits&quot; target=&quot;_blank&quot;&gt;，作者@ShadowySpirits&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;，&lt;/strong&gt;PR&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1624&quot; target=&quot;_blank&quot;&gt;#1624&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;fix(build): 更新 docker-compose.yaml&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShadowySpirits&quot; target=&quot;_blank&quot;&gt;，作者@ShadowySpirits&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;，&lt;/strong&gt;PR&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1628&quot; target=&quot;_blank&quot;&gt;#1628&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;关于我们&lt;/h3&gt; 
 &lt;div&gt;
  AutoMQ 是来自 Apache RocketMQ 和 Linux LVS 项目的核心团队，曾经见证并应对过消息队列基础设施在大型互联网公司和云计算公司的挑战。现在我们基于对象存储优先、存算分离、多云原生等技术理念，重新设计并实现了 Apache Kafka 和 Apache RocketMQ，带来高达 10 倍的成本优势和百倍的弹性效率提升。
 &lt;/div&gt; 
 &lt;div&gt;
  🌟 GitHub 地址： 
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ&quot;&gt;https://github.com/AutoMQ&lt;/a&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  💻 官网： https://www.automq.com?utm_source=oschina
 &lt;/div&gt; 
 &lt;div&gt;
  👀 B 站： 
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546572478482870&quot;&gt;AutoMQ 官方账号&lt;/a&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  🔍 视频号：AutoMQ
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303614/automq-for-kafka-1-1-2-rc0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303614/automq-for-kafka-1-1-2-rc0</guid>
            <pubDate>Wed, 24 Jul 2024 02:46:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>UJCMS 9.6.0 发布，Java CMS 网站内容管理系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增数据迁移功能&lt;/li&gt; 
 &lt;li&gt;修复自定义的模型在保存文件时，后台报 Integer 超出范围&lt;/li&gt; 
 &lt;li&gt;修复开启留言需登录功能后，前台页面点击留言时报错&lt;/li&gt; 
 &lt;li&gt;增加留言类型演示数据&lt;/li&gt; 
 &lt;li&gt;修复下载页面的赞、踩问题&lt;/li&gt; 
 &lt;li&gt;增加全文检索排序功能&lt;/li&gt; 
 &lt;li&gt;增加全文检索高级搜索功能&lt;/li&gt; 
 &lt;li&gt;增加对 MariaDB 数据库的支持&lt;/li&gt; 
 &lt;li&gt;文章审核数据按任务创建时间倒序排序&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;Java 开源网站内容管理系统 (java cms)、Java 建站系统。使用 SpringBoot、MyBatis、Spring Security、Lucene、FreeMarker、TypeScript、Vue3、ElementPlus 等技术开发。使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Apache-2.0&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;开源协议，可免费用于商业网站。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;支持无头 CMS，可使用模板 (Freemarker)+ 标签或 Vue (React)+API 方式制作网站。支持自定义字段及字段可视化设计，自定义字段在前后端均可作为搜索条件。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;技术上尽量选择主流、先进、简单的架构，方便用户进行二次开发。设计上强调 「简单」、「灵活」，避免繁杂的设计和实现，降低系统维护成本和二次开发难度。功能使用上也要求 「简单」，避免复杂的使用逻辑。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;官网地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ujcms.com%2F&quot; target=&quot;_blank&quot;&gt;https://www.ujcms.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;下载地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ujcms.com%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;https://www.ujcms.com/download/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供安装包下载。&lt;/li&gt; 
 &lt;li&gt;演示站前台：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2F&quot; target=&quot;_blank&quot;&gt;https://demo.ujcms.com&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用手机访问或者浏览器手机模式访问前台，会自动呈现手机页面。&lt;/li&gt; 
 &lt;li&gt;演示站后台：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2Fcp%2F&quot; target=&quot;_blank&quot;&gt;https://demo.ujcms.com/cp/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API、标签及对象文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2Fswagger-ui%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://demo.ujcms.com/swagger-ui/index.html&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;技术及功能亮点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;自定义字段&lt;/strong&gt;：文章、栏目等模块支持自定义字段，方便满足客户的不同需求。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;自定义字段可查询&lt;/strong&gt;：支持自定义字段，且所有的自定义字段都可查询，极大地增强了系统的灵活性。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;自定义字段可视化设计&lt;/strong&gt;：自定义字段使用拖拽式的可视化设计，所见即所得。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;MyBatis 参数化查询&lt;/strong&gt;：数据通常会需要通过不同字段进行搜索，对每个表都写大量的查询，无疑是一项繁重的工作。MyBatis 参数化查询功能通过前台传递查询参数，即可实现任意字段及关联表的查询功能（如：Q_title=abc，Q_user-username=test），无需后台编写代码，大幅减少后端的开发工作量。后台开发和前台标签（API）均可使用参数化查询，因此标签（API）几乎可以实现任意查询效果。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;URL 地址 SEO 优化&lt;/strong&gt;：栏目和文章的动态地址可以通过系统的全局设置功能进行修改。默认的栏目和文章 URL 地址前缀为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/channel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/article&lt;/code&gt;，可以根据自己的需要修改，如改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/categories&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/archives&lt;/code&gt;。多站点的情况下，子站点 URL 地址可为目录形式 (&lt;code&gt;www.example.com/abc&lt;/code&gt;) 或次级域名形式 (&lt;code&gt;abc.example.com&lt;/code&gt;)。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;清理垃圾附件&lt;/strong&gt;：系统使用时，可能会多传、误传图片等附件；在删除文章后，文章中的图片还保留在系统中，产生大量的未使用的垃圾图片和附件。系统中的附件管理可以查看所有未使用的图片和附件，并可对其进行删除。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;附件、模板、索引文件独立部署&lt;/strong&gt;：系统运行时产生的文件可以和程序分开，部署到独立的目录，方便系统备份、升级和管理。比如上传的图片和附件、前台的模板、索引文件，都可以部署到程序以外的目录。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;模板文件和 CSS、JS 在同一目录&lt;/strong&gt;：模板文件和 CSS、JS 分开的目录结构，会给模板制作和部署带来很大的不便性。而将模板文件和 CSS、JS 放在一起的设计，会方便很多。&lt;/li&gt; 
 &lt;li style=&quot;color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: left;&quot;&gt;&lt;strong&gt;主副表拆分&lt;/strong&gt;：对查询量大的复杂表进行主副表拆分，把常用查询字段放到主表，不常用的字段放到副表，提升大数据量下的性能表现。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;后端技术&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;SpringBoot：提供了对 Spring 开箱即用的功能。简化了 Spring 配置，提供自动配置 auto-configuration 功能。&lt;/li&gt; 
 &lt;li&gt;SpringMVC：MVC 框架，使用方便，Bug 较少。&lt;/li&gt; 
 &lt;li&gt;SpringSecurity：安全组件。&lt;/li&gt; 
 &lt;li&gt;Mybatis：持久化框架。&lt;/li&gt; 
 &lt;li&gt;FreeMarker：网站前台模板引擎。&lt;/li&gt; 
 &lt;li&gt;Lucene：全文检索组件。&lt;/li&gt; 
 &lt;li&gt;Liquibase：数据库跟踪、管理工具。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;前端技术&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vue 3：JavaScript 框架。&lt;/li&gt; 
 &lt;li&gt;ElementPlus 2：Vue 3 UI 框架。&lt;/li&gt; 
 &lt;li&gt;Vite: 下一代前端开发与构建工具。&lt;/li&gt; 
 &lt;li&gt;TypeScript: JavaScript 的一个超集。&lt;/li&gt; 
 &lt;li&gt;TailwindCSS: 功能类优先的 CSS 框架。&lt;/li&gt; 
 &lt;li&gt;Tinymce: 富文本编辑器。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;内容 
  &lt;ul&gt; 
   &lt;li&gt;文章管理&lt;/li&gt; 
   &lt;li&gt;文章审核&lt;/li&gt; 
   &lt;li&gt;栏目管理&lt;/li&gt; 
   &lt;li&gt;区块管理&lt;/li&gt; 
   &lt;li&gt;字典管理&lt;/li&gt; 
   &lt;li&gt;TAG 管理&lt;/li&gt; 
   &lt;li&gt;附件管理&lt;/li&gt; 
   &lt;li&gt;生成管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;互动 
  &lt;ul&gt; 
   &lt;li&gt;留言管理&lt;/li&gt; 
   &lt;li&gt;投票管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;文件 
  &lt;ul&gt; 
   &lt;li&gt;模板文件&lt;/li&gt; 
   &lt;li&gt;上传文件&lt;/li&gt; 
   &lt;li&gt;HTML 文件&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;配置 
  &lt;ul&gt; 
   &lt;li&gt;全局设置&lt;/li&gt; 
   &lt;li&gt;站点设置&lt;/li&gt; 
   &lt;li&gt;模型管理&lt;/li&gt; 
   &lt;li&gt;区块设置&lt;/li&gt; 
   &lt;li&gt;字典设置&lt;/li&gt; 
   &lt;li&gt;留言类型&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;统计 
  &lt;ul&gt; 
   &lt;li&gt;访问分析 
    &lt;ul&gt; 
     &lt;li&gt;访问趋势&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;访客分析 
    &lt;ul&gt; 
     &lt;li&gt;新老访客&lt;/li&gt; 
     &lt;li&gt;地域分布&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;用户 
  &lt;ul&gt; 
   &lt;li&gt;用户管理&lt;/li&gt; 
   &lt;li&gt;角色管理&lt;/li&gt; 
   &lt;li&gt;用户组管理&lt;/li&gt; 
   &lt;li&gt;组织管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;前台模板&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-80a0ebd93df8b45fee97e5ee120780e5c78.jpg&quot; width=&quot;1351&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;后台界面&lt;/h2&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;713&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cfe14e42ecbeb17974c201494ee2c931758.jpg&quot; width=&quot;1367&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303600/ujcms-9-6-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303600/ujcms-9-6-0-released</guid>
            <pubDate>Wed, 24 Jul 2024 02:02:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🔥 Socket.D v2.5.10 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Socket.D 协议？&lt;/h3&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;Socket.D 是一个基于事件和语义消息流的网络应用协议。在微服务、移动应用、物联网等场景，可替代 http、websocket 等。协议详情参考&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F&quot; target=&quot;_blank&quot;&gt;《官网介绍》&lt;/a&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持： tcp, udp, ws, kcp 传输。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;目前：java，kotlin，javascript，node.js，python，android 语言环境可用。go，rust，c/c++，.net 正在开发中。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;最近更新&lt;/h3&gt; 
&lt;h4&gt;(1) for Java&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;sd:ws&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通讯，添加 websocket 子协议验证开关控制&lt;/li&gt; 
 &lt;li&gt;smartsocket 升为 1.5.50&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;(2) for Python&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;sd:ws` 通讯，添加 websocket 子协议验证开关控制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;(3) for JavaScript&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;sd:ws` 通讯，添加 websocket 子协议验证开关控制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;视频演示效果：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;for H5 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1ck4y197BV%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1ck4y197BV/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo01-js-ws&quot;&gt;演示源码&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;for UniAPP 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1T94y1T7sp%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1T94y1T7sp/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://gitee.com/noear/socket.d/tree/main/javascript/socketd-examples/demo03-uniapp-ws&quot;&gt;演示源码&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;代码仓库：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/noear/socketd&quot;&gt;https://gitee.com/noear/socketd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsocketd&quot; target=&quot;_blank&quot;&gt;https://github.com/noear/socketd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;官网：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocketd.noear.org%2F&quot; target=&quot;_blank&quot;&gt;https://socketd.noear.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303588/socketd-2-5-10-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303588/socketd-2-5-10-released</guid>
            <pubDate>Wed, 24 Jul 2024 01:11:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>