<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 13 May 2025 15:32:23 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>OpenHarmony 5.1.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenHarmony 是由开放原子开源基金会孵化及运营的开源项目，目标是面向全场景、全连接、全智能时代，搭建一个智能终端设备操作系统的框架和平台，促进万物互联产业的繁荣发展。&lt;/p&gt; 
&lt;p&gt;OpenHarmony 5.1.0 Release 正式版&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/release-notes/OpenHarmony-v5.1.0-release.md"&gt;已发布并上线 Gitee 平台&lt;/a&gt;，升级 API 18。&lt;/p&gt; 
&lt;p&gt;相比前一个 Release 版本（OpenHarmony 5.0.3，即 API 15），OpenHarmony 5.1.0 Release 重点做出了如下特性新增或增强：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;进一步增强 ArkUI，提供更丰富的组件属性设置，支持更多精致动效，持续补充组件通过 C API 调用的能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步增强媒体能力，提供更丰富的编解码能力、播控能力、媒体会话管理能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步丰富了应用启动的细节设置能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步增强分布式数据管理的 UDMF、RDB 的数据处理能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步完善了标准 Web 能力等等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;更详细的特性新增与增强的说明如下，将按照 API 版本顺序分别进行列举：&lt;/p&gt; 
&lt;h3&gt;应用框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持根据指定的数据加密级别创建应用上下文，以获取相应的路径。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-inner-application-context.md#contextcreateareamodecontext18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持同步获取当前进程的进程名（processName）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-inner-application-context.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取应用被拉起原因（LAUNCH_REASON_MESSAGE）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-wantConstant.md#params"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;启动框架新增支持 HAR/HSP 和 so 文件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/application-models/app-startup.md#%E6%94%AF%E6%8C%81%E7%9A%84%E8%8C%83%E5%9B%B4"&gt;指南&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-appstartup-startupManager.md#ohosappappstartupstartupmanager"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持启动 Ability 时指定主窗口显示的最大宽高（maxWindowWidth/maxWindowHeight）和最小宽高（minWindowWidth/minWindowHeight）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-startOptions.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取应用上一次退出的详细原因。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/application-models/ability-exit-info-record.md"&gt;指南&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-abilityConstant.md#lastexitdetailinfo18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持设置 UIAbility 的颜色模式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-inner-application-uiAbilityContext.md#uiabilitycontextsetcolormode18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持通过 startAbility 的属性 startOptions 来指定创建新窗口的大小（minWindowWidth、minWindowHeight、maxWindowWidth、maxWindowHeight）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-startOptions.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;C API 新增支持启动 Ability 时传递 startOptions。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/start__options_8h.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;C API 新增支持设置启动 Ability 时窗口和 dock 栏图标的显示模式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/_ability_runtime.md#oh_abilityruntime_setstartoptionsstartvisibility"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增一批 C API 函数，用于获取应用级别沙箱内文件目录。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/_ability_runtime.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;应用包管理&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;配置文件 module.json5 新增重定向配置：通过 abilitySrcEntryDelegator 标识当前 Module 需要重定向到的 UIAbility 的名称，通过 abilityStageSrcEntryDelegator 标识当前 Module 需要重定向到的 UIAbility 对应的 Module 名称（不可为当前 Module 名称），两者组合使用，共同指定重定向的目标对象。 （&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/quick-start/module-configuration-file.md#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A0%87%E7%AD%BE"&gt;指南&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;ArkUI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;文本与输入组件能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;文本组件支持通过 NODE_IMMUTABLE_FONT_WEIGHT 属性，设置文字粗细不会跟随系统字体粗细而变化。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype"&gt;API 参考-C API&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;文本组件支持对选中的文本提供分享服务（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-text-common.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）、支持按音节连字符换行（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-appendix-enums.md#wordbreak11"&gt;API 参考&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;文本组件新增支持设置文本选择菜单显示在独立窗口。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#textmenucontroller16"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;富文本（RichEditor）组件支持设置最大行数。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-richeditor.md#maxlength18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextInput 组件支持设置文本省略位置。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textinput.md#ellipsismode18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextInput/TextArea/Search/RichEditor 组件支持将文本行间距平分至行的顶部与底部。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textinput.md#halfleading18"&gt;API 参考-TextInput&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textarea.md#halfleading18"&gt;API 参考-TextArea&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-search.md#halfleading18"&gt;API 参考-Search&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-richeditor.md#richeditortextstyleresult"&gt;API 参考-RichEditor&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextInput/TextArea 组件扩展自动填充类型，包含：车牌号、护照号等。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textinput.md#contenttype12%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_textinputcontenttype"&gt;API 参考-C&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;富文本（RichEditor）组件在长按预览菜单时支持振动效果。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-richeditor.md#previewmenuoptions18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;基础类型定义新增支持清除当前的预上屏文本内容。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-types.md#clearpreviewtext17"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;通用拖拽能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持封装自定义落位动效。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#notifydragstartrequest18"&gt;API 参考&lt;/a&gt;，&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-events-drag-drop.md#executedropanimation18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持自定义控制在拖拽至可滚动组件边缘时是否触发自动滚屏。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-drag-drop.md#draginteractionoptions12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;弹窗能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;支持通过设置 levelOrder 来管理弹出框的显示顺序，确保层级较高的弹出框覆盖在层级较低的弹出框之上。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-promptAction.md#showdialogoptions"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/ui/arkts-dialog-levelorder.md"&gt;指南&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;支持在自定义内容中，创建和关闭对应的自定义弹窗。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#opencustomdialogwithcontroller18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Popup 组件支持通过 maxWidth 设置最大宽度。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ohos-arkui-advanced-Popup.md#popupoptions"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;半模态 Popup 样式弹窗，支持通过 placement 设置相对于目标的显示位置，通过 placementOnTarget 设置弹窗能否覆盖在目标节点上。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-sheet-transition.md#sheetoptions"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Menu 和 Dialog 支持通过 backgroundBlurStyleOptions 和 backgroundEffect 设置自定义背景模糊。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-menu.md#contextmenuoptions10"&gt;API 参考-Menu&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-promptAction.md#showdialogoptions"&gt;API 参考-Dialog&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;模态转场和 MenuItem 支持!!双向绑定变量。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-sheet-transition.md#bindsheet"&gt;API 参考-半模态转场&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-modal-transition.md#bindcontentcover"&gt;API 参考-全屏模态转场&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-menuitem.md#selected"&gt;API 参考-MenuItem&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;自定义弹窗支持避让键盘后，通过 keyboardAvoidDistance 设置弹窗和键盘之间的最小距离。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-methods-custom-dialog-box.md#customdialogcontrolleroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_dialog_a_p_i__2.md"&gt;API 参考-C&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;支持通过 showInSubWindow 设置半模态是否在子窗中显示、支持通过 effectEdge 设置半模态面板边缘滚动的效果。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-sheet-transition.md#sheetoptions"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;菜单（Menu）在弹出时支持振动效果。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-menu.md#hapticfeedbackmode18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;表单选择类组件能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新增 SegmentButtonV2 组件，可创建页签型、单选或多选的胶囊型分段按钮。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ohos-arkui-advanced-SegmentButtonV2.md"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextPicker/TimePicker 支持选项进入选中区域时触发事件回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textpicker.md#onenterselectedarea18"&gt;API 参考-TextPicker&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-timepicker.md#onenterselectedarea18"&gt;API 参考-TimePicker&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TimePicker/CalendarPicker 支持通过 start 和 end 配置开始时间和结束时间（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-timepicker.md#timepickeroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E"&gt;API 参考-TimePicker&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-calendarpicker.md#calendaroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E"&gt;API 参考-CalendarPicker&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;TimePicker 支持通过 enableCascade 设置 12 小时制时上午下午跟随时间联动。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-timepicker.md#enablecascade18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;滚动与滑动组件能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Swiper/Tabs 组件增加页面选中元素改变时触发的回调，返回当前选中或将要隐藏的元素的索引值。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-container-swiper.md"&gt;API 参考-Swiper&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-container-tabs.md"&gt;API 参考-Tabs&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Swiper 组件增加控制手指或者鼠标等按下屏幕时子组件是否停止自动播放的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-container-swiper.md#onunselected18"&gt;API 参考-Swiper&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Swiper 组件 CAPI 能力增强，可设置缓存节点是否显示、数字导航点和导航箭头的样式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;List 组件支持设置布局样式和滚动效果（NODE_LIST_SCROLL_TO_INDEX_IN_GROUP、 NODE_LIST_LANES、NODE_LIST_SCROLL_SNAP_ALIGN、NODE_LIST_MAINTAIN_VISIBLE_CONTENT_POSITION）（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype"&gt;API 参考-CAPI&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增 C API，支持可配置用户自定义数据的手势中断事件回调函数。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_gesture_a_p_i__2.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增 C API，支持获取事件命中组件的宽高和座标信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___event_module.md#%E5%87%BD%E6%95%B0"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持设置组件的自定义焦点走焦逻辑。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-focus.md#nextfocus18"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_focusmove"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持动态获取手势配置参数，可返回连续点击次数阈值。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-gesture-blocking-enhancement.md#taprecognizer18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持手势取消时触发的 onActionCancel 回调中返回手势事件信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-longpressgesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-LongPressGesture&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-pangesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-PanGesture&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-pinchgesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-PinchGesture&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-rotationgesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-RotationGesture&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;无障碍支持自定义焦点顺序（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-accessibility.md#accessibilitynextfocusid18"&gt;API 参考&lt;/a&gt;）、支持控制组件的屏幕朗读方式（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-accessibility.md#accessibilityrole18"&gt;API 参考&lt;/a&gt;）、支持设置屏幕朗读滚动操作（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-accessibility.md#accessibilityscrolltriggerable18"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持设置 EmbeddedComponent 或 UIExtensionComponent 组件的占用事件，指定手势事件的响应方式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-uiExtension.md#occupyevents18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持将当前 FrameNode 移动到目标 FrameNode 的指定位置，实现跨实例节点迁移。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-frameNode.md#moveto18"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#oh_arkui_nodeutils_moveto"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;NodeController 新增节点上下树和绑定解绑前后的生命周期回调接口（onAttach、onDetach、onWillBind、onWillUnbind、onBind、onUnbind）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-nodeController.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持对 ComponentContent 构建的 UI 组件进行截图。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#createfromcomponent18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增鼠标轴事件相关接口。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-events-axis.md"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___event_module.md#oh_arkui_axisevent_setpropagation"&gt;API 参考-C API&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;NavDestination 新增 OnActive 和 OnInActive 生命周期。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-navdestination.md#onactive17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;C API 的事件能力增强，新增支持获取事件命中的组件的宽度、高度、X 座标、Y 座标等能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___event_module.md#oh_arkui_uiinputevent_geteventtargetwidth"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;UIContext 新增支持创建不依赖窗口的 UI 实例。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#createuicontextwithoutwindow17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;组件可见区域变化事件新增支持设置事件的回调参数，限制它的执行间隔。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-component-visible-area-change-event.md#onvisibleareaapproximatechange17"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#oh_arkui_visibleareaeventoptions_create"&gt;API 参考-C API&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;ImageAnimator 组件支持设置是否通过系统 onVisibleAreaChange 的可见性来判断组件的暂停和播放。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-imageanimator.md#monitorinvisiblearea17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;窗口管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增软键盘弹出动画完成的监听回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-window.md#onkeyboarddidshow18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;画中画窗口支持通过创建参数 LocalStorage 实现页面级别的 UI 状态存储单元，多实例下可用来跟踪主窗实例。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-pipWindow.md#pipconfiguration"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;窗口管理新增支持创建虚拟屏幕。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-display.md#displaycreatevirtualscreen16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;图形图像&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增一批 C API 函数和枚举，用于支持直接绘制到屏幕 buffer 的 gpu 渲染能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkgraphics2d/drawing__path__effect_8h.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;分布式数据管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;RelationalStore 新增 rootDir 配置，支持打开非 database 目录下的数据库。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-relationalStore.md#storeconfig"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;关系型数据库新增支持根据指定的列索引或列名称获取列数据类型。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-relationalStore.md#getcolumntype18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;UDMF 新增支持将传入的 data 转换成多样式数据结构的能力。若原 data 使用多个 record 去承载同一份数据的不同样式，则可以使用此接口将原 data 转换为多样式数据结构。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-unifiedDataChannel.md#unifieddatachannelconvertrecordstoentries17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;媒体&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;音频&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持 Float32 格式音频输出。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-audio-kit/_o_h_audio.md#oh_audiostream_sampleformat"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持空间音频管理的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/media/audio/public-audio-spatialization-management.md"&gt;指南&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-audio-kit/js-apis-audio.md#getspatializationmanager18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;音视频编解码&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;视频解码新增支持 MPEG2、MPEG4、H.263。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/media/avcodec/avcodec-support-formats.md"&gt;指南&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;播放控制&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;播放器支持向应用透传 SEI 字段数据，适用于 HTTP-FLV 直播。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#onseimessagereceived18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;调用媒体播放器 AVPlayer 设置播放策略时，新增支持 Prepare 之后显示视频起播首帧（showFirstFrameOnPrepare）、起播缓冲水线（preferredBufferDurationForPlaying）等播放策略。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#setplaybackstrategy12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;播放器新增支持播放预下载的视频数据。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#setmediaresourceloaderdelegate18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;调用媒体播放器 AVPlayer 设置播放策略时，新增支持智能追帧水线（thresholdForAutoQuickPlay）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#playbackstrategy12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;能力增强：支持应用创建多个 SoundPool 实例。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#mediacreatesoundpool10"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;调用媒体播放器 AVPlayer 设置播放策略时，新增支持 Prepare 之后显示视频起播首帧（showFirstFrameOnPrepare）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#playbackstrategy12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持通过 AV 会话命令传递设置目标循环模式（setTargetLoopMode）的能力（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-avsession-kit/js-apis-avsession.md#avcontrolcommandtype10"&gt;API 参考&lt;/a&gt;），并提供对设置动作的事件监听回调（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-avsession-kit/js-apis-avsession.md#onsettargetloopmode18"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;音频会话新增支持单句/单条歌词展示的属性 singleLyricText。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-avsession-kit/js-apis-avsession.md#avmetadata10"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;图片&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 C API 支持获取图片的可编辑标志。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-image-kit/_image___native_module.md#oh_pixelmapinitializationoptions_geteditable"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;录制&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增屏幕录制时视频填充模式的枚举。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#avscreencapturefillmode18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;音视频录制配置文件新增支持配置稳定录制模式 enableStableQualityMode18。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#avrecorderprofile9"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;语言编译器运行时&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TaskPool 支持指定任务执行并发度和指定任务的排队策略。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-taskpool.md#asyncrunner18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TaskPool 支持通过任务 ID 取消任务池中的任务。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-taskpool.md#taskpoolcancel18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;collections（ArkTS 容器集）在 API 18 新增支持以下方法（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-arkts-collections.md#arktscollections-arkts%E5%AE%B9%E5%99%A8%E9%9B%86"&gt;API 参考&lt;/a&gt;）： Array：from、isArray、of、copyWithin、lastIndexOf、some、reduceRight、reverse、toString、every、toLocaleString&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TypedArray：toString、toLocaleString、lastIndexOf、reduceRight&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Sendable 支持在缓存空间不够的时候，将近期最少使用的数据替换为新数据。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-arkts-utils.md#sendablelrucachek-v18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Worker 支持创建任务时指定任务的优先级。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-worker.md#threadworkerpriority18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安全&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增基于群组的关键资产访问控制。通过设置群组属性，同一开发者开发的多个应用可以共享数据。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/security/AssetStoreKit/asset-js-group-access-control.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;DFX&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持为当前线程转储虚拟机的原始堆快照。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-performance-analysis-kit/js-apis-hidebug.md#hidebugdumpjsrawheapdata18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;企业定制&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;可禁用/启用的特性限制新增 MTP（mtpClient/mtpServer）和恢复出厂设置（resetFactory）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-mdm-kit/js-apis-enterprise-restrictions.md#restrictionssetdisallowedpolicy"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持按系统账户安装用户证书。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-mdm-kit/js-apis-enterprise-securityManager.md#securitymanagerinstallusercertificate18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持订阅账号的新增、删除、切换系统事件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-mdm-kit/js-apis-enterprise-adminManager.md#managedevent"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;基础通信&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增在蓝牙 socket server 端可以获取对端蓝牙设备虚拟 MAC 地址的功能（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-socket.md#socketgetdeviceid17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增获取对端蓝牙设备原始名字的功能。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-connection.md#connectiongetremotedevicename16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增连接对端蓝牙设备可用 profile 的功能，如 A2DP、HFP、HID 等协议 profile。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-connection.md#connectionconnectallowedprofiles16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增持久化存储对端蓝牙设备虚拟 MAC 地址的功能。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-access.md#accessaddpersistentdeviceid16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增蓝牙 BLE 扫描围栏模式，可实现首次扫描到 BLE 广播报文时上报进入围栏，扫描不到 BLE 广播报文时上报离开围栏，并携带 BLE 广播报文信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-ble.md#scanreportmode15"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;完善蓝牙搜索到的设备信息，新增获取设备 RSSI（信号强度）、名称和类别信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-connection.md#discoveryresult18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增异步读取和发送蓝牙 socket 数据的功能，如果链路断开，会上报 IO 异常。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-socket.md#socketsppwriteasync18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;位置服务&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持订阅蓝牙扫描信息上报事件用于辅助定位。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-location-kit/js-apis-geoLocationManager.md#geolocationmanageronbluetoothscanresultchange16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;网络管理&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持获取 TLSSocket 的文件描述符。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-network-kit/js-apis-socket.md#getsocketfd16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;剪贴板&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;剪贴板支持获取剪贴板的内容变化的次数。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-pasteboard.md#getchangecount18"&gt;API 参考-ArkTS API&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/_pasteboard.md#oh_pasteboard_getchangecount"&gt;API 参考-C API&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;输入法&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;输入法框架新增支持设置显示预览文本时的回调（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethod.md#setpreviewtextcallback17"&gt;API 参考&lt;/a&gt;），支持订阅输入法应用操作文本预览内容的事件（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethod.md#onsetpreviewtext17"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; 
&lt;h3&gt;Web&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持获取上一次被点击区域的元素信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/js-apis-webview.md#getlasthittest18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持设置 Web 组件是否开启字重跟随系统设置变化。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#enablefollowsystemfontweight18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持 Web 内音视频可对接到播控中心。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#enablewebavsession18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;对接 W3C 规范，支持通过 accept 指定上传的文件类型。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#onshowfileselector9"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;提供静态方法，清除应用中的资源缓存文件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/js-apis-webview.md#removeallcache18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持以固定宽高设置同层渲染的元素。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#nativeembedoptions16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;多模输入&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持设置处于前台的应用操作指定按键的回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-input-kit/js-apis-inputconsumer.md#inputconsumeronkeypressed16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;上传下载&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;上传下载支持应用缓存下载能力，支持应用提前缓存文件到沙箱目录或内存中。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-request-cacheDownload.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;上传下载 agent 接口支持设置任务最高限速（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-request.md#setmaxspeed18"&gt;API 参考&lt;/a&gt;），支持设置待上传文件在表单中的 content-type 字段（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-request.md#filespec10"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;资源调度&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增后台子进程管理模块，提供应用对子进程进行压制、解压制的能力，避免子进程过多占用系统资源，导致系统使用卡顿。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-backgroundtasks-kit/js-apis-backgroundProcessManager.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;后台代理提醒中提醒标题、提醒内容等字段支持设置资源 ID，用于全球化适配。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-backgroundtasks-kit/js-apis-reminderAgentManager.md#reminderrequest"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;全球化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取用户偏好温度单位和周起始日的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#gettemperaturetype18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持时间日期/数字精细化格式化的能力，便于更灵活的使用格式化能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#i18ngetsimpledatetimeformatbypattern18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持返回富文本的数字格式化能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#stylednumberformat18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持路径本地化显示的能力，可以根据输入语言判断路径是否需要镜像显示。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#getunicodewrappedfilepath18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;测试框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持按照模糊匹配/正则匹配方式查找符合条件的控件 id、type 的能力。（API 参考：&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#id18"&gt;id&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#type18"&gt;type&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取控件提示文本（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#gethint18"&gt;API 参考&lt;/a&gt;），并根据控件提示文本查找控件（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#hint18"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持横向纵向查找控件，仅适用于支持滑动的控件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#scrollsearch18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;完整更新说明：&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/release-notes/OpenHarmony-v5.1.0-release.md"&gt;OpenHarmony-v5.1.0-release&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349677/openharmony-v5-1-release</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349677/openharmony-v5-1-release</guid>
      <pubDate>Sun, 11 May 2025 11:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 Java Solon v3.3.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;Solon 框架！&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon 是新一代，Java 企业级应用开发框架。&lt;strong&gt;从零开始构建（No Java-EE），有灵活的接口规范与开放生态&lt;/strong&gt;。采用商用友好的 Apache 2.0 开源协议，是「杭州无耳科技有限公司」开源的根级项目，是 Java 应用开发的生态基座（可替换 Spring 生态）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;追求： 快速、小巧、简洁&lt;/li&gt; 
 &lt;li&gt;提倡： 克制、高效、开放&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;7 年开源时长，累计代码提交 1.6 万次 ，近半年下载量 1200 万次。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;有透明可预期的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F687" target="_blank"&gt;《版本发布与维护计划》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;有「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Fsupport" target="_blank"&gt;【社区交流】&lt;/a&gt;」和「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Fbiz" target="_blank"&gt;【商业服务】&lt;/a&gt;」双重技术支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;有什么特点（相对 Java Spring 方案）？&lt;/h2&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;特点&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更高的计算性价比&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;并发高 700%；内存省 50%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更快的开发效率&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;代码少；入门简单；启动快 10 倍（调试快）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更好的生产与部署体验&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;打包小 90%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更大的兼容范围&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;非 java-ee 架构；同时支持 java8 ～ java24，graalvm native image&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;最新的 techempower 测试数据：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techempower.com%2Fbenchmarks%2F%23hw%3Dph%26test%3Djson%25C2%25A7ion%3Ddata-r23" target="_blank"&gt;https://www.techempower.com/benchmarks/#hw=ph&amp;amp;test=json§ion=data-r23&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techempower.com%2Fbenchmarks%2F%23hw%3Dph%26test%3Dplaintext%25C2%25A7ion%3Ddata-r23" target="_blank"&gt;https://www.techempower.com/benchmarks/#hw=ph&amp;amp;test=plaintext§ion=data-r23&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目架构示意图（全场景应用开发支持）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//f00a33f6ce859426882daec71e77f3d8.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;最近更新了什么？（每个版本都会有满满的清单）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon 快如闪电！智也非凡！从 v3.1 起，提供完整的 AI 应用开发支持（Solon AI 同时支持 java8 到 java24）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 solon-ai-repo-dashvector 插件&lt;/li&gt; 
 &lt;li&gt;新增 seata-solon-plugin 插件&lt;/li&gt; 
 &lt;li&gt;新增 solon-data Ds 注解（为统一数据源注入作准备）&lt;/li&gt; 
 &lt;li&gt;插件 solon-ai 三次预览&lt;/li&gt; 
 &lt;li&gt;插件 solon-ai-mcp 二次预览&lt;/li&gt; 
 &lt;li&gt;调整 solon Cookie,Header,Param 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;required&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;默认改为 true (便与 mcp 复用)&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai 移除 ToolParam 注解，改用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Param&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注解（通用参数注解）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai ToolMapping 注解移到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;org.noear.solon.ai.annotation&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai FunctionToolDesc:param 改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paramAdd&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;风格&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai MethodToolProvider 取消对 Mapping 注解的支持（利于跨生态体验的统一性）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-mcp McpClientToolProvider 更名为 McpClientProvider（实现的接口变多了））&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai 拆分为 solon-ai-core 和 solon-ai-model-dialects（方便适配与扩展）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai 模型方言改为插件扩展方式&lt;/li&gt; 
 &lt;li&gt;优化 nami 的编码处理&lt;/li&gt; 
 &lt;li&gt;优化 nami-channel-http HttpChannel 表单提交时增加集合参数支持（自动拆解为多参数）&lt;/li&gt; 
 &lt;li&gt;优化 solon Param 注解，添加字段支持&lt;/li&gt; 
 &lt;li&gt;优化 solon 允许 MethodWrap 没有上下文的用况&lt;/li&gt; 
 &lt;li&gt;优化 solon-web-sse 边界，允许 SseEmitter 未提交之前就可 complete&lt;/li&gt; 
 &lt;li&gt;优化 solon-serialization JsonPropsUtil.apply 分解成本个方法，按需选择&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai 允许 MethodFunctionTool,MethodFunctionPrompt,MethodFunctionResource 没有 solon 上下文的用况&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;model.options(o-&amp;gt;{})&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可多次调用&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp McpClientProvider 同时实现 ResourceProvider, PromptProvider 接口&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-repo-redis metadataIndexFields 更名为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;metadataFields&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;（原名标为弃用）&lt;/li&gt; 
 &lt;li&gt;添加 nami NamiParam 注解支持&lt;/li&gt; 
 &lt;li&gt;添加 nami 文件（&lt;code&gt;UploadedFile&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;File&lt;/code&gt;）上传支持&lt;/li&gt; 
 &lt;li&gt;添加 nami 对 solon Mapping 相关注解的支持&lt;/li&gt; 
 &lt;li&gt;添加 nami 自动识别 File 或 UploadedFile 参数类型，并自动转为 FORM_DATA 提交&lt;/li&gt; 
 &lt;li&gt;添加 solon Mapping:headers 属性（用于支持 Nami 用况）&lt;/li&gt; 
 &lt;li&gt;添加 solon Body:description,Param:description,Header:description,Cookie:description 属性（用于支持 MCP 用况）&lt;/li&gt; 
 &lt;li&gt;添加 solon UploadedFile 基于 File 构造方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-net-httputils HttpUtilsBuilder:proxy 方法（设置代理）&lt;/li&gt; 
 &lt;li&gt;添加 solon-net-httputils HttpProxy 类&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatSubscriberProxy 用于控制外部订阅者，只触发一次 onSubscribe&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientProperties:httpProxy 配置&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientToolProvider isStarted 状态位（把心跳开始，转为第一次调用这后）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientToolProvider:readResourceAsText,readResource,getPromptAsMessages,getPrompt 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:getVersion,getChannel,getSseEndpoint,getTools,getServer 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:addResource,addPrompt 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:Builder:channel 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp ResourceMapping 和 PromptMapping 注解（支持资源与提示语服务）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpoint AOP 支持（可支持 solono auth 注解鉴权）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpoint 实体参数支持（可支持 solon web 的实体参数、注解相通）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mpc&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Tool.returnDirect&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性透传（前后端都有 solon-ai 时有效，目前还不是规范）&lt;/li&gt; 
 &lt;li&gt;修复 solon 由泛型桥接方法引起的泛型失真问题&lt;/li&gt; 
 &lt;li&gt;修复 solon Utils.getFile 在 window 下绝对位置失效的问题&lt;/li&gt; 
 &lt;li&gt;修复 solon-net-httputils OkHttpUtils 不支持 post 空提交的问题&lt;/li&gt; 
 &lt;li&gt;修复 nami-channel-http 不支持 post 空提交的问题&lt;/li&gt; 
 &lt;li&gt;修复 solon-serialization-fastjson2 在配置全局时间格式化后，个人注解格式化会失效的问题&lt;/li&gt; 
 &lt;li&gt;修复 solon Utils.getFile 在 window 下绝对位置失效的问题&lt;/li&gt; 
 &lt;li&gt;snack3 升为 3.2.133&lt;/li&gt; 
 &lt;li&gt;dbvisitor 升为 6.0.0&lt;/li&gt; 
 &lt;li&gt;sa-token 升为 1.42.0&lt;/li&gt; 
 &lt;li&gt;mybatis-flex 升为 1.10.9&lt;/li&gt; 
 &lt;li&gt;smart-http 升为 2.5.10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目仓库地址？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;gitee：&lt;a href="https://gitee.com/opensolon/solon"&gt;https://gitee.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitcode:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fopensolon%2Fsolon" target="_blank"&gt;https://gitcode.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopensolon%2Fsolon" target="_blank"&gt;https://github.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;官网？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2F" target="_blank"&gt;https://solon.noear.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349666/solon-3-3-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349666/solon-3-3-0-released</guid>
      <pubDate>Sun, 11 May 2025 10:22:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Excelize 开源基础库发布 2.9.1 版本更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="Excelize 开源基础库发布 2.9.1 版本更新" height="600" src="https://oscimg.oschina.net/oscnet/up-4ffd16b521fea1e779757d02c6fd2a4c29f.jpg" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"&gt;Excelize 是 Go 语言编写的用于操作 Office Excel 文档基础库，基于 ECMA-376，ISO/IEC 29500 国际标准。可以使用它来读取、写入由 Microsoft Excel™ 2007 及以上版本创建的电子表格文档。支持 XLAM / XLSM / XLSX / XLTM / XLTX 等多种文档格式，高度兼容带有样式、图片 (表)、透视表、切片器等复杂组件的文档，并提供流式读写 API，用于处理包含大规模数据的工作簿。可应用于各类报表平台、云计算、边缘计算等系统。入选 2020 Gopher China - Go 领域明星开源项目 (GSP)、2018 年开源中国码云最有价值开源项目 GVP (Gitee Most Valuable Project)，目前已成为 Go 语言最受欢迎的 Excel 文档基础库。&lt;/p&gt; 
&lt;h2&gt;开源代码&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li style="color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: start;"&gt;&lt;strong&gt;GitHub:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize" target="_blank"&gt;github.com/xuri/excelize&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: start;"&gt;&lt;strong&gt;Gitee:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/xurime/excelize"&gt;gitee.com/xurime/excelize&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: start;"&gt;&lt;strong&gt;中文文档:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxuri.me%2Fexcelize%2Fzh-hans" target="_blank"&gt;xuri.me/excelize/zh-hans&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;版本说明&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;此版本中最显著的变化包括：&lt;/p&gt; 
&lt;h3&gt;兼容性提示&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;升级 Go 语言版本要求至 1.23 或更高版本，以升级依赖包&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;golang.org/x/crypto&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DataValidationType&lt;/code&gt;、&lt;code&gt;DataValidationErrorStyle&lt;/code&gt;、&lt;code&gt;DataValidationOperator&lt;/code&gt;、&lt;code&gt;PictureInsertType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的数据类型由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;int&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;变更为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetCellInt&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的形参类型改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;int64&lt;/code&gt;，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2068" target="_blank"&gt;#2068&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加图片、图表、形状和表单控件等绘图对象时，偏移设置将不再影响绘图对象的尺寸，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2001" target="_blank"&gt;#2001&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;新增功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Chart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GapWidth&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Overlap&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChartPlotArea&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ShowDataTable&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ShowDataTableKeys&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChartAxis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Alignment&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChartSeries&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DataLabel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;PageLayoutOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;PageOrder&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;新增 2 项错误变量：&lt;code&gt;ErrPageSetupAdjustTo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ErrStreamSetColStyle&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增 2 项枚举类型：&lt;code&gt;HeaderFooterImagePositionType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IgnoredErrorsType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增 2 项数据类型：&lt;code&gt;CalcPropsOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HeaderFooterImageOptions&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增 2 项函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetCalcProps&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GetCalcProps&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置和获取工作簿计算属性&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CultureNameJaJP&lt;/code&gt;、&lt;code&gt;CultureNameKoKR&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CultureNameZhTW&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;枚举值，用于读取带有日本年号、韩国檀君纪元（檀纪）和民国纪年数字格式的单元格，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F1885" target="_blank"&gt;#1885&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddHeaderFooterImage&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数，支持在页眉和页脚中设置图片，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F1395" target="_blank"&gt;#1395&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddIgnoredErrors&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数，支持忽略特定单元格范围内的错误，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2046" target="_blank"&gt;#2046&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetColStyle&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数，支持流式写入时设置列样式，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2075" target="_blank"&gt;#2075&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置图表座标轴文本方向和旋转角度，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2025" target="_blank"&gt;#2025&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置柱状图和条形图的间隙宽度和重叠程度，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2033" target="_blank"&gt;#2033&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置数据系列标签的格式，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2052" target="_blank"&gt;#2052&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置位于图表绘图区域下方的数据表，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2117" target="_blank"&gt;#2117&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddFormControl&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数支持为复选框类型的表单控件设置单元格超链接，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2113" target="_blank"&gt;#2113&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetPageLayout&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置页面布局的页面顺序&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DeletePicture&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持删除带有单一单元格锚定类型的图片，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2059" target="_blank"&gt;#2059&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetPageLayout&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;增加了对选项参数的检查，如果给定的选项值无效，将返回错误提示信息&lt;/li&gt; 
 &lt;li&gt;支持跨多个工作表调整数据验证，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2072" target="_blank"&gt;#2072&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持应用带&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;#&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;号和零占位符的数字格式，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2058" target="_blank"&gt;#2058&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持应用带&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;?&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;符号的数字格式&lt;/li&gt; 
 &lt;li&gt;支持通过指定 "oneCell" 定位类型添加带有单一单元格锚定类型的绘图对象，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2002" target="_blank"&gt;#2002&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 v2.9.0 中引入的问题，修改由流式写入生成的工作簿后，打开后提示文档损坏问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2015" target="_blank"&gt;#2015&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下生成重复的「无填充」格式问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2014" target="_blank"&gt;#2014&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下单元格垂直或水平边框样式丢失问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2048" target="_blank"&gt;#2048&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下条件格式边框样式丢失的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2061" target="_blank"&gt;#2061&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下获取数据透视表时出现 panic 的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F1954" target="_blank"&gt;#1954&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2051" target="_blank"&gt;#2051&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GetStyle&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数无法获取&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;VertAlign&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;格式的问题&lt;/li&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CalcCellValue&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数在部分情况下子表达式计算错误的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2083" target="_blank"&gt;#2083&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下因图片引用检查有误导致的错误删除图片问题&lt;/li&gt; 
 &lt;li&gt;修复流式写入时，非零行样式 ID 未覆盖默认单元格样式的问题&lt;/li&gt; 
 &lt;li&gt;修复流式写入时，部分情况下将在工作簿内部生成重复的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;col&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;XML 元素问题&lt;/li&gt; 
 &lt;li&gt;修复部分情况下设置图表标题字体时出现的 panic 问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2102" target="_blank"&gt;#2102&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下删除公式计算链时出现的 panic 问题&lt;/li&gt; 
 &lt;li&gt;修复因共享公式解析错误导致的公式计算结果有误问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2056" target="_blank"&gt;#2056&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复当工作簿内部包含大于 4GB 的部件时，生成的 ZIP64 格式文档损坏问题&lt;/li&gt; 
 &lt;li&gt;修复当部分情况下重命名工作表时，自定义名称中的工作表名称更新有误的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2126" target="_blank"&gt;#2126&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用深拷贝库&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;github.com/tiendc/go-deepcopy&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;代替&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;github.com/mohae/deepcopy&lt;/code&gt;，深度拷贝速度提升 3 倍，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2029" target="_blank"&gt;#2029&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 v2.9.0 中引入的问题，避免对空白单元格的值进行修剪以降低内存分配&lt;/li&gt; 
 &lt;li&gt;提高公式计算引擎对带有整行或整列单元格引用公式的计算速度&lt;/li&gt; 
 &lt;li&gt;行迭代器读取速度最高提升约 20%，内存分配降低约 10%&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go Modules 依赖模块更新&lt;/li&gt; 
 &lt;li&gt;单元测试与文档更新&lt;/li&gt; 
 &lt;li&gt;包含阿拉伯语、德语、英语、西班牙语、法语、意大利语、日语、韩语、葡萄牙语、俄语、简体中文和繁体中文的&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fxuri.me%2Fexcelize" target="_blank"&gt;多国语言文档网站&lt;/a&gt;更新&lt;/li&gt; 
 &lt;li&gt;支持 WebAssembly / JavaScript 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize-wasm" target="_blank"&gt;excelize-wasm&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;NPM 包发布版本更新&lt;/li&gt; 
 &lt;li&gt;支持 Python 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize-py" target="_blank"&gt;excelize&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;PyPI 包发布版本更新&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349629/excelize-2-9-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349629/excelize-2-9-1-released</guid>
      <pubDate>Sun, 11 May 2025 07:37:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Notepad-- v3.3 已经发布，文本编辑器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Notepad-- v3.3 已经发布，文本编辑器&lt;/p&gt;
&lt;p&gt;此版本更新内容包括：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;windows&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Notepad--v3.3.0-plugin-Installer.exe 是 win10 下面的插件版安装包，会关联右键菜单等。 Notepad--v3.3.0-win10-portable.zip 是绿色免安装版本，解压即用，不会关联右键菜单注册表。&lt;/p&gt; 
&lt;p&gt;windows-qt6 版本&lt;/p&gt; 
&lt;p&gt;Notepad--v3.3-qt6-portable.zip 是 windwos 下 qt6 的版本，qt6 对高清 4K 幕适应更好。目前还是预览版，暂时不放在 gitee。网盘位置：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.123pan.com%2Fs%2FDkxzVv-BwJVh.html" target="_blank" rel="nofollow"&gt;https://www.123pan.com/s/DkxzVv-BwJVh.html&lt;/a&gt; 如果您使用高清大屏，愿意帮助内测 ndd qt6 版本，还请在网盘自取。&lt;/p&gt; 
&lt;p&gt;其余系统版本后续会发布。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.3 修改如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1 解决了 win10 暗色主题下标题栏白色的问题。&lt;/p&gt; 
&lt;p&gt;2 历史修改标记功能可在视图中关闭。&lt;/p&gt; 
&lt;p&gt;3 macos 云盘导致重加载弹窗误提示情况尝试解决&lt;/p&gt; 
&lt;p&gt;4 修正扩展替换模式下，关键字输入框消失故障。&lt;/p&gt; 
&lt;p&gt;5 临时文件也可以选择对比。&lt;/p&gt; 
&lt;p&gt;6 解决 qt6 下面水平滚动向左失灵的问题。水平滚动 macos 向左失败&lt;/p&gt; 
&lt;p&gt;7 微调：选中从 1 千扩大到 1 万 2 宏运行回车即可执行&lt;/p&gt; 
&lt;p&gt;8 微调：关闭 Python 自动空白提示；cpp html 的字体为 melo&lt;/p&gt; 
&lt;p&gt;9 处理 macos 下面设置目录没有权限或无法生效问题，做个备份目录。&lt;/p&gt; 
&lt;p&gt;10 黑色模式下 tab 标签不选中时隐藏关闭按钮，3 暗黑模式的关闭按钮不要红色，用户说刺眼。&lt;/p&gt; 
&lt;p&gt;11 微调：豆沙绿下面历史修改标记颜色调整，避免红色与绿色刺眼。&lt;/p&gt; 
&lt;p&gt;12 微调：去除空白可匹配选区中去除&lt;/p&gt; 
&lt;p&gt;13 快捷键重设置失败问题解决&lt;/p&gt; 
&lt;p&gt;14 文件夹列表打开情况下，保存 new 文件时，当前保存路径自动选择为文件夹列表中选中的目录&lt;/p&gt; 
&lt;p&gt;拼语言插件功能完善： 1 excel 支持写入公式。 2 增加内存池，加快速度。 3 增加文件或表格等异常时做关闭保护。 4 提供单个变量 print 格式化输出时，可以不需要括号。 5 插入列表按元素插入。&lt;/p&gt;
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/cxasm/notepad--/releases/v3.3" rel="nofollow"&gt;https://gitee.com/cxasm/notepad--/releases/v3.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349591</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349591</guid>
      <pubDate>Sun, 11 May 2025 05:24:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Hikyuu 2.6.1 发布，开源高性能量化交易框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;Hikyuu Quant Framework 基于 C++/Python 的极速量化交易框架，同时可基于策略部件进行资产重用，快速累积策略资产&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;更多信息，参见:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目主页:&lt;span&gt; &lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhikyuu.org" target="_blank"&gt;https://hikyuu.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitee 地址：&lt;a href="https://gitee.com/fasiondog/hikyuu"&gt;https://gitee.com/fasiondog/hikyuu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github 地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffasiondog%2Fhikyuu" target="_blank"&gt;https://github.com/fasiondog/hikyuu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;hub 地址: &lt;a href="https://gitee.com/fasiondog/hikyuu_hub"&gt;https://gitee.com/fasiondog/hikyuu_hub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;2.6.1 版本主要更新&lt;/strong&gt;&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;功能优化&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;改进 tdx 本地数据导入, 支持北交所, 股票代码、权息、财务等使用 pytdx&lt;/li&gt; 
   &lt;li&gt;优化 CVAL 创建，提升指标优化性能&lt;/li&gt; 
   &lt;li&gt;四舍五入从银行家算法更换为国内常用的传统四舍五入法&lt;/li&gt; 
   &lt;li&gt;SE 加上公共参数 get_n 参数只获取前多少选中系统，方便 SE 组合运算后获取结果&lt;/li&gt; 
   &lt;li&gt;importdata 增加命令行参数控制是否导入 K 线数据, 如果传递了 --ignore-kdata 参数，则不导入任何类型的 K 线数据&lt;/li&gt; 
   &lt;li&gt;优化动态库加载方式，以便一些插件能够顺利加载&lt;/li&gt; 
   &lt;li&gt;Strategy 优化 getKData 函数处理未来时间的逻辑和参数默认值&lt;/li&gt; 
   &lt;li&gt;为 MultiFactorBase 添加并行计算选项 "parallel" 参数，默认值为 true&lt;/li&gt; 
   &lt;li&gt;优化 SimplePortfolio 调仓逻辑: 保护对延迟买卖系统可能造成的未来操作及其他&lt;/li&gt; 
   &lt;li&gt;add python util func: hku_benchmark&lt;/li&gt; 
   &lt;li&gt;优化 AF, 对于当日买入的股票，延迟到下一个交易日开盘时处理，避免在当天卖出&lt;/li&gt; 
   &lt;li&gt;调整 PRICELIST 指标, 只允许作为子节点, 不再接收以 Indicator 作为输入，容易造成误解（语义不符）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;缺陷修复&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;fix(trade_sys): 修复无数据股票因子计算问题&lt;/li&gt; 
   &lt;li&gt;fix(indicator): 修复 IF 指标丢弃期逻辑&lt;/li&gt; 
   &lt;li&gt;fix(indicator): 修复 LAST 指标中的参数使用错误&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349587/hikyuu-2-6-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349587/hikyuu-2-6-1-released</guid>
      <pubDate>Sun, 11 May 2025 05:16:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>CrateDB 5.10.6 发布，分布式 SQL 数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;CrateDB 是一个分布式的 SQL 数据库，使得实时存储和分析大量的机器数据变得简单。CrateDB 提供了通常与 NoSQL 数据库相关的可扩展性和灵活性，最小的 CrateDB 集群可以轻松地每秒摄取数万条记录。这些数据可以在整个集群中实时地、临时地、并行地进行查询。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;CrateDB 5.10.6 现已正式发布，该版本更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复了一个问题，该问题可能导致&lt;code&gt;array(object)&lt;/code&gt;列的下标表达式返回空值，例如在&lt;code&gt;INDEX&lt;/code&gt; 定义中用作表达式时：&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;pre&gt;&lt;span style="color:#000000"&gt;create table t (
  obj object as (details array(object as (names text[]))),
  index ft using fulltext (obj['details']['names'])
)
&lt;/span&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LIKE&amp;nbsp;ANY&lt;/code&gt;现在的行为与其他与&lt;code&gt;ANY&lt;/code&gt;搭配使用的运算符相同，并会根据需要用&lt;code&gt;array_unnest&lt;/code&gt;对右侧进行包装，从而自动调整维数。&lt;/li&gt; 
 &lt;li&gt;修复了一个 Bug，在 5.5 之前的 CrateDB 版本中，当通过&lt;code&gt;doc['column']&lt;/code&gt;对列进行寻址时，最初创建的列引用会返回&lt;code&gt;NULL&lt;/code&gt;而不是其实际值。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcratedb.com%2Fdocs%2Fcrate%2Freference%2Fen%2Flatest%2Fappendices%2Frelease-notes%2F5.10.6.html" target="_blank"&gt;查看更新说明&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349579/cratedb-5-10-6-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349579/cratedb-5-10-6-released</guid>
      <pubDate>Sun, 11 May 2025 03:30:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>DjangoAdmin 敏捷开发框架 FastAPI+AntdVue 版本 v2.5.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.5.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、优化鉴权中间件，支持非管理员鉴权认证；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、解决权限节点列表失效问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、优化用户模块，支持动态获取添加用户主键；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;4、优化菜单模块，支持动态获取添加菜单主键；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;5、优化获取模块详情路由规则；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;6、优化模块详情方法权限节点；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;7、优化单图组件，新增图片地址判空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;8、优化城市表单验证，移除上级 ID 判空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;9、优化开关组件，支持入参控制其他控件；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;10、优化广告模块，支持广告封面可以为空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;11、优化栏目模块，支持栏目图片可以为空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;12、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;div&gt; 
            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;一款基于 Fastapi、Vue3、AntDesign、MySQL 等技术栈研发的前后端分离开发框架，设计之初就定位为一款高端产品，采用全新的架构设计，后端服务和前端都是采用全新的设计方案，兼容手机、PAD 和 PC 电脑端，具备良好的用户使用体验；框架拥有完善的 (RBAC) 权限架构和基础核心管理模块，权限控制精细化到按钮节点级别颗粒度控制，根据不同的角色分配不同的权限即可实现；为了避免重复造轮子，系统本身已经集成了基础模块，包括常规的权限管理、字典、配置、行政区划等等常规模块；开发者可以基于框架做二次开发，可以用户个人项目、公司项目以及客户定制化项目，本框架为一站式系统框架开发平台，可以帮助开发者提升开发效率、降低研发成本，同时便于后期的系统维护升级。&lt;/p&gt; 
            &lt;h2&gt;软件信息&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;软件名称：DjangoAdmin 敏捷开发框架 FastAPI+AntdVue 版本&lt;/li&gt; 
             &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoadmin.cn" target="_blank"&gt;https://www.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.fastapi.antdvue.djangoadmin.cn" target="_blank"&gt;http://docs.fastapi.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.fastapi.antdvue.djangoadmin.cn" target="_blank"&gt;http://manage.fastapi.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;版本说明&lt;/h2&gt; 
            &lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;th&gt;版本名称&lt;/th&gt; 
               &lt;th&gt;版本说明&lt;/th&gt; 
               &lt;th&gt;版本地址&lt;/th&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;FastAPI+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 FastAPI、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;FastAPI+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 FastAPI、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;FastAPI+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 FastAPI、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
            &lt;/table&gt; 
            &lt;h2&gt;模块展示&lt;/h2&gt; 
            &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-7dd1d0abdb572e300160c22888d34f366a0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349546</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349546</guid>
      <pubDate>Sat, 10 May 2025 22:50:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>k8m v0.0.106 已经发布，轻量级的 Kubernetes 仪表板</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;k8m v0.0.106 已经发布，轻量级的 Kubernetes 仪表板&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Merge pull request #151 from weibaohui/coderabbitai/docstrings/14vqsP9…&lt;/li&gt; 
 &lt;li&gt;Merge pull request #149 from weibaohui/cluster-permission-ns-ui&lt;/li&gt; 
 &lt;li&gt;Add docstrings to &lt;code&gt;cluster-permission-ns-ui&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Merge pull request #150 from weibaohui/coderabbitai/docstrings/14vqsP9…&lt;/li&gt; 
 &lt;li&gt;Add docstrings to &lt;code&gt;cluster-permission-ns-ui&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;feat(admin): 新增集群命名空间列表接口并优化命名空间选择功能&lt;/li&gt; 
 &lt;li&gt;docs(CHANGELOG): 更新 CHANGELOG.md 中的图片编号&lt;/li&gt; 
 &lt;li&gt;Merge pull request #148 from weibaohui/clean-mcp&lt;/li&gt; 
 &lt;li&gt;Merge pull request #147 from weibaohui/port-forward&lt;/li&gt; 
 &lt;li&gt;fix(pod_forward): 添加 podPort 的整数验证&lt;/li&gt; 
 &lt;li&gt;Merge pull request #145 from weibaohui/port-forward&lt;/li&gt; 
 &lt;li&gt;docs: 更新 CHANGELOG.md 以记录 v0.0.106 版本新增功能&lt;/li&gt; 
 &lt;li&gt;feat(UI): 在 Pod 页面新增端口转发功能&lt;/li&gt; 
 &lt;li&gt;feat(pod): 优化端口转发功能并添加随机端口生成&lt;/li&gt; 
 &lt;li&gt;feat(pod): 添加 Pod 端口转发功能&lt;/li&gt; 
 &lt;li&gt;build: 更新依赖库版本&lt;/li&gt; 
 &lt;li&gt;Merge pull request #144 from weibaohui/antdesign-x&lt;/li&gt; 
 &lt;li&gt;Merge pull request #143 from weibaohui/fix-login-page-alert&lt;/li&gt; 
 &lt;li&gt;chore: 更新前端依赖包版本&lt;/li&gt; 
 &lt;li&gt;feat(middleware): 添加 AuthMiddleware 并更新路由和错误处理&lt;/li&gt; 
 &lt;li&gt;chore: 更新 k8m 镜像版本至 v0.0.104&lt;/li&gt; 
 &lt;li&gt;fix(mcp_host): 处理生成 JWT 令牌时的错误&lt;/li&gt; 
 &lt;li&gt;Merge pull request #140 from weibaohui/update-version&lt;/li&gt; 
 &lt;li&gt;feat(about): 添加 go 版本、编译器和平台信息&lt;/li&gt; 
 &lt;li&gt;feat(version): 添加 Go 版本、编译器和平台信息&lt;/li&gt; 
 &lt;li&gt;chore(deploy): 更新 k8m 镜像版本至 v0.0.103&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href="https://gitee.com/weibaohui/k8m/compare/v0.0.103...v0.0.106" target="_blank"&gt;https://gitee.com/weibaohui/k8m/compare/v0.0.103...v0.0.106&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/weibaohui/k8m/releases/v0.0.106"&gt;https://gitee.com/weibaohui/k8m/releases/v0.0.106&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349527/k8m-0-0-106-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349527/k8m-0-0-106-released</guid>
      <pubDate>Sat, 10 May 2025 15:33:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Cursor 0.50 发布，简化定价与增强 AI 编程体验</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Cursor 于 2025 年 5 月 9 日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2Fchangelog%2F0-50" target="_blank"&gt;推出 0.50 版本重大更新&lt;/a&gt;，带来了简化的定价模式、全面升级的 Max 模式以及一系列功能增强。&lt;/p&gt; 
&lt;p&gt;此次更新聚焦于提升 AI 编程效率，新增跨文件代码建议、后台代理和多代码库支持等功能，进一步巩固了 Cursor 作为 AI 驱动代码编辑器的领先地位。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0512/173717_TJt5_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;定价模式革新:统一请求与 Token 计费&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Cursor0.50 版本对定价模式进行了大幅优化，采用统一基于请求的计费，取代了此前复杂的多层结构。&lt;/p&gt; 
&lt;p&gt;Pro 和 Business 计划每月提供 500 次快速请求，超出后可启用按使用量计费或使用慢速请求继续操作（慢速请求可能因优先级较低而稍有延迟）。此外，Max 模式现按每百万 Token 计费，支持所有顶级 AI 模型 (如 Claude3.7Sonnet、GPT-4o)，为处理大上下文或复杂任务提供了更高灵活性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;功能亮点:多维度提升编程效率&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新 Tab 模型:跨文件智能重构&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cursor0.50 引入了全新 Tab 模型，支持跨文件建议更改，特别擅长代码重构和多文件协同操作。新模型新增语法高亮功能，提升代码可读性，显著优化了开发者在大型项目中的编辑体验。社交媒体反馈显示，Tab 模型在处理复杂依赖关系时表现尤为出色。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;后台代理（预览版）:并行任务处理&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;后台代理功能（Beta 版）允许开发者并行运行多个 AI 代理，支持在远程环境执行任务，如自动化测试或批量文件修改。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;代码库上下文与多根工作区&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通过 folders 功能，用户可将整个代码库添加至上下文，确保 AI 理解项目全貌。此外，多根工作区支持在同一界面管理多个代码库，适合跨项目开发需求。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;内联编辑与长文件优化&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;内联编辑界面迎来全面刷新，新增全文件编辑（⌘⇧⏎）和发送至代理 (⌘L) 快捷键，提升操作流畅性。对于长文件，Cursor 新增搜索替换工具，结合快速编辑功能，处理超长代码文件的时间成本降低约 30%，尤其适用于配置文件或大型前端项目。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349472/cursor-0-50-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349472/cursor-0-50-released</guid>
      <pubDate>Sat, 10 May 2025 09:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>PHP 8.4.7 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;PHP 8.4.7 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2Farchive%2F2025.php%232025-05-08-1" target="_blank"&gt;发布&lt;/a&gt;，这是一个错误修复版本。具体更新内容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Core： 
  &lt;ul&gt; 
   &lt;li&gt;修复错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18038" target="_blank"&gt;GH-18038&lt;/a&gt;（惰性代理调用 magic methods 两次）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18209" target="_blank"&gt;GH-18209&lt;/a&gt;（使用 EXTR_REFS 时 extract() 中的 Use-after-free）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18268" target="_blank"&gt;GH-18268&lt;/a&gt;（在添加属性&amp;nbsp;hooks 的对象上的 array_walk() 中出现 Segfault）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18304" target="_blank"&gt;GH-18304&lt;/a&gt;（通过动态属性更改 DateInterval 的属性会触发 SegFault）。&lt;/li&gt; 
   &lt;li&gt;修复 php_scandir 中的一些泄漏。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;DBA： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18247" target="_blank"&gt;GH-18247&lt;/a&gt;&amp;nbsp;无效路径上的&amp;nbsp;dba_popen() 内存泄漏。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Filter： 
  &lt;ul&gt; 
   &lt;li&gt;修复错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18309" target="_blank"&gt;GH-18309&lt;/a&gt;（ipv6 过滤器整数溢出）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;GD： 
  &lt;ul&gt; 
   &lt;li&gt;修复了 gdImageCrop() 中 rect 参数使用 x/width y/heigh 导致的 imagecrop() 溢出问题。&lt;/li&gt; 
   &lt;li&gt;修复了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18243" target="_blank"&gt;GH-18243&lt;/a&gt;&amp;nbsp;imagettftext() 字体大小值溢出/下溢。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Intl： 
  &lt;ul&gt; 
   &lt;li&gt;修复对 intltz_get_offset() 的 reference&amp;nbsp;支持。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;LDAP： 
  &lt;ul&gt; 
   &lt;li&gt;修复错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F17776" target="_blank"&gt;GH-17776&lt;/a&gt;（LDAP_OPT_X_TLS_* 选项无法被覆盖）。&lt;/li&gt; 
   &lt;li&gt;修复 high modification key 上的 NULL deref。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;libxml： 
  &lt;ul&gt; 
   &lt;li&gt;修复了自定义外部实体加载器返回无效资源导致混乱的 TypeError 消息的问题。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Opcache： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18294" target="_blank"&gt;GH-18294&lt;/a&gt;（断言失败 zend_jit_ir.c）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18289" target="_blank"&gt;GH-18289&lt;/a&gt;（修复 JIT 中的 segfault）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18136" target="_blank"&gt;GH-18136&lt;/a&gt;（跟踪 Windows 和 ARM64 上的 JIT floating point register clobbering）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;OpenSSL： 
  &lt;ul&gt; 
   &lt;li&gt;传递无效算法时修复 openssl_sign() 中的内存泄漏。&lt;/li&gt; 
   &lt;li&gt;修复写入 BIO 失败时的潜在泄漏。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PDO Firebird： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F17383" target="_blank"&gt;GH-17383&lt;/a&gt;（自 PHP 8.4 起 PDOException 的代码和信息有误）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PgSql： 
  &lt;ul&gt; 
   &lt;li&gt;修复 pg_put_copy_end() 中的 uouv。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;SPL： 
  &lt;ul&gt; 
   &lt;li&gt;修复错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18322" target="_blank"&gt;GH-18322&lt;/a&gt;（SplObjectStorage 调试处理程序内存管理不善）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Standard： 
  &lt;ul&gt; 
   &lt;li&gt;修复错误&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F18145" target="_blank"&gt;GH-18145&lt;/a&gt;（php8ts 在 php_clear_stat_cache() 中崩溃）。&lt;/li&gt; 
   &lt;li&gt;修复 iptcembed() 出错时的资源泄漏。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tests： 
  &lt;ul&gt; 
   &lt;li&gt;解决已弃用的 PHP 8.4 会话选项以防止测试失败。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Zip： 
  &lt;ul&gt; 
   &lt;li&gt;修复在 ZipArchive::addGlob() 中处理空选项时的 uouv 问题。&lt;/li&gt; 
   &lt;li&gt;修复在 ZipArchive::addGlob() 中处理过长路径时出现内存泄漏的问题。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.4.7" target="_blank"&gt;https://www.php.net/ChangeLog-8.php#8.4.7&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349426/php-8-4-7-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349426/php-8-4-7-released</guid>
      <pubDate>Sat, 10 May 2025 07:08:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Lazarus 4.0 正式发布，Pascal 集成开发环境</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Lazarus 4.0&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.lazarus.freepascal.org%2Findex.php%3Ftopic%3D71050.0" target="_blank"&gt; 已正式发布&lt;/a&gt;，此版本采用 FPC 3.2.2 构建。&lt;/p&gt; 
&lt;p&gt;Lazarus 是用于应用程序快速开发（RAD）的自由、跨平台的可视化集成开发环境，使用 Free Pascal 编译器，支持 Object Pascal 语言，与 Delphi 高度兼容，并被视作后者的自由软件替代品。&lt;/p&gt; 
&lt;p&gt;Lazarus 目前支持多种语言，包括中文。软件开发者可使用 Lazarus 创建原生的命令行与图形用户界面应用程序，以及移动应用、Web 应用、Web 服务、可视化组件和各种函数库。&lt;/p&gt; 
&lt;p&gt;Lazarus 集成开发环境和 Free Pascal 编译器支持多种操作系统，包括 Windows、GNU/Linux 和 mac OS。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-09d963b30621a58ce93915bb0a7fd08bed1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Lazarus 4.0 和 Free Pascal 更新内容：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.lazarus.freepascal.org%2FLazarus_4.0_release_notes" target="_blank"&gt;https://wiki.lazarus.freepascal.org/Lazarus_4.0_release_notes&lt;/a&gt;&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.lazarus.freepascal.org%2FUser_Changes_3.2.2" target="_blank"&gt;https://wiki.lazarus.freepascal.org/User_Changes_3.2.2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Lazarus 4.x 修复内容：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.com%2Ffreepascal.org%2Flazarus%2Flazarus%2F-%2Fcommits%2Ffixes_4%2F" target="_blank"&gt;https://gitlab.com/freepascal.org/lazarus/lazarus/-/commits/fixes_4/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Lazarus 4.0 下载地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fprojects%2Flazarus%2Ffiles%2F" target="_blank"&gt;https://sourceforge.net/projects/lazarus/files/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349420/lazarus-4-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349420/lazarus-4-0-released</guid>
      <pubDate>Sat, 10 May 2025 06:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Shotcut 25.05.11 发布，开源跨平台视频编辑器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Shotcut 25.05.11 现已发布，具体更细内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;新功能&lt;/span&gt;&lt;/h4&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;添加了&amp;nbsp;&lt;strong&gt;Alpha Strobe&amp;nbsp;&lt;/strong&gt;视频滤镜。&lt;/li&gt; 
 &lt;li&gt;在&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Timeline&amp;nbsp;&lt;/strong&gt;中添加了&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Freeze Frame&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;添加了&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;File &amp;gt; Rereun Filter Analysis&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;向&amp;nbsp;Timeline&amp;nbsp;&lt;/strong&gt;添加了可调节的 track headers 宽度。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;向播放列表&lt;/strong&gt;添加了项目计数。&lt;/li&gt; 
 &lt;li&gt;添加了&amp;nbsp;File &amp;gt; New submenu，其中包含项目和生成器的项目。&lt;/li&gt; 
 &lt;li&gt;已将&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Add Generator&amp;nbsp;&lt;/strong&gt;添加到&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Timeline toolbar&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;更改了&amp;nbsp;Convert to Edit-friendly&lt;strong&gt; &lt;/strong&gt;对话框，以明确「better」和「best」选项会创建非常大的文件。&lt;/li&gt; 
 &lt;li&gt;添加了&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Settings &amp;gt; Preview Scaling &amp;gt; 1080p&lt;/strong&gt;。（此功能主要是为了配合 DeckLink SDI/HDMI 外部监控使用。）&lt;/li&gt; 
 &lt;li&gt;添加了 Settings &amp;gt; Player &amp;gt; External Monitor &amp;gt; DeckLink Gamma with SDR and HLG HDR&amp;nbsp;选项。&lt;/li&gt; 
 &lt;li&gt;已将 HLG color transfer/gamma 添加到&amp;nbsp;&lt;strong&gt;GPU Effects&lt;/strong&gt;。HDR 尚未准备好发布；这些只是其中一部分。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;改进&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;改进了&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Obscure With Blur、Obscure With Mosaic 和 Mask: Apply&amp;nbsp;&lt;/strong&gt;中的合成功能。现在，它们可以更好地隐藏细节。&lt;/li&gt; 
 &lt;li&gt;将&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Files &amp;gt; Go Up&amp;nbsp;&lt;/strong&gt;按钮移至左上角，使其更像 OS 文件浏览器。&lt;/li&gt; 
 &lt;li&gt;升级的依赖项： 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;Qt 6.8.3&lt;/li&gt; 
   &lt;li&gt;MLT 7.32.0&lt;/li&gt; 
   &lt;li&gt;Rubberband 4.0&lt;/li&gt; 
   &lt;li&gt;SVT-AV1 3.0&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;修复了选择或拖动短时间轴片段的功能（在 v25.03 中损坏）。&lt;/li&gt; 
 &lt;li&gt;Fixed Text: Rich scroll presets（在 v25.03 中损坏）。&lt;/li&gt; 
 &lt;li&gt;修复了启动时&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Files dock&amp;nbsp;&lt;/strong&gt;可能崩溃的问题（在 v25.01 中损坏）。&lt;/li&gt; 
 &lt;li&gt;修复选择 track head 时可能发生的崩溃。&lt;/li&gt; 
 &lt;li&gt;修复&lt;strong&gt; &lt;/strong&gt;Filters &amp;gt; Copy Current/All&amp;nbsp;忽略已禁用滤镜的问题。&lt;/li&gt; 
 &lt;li&gt;修复&lt;strong&gt; &lt;/strong&gt;&lt;strong&gt;Timeline &amp;gt; Record Audio&amp;nbsp;&lt;/strong&gt;在 macOS 上失真的问题。&lt;/li&gt; 
 &lt;li&gt;修复了 SDI/HDMI capture/monitor&amp;nbsp;无法与最新的 Blackmagic Design 驱动程序配合使用的问题。&lt;/li&gt; 
 &lt;li&gt;修复了 DeckLink SDI/HDMI 外接显示器中 5.1 声音输出中的 Center/LFE 声道交换问题。&lt;/li&gt; 
 &lt;li&gt;修复了添加未知或持续时间过长（例如超过 7 天）的媒体的问题。现在，它会提示输入持续时间。&lt;/li&gt; 
 &lt;li&gt;……&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#333333"&gt;更多详情可查看：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.shotcut.org%2Fblog%2Fnew-release-250511%2F" target="_blank"&gt;https://www.shotcut.org/blog/new-release-250511/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349417/shotcut-250511-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349417/shotcut-250511-released</guid>
      <pubDate>Sat, 10 May 2025 06:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>MinIO-Plus v1.0.5 已经发布，MinIO 的二次封装与增强工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;MinIO-Plus v1.0.5 已经发布，MinIO&amp;nbsp;的二次封装与增强工具&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;缩略图为调用时懒加载，删除是否启用缩略图配置项。&lt;/li&gt; 
 &lt;li&gt;删除无效 import&lt;/li&gt; 
 &lt;li&gt;工具类不可被实例化。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href="https://gitee.com/lxp135/minio-plus/compare/v1.0.4...v1.0.5" target="_blank"&gt;https://gitee.com/lxp135/minio-plus/compare/v1.0.4...v1.0.5&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/lxp135/minio-plus/releases/v1.0.5"&gt;https://gitee.com/lxp135/minio-plus/releases/v1.0.5&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349400/minio-plus-1-0-5-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349400/minio-plus-1-0-5-released</guid>
      <pubDate>Sat, 10 May 2025 04:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>RustDesk 1.4.0 远程桌面，全面支持 Web Socket</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;新增功能&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;锁屏时允许使用登录屏幕密码&lt;/li&gt; 
 &lt;li&gt;截屏功能&lt;/li&gt; 
 &lt;li&gt;使用主机名作为专业版的标识&lt;/li&gt; 
 &lt;li&gt;Windows 自动更新，Windows 和 Mac 手动更新&lt;/li&gt; 
 &lt;li&gt;所有平台支持 WebSocket&lt;/li&gt; 
 &lt;li&gt;调整触控板速度 #11680&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;变更&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除 reqwest 的系统代理依赖&lt;/li&gt; 
 &lt;li&gt;显示名称首字母大写&lt;/li&gt; 
 &lt;li&gt;Socks5 代理仅使用 TCP，因为许多用户未能正确设置 UDP，包括我们自己&lt;/li&gt; 
 &lt;li&gt;托盘中的「退出」更改为「停止服务」，以避免混淆&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;修复&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;虚拟 F11 键适配 macOS (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F11366%23discussioncomment-12731839" target="_blank"&gt;11366&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;托盘启动尝试通过 sudo（被拒绝），导致发送电子邮件 #9802&lt;/li&gt; 
 &lt;li&gt;使用 reqwest 的 Http 代理&lt;/li&gt; 
 &lt;li&gt;隐藏 cm&lt;/li&gt; 
 &lt;li&gt;局域网发现&lt;/li&gt; 
 &lt;li&gt;Rdp #10039&lt;/li&gt; 
 &lt;li&gt;鼠标滚动，远程标签页 #11708&lt;/li&gt; 
 &lt;li&gt;2FA 登录状态&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fhttps%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Freleases%2Ftag%2F1.3.9" target="_blank"&gt;https://github.com/rustdesk/rustdesk/releases/tag/1.&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Freleases%2Ftag%2F1.4.0" target="_blank"&gt;4.0&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style="margin-left:0; margin-right:0"&gt;顶级 Rust 开源项目期待你的加入，请发送简历到&amp;nbsp;emhvdUBydXN0ZGVzay5jb20gICA=&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349395/rustdesk-1-4-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349395/rustdesk-1-4-0-released</guid>
      <pubDate>Sat, 10 May 2025 03:44:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>🔥飞书钉钉开源替代无代码流程引擎 FlowLong 1.1.9 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="141" src="https://oscimg.oschina.net/oscnet/up-8f140b87336199abaadd80c20df88f4a1a2.png" width="474" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;开源地址：&lt;span style="color:#ff2941"&gt;https://gitee.com/aizuda/flowlong&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#ff2941"&gt;&lt;span style="background-color:#ffffff; color:#3f3f3f"&gt;开源地址：&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#ff2941"&gt;https://github.com/aizuda/flowlong&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;官网文档：https://flowlong.aizuda.com&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#505050; margin-left:0; margin-right:0"&gt;支持全流程操作监听，仅 8 张表实现整个流程引擎（更符合中国人的思维模式设计），截至当前近 300 家企业自用登记接入使用。300 多家企业包括，国家计算中心，电信，等国企已上车，你还在等什么呢？&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;span style="color:#ff2941"&gt;开源登记使用名单如下，企业版用户暂不公开&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;span style="color:#ff2941"&gt;https://gitee.com/aizuda/flowlong/issues/IB5K4V&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;Flowlong 1.1.9 主要亮点&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;feat: 新增支持异步子流程&lt;/li&gt; 
 &lt;li&gt;feat: 新增支持父节点为并行分支或包容分支同步驳回&lt;/li&gt; 
 &lt;li&gt;feat: 新增支持唤醒撤回或拒绝终止历史任务&lt;/li&gt; 
 &lt;li&gt;opt: 优化（自动完成、自动拒绝）节点事件监听&lt;/li&gt; 
 &lt;li&gt;opt: 优化跳转设置委托人为当前参与者&lt;/li&gt; 
 &lt;li&gt;opt: 优化下一个执行节点结束逻辑&lt;/li&gt; 
 &lt;li&gt;opt: 优化动态获取下一个节点&lt;/li&gt; 
 &lt;li&gt;opt: 优化支持驳回跳过子流程重启&lt;/li&gt; 
 &lt;li&gt;fixed 异步子流程结束主流程审批任务异常&lt;/li&gt; 
 &lt;li&gt;fixed issues/IC5U5U&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349382/flowlong-1-1-9-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349382/flowlong-1-1-9-released</guid>
      <pubDate>Sat, 10 May 2025 03:02:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Linus 发布 Linux 6.15-rc6，顺便秀了自己用的樱桃机械键盘</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Linus Torvalds 发布了 Linux 6.15-rc6。在 Linux 6.15 的合并窗口中，6.15-rc6 修复了一些意外跳过的 TLB 刷新问题，在 XPad 驱动程序中支持了更多游戏手柄，并解决了 AMD CPU 性能问题。此外，还修复了其他一些小 bug/回归问题。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f2fca982c149d72e722588256aeac630e5c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Linus Torvalds 在&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3Dwgkt%2Bh_UJKE7Lx%3Db%3Dixt%3DryZ_fXRqMjJYURYVK-3g-k%2Bg%40mail.gmail.com%2FT%2F%23u" target="_blank"&gt;6.15-rc6 公告&lt;/a&gt;中评论道：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;一切看起来都还算正常——我们收到的提交比 rc5 版本多了一些，这并非我希望在发布过程中看到的趋势，但差异并不大，感觉更像是修复拉取请求时间波动的正常噪音，而不是什么真正的信号。&lt;/p&gt; 
 &lt;p&gt;所以我不会担心。距离正常的发布计划还有两周时间，感觉一切都在按计划进行。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Linus 还分享了他对键盘的最新想法，他放弃了静音键盘，转而采用基于 MX Cherry 轴的键盘：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;顺便说一句：我终于放弃了尝试更安静的薄型键盘：我花了半年时间，以为我会习惯它，结果又回到了那种嘈杂的樱桃蓝色轴体敲击声。看来我需要听觉（或者触觉）反馈来避免我不断犯的打字错误。&lt;/p&gt; 
 &lt;p&gt;我不知道自己为什么要尝试，毕竟我又不是在办公室里，键盘的噪音又不会打扰到别人。&lt;/p&gt; 
 &lt;p&gt;我提这个只是为了防止有人对我的打字错误做出反应。又或许只是我一个人的错别字，我只是在敷衍地把责任推到键盘上。&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0512/110020_RLcF_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349380</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349380</guid>
      <pubDate>Sat, 10 May 2025 03:01:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Istio 1.26 发布，Istio 1.23 正式停止维护</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Istio 1.26 现已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGxVv6eS6cGgJqMTUaJnV2w" target="_blank"&gt;发布&lt;/a&gt;，这是一次在功能、可扩展性、安全性与平台适配性方面全面提升的重要更新。与此同时，Istio 1.23 也正式停止维护，&lt;span style="color:#3f3f3f"&gt;不再接收安全漏洞与关键 Bug 修复，&lt;/span&gt;标志着这一主流版本的生命周期正式结束。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style="color:#3f3f3f"&gt;Istio 1.26 标志着 Ambient 模式从「实验性」走向更成熟阶段，也是 Istio 与 Kubernetes 深度集成的又一里程碑。作为云原生网络的核心基础设施，Istio 将持续推动面向服务的流量治理、安全与可观测性演进。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;本次发布支持 Kubernetes 1.29 至 1.32（预计兼容 1.33），如计划升级至 1.26，可提前参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fistio.io%2Flatest%2Fnews%2Freleases%2F1.26.x%2Fannouncing-1.26%2F" target="_blank"&gt;升级指南&lt;/a&gt;。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Istio 1.26 新特性速览&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;1. Gateway API 自动资源支持全面可配置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 Istio 1.26 中，用户终于可以通过 ConfigMap 自定义由 Gateway API 自动生成的资源，例如&amp;nbsp;&lt;code&gt;Service&lt;/code&gt;、&lt;code&gt;Deployment&lt;/code&gt;、&lt;code&gt;HorizontalPodAutoscaler&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;PodDisruptionBudget&lt;/code&gt;。这使得运维和网关部署策略更灵活，显著提升了生产可用性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Ambient 模式下支持 TCPRoute&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Ambient 模式下的 Waypoint 代理现在支持&amp;nbsp;Gateway API 的&amp;nbsp;&lt;code&gt;TCPRoute&lt;/code&gt;，让 TCP 层流量的精细控制成为可能，进一步提升了 L4 层面的可观测与控制能力。&lt;/p&gt; 
&lt;p&gt;此外，Istio 还引入了 Gateway API v1.3 的实验性特性&amp;nbsp;&lt;code&gt;BackendTLSPolicy&lt;/code&gt;与&amp;nbsp;&lt;code&gt;BackendTrafficPolicy&lt;/code&gt;，为未来的重试、后端认证控制铺平道路。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. 支持 Kubernetes 新特性 ClusterTrustBundle&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Istio 1.26 增加了对 Kubernetes 实验性特性&amp;nbsp;&lt;code&gt;ClusterTrustBundle&lt;/code&gt;&amp;nbsp;的支持，这是集群间信任管理的重要一步，未来有望替代传统 CA 机制。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. istioctl 工具增强&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&amp;nbsp;&lt;code&gt;istioctl analyze&lt;/code&gt;&amp;nbsp;现在支持指定某个检查项，便于集成自动化检测。&lt;/li&gt; 
 &lt;li&gt;增加&amp;nbsp;&lt;code&gt;--tls-server-name&lt;/code&gt;&amp;nbsp;支持，便于生成可用于特定网关域名的 kubeconfig。&lt;/li&gt; 
 &lt;li&gt;多项 CLI 命令修复与增强，提升安装与调试体验。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;5. 安装与平台适配改进&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 GKE 中自动配置&amp;nbsp;&lt;code&gt;ResourceQuota&lt;/code&gt;&amp;nbsp;与&amp;nbsp;&lt;code&gt;cniBinDir&lt;/code&gt;，提升兼容性。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;istio-cni&lt;/code&gt;&amp;nbsp;不再默认使用&amp;nbsp;&lt;code&gt;hostNetwork&lt;/code&gt;，降低端口冲突风险。&lt;/li&gt; 
 &lt;li&gt;Helm Chart 中新增支持设置&amp;nbsp;&lt;code&gt;loadBalancerClass&lt;/code&gt;、&lt;code&gt;updateStrategy&lt;/code&gt;、&lt;code&gt;ConfigMap&lt;/code&gt;&amp;nbsp;等关键参数。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;6. EnvoyFilter 和 Retry 策略增强&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;EnvoyFilter&lt;/code&gt;&amp;nbsp;现可基于&amp;nbsp;&lt;code&gt;VirtualHost&lt;/code&gt;&amp;nbsp;的域名进行匹配。&lt;/li&gt; 
 &lt;li&gt;支持配置重试的 backoff 间隔与 host predicate。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详细改动可参考官方&lt;a href="http://:https://istio.io/latest/news/releases/1.26.x/announcing-1.26/change-notes/"&gt;完整变更日志&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349365/istio-1-26-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349365/istio-1-26-released</guid>
      <pubDate>Sat, 10 May 2025 02:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>GFast 开发 MCP 服务器之 mark3labs/mcp-go 库接入（二）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;接下来我们正式把&lt;code&gt;mark3labs/mcp-go&lt;/code&gt;接入到 GFast 框架，并实现自动注册，后续我们只需要添加对应的&lt;code&gt;tool&lt;/code&gt;、&lt;code&gt;resource&lt;/code&gt;、&lt;code&gt;prompt&lt;/code&gt;方法即可&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;一、首先要了解&lt;code&gt;tool&lt;/code&gt;、&lt;code&gt;resource&lt;/code&gt;、&lt;code&gt;prompt&lt;/code&gt;是什么，有什么作用。&lt;/h2&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，&lt;strong&gt;Tool、Resource、Prompt&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是三个核心组件，分别承担不同的角色，共同协作以优化模型对上下文的理解和处理能力。以下是它们的详细解释和作用：&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;1. Tool&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;工具&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tool&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是模型可调用的外部功能模块或接口，用于扩展模型的基础能力（如计算、搜索、代码执行等）。&lt;/li&gt; 
 &lt;li&gt;在 MCP 中，Tools 通常以标准化协议（如 OpenAI 的 Function Calling&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;集成，允许模型动态选择并执行工具。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;增强模型功能&lt;/strong&gt;：弥补纯语言模型的局限性（如实时数据获取、数学运算）。&lt;br&gt; &lt;em&gt;示例&lt;/em&gt;：调用搜索引擎 API 获取最新新闻，或使用 Python 解释器运行代码。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自动化任务&lt;/strong&gt;：将复杂任务分解为工具链（如先检索知识库，再生成摘要）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;上下文动态更新&lt;/strong&gt;：通过工具返回的结果，实时更新模型的上下文。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;典型场景&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;查询天气、股票等实时信息。&lt;/li&gt; 
 &lt;li&gt;执行数据库操作或数据分析。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;2. Resource&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;资源&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resource&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是模型可访问的静态或动态数据源，包括知识库、数据库、文档集合等。&lt;/li&gt; 
 &lt;li&gt;在 MCP 中，Resources 通过索引或向量化技术（如 RAG&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;被高效检索和加载到上下文中。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;扩展知识边界&lt;/strong&gt;：为模型提供训练数据之外的领域知识（如企业私有文档）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持长上下文&lt;/strong&gt;：通过按需加载资源片段，避免一次性输入全部内容。&lt;br&gt; &lt;em&gt;示例&lt;/em&gt;：仅加载与用户问题相关的文档段落，而非整个 PDF。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多模态支持&lt;/strong&gt;：资源可以是文本、表格、图像（需编码为模型可理解的格式）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;典型场景&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;法律顾问模型引用法典条款。&lt;/li&gt; 
 &lt;li&gt;医疗诊断模型参考最新医学论文。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;3. Prompt&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;提示&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是用户或系统提供给模型的指令或上下文输入，用于引导模型行为。&lt;/li&gt; 
 &lt;li&gt;在 MCP 中，Prompt 可能被结构化设计（如包含角色设定、任务步骤、示例等）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;作用&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;控制模型输出&lt;/strong&gt;：通过精心设计的 Prompt 约束生成内容（如格式、风格）。&lt;br&gt; &lt;em&gt;示例&lt;/em&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt; &lt;pre&gt;&lt;code class="language-plaintext"&gt;「你是一名资深翻译官，将以下中文翻译成英文，要求使用学术用语：{text}」
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;动态上下文管理&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;Prompt 可包含对 Tool 或 Resource 的引用。&lt;br&gt; &lt;em&gt;示例&lt;/em&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt; &lt;pre&gt;&lt;code class="language-plaintext"&gt;「根据从{数据库工具}检索到的 2023 年财报，总结公司的营收趋势。」
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多轮对话维护&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;在对话系统中，Prompt 可能隐式包含历史对话的压缩摘要。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;典型场景&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;复杂任务分解（如分步骤生成报告）。&lt;/li&gt; 
 &lt;li&gt;个性化交互（如设定模型角色为「幽默的助手」）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;三者的协同关系&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;用户输入 Prompt&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ 模型解析后，发现需要调用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Tool&lt;/strong&gt;（如搜索）→ Tool 返回结果作为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Resource&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ 模型整合资源生成最终回复。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt 中嵌入 Resource 引用&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ 模型通过检索工具加载相关资源 → 结合资源内容生成答案。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;示例流程&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-plaintext"&gt;用户 Prompt: "特斯拉 2023 年 Q3 的营收是多少？"  
→ 模型调用 "财经数据查询 Tool"  
→ Tool 访问财务报表 Resource&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;如数据库&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;  
→ 返回数据后，模型生成回答： "特斯拉 2023 年 Q3 营收为 234 亿美元。"  
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;总结对比&lt;/strong&gt;&lt;/h3&gt; 
&lt;table cellspacing="0" style="--fonts-override:var(--fonts-default-override-zh-cn); --fonts-regular:var(--fonts-override, var(--fonts-proportional)), &amp;quot;Noto Sans&amp;quot;, &amp;quot;Liberation Sans&amp;quot;, sans-serif, var(--fonts-emoji); -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-color:inherit; border-style:solid; border-width:0px; box-sizing:border-box; caret-color:#01050a; color:#181c21; display:block; font-family:system-ui-zh-cn,-apple-system,&amp;quot;Segoe UI&amp;quot;,system-ui,Roboto,&amp;quot;Helvetica Neue&amp;quot;,Arial,&amp;quot;Noto Sans&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Noto Color Emoji&amp;quot;,&amp;quot;Twemoji Mozilla&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-indent:0px; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;组件&lt;/th&gt; 
   &lt;th&gt;核心作用&lt;/th&gt; 
   &lt;th&gt;关键特点&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;&lt;strong&gt;Tool&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;扩展模型能力，执行外部操作&lt;/td&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;动态性、API 驱动&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;&lt;strong&gt;Resource&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;提供数据支持，补充知识&lt;/td&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;静态/动态存储、按需检索&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;&lt;strong&gt;Prompt&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;引导模型行为，传递任务意图&lt;/td&gt; 
   &lt;td style="border-style:solid; border-width:1px"&gt;结构化设计、可嵌套工具/资源&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;通过 MCP 对这三者的统一管理，模型能够更高效、精准地处理复杂任务，同时降低冗余计算和上下文噪声。&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;明白这些方法各自作用后，就更方便我们后续接入相关功能。&lt;/p&gt; 
&lt;h2&gt;二、挂载 MCP 服务&lt;/h2&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;code&gt;cmd.go&lt;/code&gt;文件中可以看到自动挂载服务的方法调用如下图：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423212542.png" target="_blank"&gt;&lt;img alt="20250423212542" src="https://oscimg.oschina.net/oscnet//619a2257782690f294b0a603235614eb.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;然后在&lt;code&gt;app&lt;/code&gt;目录下添加&lt;code&gt;mcp&lt;/code&gt;模块，创建&lt;code&gt;hook&lt;/code&gt;挂载 mcp 资源相关服务&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423213037.png" target="_blank"&gt;&lt;img alt="20250423213037" src="https://oscimg.oschina.net/oscnet//6748462a52859a492d8cd998aa041ff5.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;添加后后续的&lt;code&gt;tool&lt;/code&gt;、&lt;code&gt;resource&lt;/code&gt;、&lt;code&gt;prompt&lt;/code&gt;就可以实现自动注册和绑定到服务中来。&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;添加自动注册的相关方法：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423213622.png" target="_blank"&gt;&lt;img alt="20250423213622" src="https://oscimg.oschina.net/oscnet//8e339954860fcb659daece7f14fa94d2.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;1. 添加&lt;code&gt;tools&lt;/code&gt;工具函数&lt;/h3&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;code&gt;mcp&lt;/code&gt;目录下创建&lt;code&gt;tools&lt;/code&gt;目录，该目录用来存放 mcp 服务所需的工具函数，例如添加一个&lt;code&gt;hello_world&lt;/code&gt;工具：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;创建一个&lt;code&gt;tool.go&lt;/code&gt;用于存放实现自动注册的结构体：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423213913.png" target="_blank"&gt;&lt;img alt="20250423213913" src="https://oscimg.oschina.net/oscnet//e48f754309142597a15b10ad977904d0.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;添加&lt;code&gt;hello_world.go&lt;/code&gt;添加工具方法：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423214003.png" target="_blank"&gt;&lt;img alt="20250423214003" src="https://oscimg.oschina.net/oscnet//c723bf9712a7f7541bc4413ae8d38d1b.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;此时，运行 mcp 客户端，连接上服务后，可以看到&lt;code&gt;tool&lt;/code&gt;工具列表中就有&lt;code&gt;hello_world&lt;/code&gt;工具：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423214347.png" target="_blank"&gt;&lt;img alt="20250423214347" src="https://oscimg.oschina.net/oscnet//cd7371fb5f6ac287b3030790a3354261.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;输入一个名字「张三」运行，可以看到 mcp 服务响应了&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;「Hello, 张三!」。&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;这时如果我们要再建一个工具就会变得非常方便，只需要再添加一个文件，或在当前文件继续添加方法都是可以的，为了直观展示，我们就再添加一个文件的方式来添加工具：&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;比如再添加一个工具用于获取指定目录下有哪些文件，添加完后立马就能在 mcp 客户端使用，而不需要修改其他任何代码。&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423214737.png" target="_blank"&gt;&lt;img alt="20250423214737" src="https://oscimg.oschina.net/oscnet//be83a530be6ba96a8a117c3bc76b373d.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423215034.png" target="_blank"&gt;&lt;img alt="20250423215034" src="https://oscimg.oschina.net/oscnet//021c5e01376500dd6aa2a1400ef23797.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;然后我们通过&lt;code&gt;vscode&lt;/code&gt;使用 roo 插件工具调用大模型来使用 mcp 提供的工具&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;配置好 mcp 服务后可以看到对应工具&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423220124.png" target="_blank"&gt;&lt;img alt="20250423220124" src="https://oscimg.oschina.net/oscnet//c582c646893eaa5ae771b80e82a840cf.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423215607.png" target="_blank"&gt;&lt;img alt="20250423215607" src="https://oscimg.oschina.net/oscnet//00390c9d9e7ee108258f67be23baea65.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423220708.png" target="_blank"&gt;&lt;img alt="20250423220708" src="https://oscimg.oschina.net/oscnet//6d8cd1f426906745f1648a1f33b4a731.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423220723.png" target="_blank"&gt;&lt;img alt="20250423220723" src="https://oscimg.oschina.net/oscnet//d82ddeac521c13499d79d8a1c4d90511.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;到此，添加工具的集成就完成。&lt;/p&gt; 
&lt;h3&gt;2. 添加&lt;code&gt;prompt&lt;/code&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;resource&lt;/code&gt;是相同的操作，只需要在对应目录添加对应方法即可&lt;/h3&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423220924.png" target="_blank"&gt;&lt;img alt="20250423220924" src="https://oscimg.oschina.net/oscnet//dd2de85c3ad3baa870a913eda3948411.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423221231.png" target="_blank"&gt;&lt;img alt="20250423221231" src="https://oscimg.oschina.net/oscnet//989f8f7da06478df923a59584efd098a.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#181c21; margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-23%2F20250423221258.png" target="_blank"&gt;&lt;img alt="20250423221258" src="https://oscimg.oschina.net/oscnet//8e3a45ac8387e4c0d107903433528c12.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349350</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349350</guid>
      <pubDate>Sat, 10 May 2025 01:05:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Skyeye 云智能制造办公系统-Saas 开发 v3.16.3 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;Skyeye 云智能制造，采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Springboot (微服务) + Layui + UNI-APP + Ant Design Vue&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的低代码平台。包含 30 多个应用模块、50 多种电子流程，CRM、PM、ERP、MES、ADM、EHR、笔记、知识库、项目、门店、商城、财务、多班次考勤、薪资、招聘、云售后、论坛、公告、问卷、报表设计、工作流、日程、云盘等全面管理，实现智能制造行业一体化管理。实现管理流程 「客户关系 -&amp;gt; 线上 / 线下报价 -&amp;gt; 销售报价 -&amp;gt; 销售合同 -&amp;gt; 生产计划 -&amp;gt; 商品设计 -&amp;gt; 采购 -&amp;gt; 加工制造 -&amp;gt; 入库 -&amp;gt; 发货 -&amp;gt; 售后服务」 的高效运作，同时实现企业员工的管理以及内部运作的流程操作，完善了员工从 「入职 -&amp;gt; 培训 -&amp;gt; 转正 -&amp;gt; 办公 -&amp;gt; 离职」 等多项功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;a href="https://gitee.com/dromara/skyeye/blob/company_server/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md"&gt;常见问题&lt;/a&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Farticles.zsxq.com%2Fid_xi3xhacte72g.html" target="_blank"&gt;开发文档&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fspace.bilibili.com%2F87396008%2Fchannel%2Fseries" target="_blank"&gt;视频教程&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fsheet%2FDYUtPdWhTbVBITlpL%3Ftab%3D000001" target="_blank"&gt;功能点&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Skyeye&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;云【源代码】针对 {星球用户} 开源。拿到源码后可进行学习、毕设、企业等使用。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 云智能制造 v3.16.3 发布 ，发布内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;Skyeye 云已加入 Dromara 社区&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;云校园 
  &lt;ul&gt; 
   &lt;li&gt;新增帖子/帖子评论、圈子、视频/视频评论的分享&lt;/li&gt; 
   &lt;li&gt;用户详情里面新增我/他的圈子，我浏览的帖子/视频/圈子，我的访客&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;VUE 重构 
  &lt;ul&gt; 
   &lt;li&gt;云盘&lt;/li&gt; 
   &lt;li&gt;数据库配置&lt;/li&gt; 
   &lt;li&gt;数据源配置&lt;/li&gt; 
   &lt;li&gt;报表设计&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Saas 模式 
  &lt;ul&gt; 
   &lt;li&gt;Layui 多租户适配&lt;/li&gt; 
   &lt;li&gt;Vue 多租户适配&lt;/li&gt; 
   &lt;li&gt;移动端多租户适配&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;源代码对星球用户开放&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;解决若干问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 具备&lt;/span&gt;&lt;strong&gt;&lt;span&gt;低代码、快捷开发、可视化设计、微服务&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;等特点，方便客户二次开发，极大的提高了开发效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;erp：&amp;nbsp;&lt;/span&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;OA：&amp;nbsp;&lt;/span&gt;&lt;span&gt;https://gitee.com/dromara/skyeye&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;报表：&lt;/span&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye-report&lt;/span&gt;&lt;span&gt;&amp;nbsp; 有问题可以联系作者，详情请看开发计划。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;PC 端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-35a653b1c873ab9501f7187b0901a27cc64.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a8f7c658a21594b2787c667fc1214c673b1.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-50138b38c37d750b93db5b37493f71bf4ca.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-00fd5dbd8a44f8d815ecf77d93d37062616.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-6499d74ddcfe9a99997d8c797aae7b7f0b0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-e97af4a2caccb199b76d906ecbb339a7575.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a58e6cb3e687de2a468cb095516951f077c.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-9eb76f53a99358fdf1ce532dc711baec41a.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ce7c58e9fe940d58b2cb9cec441176b3481.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ca685ab278a861067f5850e12470e155e59.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-270d853e879bc14cf6632d67e0168c656c0.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-0bebb255d3c79c13a69bfa0fbb7fcd80836.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-90cde5042c0effeea9e85761ff8dc7283d5.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-47ccf76ab671effc6142727caf066d67071.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;移动端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-6850576a0a01188e6b2a9d1ecce58ed7455.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-770416ac656e0b41097dc917b2b404e62f2.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-754034f48dd04fd9ee1e6618db0e37f6ecb.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-d7707ebc67ddf3842adbb54fdc0c062a2a1.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349348/win10-skyeye-3-16-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349348/win10-skyeye-3-16-3-released</guid>
      <pubDate>Sat, 10 May 2025 00:47:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>cronin v0.8.5 已经发布，服务器定时任务平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;cronin v0.8.5 已经发布，服务器定时任务平台&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;bug gitee api 文件获取 sha 字段丢失补充。&lt;/li&gt; 
 &lt;li&gt;重构，日志索引方案，解决最近 1 分钟日志查询空的问题。&lt;/li&gt; 
 &lt;li&gt;优化，日志列表查询兼容新索引方案。&lt;/li&gt; 
 &lt;li&gt;新增 http 任务请求超时设置。&lt;/li&gt; 
 &lt;li&gt;新增，已执行日志名称枚举获取。&lt;/li&gt; 
 &lt;li&gt;新增，独立日志查询页面，支持条件查询、分页。&lt;/li&gt; 
 &lt;li&gt;重构，日志列表显示方案。&lt;/li&gt; 
 &lt;li&gt;其它已知 bug 修正：sql 编辑取消再次编辑错误、日志删除任务错误、日志详情页节点错乱、cmd 执行错误。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/mnyuan/cronin/releases/v0.8.5"&gt;https://gitee.com/mnyuan/cronin/releases/v0.8.5&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349319/cronin-0-8-5-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349319/cronin-0-8-5-released</guid>
      <pubDate>Fri, 09 May 2025 14:44:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
  </channel>
</rss>
