<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 20 Aug 2025 22:46:09 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>流程编排框架，Solon Flow v3.5.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; text-align:start"&gt;Solon Flow 是一个轻量级流程编排框架（采用 yaml 或 json 偏平式编排格式）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持无状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于计算（或任务）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于业务规则和决策处理型的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;支持有状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于办公审批型（有状态、可中断，人员参与）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于长时间流程（结合自动前进，等待介入）的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;有可视化的设计器：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Fflow%2Fdesigner%2F" target="_blank"&gt;https://solon.noear.org/flow/designer/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;同时兼容 java8 ~ java24。也可嵌入到 SpringBoot、jFinal、Vert.x 等框架中使用。嵌入第三方框架的示例：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/solonlab/solon-flow-embedded-examples"&gt;https://gitee.com/solonlab/solon-flow-embedded-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fsolonlab%2Fsolon-flow-embedded-examples" target="_blank"&gt;https://gitcode.com/solonlab/solon-flow-embedded-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsolonlab%2Fsolon-flow-embedded-examples" target="_blank"&gt;https://github.com/solonlab/solon-flow-embedded-examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;一、最近更新了什么？&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;本次更新，统一了「无状态」、「有状态」流程的基础：引擎、驱动。通过上下文来识别是否为有状态及相关支持。&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;FlowContext 改为接口，增加了两个重要的方法：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#986801"&gt;boolean&lt;/span&gt; &lt;span style="color:#4078f2"&gt;isStateful&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
StatefulSupporter &lt;span style="color:#4078f2"&gt;statefulSupporter&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;且，FlowContext 做了分离。解决了，之前在实例范围内不可复用的问题。&lt;/p&gt; 
&lt;h4&gt;兼容说明&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;stateful 相关概念与接口有调整&lt;/li&gt; 
 &lt;li&gt;FlowContext 改为接口，并移除 result 字段（所有数据基于 model 交换）&lt;/li&gt; 
 &lt;li&gt;FlowContext 内置实现分为：StatelessFlowContext 和 StatefulFlowContext。通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;FlowContext.of(...)&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实例化。（也可按需定制）&lt;/li&gt; 
 &lt;li&gt;StateRepository 接口的方法命名调整，与 StatefulSupporter 保持一致性&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;升级请做好调整与测试。&lt;/p&gt; 
&lt;h4&gt;具体更新&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 solon-flow iterator 循环网关（&lt;code&gt;$for&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;$in&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;新增 solon-flow activity 节点流入流出模式（&lt;code&gt;$imode&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;$omode&lt;/code&gt;），用于二次定制开发&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow ChainInterceptor:onNodeStart, onNodeEnd 方法（扩展拦截的能力）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow 操作：Operation.BACK_JUMP, FORWARD_JUMP&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowContext:incrGet, incrAdd&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow aot 配置&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow StatefulSupporter 接口，方便 FlowContext 对有状态流程提供支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowDriver:postHandleTask 方法（允许两段式提交任务执行，利于有状态与无状态的驱动定制）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowContext:exchanger 方法（可获取 FlowExchanger 实例）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowContext 拆分为：FlowContext（对外，可复用） 和 FlowExchanger（对内）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowContext 移除 result 字段（所有数据基于 model 交换）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowContext get 改为返回 Object（之前为 T），新增 getAs 返回 T（解决 get 不能直接打印的问题）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow 移除 StatefulSimpleFlowDriver 功能合并到 SimpleFlowDriver（简化为一个驱动，同时支持有状态与无状态流程）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow 新增 stateless 包，明确 「有状态」 与 「无状态」 两个概念（StatelessFlowContext 和 StatefulFlowContext）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowStatefulService 接口，每个方法的 context 参数移到最后位（保持一致性）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow StateRepository 接口的方法命名，与 StatefulSupporter 保持一致性&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow Chain 拆分为：Chain 和 ChainDecl&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;两对拆分类的定位：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;FlowContext 侧重对外，可复用（用于传参、策略，状态）。有 StatelessFlowContext 和 StatefulFlowContext 两种内置实现。&lt;/li&gt; 
 &lt;li&gt;FlowExchanger 侧重对内，不可复用（用于控制、中间临时状态或变量）&lt;/li&gt; 
 &lt;li&gt;Chain 为运行态（不可修改）&lt;/li&gt; 
 &lt;li&gt;ChainDecl 为声明或配置态（可以随时修改）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;应用示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;//FlowContext 构建&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(); &lt;em&gt;//无状态的&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"1"&lt;/span&gt;); &lt;em&gt;//无状态的&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"1"&lt;/span&gt;, stateController); &lt;em&gt;//有状态控制的&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"1"&lt;/span&gt;, stateController, stateRepository); &lt;em&gt;//有状态控制的和状态持久化的&lt;/em&gt;


&lt;em&gt;//Chain 手动声明&lt;/em&gt;
&lt;span style="color:#986801"&gt;Chain&lt;/span&gt; &lt;span style="color:#986801"&gt;chain&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;ChainDecl&lt;/span&gt;(&lt;span style="color:#50a14f"&gt;"d3"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"风控计算"&lt;/span&gt;).create(decl -&amp;gt; {
            decl.addNode(NodeDecl.startOf(&lt;span style="color:#50a14f"&gt;"s"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;));
            decl.addNode(NodeDecl.activityOf(&lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"基本信息评分"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"g1"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"@base_score"&lt;/span&gt;));
            decl.addNode(NodeDecl.exclusiveOf(&lt;span style="color:#50a14f"&gt;"g1"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"分流"&lt;/span&gt;)
                    .linkAdd(&lt;span style="color:#50a14f"&gt;"e"&lt;/span&gt;, l -&amp;gt; l.title(&lt;span style="color:#50a14f"&gt;"优质用户（评分 90 以上）"&lt;/span&gt;).condition(&lt;span style="color:#50a14f"&gt;"score &amp;gt; 90"&lt;/span&gt;))
                    .linkAdd(&lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, l -&amp;gt; l.title(&lt;span style="color:#50a14f"&gt;"普通用户"&lt;/span&gt;)) &lt;em&gt;//没条件时，做为默认&lt;/em&gt;
            );
            decl.addNode(NodeDecl.activityOf(&lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"电商消费评分"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"@ec_score"&lt;/span&gt;));
            decl.addNode(NodeDecl.activityOf(&lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"黑名单检测"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"e"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"@bl_score"&lt;/span&gt;));
            decl.addNode(NodeDecl.endOf(&lt;span style="color:#50a14f"&gt;"e"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"."&lt;/span&gt;));
        });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;二、特色展示&lt;/h2&gt; 
&lt;h3&gt;1、采用 yaml 或 json 偏平式编排格式&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;偏平式编排，没有深度结构（所有节点平铺，使用 link 描述连接关系）。配置简洁，关系清晰&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c1.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"activity"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;还支持简化模式（能自动推断的，都会自动处理），具体参考相关说明&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c1.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;""&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2、表达式与脚本自由&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c2.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c2"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;when:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.getAmount() &amp;gt;= 100"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.setScore(0);"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;when:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.getAmount() &amp;gt; 100 &amp;amp;&amp;amp; order.getAmount() &amp;lt;= 500"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.setScore(100);"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;when:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.getAmount() &amp;gt; 500 &amp;amp;&amp;amp; order.getAmount() &amp;lt;= 1000"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.setScore(500);"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3、元数据配置，为扩展提供了无限空间&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;元数据主要有两个作用：（1）为任务运行提供配置支持（2）为视图编辑提供配置支持&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c3.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c3"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"activity"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"demo@noear.org"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@MetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;通过组件方式，实现元数据的抄送配置效果&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#4078f2"&gt;@Component("MetaProcessCom")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;MetaProcessCom&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;TaskComponent&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;run&lt;/span&gt;&lt;span&gt;(FlowContext context, Node node)&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; Throwable {
       &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;cc&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; node.getMeta(&lt;span style="color:#50a14f"&gt;"cc"&lt;/span&gt;);
       &lt;span style="color:#a626a4"&gt;if&lt;/span&gt;(Utils.isNotEmpty(cc)){
           &lt;em&gt;//发送邮件...&lt;/em&gt;
       }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4、事件广播与回调支持&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;广播（即只需要发送），回调（即发送后要求给答复）&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;f4&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt;
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;|
      //只发送
      context.&amp;lt;String,String&amp;gt;eventBus().send("demo.topic", "hello");  //支持泛型（类型按需指定，不指定时为 object）
&lt;/span&gt;  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;|
      //发送并要求响应（就是要给答复）
      String rst = context.&amp;lt;String,String&amp;gt;eventBus().sendAndRequest("demo.topic.get", "hello");
      System.out.println(rst);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5、支持无状态、有状态两种应用&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;支持丰富的应用场景：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;无状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于计算（或任务）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于业务规则和决策处理型的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;有状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于办公审批型（有状态、可中断，人员参与）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于长时间流程（结合自动前进，等待介入）的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;自身也相当于一个低代码的运行引擎（单个配置文件，也可满足所有的执行需求）。&lt;/p&gt; 
&lt;h3&gt;6、驱动定制（是像 JDBC 有 MySql, PostgreSQL，还可能有 Elasticsearch）&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;这是一个定制后的，支持基于状态驱动的流引擎效果。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;DemoFlowDriver&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;FlowDriver&lt;/span&gt; {
    ...
}

&lt;span style="color:#986801"&gt;FlowEngine&lt;/span&gt; &lt;span style="color:#986801"&gt;flowEngine&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;FlowEngine.newInstance(&lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;DemoFlowDriver&lt;/span&gt;());

&lt;span style="color:#986801"&gt;StateController&lt;/span&gt; &lt;span style="color:#986801"&gt;stateController&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;ActorStateController&lt;/span&gt;(&lt;span style="color:#50a14f"&gt;"actor"&lt;/span&gt;);
&lt;span style="color:#986801"&gt;StateRepository&lt;/span&gt; &lt;span style="color:#986801"&gt;stateRepository&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;InMemoryStateRepository&lt;/span&gt;();
                
&lt;span style="color:#986801"&gt;var&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"i1"&lt;/span&gt;, stateController, stateRepository).put(&lt;span style="color:#50a14f"&gt;"actor"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"陈鑫"&lt;/span&gt;);

&lt;em&gt;//获取上下文用户的活动节点&lt;/em&gt;
&lt;span style="color:#986801"&gt;var&lt;/span&gt; &lt;span style="color:#986801"&gt;task&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; flowEngine.statefulService().getTask(&lt;span style="color:#50a14f"&gt;"f1"&lt;/span&gt;, context);

&lt;span style="color:#a626a4"&gt;assert&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"step2"&lt;/span&gt;.equals(task.getNode().getId());
&lt;span style="color:#a626a4"&gt;assert&lt;/span&gt; StateType.UNKNOWN == task.getState(); &lt;em&gt;//没有权限启动任务（因为没有配置操作员）&lt;/em&gt;

&lt;em&gt;//提交操作&lt;/em&gt;
flowEngine.statefulService().postOperation(context, &lt;span style="color:#50a14f"&gt;"f1"&lt;/span&gt;, task.getNode().getId(), Operation.FORWARD);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;流程配置样例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;f1&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt;
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step1&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"发起审批"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step2&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"抄送"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@OaMetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step3&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"审批"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;actor:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"陈鑫"&lt;/span&gt;, &lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@OaMetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"审批"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"parallel"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; [&lt;span style="color:#50a14f"&gt;step4_1&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;step4_2&lt;/span&gt;]}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_1&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;actor:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"陈宇"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_end&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_2&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;actor:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_end&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_end&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"parallel"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step5&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"抄送"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@OaMetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step6&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"结束"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;对于驱动器的定制，我们还可以：定制（或选择）不同的脚本执行器、组件容器实现等。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367483/solon-flow-3-5-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367483/solon-flow-3-5-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 12:18:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>下拉组件 Tag 支持自定义背景颜色，DataEase 开源 BI 工具 v2.10.12 LTS 版本发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:start"&gt;2025 年 8 月 19 日，人人可用的开源 BI 工具 DataEase 正式发布 v2.10.12 LTS 版本。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;这一版本的功能变动包括：&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;图表&lt;/span&gt;&lt;/strong&gt;方面，图表提示框的背景颜色支持配置透明度，桑基图提示信息中支持配置总数占比显示项，线面图的纵轴轴值自动分档时可以根据实际使用的数据自动计算最小刻度，堆叠条形图/柱状图可以设置图例排序，基础条形图/柱状图支持点击阴影部分执行下钻、联动、跳转操作；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;查询组件&lt;/span&gt;&lt;/strong&gt;方面，下拉组件 Tag 支持自定义背景颜色；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;仪表板/数据大屏&lt;/span&gt;&lt;/strong&gt;方面，图片组支持设置刷新频率；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;数据源&lt;/span&gt;&lt;/strong&gt;方面，API 数据源接口参数可以调用已创建的接口参数。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;X-Pack 增强包&lt;/span&gt;&lt;/strong&gt;的功能变动包括：&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;同步管理&lt;/span&gt;&lt;/strong&gt;方面，增量同步设置支持指定正负偏移量，新增支持 CTE（Common Table Expression，通用表表达式）查询；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;数据填报&lt;/span&gt;&lt;/strong&gt;方面，批量上传的内容增加单条记录的提交信息；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;外观设置&lt;/span&gt;&lt;/strong&gt;方面，增加是否显示 Slogan 的配置项。&lt;/p&gt; 
&lt;h1&gt;新增功能&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：图表提示的背景颜色支持配置透明度；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：桑基图的提示信息中，支持配置总数占比显示项（#16476）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：线面图的纵轴轴值自动分档时，可以根据实际使用的数据自动计算最小刻度值；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：堆叠条形图/柱状图可以设置图例排序（#16424）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：基础条形图/柱状图支持点击阴影部分执行下钻、联动、跳转操作（#16489）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（查询组件）：下拉组件 Tag 支持自定义背景颜色；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（仪表板、数据大屏）：图片组支持设置刷新频率（#16584）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（数据源）：API 数据源接口参数可以调用已创建的接口参数（#16470）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，同步管理）：增量同步设置支持指定正负偏移量；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，同步管理）：新增支持 CTE（Common Table Expression，通用表表达式）查询（#16281）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，数据填报）：批量上传增加单条记录的提交信息；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，外观设置）：增加是否显示 Slogan 的配置项（#16437）。&lt;/p&gt; 
&lt;h1&gt;功能优化&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：跳转配置时不生效的指标字段将不再显示（#16525）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：气泡地图、符号地图的动效支持小数设置；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：表格分组名称长度限制增加到 50 个字符（#16552）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：透视表汇总行列的字体默认加粗（#16436）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（仪表板、数据大屏）：调整查询组件的文字大小范围（#16517）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（仪表板、数据大屏）：空值不参与联动；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（移动端）：修改未开启移动端访问时的错误提示（#16514）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（数据大屏）：SVG（Scalable Vector Graphics，可缩放矢量图形）性能优化；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack，阈值告警）：阈值告警功能的标题优化为三级标题（#16482）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack，阈值告警）：告警内容包含多个指标值的消息模版（#16480）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack）：调整外部用户名字符串的长度限制（#16578）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack，认证对接）：在认证失败的情况下，禁止注销 SSO 信息（#16615）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（嵌入式）：滚动条 CSS 样式添加类名标记，避免在 DIV 嵌入时冲突（#16455）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;build：修复依赖错误导致的打包失败问题（#16520）。&lt;/p&gt; 
&lt;h1&gt;Bug 修复&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复仪表盘和水波图值为 0 时显示异常的问题（#16419）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复热力图颜色字段为计算字段时，图表报错的问题（#16471）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复线面图开启缩略轴时，纵轴最小值不立即自动计算的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复透视表设置数值格式之后，带格式导出单元格为非数值类型的问题（#16431）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复公共链接携带参数，刷新图表数据导致参数丢失，没有传入富文本中的问题（#16579）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复明细表下载表头缺失的问题（#16497）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复地图配色存在相同颜色时图例显示异常的问题（#16203）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复最值在部分浏览器（Safari）中不显示的问题（#16479）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复多个 Tab 页中，Tab2 的提示显示在 Tab1 中的问题（#16271）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复明细表合并单元格之后，导出的表格没有合并单元格的问题（#16589）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复移动端表格第二层无法下钻的问题（#16633、#16485）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板）：修复移动端部分查询组件悬浮移位的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复图层名称长度未校验的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（查询组件）：修复升级后文本下拉多选的 UI 发生异常变化的问题（#16443）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（查询组件）：修复数字下拉组件无法设置默认值的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（查询组件）：查询组件的背景色匹配仪表板深色模式；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复跑马灯组件预览字体和编辑字体大小不一致的问题（#16323）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复地图类图表隐藏再显示，会导致图表变形的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复部分场景放大、缩小按钮无效的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：优化空资源提示（#16567）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复历史数据中出现重复 ID 的组件无法删除的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复图表、数据集、外置参数配置等文本标题超出边界的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复富文本双击出现悬浮设置，导致页面出现滚动条的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复模板更换数据集时，提示框偏移的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复调用浏览器打印功能时，出现部分页码空白的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复看板的外部参数使用默认值向自定义 SQL 传参时，拼接的 SQL 存在问题导致数据无法正常显示的问题（#16577）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复外部参数关联数据集参数时，参数类型显示不正确的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复导出应用模板时不会将筛选器使用的数据集也一起导出的问题（#16362）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复部分 Tab 组件可能在控制枱打印异常的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复部分富文本下拉选项不显示的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复双击富文本进入编辑模式时，画布可能出现滚动条的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复从告警管理的告警入口进入仪表板后，无法保存告警设置的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复跳转时可能出现控制枱异常信息打印的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据集）：修复 SQL Server 数据集导出按日期过滤时无法导出数据的问题（#16519）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据集）：修复 Doris、SQL Server 数据源中，数据库原始数据不存在重复数据，但数据集导出时存在重复数据的问题（#16452）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据源）：修复复制数据源会丢失数据信息的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据填报）：修复字符串类型的主键会强制校验为数值类型的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复阈值告警以 DIV 方式嵌入时，告警表单无法弹出的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复定时报告选项卡组件中的视图无法导出数据的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复阈值告警中动态时间小时粒度格式错误的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复调用定时报告导出接口设置额外等待时间无效的问题（#16528）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复绑定 MFA 导致&lt;/span&gt;&lt;em&gt;&lt;span&gt;MFA_KEY&lt;/span&gt;&lt;/em&gt;&lt;span&gt;重复的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 Oracle 的 Schemas 是 C##前缀时，无法同步的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 Oracle 查询 SQL 语句末尾添加分号后查询失败的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 DB2 查询语句不支持反引号，导致增量同步失败的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 DB2 首次同步数据时，增量字段为空，导致第二次同步失败的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复账号校验规则错误（#16569）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复组织管理中可以操作无权限组织的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（漏洞）：修复 DataEase H2 JDBC RCE 绕过漏洞；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（漏洞）：修复桌面版 Aspectjweaver 反序列化任意文件写入漏洞；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix：关闭 FileOutputStream 以防止 downloadFile 中的资源泄漏。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367447/dataease-2-10-12-lts</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367447/dataease-2-10-12-lts</guid>
      <pubDate>Mon, 18 Aug 2025 09:41:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Jarboot 3.3.0 发布，Java 启动器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Jarboot 3.3.0 已经发布，Java 启动器。&lt;/p&gt; 
&lt;h2&gt;3.3.0（8，2025）&lt;/h2&gt; 
&lt;p&gt;修复已知的 bug，修复已知的 bug，推出 docker compose 部署策略，文件上传 websocket 服务（/jarboot/upload/ws）传入参数格式修改（json 字符串 base64 url 编码）&lt;/p&gt; 
&lt;h3&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;启动时支持通过环境变量初始化账号（JARBOOT_USER）和密码（JARBOOT_DEFAULT_PWD）&lt;/li&gt; 
 &lt;li&gt;服务配置新增是否自动启动配置项，配置自启动时在 jarboot 启动后会自动启动该服务&lt;/li&gt; 
 &lt;li&gt;可通过-Dstart.wait.time=30000 指定最大的启动等待时间&lt;/li&gt; 
 &lt;li&gt;client-cli 支持通过 token 登录，可通过环境变量或-token 参数传入&lt;/li&gt; 
 &lt;li&gt;新增 docker compose 集群及单节点的配置文件示例&lt;/li&gt; 
 &lt;li&gt;新增软件升级脚本，可通过脚本一键升级 jarboot，执行&lt;code&gt;bin/upgrade.sh&lt;/code&gt;或&lt;code&gt;bin/windows/upgrade.bat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增软件升级功能，可在界面上点击升级，选择安装包或安装包下载连接，可一键升级&lt;/li&gt; 
 &lt;li&gt;新增定时重启服务配置，可使用 CRON 表达式配置重启计划&lt;/li&gt; 
 &lt;li&gt;.env 文件支持，可通过工作目录下的.env 文件配置环境变量&lt;/li&gt; 
 &lt;li&gt;服务配置界面增加提示信息，鼠标移到提示信息图标上可查看更多帮助信息&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;打印日志太多时异常掉线问题，The remote endpoint was in state [BINARY_FULL_WRITING] which is an invalid state for called method&lt;/li&gt; 
 &lt;li&gt;集群模式下文件上传到另一节点时，服务名为中文时上传文件失败问题&lt;/li&gt; 
 &lt;li&gt;修复使用 docker compose 集群模式下节点认证失败问题&lt;/li&gt; 
 &lt;li&gt;断开重连时新增 cookie 校验功能，校验失败则退出登录&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/majz0908/jarboot/releases/3.3.0"&gt;https://gitee.com/majz0908/jarboot/releases/3.3.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367399</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367399</guid>
      <pubDate>Mon, 18 Aug 2025 07:55:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Countly 25.03.16 发布，实时移动和 Web 分析报告平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;实时移动和 Web 分析报告平台 Countly&amp;nbsp;25.03.14&amp;nbsp;现已发布。具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Enterprise Fixes：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[journeys] 修复并发请求中跳过阈值检查的问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[journeys] 防止在查看 journeys 列表页面时显示&amp;nbsp;journey builder&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Dependencies：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 get-random-values 从 3.0.0 升级至 4.0.0&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 puppeteer 从 24.16.1 升级至 24.16.2&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCountly%2Fcountly-server%2Freleases%2Ftag%2F25.03.16" target="_blank"&gt;https://github.com/Countly/countly-server/releases/tag/25.03.16&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367367/countly-25-03-16-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367367/countly-25-03-16-released</guid>
      <pubDate>Mon, 18 Aug 2025 05:45:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Fluentd v1.19.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Fluentd v1.19.0 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKgDlq4AZU2YM9aaYcqg6rw" target="_blank"&gt;发布&lt;/a&gt;，包含许多新功能和修复，重点是降低运维和运行成本，提升整体稳定性。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;关于依赖冲突说明：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;本次版本对依赖做了部分限制，执行如 bundle update 时可能出现冲突。遇到这种情况，请手动调整依赖或重新生成 Gemfile.lock，例如：&lt;/span&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span&gt;$ rm Gemfile.lock&lt;/span&gt;
&lt;span&gt;$ bundle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;更多详情请参考 fluentd#5048。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;主要新功能和改进：&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;添加重试超限时转移 chunk 文件功能&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;本次版本为 buf_file 和 buf_file_single 插件新增了缓冲区转移功能，简化故障恢复。之前版本中，当输出插件因网络问题无法发送数据，且重试次数超限且未配置二级输出时，数据会被丢弃。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;现在，重试超限时缓冲文件会被自动转移。问题解决后，可将转移的文件恢复到原缓冲目录，重启 Fluentd 继续发送数据。配合零停机重启功能，甚至可以无中断重启输入插件（如 in_udp）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;转移文件存放路径为：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#008080"&gt;&lt;span&gt;${root_dir}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;/buffer/&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span&gt;${plugin_id}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;注意：启用二级输出或 retry_forever 时此功能默认关闭。要启用缓冲转移，请移除这些设置。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;改进缓冲区损坏检测&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;缓冲文件可能因系统崩溃或断电导致损坏。之前版本启动时会因损坏文件报错，需手动定位删除。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;本版本改进了损坏检测，发现损坏文件后自动移至备份目录，启动错误将被抑制。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;增强指标功能&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;提升了 Fluentd 的可观测性：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;输入插件指标默认开启&lt;/span&gt;&lt;br&gt; &lt;span&gt;之前需显式设置 enable_input_metrics=true。现在默认开启，关闭请设为 false。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增 in_tail 指标：tracked_file_count（当前跟踪的文件数）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增输出插件指标：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;write_secondary_count：写入二级输出的累计记录数&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;drop_oldest_chunk_count：overflow_action 使用 drop_oldest_chunk 时丢弃的 chunk 数&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;性能提升：改用 json gem 替代 yajl-ruby&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;之前使用 yajl-ruby 处理 JSON（如写缓冲和 parser_json 解析）以提升性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;现在 Ruby 标准 json 库性能大幅提升，改用 json gem 作为默认 JSON 处理器。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;支持 Zstandard (zstd) 压缩&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;新增对 Zstandard (zstd) 压缩格式的支持，比 gzip 压缩率高且处理速度更快。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;以下插件支持 compress zstd：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;buffer&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;out_file&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;out_forward&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;注意：out_forward 使用 zstd 时，目标服务器需支持；Fluent Bit 或早于 v1.19.0 的 Fluentd 不支持此功能。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;支持 TLS 1.3&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;out_http 插件支持 TLS 1.3，增强安全性。默认使用 TLS 1.2，启用方法：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#000080"&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#000080"&gt;&lt;span&gt;match&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span&gt;tag&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&amp;nbsp; @type http&lt;/span&gt;
&lt;span&gt;&amp;nbsp; ...&lt;/span&gt;
&lt;span&gt;&amp;nbsp; tls_version TLSv1_3&lt;/span&gt;
&lt;span&gt;&amp;nbsp; ...&lt;/span&gt;
&lt;span style="color:#000080"&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#000080"&gt;&lt;span&gt;match&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;其他实用改进&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;in_forward 插件：&lt;/span&gt;&lt;br&gt; &lt;span&gt;skip_invalid_event 默认开启，跳过损坏记录。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;out_stdout 插件：&lt;/span&gt;&lt;br&gt; &lt;span&gt;新增 use_logger 参数，设置为 false 时强制输出到 STDOUT，忽略 Fluentd 的日志配置，适合 Kubernetes 等容器环境。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;out_file 插件：&lt;/span&gt;&lt;br&gt; &lt;span&gt;新增 symlink_path_use_relative，支持 symlink_path 使用相对路径。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;系统配置：&lt;/span&gt;&lt;br&gt; &lt;span&gt;新增 forced_stacktrace_level，用于控制堆栈跟踪的日志级别。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367340/fluentd-1-19-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367340/fluentd-1-19-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 03:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>FlexSQL 安卓版，无需写 SQL 语句的 ORM，自动同步表结构</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;FlexSQL For Android&lt;/h2&gt; 
&lt;p&gt;1.引入 Gradle 依赖&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;implementation 'cn.vonce:flexsql-android:1.7.0'
annotationProcessor 'cn.vonce:flexsql-android:1.7.0'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;2.标注实体类&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;//实体类基类&lt;/em&gt;
&lt;span&gt;@Data&lt;/span&gt;
&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;BaseEntity&lt;/strong&gt; &lt;/span&gt;{

    &lt;span&gt;@SqlId&lt;/span&gt;(type = IdType.SNOWFLAKE_ID_16)
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;, remarks = &lt;span style="color:#dd1144"&gt;"唯一 id"&lt;/span&gt;)&lt;em&gt;//字段不能为 null,表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Long id;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"创建者"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Long creator;

    &lt;span&gt;@SqlDefaultValue&lt;/span&gt;(with = FillWith.INSERT)
    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"创建时间"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Date createTime;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"更新者"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Long updater;

    &lt;span&gt;@SqlDefaultValue&lt;/span&gt;(with = FillWith.UPDATE)
    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"更新时间"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Date updateTime;

    &lt;span&gt;@SqlLogically&lt;/span&gt;
    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"是否删除 (0 正常 1 删除)"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Boolean deleted;

}

&lt;em&gt;//构建项目（Rebuild Project）后会根据实体类生成字段常量，例如 User 类生成的常量类是 User$，例如获取 id 字段是 User$.id$&lt;/em&gt;
&lt;span&gt;@Data&lt;/span&gt;
&lt;em&gt;//autoAlter 设置为 true，实体类有变动时自动同步表结构&lt;/em&gt;
&lt;span&gt;@SqlTable&lt;/span&gt;(autoAlter = &lt;strong&gt;true&lt;/strong&gt;, value = &lt;span style="color:#dd1144"&gt;"t_user"&lt;/span&gt;, remarks = &lt;span style="color:#dd1144"&gt;"用户"&lt;/span&gt;)
&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;User&lt;/strong&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;strong&gt;BaseEntity&lt;/strong&gt; &lt;/span&gt;{

    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;, remarks = &lt;span style="color:#dd1144"&gt;"用户名"&lt;/span&gt;)&lt;em&gt;//字段不能为 null,表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String userName;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"姓名"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String nickName;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;, remarks = &lt;span style="color:#dd1144"&gt;"手机号码"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String mobilePhone;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;, remarks = &lt;span style="color:#dd1144"&gt;"密码"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String password;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;, remarks = &lt;span style="color:#dd1144"&gt;"性别"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Integer gender;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"年龄"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Integer age;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"电子邮箱"&lt;/span&gt;)&lt;em&gt;//表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String email;

    &lt;span&gt;@SqlColumn&lt;/span&gt;(remarks = &lt;span style="color:#dd1144"&gt;"头像"&lt;/span&gt;, oldName = &lt;span style="color:#dd1144"&gt;"head_portrait"&lt;/span&gt;)&lt;em&gt;//表字段注释,修改表字段名称需要在 oldName 指定旧的名称&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String avatar;

    &lt;span&gt;@SqlDefaultValue&lt;/span&gt;(with = FillWith.INSERT)
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;, remarks = &lt;span style="color:#dd1144"&gt;"状态 (0 正常 1 停用)"&lt;/span&gt;)&lt;em&gt;//字段不能为 null,表字段注释&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; UserStatus status;

}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;3.获取连接（建议在上一步把所有表字段关系建立好，第一次获取连接时会自动创建表结构）&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;MainActivity&lt;/strong&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;strong&gt;AppCompatActivity&lt;/strong&gt; &lt;/span&gt;{

    &lt;strong&gt;private&lt;/strong&gt; SqlBeanHelper&amp;lt;Essay, String&amp;gt; essaySqlBeanHelper;
    &lt;em&gt;//private SqlBeanHelper&amp;lt;User, String&amp;gt; userSqlBeanHelper;&lt;/em&gt;

    &lt;span&gt;@Override&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;protected&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;onCreate&lt;/strong&gt;&lt;span&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{
        &lt;strong&gt;super&lt;/strong&gt;.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        &lt;em&gt;//方式一，单库模式&lt;/em&gt;
        SQLiteHelper.init(&lt;strong&gt;this&lt;/strong&gt;, &lt;span style="color:#dd1144"&gt;"testdb"&lt;/span&gt;, &lt;span style="color:#008080"&gt;1&lt;/span&gt;);&lt;em&gt;//建议放在 MainActivity 或继承的 Application&lt;/em&gt;
        essaySqlBeanHelper = SQLiteHelper.db().get(Essay&lt;span&gt;.&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;;

        &lt;em&gt;//方式二，多库模式&lt;/em&gt;
        &lt;em&gt;//essaySqlBeanHelper = SQLiteHelper.db(this, "testdb1", 1).get(Essay.class);&lt;/em&gt;
        &lt;em&gt;//userSqlBeanHelper = SQLiteHelper.db(this, "testdb2", 1).get(User.class);&lt;/em&gt;

    }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;4.CRUD 操作&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;
&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;MainActivity&lt;/strong&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;strong&gt;AppCompatActivity&lt;/strong&gt; &lt;/span&gt;{

    &lt;strong&gt;private&lt;/strong&gt; SqlBeanHelper&amp;lt;Essay, String&amp;gt; sqlBeanHelper;

    &lt;span&gt;@Override&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;protected&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;onCreate&lt;/strong&gt;&lt;span&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{
        &lt;strong&gt;super&lt;/strong&gt;.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        SQLiteHelper.init(&lt;strong&gt;this&lt;/strong&gt;, &lt;span style="color:#dd1144"&gt;"testdb"&lt;/span&gt;, &lt;span style="color:#008080"&gt;1&lt;/span&gt;);
        sqlBeanHelper = SQLiteHelper.db().get(Essay&lt;span&gt;.&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;;

    }

    &lt;em&gt;//查询&lt;/em&gt;
    &lt;span&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;select&lt;/strong&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;em&gt;//查询列表&lt;/em&gt;
        List&amp;lt;User&amp;gt; list = userService.select();
        list = sqlBeanHelper.selectBy(Wrapper.where(Cond.gt(User$.id$, &lt;span style="color:#008080"&gt;10&lt;/span&gt;)).and(Cond.lt(User$.id$, &lt;span style="color:#008080"&gt;20&lt;/span&gt;)));
        &lt;em&gt;//指定查询&lt;/em&gt;
        list = sqlBeanHelper.select(&lt;strong&gt;new&lt;/strong&gt; Select().column(User$.id$, User$.user_name$, User$.mobile_phone$).where().gt(User$.id$, &lt;span style="color:#008080"&gt;10&lt;/span&gt;));

        &lt;em&gt;//查询一条&lt;/em&gt;
        User user = sqlBeanHelper.selectById(&lt;span style="color:#008080"&gt;1L&lt;/span&gt;);
        user = sqlBeanHelper.selectOneBy(Wrapper.where(eq(User$.id$, &lt;span style="color:#008080"&gt;1001&lt;/span&gt;)));

        &lt;em&gt;//sql 语义化查询《20 岁且是女性的用户根据创建时间倒序，获取前 10 条》&lt;/em&gt;
        list = sqlBeanHelper.select(&lt;strong&gt;new&lt;/strong&gt; Select().column(User$.id$, User$.user_name$, User$.mobile_phone$).where().eq(User$.age$, &lt;span style="color:#008080"&gt;20&lt;/span&gt;).and().eq(User$.gender$, &lt;span style="color:#008080"&gt;0&lt;/span&gt;).back().orderByDesc(User$.create_time$).page(&lt;span style="color:#008080"&gt;0&lt;/span&gt;, &lt;span style="color:#008080"&gt;10&lt;/span&gt;));

        &lt;em&gt;//联表查询《广州或深圳的 18 岁的女性用户，根据创建时间倒序，查询前 10 条用户的信息和地址》&lt;/em&gt;
        Select select = &lt;strong&gt;new&lt;/strong&gt; Select();
        select.column(User$.id$, User$.user_name$, User$.mobile_phone$, UserAddress$.province$, UserAddress$.city$, UserAddress$.area$, UserAddress$.details$);
        select.innerJoin(UserAddress&lt;span&gt;.&lt;strong&gt;class&lt;/strong&gt;).&lt;strong&gt;on&lt;/strong&gt;().&lt;strong&gt;eq&lt;/strong&gt;(&lt;strong&gt;UserAddress&lt;/strong&gt;$.&lt;strong&gt;id&lt;/strong&gt;$, &lt;strong&gt;User&lt;/strong&gt;$.&lt;strong&gt;id&lt;/strong&gt;$)&lt;/span&gt;;
        select.where().eq(User$.age$, &lt;span style="color:#008080"&gt;18&lt;/span&gt;).and().eq(User$.gender$, &lt;span style="color:#008080"&gt;0&lt;/span&gt;).and(condition -&amp;gt; condition.eq(UserAddress$.city$, &lt;span style="color:#dd1144"&gt;"广州"&lt;/span&gt;).or().eq(UserAddress$.city$, &lt;span style="color:#dd1144"&gt;"深圳"&lt;/span&gt;));
        select.orderByDesc(User$.create_time$);
        select.page(&lt;span style="color:#008080"&gt;0&lt;/span&gt;, &lt;span style="color:#008080"&gt;10&lt;/span&gt;);

        &lt;em&gt;//查询 Map&lt;/em&gt;
        Map&amp;lt;String, Object&amp;gt; map = sqlBeanHelper.selectMap(select);
        List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; mapList = sqlBeanHelper.selectMapList(select);
    }

    &lt;em&gt;//分页&lt;/em&gt;
    &lt;span&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;getPageList&lt;/strong&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{
        &lt;em&gt;// 查询对象&lt;/em&gt;
        Select select = &lt;strong&gt;new&lt;/strong&gt; Select();
        PageHelper&amp;lt;User&amp;gt; pageHelper = &lt;strong&gt;new&lt;/strong&gt; PageHelper&amp;lt;&amp;gt;(&lt;span style="color:#008080"&gt;0&lt;/span&gt;, &lt;span style="color:#008080"&gt;10&lt;/span&gt;);
        pageHelper.paging(select, sqlBeanHelper);
        ResultData&amp;lt;List&amp;lt;Essay&amp;gt;&amp;gt; data = pageHelper.getResultData();
    }

    &lt;em&gt;//统计（函数使用）&lt;/em&gt;
    &lt;span&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;getStatistics&lt;/strong&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{
        Select select = &lt;strong&gt;new&lt;/strong&gt; Select();
        select.column(SqlFun.count(User$.id$), &lt;span style="color:#dd1144"&gt;"count"&lt;/span&gt;).column(SqlFun.avg(User$.age$));
        select.where().gt(SqlFun.date_format(User$.create_time$, &lt;span style="color:#dd1144"&gt;"%Y-%m-%d"&lt;/span&gt;), &lt;span style="color:#dd1144"&gt;"2024-06-24"&lt;/span&gt;);
        select.groupBy(User$.gender$);
        select.orderByDesc(&lt;span style="color:#dd1144"&gt;"count"&lt;/span&gt;);
        List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; mapList = sqlBeanHelper.selectMapList(select);
    }

    &lt;em&gt;//更新&lt;/em&gt;
    &lt;span&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;update&lt;/strong&gt;&lt;span&gt;(Essay essay)&lt;/span&gt; &lt;/span&gt;{
        &lt;em&gt;//根据 bean 内部 id 更新&lt;/em&gt;
        &lt;strong&gt;long&lt;/strong&gt; i = sqlBeanHelper.updateByBeanId(essay);
        &lt;em&gt;//根据外部 id 更新&lt;/em&gt;
        &lt;em&gt;//i = sqlBeanHelper.updateById(essay, 20);&lt;/em&gt;
        &lt;em&gt;//根据条件更新&lt;/em&gt;
        &lt;em&gt;//i = sqlBeanHelper.update(new Update&amp;lt;User&amp;gt;().set(User$.gender$, 1).set(User$.name$, "Jovi").setAdd(User$.age$, User$.age$, 1).where().eq(User$.id$, 111).back());&lt;/em&gt;
    }

    &lt;em&gt;//删除&lt;/em&gt;
    &lt;span&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;deleteById&lt;/strong&gt;&lt;span&gt;(String[] id)&lt;/span&gt; &lt;/span&gt;{
        &lt;em&gt;//根据 id 删除&lt;/em&gt;
        &lt;strong&gt;long&lt;/strong&gt; i = sqlBeanHelper.deleteById(id);
        &lt;em&gt;//根据条件删除&lt;/em&gt;
        &lt;em&gt;//i = sqlBeanHelper.deleteBy(Wrapper.where(gt(User$.age$, 22)).and(eq(User$.gender$, 1)));&lt;/em&gt;
    }

    &lt;em&gt;//插入&lt;/em&gt;
    &lt;span&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;void&lt;/strong&gt; &lt;strong&gt;add&lt;/strong&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{
        List&amp;lt;Essay&amp;gt; essayList = &lt;strong&gt;new&lt;/strong&gt; ArrayList&amp;lt;&amp;gt;();
        &lt;strong&gt;for&lt;/strong&gt; (&lt;strong&gt;int&lt;/strong&gt; i = &lt;span style="color:#008080"&gt;0&lt;/span&gt;; i &amp;lt; &lt;span style="color:#008080"&gt;100&lt;/span&gt;; i++) {
            Essay essay = &lt;strong&gt;new&lt;/strong&gt; Essay(i, &lt;span style="color:#dd1144"&gt;"name"&lt;/span&gt; + i);
            essayList.add(essay);
        }
        sqlBeanHelper.insert(essayList);
    }

}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367338</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367338</guid>
      <pubDate>Mon, 18 Aug 2025 03:24:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>FlexSQL-1.7.0 自动维护表结构，读取 Java 注释同步数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;FlexSQL&lt;/h2&gt; 
&lt;h4&gt;介绍&lt;/h4&gt; 
&lt;p&gt;FlexSQL 是一款革命性的 ORM（对象关系映射）插件，通过 Java 语法生成 SQL 语句，从根本上改变了开发者在 Java 应用程序中与数据库交互的方式。与传统 ORM 框架要求您首先设计数据库架构然后创建相应实体类不同，FlexSQL 采用了代码优先的方式，让您可以直接专注于编写业务逻辑和实体类，数据库表则由系统自动创建和维护。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀特点: 多数据源, 动态 Schema, 读写分离, 自动建表, 自动维护表结构, 联表查询, 乐观锁, 分页&lt;/li&gt; 
 &lt;li&gt;💻Spring 环境: JDK8+, (Spring MVC 4.1.2+, Spring Boot 1.x, 2.x, 3.x), (Mybatis3.4.0+ 或 Spring JDBC 二选一)&lt;/li&gt; 
 &lt;li&gt;💻Solon 环境: JDK8+, Solon2.6+, Mybatis3.4.0+&lt;/li&gt; 
 &lt;li&gt;📱Android 环境: JDK8+, Android 8.0+&lt;/li&gt; 
 &lt;li&gt;💿数据库: Mysql, MariaDB, Oracle, Sqlserver2008+, Postgresql, DB2, Derby, Sqlite, HSQL, H2&lt;/li&gt; 
 &lt;li&gt;SuperCode 代码生成项目👉&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/iJovi/supercode"&gt;https://gitee.com/iJovi/supercode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FlexSQL 使用例子以及代码生成例子点击这里👉&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/iJovi/flexsql-example"&gt;https://gitee.com/iJovi/FlexSQL-example&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;快速开始&lt;/h3&gt; 
&lt;p&gt;1.引入 Maven 依赖&lt;/p&gt; 
&lt;p&gt;Spring 项目&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;cn.vonce&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;flexsql-spring&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.7.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Solon 项目&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;cn.vonce&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;flexsql-solon&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;1.7.0&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Android 项目（&lt;a href="https://gitee.com/iJovi/FlexSQL/blob/main/doc/Android.md"&gt;Android 项目详细使用文档&lt;/a&gt;）&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;implementation 'cn.vonce:flexsql-android:1.7.0'
annotationProcessor 'cn.vonce:flexsql-android:1.7.0'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;2.标注实体类&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span&gt;@Data&lt;/span&gt;
&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;BaseEntity&lt;/strong&gt; &lt;/span&gt;{

    &lt;em&gt;/**
     * 唯一 id（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlId&lt;/span&gt;(type = IdType.SNOWFLAKE_ID_16)
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;)
    &lt;strong&gt;private&lt;/strong&gt; Long id;

    &lt;em&gt;/**
     * 创建者（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Long creator;

    &lt;em&gt;/**
     * 创建时间（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlDefaultValue&lt;/span&gt;(with = FillWith.INSERT)
    &lt;strong&gt;private&lt;/strong&gt; Date createTime;

    &lt;em&gt;/**
     * 更新者（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Long updater;

    &lt;em&gt;/**
     * 更新时间（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlDefaultValue&lt;/span&gt;(with = FillWith.UPDATE)
    &lt;strong&gt;private&lt;/strong&gt; Date updateTime;

    &lt;em&gt;/**
     * 是否删除（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlLogically&lt;/span&gt;
    &lt;strong&gt;private&lt;/strong&gt; Boolean deleted;

}

&lt;em&gt;//编译项目（mvn compile）后会根据实体类生成字段常量，例如 User 类生成的常量类是 User$，例如获取 id 字段是 User$.id$&lt;/em&gt;
&lt;span&gt;@Data&lt;/span&gt;
&lt;em&gt;//autoAlter 设置为 true，实体类有变动时自动同步表结构&lt;/em&gt;
&lt;span&gt;@SqlTable&lt;/span&gt;(autoAlter = &lt;strong&gt;true&lt;/strong&gt;, value = &lt;span style="color:#dd1144"&gt;"t_user"&lt;/span&gt;, remarks = &lt;span style="color:#dd1144"&gt;"用户"&lt;/span&gt;)
&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;User&lt;/strong&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;strong&gt;BaseEntity&lt;/strong&gt; &lt;/span&gt;{

    &lt;em&gt;/**
     * 用户名（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;)
    &lt;strong&gt;private&lt;/strong&gt; String userName;

    &lt;em&gt;/**
     * 暱称（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String nickName;

    &lt;em&gt;/**
     * 手机号码（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String mobilePhone;

    &lt;em&gt;/**
     * 密码（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;)
    &lt;strong&gt;private&lt;/strong&gt; String password;

    &lt;em&gt;/**
     * 性别（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;)
    &lt;strong&gt;private&lt;/strong&gt; Integer gender;

    &lt;em&gt;/**
     * 年龄（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; Integer age;

    &lt;em&gt;/**
     * 电子邮箱（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String email;

    &lt;em&gt;/**
     * 头像（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlColumn&lt;/span&gt;(oldName = &lt;span style="color:#dd1144"&gt;"head_portrait"&lt;/span&gt;)&lt;em&gt;//修改表字段名称需要在 oldName 指定旧的名称&lt;/em&gt;
    &lt;strong&gt;private&lt;/strong&gt; String avatar;

    &lt;em&gt;/**
     * 状态（注：这个 Java 注释会当作表的字段注释自动同步）
     */&lt;/em&gt;
    &lt;span&gt;@SqlDefaultValue&lt;/span&gt;(with = FillWith.INSERT)
    &lt;span&gt;@SqlColumn&lt;/span&gt;(notNull = &lt;strong&gt;true&lt;/strong&gt;)
    &lt;strong&gt;private&lt;/strong&gt; UserStatus status;

}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;3.无需 Dao 层，Service 层接口只需继承 FlexSQLService&amp;lt;实体类, id 类型&amp;gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;interface&lt;/strong&gt; &lt;strong&gt;UserService&lt;/strong&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;strong&gt;FlexSQLService&lt;/strong&gt;&amp;lt;&lt;strong&gt;User&lt;/strong&gt;, &lt;strong&gt;Long&lt;/strong&gt;&amp;gt; &lt;/span&gt;{
    &lt;em&gt;//这里可以写自己封装的方法&lt;/em&gt;

}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;4.Service 实现类只需继承 MybatisFlexSQLServiceImpl&amp;lt;实体类, id 类型&amp;gt;和实现你的 Service 接口&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;//使用 Spring Jdbc 的话将继承的父类改成 SpringJdbcFlexSQLServiceImpl 即可&lt;/em&gt;
&lt;span&gt;@Service&lt;/span&gt;
&lt;strong&gt;public&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;UserServiceImpl&lt;/strong&gt; &lt;strong&gt;extends&lt;/strong&gt; &lt;strong&gt;MybatisFlexSQLServiceImpl&lt;/strong&gt;&amp;lt;&lt;strong&gt;User&lt;/strong&gt;, &lt;strong&gt;Long&lt;/strong&gt;&amp;gt; &lt;strong&gt;implements&lt;/strong&gt; &lt;strong&gt;UserService&lt;/strong&gt; &lt;/span&gt;{

}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;5.Controller 层&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;
@RequestMapping("user")
@RestController
public class UserController {

    @Autowired
    private UserService userService;

    //查询
    @GetMapping("select")
    public RS select() {
        //查询列表
        List&amp;lt;User&amp;gt; list = userService.select();
        list = userService.selectBy(Wrapper.where(Cond.gt(User::getId, 10)).and(Cond.lt(User::getId, 20)));
        //指定查询
        list = userService.select(new Select().column(User::getId, User::getUserName, User::getMobilePhone).where().gt(User::getId, 10));

        //查询一条
        User user = userService.selectById(1L);
        user = userService.selectOneBy(Wrapper.where(eq(User::getId, 1001)));

        //sql 语义化查询《20 岁且是女性的用户根据创建时间倒序，获取前 10 条》
        list = userService.select(new Select().column(User::getId, User::getUserName, User::getMobilePhone).where().eq(User::getAge, 20).and().eq(User::getGender, 0).back().orderByDesc(User::getCreateTime).page(0, 10));

        //联表查询《广州或深圳的 18 岁的女性用户，根据创建时间倒序，查询前 10 条用户的信息和地址》
        Select select = new Select();
        select.column(User::getId, User::getUserName, User::getMobilePhone, UserAddress::getProvince, UserAddress::getCity, UserAddress::getArea, UserAddress::getDetails);
        select.innerJoin(UserAddress.class).on().eq(UserAddress::getId, User::getId);
        select.where().eq(User::getAge, 18).and().eq(User::getGender, 0).and(condition -&amp;gt; condition.eq(UserAddress::getCity, "广州").or().eq(UserAddress::getCity, "深圳"));
        select.orderByDesc(User::getCreateTime);
        select.page(0, 10);

        //查询 Map
        Map&amp;lt;String, Object&amp;gt; map = userService.selectMap(select);
        List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; mapList = userService.selectMapList(select);

        return super.successHint("获取成功", list);
    }

    //分页
    @GetMapping("getList")
    public Map getList(HttpServletRequest request) {
        // 查询对象
        Select select = new Select();
        ReqPageHelper&amp;lt;User&amp;gt; pageHelper = new ReqPageHelper&amp;lt;&amp;gt;(request);
        pageHelper.paging(select, userService);
        return pageHelper.toResult("获取列表成功");
    }
    
    //统计（函数使用）
    @GetMapping("getStatistics")
    public Result getStatistics() {
        Select select = new Select();
        select.column(SqlFun.count(User::getId), "count").column(SqlFun.avg(User::getAge));
        select.where().gt(SqlFun.date_format(User::getCreateTime, "%Y-%m-%d"), "2024-06-24");
        select.groupBy(User::getGender);
        select.orderByDesc("count");
        List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt; mapList = userService.selectMapList(select);
        return Result.success(mapList);
    }

    //更新
    @PostMapping("update")
    public RS update(User user) {
        //根据 bean 内部 id 更新
        long i = userService.updateByBeanId(user);
        //根据条件更新
        //i = userService.updateBy(Wrapper.where(Cond.gt(User::getAge, 22)).and(Cond.eq(User::getGender, 1)));
        //指定更新某个字段 UPDATE user SET gender = 1, name = 'Jovi' ,age = age + 1 WHERE = id = 111
        userService.update(new Update&amp;lt;User&amp;gt;().set(User::getGender, 1).set(User::getUserName, "Jovi").setAdd(User::getAge, User::getAge, 1).where().eq(User::getId, 111).back());
        if (i &amp;gt; 0) {
            return super.successHint("更新成功");
        }
        return super.othersHint("更新失败");
    }

    //删除
    @PostMapping("deleteById")
    public RS deleteById(Integer[] id) {
        //根据 id 删除
        long i = userService.deleteById(id);
        //根据条件删除
        //i = userService.deleteBy(Wrapper.where(gt(User::getAge, 22)).and(eq(User::getGender, 1)));
        if (i &amp;gt; 0) {
            return super.successHint("删除成功");
        }
        return super.othersHint("删除失败");
    }

    //插入
    @PostMapping("add")
    public RS add() {
        List&amp;lt;User&amp;gt; userList = new ArrayList&amp;lt;&amp;gt;();
        for (int i = 0; i &amp;lt; 100; i++) {
            User user = new User(i, "name" + i);
            userList.add(user);
        }
        userService.insert(userList);
        return successHint("成功");
    }

}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p&gt;更新内容：&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;1.新增获取实体类 Java 注释做为表字段注释自动同步；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;2.新增支持 Lambda 表达式的条件；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;3.新增内置轻量 JSON 解析器；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;4.新增支持 JSON 类型的字段序列号和反序列化；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;5.新增 Solon 项目适配；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;6.Android 项目合并维护统一版本号；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;7.修复根据 id 查询获取 id 字段的所属类是父类的问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;8.修复 mysql8.0 版本同步表结构整数类型的问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;9.修复优化反射、解决 Spring 热部署造成的类加载问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;10.修复查询表字段长度的问题&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;11.修复 SQLite 日期问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;12.重构获取数据库信息的方式；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;13.移除日志依赖改为 jdk 自带日志；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;14.优化和修复一些功能问题&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367335/flexsql-1-7-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367335/flexsql-1-7-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 03:19:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Ant Design 5.27.1 发布，企业级 UI 设计语言和 React 实现</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Ant Design 5.27.1 现已发布，主要更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 Form 嵌套场景下，父级 Form.Item 的&amp;nbsp;&lt;code&gt;status&lt;/code&gt;&amp;nbsp;会传递给子级&amp;nbsp;&lt;code&gt;noStyle&lt;/code&gt;&amp;nbsp;Form.Item 的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54715" target="_blank"&gt;#54715&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Table 组件的头部 Checkbox 会出现闪烁的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54713" target="_blank"&gt;#54713&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化 Collapse 可点击展开区域的鼠标样式以优化用户体验。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54706" target="_blank"&gt;#54706&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Pagination&amp;nbsp;&lt;code&gt;simple&lt;/code&gt;&amp;nbsp;样式下，按钮和输入框的尺寸异常问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54652" target="_blank"&gt;#54652&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加越南语支持。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54644" target="_blank"&gt;#54644&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.27.1" target="_blank"&gt;https://github.com/ant-design/ant-design/releases/tag/5.27.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367322/ant-design-5-27-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367322/ant-design-5-27-1-released</guid>
      <pubDate>Mon, 18 Aug 2025 02:45:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Git for Windows v2.51.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Git for Windows v2.51.0 现已发布，更新内容包括：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong style="color:#333333"&gt;New Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;随附&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit%2Fgit%2Fblob%2Fv2.51.0%2FDocumentation%2FRelNotes%2F2.51.0.adoc" target="_blank"&gt;Git v2.51.0&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Portable Git installers&lt;/span&gt;（自解压 7-Zip archives）现在基于&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fp%2Fsevenzip%2Fdiscussion%2F45797%2Fthread%2Fda14cd780b%2F" target="_blank"&gt;7-Zip 25.01&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;随附&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fchanges.html%238_15_0" target="_blank"&gt;cURL v8.15.0&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;随附基于&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcygwin.com%2Fpipermail%2Fcygwin-announce%2F2025-July%2F012416.html" target="_blank"&gt;Cygwin v3.6.4&lt;/a&gt;&amp;nbsp;的 MSYS2 运行时（&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Git for Windows flavor&lt;/span&gt;） 。&lt;/li&gt; 
 &lt;li&gt;随附&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmintty%2Fmintty%2Freleases%2Ftag%2F3.7.9" target="_blank"&gt;MinTTY v3.7.9&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,&amp;quot;Noto Sans&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;; font-size:16px; font-style:normal; font-variant:tabular-nums; font-weight:400; letter-spacing:normal; margin-bottom:0px !important; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th style="border-color:#d1d9e0"&gt;Filename&lt;/th&gt; 
   &lt;th style="border-color:#d1d9e0"&gt;SHA-256&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Git-2.51.0-64-bit.exe&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;843037416371600a7f289be8fe2b2224afe1c1bb0736bbab7b3ff393e6a7aaf2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Git-2.51.0-arm64.exe&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;739673a52a2ea5a3ac23ef1a74985647fd21a758e5e177fed2d995dd897a1600&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;PortableGit-2.51.0-64-bit.7z.exe&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;a09b275d51ed3e829128e04cf4168fb54896cf6234bb30fecb8dc96a2bd321fa&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;PortableGit-2.51.0-arm64.7z.exe&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;0aacd4edf0c1715334a18725a947584652e1b34bddab63ac3f4a82c9f7c78e38&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;MinGit-2.51.0-64-bit.zip&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;c2c955a21fa99889d83f485f24fa5d9a38fffc2d509d4022385510e11c26b250&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;MinGit-2.51.0-arm64.zip&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;b21755ccd10f71a37ec341ca9ac450cebee71bb1e70c0d88d90ddd6e5b16dfa4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;MinGit-2.51.0-32-bit.zip&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;5a8f1cace31a817fa9fa3d18146e8b40a28fd365d48958976df93ae6f0bae077&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;MinGit-2.51.0-busybox-64-bit.zip&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;6b71de89d321310d1cc233565a10b06cabc65582e1c37bae47548c1fa323c878&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;MinGit-2.51.0-busybox-32-bit.zip&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;050fe76ece1b7762cd556bdbe242a979d5d769c2072db45e1cc888061552779c&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Git-2.51.0-64-bit.tar.bz2&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;151bddf70e1115631e62bb05535b5e6726b3813e1f363953ad6b4e6697d96933&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Git-2.51.0-arm64.tar.bz2&lt;/td&gt; 
   &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;5c3bc6ca50ef6a7686832d2549e6e1b3b1060cf18322a2bbe064d4aec2f33904&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Freleases%2Ftag%2Fv2.51.0.windows.1" target="_blank"&gt;https://github.com/git-for-windows/git/releases/tag/v2.51.0.windows.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367319/git-for-windows-2-51-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367319/git-for-windows-2-51-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 02:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Torna 1.33.7 发布，接口文档解决方案</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Torna 1.33.7 发布，本次更新内容：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;【修复】导出的 Postman 无响应参数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/durcframework/torna/issues/ICP3MI"&gt;#ICP3MI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;【修复】文件下载不显示中文问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/durcframework/torna/issues/ICE4CR"&gt;#ICE4CR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;【修复】导出的文档里接口定义里没有公共请求头&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/durcframework/torna/issues/ICAWUD"&gt;#ICAWUD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;【优化】导出文档可以选择是否隐藏维护人字段&lt;/li&gt; 
 &lt;li&gt;支持多数据源配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Ftorna.cn%2Fdev%2Fmulti-datasource.html" target="_blank"&gt;文档&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;关于 Torna&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;接口文档解决方案，目标是让接口文档管理变得更加方便、快捷。Torna 采用团队协作的方式管理和维护接口文档，将不同形式的文档纳入进来统一维护。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;Torna 弥补了传统文档生成工具（如 swagger）的不如之处，在保持原有功能的前提下丰富并增强了一些实用的功能。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-47d91305f6b4e40f648ded1c23a50e3515c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;解决文档管理痛点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;不满足 swagger 文档预览页面和调试页面的展现方式&lt;/li&gt; 
 &lt;li&gt;不喜欢 swagger 这种侵入式注解&lt;/li&gt; 
 &lt;li&gt;希望使用 javadoc 注释生成文档，并进行接口调试&lt;/li&gt; 
 &lt;li&gt;希望把公司所有项目接口文档进行统一管理&lt;/li&gt; 
 &lt;li&gt;希望把项目中的若干文档提供给第三方调用者查看&lt;/li&gt; 
 &lt;li&gt;希望可以统一管理项目中的字典枚举&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;如果您有以上几个需求和痛点，或许可以尝试一下使用 Torna&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftorna.cn%2Ftutorial%2Fstart.html" target="_blank"&gt;快速开始&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;推荐组合&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;smart-doc + Torna 实现文档全流程自动化&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果您使用 Java 语言，推荐使用&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;smart-doc + Torna&lt;/code&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/smart-doc-team/smart-doc"&gt;smart-doc&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;+ Torna 组成行业领先的文档生成和管理解决方案，使用 smart-doc 无侵入完成 Java 源代码和注释提取生成 API 文档，自动将文档推送到 Torna 企业级接口文档管理平台。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;通过这套组合您可以实现：只需要写完 Java 注释就能把接口信息推送到 Torna 平台，从而实现接口预览、接口调试。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;推送的内容有：&lt;code&gt;接口名称/author/Path 参数/Header/请求参数/返回参数/字典列表/公共错误码&lt;/code&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果您是非 Java 语言，可以使用表单页面编辑以上内容，完成后同样可以进行接口预览、调试。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftorna.cn%2Ftutorial%2Fstart.html" target="_blank"&gt;快速开始→&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367311/torna-1-33-7-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367311/torna-1-33-7-released</guid>
      <pubDate>Mon, 18 Aug 2025 01:41:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>xsha v0.3.0 版本发布 | Claude Code Web UI</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;本次更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增看板页面，项目管理更熟悉，更方便。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1514" src="https://oscimg.oschina.net/oscnet/up-989a35e4af6de83ec6883f221dfb45bf3f8.png" width="2494" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增日志实时查看，更方便捕获任务执行内容&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1510" src="https://oscimg.oschina.net/oscnet/up-e58e1b6001769cae5a1d26c11c4ad5491fd.png" width="2544" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增定时任务，最大化发挥 Claude Code 账户价值&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1734" src="https://oscimg.oschina.net/oscnet/up-6813c7f60b3b0138badb3dc20d5e0cfe7c4.png" width="2778" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;🚀 XSha - Cursor Background 开源替代&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;XSha 是一款将项目管理、Git、基于 AI 驱动的需求开发结合的软件系统。现基于 Claude Code 实现了通过任务对话即可完成项目任务开发，可同时多个任务并发执行，每个任务拥有独立的工作空间。通过 Docker 容器分配每个任务的执行环境从而保证了安全性。基于 ENV 环境变量的配置，可以轻松简答的接入 Kimi2、GLM 4.5、Qwen Coder 等更有性价比的大模型。 ✨&lt;/p&gt; 
&lt;h2&gt;🔥 核心特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 AI 驱动的项目任务自动开发：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;于 Claude Code 封装，开发能力上线取决于 Claude Code 的上限。同时支持 Kimi2/GLM 4.5/Qwen Coder 等模型。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ 执行环境隔离：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;基于 Docker 的容器运行方案，每个 Claude Code 的执行都在独立的容器内部，保证安全性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ 并发执行任务：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可控制的并发数量让项目任务开发更快速。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Git 接入：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;直接导入 Git 仓库，项目任务开发完成后一键推送到仓库，还可以在线查看 Git Diff 。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Github:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FXShaLabs%2Fxsha" target="_blank"&gt;https://github.com/XShaLabs/xsha&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367304/xsha-0-3-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367304/xsha-0-3-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 00:55:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>小蚂蚁云 XiaoMaYi-Nacos-EleVue 微服务框架 v1.0.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v1.0.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、全新架构设计；&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、全系支持 JDK17;&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、全系支持 MySQL、PostgreSQL、SqlServer、Sqlite 等数据库；&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、TypeScript、ElementPlus、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringCloud、SpringBoot3、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用 ElementPlus 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spring Cloud&lt;/code&gt;、&lt;code&gt;Spring Cloud Alibaba&lt;/code&gt;、&lt;code&gt;SpringBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等微服务组件框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spring Authorization Server&lt;/code&gt;、&lt;code&gt;SpringSecurity&lt;/code&gt;等微服务统一认证框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Nacos&lt;/code&gt;、&lt;code&gt;Seata&lt;/code&gt;、 等微服务统一认证框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;ElementPlus&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：小蚂蚁云微服务 Nacos+ElementPlus 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@小蚂蚁团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.xiaomayicloud.com" target="_blank"&gt;https://www.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fdocs.cloud.nacos.elevue.xiaomayicloud.com" target="_blank"&gt;http://docs.cloud.nacos.elevue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fmanage.cloud.nacos.elevue.xiaomayicloud.com" target="_blank"&gt;http://manage.cloud.nacos.elevue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;在线用户：主要用于在线用户的维护以及强制退出登录；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;缓存监控：主要对系统缓存信息进行统计和监控查阅；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2017bc9e1b8628592ce255bbcb1c4a4ccde.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367301</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367301</guid>
      <pubDate>Mon, 18 Aug 2025 00:11:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>DFDiff v1.5.0 已经发布，文件差异对比工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;DFDiff v1.5.0 已经发布，文件差异对比工具&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;DFDiff 是一款使用 Java Swing 开发的文本处理工具，同时也提供一些日常使用的小工具。&lt;/p&gt; 
&lt;h2&gt;新功能 1.5.0&lt;/h2&gt; 
&lt;p&gt;1、增加 Markdown 编辑功能，使用 JavaFX WebView 渲染 Markdown。&lt;br&gt; 2、大文件查看功能。对于大文件，采用分页查看实现。&lt;br&gt; 3、屏幕截图功能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="输入图片说明" src="https://foruda.gitee.com/images/1755617630219225899/7bacd7e6_2349.png" referrerpolicy="no-referrer"&gt; &lt;img alt="输入图片说明" src="https://foruda.gitee.com/images/1755617646268438383/16ce7328_2349.png" referrerpolicy="no-referrer"&gt; &lt;img alt="输入图片说明" src="https://foruda.gitee.com/images/1755617661846335996/1e828aa0_2349.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;已实现的全部功能&lt;/h2&gt; 
&lt;p&gt;4、已实现菜单功能&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;├──文件
|   ├─新建文件
|   ├─新建 Markdown
|   ├─打开文件
|   ├─打开文件夹
|   ├─最近打开的文件/文件夹
|   ├─保存文件
|   ├─另存文件
|   └─退出
├──编辑
|   ├─撤消
|   ├─恢复
|   ├─复制
|   ├─粘贴
|   ├─剪切
|   ├─查找...
|   ├─字体
|   └─换行
├──工具
|   ├─文件夹对比
|   ├─文件对比
|   ├─打开大文件
|   ├─json 格式化
|   ├─xml 格式化
|   ├─合并 pdf
|   └─图片转 pdf
|   └─屏幕截图
└──帮助
    └──关于
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  详情查看：
  &lt;a href="https://gitee.com/penngo/dfdiff/releases/v1.5.0"&gt;https://gitee.com/penngo/dfdiff/releases/v1.5.0&lt;/a&gt;
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367277/dfdiff-1-5-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367277/dfdiff-1-5-0-released</guid>
      <pubDate>Sun, 17 Aug 2025 15:30:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Torna v2.0.5 已经发布，企业接口文档解决方案</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Torna v2.0.5 已经发布，企业接口文档解决方案&lt;/p&gt;
&lt;p&gt;此版本更新内容包括：&lt;/p&gt;
&lt;ul&gt; 
 &lt;li&gt;支持 mcp streamable&lt;/li&gt; 
 &lt;li&gt;查询文档列表返回应用名称&lt;/li&gt; 
 &lt;li&gt;创建 api token 支持选择应用范围&lt;/li&gt; 
 &lt;li&gt;同步社区版 1.33.7&lt;/li&gt; 
&lt;/ul&gt;
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/durcframework/torna/releases/v2.0.5" rel="nofollow"&gt;https://gitee.com/durcframework/torna/releases/v2.0.5&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367247</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367247</guid>
      <pubDate>Sun, 17 Aug 2025 11:12:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>kom v0.2.57 已经发布，Kubernetes 操作工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;kom v0.2.57 已经发布，Kubernetes 操作工具&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Merge pull request #54 from weibaohui/crd-update&lt;/li&gt; 
 &lt;li&gt;refactor(discovery): 优化 CRD 监听逻辑并添加防抖机制&lt;/li&gt; 
 &lt;li&gt;Update README.md&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href="https://gitee.com/weibaohui/kom/compare/v0.2.56...v0.2.57" target="_blank"&gt;https://gitee.com/weibaohui/kom/compare/v0.2.56...v0.2.57&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/weibaohui/kom/releases/v0.2.57"&gt;https://gitee.com/weibaohui/kom/releases/v0.2.57&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367237/kom-0-2-57-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367237/kom-0-2-57-released</guid>
      <pubDate>Sun, 17 Aug 2025 10:25:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>JeecgBoot 代码生成器 1.5.1 重磅升级：一键生成，告别手工迁移</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;前言&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;作为 JeecgBoot 开发者，你是否还在为每次生成代码后需要手动复制前端文件到项目而烦恼？&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;本次 1.5.1 版本升级将彻底解决这些痛点！&lt;/p&gt; 
&lt;h2&gt;✨ 升级亮点&lt;/h2&gt; 
&lt;h3&gt;1. 前端代码直通项目&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;旧痛点&lt;/strong&gt;&lt;br&gt; 手动复制前端代码效率低且易出错&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;新特性&lt;/strong&gt;&lt;br&gt; 配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ui_project_path&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数即可自动写入前端项目&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;jeecg_config.properties 新增前端项目地址配置&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;# 生成到前端 VUE3 项目路径&lt;/span&gt;
ui_project_path=E:\\JeecgBoot\\jeecgboot-vue3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 菜单 SQL 自动迁移&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;优化点&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;自动将生成的 Flyway 格式的菜单 SQL 文件，迁移到 start 项目的 flyway 目录&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;jeecg-module-system/jeecg-system-&lt;span style="color:#d73a49"&gt;start&lt;/span&gt;/src/&lt;span style="color:#d73a49"&gt;main&lt;/span&gt;/resources/flyway/&lt;span style="color:#d73a49"&gt;sql&lt;/span&gt;/mysql
└── V20230819__init_menu_for_moduleX.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;⚡ 升级步骤&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1. 升级代码生成器依赖版本号&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;修改根目录下的 pom.xml，升级 codegenerate 版本号到 1.5.1&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;codegenerate.version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.5.1&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;codegenerate.version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;2. 增加前端项目配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;修改&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;jeecg-module-system/jeecg-system-start/src/main/resources/jeecg/jeecg_config.properties&lt;/code&gt;，设置下&lt;code&gt;前端项目路径&lt;/code&gt;和&lt;code&gt;后台 JAVA 项目路径&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;业务包路径&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#6a737d"&gt;# 生成到后端 Java 项目那个模块路径&lt;/span&gt;
project_path=E:\\JeecgBoot\\jeecg-boot\\jeecg-boot-module\\jeecg-module-demo
&lt;span style="color:#6a737d"&gt;# 生成到前端 VUE3 项目路径&lt;/span&gt;
ui_project_path=E:\\JeecgBoot\\jeecgboot-vue3
&lt;span style="color:#6a737d"&gt;# 业务包路径&lt;/span&gt;
bussi_package=org.jeecg.modules.demo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;升级价值&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;减少 85% 的前端文件迁移工作&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;节省 60% 的菜单 SQL 初始化时间&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;预计每周为开发者节省 1-2 小时&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 开发者说&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;"升级后开发效率提升 30%，前端联调更顺畅"&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;—— 某电商项目负责人&lt;/p&gt; 
&lt;h3&gt;🔗 相关资源&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJeecgBoot%2Fcommit%2F3db0995c3f0bb3b1825fe7989721a6ed1e0b41c1" target="_blank"&gt;GitHub 提交 PR 记录&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.jeecg.com%2Fjava%2Fcodegen%2Fconfig" target="_blank"&gt;代码生成配置文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.jeecg.com%2Fjava%2Fcodegen%2Fonline" target="_blank"&gt;代码生成使用文档&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367236/jeecgboot-1-5-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367236/jeecgboot-1-5-1-released</guid>
      <pubDate>Sun, 17 Aug 2025 10:15:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>开源跨境电商系统 InnoShop 发布 V0.5.8, 助力企业更好的建设自己的独立站</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;🚀 InnoShop V0.5.8 更新日志&lt;/h1&gt; 
&lt;h2&gt;🆕 新增功能&lt;/h2&gt; 
&lt;h3&gt;💰 支付系统集成&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;PayPal 支付集成&lt;/strong&gt;: 集成 PayPal 支付网关，支持国际支付&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stripe 支付集成&lt;/strong&gt;: 集成 Stripe 支付服务，支持信用卡支付&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支付宝集成&lt;/strong&gt;: 集成支付宝支付，支持国内移动支付&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;微信支付集成&lt;/strong&gt;: 集成微信支付，完善移动端支付体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支付方式管理&lt;/strong&gt;: 后台支付方式配置和状态管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支付回调处理&lt;/strong&gt;: 完善支付成功、取消、失败的回调机制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1478" src="https://oscimg.oschina.net/oscnet/up-c89b250b418817382cd9a049570793d0756.png" width="3072" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;🎨 首页拖拽功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;首页可视化编辑&lt;/strong&gt;: 实现首页组件拖拽编辑功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;页面构建器&lt;/strong&gt;: 支持拖拽式页面内容构建&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;组件排序&lt;/strong&gt;: 支持页面组件的拖拽排序&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实时预览&lt;/strong&gt;: 拖拽编辑时的实时预览效果&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1652" src="https://oscimg.oschina.net/oscnet/up-9f89c2548dc4bc880dee626c460a3a603c2.png" width="3072" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;🤖 AI 大模型集成&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;多平台 AI 服务&lt;/strong&gt;: 集成 OpenAI、DeepSeek 等多个 AI 服务&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI 服务工厂&lt;/strong&gt;: 统一的 AI 服务管理和调用机制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能内容生成&lt;/strong&gt;: AI 辅助商品描述和内容创作&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多语言 AI 支持&lt;/strong&gt;: 支持多语言环境下的 AI 功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="5000" src="https://oscimg.oschina.net/oscnet/up-17a3d273fecb37adcba8ea93f6a3c1076b0.png" width="3072" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;📦 产品功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;产品视频功能&lt;/strong&gt;: 新增产品视频展示和管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;产品变体管理&lt;/strong&gt;: 完善产品规格和变体系统&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;相关产品推荐&lt;/strong&gt;: 产品页面相关商品和文章推荐&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;产品评价系统&lt;/strong&gt;: 增强产品评价展示和管理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1632" src="https://oscimg.oschina.net/oscnet/up-b1dc1f7d3e591a8983eef8a2026f418864e.png" width="2742" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;📝 内容管理优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;文章分类系统&lt;/strong&gt;: 重构文章分类管理功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;内容关联&lt;/strong&gt;: 文章与产品的关联展示&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;摘要和详情&lt;/strong&gt;: 分类页面摘要和详情页面优化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;状态切换组件&lt;/strong&gt;: 统一的状态切换 UI 组件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1690" src="https://oscimg.oschina.net/oscnet/up-372738574f852973258238f389ca876dcbb.png" width="2752" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;🎛️ 后台管理重构&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;产品分类编辑&lt;/strong&gt;: 重构后台产品分类编辑功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文章编辑器&lt;/strong&gt;: 优化后台文章编辑体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文件管理器&lt;/strong&gt;: 增强文件上传和管理功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;插件管理&lt;/strong&gt;: 完善插件启用、禁用、安装、卸载功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 前端组件化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Header 组件化&lt;/strong&gt;: 前台头部组件独立化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Footer 组件化&lt;/strong&gt;: 前台底部组件独立化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;产品详情页重构&lt;/strong&gt;: 重构前台产品详情页面结构&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;响应式优化&lt;/strong&gt;: 移动端和桌面端适配优化&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;⚡ 功能优化&lt;/h2&gt; 
&lt;h3&gt;🚀 性能和资源优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;主题静态文件&lt;/strong&gt;: 优化主题静态资源加载机制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;资产管理&lt;/strong&gt;: 改进前端资源打包和加载&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;图片优化&lt;/strong&gt;: 优化图片加载和显示性能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;缓存机制&lt;/strong&gt;: 增强系统缓存策略&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📋 代码质量提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;格式化规范&lt;/strong&gt;: 统一代码格式化标准&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;组件重构&lt;/strong&gt;: 提取可复用组件和服务&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;架构优化&lt;/strong&gt;: 改进代码结构和模块化设计&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;性能监控&lt;/strong&gt;: 增加系统性能监控点&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🐛 问题修复&lt;/h2&gt; 
&lt;h3&gt;🔄 循环引用修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;分类循环引用&lt;/strong&gt;: 修复产品文章分类父级分类循环引用 BUG&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据关联&lt;/strong&gt;: 优化数据模型关联关系&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📁 文件上传修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;上传大小限制&lt;/strong&gt;: 修复文件上传大小限制问题&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文件类型验证&lt;/strong&gt;: 完善文件类型检查机制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🌍 国际化扩展&lt;/h2&gt; 
&lt;h3&gt;🆕 新增语言支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;巴西葡萄牙语&lt;/strong&gt;: 新增 pt-br 语言包&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;柬埔寨高棉语&lt;/strong&gt;: 新增 km 语言包&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;荷兰语&lt;/strong&gt;: 新增 nl 语言包&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1702" src="https://oscimg.oschina.net/oscnet/up-ee20c408652aa54f3d68728401a19e5208a.png" width="2846" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;🔄 语言包完善&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;中文优化&lt;/strong&gt;: 完善简体中文和繁体中文翻译&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;英文校对&lt;/strong&gt;: 优化英文语言包准确性&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其他语言&lt;/strong&gt;: 补充和完善其他语言包内容&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 翻译模块更新&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;翻译工具&lt;/strong&gt;: 更新翻译工具和流程&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多语言支持&lt;/strong&gt;: 增强多语言环境下的功能支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🏗️ 架构改进&lt;/h2&gt; 
&lt;h3&gt;🗄️ 数据库结构&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;迁移文件&lt;/strong&gt;: 新增多个数据库迁移文件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模型关系&lt;/strong&gt;: 优化数据模型关联关系&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;索引优化&lt;/strong&gt;: 改进数据库查询性能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 服务层重构&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 服务层&lt;/strong&gt;: 重构 AI 服务调用架构&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支付服务&lt;/strong&gt;: 统一支付服务接口设计&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;仓库模式&lt;/strong&gt;: 完善数据访问层设计&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;📦 依赖和配置&lt;/h2&gt; 
&lt;h3&gt;📚 依赖管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Composer 更新&lt;/strong&gt;: 更新 composer.lock 依赖锁定&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;第三方包升级&lt;/strong&gt;: 升级核心依赖包版本&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;新增依赖&lt;/strong&gt;: 引入新的功能依赖包&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚙️ 配置优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Nginx 配置&lt;/strong&gt;: 优化 nginx.htaccess 配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;环境配置&lt;/strong&gt;: 改进开发和生产环境配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;插件配置&lt;/strong&gt;: 完善插件配置管理机制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🎯 核心亮点&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;💳 完整支付生态&lt;/strong&gt;: 集成主流支付方式，支持国内外支付需求&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 可视化编辑&lt;/strong&gt;: 首页拖拽功能提升用户体验&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 AI 智能化&lt;/strong&gt;: 多平台 AI 集成，提升内容创作效率&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 国际化完善&lt;/strong&gt;: 新增 3 种语言，覆盖更广泛用户群体&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏗️ 架构升级&lt;/strong&gt;: 代码重构和性能优化，提升系统稳定性&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 开发体验&lt;/strong&gt;: 完善的开发工具和管理界面&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;本次更新涵盖了支付系统、可视化编辑、AI 集成、国际化等多个重要方面，为 InnoShop 电商系统提供了更完善的功能和更好的用户体验。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367206/innoshop-0-5-8-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367206/innoshop-0-5-8-released</guid>
      <pubDate>Sun, 17 Aug 2025 08:34:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Git 2.51 正式发布， 向 3.0 演进的关键里程碑</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Git 2.51 已正式发布，这是 Git 向 3.0 演进的关键里程碑。主要变化如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Cruft-free Multi-pack Indexes（无冗余的多包索引）&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;引入了 &lt;code&gt;repack.MIDXMustContainCruft&lt;/code&gt; 配置，用于让多包索引（MIDX）只包含可达对象，从而剔除「cruft packs」中的不可达对象。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 GitHub 的 monorepo 上测试结果显示：MIDX 大小缩小约 38%、生成速度提升约 35%、读取性能提升约 5%。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. 「Path walk」 重打包机制&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新的 &lt;code&gt;--path-walk&lt;/code&gt; 选项按路径分组对象进行重打包，避免使用传统的 name-hash heuristic，生成的包通常更精简，性能与现有方式相当或更优。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3. 更强大的 Stash 表示方式&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stash 条目由一系列多个父节点的提交表示，现在支持通过 &lt;code&gt;stash export&lt;/code&gt; 导出 stash，然后像分支或标签一样 push/pull 传输。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4. 改进 &lt;code&gt;git cat-file&lt;/code&gt; 的表现&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;git cat-file --batch-check&lt;/code&gt; 在面对子模块时，不再显示 「missing」，而是正确识别为 「submodule」，提升脚本处理准确性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;5. 支持多个 pathspec 结合 Bloom 过滤器&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用多个路径参数（例如 &lt;code&gt;git log -- path/a path/b&lt;/code&gt;）时，也可以利用 changed-path Bloom 过滤器，从而提高历史查询效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;6. &lt;code&gt;git switch&lt;/code&gt; 与 &lt;code&gt;git restore&lt;/code&gt; 正式稳定化&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;这两个命令不再是实验性功能，完善了原本 &lt;code&gt;git checkout&lt;/code&gt; 的功能分裂，让界面更加清晰且可靠。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;其他亮点&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;内部开发流程支持更多 C99 特性，如 &lt;code&gt;bool&lt;/code&gt; 关键字的使用已获批准，并记录哪些特性是试验性使用的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.blog%2Fopen-source%2Fgit%2Fhighlights-from-git-2-51%2F%3Futm_source%3Dchatgpt.com" target="_blank"&gt;The GitHub Blog&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Git 对贡献者允许使用非法律姓名提交补丁，与 Linux Kernel 的模式更加一致&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.blog%2Fopen-source%2Fgit%2Fhighlights-from-git-2-51%2F%3Futm_source%3Dchatgpt.com" target="_blank"&gt;The GitHub Blog&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;引入 SHA‑256 支持并提供测试选项&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;reftable 将成为未来的新标准引用后端&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;多项其他改进提升用户体验和安全性&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;em&gt;https://github.blog/open-source/git/highlights-from-git-2-51/&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367205/git-2-51-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367205/git-2-51-released</guid>
      <pubDate>Sun, 17 Aug 2025 08:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>PowerToys 0.93 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Microsoft PowerToys 是 Windows 系统实用程序，供高级用户调整和简化其 Windows 体验，可最大限度地提高生产力。PowerToys v0.93 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fpowertoys-0-93-is-here-faster-command-palette-new-dashboard-ux-and-more%2F" target="_blank"&gt;发布&lt;/a&gt;，修复了大量错误，进行了一些细微的用户体验调整，同时还带来了一些更新内容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;一些更新亮点如下：&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#242424"&gt;命令面板——更小、更好、更快、更强！&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;通过在 Windows App SDK 中启用提前 (AOT) 编译，成功&lt;strong style="color:#242424"&gt;将启动内存占用减少了 15%&lt;/strong&gt;，&lt;strong style="color:#242424"&gt;加载时间减少了 40%&lt;/strong&gt;，&lt;strong style="color:#242424"&gt;内置扩展程序的加载时间减少了 70%&lt;/strong&gt;，&lt;strong style="color:#242424"&gt;安装体积也减少了约 55%&lt;/strong&gt;！以下是 0.92 和 0.93 的原始数据对比：&lt;/p&gt; 
&lt;div style="text-align:start"&gt; 
 &lt;table cellspacing="0" style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-spacing:0px; border-style:solid; border-width:0.740741px; border:undefined; box-sizing:border-box; overflow:hidden"&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th style="border-color:#d1d1d1"&gt;&lt;span style="color:#242424"&gt;本&lt;/span&gt;&lt;/th&gt; 
    &lt;th style="border-color:#d1d1d1"&gt;&lt;span style="color:#242424"&gt;安装大小（MB）&lt;/span&gt;&lt;/th&gt; 
    &lt;th style="border-color:#d1d1d1"&gt;&lt;span style="color:#242424"&gt;内存峰值（MB）&lt;/span&gt;&lt;/th&gt; 
    &lt;th style="border-color:#d1d1d1"&gt;&lt;span style="color:#242424"&gt;窗口加载（毫秒）&lt;/span&gt;&lt;/th&gt; 
    &lt;th style="border-color:#d1d1d1"&gt;&lt;span style="color:#242424"&gt;内置扩展加载时间（毫秒）&lt;/span&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;0.92&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;121&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;192.88&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;1457.40&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;846.8&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;0.93&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;53.6&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;160.56&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;909.8&lt;/span&gt;&lt;/td&gt; 
    &lt;td style="border-collapse:collapse; border-color:#d1d1d1; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.740741px"&gt;&lt;span style="color:#242424"&gt;246.8&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FPowerToys%2Fpull%2F40551" target="_blank"&gt;#40551&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;此外还解决超过 99 个 Command Palette 问题。以下是一些值得注意的变化：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FPowerToys%2Fpull%2F40471" target="_blank"&gt;剪贴板历史记录又回来了&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FPowerToys%2Fpull%2F40359" target="_blank"&gt;上下文菜单的键盘快捷键&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FPowerToys%2Fpull%2F40544" target="_blank"&gt;固定你喜爱的应用程序&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FPowerToys%2Fpull%2F40427" target="_blank"&gt;使用运行扩展时支持历史记录&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#242424"&gt;改进了「设置」中的&amp;nbsp;dashboard UX&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;重新设计的&amp;nbsp;dashboard，将快速启动、快捷方式和实用程序切换开关分开，使它们更一目了然，更容易找到。现在，用户可以一目了然地看到哪些功能处于开启状态、哪些功能处于关闭状态以及自己拥有哪些快捷方式。而且，可以直接从主页快速启动实用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="257" src="https://oscimg.oschina.net/oscnet/up-72dcd11ca983a8784f70d7afed0ee9f7a15.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;新的「设置」主页将快速操作、快捷方式和模块状态直接呈现在你面前&lt;/em&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2FPowerToys%2Fpull%2F40214" target="_blank"&gt;#40214&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#242424"&gt;New Spotlight mode in Mouse Highlighter&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;Mouse Highlighter 已推出全新 Spotlight 模式。默认情况下，它会在光标周围绘制一个椭圆形高亮区域，但在 Spotlight 模式下，整个屏幕会变暗，仅保留鼠标周围的区域高亮显示。该功能非常适合屏幕共享、录制，或任何你想将注意力集中到操作准确位置的情况。当然，你可以完全控制变暗的颜色和透明度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;img alt="" height="344" src="https://oscimg.oschina.net/oscnet/up-6999d54438b25c15b0d47c534a331c1fb9e.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#242424"&gt;其他变化&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li&gt;新的可配置 UI 测试管道可以使用预构建版本，将测试时间从 2 个多小时缩短至约 90 分钟。&lt;/li&gt; 
 &lt;li&gt;更短的 CI、模糊测试和 UI 测试超时时间（从 4 小时减少到 90 分钟）以实现更快的反馈循环。&lt;/li&gt; 
 &lt;li&gt;对命令面板、高级粘贴、Peek、Text Extractor 和 PowerRename 进行更广泛的 UI 测试覆盖。&lt;/li&gt; 
 &lt;li&gt;更新并扩展了开发人员文档。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fpowertoys-0-93-is-here-faster-command-palette-new-dashboard-ux-and-more%2F" target="_blank"&gt;查看官方博文&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367203/powertoys-0-93-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367203/powertoys-0-93-released</guid>
      <pubDate>Sun, 17 Aug 2025 08:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Firefox 142 发布，浏览器扩展/附加组件支持使用 AI LLM</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Mozilla Firefox 142.0 现已在正式版发布通道发布，将于周二正式对外公布。Firefox 142 并没有带来太多显著的变化，但其中一项可能会引发一些围绕 Firefox 扩展的争议。&lt;/p&gt; 
&lt;p&gt;Firefox 142 作为八月的 Web 浏览器主版本更新并没有特别令人振奋的新功能，但它改进了对 Blob 图像的拖放支持、提升了书签对话框的滚动速度，并进行了一些其他改进。&lt;/p&gt; 
&lt;p&gt;对于 Web 开发者来说，Firefox 142 引入了 Prioritized Task Scheduling API，以便更好地控制任务优先级。&lt;/p&gt; 
&lt;p&gt;此外，它还引入了 URLPattern API，用于以标准化模式语法匹配和解析 URL。&lt;/p&gt; 
&lt;p&gt;一些用户可能会对「AI」一词感到不满，因为 Firefox 扩展允许使用本地大型语言模型 (LLMS)。Firefox 142 为扩展利用 LLM 打开了大门：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Firefox 现在支持 wllama API 扩展，使开发人员能够将本地语言模型 (LLM) 功能直接集成到他们的附加组件中。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;wllama 项目为 Llama.cpp 提供了 WebAssembly 绑定，用于在浏览器端进行 LLM 推理。&lt;/p&gt; 
&lt;p&gt;如果您对 Firefox 扩展/插件使用 wllama API 感到疑惑，可以通过错误跟踪器中的「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1976704" target="_blank"&gt;为扩展启用 wllama」&lt;/a&gt;了解更多信息。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fimage-viewer.php%3Fid%3D2025%26image%3Dfirefox_142_lrg" target="_blank"&gt;&lt;img alt="image.webp" src="https://static.oschina.net/uploads/img/202508/19162019_wKRL.jpg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Firefox 142.0 的安装文件可从&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fftp.mozilla.org%2Fpub%2Ffirefox%2Freleases%2F142.0%2F" target="_blank"&gt;ftp.mozilla.org&lt;/a&gt;&amp;nbsp;获取。有关 Firefox 142.0 开发人员变更的更多详细信息，请访问&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FMozilla%2FFirefox%2FReleases%2F142" target="_blank"&gt;development.mozilla.org&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367199</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367199</guid>
      <pubDate>Sun, 17 Aug 2025 08:20:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
