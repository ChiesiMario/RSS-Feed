<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 07 Sep 2025 12:48:41 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>comNG 串口助手 V2.2.3 版本：5 年后新版本发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;5 年了，我们新的全平台正式版本 comNG v2.2.3 终于来了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;先给不了解 comNG 的同学介绍下。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="654" src="https://oscimg.oschina.net/oscnet/up-2431f6f1f897c95816f1f97e4e997d911b5.png" width="623" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;comNG 是一个串口助手软件。除了提供基本串口工具外，它还有非常优雅的界面、高效的文本分析能力、另外的数据曲线可视化等等功能。完整的功能介绍可移步&amp;nbsp;&lt;a href="https://gitee.com/xenkuo/comNG#comng----%E7%8E%B0%E4%BB%A3%E5%8C%96%E4%B8%B2%E5%8F%A3%E5%8A%A9%E6%89%8B"&gt;comNG readme&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;为什么 5 年后又更新了？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;v2.1.1 release 后主题功能基本都已经完善了，陆陆续续收到一些用户的反馈，但都不涉及核心功能。&lt;/p&gt; 
&lt;p&gt;这 5 年里我也一直在使用 comNG，只能说相当之稳定，完全满足了我的日常开发需求。&lt;/p&gt; 
&lt;p&gt;目前 github 上 comNG 有近 70 的 star，gitee 上已经有近 500 的 star 了。2 年前开玩笑说 gitee 上 1000 star 后再更新，但是现在这个 star 数量已经让我有些膨胀了。&lt;/p&gt; 
&lt;p&gt;想折腾的心又躁动了起来。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v2.2.3 有什么更新？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;首先这次是全平台的更新，包括 Windows，Mac OS 和 Linux。由于是一些普适的改动和优化，所以希望每个平台都能更新到。&lt;/p&gt; 
&lt;p&gt;首要的改动是标题栏的 UI。老用户应该已经注意到标题栏不太一样了，优化的目的是希望提供更加协调的视觉体验。&lt;/p&gt; 
&lt;p&gt;另外标题栏的最大化操作的 bug 也修复了。之前标题栏双击最大化和最大化按钮是隔离的，现在操作可以同步了。&lt;/p&gt; 
&lt;p&gt;针对 Chart 页面也做了优化。新版本支持拖拉 Chart 页面的大小，给你更广阔的视野来检视你的数据曲线。操作逻辑也做了优化，尽量和串口的操作融合互补，整体操作更加简单了。&lt;/p&gt; 
&lt;p&gt;&lt;img height="654" src="https://oscimg.oschina.net/oscnet/up-6548763abb5aad634b74da560643d3181bb.png" width="623" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;还有一些其他的改动等你来发现。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;后面什么计划？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;其实还有另外一个改动是代码的模块化。这块与用户体验没有直接关系，但是对后期的功能优化和扩展很必要。&lt;/p&gt; 
&lt;p&gt;会有一段时间来进行代码的重构优化。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370757/comng-2-2-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370757/comng-2-2-3-released</guid>
      <pubDate>Sun, 07 Sep 2025 08:27:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>野火 IM 1.3.9 已经发布，即时通讯系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;野火 IM 1.3.9 已经发布，即时通讯系统&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;Release note 1.3.9:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;解决 server sdk 反复初始化内存泄漏的问题。&lt;/li&gt; 
 &lt;li&gt;群组支持用户@不在群组中的机器人。&lt;/li&gt; 
 &lt;li&gt;单聊会话支持@机器人。&lt;/li&gt; 
 &lt;li&gt;机器人支持回复消息，可以回复单聊或者群聊消息。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;附件的版本有 3 种格式，分别是 Java 通用版本、Deb 格式安装包和 Rpm 格式安装包包，可以根据平台或者自己的习惯下载其中一种软件包。另外在&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fim-server%2Freleases" target="_blank"&gt;Github&lt;/a&gt;也可以下载。也可以下载我们网站上的最新版本，&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fdistribution-latest-bundle-tar.tar.gz" target="_blank"&gt;通用 Java 包&lt;/a&gt;，&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.deb" target="_blank"&gt;deb 格式安装包&lt;/a&gt;和&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.rpm" target="_blank"&gt;rpm 格式安装包&lt;/a&gt;。 *** 0.42 版本增加了群成员数限制，默认为 2000。如果您想修改默认值，可以在升级版本之后，修改 t_setting 表，把默认的大小改为您期望的。另外修改 t_group 表，把已经存在的群组 max_member_count 改成您期望的，然后重启。*** *** 0.46 和 0.47 版本升级到 0.48 及以后版本时，可能会提示 flyway migrate 38 错误，请执行 &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fserver%2Fblob%2Fwildfirechat%2Fflyway_repaire_migrate_38.sql" target="_blank"&gt;修复脚本&lt;/a&gt; 进行修复。0.46 和 0.47 版本之外的版本不会出现此问题。*** *** 0.50 版本添加了是否允许客户端发送群操作通知的配置。如果您在客户端自定义群通知，需要在服务器端配置允许，没有使用自定义群操作通知的不受影响。*** *** 从 0.54 之前版本升级到 0.54 及以后版本时，会提示 flyway migrate 错误。因为 0.54 版本删除了 sql 脚本中默认敏感词的内容，flyway checksum 失败。请执行&lt;code&gt;update flyway_schema_history set checksum = 0 where script = 'V17__add_default_sensitive_word.sql';&lt;/code&gt;来修复。*** *** 从 0.59 之前的版本升级到之后的版本执行数据库升级时间比较长，请耐心等待提示运行成功，避免中途中断。 *** *** 0.62/0.63 版本有严重的问题，请使用 0.64 及以后版本，或者 0.61 版。 *** *** 从 0.68 版本起添加了 pc 在线是否默认手机接收推送的开关，默认为开，与以前版本作用相反，请注意兼容（可以关掉与之前保持一致或者升级客户端） *** *** 从 0.78 版本起把 MySQL 数据库中关键字都改为大小写敏感，另外生成 id 的方法也做了改变，只生成小写的 id，避免出现 id 重复的问题，建议所有客户都升级 *** *** 从 0.79 版本起把 log4j 升级到 log4j2，因为 log4j 已经不再维护而且还有已知的漏洞，建议所有客户都升级，升级时注意更新 log4j2 的配置文件 *** *** 0.97 版本更改了启动脚本&lt;code&gt;wildfirechat.sh&lt;/code&gt;，如果是升级服务，请注意更新启动脚本。*** *** 1.3.8 版本添加了 server api 发送消息的限制，限制消息体最大内容不能超过 64KB，如果升级请注意业务系统发送消息大小。***&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;历史更新记录&lt;/h1&gt; 
&lt;p&gt;请参考附件的 release_note.md&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;附件的版本有 3 种格式，分别是 Java 通用版本、Deb 格式安装包和 Rpm 格式安装包包，可以根据平台或者自己的习惯下载其中一种软件包。另外在&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fim-server%2Freleases" target="_blank"&gt;Github&lt;/a&gt;也可以下载。也可以下载我们网站上的最新版本，&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fdistribution-latest-bundle-tar.tar.gz" target="_blank"&gt;通用 Java 包&lt;/a&gt;，&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.deb" target="_blank"&gt;deb 格式安装包&lt;/a&gt;和&lt;a href="https://gitee.com/link?target=http%3A%2F%2Fstatic.wildfirechat.cn%2Fim-server-latest.rpm" target="_blank"&gt;rpm 格式安装包&lt;/a&gt;。 *** 0.42 版本增加了群成员数限制，默认为 2000。如果您想修改默认值，可以在升级版本之后，修改 t_setting 表，把默认的大小改为您期望的。另外修改 t_group 表，把已经存在的群组 max_member_count 改成您期望的，然后重启。*** *** 0.46 和 0.47 版本升级到 0.48 及以后版本时，可能会提示 flyway migrate 38 错误，请执行 &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwildfirechat%2Fserver%2Fblob%2Fwildfirechat%2Fflyway_repaire_migrate_38.sql" target="_blank"&gt;修复脚本&lt;/a&gt; 进行修复。0.46 和 0.47 版本之外的版本不会出现此问题。*** *** 0.50 版本添加了是否允许客户端发送群操作通知的配置。如果您在客户端自定义群通知，需要在服务器端配置允许，没有使用自定义群操作通知的不受影响。*** *** 从 0.54 之前版本升级到 0.54 及以后版本时，会提示 flyway migrate 错误。因为 0.54 版本删除了 sql 脚本中默认敏感词的内容，flyway checksum 失败。请执行&lt;code&gt;update flyway_schema_history set checksum = 0 where script = 'V17__add_default_sensitive_word.sql';&lt;/code&gt;来修复。*** *** 从 0.59 之前的版本升级到之后的版本执行数据库升级时间比较长，请耐心等待提示运行成功，避免中途中断。 *** *** 0.62/0.63 版本有严重的问题，请使用 0.64 及以后版本，或者 0.61 版。 *** *** 从 0.68 版本起添加了 pc 在线是否默认手机接收推送的开关，默认为开，与以前版本作用相反，请注意兼容（可以关掉与之前保持一致或者升级客户端） *** *** 从 0.78 版本起把 MySQL 数据库中关键字都改为大小写敏感，另外生成 id 的方法也做了改变，只生成小写的 id，避免出现 id 重复的问题，建议所有客户都升级 *** *** 从 0.79 版本起把 log4j 升级到 log4j2，因为 log4j 已经不再维护而且还有已知的漏洞，建议所有客户都升级，升级时注意更新 log4j2 的配置文件 *** *** 1.3.8 版本添加了 server api 发送消息的限制，限制消息体最大内容不能超过 64KB，如果升级请注意业务系统发送消息大小。***&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;历史更新记录&lt;/h1&gt; 
&lt;p&gt;请参考附件的 release_note.md&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/wfchat/im-server/releases/1.3.9"&gt;https://gitee.com/wfchat/im-server/releases/1.3.9&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370708</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370708</guid>
      <pubDate>Sun, 07 Sep 2025 02:10:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Snow 编程语言 v0.9.0 发布: 面向对象与虚拟调用全面落地</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h3&gt;更新内容&lt;/h3&gt; 
&lt;h4&gt;新增功能&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;引入虚函数表（VirtualTable）与 &lt;code&gt;Instance&lt;/code&gt; 运行时对象，支持基于继承链的虚拟调用与多态；新增 &lt;code&gt;@Class::method&lt;/code&gt; 调用语法。&lt;/li&gt; 
 &lt;li&gt;结构体继承能力：父类字段/方法复用，支持 &lt;code&gt;super.method(...)&lt;/code&gt; 与 &lt;code&gt;super(...)&lt;/code&gt; 构造链调用。&lt;/li&gt; 
 &lt;li&gt;支持结构体多构造函数/重载与自动选择策略，增强面向对象建模能力。&lt;/li&gt; 
 &lt;li&gt;新增对象创建表达式（&lt;code&gt;new&lt;/code&gt;）及其语义分析与 IR 生成流程。&lt;/li&gt; 
 &lt;li&gt;增加 &lt;code&gt;ModuleNode&lt;/code&gt;、&lt;code&gt;StructNode&lt;/code&gt; 及其序列化逻辑，扩展类型系统表示能力。&lt;/li&gt; 
 &lt;li&gt;扩展签名注册器，支持结构体类型签名登记与跨模块校验。&lt;/li&gt; 
 &lt;li&gt;支持 &lt;code&gt;this.xxx&lt;/code&gt; 成员赋值与更复杂的表达式解析场景。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;性能和稳定性改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化 &lt;code&gt;emitCall&lt;/code&gt; 与 CALL 指令执行路径，修复虚调度与 &lt;code&gt;super&lt;/code&gt; 匹配边界问题，提高执行正确性与性能。&lt;/li&gt; 
 &lt;li&gt;重构 &lt;code&gt;IRBuilderScope&lt;/code&gt;、&lt;code&gt;VMProgramBuilder&lt;/code&gt;、&lt;code&gt;IRProgram&lt;/code&gt;、&lt;code&gt;IRContext&lt;/code&gt; 等核心组件，简化依赖与上下文切换开销。&lt;/li&gt; 
 &lt;li&gt;优化函数解析器、语义分析器与表达式构建链路，提升类型分派与错误恢复能力。&lt;/li&gt; 
 &lt;li&gt;改进结构体的序列化/打印/调试输出，提升问题定位与可观测性。&lt;/li&gt; 
 &lt;li&gt;移除不必要的调试代码和兜底逻辑，减少运行噪声、提升稳定性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;开发者体验提升&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增与完善 Demo（Demo26–Demo33），覆盖多态、继承、构造函数等典型场景。&lt;/li&gt; 
 &lt;li&gt;丰富单元测试与示例代码；调整运行配置，统一/清理调试参数，便于本地复现与演示。&lt;/li&gt; 
 &lt;li&gt;重构 &lt;code&gt;StatementBuilder&lt;/code&gt; / &lt;code&gt;ExpressionBuilder&lt;/code&gt;，接口更清晰、可组合性更强；完善包级注释与文档结构。&lt;/li&gt; 
 &lt;li&gt;统一错误提示风格并增强定位信息，提升排错效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Bug 修复&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 CALL 指令在虚拟调用路径下的多处边界问题。&lt;/li&gt; 
 &lt;li&gt;修复构造函数降级/匹配在继承链上的选择异常。&lt;/li&gt; 
 &lt;li&gt;修复部分模块内/跨模块的符号解析问题，确保签名校验与查找一致性。&lt;/li&gt; 
 &lt;li&gt;修复 &lt;code&gt;this.xxx&lt;/code&gt; 赋值与复杂表达式解析的若干边界条件。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;文档改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新 Snow Common、CLI、VM、语义分析、语法分析等 README，示例与特性说明与代码保持同步。&lt;/li&gt; 
 &lt;li&gt;完善 IR 包注释与整体代码注释，统一术语与风格，提高可读性与维护性。&lt;/li&gt; 
 &lt;li&gt;优化日志与文档组织结构，便于检索与学习。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如遇到使用问题，欢迎及时 &lt;a href="https://gitee.com/jcnc-org/snow/issues"&gt;提交 Issue&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370523/snow-lang-0-9-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370523/snow-lang-0-9-0-released</guid>
      <pubDate>Fri, 05 Sep 2025 10:04:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>HugeSCM 0.19.0 发布，新增 Git 大仓库治理利器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;HugeSCM 0.19.0 已经发布，作为下一代版本控制系统，其核心功能没有太多的变化，新增了两个实验性的命令：&lt;em&gt;cherry-pick&lt;/em&gt;&amp;nbsp;和 &lt;em&gt;revert&lt;/em&gt;。&lt;/p&gt; 
&lt;p&gt;当前版本最大的亮点是 HugeSCM 团队将内部长期开发的 Git 存储库维护工具整合到 HugeSCM 中，命名为 &lt;strong&gt;hot&lt;/strong&gt;，&lt;code&gt;hot&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;命令是一个有去的 Git 存储库维护工具，它不仅支持删除存储库中的文件并重写历史（如大文件，密码文件等：&lt;/span&gt;&lt;code&gt;hot remove&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;），还支持分析存储库有哪些大文件（原始大小：&lt;/span&gt;&lt;code&gt;hot size&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;，压缩大小：&lt;/span&gt;&lt;code&gt;hot az&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;）,还支持友好的查看文件内容（&lt;/span&gt;&lt;code&gt;hot cat&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;），删除无效的分支，标签（按前缀删除：&lt;/span&gt;&lt;code&gt;hot prune-refs&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;，按过期时间或已合并删除：&lt;/span&gt;&lt;code&gt;hot expire-refs&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;），还支持查看存储库状态（&lt;/span&gt;&lt;code&gt;hot stat&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;），更多的命令可以查看帮助信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;hot 命令支持的场景有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Git 存储库误提交了密码凭证等，可以使用 hot remove 删除并重写历史记录，hot remove 的重新速度非常快。&lt;/li&gt; 
 &lt;li&gt;你可以使用 hot mc 将 Git 存储库的对象格式迁移到 SHA256，也可以将对象格式为 SHA256 的仓库迁移为 SHA1。&lt;/li&gt; 
 &lt;li&gt;你可以使用 hot size/hot az 查看仓库中有哪些大文件，通常治理可以直接使用 hot smart 交互式操作（如： hot smart -L20m）。&lt;/li&gt; 
 &lt;li&gt;仓库分支标签太多，可以使用 hot prune-refs/hot expire-refs 删除，可以使用 hot&amp;nbsp;scan-refs 查看分支的情况。&lt;/li&gt; 
 &lt;li&gt;你可以使用 hot unbranch 将存储库的历史线性化，也就是不包含任何合并点，使用 hot unbranch -K1 master -Tnew-branch 你就可以基于特定的版本创建一个孤儿分支，这在删除所有历史，开源等场景还是很有用的。&lt;/li&gt; 
 &lt;li&gt;你可以使用 hot cat 查看存储库中的文件，commit，tree，blob，其中 commit tree 对象可以使用 --json 输出成 json，如果 blob 是二进制，hot cat 会一 16 进制分页查看。&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370515/hugescm-0-19-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370515/hugescm-0-19-0-released</guid>
      <pubDate>Fri, 05 Sep 2025 09:51:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>字体设计工具字玩 v0.3.0 发布，新增笔画骨架绑定功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;div&gt;
  字玩是一款开源的字体设计工具。使用 Vue3 + Tauri 开发，支持 Web 端、MacOS 和 Windows 平台。
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  字玩致力于探索以参数化、脚本化的方式设计中文字库，帮助用户高效设计个性化字体。
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  使用字玩，除了基本的钢笔绘制字形功能，您还可以：
 &lt;/div&gt; 
 &lt;div&gt;
  1. 使用字玩提供的笔画模板，通过可视化拖拽笔画骨架的方式组装字形
 &lt;/div&gt; 
 &lt;div&gt;
  2. 使用字玩提供的 7000 字模板工程，通过高级编辑界面一键修改字库风格，生成您的专属个性化字库
 &lt;/div&gt; 
 &lt;div&gt;
  3. 通过脚本功能，使用字玩 API 绘制任意您自己设计的可调参笔画或字形组件
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  字玩官网：
  &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.font-player.com" target="_blank"&gt;https://www.font-player.com&lt;/a&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  开源地址：
  &lt;a href="https://gitee.com/toysmaker/fontplayer"&gt;字玩在 gitee&lt;/a&gt; |&amp;nbsp;
  &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHiToysMaker%2Ffontplayer" target="_blank"&gt;字玩在 github&lt;/a&gt;
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  桌面版下载：
  &lt;a href="https://gitee.com/toysmaker/fontplayer/releases/tag/v0.3.0"&gt;gitee release&lt;/a&gt;&amp;nbsp;|&amp;nbsp;
  &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHiToysMaker%2Ffontplayer%2Freleases%2Ftag%2Fv0.3.0" target="_blank"&gt;github release&lt;/a&gt;
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  字玩目前尚处于内测阶段，非常期待您的意见反馈，有任何问题或建议欢迎给字玩提 issue。
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  字玩 v0.3.0 版更新内容：
 &lt;/div&gt; 
 &lt;div&gt;
  1. 新增 32 个笔画的骨架绑定功能
 &lt;/div&gt; 
 &lt;div&gt;
  2. 支持笔画骨架的手动权重设置
 &lt;/div&gt; &amp;nbsp; 
 &lt;div&gt;
  在 v0.3.0 版本中，用户可以上传手绘笔画，并选择基础笔画类型进行骨架绑定。在绑定骨架后，可以通过拖拽骨架的方式改变手绘笔画形状，以组装个性化字形。参考 3D 软件的骨骼蒙皮技术，字玩支持用户手动「刷权重」，设置笔画轮廓点的对应权重。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img alt="" height="1534" src="https://oscimg.oschina.net/oscnet/up-ad89771bb6bca1c6ba5cc4b103ffb42d904.png" width="3024" referrerpolicy="no-referrer"&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370514</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370514</guid>
      <pubDate>Fri, 05 Sep 2025 09:46:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>跨平台游戏引擎 Axmol-2.8.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;所有使用 axmol-2.8.0 的开发者都应更新至此版本&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Axmol 2.8.1 版本是一个以错误修复和功能改进为主的次要 &lt;code&gt;LTS&lt;/code&gt; 长期支持版本，发布时间: 2025 年 9 月 5 日&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;🙏感谢所有对 axmol 项目的贡献者，包括财务赞助者：@scorewarrior、@peterkharitonov、@duong、@thienphuoc、@bingsoo、@asnagni、 @paulocoutinhox 以及 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsponsors%2Faxmolengine" target="_blank"&gt;历史赞助者&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;仓库地址&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub (官方): &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol" target="_blank"&gt;https://github.com/axmolengine/axmol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee (镜像): &lt;a href="https://gitee.com/simdsoft/axmol"&gt;https://gitee.com/simdsoft/axmol&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bug 修复&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;修复 2.8.0 引入的 HTTP 请求中 Content-Length 设置不当的问题，详见 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fissues%2F2686" target="_blank"&gt;#2686&lt;/a&gt;&lt;/strong&gt;，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;修复启用 AX_CORE_PROFILE 选项时的编译错误，贡献者：@martinking71，详见 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2677" target="_blank"&gt;#2677&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 lua-tests 中 PhysicsTest 无法运行的问题，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;修复 platform/mac/GL-mac.h 中缺失的处理器 endif，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;修复 lua-tests 和 live2d-tests 的包名错误，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;修复 lua-tests 中 AccelerometerTest 无法运行的问题，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;修复 wasm 下载器，贡献者：@AlexandreK38，详见 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2676" target="_blank"&gt;#2676&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;弃用功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;标记 Director::setGLDefaultValues 为弃用，请改用 setRenderDefaults，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;标记 messageBox 为弃用，请改用 showAlert，贡献者：@halx99&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;功能改进&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;将 DrawNode 的颜色参数恢复为 Color4F，以修复 Lua 测试问题&lt;/strong&gt;，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;新增 API：ax::showAlert，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;新增 API：HttpResponse::getStatusText，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;移除不存在的 Lua 测试用例条目，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;修复 fmt::format 格式字符串错误，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;移除菜单条目中的 "CC"（cpp-/lua-tests），贡献者：@aismann，详见 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2688" target="_blank"&gt;#2688&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;删除不必要的 Lua 文件：LayerEx.lua、DrawPrimitives.lua，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;在 CocoStudio.lua 中使用 Lua 长度操作符 &lt;code&gt;#&lt;/code&gt; 替代 &lt;code&gt;table.getn&lt;/code&gt;，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;更新 CurlTeset 的 URL，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;确保 lua-tests 中 RenderTextureTest 用例正常运行，贡献者：@halx99&lt;/li&gt; 
 &lt;li&gt;新增 API：PointArray::clear()，贡献者：@aismann，详见 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2692" target="_blank"&gt;#2692&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;发布文件 MD5 校验值&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;axmol-2.8.1.zip&lt;/code&gt;: a6e23b80d3aa3f27ad80a8de1e0899f6&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;axmol-bs-2.8.1.zip&lt;/code&gt;: 0d349ca8038d86cae26a8b31abebb6fa&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下载&lt;/h2&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;国内用户可尝试复制链接使用迅雷加速下载&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Freleases%2Fdownload%2Fv2.8.1%2Faxmol-2.8.1.zip" target="_blank"&gt;axmol-2.8.1.zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Freleases%2Fdownload%2Fv2.8.1%2Faxmol-bs-2.8.1.zip" target="_blank"&gt;axmol-bs-2.8.1.zip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;百度网盘&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpan.baidu.com%2Fs%2F1Fcxhh0axZ8pL9j5Zq2xW7g%3Fpwd%3Db424" target="_blank"&gt;axmol-2.8.1.zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpan.baidu.com%2Fs%2F1eeDEe3Zoi8ykfAFona0Wdw%3Fpwd%3Dy1am" target="_blank"&gt;axmol-bs-2.8.1.zip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SourceForge&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fprojects%2Faxmol-engine.mirror%2Ffiles%2Fv2.8.1%2F" target="_blank"&gt;Axmol-2.8.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370494/axmol-engine-2-8-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370494/axmol-engine-2-8-1-released</guid>
      <pubDate>Fri, 05 Sep 2025 08:44:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>OpenSSL 3.6.0-alpha1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenSSL 3.6.0 首个 Alpha 测试版已发布，主要变化集中在 FIPS 合规性、密钥管理、抗量子算法以及构建要求等方面。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FIPS 模式强化&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;针对短签名算法 SLH-DSA 和离散对数密钥生成引入 FIPS 140-3 自检（PCT），确保符合最新合规要求。&lt;/li&gt; 
   &lt;li&gt;RSA/EC/ECX 密钥导入流程也新增 PCT 检查，提升密钥迁移场景下的安全性。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;密钥对象新特性&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;为 EVP PKEY 对象增加 NIST 安全等级标记，方便按合规需求选用算法。&lt;/li&gt; 
   &lt;li&gt;新增「不透明对称密钥对象（EVP_SKEY）」及配套 API（如 EVP_KDF_CTX_set_SKEY），提高密钥派生与交换的灵活性和安全性。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;抗量子算法支持&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在 FIPS 与默认提供程序中均加入 LMS（SP 800-208）签名验证，提供面向未来的抗量子攻击能力。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;构建与兼容性&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;最低编译器要求从 ANSI-C 提升到 C99；移除对 VxWorks 平台的官方支持。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;工具与 API 更新&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新增 openssl configutl 命令，用于转储和管理配置文件。&lt;/li&gt; 
   &lt;li&gt;FIPS 提供程序支持 FIPS 186-5 规范的确定性 ECDSA 签名。&lt;/li&gt; 
   &lt;li&gt;弃用 EVP_PKEY_ASN1_METHOD 系列函数，开发者需提前调整代码以避免后续兼容性问题。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;官方提醒：此为 Alpha 预览版，仅建议开发/测试使用，不建议部署至生产环境。&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;em&gt;https://github.com/openssl/openssl/releases/tag/openssl-3.6.0-alpha1&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370490</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370490</guid>
      <pubDate>Fri, 05 Sep 2025 08:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Ant Design 5.27.3 发布，企业级 UI 设计语言和 React 实现</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;Ant Design 5.27.3 现已发布，主要更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;able 
  &lt;ul&gt; 
   &lt;li&gt;修复 Table 设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;scroll.y&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或者&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;sticky&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时表头列宽度被挤压或渲染闪烁的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54824" target="_blank"&gt;#54824&lt;/a&gt; 
    &lt;table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; box-sizing:border-box; display:block; font-variant:tabular-nums; margin-bottom:16px; margin-top:0px; max-width:100%; overflow:auto; width:max-content"&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th style="border-color:#d1d9e0"&gt;Before ❌&lt;/th&gt; 
       &lt;th style="border-color:#d1d9e0"&gt;After ✅&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;img height="200" src="https://oscimg.oschina.net/oscnet/up-40bae15479223dbf5489b4e9607dbaba1ef.png" width="315" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
       &lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;img height="200" src="https://oscimg.oschina.net/oscnet/up-79a857f45575cee123f201875ef1c5e9db8.png" width="390" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/li&gt; 
   &lt;li&gt;修复 Table 在虚拟滚动时，&lt;code&gt;scroll.scrollToFirstRowOnChange&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置不生效的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fissues%2F54734" target="_blank"&gt;#54734&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 Table 的列配置了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;children&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时，无法&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;fixed: 'right'&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fissues%2F51812" target="_blank"&gt;#51812&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 Table 配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;expandable.fixed&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时，展开列没有显示的问题。&lt;/li&gt; 
   &lt;li&gt;修复 Table 虚拟化时列&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;minWidth&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性不生效的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fissues%2F54856" target="_blank"&gt;#54856&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;修复 Pagination 在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;simple&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;small&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;尺寸下的样式问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54837" target="_blank"&gt;#54837&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Button&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;shape="round"&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时的 padding 样式问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54845" target="_blank"&gt;#54845&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Input.OTP 不允许连续删除的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54850" target="_blank"&gt;#54850&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Dropdown&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;onOpenChange&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;闭包问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54880" target="_blank"&gt;#54880&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Carousel 组件在 RTL 模式下的样式和按钮切换问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54868" target="_blank"&gt;#54868&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Typography 在可编辑状态下的错误边距。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54871" target="_blank"&gt;#54871&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;补充 ColorPicker 和 QRCode 的意大利语翻译。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Fpull%2F54842" target="_blank"&gt;#54842&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fant-design%2Fant-design%2Freleases%2Ftag%2F5.27.3" target="_blank"&gt;https://github.com/ant-design/ant-design/releases/tag/5.27.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370478/ant-design-5-27-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370478/ant-design-5-27-3-released</guid>
      <pubDate>Fri, 05 Sep 2025 07:57:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Xmake v3.0.2 发布，C++ Modules 改进和 Native thread 支持</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h3&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fissues%2F6755" target="_blank"&gt;#6755&lt;/a&gt;: 添加原生线程支持&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6641" target="_blank"&gt;#6641&lt;/a&gt;: 为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;target/config&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;添加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;pkgenvs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6644" target="_blank"&gt;#6644&lt;/a&gt;: 支持使用 clang 编译 .def 文件&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6695" target="_blank"&gt;#6695&lt;/a&gt;: 为 inf2cat 添加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/uselocaltime&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6709" target="_blank"&gt;#6709&lt;/a&gt;: 支持 wasm64 架构&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6737" target="_blank"&gt;#6737&lt;/a&gt;: 为 cython 规则添加 python 存根文件扩展&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6651" target="_blank"&gt;#6651&lt;/a&gt;: 改进依赖文件&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6656" target="_blank"&gt;#6656&lt;/a&gt;: 使构建工具支持传入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;opt.targets&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6688" target="_blank"&gt;#6688&lt;/a&gt;: 改进安装目标&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6692" target="_blank"&gt;#6692&lt;/a&gt;: 改进 protobuf 测试&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6714" target="_blank"&gt;#6714&lt;/a&gt;: 改进 C++ 模块测试&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6719" target="_blank"&gt;#6719&lt;/a&gt;: 改进 comax 配置&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6725" target="_blank"&gt;#6725&lt;/a&gt;: 改进&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;target:extrafiles&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bugs 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6648" target="_blank"&gt;#6648&lt;/a&gt;: 修复 (qt.qmltyperegistrar): 收集 metatypes 信息&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6661" target="_blank"&gt;#6661&lt;/a&gt;: 通过设置 "--tries=1" 修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;_ping_via_wget&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;长时间阻塞的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6665" target="_blank"&gt;#6665&lt;/a&gt;: 修复 cmake/mingw&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6674" target="_blank"&gt;#6674&lt;/a&gt;: 尝试修复包中的 linkgroups&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6686" target="_blank"&gt;#6686&lt;/a&gt;: 修复编译器缓存&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6698" target="_blank"&gt;#6698&lt;/a&gt;: 修复 (C++ 模块) 处理空模块&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6699" target="_blank"&gt;#6699&lt;/a&gt;: 修复 (C++ 模块) 修复删除模块文件时 xmake 不更新模块映射器的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6706" target="_blank"&gt;#6706&lt;/a&gt;: 修复 CUDA 13 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;find_cudadevices&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6707" target="_blank"&gt;#6707&lt;/a&gt;: 修复 (C++ 模块) 修复 sourcebatch 缓存&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6712" target="_blank"&gt;#6712&lt;/a&gt;: 修复 (C++ 模块) 修复禁用的目标被配置用于模块编译的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6713" target="_blank"&gt;#6713&lt;/a&gt;: 修复 (C++ 模块) 修复非 .cpp 文件从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;c++.build&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;sourcebatch 中被窃取的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6715" target="_blank"&gt;#6715&lt;/a&gt;: 修复 (C++ 模块) 修复公共剔除模块错误地发出警告的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6718" target="_blank"&gt;#6718&lt;/a&gt;: 忽略 pch 标志&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6732" target="_blank"&gt;#6732&lt;/a&gt;: 修复: android ndk rust link-args&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6735" target="_blank"&gt;#6735&lt;/a&gt;: 修复 (qt.qmltyperegistrar): 扩展依赖项以进行重建&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6738" target="_blank"&gt;#6738&lt;/a&gt;: 修复 protobuf 的目标依赖&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6741" target="_blank"&gt;#6741&lt;/a&gt;: 修复 vsxmake 选项&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxmake-io%2Fxmake%2Fpull%2F6747" target="_blank"&gt;#6747&lt;/a&gt;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;meminfo.c&lt;/code&gt;: &amp;lt; 10.7 版本上没有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;vmstat.compressor_page_count&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370463/xmake-3-0-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370463/xmake-3-0-2-released</guid>
      <pubDate>Fri, 05 Sep 2025 06:55:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>OrientDB 3.2.44 发布，多模 NoSQL 数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;OrientDB 是兼具文档数据库的灵活性和图形数据库管理链接能力的可深层次扩展的文档 - 图形数据库管理系统。可选无模式、全模式或混合模式。支持许多高级特性，诸如 ACID 事务、快速索引、原生和 SQL 查询功能。可以导入 JSON 格式、导出文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;OrientDB 3.2.44 现已发布，&lt;/span&gt;这是一个新的补丁版本。&lt;span style="color:#000000"&gt;具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新了 commons-lang 2.6 依赖项，该依赖项已过时且不受支持&lt;/li&gt; 
 &lt;li&gt;正确的磁盘缓存大小跟踪。&lt;/li&gt; 
 &lt;li&gt;确保在设置属性值与当前值完全相同时，不要将文档标记为 dirty，issue&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forientechnologies%2Forientdb%2Fissues%2F10514" target="_blank"&gt;#10514&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;纠正多语言脚本执行器中的数组处理，issue&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forientechnologies%2Forientdb%2Fissues%2F10532" target="_blank"&gt;#10532&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;纠正索引查询查找中的类转换异常：issue&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forientechnologies%2Forientdb%2Fissues%2F10530" target="_blank"&gt;#10530&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forientechnologies%2Forientdb%2Freleases%2Ftag%2F3.2.44" target="_blank"&gt;https://github.com/orientechnologies/orientdb/releases/tag/3.2.44&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370458/orientdb-3-2-44-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370458/orientdb-3-2-44-released</guid>
      <pubDate>Fri, 05 Sep 2025 06:45:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 优化及缺陷修复：开源无代码 / 低代码平台 NocoBase</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;原文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nocobase.com%2Fcn%2Fblog%2Fweekly-updates-20250905" target="_blank"&gt;NocoBase 本周更新汇总：优化及缺陷修复 - NocoBase&lt;/a&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;NocoBase 是一个极易扩展的开源无代码开发平台。完全掌控，无限扩展，助力你的开发团队快速响应变化，显著降低成本，不必投入几年时间和数百万资金研发，只需要花几分钟部署 NocoBase。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nocobase.com%2Fcn%2F" target="_blank"&gt;NocoBase 中文官网&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs-cn.nocobase.com%2Fwelcome%2Fintroduction" target="_blank"&gt;官方文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo-cn.nocobase.com%2Fnew" target="_blank"&gt;在线 Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;NocoBase 目前更新包括的版本更新包括三个分支：&lt;code&gt;main&lt;/code&gt; ，&lt;code&gt;next&lt;/code&gt;和 &lt;code&gt;develop&lt;/code&gt;。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="version.png" src="https://oscimg.oschina.net/oscnet//6cf61fbfe78855f3e0b3d128968691b5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;main&lt;/code&gt; ：截止目前最稳定的版本，推荐安装此版本。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;next&lt;/code&gt;：包含即将发布的新功能，经过初步测试的版本，可能存在部分已知或未知问题。主要面向测试用户，用于收集反馈和进一步优化功能。适合愿意提前体验新功能并提供反馈的测试用户。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;develop&lt;/code&gt;：开发中的版本，包含最新的功能代码，可能尚未完成或存在较多不稳定因素，主要用于内部开发和快速迭代。适合对产品功能前沿发展感兴趣的技术用户，但可能存在较多问题或不完整功能，不建议在生产环境中使用。&lt;/p&gt; 
&lt;h2&gt;main&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="main.png" src="https://oscimg.oschina.net/oscnet//fb302a7edc7a690d9747123f039d04e4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nocobase.com%2Fcn%2Fblog%2Fv1.8.23" target="_blank"&gt;v1.8.23&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;发布时间：2025-09-03&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;🚀 优化&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[database]&lt;/strong&gt; 优化了 list API 的统计条数查询，减少资源占用。 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7453" target="_blank"&gt;#7453&lt;/a&gt;) by @aaaaaajie&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[通知：站内信]&lt;/strong&gt; 支持站内信配置消息提示的自动关闭等待时间 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7472" target="_blank"&gt;#7472&lt;/a&gt;) by @mytharcher&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[工作流：通知节点]&lt;/strong&gt; 支持通知节点测试执行 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7470" target="_blank"&gt;#7470&lt;/a&gt;) by @mytharcher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🐛 修复&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[client]&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;修复编辑表单区块中，阅读态关系字段在切换为标签组件时渲染失败的问题 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7468" target="_blank"&gt;#7468&lt;/a&gt;) by @katherinehhh&lt;/li&gt; 
   &lt;li&gt;修复选定日期为最小允许日期时时间选择限制无效的问题 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7461" target="_blank"&gt;#7461&lt;/a&gt;) by @katherinehhh&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[移动端]&lt;/strong&gt; 修复移动端不含时区的日期字段未正确显示时分秒 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7473" target="_blank"&gt;#7473&lt;/a&gt;) by @katherinehhh&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[公开表单]&lt;/strong&gt; 修复公开表单字段配置变量作为默认值时未生效的问题 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7467" target="_blank"&gt;#7467&lt;/a&gt;) by @katherinehhh&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[操作：导入记录]&lt;/strong&gt; 修复导入 xlsx 重复数据时报错行数显示错误 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7440" target="_blank"&gt;#7440&lt;/a&gt;) by @aaaaaajie&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[数据表：树]&lt;/strong&gt; 在删除树表之后移除和该表有关的数据库事件 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnocobase%2Fnocobase%2Fpull%2F7459" target="_blank"&gt;#7459&lt;/a&gt;) by @2013xile&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[工作流：自定义操作事件]&lt;/strong&gt; 修复自定义操作事件初始化后不能直接手动执行的问题 by @mytharcher&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[工作流：子流程]&lt;/strong&gt; 修复子流程重复恢复执行的问题 by @mytharcher&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;[工作流：审批]&lt;/strong&gt; 对非当前审批人，不展示流程表格中的对应查看按钮 by @mytharcher&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370451</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370451</guid>
      <pubDate>Fri, 05 Sep 2025 06:20:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>谷歌 AI 编程工具 Gemini CLI 发布 v0.3.1</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌 Gemini 命令行工具 (Gemini CLI)&amp;nbsp;v0.3.1 已发布，新版本增强了 GitHub Actions 集成，并增加了自定义主题和交互体验优化。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub Actions 集成升级至 v0.1.12，官方提供可直接复用的工作流示例库&lt;/li&gt; 
 &lt;li&gt;支持在 issue 与 Pull Request 中自动触发代码审查、问题分类及自定义命令&lt;/li&gt; 
 &lt;li&gt;新增 GOOGLE_API_KEY 与 GEMINI_MODEL 环境变量支持，方便在 CI/CD 中灵活配置模型与密钥&lt;/li&gt; 
 &lt;li&gt;CLI 界面新增自定义主题功能，用户可通过本地 JSON 文件或 settings.json 编写并加载专属主题，实现终端外观个性化&lt;/li&gt; 
 &lt;li&gt;交互体验优化：--allowed-tools 参数可跳过常用可信工具的确认提示&lt;/li&gt; 
 &lt;li&gt;Bulk Tool Call Approval 机制允许在单次响应中批量批准同一工具的所有待执行调用&lt;/li&gt; 
 &lt;li&gt;修复了模型报错未被正确暴露导致指令未被执行的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle-gemini%2Fgemini-cli%2Freleases" target="_blank"&gt;下载地址&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Gemini CLI 是谷歌开源的免费 AI 编程工具，该工具将 Gemini 的能力带到了开发者最常用的终端，能够提供轻量化的 Gemini 访问通道。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1705" src="https://static.oschina.net/uploads/space/2025/0626/100936_PeVk_2720166.png" width="2435" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;该工具&lt;/span&gt;支持通过自然语言实现代码编写、问题调试及工作流优化，还可以作为多功能本地工具，完成内容生成、问题解决、深度研究及任务管理等各类任务。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370450</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370450</guid>
      <pubDate>Fri, 05 Sep 2025 06:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>官宣：Apache Cloudberry (Incubating) 2.0.0 发布！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;本文由下面官方博文综合整理而成，较原文编排有所改动：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;em&gt;·&lt;/em&gt;&lt;em&gt;https://cloudberry.apache.org/blog/announce-apache-cloudberry-2.0.0/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;em&gt;·&lt;/em&gt;&lt;em&gt;https://cloudberry.apache.org/blog/whats-new-in-apache-cloudberry-2.0.0/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt;
        &amp;nbsp;
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;Apache Cloudberry (Incubating) 社区高兴地宣布 Apache Cloudberry (Incubating) 2.0.0 版本正式发布！这是该项目自 2024 年 10 月加入 Apache 软件基金会孵化器以来的首个正式版本。Apache Cloudberry 作为一款开源大规模并行处理（MPP）数据库，衍生自 PostgreSQL 和 Greenplum Database 的最后一个开源版本，支持本地和云上部署，为数据仓库和高级分析提供可扩展的基础。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;我们要感谢为此版本发布做出努力的所有贡献者、导师以及 Apache 孵化器社区的宝贵支持。这一里程碑表明了 Apache Cloudberry 社区为满足 ASF 发布要求并将 Cloudberry 打造成一个开放和社区驱动的项目而做出的努力取得关键进展！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet//94b3c3d56812c5885767b99ea97cc0bc.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;功能变更&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;Cloudberry 2.0.0 包含了&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1981 个&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;变更提交，在查询处理、存储引擎、安全性和资源管理等方面都有显著改进。由于变更内容较多，在本模块我们做了筛选，仅重点介绍部分新功能、功能增强与问题修复，以帮助大家快速了解关键改进。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;查询处理增强：&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;改进增强优化器和执行器，显著提升查询处理能力。新增动态索引扫描、位图扫描优化和更高效的连接策略。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;存储引擎优化：&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;改进 AO/CO 表的存储效率，增强 BRIN 索引功能，并优化 VACUUM 操作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;安全性能提升：&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;在 pgcrypto 中增加了 FIPS 模式支持，改进了权限管理，并加强了整个数据库系统的安全控制。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;资源管理优化：&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;增强的监控能力和更完善的资源组管理。系统现在能更好地控制 CPU、内存和 I/O 资源。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;查询处理和优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;索引和扫描&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;增强的仅索引扫描能力&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时，支持更广泛的索引类型进行仅索引扫描，包括使用 INCLUDE 列的覆盖索引，这有助于提高查询性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时支持动态仅索引扫描，以加速分区表上的查询。此功能结合分区裁剪和仅索引访问来避免堆查找，显著减少 I/O 并提高性能。它特别适合具有窄覆盖索引的宽表，可以通过 SET optimizer_enable_dynamicindexonlyscan = on 启用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时支持在追加优化（AO）表和 PAX 表上进行仅索引扫描，通过尽可能避免块访问来实现更快的查询执行。这提高了在传统索引扫描效率低下的场景中的性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;改进的索引扫描性能和灵活性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时支持倒序索引扫描，用于带有 ORDER BY ... DESC 的查询，当存在相反顺序的 B-tree 索引时消除显式排序的需要。此优化减少了资源使用并提高了性能，特别是对于 top-N 和分页查询。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;GPORCA 优化器支持使用数组比较谓词（如 col IN (...) 或 col = ANY(array)）触发位图索引扫描，包括哈希索引。这通过启用更高效的多值匹配来提高大数据集上的查询性能。优化器根据成本估算自动选择位图扫描路径。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;GPORCA 优化器现在在计算仅索引扫描成本时考虑 INCLUDE 列的宽度，优先选择返回较少未使用列的较窄索引。这改进了在多个覆盖索引可用时的计划选择。成本模型还通过改进 relallvisible 在仅索引扫描成本计算中的使用来更准确地估算 I/O。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;BRIN 索引增强&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;为 AO/CO 表重新设计 BRIN 索引内部结构，用更高效的链式模型替换 UPPER 页面结构。这显著减少了空索引的磁盘空间使用，并通过避免不必要的页面访问来提高性能。新设计更好地处理 AO/CO 表的独特布局，同时保持正确性和兼容性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;AO/CO 表上的 BRIN 索引现在支持使用 brin_summarize_range() 汇总特定的逻辑堆块范围，在索引维护和测试期间实现更精确的控制。此增强还增加了对涉及中止行的场景的改进覆盖，提高了边缘情况下的健壮性和正确性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;支持在使用 GPORCA 优化器时使用 ScalarArrayOp 限定符（例如 col = ANY(array)）为 B-tree 索引生成 IndexScan 计划。此增强使 ORCA 与规划器的行为保持一致，并允许更高效地执行数组比较查询，只要谓词列是多列索引中的第一个键。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;视图和物化视图&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;通过避免完整查询执行来提高 REFRESH MATERIALIZED VIEW WITH NO DATA 的性能。该命令现在表现得像 TRUNCATE，显著减少执行时间，同时保持对 Segment 的正确分发。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;连接&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时支持左连接剪枝，允许在查询优化期间消除不必要的左连接。这适用于查询仅使用外表列且连接条件完全覆盖内表的唯一键或主键的情况。这可以带来更高效的查询计划。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时支持使用 Hash Full Join 策略进行 FULL JOIN。这种方法避免了连接键的排序并减少了数据重分布，使其适合大数据集或非对齐分布键上的连接。所有 FULL JOIN 查询现在都使用 Hash Full Join。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;GPORCA 优化器现在在使用左或右外连接进行多路自连接时，当连接键对称时避免不必要的数据重分布。此优化通过识别此类连接保持数据共置来改进性能，消除了冗余的运动操作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;GPORCA 优化器不再对 NOT IN 查询（左反半连接）的广播计划进行惩罚，无论 optimizer_penalize_broadcast_threshold 设置如何。此更改通过启用并行执行而不是将大表集中在 Coordinator 节点上来提高性能并避免潜在的 OOM 问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;函数和聚合&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时支持中间聚合，使包含 DISTINCT 聚合和常规聚合的查询能够更高效地执行。这确保使用 AGGSPLIT 正确处理聚合阶段。此外，ORCA 通过使用带有限制的索引扫描而不是带常规聚合的全表扫描，为 MIN() 和 MAX() 函数引入了优化。此优化还支持索引列上的 IS NULL 和 IS NOT NULL 条件，显著提高了适用查询的性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在使用 GPORCA 优化器时，为包含 DISTINCT 聚合的查询启用更多 HashAggregate 计划替代方案。通过生成避免将 DISTINCT 函数放在基于哈希的节点中的两阶段聚合计划，ORCA 确保与执行器的兼容性并扩展了支持的查询计划范围。此改进增强了分组查询的优化选择。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;支持使用 GROUP BY CUBE 的查询，在查询计划中启用多维分组集。这扩展了分析查询能力。请注意，由于生成的计划替代方案数量较多，CUBE 查询的优化时间可能较长。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;预处理&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;内联包含外部引用的公共表表达式（CTE），允许成功规划和解释此类查询。以前，由于处理带外部引用的共享扫描的限制，这些查询会回退到遗留规划器。此更改提高了兼容性，并使 ORCA 能够优化更广泛的基于 CTE 的查询。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;当内部子查询包含集合返回函数时，不再将 IN 查询重写为 EXISTS。这防止了以前可能导致执行错误的无效查询转换。此更改确保正确处理像 a IN (SELECT generate_series(1, a)) 这样的查询。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;优化和性能增强&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;动态表&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;2.0.0 引入动态表，这是一项新功能，支持自动计划刷新查询结果。动态表类似于物化视图，但专为需要最新数据的方案而设计，例如实时分析、湖仓架构和自动化 ETL 管道。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;支持从基表、外部表或物化视图创建动态表。用户可以使用标准 cron 表达式定义刷新间隔，确保数据保持最新状态，无需人工干预。更多详情，可参考官方文档&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(https://cloudberry.apache.org/docs/performance/use-dynamic-tables/)。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;计划提示&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时支持扫描类型和连接行估计的计划提示，使用户能够使用 pg_hint_plan 风格的注释来指导查询规划。支持的扫描提示包括 SeqScan、IndexScan、BitmapScan 及其否定，而行提示允许用户指定预期的连接基数。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 优化器配置中现在需要 plan hint 字段。此更改简化了内部解析逻辑，并确保优化器配置文件的一致处理。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时支持左和右外连接的连接顺序提示，将现有的提示框架扩展到内连接之外。此增强使用户能够在涉及外连接的复杂查询中更精确地指导优化器的连接顺序，改进计划控制并可能提高执行性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;ORCA 增强&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时支持查询计划中的表别名，使 EXPLAIN 输出更具描述性并与用户定义的查询语法保持一致。此外，ORCA 添加了对查询参数的支持，包括在函数和预编译语句中使用的参数，实现与参数化工作负载和动态 SQL 执行的更好兼容性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时，支持为启用了行级安全性（RLS）的表生成查询计划。安全策略在计划生成期间强制执行，确保每个用户只能看到允许的行。对于带有子链接、外部表或 INSERT 和 UPDATE 语句的 RLS 查询，ORCA 仍然回退到规划器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;当 FROM 子句中的函数使用 WITH ORDINALITY 时，GPORCA 优化器现在优雅地回退到 Postgres 规划器，该功能目前不受支持。回退包括一个清晰的错误消息，指示不支持的功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时，支持将带有 BETWEEN 谓词的过滤器与常量过滤器组合下推，实现更有效的谓词传播。此增强可以减少连接期间处理的行数，在适用情况下提高查询性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时，当子查询表达式可哈希且不包含外部引用时，支持哈希子计划。此增强可以通过减少适用情况下的执行时间来显著提高查询性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持在 Coordinator 或 Segment 上执行 mpp_execute='ANY' 的外部表，具体取决于成本。这允许为外部数据源提供更灵活和高效的执行计划。引入了一个新的"Universal"分布类型来支持此行为，类似于 generate_series() 的处理方式。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持在查询包含 gp_segment_id 过滤器时对随机分布表进行直接分发。此增强通过将执行直接路由到相关 Segment 来提高查询性能，减少跨集群的不必要数据处理。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持生成带有 ProjectSet 节点的计划，使包含目标列表中集合返回函数（SRF）的查询能够正确执行。此增强防止回退到遗留规划器，并确保与 PostgreSQL 11+ 行为的兼容性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持 FIELDSELECT 节点，这使其能够优化涉及复合数据类型的更广泛查询。以前，此类查询会回退到遗留规划器。此增强提高了兼容性并减少了不必要的规划器回退。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在只为 UNION ALL 查询中使用的列派生统计信息，而不是输入表中的所有输出列。此优化减少了不必要的计算，并可以提高大型查询的规划性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;更新日志和 EXPLAIN 输出中的命名，将优化器称为"GPORCA"和"基于 Postgres 的规划器"，以提高清晰度和一致性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过仅为查询输出中使用的列派生统计信息来优化 ORCA 的 Union All 性能。这减少了不必要的计算，并提高了具有未使用列的查询的规划效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;事务管理&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;锁管理&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;更新逻辑以在计算最旧的目录 Xmin 时忽略无效的槽，减少死锁风险并提高事务并发性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;对 AO/CO 表提前执行可序列化隔离检查，确保更严格的一致性保证并减少隔离冲突的可能性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过确保 Coordinator 在向 Segment 发送同步查询之前获取 pg_index 上的 AccessShareLock，增强索引创建过程以防止死锁，从而对齐 indcheckxmin 并避免 GDD 无法解决的冲突。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;事务的性能和可靠性&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;避免在新扩展的 Segment 上重放检查点中的 DTX 信息，防止恢复期间可能出现的不一致。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;添加 gp_stat_progress_dtx_recovery 以更好地观察分布式事务恢复进度。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;改进 DTX 协议命令调度错误的错误报告，使其更容易诊断和解决问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;允许 Coordinator 上的 utility 模式跳过 SELECT 锁定子句的锁升级，提高维护操作的效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;存储&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#ffa900"&gt;PAX 表格式&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Cloudberry 2.0.0 引入了对 PAX 存储格式的支持，这是一种结合了基于行和基于列的存储优势的混合存储方法。PAX 旨在为数据写入和分析查询提供高性能，使其非常适合 OLAP 工作负载和大规模数据分析。有关详细信息，请参阅官方文档（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;https://cloudberry.apache.org/docs/operate-with-data/pax-table-format/）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;AO/CO 表增强&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过添加扫描进度报告优化了 AO 表上的 CREATE INDEX 操作，提高了索引创建效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;将连接相关变量声明为"volatile"，确保在 PG_TRY 和 PG_CATCH 块之间正确处理，遵循 PostgreSQL 在事务控制中异常安全变量使用的最佳实践。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;分区&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;扩展了 ORCA 的规划能力，支持外部分区，实现了对外部和非外部分区混合表的优化查询执行。该实现引入了新的外部分区逻辑和物理操作符，支持静态和动态分区消除，并与任何兼容的外部数据包装器集成，提高了外部数据查询的性能和灵活性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;优化了多级分区表中叶分区的分析，避免对中间分区进行不必要的重采样。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在使用 GPORCA 优化器时，支持涉及重复敏感随机运动的计划的动态分区消除（DPE）。这允许分区选择器通过 Segment 过滤器，实现更高效的查询计划并减少扫描的分区数量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;为哈希右连接添加了动态分区消除，提高了分区表上连接操作的效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 ORCA 中支持布尔静态分区修剪，增强了查询优化期间分区修剪的效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过在分区修剪期间加入分区键操作符族检查，增强了 ORCA 的查询规划，优化数据分布和分区扫描，确保通过将谓词操作符与分布或分区键的操作符族对齐来正确触发运动和分区扫描，解决了缺少运动、错误的直接调度和无效分区修剪的问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 ExecFindPartition 中缓存最后找到的分区，提高了重复分区查找的性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;使 ORCA 能够从叶分区派生动态表扫描基数，通过将其内部表示更改为双精度浮点数来解决处理日期和时间相关数据类型的限制。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;增强了 DPv2 算法，在分区选择器中包含分布规范信息，提高了分布式查询执行的效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;引入了一个新的非复制分布规范，以优化数据库处理中的连接操作。通过放宽当内表是通用分布时对外表的单例分布的要求，旨在减少不必要的数据收集和重复敏感运动，从而生成更高效的执行计划。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;内存管理&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;实现自定义分配器，使 ORCA 能够使用标准 C++ 容器，解决堆分配管理问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过使多个方法变为静态并添加断言来确保指针安全，重构了 ORCA 的内存池。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;优化 ORCA 中 IMDId 对象的序列化，使其变为延迟序列化，通过推迟序列化直到必要时来提高性能。当将对象加载到 relcache 中以及涉及大型和宽分区表时，改进了优化时间。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;确保 GetDatabasePath 返回的字符串始终使用 pfree 释放，防止内存泄漏。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;为 pg_buffercache 启用 MPP（大规模并行处理）支持并默认构建它，使缓冲区缓存管理在分布式环境中更具可扩展性和效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;引入 pg_buffercache_summary() 以提供缓冲区缓存活动的高级概览。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;元数据和访问方法&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;允许为存储转换定义锁模式和 reloptions，提供对表和索引访问的更多控制。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;支持在切换存储模型时指定 reloptions，允许在不同存储格式之间无缝转换。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 CreateStmt 中引入新的结构成员，以指示语句的来源，指定它是否是从 GP 风格的经典分区语法生成的。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;为 pg_attribute_encoding 和 pg_appendonly 添加 syscache 查找，提高元数据访问的性能和效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 pg_aggregate 中引入新的目录条目，用于存储聚合的复制安全信息，允许用户通过 CREATE AGGREGATE 命令中的可选 repsafe 参数将特定聚合标记为在复制切片上执行是安全的。这有助于通过避免在大型复制数据集上进行不必要的广播来优化性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过允许将 ALLOW_CONNECTIONS 和 IS_TEMPLATE 等选项分发到 Segment，增强 ALTER DATABASE 命令的分派，确保目录更改在所有地方都得到反映。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;数据加载和外部表&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;外部表增强&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在交换或附加外部表时添加了更清晰的限制和警告。可写外部表现在不能用作分区，并且在没有验证的情况下附加可读外部表现在会触发警告，而不是要求无操作子句。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;禁用 ALTER EXTERNAL TABLE 的 SET DISTRIBUTED REPLICATED 以防止滥用并确保一致性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;Foreign data wrapper&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;改进了 gpfdist 外部表的性能和稳定性。添加了 TCP keepalive 支持以提高读取可靠性，并增加了默认缓冲区大小以增强可写外部表的写入吞吐量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在会回退到规划器来处理使用 greenplum_fdw 的外部分区查询，防止因不兼容的执行行为导致的崩溃。使用 greenplum_fdw 的非分区外部表查询仍然由 ORCA 支持。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;高可用和高可靠&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;备份与灾难恢复&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过减少冗余目录扫描，改进了处理多个 .ready 文件时的归档器性能。这一更改加快了 WAL 归档速度，特别是在 archive_command 失败且累积了许多文件时。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;gp_create_restore_point() 只能在 Coordinator 节点上执行。在 Segment 节点上调用此函数将导致错误。该函数返回一个结构化记录值，包括恢复点名称和 LSN，您可以通过运行 SELECT * FROM gp_create_restore_point() 直接查看。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;WAL&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过将 Coordinator 特定的跟踪机制限制在仅 Coordinator 上，改进了 WAL 复制管理。这一更改简化了主 Segment 行为，并使复制实践在 Segment 之间更加一致。对用户没有功能更改，但有助于减少 WAL 保留逻辑中不必要的复杂性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;增强了 WAL 保留逻辑，以提高使用 pg_rewind 进行增量恢复的可靠性。物理复制槽现在保留 WAL 文件直到最后一个公共检查点，减少了恢复期间丢失 WAL 的风险。这一更改还简化了底层逻辑，并增加了 WAL 回收的测试覆盖。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;将 WAL 复制连接切换到使用标准 libpq 协议而不是旧的内部协议。这提高了复制行为的兼容性和可靠性。还修复了测试失败并改进了复制连接的错误处理。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;复制与无镜像集群&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过在复制槽失效时设置持久 WalSndError 改进了复制错误报告。这确保了 gp_stat_replication 中准确的错误可见性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;安全&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;数据库操作&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;REFRESH MATERIALIZED VIEW CONCURRENTLY 在正确的安全上下文中运行所有内部操作，以防止潜在的权限提升。此更改通过将操作限制在适当的权限级别来确保更安全的执行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过将新的 aoseg 和 aocsseg 元组的元组冻结行为与其他目录操作对齐，改进了内部处理。此更改增强了与上游 PostgreSQL 实践的一致性，并消除了对 CatalogTupleFrozenInsert 的需求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;系统进程&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;孤立文件检查现在在安全验证期间排除空闲会话。这可以防止当服务的持久连接处于活动状态时出现不必要的错误，使检测过程能够成功完成。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在后端信号处理程序中添加安全检查，以确保信号由正确的进程处理。这可以防止子进程意外访问共享内存，并提高整体进程隔离和稳定性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过防止通过 system() 生成的子进程调用 proc_exit() 来提高进程安全性。这避免了共享内存结构的潜在损坏，并确保只有父进程执行清理操作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;当使用 gp_resource_manager='group-v2' 时，移除了对 cpu.pressure 的权限检查。这可以防止在禁用 PSI 的系统上启动失败，而不会影响资源管理功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;权限管理&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过拒绝包含潜在不安全字符（如 $、' 或 \）的扩展模式或所有者替换来加强安全性。这可以防止扩展脚本中的 SQL 注入，并保护某些非捆绑扩展中的权限提升。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;现在创建或分配角色到 system_group 资源组会导致错误，因为该组仅保留供内部系统进程使用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;恢复了对设置 gp_resource_group_bypass GUC 需要超级用户权限的限制。这允许像 GPCC 这样的应用程序更容易地运行，同时仍然限制资源影响。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;现在不允许更改外部服务器或包装器的 mpp_execute 选项，以防止外部表分布策略的不一致。更改这些选项以前可能导致过时的缓存计划和错误的查询执行。此更新通过仅在适当时强制执行缓存失效来确保计划正确性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;pgcrypto&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;添加了对 pgcrypto 中 FIPS 模式的支持，由 GUC 控制。这允许 HashData Lightning 在链接支持的 FIPS 启用 OpenSSL 版本时在 FIPS 兼容环境中运行。某些密码在此模式下被禁用，以符合 FIPS 要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;pgcrypto 现在允许在操作系统或环境未预先启用 FIPS 的系统上启用 FIPS 模式。此更改消除了对 FIPS_mode() 检查的依赖，通过数据库提供更多管理 FIPS 合规性的灵活性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;资源管理&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;资源组管理&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;将 memory_limit 参数重命名为 memory_quota 在 CREATE/ALTER RESOURCE GROUP 中以澄清其含义和单位。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;添加了一个新的系统视图 gp_toolkit.gp_resgroup_status_per_segment 以监控每个 Segment 上的资源组内存使用情况。此视图帮助数据库管理员在启用基于资源组的资源管理时跟踪实时 vmem 消耗（以 MB 为单位）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;当内存使用达到 Vmem 或资源组限制时，改进了日志记录行为。系统现在直接将日志消息打印到 stderr 以避免在分配失败期间出现堆栈溢出错误。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;当使用 group-v2 资源管理器时，移除了对 cpu.pressure 的不必要权限检查。这可以防止在 PSI 未启用的系统上启动失败，从而提高跨 Linux 发行版的兼容性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;日志和监控&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;为 GDD 后端添加了额外的日志消息，以帮助调查内存相关问题。这些日志提供了更好的可见性，以了解在高内存使用场景下的后端行为。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;添加了一个日志忽略规则，用于减少测试输出中的噪声。这有助于避免在涉及连接终止的测试中出现不必要的差异。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 ResCheckSelfDeadlock() 中添加了更多详细的日志记录。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在资源队列日志中记录队列 ID 和门户 ID。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在释放资源队列锁时转储更多信息，以帮助排查和监控。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;使用 ERROR 进行调度器活性检查。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;改进了调度连接活性检查的日志记录，以提高连接失败期间的清晰度。日志现在包括更多基于套接字状态和系统错误的准确错误消息。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;平台兼容性和构建&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;通过修复序列化逻辑中的类型处理，改进了 gp_sparse_vector 与 ARM 平台的兼容性。这确保了不同架构之间的一致行为。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 Windows 上添加了对 sigaction() 的支持，以与其它平台对齐信号处理行为。这减少了平台特定的差异并提高了代码一致性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在 ORCA 中更新了 ACL 模式类型，以与解析器的定义对齐，确保一致的类型使用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;系统视图和统计&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;改进了对具有常量加法或减法等保持 NDV 的投影列的连接基数估计。这允许优化器使用底层的列直方图进行更准确的估计，从而提高具有标量投影的连接条件的查询质量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在处理元数据填充脚本（MDPs）时，提高了 ORCA 中频率和 NDV 值的精度。此更改确保了 MDP 和实时数据库查询之间的一致行为，减少了由于四舍五入小值而导致的差异。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在在计算重分布运动时考虑空值偏斜，提高了涉及许多空值的查询的规划准确性。这有助于避免由于数据在 Segment 之间不均匀分布而导致的性能问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持扩展统计，以提高具有相关列的查询的基数估计。这允许优化器使用实际数据驱动的相关因子，而不是依赖任意的 GUC 设置，从而提高查询计划的准确性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;引入 gp_log_backend_memory_contexts 以记录跨 Segment 的内容 ID 的内存上下文。这增强了可观测性并有助于诊断分布式查询中的内存问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持涉及不同时间相关数据类型（如日期和时间戳）的谓词的统计推导。这提高了查询的准确性和性能，用于比较混合时间类型。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;Autostats 现在使用 SKIP LOCKED 进行 ANALYZE 操作，以避免在锁定时阻塞，减少死锁的风险并提高可预测性。此行为默认启用，可以通过 gp_autostats_lock_wait GUC 控制。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ORCA 现在支持 STATS_EXT_NDISTINCT 扩展统计，用于估计相关列上的基数。这提高了使用 GROUP BY 或 DISTINCT 的查询的准确性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;网络连接&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;将 gp_reject_internal_tcp_connection 标记为过时，以提高内部 QD-到入口 DB 连接的可靠性。这些通过 TCP/IP 的连接现在默认被视为已认证，防止了由于 pg_hba.conf 设置导致的认证错误。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;工具和实用程序&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;analyzedb&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;analyzedb 现在在分析列表中包含的物化视图，进一步提高分析后的性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;gpexpand&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;gpexpand 新增集群健康检查，确保所有 Segment 在继续之前都处于稳定状态。这防止了错误的端口分配并避免了节点不稳定时扩展期间的潜在问题&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;gp_toolkit&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;为 gp_toolkit 扩展添加了更新路径到版本 1.6。此更新将 memory_limit 列重命名为 memory_quota 在 gp_resgroup_config 视图中以提高清晰度。用户可以通过 ALTER EXTENSION gp_toolkit UPDATE TO '1.6' 应用更新。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;致谢贡献者&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;在此，我们向为 Cloudberry 2.0.0 发布做出贡献的开发者们表示感谢： @weinan003, @fanfuxiaoran, @gfphoenix78, @avamingli, @zhangwenchao-123, @reshke, @jiaqizho, @gongxun0928, @zhangyue-hashdata, @roseduan, @leborchuk, @foreyes, @edespino, @yihong0618, @tuhaihe, @MisterRaindrop, @HuSen8891, @songdongxiaoa2, @robozmey, @Mulily0513, @tenderwg, @chipitsine, @Tao-Ma, @x4m, @hyongtao-code, @yjhjstz&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;源码下载与安装&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;我们推荐从官网下载页面获取源码：https://cloudberry.apache.org/releases/，并按照文档进行编译安装：https://cloudberry.apache.org/docs/deployment/。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;源码下载完成后，可参照官网提示对签名、SHA512 校验和进行检查，确保下载文件完整或未被修改。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;升级或从 GP 迁移到 Cloudberry&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;要从早期 Cloudberry 1.x 版本升级到 Cloudberry 2.0.0，推荐使用社区工具 cbcopy 从现有集群导出数据，并将其导入新部署的 2.0.0 集群。此导出导入方法可以确保数据一致性并支持干净的迁移到最新版本，可以查看文档（&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;https://cloudberry.apache.org/docs/sys-admin/migration-and-upgrade/)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;了解使用方法。如果你计划从 Greenplum 迁移到 Cloudberry，也推荐使用 cbcopy。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;后续我们也将推出 Cloudberry 2.0.0 系列博文，帮助大家进一步了解 Cloudberry 2.0.0 关键功能与背后故事。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370444</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370444</guid>
      <pubDate>Fri, 05 Sep 2025 06:03:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>微语 0.9.5 发布，智能客服 Agent</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;企业级多租户团队协作工具，免费开源 N 件套：企业 IM、在线客服、企业知识库/帮助文档、客户之声、工单系统、AI 对话、工作流、呼叫中心、视频客服、开放平台。&lt;/p&gt; 
&lt;h2&gt;语言&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/README.md"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/README.zh.md"&gt;中文&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="weiyu" src="https://oscimg.oschina.net/oscnet//db378cd7adeeb655195db023adbe220d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;管理端&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="chat" src="https://oscimg.oschina.net/oscnet//7f901b33fa1b5200e2ee149f3b629774.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;多渠道&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="channel" src="https://oscimg.oschina.net/oscnet//8631947e48cdaaa927b1ce955b50d129.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;客服端&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="agent" src="https://oscimg.oschina.net/oscnet//35651a14aac1c569aa0df1c6ba1836a1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/team/readme.zh.md"&gt;企业 IM&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;局域网即时通讯&lt;/li&gt; 
 &lt;li&gt;企业成员管理&lt;/li&gt; 
 &lt;li&gt;聊天记录监控&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/service/readme.zh.md"&gt;全渠道客服&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;多渠道接入&lt;/li&gt; 
 &lt;li&gt;人工客服&lt;/li&gt; 
 &lt;li&gt;客服 Agent 智能体，对接自有数据，自动执行操作&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/kbase/readme.zh.md"&gt;知识库&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;对接大模型&lt;/li&gt; 
 &lt;li&gt;自定义知识库&lt;/li&gt; 
 &lt;li&gt;Function Calling&lt;/li&gt; 
 &lt;li&gt;Mcp&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/ticket/readme.zh.md"&gt;工单系统&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;工单管理&lt;/li&gt; 
 &lt;li&gt;工单 SLA 管理&lt;/li&gt; 
 &lt;li&gt;工单统计和报表&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/ai/readme.zh.md"&gt;AI Agent&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ollama/DeepSeek/ZhipuAI/...&lt;/li&gt; 
 &lt;li&gt;智能体&lt;/li&gt; 
 &lt;li&gt;工作流&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/core/readme.workflow.md"&gt;工作流&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;自定义表单&lt;/li&gt; 
 &lt;li&gt;自定义流程&lt;/li&gt; 
 &lt;li&gt;工单流程可视化&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/voc/readme.zh.md"&gt;客户之声&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;意见反馈&lt;/li&gt; 
 &lt;li&gt;服务投诉&lt;/li&gt; 
 &lt;li&gt;问卷调查&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/freeswitch/readme.zh.md"&gt;呼叫中心&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 FreeSwitch 的专业呼叫平台&lt;/li&gt; 
 &lt;li&gt;支持来电弹屏、自动分配、通话录音&lt;/li&gt; 
 &lt;li&gt;数据统计，语音与文字服务无缝集成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/webrtc/readme.zh.md"&gt;视频客服&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 WebRTC 技术的高清视频通话&lt;/li&gt; 
 &lt;li&gt;支持一键视频对话与屏幕共享&lt;/li&gt; 
 &lt;li&gt;适用于需要直观展示的服务场景&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/readme.md"&gt;开放平台&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;提供完整的 RESTful API 接口和 SDK 工具包&lt;/li&gt; 
 &lt;li&gt;支持与第三方系统无缝集成，实现数据互通&lt;/li&gt; 
 &lt;li&gt;多语言 SDK 支持，简化开发集成流程&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.weiyuai.cn%2Fdocs%2Fzh-CN%2Fdocs%2Fdeploy%2Fdocker" target="_blank"&gt;Docker 部署&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.weiyuai.cn%2Fdocs%2Fzh-CN%2Fdocs%2Fdeploy%2Fbaota" target="_blank"&gt;宝塔面板部署&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.weiyuai.cn%2Fdocs%2Fzh-CN%2Fdocs%2Fdeploy%2Fsource" target="_blank"&gt;源码启动&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;演示&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;本地预览&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 请将 127.0.0.1 替换为你的服务器 ip&lt;/em&gt;
http://127.0.0.1:9003/
&lt;em&gt;# 开放端口：9003, 9885&lt;/em&gt;
默认用户名: admin@email.com
默认密码: admin&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370442/weiyu-im-0-9-5-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370442/weiyu-im-0-9-5-released</guid>
      <pubDate>Fri, 05 Sep 2025 05:57:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>pgAdmin 4 v9.8 发布，PostgreSQL 开源图形化管理工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;pgAdmin 是 PostgreSQL 领先的开源图形化管理工具。pgAdmin 4 旨在满足新手和有经验的 Postgres 用户的需求，提供强大的图形界面，简化了数据库对象的创建、维护和使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#212529"&gt;pgAdmin 4 v9.8 现已发布，&lt;/span&gt;&lt;span style="color:#000000"&gt;此版本修复了 10 个错误并新增了一些功能。一些更新亮点包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong style="color:#333333"&gt;&lt;span style="color:#333333"&gt;Features&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加&amp;nbsp;truncating foreign tables 的菜单项。&lt;/li&gt; 
 &lt;li&gt;添加 Debian Trixie 作为 pgAdmin 的支持平台。&lt;/li&gt; 
 &lt;li&gt;允许用户配置与安全相关的 gunicorn 参数。&lt;/li&gt; 
 &lt;li&gt;将默认 pgAdmin 主题更改为 System。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;Bugs/Housekeeping&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 OAuth 2.0 身份验证流程中的 Cross-Origin Opener Policy (COOP) 漏洞 (CVE-2025-9636)。&lt;/li&gt; 
 &lt;li&gt;移除已弃用的 BrowserFS 功能。&lt;/li&gt; 
 &lt;li&gt;将 Paramiko 固定到 3.5.1 版本以修复最新版本中引入的 DSSKey 错误。&lt;/li&gt; 
 &lt;li&gt;修复了升级到 v9.7 时 pgAdmin 配置迁移失败的问题。&lt;/li&gt; 
 &lt;li&gt;修复了在 macOS 上使用 Option 组合键时编辑器快捷键失败的问题，该问题源于 macOS 将 Option+Key 组合视为独立键输入。&lt;/li&gt; 
 &lt;li&gt;修复了使用外部数据库进行配置时无法在全新安装中创建 pgAdmin 配置数据库的问题。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;详情&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;可&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fabout%2Fnews%2Fpgadmin-4-v98-released-3129%2F" target="_blank"&gt;查看更新公告&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370438/pgadmin-4-v98-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370438/pgadmin-4-v98-released</guid>
      <pubDate>Fri, 05 Sep 2025 05:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Habitica v5.40.1 发布，习惯养成游戏</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Habitica v5.40.1 现已发布。Habitica 是一个习惯养成及生产力应用，让你 「游戏人生」。游戏里的奖惩措施能激励用户完成任务，还有一个强大的互动社区为完成任务提供好建议，帮助达成目标，变得健康、勤奋与快乐。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;此版本更新内容如下：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;API&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chore：Locale files 已更新&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Client&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复：尝试归档事件时将分析加载移至按需步骤，以便用户记录可用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复：纠正几个非致命警告，使页面加载时 JS 控制枱保持&amp;nbsp;clean&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Repo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复：更正 Take This 迁移脚本中弃用的&lt;code&gt;update&lt;/code&gt;函数用法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHabitRPG%2Fhabitica%2Freleases%2Ftag%2Fv5.40.1" target="_blank"&gt;https://github.com/HabitRPG/habitica/releases/tag/v5.40.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370421/habitica-5-40-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370421/habitica-5-40-1-released</guid>
      <pubDate>Fri, 05 Sep 2025 03:48:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>【AI 报表】JimuReport 积木报表 v2.1.3 版本发布，免费的可视化报表和大屏</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h3&gt;项目介绍&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;积木报表，是一款免费的数据可视化报表，含报表、打印、大屏和仪表盘，像搭建积木一样完全在线设计！功能涵盖：复杂报表、打印设计、图表报表、门户设计、大屏设计等！ 分两大模块：JimuReport 侧重传统复杂报表和打印、 JimuBI 侧重数据大屏和仪表盘可视化设计！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;JimuReport 采用 Web 版报表设计器，类 Excel 操作风格，通过拖拽完成报表设计，所见即所得。&lt;/li&gt; 
 &lt;li&gt;领先的企业级 Web 报表，支持各种复杂报表，专注于解决企业报表难题。&lt;/li&gt; 
 &lt;li&gt;JimuBI 是专注于数字孪生和数据可视化的工具，旨在通过直观、动态且视觉吸引力强的形式呈现实时业务数据，尤其擅长打造，交互式大屏和仪表盘&lt;/li&gt; 
 &lt;li&gt;JimuBI 业内唯一实现全场景覆盖：同时支持大屏（炫酷动态）、仪表盘（专业分析）、门户（交互式业务看板）、移动端（随时随地查看），真正实现 "一次开发，多端适配"。&lt;/li&gt; 
 &lt;li&gt;大屏采用类 word 风格，可以随意拖动组件，想怎么设计怎么设计，可以像百度和阿里一样，设计出炫酷大屏！&lt;/li&gt; 
 &lt;li&gt;秉承 "简单、易用、专业" 的产品理念，极大的降低报表开发难度、缩短开发周期、节省成本.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;当前版本&lt;/strong&gt;：v2.1.3 | 2025-09-05&lt;/p&gt; 
&lt;h4&gt;升级日志&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;本期亮点是积木 BI 支持高德地图、新增点击文本支持弹窗组件、新增高级导航切换组件；填报报表支持 JS 增强、AI 生成报表更加易用！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;集成依赖&lt;/h4&gt; 
&lt;p&gt;积木报表&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;springboot2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt; &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-spring-boot-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.3&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#6a737d"&gt;&amp;lt;!-- mongo、redis 和文件数据集支持包，按需引入 --&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-nosql-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.0&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#6a737d"&gt;&amp;lt;!-- 后台导出接口 Echart 图表支持包，按需引入 --&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-echarts-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.1&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;springboot3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt; &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-spring-boot3-starter-fastjson2&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.3&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#6a737d"&gt;&amp;lt;!-- mongo、redis 和文件数据集支持包，按需引入 --&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-nosql-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.0&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#6a737d"&gt;&amp;lt;!-- 后台导出接口 Echart 图表支持包，按需引入 --&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-echarts-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.1&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;积木 BI 依赖&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;springboot2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt; &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimubi-spring-boot-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.3&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;springboot3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimubi-spring-boot3-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.3&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;升级日志&lt;/p&gt; 
&lt;p&gt;积木报表&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;填报报表支持 JS 增强，支持提交做校验或组件联动&lt;/li&gt; 
 &lt;li&gt;AI 功能更换图标和位置，提供提示词选择 (使用更方便)&lt;/li&gt; 
 &lt;li&gt;开放报表模板上传功能，提供一些报表模板，便于用户快速实现报表设计&lt;/li&gt; 
 &lt;li&gt;PDF 导出字体支持楷体、黑体、微软雅黑&lt;/li&gt; 
 &lt;li&gt;[issues/4031] 定时导出自动运行时报错&lt;/li&gt; 
 &lt;li&gt;[issues/3955] SQL 数据集界面可以可以固定一下表头吗，操作有点不太友好&lt;/li&gt; 
 &lt;li&gt;大数据 Excel 导出失败，进行优化&lt;/li&gt; 
 &lt;li&gt;校验导入的文件后缀格式，提示成功与失败&lt;/li&gt; 
 &lt;li&gt;积木报表首次进来没有选中文件夹，数据数空的&lt;/li&gt; 
 &lt;li&gt;SUM 求和表达式报错：对数据没有影响，判断有误，当前 msg 不是 Method code too large 修改提示语&lt;/li&gt; 
 &lt;li&gt;当数据为 oracle 时，导出日志插入报错&lt;/li&gt; 
 &lt;li&gt;在一张报表中，同时两个分组报空指针&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;积木 BI&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增高德地图组件 (可实时展示焦点)&lt;/li&gt; 
 &lt;li&gt;新增点击文本支持弹窗组件（支持选择合并组件）&lt;/li&gt; 
 &lt;li&gt;新增高级导航切换组件（支持选择合并组件、定时切换、自定义图标）&lt;/li&gt; 
 &lt;li&gt;解决 redis 不兼容问题（redis 集成非必须）&lt;/li&gt; 
 &lt;li&gt;文本组件支持渐变&lt;/li&gt; 
 &lt;li&gt;新增隐藏全部图层及组合加上索引值&lt;/li&gt; 
 &lt;li&gt;表单组件增加配置&lt;/li&gt; 
 &lt;li&gt;组合内元素，修改位置和大小&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Issues 处理&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;积木报表存在 Postgre SQL JDBC RCE 漏洞・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4010" target="_blank"&gt;Issue #4010&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQL injection vulnerability on /drag/comp/queryCompTreeSync ·&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4043" target="_blank"&gt;Issue #4043&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;富文本中的图片不显示・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3985" target="_blank"&gt;Issue #3985&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;定时导出 ICON 表达式判断错误・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4047" target="_blank"&gt;Issue #4047&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;填报数据源设置时，选 java 处理器，自定义类实现 ISubmitHandler 接口，接口中的 doSubmit 方法无法满足业务需求，需要入参中带入报表 id・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4032" target="_blank"&gt;Issue #4032&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SQL 数据集界面可以可以固定一下表头吗，操作有点不太友好。・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3955" target="_blank"&gt;Issue #3955&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;导出 PDF 后，字体都变成了宋体・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3959" target="_blank"&gt;Issue #3959&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SUM 求和表达式报错・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4066" target="_blank"&gt;Issue #4066&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;定时导出自动运行时报错・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4031" target="_blank"&gt;Issue #4031&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;sqlServer，字段排序失效・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F4034" target="_blank"&gt;Issue #4034&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;1.9.3 导出 pdf 缺失了字体・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3682" target="_blank"&gt;Issue #3682&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;积木报表导出的 pdf 打印颜色非常淡且线框粗细无效・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJimuReport%2Fissues%2F3202" target="_blank"&gt;Issue #3202&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本期 BI 高级效果展示&lt;/p&gt; 
&lt;p&gt;一、点击详情时，弹出另外一个大屏列表页&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-628509c6a8475cfde894696d17968fd2333.png" referrerpolicy="no-referrer"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e516218c6ee7474153e3c8bc355a6d93b99.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;二、5 分钟自动切换下一个，炫酷的动态切换效果&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a02975ac2842f05d64d63865af29b7003ed.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;三、通过高德地图实现，结合业务数据，展示车辆实时位置&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-eb73f595417712f2a51ddea4755fca3da67.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;代码下载&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJimuReport" target="_blank"&gt;https://github.com/jeecgboot/JimuReport&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;技术文档&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;快速集成 ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.jimureport.com%2Fquick.html" target="_blank"&gt;https://help.jimureport.com/quick.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官方网站：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com" target="_blank"&gt;http://jimureport.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;报表示例：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2FreportDemo" target="_blank"&gt;http://jimureport.com/reportDemo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在线体验：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2Flogin" target="_blank"&gt;http://jimureport.com/login&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;为什么选择 JimuReport?&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;永久免费，支持各种复杂报表，并且傻瓜式在线设计，非常的智能，低代码时代，这个是你的首选！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用 SpringBoot 的脚手架项目，都可以快速集成&lt;/li&gt; 
 &lt;li&gt;Web 版设计器，类似于 excel 操作风格，通过拖拽完成报表设计&lt;/li&gt; 
 &lt;li&gt;通过 SQL、API 等方式，将数据源与模板绑定。同时支持表达式，自动计算合计等功能，使计算工作量降低&lt;/li&gt; 
 &lt;li&gt;开发效率很高，傻瓜式在线报表设计，一分钟设计一个报表，又简单又强大&lt;/li&gt; 
 &lt;li&gt;支持 ECharts，目前支持 28 种图表，在线拖拽设计，支持 SQL 和 API 两种数据源&lt;/li&gt; 
 &lt;li&gt;支持分组、交叉，合计、表达式等复杂报表&lt;/li&gt; 
 &lt;li&gt;支持打印设计（支持套打、背景打印等）可设置打印边距、方向、页眉页脚等参数，一键快速打印，同时可实现套打，不动产证等精准、无缝打印&lt;/li&gt; 
 &lt;li&gt;可设计各种类型的单据、大屏，如出入库单、销售单、财务报表、合同、监控大屏、旅游数据大屏等&lt;/li&gt; 
 &lt;li&gt;大屏设计器支持几十种图表样式，可自由拼接、组合，设计炫酷大屏&lt;/li&gt; 
 &lt;li&gt;数据可视化，DataV、帆软的开源替代方案，比帆软拥有更好的体验和更简单的使用方式&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2Flogin" target="_blank"&gt;积木报表官网&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可以在线免费制作报表和大屏，手机号一键注册，便可永久使用。大屏采用类 word 风格，可以随意拖动组件，想怎么设计怎么设计，可以像百度和阿里一样，设计出炫酷的可视化大屏！重要的是：免费！免费！免费！&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;报表设计效果&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20240401133921.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222441.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222444.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimue8a083fbd6622d4.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222828.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222434.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222831.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222824.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0139eb90f2d255152aa69d3b37fcc85e4a2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ded4831b7e25638f9ba6033a1f4ba87474f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f7c1a3a4cd6673038727ba49c3ee97e216b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;积木 BI 工作台&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cf33c432856d377b5211ab96f86cef1e1e9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-259b12f9049aa8d46a750d73345b85155dc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//22cfcaa884924a7c93f14f4df74c9a96.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//9371e85231c0c28d669b0cf6e21b8cb0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//fd57c521baa9f7385f215b718de44629.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2bc8ad4c873b7994ffb0e2927a42aff3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fad98d42b2cf92f92a903c9cff7579f18ec.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-1bbc177c8397400c3e79bd90fd03b04e615.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;大屏设计效果&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-402a6034124474bfef8dfc5b4b2bac1ce5c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-6f7ba2e2ebbeea0d203db8d69fd87644c9f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ee8d34f318da466b8a6070a6e3111d12ce7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-826f13c88f23c24ff218687f57f03d802a8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-61dfc52c383f86a4055e20d030503bef93c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3aabd991c6c5af43f35b204d3ec94caf468.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3b75fde569ab528d8607596e147b8bb7d5e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3b8d034341d0190156d63484ce09a863c9c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370414/jimureport-2-1-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370414/jimureport-2-1-3-released</guid>
      <pubDate>Fri, 05 Sep 2025 03:34:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>PostgreSQL 18 RC 1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;PostgreSQL 18 的第一个候选版本现已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fabout%2Fnews%2Fpostgresql-18-rc-1-released-3130%2F" target="_blank"&gt;发布&lt;/a&gt;。作为候选版本，PostgreSQL 18 RC 1 将与 PostgreSQL 18 的初始版本基本相同，但在 PostgreSQL 18 正式发布之前可能会进行一些修复。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span style="color:#000000"&gt;PostgreSQL 18 的正式发布计划日期为 2025 年 9 月 25 日。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;自 18 Beta 3 以来的变化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span style="color:#000000"&gt;在 Beta 3 阶段，PostgreSQL 18 修复了一些错误。其中包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用&lt;code&gt;vacuumdb --missing-stats-only&lt;/code&gt;时跳过清理虚拟生成的列。&lt;/li&gt; 
 &lt;li&gt;添加了关于在&lt;code&gt;pg_upgrade&lt;/code&gt;使用后何时重新索引全文搜索和&lt;code&gt;pg_trgm&lt;/code&gt;索引的建议。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:left"&gt;&lt;span style="color:#000000"&gt;有关修复的详细列表，可访问&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.postgresql.org%2Fwiki%2FPostgreSQL_18_Open_Items%23resolved_before_18rc1" target="_blank"&gt;未解决的问题&lt;/a&gt;&amp;nbsp;页面。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;要从 PostgreSQL 早期版本升级到 PostgreSQL 18 RC 1，需要使用主版本升级策略，例如&lt;code&gt;pg_upgrade&lt;/code&gt;或&amp;nbsp;&lt;code&gt;pg_dump&lt;/code&gt;/&amp;nbsp;&lt;code&gt;pg_restore&lt;/code&gt;。更多信息可访问文档中的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fdocs%2F18%2Fupgrading.html" target="_blank"&gt;升级&lt;/a&gt;部分：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.postgresql.org%2Fdocs%2F18%2Fupgrading.html" target="_blank"&gt;https://www.postgresql.org/docs/18/upgrading.html&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370402/postgresql-18-rc-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370402/postgresql-18-rc-1-released</guid>
      <pubDate>Fri, 05 Sep 2025 02:57:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Karmada v1.15 版本发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Karmada 是开放的多云多集群容器编排引擎，旨在帮助用户在多云环境下部署和运维业务应用。凭借兼容 Kubernetes 原生 API 的能力，Karmada 可以平滑迁移单集群工作负载，并且仍可保持与 Kubernetes 周边生态工具链协同。&lt;/p&gt; 
&lt;p&gt;Karmada v1.15 版本现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKlWl1_okeMDCiYj07x5NcA" target="_blank"&gt;发布&lt;/a&gt;，本版本包含下列新增特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多模板工作负载的资源精确感知&lt;/li&gt; 
 &lt;li&gt;集群级故障迁移功能增强&lt;/li&gt; 
 &lt;li&gt;结构化日志&lt;/li&gt; 
 &lt;li&gt;Karmada 控制器和调度器性能显著提升&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;多模板工作负载的资源精确感知&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;Karmada 利用资源解释器获取工作负载的副本数和资源请求，并据此计算工作负载所需资源总量，从而实现资源感知调度，联邦配额管理等高阶能力。这种机制在传统的单模板工作负载中表现良好。然而，许多 AI 大数据应用的工作负载 &amp;nbsp;CRD（如 FlinkDeployments，PyTorchJob 和 RayJob 等）包含多个 Pod 模板或组件，每个组件都有独特的资源需求。由于资源解释器仅能处理单个模板的资源请求，无法准确反映不同模板间的差异，导致多模板工作负载的资源计算不够精确。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;在这个版本中，Karmada 强化了对多模板工作负载的资源感知能力，通过扩展资源解释器，Karmada 现在可以获取同一工作负载不同模板的副本数和资源请求，确保数据的精确性。这一改进也为多模板工作负载的联邦配额管理提供了更加可靠和精细的数据支持。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;假设你部署了一个 FlinkDeployment，其资源相关配置如下：&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;spec:
&amp;nbsp; jobManager:
&amp;nbsp; &amp;nbsp; replicas:&amp;nbsp;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;1&lt;/span&gt;&lt;/span&gt;
&amp;nbsp; &amp;nbsp; resource:
&amp;nbsp; &amp;nbsp; &amp;nbsp; cpu:&lt;span style="color:#df7974"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;1&lt;/span&gt;&lt;/span&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; memory:&amp;nbsp;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;1024&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#df7974"&gt;m&lt;/span&gt;
&amp;nbsp; taskManager:
&amp;nbsp; &amp;nbsp; replicas:&lt;span style="color:#df7974"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;1&lt;/span&gt;&lt;/span&gt;
&amp;nbsp; &amp;nbsp; resource:
&amp;nbsp; &amp;nbsp; &amp;nbsp; cpu:&amp;nbsp;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;2&lt;/span&gt;&lt;/span&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; memory:&amp;nbsp;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#df7974"&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;通过 ResourceBinding，你可以查看资源解释器解析出的 FlinkDeployment 各个模板的副本数以及资源请求。&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;spec:
&amp;nbsp; components:
&amp;nbsp; - name:&amp;nbsp;&lt;span style="color:#87ee8c"&gt;jobmanager&lt;/span&gt;
&amp;nbsp; &amp;nbsp; replicaRequirements:
&amp;nbsp; &amp;nbsp; &amp;nbsp; resourceRequest:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cpu:&amp;nbsp;&lt;span style="color:#d69d85"&gt;"1"&lt;/span&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memory:&amp;nbsp;&lt;span style="color:#d69d85"&gt;"1.024"&lt;/span&gt;
&amp;nbsp; &amp;nbsp; replicas:&amp;nbsp;&lt;span style="color:#b8d7a3"&gt;1&lt;/span&gt;
&amp;nbsp; - name:&amp;nbsp;&lt;span style="color:#87ee8c"&gt;taskmanager&lt;/span&gt;
&amp;nbsp; &amp;nbsp; replicaRequirements:
&amp;nbsp; &amp;nbsp; &amp;nbsp; resourceRequest:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; cpu:&amp;nbsp;&lt;span style="color:#d69d85"&gt;"2"&lt;/span&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memory:&amp;nbsp;&lt;span style="color:#d69d85"&gt;"2.048"&lt;/span&gt;
&amp;nbsp; &amp;nbsp; replicas:&amp;nbsp;&lt;span style="color:#b8d7a3"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;此时，FederatedResourceQuota 计算的 FlinkDeployment 占用的资源量为：&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&amp;nbsp;status:
&amp;nbsp; &amp;nbsp; overallUsed:
&amp;nbsp; &amp;nbsp; &amp;nbsp; cpu:&amp;nbsp;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#df7974"&gt;"3"&lt;/span&gt;&lt;/span&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; memory:&lt;span style="color:#df7974"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#b8d7a3"&gt;&lt;span style="color:#df7974"&gt;3072&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#df7974"&gt;m&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;注意：该特性目前处于 Alpha 阶段，需要启用 MultiplePodTemplatesScheduling 特性开关才能使用。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;随着多模板工作负载在云原生环境中的广泛应用，Karmada 致力于对其提供更强有力的支持。在接下来的版本中，将基于此功能进一步加强对多模板工作负载的调度支持，提供更加细粒度的资源感知调度——敬请期待更多更新！&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;strong&gt;集群级故障迁移功能增强&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;在之前的版本中，Karmada 提供了基本的集群级故障迁移能力，能够通过自定义的故障条件触发集群级别的应用迁移。为了满足有状态应用在集群故障迁移过程中保留其运行状态的需求，Karmada 在 v1.15 版本支持了集群故障迁移的应用状态中继机制。对于大数据处理应用（例如 Flink），利用此能力可以从故障前的 checkpoint 重新启动，无缝恢复到重启前的数据处理状态，从而避免数据重复处理。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;社区在&amp;nbsp;&lt;/span&gt;&lt;code&gt;PropagationPolicy/ClusterPropagationPolicy&lt;/code&gt;&lt;span style="color:#000000"&gt;&amp;nbsp;API 中的&amp;nbsp;&lt;code&gt;.spec.failover.cluster&lt;/code&gt;&amp;nbsp;下引入了一个新的&amp;nbsp;&lt;code&gt;StatePreservation&lt;/code&gt;&amp;nbsp;字段， 用于定义有状态应用在故障迁移期间保留和恢复状态数据的策略。结合此策略，当应用从一个故障集群迁移到另一个集群时，能够从原始资源配置中提取关键数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;状态保留策略&amp;nbsp;&lt;code&gt;StatePreservation&lt;/code&gt;&amp;nbsp;包含了一系列&amp;nbsp;&lt;code&gt;StatePreservationRule&lt;/code&gt;&amp;nbsp;配置，通过&amp;nbsp;&lt;code&gt;JSONPath&lt;/code&gt;&amp;nbsp;来指定需要保留的状态数据片段，并利用关联的&amp;nbsp;&lt;code&gt;AliasLabelName&lt;/code&gt;&amp;nbsp;将数据传递到迁移后的集群。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;以 Flink 应用为例，在 Flink 应用中，&lt;code&gt;jobID&lt;/code&gt;&amp;nbsp;是一个唯一的标识符，用于区分和管理不同的 Flink 作业（jobs）。当集群发生故障时，Flink 应用可以利用&amp;nbsp;&lt;code&gt;jobID&lt;/code&gt;&amp;nbsp;来恢复故障前作业的状态，从故障点处继续执行。具体的配置和步骤如下：&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;apiVersion:&amp;nbsp;&lt;span style="color:#87ee8c"&gt;policy.karmada.io/v1alpha1&lt;/span&gt;
kind:&amp;nbsp;&lt;span style="color:#87ee8c"&gt;PropagationPolicy&lt;/span&gt;
metadata:
&amp;nbsp; name:&lt;span style="color:#87ee8c"&gt;&amp;nbsp;foo&lt;/span&gt;
spec:
&amp;nbsp; #...
&amp;nbsp; failover:
&amp;nbsp; &amp;nbsp; cluster:
&amp;nbsp; &amp;nbsp; &amp;nbsp; purgeMode: Directly
&amp;nbsp; &amp;nbsp; &amp;nbsp; statePreservation:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rules:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - aliasLabelName:&amp;nbsp;&lt;span style="color:#87ee8c"&gt;application.karmada.io/cluster-failover-jobid&lt;/span&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; jsonPath:&lt;span style="color:#87ee8c"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#87ee8c"&gt;"{ .jobStatus.jobID }"&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;ol style="list-style-type:decimal; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p&gt;迁移前，Karmada 控制器将按照用户配置的路径提取 job ID。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;迁移时，Karmada 控制器将提取的 job ID 以 label 的形式注入到 Flink 应用配置中，比如&amp;nbsp;&lt;code&gt;application.karmada.io/cluster-failover-jobid : &amp;lt;jobID&amp;gt;&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;运行在成员集群的 Kyverno 拦截 Flink 应用创建请求，并根据&amp;nbsp;&lt;code&gt;jobID&lt;/code&gt;&amp;nbsp; 获取该 job 的 checkpoint 数据存储路径，比如 &amp;nbsp;&lt;code&gt;/&amp;lt;shared-path&amp;gt;/&amp;lt;job-namespace&amp;gt;/&amp;lt;jobId&amp;gt;/checkpoints/xxx&lt;/code&gt;，然后配置&amp;nbsp;&lt;code&gt;initialSavepointPath&lt;/code&gt;&amp;nbsp;指示从 save point 启动。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Flink 应用根据&amp;nbsp;&lt;code&gt;initialSavepointPath&lt;/code&gt;&amp;nbsp;下的 checkpoint 数据启动，从而继承迁移前保存的最终状态。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;该能力广泛适用于能够基于某个 save point 启动的有状态应用程序，这些应用均可参考上述流程实现集群级故障迁移的状态中继。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;注意：该特性目前处于 Alpha 阶段，需要启用 StatefulFailoverInjection 特性开关才能使用。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong style="color:#000000"&gt;功能约束：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol style="list-style-type:decimal; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p&gt;应用必须限定在单个集群中运行；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;迁移清理策略（PurgeMode）限定为&amp;nbsp;&lt;code&gt;Directly&lt;/code&gt;，即需要确保故障应用在旧集群上删除之后再在新集群中恢复应用，确保数据一致性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;&lt;strong&gt;结构化日志&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;日志是系统运行过程中记录事件、状态和行为的关键工具，广泛用于故障排查、性能监控和安全审计。Karmada 组件提供丰富的运行日志，帮助用户快速定位问题并回溯执行场景。在先前版本中，Karmada 仅支持非结构化的文本日志，难以被高效解析与查询，限制了其在现代化观测体系中的集成能力。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;Karmada 在 1.15 版本引入了结构化日志支持，可通过&amp;nbsp;&lt;code&gt;--logging-format=json&lt;/code&gt;&amp;nbsp;启动参数配置 JSON 格式输出。结构化日志示例如下：&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;{
&amp;nbsp;&lt;span style="color:#ffffff"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;span style="color:#87ee8c"&gt;ts&lt;/span&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;:「日志时间戳」,&lt;/span&gt;
&lt;span style="color:#ffffff"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;span style="color:#87ee8c"&gt;logger&lt;/span&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;:&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"cluster_status_controller"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;,&lt;/span&gt;
&lt;span style="color:#ffffff"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;span style="color:#87ee8c"&gt;level&lt;/span&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;:&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"info"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;,&lt;/span&gt;
&lt;span style="color:#ffffff"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;span style="color:#87ee8c"&gt;msg&lt;/span&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;:&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"Syncing cluster status"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;,&lt;/span&gt;
&lt;span style="color:#ffffff"&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;span style="color:#87ee8c"&gt;clusterName&lt;/span&gt;&lt;span style="color:#ffffff"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffffff"&gt;:&lt;/span&gt;&lt;span style="color:#d69d85"&gt;&lt;span style="color:#ffffff"&gt;"member1"&lt;/span&gt;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;结构化日志的引入显著提升了日志的可用性与可观测性：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong style="color:#000000"&gt;高效集成&lt;/strong&gt;：可无缝对接 Elastic、Loki、Splunk 等主流日志系统，无需依赖复杂的正则表达式或日志解析器。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong style="color:#000000"&gt;高效查询&lt;/strong&gt;：结构化字段支持快速检索与分析，显著提升故障排查效率。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong style="color:#000000"&gt;可观察性增强&lt;/strong&gt;：关键上下文信息（如集群名、日志级别）以结构化字段呈现，便于跨组件、跨时间关联事件，实现精准问题定位。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong style="color:#000000"&gt;可维护性提升&lt;/strong&gt;：结构化日志使开发者和运维人员在系统演进过程中更易于维护、解析和调整日志格式，保障日志体系的长期稳定与一致性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Karmada 控制器和调度器性能显著提升&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;在本次版本中，Karmada 性能优化团队继续致力于提升 Karmada 关键组件的性能，在控制器和调度器方面取得了显著进展。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong style="color:#000000"&gt;控制器方面&lt;/strong&gt;，通过引入优先级队列，控制器能够在重启或切主后优先响应用户触发的资源变更，从而显著缩短服务重启和故障切换过程中的停机时间。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;测试环境包含 5,000 个 Deployment、2,500 个 Policy 以及 5,000 个 ResourceBinding。在控制器重启且工作队列中仍有大量待处理事件的情况下，更新 Deployment 和 Policy。测试结果显示，&lt;strong style="color:#000000"&gt;控制器能够立即响应并优先处理这些更新事件，验证了该优化的有效性&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;注意：该特性目前处于 Alpha 阶段，需要启用 ControllerPriorityQueue 特性开关才能使用。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong style="color:#000000"&gt;调度器方面&lt;/strong&gt;，通过减少调度过程中的冗余计算，降低远程调用请求次数，Karmada 调度器的调度效率得到了显著提升。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;测试记录了在开启精确调度组件 karmada-scheduler-estimator 情况下，调度 5,000 个 ResourceBinding 所用的时间，结果如下：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p&gt;调度器吞吐量 QPS 从约 15 提升至约 22，性能提升达 46%；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;gRPC 请求次数从约 10,000 次减少至约 5,000 次，降幅达 50%。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;这些测试证明，在 1.15 版本中，Karmada 控制器和调度器的性能得到了极大提升。未来，将继续对控制器和调度器进行系统性的性能优化。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370398/karmada-1-15-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370398/karmada-1-15-released</guid>
      <pubDate>Fri, 05 Sep 2025 02:27:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🚀 VTJ.PRO 再次突破！攻克物料编译 UMD 难题，官方 uni-ui 物料正式上线！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;🔥 前端圈又有重磅消息！经过数月攻关，&lt;strong&gt;VTJ.PRO 团队宣布已经成功解决 「uniapp UI 库物料编译 UMD」 的技术瓶颈&lt;/strong&gt;，并正式上线，官方&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;uni-ui&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件物料。这意味着 ——&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;uniapp 全栈开发从此进入真正的 AI + 低代码时代！&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;❌ 过去的痛点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;组件生态碎片化：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;uniapp 开发者常用 uView、Vant、NutUI-Uniapp、uni-ui 等 UI 库，但在多端编译（H5 / 微信小程序 / App）时，经常遇到，组件无法渲染、Props 不兼容、事件丢失，等崩溃问题。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UMD 打包困难：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;很多 UI 库发布时直接暴露源码或 ES Module，&lt;strong&gt;无法天然适配 UMD 格式&lt;/strong&gt;，导致想在低代码设计器里「拖拽使用」成了一场噩梦。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;物料化成本高：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;开发者要么手动写适配层，要么放弃复用 → 这让低代码平台在 uniapp 生态里「一直卡着喉咙」。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;正如不少开发者在社区里吐槽的那样：「&lt;strong&gt;H5 端能跑，小程序端就崩；npm 装得上，WXML 就报错&lt;/strong&gt;」 —— 这几乎成了制约 uniapp 企业级开发的顽疾。&lt;/p&gt; 
&lt;h2&gt;✅ VTJ.PRO 的技术突破&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;这一次，VTJ.PRO 的底层引擎团队拿出了「杀手锏」方案：&lt;br&gt; &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-3b4de6101747e73bcd56015f8d58af15368.png" width="965" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;1. 统一 UMD 预编译&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;首次攻克 uniapp UI 库的 ESM → UMD 转换难题，将核心组件集体打包成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dist/uni-ui.umd.js&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;H5 端通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;window.UniUI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;挂载，小程序端则自动编译生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;wxcomponents/&lt;/code&gt;，实现双端一致性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. 智能 Props / 事件适配层&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI 助手「自动解析」组件源码，生成标准化的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;物料描述（props、slots、event）&lt;/strong&gt;，避免了开发者苦苦写&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;shim&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;从此你在 VTJ.PRO 的设计器里，就能和用 Element Plus 一样，直接拖拽使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;uni-ui&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. 多端运行时优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;针对 Canvas / Scroll / Flex 等组件差异，平台内置运行时补丁，保证&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;H5、小程序、App 一致渲染&lt;/strong&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎉 带来的价值&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;前端效率提升 5 倍：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;以前手写 200 行&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;uni-ui&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;复杂页面，现在只需 20 秒拖拽搞定。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;跨端适配无压力：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;一个页面设计稿，同时跑通&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;H5 + 微信小程序 + App&lt;/strong&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;源码级可控：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;生成结果仍然是，纯净&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Vue3/uniapp&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;代码，可以随时二次开发。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;官方 uni-ui 物料库：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;即日起所有开发者都可以一键使用，不再走弯路。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📢 为什么这次重要？&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;这不仅仅是一个 UI 库的适配，而是意味着 ——&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;VTJ.PRO 成为首个真正打通 Vue3 低代码 + uniapp 跨端开发，的平台！&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;从企业级管理后台，到小程序商城，再到混合 App，&lt;strong&gt;统一物料生态 = 降本增效的核心武器&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;🚀 行动起来&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;立即体验官方 uni-ui 物料： 👉&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2F" target="_blank"&gt;点击进入 VTJ.PRO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;和我们一起构建更强大的 lowcode + uniapp 生态！&lt;br&gt; &amp;nbsp; &lt;p&gt;&lt;img height="1055" src="https://oscimg.oschina.net/oscnet/up-a427b540d3b3860c01de1e02b565fad7445.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;📌 一句话总结：&lt;br&gt; &lt;strong&gt;VTJ.PRO 攻克了 uniapp UI 库物料编译 UMD 的「硬骨头」，&lt;code&gt;uni-ui&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;正式成为官方物料，从此跨端低代码开发真正落地！&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;💥&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/370384</link>
      <guid isPermaLink="false">https://www.oschina.net/news/370384</guid>
      <pubDate>Fri, 05 Sep 2025 01:35:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
  </channel>
</rss>
