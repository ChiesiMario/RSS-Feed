<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 14 May 2025 05:26:11 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Spring AI 1.0.0 RC1 发布，计划 5 月 20 日 GA</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Spring AI 1.0.0 RC1 现已正式发布，这标志着稳定版发布前的最后一批重大变更、错误修复和新功能。&lt;/p&gt; 
&lt;p&gt;GA 版本计划于 2025 年 5 月 20 日发布，距离正式版发布仅剩一周时间。在此期间，项目团队将专注于改进文档并解决所有已报告的错误。为了庆祝此次发布，其还在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsuno.com%2Fplaylist%2F321b61a4-201d-4404-9335-bf909250b0e3" target="_blank"&gt;AI 生成的音乐播放列表&lt;/a&gt;中添加了一首新歌。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;Key Breaking Changes&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;Chat Client and Advisors&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在&lt;code&gt;VectorStoreChatMemoryAdvisor&lt;/code&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;CHAT_MEMORY_RETRIEVE_SIZE_KEY&lt;/code&gt;→&lt;code&gt;TOP_K&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;DEFAULT_CHAT_MEMORY_RESPONSE_SIZE&lt;/code&gt;&amp;nbsp;(100) →&amp;nbsp;&lt;code&gt;DEFAULT_TOP_K&lt;/code&gt;&amp;nbsp;(20)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;CHAT_MEMORY_CONVERSATION_ID_KEY&lt;/code&gt;→&amp;nbsp;&lt;code&gt;CONVERSATION_ID&lt;/code&gt;（移至&lt;code&gt;ChatMemory&lt;/code&gt;界面）&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;Update imports to&lt;/span&gt;：&lt;code&gt;org.springframework.ai.chat.memory.ChatMemory.CONVERSATION_ID&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;Self-contained Templates in Advisors&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;QuestionAnswerAdvisor&lt;/code&gt;:&amp;nbsp;&lt;code&gt;query&lt;/code&gt;,&amp;nbsp;&lt;code&gt;question_answer_context&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PromptChatMemoryAdvisor&lt;/code&gt;:&amp;nbsp;&lt;code&gt;instructions&lt;/code&gt;,&amp;nbsp;&lt;code&gt;memory&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;VectorStoreChatMemoryAdvisor&lt;/code&gt;:&amp;nbsp;&lt;code&gt;instructions&lt;/code&gt;,&amp;nbsp;&lt;code&gt;long_term_memory&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;聊天记忆库命名标准化&lt;/h2&gt; 
&lt;p&gt;在 1.0.0-RC1 版本中，通过在整个代码库中添加&lt;code&gt;repository&lt;/code&gt;后缀，标准化了聊天内存组件的命名模式。此更改会影响 Cassandra、JDBC 和 Neo4j 实现：&lt;/p&gt; 
&lt;h3&gt;Artifact IDs&lt;/h3&gt; 
&lt;p&gt;所有与内存相关的工件现在都遵循一致的模式：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;spring-ai-model-chat-memory-*&lt;/code&gt;&amp;nbsp;→&amp;nbsp;&lt;code&gt;spring-ai-model-chat-memory-repository-*&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spring-ai-autoconfigure-model-chat-memory-*&lt;/code&gt;&amp;nbsp;→&amp;nbsp;&lt;code&gt;spring-ai-autoconfigure-model-chat-memory-repository-*&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;spring-ai-starter-model-chat-memory-*&lt;/code&gt;&amp;nbsp;→&amp;nbsp;&lt;code&gt;spring-ai-starter-model-chat-memory-repository-*&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Java Packages&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;包路径现在包括&lt;code&gt;.repository.&lt;/code&gt;段&lt;/li&gt; 
 &lt;li&gt;例如：&lt;code&gt;org.springframework.ai.chat.memory.jdbc&lt;/code&gt;→&lt;code&gt;org.springframework.ai.chat.memory.repository.jdbc&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Configuration Classes&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;主自动配置类现在使用&lt;code&gt;Repository&lt;/code&gt;后缀&lt;/li&gt; 
 &lt;li&gt;例如：&lt;code&gt;JdbcChatMemoryAutoConfiguration&lt;/code&gt;→&lt;code&gt;JdbcChatMemoryRepositoryAutoConfiguration&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Properties&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;配置属性从&lt;code&gt;spring.ai.chat.memory.&amp;lt;storage&amp;gt;...&lt;/code&gt;重命名为&lt;code&gt;spring.ai.chat.memory.repository.&amp;lt;storage&amp;gt;...&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;Observability Changes&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;从跟踪切换到日志记录&lt;/li&gt; 
 &lt;li&gt;属性重命名（例如&lt;code&gt;include-prompt&lt;/code&gt;→&amp;nbsp;&lt;code&gt;log-prompt&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;删除了 OTel SDK 依赖项&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;为了提供更简洁的 API，所有弃用功能均已移除。完整详情可参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2Fupgrade-notes.html%23upgrading-to-1-0-0-RC1" target="_blank"&gt;Spring AI 升级说明&lt;/a&gt;。&lt;/p&gt; 
&lt;h1&gt;新功能&lt;/h1&gt; 
&lt;h2&gt;模型增强&lt;/h2&gt; 
&lt;h3&gt;DeepSeek Integration&lt;/h3&gt; 
&lt;p&gt;添加了专用的 DeepSeek 模型支持，包括核心类和启动器，以适应其与 OpenAI API 的差异。&lt;/p&gt; 
&lt;h3&gt;Azure OpenAI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;AzureOpenAiResponseFormat 中的构建器模式支持 JSON schema&lt;/li&gt; 
 &lt;li&gt;Entra ID 身份管理，简化身份验证&lt;/li&gt; 
 &lt;li&gt;Stream usage 支持，以实现高效的响应处理&lt;/li&gt; 
 &lt;li&gt;AzureOpenAiChatOptions 中的 reasoning_effort 参数&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OpenAI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAiApi 和 OpenAiChatModel builders 的 Mutate 功能&lt;/li&gt; 
 &lt;li&gt;用于改进搜索集成的 Web 搜索注释&lt;/li&gt; 
 &lt;li&gt;OpenAiImageModel 中的可配置图像路径&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vertex AI Gemini&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Parameter warnings 和 penalty 选项可提高输出质量&lt;/li&gt; 
 &lt;li&gt;jsonToStruct 中的 JSON 数组支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RAG 和文档处理&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;RAG Advisor 中的 DocumentPostProcessors 用于复杂的转换管道&lt;/li&gt; 
 &lt;li&gt;具有向后兼容性的可自定义文本属性名称&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;工具调用&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;tool callbacks 中的通用参数类型支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;内存管理&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;JdbcChatMemory 中灵活的数据库支持&lt;/li&gt; 
 &lt;li&gt;通过 CassandraChatMemoryRepository 支持 Cassandra&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;可观察性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;增强内容观察的日志记录&lt;/li&gt; 
 &lt;li&gt;Bedrock Titan Embedding 模型的可观察性支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;发布公告：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F05%2F13%2Fspring-ai-1-0-0-RC1-released" target="_blank"&gt;https://spring.io/blog/2025/05/13/spring-ai-1-0-0-RC1-released&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349797/spring-ai-1-0-0-rc1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349797/spring-ai-1-0-0-rc1-released</guid>
      <pubDate>Sun, 11 May 2025 03:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Qt AI Assistant 0.91 发布，支持 DeepSeek v3 和 Sonnet 3.7</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Qt AI Assistant 是一款 AI 驱动的开发助手，可在 Qt Creator 中运行，支持多种大型语言模型（LLM）。&lt;/p&gt; 
&lt;p&gt;Qt AI Assistant 近日发布了 0.91 版本，新增 DeepSeek v3 和 Sonnet 3.7 支持，这两款大语言模型均适用于代码补全与提示词场景，新版本还增强了/fix 命令功能。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;应用修复代码&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;现可通过/fix 指令将大语言模型（LLM）建议的代码修改方案直接应用到代码编辑器。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0514/110225_GZun_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;支持 DeepSeek v3&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此版本增加了 DeepSeek v3 支持。该模型可同时用于代码补全与提示生成。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在 QML100FIM 基准测试中，DeepSeek v3 以 87% 的 QML 代码补全成功率刷新纪录。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0514/110319_upqE_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;表格：QML100FIM 代码补全性能- 2025 年 5 月&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据 QML100 基准测试显示，其提示式代码生成成功率达 57%。需特别说明的是，该测试表明底层模型 DeepSeek v3 的表现优于专用推理模型 DeepSeek R1（后者提示式代码生成成功率仅 54%）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Claude 3.7 Sonnet 支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在保持 QML 编码性能不变的基础上，新增对 Sonnet 3.7 的代码补全与提示支持。&lt;/p&gt; 
&lt;p&gt;Claude 3.7 Sonnet 以 66% 的成功率稳居提示式代码补全榜首。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0514/110342_QVCf_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;QML100 提示式编码性能- 2025 年 5 月&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Claude 3.7 Sonnet 代码补全成功率达 76%，但与其前代产品类似，偶尔出现代码缩进问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;升级指引&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;已安装 Qt AI Assistant 的用户：请在扩展功能视图中点击更新按钮（需提前升级至 Qt Creator 16.0.1）。&lt;/p&gt; 
&lt;p&gt;Qt AI Assistant 新用户：需在扩展视图中启用外部资源库（external repositories）访问权限以获取 Qt AI Assistant 等新扩展。&lt;/p&gt; 
&lt;p&gt;其他改进包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 ARM 架构 Linux 实验性支持&lt;/li&gt; 
 &lt;li&gt;通用消息窗口显示 OpenAI GPT 的 LLM 错误代码&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349791/qt-ai-assistant-v0-91-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349791/qt-ai-assistant-v0-91-released</guid>
      <pubDate>Sun, 11 May 2025 03:05:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>2025 视频协作工具全景解析：技术跃迁与场景重构</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、技术演进：从功能工具到智能生态&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;2025 年视频协作软件的核心竞争力已从基础功能升级为技术生态的构建。以分秒帧为例，其音视频生产协作系统，可帮助创作者在云端构建工作流，让跨地域、跨终端、跨团队的协作组可以在统一的安全平台上管理所有媒体资源、任务、反馈信息，从而更高效地创作并交付优质内容。而 Frame.io V4 通过与徕卡、佳能等相机厂商合作，实现 C2C（Camera to Cloud）技术，摄影师拍摄的 8K 素材可实时同步到云端，好莱坞团队用其将素材整理时间从 4 小时压缩至 15 分钟。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;在架构层面，云原生微服务成为主流。而聚连会议的分布式系统架构实现故障节点无感知修复，保障千人会议的 99.9% 可用性。AI 技术的深度融合更催生了新物种——A 梦 AI 软件通过智能素材匹配系统，能根据脚本自动推荐适配的音乐、字幕和转场特效，自媒体创作者用其 10 分钟即可生成爆款短视频。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、场景重构：从单一协作到垂直深耕&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;2025 年的视频协作呈现行业深度定制化特征，以下为典型场景解析：&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;影视工业化生产&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;技术突破：分秒帧与北京某市级融媒体机构合作，实现 4K 素材云端协作，突发新闻报道时效提升 50%。其 AI 敏感内容审核可自动检测地图错误、人脸遮挡等问题，规避政策风险。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;工具组合：Frame.io V4 的智能文件夹支持按项目阶段自动分类素材，搭配 Premiere Pro 的 AI 剪辑推荐，使影视粗剪效率提升 30%。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;教育与培训&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;创新应用：聚连会议的 AR 沉浸式课堂将教师人像与虚拟课件融合，学生参与度提升 40%。其 AI 学习报告可分析学生视频作业的薄弱知识点，教师周均节省 8 小时批改时间。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;安全合规：分秒帧通过教育行业数据安全认证，支持私有化部署，防止教学内容泄露，已服务中国大学 MOOC 等平台。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;跨国协作与会议&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;效率革命：Zoom 的 50+语言实时翻译和弱网优化技术，使其在跨国会议市场占有率达 65%。但需搭配分秒帧实现「会议讨论+内容审核」闭环。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;本土化方案：瞩目国际版的 5 万人研讨会模式支持投票、问卷等互动功能，国内企业用其替代 Zoom，节省 40% 会议成本。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、安全与合&lt;/strong&gt;&lt;strong&gt;规&lt;/strong&gt;&lt;strong&gt;：新竞争维度&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;2025 年视频协作的安全合规要求显著提升：&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;数据主权：AES-256 算法加密，T4 级别 IDC 机房；SSL/TLS 协议加密传输，2048 位 RSA 密钥；Apple FairPlay DRM，全链路视频流加密，确保用户数据安全无忧。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;内容安全：Adobe Premiere Pro 的 AI 内容凭证技术可嵌入不可篡改的元数据，确保影视素材的版权归属，已被 BBC 采用。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;行业标准：《远程音视频手机银行技术规范》的出台，推动金融行业视频协作向标准化发展，交通银行「云理财」用其将双录质检效率提升 70%。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、成本与性价比：分层市场策略&lt;/strong&gt;&lt;/p&gt; 
&lt;table border="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; color:#000000; font-family:&amp;quot;Helvetica Neue&amp;quot;,Helvetica,&amp;quot;PingFang SC&amp;quot;,微软雅黑,Tahoma,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:0px; orphans:2; padding:0px; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;类型&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;代表产品&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;核心优势&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;成本对比&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;专业协作层&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;分秒帧&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;逐帧批注+版本管理+行业合规&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;企业版 3999 元/年起（含 1TB 存储）&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;国际高端层&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;Frame.io&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;Adobe 生态+好莱坞级审片&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;25 美元/月/用户&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;轻量工具层&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;快剪辑&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;AI 写真+智能抠图+短视频模板&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;免费版功能全，无广告&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;垂直场景层&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;聚连会议&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;AR 沉浸式会议+分布式架构&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;企业版 2388 元/年（含 1000 人会议）&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;五、未来趋势：从工具到基础设施&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;AI 全面渗透：2025 年 90% 的视频协作工具将集成 AI，Frame.io 的素材智能推荐，AI 功能对效率提升的贡献率将达 40%。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;云原生架构普及：云原生微服务架构将成为主流，分秒帧、聚连会议等厂商通过弹性扩缩容，可支撑单集群百万并发，存储成本降低 60%。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;硬件协同深化：徕卡 SL3、佳能 C400 等相机的 C2C 功能，使素材从拍摄到云端的时间缩短至秒级，推动「拍摄即协作」的工作流变革。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;安全合规升级：数据本地化、内容防篡改等功能将成为企业采购的硬性指标，预计 2025 年安全合规相关支出占 IT 预算比例将达 15%。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;六、选型指南：按需求精准匹配&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;大型企业：分秒帧（协作）+Zoom（会议）+万彩动画大师（模板），覆盖全流程协作。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;跨国团队：Frame.io（剪辑）+瞩目国际版（会议），兼顾专业度与本地化。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;教育机构：聚连会议（课堂）+分秒帧（作业管理），实现教学闭环。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;个人创作者：快剪辑（AI）+剪映（模板），快速出片。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;通过以上分析可见，2025 年的视频协作已进入技术驱动场景创新的新阶段。企业需根据自身需求，在专业度、成本、安全合规等维度综合考量，选择「核心工具+垂直插件」的组合方案，方能在视频生产力革命中抢占先机。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349790</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349790</guid>
      <pubDate>Sun, 11 May 2025 03:03:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Apache Tomcat 11.0.7 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Apache Tomcat 11.0.7 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2F" target="_blank"&gt;发布&lt;/a&gt;，该版本针对 Jakarta EE 11。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;公告提醒称：Tomcat 10 及以后版本的用户应注意，作为 Java EE 向 Eclipse 基金会转移的一部分，Java EE 已从 Java EE 迁移到 Jakarta EE，因此所有已实施 API 的主包已从&lt;/span&gt;&lt;code&gt;javax.*&lt;/code&gt;&lt;span style="color:#000000"&gt;&amp;nbsp;变为&amp;nbsp;&lt;/span&gt;&lt;code&gt;jakarta.*&lt;/code&gt;&lt;span style="color:#000000"&gt;。这几乎肯定需要修改代码才能使应用程序从 Tomcat 9 及更早版本迁移到 Tomcat 10 及更高版本。为此，官方提供了一个&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Ftomcat-jakartaee-migration" target="_blank"&gt;迁移工具&lt;/a&gt;&lt;span style="color:#000000"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此版本中值得注意的变化有：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 rewrite valve 中处理可能的路径参数重写产生。&lt;/li&gt; 
 &lt;li&gt;允许在 PreResources、JarResources 和 PostResources 上设置 allowLinking。如果未明确设置，则该设置将从资源继承。&lt;/li&gt; 
 &lt;li&gt;通过 JSP servlet 参数 useNonstandardTagOptimizations 激活时，添加对 c:set 和 c:remove 标签的优化执行的支持。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;这些更改以及所有其他更改的完整详细信息均可在&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Ftomcat-11.0-doc%2Fchangelog.html%23Tomcat_11.0.7_%28markt%29" target="_blank"&gt;Tomcat 11 更改日志&lt;/a&gt;&amp;nbsp;&lt;span style="color:#000000"&gt;中找到。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftomcat.apache.org%2Fdownload-11.cgi" target="_blank"&gt;下载&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349789/tomcat-11-0-7-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349789/tomcat-11-0-7-released</guid>
      <pubDate>Sun, 11 May 2025 02:59:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Firefox 138.0.3 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Firefox 138.0.3 现已发布，具体更新内容如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fixed&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了查看使用 WebGL 的网站时可能发生的崩溃。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1961191" target="_blank"&gt;Bug 1961191&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了当某些 SVG 效果（例如模糊或阴影）应用于非常小的区域时浏览器可能反复崩溃的问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1924241" target="_blank"&gt;Bug 1924241&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在 Linux 上，修复了当 HDR 支持不可用时，Wayland 上的视频播放会出现 washed-out&amp;nbsp;的问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1961610" target="_blank"&gt;Bug 1961610&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 find-in-page 工具栏中的「Match Case」快捷键&lt;code&gt;Alt+C&lt;/code&gt;无法按预期切换复选框的问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1952611" target="_blank"&gt;Bug 1952611&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F138.0.3%2Freleasenotes%2F" target="_blank"&gt;https://www.mozilla.org/en-US/firefox/138.0.3/releasenotes/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349785/firefox-138-0-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349785/firefox-138-0-3-released</guid>
      <pubDate>Sun, 11 May 2025 02:48:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 对标字节的 Flowgram，Tinyflow v0.1.10 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="313" src="https://oscimg.oschina.net/oscnet//c980dc556b9a10113cc30892652f0596.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;Tinyflow&lt;/h1&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;Tinyflow 是一个轻量的 AI 智能体解决方案，她不是一个 」 产品 「，而是一个开发组件。 通过集成 Tinyflow，您可以使得任何的传统应用，具备 AI 智能体编排的能力。&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tinyflow 前端基于 Web Component 开发，因此支持 React、Vue、Angular、Svelte 等任何框架，当然也包括，原生的 HTML、CSS、JavaScript。&lt;/li&gt; 
 &lt;li&gt;后端支持 Java（不限制框架）、Python、Node.js 等语言。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tinyflow 和 Flowgram 对比&lt;/h2&gt; 
&lt;p&gt;1、Tinyflow 基于 Web Component 开发，支持 React、Vue、Angular、Svelte 以及原始 js。Flowgram 仅支持在 React 下使用。&lt;/p&gt; 
&lt;p&gt;2、Tinyflow 拥有前端编排组件、后端运行 SDK 整体解决方案，Flowgram 只有前端组件。&lt;/p&gt; 
&lt;p&gt;3、其他更多的能力细节对比，近期推出。&lt;/p&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;h3&gt;前端&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;tinyflow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ai&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ui&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; { Tinyflow } &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'tinyflow'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; tinyflow = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; Tinyflow({
    element: &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'#tinyflow'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,
    data: &lt;span style="color:#0086b3"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;JSON&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.parse(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'{}'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;),
    provider: {
        llm: &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; =&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; []
    }
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;参数含义：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;element：容器元素，可以是一个字符串，也可以是一个 DOM 元素。&lt;/li&gt; 
 &lt;li&gt;data：工作流的数据，是一个 JSON 对象。&lt;/li&gt; 
 &lt;li&gt;provider：数据提供者，目前支持 LLMs 的数据：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;tinyflow 提供了以下方法：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;tinyflow.getData()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;导出工作流的数据&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tinyflow.getOptions()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;获取初始化配置的参数&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;Vue3 支持：&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;tinyflow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ai&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;vue&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;React 支持：&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;tinyflow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ai&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;react&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;Java 后端&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;后端 java 主要用于&amp;nbsp;&lt;strong&gt;执行&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Tinyflow 设计出来的工作流，其开源地址为：&lt;a href="https://gitee.com/tinyflow-ai/tinyflow-java"&gt;https://gitee.com/tinyflow-ai/tinyflow-java&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;dev.tinyflow&lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;tinyflow-java-core&lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;1.0.6&lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#55cde3"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;其他后端&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;Nodejs 后端（正在开发中，暂未开放）：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;tinyflow&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ai&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;nodejs&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;Python 后端（正在开发中，暂未开放）：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;pip&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;install tinyflow-ai-python&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;源码下载&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee：&lt;a href="https://gitee.com/tinyflow-ai/tinyflow"&gt;https://gitee.com/tinyflow-ai/tinyflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftinyflow-ai%2Ftinyflow" target="_blank"&gt;https://github.com/tinyflow-ai/tinyflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;进一步了解 Tinyflow，可以移步文章&lt;a href="https://www.oschina.net/news/335641"&gt;《嘿，我开发了个性感的 AI 框架 Tinyflow，看看？》&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349776/tinyflow-ai-0-1-10-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349776/tinyflow-ai-0-1-10-released</guid>
      <pubDate>Sun, 11 May 2025 02:24:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>国产免费工作流引擎 star 6.5k，Warm-Flow 升级 1.7.2（新增案例和修复缺陷）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;主要更新内容&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;[feat] 开启流程实例，新增流程定义是否存在校验&lt;/li&gt; 
 &lt;li&gt;[feat] &lt;a href="https://gitee.com/dromara/warm-flow-test/blob/master/warm-flow-core-test/src/main/resources/contract_process.json"&gt;新增合同签订流程案例&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[feat] &lt;a href="https://gitee.com/dromara/warm-flow-test/blob/master/warm-flow-core-test/src/main/resources/procurement_steps.json"&gt;新增企业采购流程案例&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[update] mybatis-plus 逻辑删除，删除值和未删除值强制设置为 0 和 1&lt;/li&gt; 
 &lt;li&gt;[update] 合并流程变量方法改成 public 修饰&lt;/li&gt; 
 &lt;li&gt;[update] 如果没有网关，是驳回跳转线，跳转条件会默认加上&lt;code&gt;undefined@@|&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;[fix] 修复办理人列表中只有一个办理人时，删除按钮消失的问题&lt;/li&gt; 
 &lt;li&gt;[fix] 修复设计器办理人默认为「用户」问题&lt;/li&gt; 
 &lt;li&gt;[fix] 修复办理人列表名称回显报错问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;合同签订流程案例&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//191925fb8a93fbdcbf4a028479511693.png" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;企业采购流程案例&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//b04adc969e41c396f365fc21d31c1d04.png" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h2&gt;项目介绍&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dromara Warm-Flow 国产工作流引擎，其特点简洁轻量，五脏俱全，灵活扩展性强，是一个可通过 jar 引入设计器的工作流。&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持常见审批功能、监听器与流程变量、条件表达式、办理人表达式&lt;/li&gt; 
 &lt;li&gt;自带流程图、流程设计器、节点扩展属性&lt;/li&gt; 
 &lt;li&gt;支持常见的 orm 框架&lt;/li&gt; 
 &lt;li&gt;支持不同的数据库&lt;/li&gt; 
 &lt;li&gt;生态丰富可扩展，文档全面&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;功能思维导图&lt;/h2&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3256c31eeb2d8fea2f6f34ced49127ce.png" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h2&gt;设计器&lt;/h2&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//dee3e28e4977b7e62293889c4bf5c6cf.png" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h2&gt;流程图&lt;/h2&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//228d6b2e161503f1a372e0c2bbba9b90.png" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;h2&gt;演示地址&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.hhzai.top" target="_blank"&gt;http://www.hhzai.top&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;账号密码：admin/admin123&lt;/p&gt; 
&lt;h2&gt;官网&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwarm-flow.dromara.org" target="_blank"&gt;https://warm-flow.dromara.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Warm-Flow 视频&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1AWRGYEEVr%2F%3Fspm_id_from%3D333.1387.0.0%26vd_source%3D1be886ace16159801f6ed0106df215d9" target="_blank"&gt;Warm-Flow 初体验&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349775/warm-flow-1-7-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349775/warm-flow-1-7-2-released</guid>
      <pubDate>Sun, 11 May 2025 02:20:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>🔥 Java 的 LLM 框架，Agents-Flex v1.0.9 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img height="159" src="https://oscimg.oschina.net/oscnet//e9abb2dcabd25f200186db9697117676.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;Agents-Flex： 一个基于 Java 的 LLM 应用开发及编排框架。&lt;/h1&gt; 
&lt;hr&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;经过近 1 年的开发和迭代，Agents-Flex 发布了 30+ 个版本，终于迎来了 v1.0.0 正式版本。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;与此同时，基于 Agents-flex 开发的对标 Dify Coze 等产品的 AIFlowy 也正式对外开源，开源地址：&amp;nbsp;&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Agents-Flex 的基本能力&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;LLM 的访问能力&lt;/li&gt; 
 &lt;li&gt;Prompt、Prompt Template 定义加载的能力&lt;/li&gt; 
 &lt;li&gt;Function Calling 定义、调用和执行等能力&lt;/li&gt; 
 &lt;li&gt;记忆的能力（Memory）&lt;/li&gt; 
 &lt;li&gt;Embedding&lt;/li&gt; 
 &lt;li&gt;Vector Store&lt;/li&gt; 
 &lt;li&gt;文档处理 
  &lt;ul&gt; 
   &lt;li&gt;加载器（Loader） 
    &lt;ul&gt; 
     &lt;li&gt;Http&lt;/li&gt; 
     &lt;li&gt;FileSystem&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;分割器（Splitter）&lt;/li&gt; 
   &lt;li&gt;解析器（Parser） 
    &lt;ul&gt; 
     &lt;li&gt;PoiParser&lt;/li&gt; 
     &lt;li&gt;PdfBoxParser&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Chain 执行链 
  &lt;ul&gt; 
   &lt;li&gt;SequentialChain 顺序执行链&lt;/li&gt; 
   &lt;li&gt;ParallelChain 并发（并行）执行链&lt;/li&gt; 
   &lt;li&gt;LoopChain 循环执行连&lt;/li&gt; 
   &lt;li&gt;ChainNode&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;简单对话&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;使用 OpenAi 大语言模型:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; &lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;testChat&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
    OpenAiLlmConfig config = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; OpenAiLlmConfig();
    config.setApiKey(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"sk-rts5NF6n*******"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    Llm llm = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; OpenAiLlm(config);
    String response = llm.chat(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"请问你叫什么名字"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    System.out.println(response);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;使用 「通义千问」 大语言模型:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;testChat&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
    QwenLlmConfig config = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; QwenLlmConfig();
    config.setApiKey(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"sk-28a6be3236****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    config.setModel(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"qwen-turbo"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    Llm llm = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; QwenLlm(config);
    String response = llm.chat(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"请问你叫什么名字"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    System.out.println(response);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;使用 「讯飞星火」 大语言模型:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@Test&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;testChat&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
    SparkLlmConfig config = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; SparkLlmConfig();
    config.setAppId(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    config.setApiKey(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    config.setApiSecret(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    Llm llm = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; SparkLlm(config);
    String response = llm.chat(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"请问你叫什么名字"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    System.out.println(response);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;历史对话示例&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;static&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;main&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;String[] args&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;{
    SparkLlmConfig config = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; SparkLlmConfig();
    config.setAppId(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    config.setApiKey(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    config.setApiSecret(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"****"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    Llm llm = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; SparkLlm(config);

    HistoriesPrompt prompt = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; HistoriesPrompt();

    System.&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;out&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.println(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"您想问什么？"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    Scanner scanner = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; Scanner(System.&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;in&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
    String userInput = scanner.nextLine();

    &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;while&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; (userInput != &lt;strong&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;null&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;) {

        prompt.addMessage(&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; HumanMessage(userInput));

        llm.chatStream(prompt, (context, response) -&amp;gt; {
            System.&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;out&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.println(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"&amp;gt;&amp;gt;&amp;gt;&amp;gt; "&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; + response.getMessage().getContent());
        });

        userInput = scanner.nextLine();
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Function Calling&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;第一步：通过注解定义本地方法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;WeatherUtil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{

    &lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@FunctionDef&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;(name = &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#dd1144"&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;"get_the_weather_info"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;, description = &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#dd1144"&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;"get the weather info"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; &lt;strong&gt;static&lt;/strong&gt; String &lt;strong&gt;getWeatherInfo&lt;/strong&gt;&lt;span&gt;(
        &lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@FunctionParam(name = &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#dd1144"&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;"city"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;, description = &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#dd1144"&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;"the city name"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String name
    ) &lt;/span&gt;{
        &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//在这里，我们应该通过第三方接口调用 api 信息&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
        &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; name + &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"的天气是阴转多云。 "&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;第二步：通过 Prompt、Functions 传入给大模型，然后得到结果&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt; &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;static&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;main&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{

    OpenAiLlmConfig config = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; OpenAiLlmConfig();
    config.setApiKey(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"sk-rts5NF6n*******"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);

    OpenAiLlm llm = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; OpenAiLlm(config);

    FunctionPrompt prompt = &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; FunctionPrompt(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"今天北京的天气怎么样"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, WeatherUtil&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
    FunctionResultResponse response = llm.chat(prompt);

    Object result = response.getFunctionResult();

    System.out.println(result);
    &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//"北京的天气是阴转多云。 "&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;strong&gt;Agents-Flex v1.0.0~1.0.9 更新记录：&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增: Chain 添加 reset 方法，使之调用后可以执行多次&lt;/li&gt; 
 &lt;li&gt;新增: 添加 Milvus 的相识度返回&lt;/li&gt; 
 &lt;li&gt;新增: Chain.getParameterValues 添加对固定数据格式填充的能力&lt;/li&gt; 
 &lt;li&gt;新增: 增加 qdrant 向量数据库支持&lt;/li&gt; 
 &lt;li&gt;新增: 允许通过 ChatOptions 在运行时动态替换模型名称&lt;/li&gt; 
 &lt;li&gt;新增：增加是否开启思考模式参数，适用于 Qwen3 模型&lt;/li&gt; 
 &lt;li&gt;新增：Document 增加文档标题&lt;/li&gt; 
 &lt;li&gt;新增：增强知识库查询条件&lt;/li&gt; 
 &lt;li&gt;新增：优化 Chain 的 get 逻辑，支持获取对象的属性内容&lt;/li&gt; 
 &lt;li&gt;新增: 为 VectorData 添加 score 属性，统一文档 score 字段&lt;/li&gt; 
 &lt;li&gt;新增: deepseek-r1 推理过程增量输出改为完整输出和内容的输出保持一致，感谢 @liutf&lt;/li&gt; 
 &lt;li&gt;新增: 增加 QwenChatOptions，让通义千问支持更多的参数，感谢 @liutf&lt;/li&gt; 
 &lt;li&gt;新增：新增 ChainHolder，用于序列化 ChainNode，以支持分布式执行&lt;/li&gt; 
 &lt;li&gt;新增：添加 JavascriptStringCondition 条件&lt;/li&gt; 
 &lt;li&gt;优化：移动 "description" 属性到 ChainNode&lt;/li&gt; 
 &lt;li&gt;优化：优化 Chain，在暂停时抛出异常&lt;/li&gt; 
 &lt;li&gt;优化：重构 Chain 的异步执行逻辑&lt;/li&gt; 
 &lt;li&gt;优化: 重构 TextPromptTemplate，使其支持更多的语法&lt;/li&gt; 
 &lt;li&gt;优化: 优化 pom 管理&lt;/li&gt; 
 &lt;li&gt;优化: Parameter 添加 dataType 默认数据&lt;/li&gt; 
 &lt;li&gt;优化: TextPromptTemplate.create 添加缓存以提高性能&lt;/li&gt; 
 &lt;li&gt;优化：不允许设置默认 EmbeddingOptions 配置的 encodingFormat&lt;/li&gt; 
 &lt;li&gt;优化：修改模型思考过程的设置，让 content 和 reasoningContent 输出内容一致，感谢 @Alex&lt;/li&gt; 
 &lt;li&gt;优化：优化 elasticSearch 用户自定义集合名称就用用户自定义集合，没有传就用默认集合名称&lt;/li&gt; 
 &lt;li&gt;优化：从命名 TextPromptTemplate.create 方法名称为 TextPromptTemplate.of，更加符合 「缓存」 的特征&lt;/li&gt; 
 &lt;li&gt;修复：修复 openSearch 存储报错问题&lt;/li&gt; 
 &lt;li&gt;修复：修复 LlmNode 当配置 outType 时，不能返回正确结果的问题&lt;/li&gt; 
 &lt;li&gt;修复：TextPromptTemplate 无法可以解析&lt;span&gt;&amp;nbsp;&lt;/span&gt;的问题&lt;/li&gt; 
 &lt;li&gt;测试：添加 milvus 向量存储用法示例测试类，感谢 @lyg&lt;/li&gt; 
 &lt;li&gt;测试：添加通过 OpenAI 的 API 调用 Gitee 进行图片识别&lt;/li&gt; 
 &lt;li&gt;测试：添加 chain 的数据获取测试&lt;/li&gt; 
 &lt;li&gt;测试：添加 ChainConditionStringTest 测试&lt;/li&gt; 
 &lt;li&gt;文档：添加提示词相关文档&lt;/li&gt; 
 &lt;li&gt;文档：添加 「模板缓存」 的相关文档&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;源码下载&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee：&lt;a href="https://gitee.com/agents-flex/agents-flex"&gt;https://gitee.com/agents-flex/agents-flex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;Github：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fagents-flex%2Fagents-flex" target="_blank"&gt;https://github.com/agents-flex/agents-flex&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349768/agents-flex-1-0-9-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349768/agents-flex-1-0-9-released</guid>
      <pubDate>Sun, 11 May 2025 02:05:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>MCMS 5.4.5 已经发布，铭飞内容管理系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;MCMS 5.4.5 已经发布，铭飞内容管理系统&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;【优化】优化单篇类型无文章静态化提示&lt;/li&gt; 
 &lt;li&gt;【优化】优化自定义业务保存更新错误提示&lt;/li&gt; 
 &lt;li&gt;【优化】优化单篇类型无文章静态化提示&lt;/li&gt; 
 &lt;li&gt;【优化】优化自定义业务保存更新错误提示&lt;/li&gt; 
 &lt;li&gt;【修复】修复栏目和文章 id 精度丢失问题&lt;/li&gt; 
 &lt;li&gt;【修复】修复自定义模型验证码校验值未正常回显&lt;/li&gt; 
 &lt;li&gt;【修复】具体参考开源中国与 GitHub 的 ISSUES &lt;a href="https://gitee.com/mingSoft/MCMS/issues" target="_blank"&gt;https://gitee.com/mingSoft/MCMS/issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/mingSoft/MCMS/releases/5.4.5"&gt;https://gitee.com/mingSoft/MCMS/releases/5.4.5&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349767/ms-cms-5-4-5-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349767/ms-cms-5-4-5-released</guid>
      <pubDate>Sun, 11 May 2025 01:55:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>kom v0.2.37 已经发布，Kubernetes 操作工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;kom v0.2.37 已经发布，Kubernetes 操作工具&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix(exec): specify items schema for command arguments in ExecTool function&lt;/li&gt; 
 &lt;li&gt;refactor(port-forward): 将 PortForward 方法从 Kubectl 移到 Pod 并添加容器名称支持&lt;/li&gt; 
 &lt;li&gt;docs: 在 README.md 中添加"kom:pod:port:forward"回调函数说明&lt;/li&gt; 
 &lt;li&gt;docs: 在 README.md 中添加端口转发示例&lt;/li&gt; 
 &lt;li&gt;feat(port-forward): 添加端口转发功能支持&lt;/li&gt; 
 &lt;li&gt;feat(server): 设置认证密钥- 在 GetMCPSSEServerWithOption 函数中添加了设置认证密钥的逻辑&lt;/li&gt; 
 &lt;li&gt;style: 在 node_list.go 中添加空行以提升代码可读性&lt;/li&gt; 
 &lt;li&gt;refactor(node): 重命名工具函数以更清晰地表达其功能&lt;/li&gt; 
 &lt;li&gt;feat(node/pod): 添加 TopNode 和 TopPod 工具以获取节点和 Pod 的资源用量排名&lt;/li&gt; 
 &lt;li&gt;fix(node): 将节点名称参数设置为必填项&lt;/li&gt; 
 &lt;li&gt;feat(node): 添加获取 K8s 节点列表的工具&lt;/li&gt; 
 &lt;li&gt;feat(pod): 新增 Pod 相关工具和功能&lt;/li&gt; 
 &lt;li&gt;feat: 新增列出 Kubernetes 命名空间的功能&lt;/li&gt; 
 &lt;li&gt;refactor(reg.go): 移除不再使用的工具注册代码&lt;/li&gt; 
 &lt;li&gt;feat(deployment): 添加 ListDeployEventResource 工具及其处理器&lt;/li&gt; 
 &lt;li&gt;feat(deployment): 添加列出 Deployment 相关事件的功能&lt;/li&gt; 
 &lt;li&gt;feat: 添加 ns 工具注册到 MCPServer&lt;/li&gt; 
 &lt;li&gt;fix: 将日志级别从 v8 调整为 v6&lt;/li&gt; 
 &lt;li&gt;fix(utils): 修复上下文值设置错误&lt;/li&gt; 
 &lt;li&gt;feat(server): 添加工具注册和钩子函数&lt;/li&gt; 
 &lt;li&gt;refactor(tools): 重构工具注册逻辑并移除 metadata 依赖&lt;/li&gt; 
 &lt;li&gt;refactor: 移除 cluster 参数的 Required 标记&lt;/li&gt; 
 &lt;li&gt;refactor(pod_files): 重命名工具标识符以增加可读性&lt;/li&gt; 
 &lt;li&gt;refactor(tools): 统一工具函数命名，增加 k8s 前缀以明确功能&lt;/li&gt; 
 &lt;li&gt;refactor(tools): 将集群参数标记为必填并更新描述&lt;/li&gt; 
 &lt;li&gt;feat(mcp): 添加获取 SSE 服务器的功能&lt;/li&gt; 
 &lt;li&gt;refactor: 移除未使用的认证角色相关代码&lt;/li&gt; 
 &lt;li&gt;fix(pod_exec_test): 修复命令执行错误处理&lt;/li&gt; 
 &lt;li&gt;test(pod_exec): 添加 Pod 执行命令的单元测试&lt;/li&gt; 
 &lt;li&gt;feat(statement): 添加 StreamOptions 字段以支持流式操作&lt;/li&gt; 
 &lt;li&gt;feat: 添加 StreamExecuteWithOptions 方法以支持自定义流执行选项&lt;/li&gt; 
 &lt;li&gt;refactor(stream_exec): 优化流式命令执行逻辑&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href="https://gitee.com/weibaohui/kom/compare/v0.2.29...v0.2.37" target="_blank"&gt;https://gitee.com/weibaohui/kom/compare/v0.2.29...v0.2.37&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/weibaohui/kom/releases/v0.2.37"&gt;https://gitee.com/weibaohui/kom/releases/v0.2.37&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349719/kom-0-2-37-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349719/kom-0-2-37-released</guid>
      <pubDate>Sat, 10 May 2025 14:53:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>k8m v0.0.110 已经发布，轻量级的 Kubernetes 仪表板</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;k8m v0.0.110 已经发布，轻量级的 Kubernetes 仪表板&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix: 修复 Cache-Control 头中的 max-age 值转换错误&lt;/li&gt; 
 &lt;li&gt;feat(ui): 为环境变量输入框添加 textarea 类型支持&lt;/li&gt; 
 &lt;li&gt;feat(用户配置): 添加对话框关闭选项&lt;/li&gt; 
 &lt;li&gt;refactor(ui): 移除集群管理页面中的命名空间选择功能&lt;/li&gt; 
 &lt;li&gt;refactor(middleware): 移除静态文件后缀列表中的 ".json"&lt;/li&gt; 
 &lt;li&gt;refactor: 清空对话历史后忽略返回数据&lt;/li&gt; 
 &lt;li&gt;refactor: 重构代码以使用统一的上下文获取方法&lt;/li&gt; 
 &lt;li&gt;feat(iai): 添加 ClearHistory 方法以清空历史记录&lt;/li&gt; 
 &lt;li&gt;feat(chat): 添加历史记录和重置功能的 API 端点&lt;/li&gt; 
 &lt;li&gt;feat(WebSocketChatGPT): 添加对话历史和清空历史功能&lt;/li&gt; 
 &lt;li&gt;style(global.scss): 增加 ant-modal-wrap 的 z-index 值&lt;/li&gt; 
 &lt;li&gt;fix(config): 为配置项设置默认值并更新数据库配置&lt;/li&gt; 
 &lt;li&gt;refactor(ai): 重构 AI 客户端配置逻辑&lt;/li&gt; 
 &lt;li&gt;feat(config): 添加模型温度、topP 参数和最大历史记录数字段&lt;/li&gt; 
 &lt;li&gt;feat(flag): 添加模型温度、topP 参数和历史记录数配置&lt;/li&gt; 
 &lt;li&gt;style: 更新日志信息中的中文描述&lt;/li&gt; 
 &lt;li&gt;refactor: 重命名 AI 相关结构体和函数以简化命名&lt;/li&gt; 
 &lt;li&gt;feat(admin/config): 添加大模型配置参数&lt;/li&gt; 
 &lt;li&gt;fix: 修正未选择集群时的错误提示信息&lt;/li&gt; 
 &lt;li&gt;perf(dao): 设置 SQLite 最大打开连接数为 1&lt;/li&gt; 
 &lt;li&gt;refactor(openai_history): 添加 temperature 和 topP 参数到 ChatCompletion 请求&lt;/li&gt; 
 &lt;li&gt;fix: 修复内存服务和上下文处理中的潜在问题&lt;/li&gt; 
 &lt;li&gt;refactor(chat): 将 context 传递给相关方法以支持上下文管理&lt;/li&gt; 
 &lt;li&gt;refactor(ai): 添加局部变量缓存默认客户端&lt;/li&gt; 
 &lt;li&gt;refactor(chat): 添加上下文信息到聊天请求中&lt;/li&gt; 
 &lt;li&gt;refactor: 移除未使用的 OpenAI 客户端代码以简化代码库&lt;/li&gt; 
 &lt;li&gt;docs(ai): 添加 OpenAI 助手的系统提示文本&lt;/li&gt; 
 &lt;li&gt;feat(ai): 新增 OpenAI 客户端历史记录管理功能&lt;/li&gt; 
 &lt;li&gt;feat(ai): 新增线程安全的用户对话历史存储服务&lt;/li&gt; 
 &lt;li&gt;refactor: 为 IAI 接口的 SaveAIHistory 和 GetHistory 方法添加 context 参数&lt;/li&gt; 
 &lt;li&gt;refactor(chat): 优化聊天服务逻辑和工具调用合并&lt;/li&gt; 
 &lt;li&gt;refactor(openai): 优化历史记录处理逻辑并添加获取历史记录方法&lt;/li&gt; 
 &lt;li&gt;feat: 添加 GetHistory 方法以获取 AI 历史记录&lt;/li&gt; 
 &lt;li&gt;refactor(service): 为 chatService 添加 MaxIterations 字段&lt;/li&gt; 
 &lt;li&gt;refactor: 使用 models.MCPToolCallResult 替换 MCPToolCallResult&lt;/li&gt; 
 &lt;li&gt;feat(chat): 添加多轮对话支持并优化工具调用处理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href="https://gitee.com/weibaohui/k8m/compare/v0.0.106...v0.0.110" target="_blank"&gt;https://gitee.com/weibaohui/k8m/compare/v0.0.106...v0.0.110&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/weibaohui/k8m/releases/v0.0.110"&gt;https://gitee.com/weibaohui/k8m/releases/v0.0.110&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349717/k8m-0-0-110-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349717/k8m-0-0-110-released</guid>
      <pubDate>Sat, 10 May 2025 14:48:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>🔥🔥🔥高质量 SmartAdmin 重磅更新 V3.21</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff"&gt;&lt;strong&gt;SmartAdmin&lt;/strong&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;「高质量代码、简洁、高效、安全」的快速开发平台&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;v3.21 版本，重磅更新，发布，&lt;/strong&gt;更新如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;【新增】修改部门名称字段&lt;/li&gt; 
  &lt;li&gt;【新增】修改系统版本 version 字段&lt;/li&gt; 
  &lt;li&gt;【新增】优化代码生成前端代码&lt;/li&gt; 
  &lt;li&gt;【优化】SQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;hr&gt; 
   &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;SmartAdmin&lt;/strong&gt;&amp;nbsp;由&amp;nbsp;&lt;strong&gt;中国・洛阳&lt;/strong&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.1024lab.net%2F" target="_blank"&gt;1024 创新实验室&lt;/a&gt;&amp;nbsp;基于 SpringBoot2/3+Sa-Token+Mybatis-Plus 和 Vue3+Ant Design Vue+Uni-App+Uni-UI，并以&amp;nbsp;&lt;span style="color:#dc143c"&gt;&lt;strong&gt;「高质量代码」为核心，「简洁、高效、安全」&lt;/strong&gt;&lt;/span&gt;的快速开发平台。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;国内首个满足《网络安全 - 三级等保》、《数据安全》&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;功能要求，支持登录限制、接口国产加解密、数据脱敏等一系列安全要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前端提供&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;JavaScript 和 TypeScript 双版本&lt;/span&gt;&lt;/strong&gt;，后端提供&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;Java8+SpringBoot2.X 和 Java17+SpringBoot3.X 双版本&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同时&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;重磅开源&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;开源六年来&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;千余家企业验证过且正在使用&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;的代码规范:&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;《高质量代码思想》、《Vue3 规范》、《Java 规范》&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;，让大家在这浮躁的世界里感受到一股把代码写好的清流！同时又能节省大量时间，减少加班，快乐工作，保持谦逊，保持学习，&lt;strong&gt;&lt;span style="color:#dc143c"&gt;热爱代码，更热爱生活&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;技术体系&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;前端：Vue3 + Vite5 + Vue-Router + Pinia + Ant Design Vue 4.X&lt;/li&gt; 
 &lt;li&gt;移动端：uniapp (vue3 版本) + uni-ui + （同时支持 APP、小程序、H5）&lt;/li&gt; 
 &lt;li&gt;后端：SpringBoot2/3 + Sa Token + Mybatis-plus + 多种数据库&lt;/li&gt; 
 &lt;li&gt;电脑在线预览：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpreview.smartadmin.vip" target="_blank"&gt;https://preview.smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官方文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;https://smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;移动端在线预览：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.smartadmin.vip%2F%23%2Fpages%2Flogin%2Flogin" target="_blank"&gt;https://app.smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;理念与思想&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;我们分享的不是徒劳无功的各种功能，而是必须有的功能，如：网络安全、数据变动记录、系统说明文档、版本更新记录、意见反馈、日志、心跳、单号生成器等等。&lt;/li&gt; 
 &lt;li&gt;我们分享的还有经过上百家公司验证过的前端、后端、vue3 等代码规范，好的规范能让我们敲下的每行代码更铿锵有力！&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;我们推崇高质量的代码，身为开发，代码即利剑，键盘上一套行云流水，宛如侠客，事了拂衣去，深藏身与名。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;我们推崇团队的高度配合默契、互相帮助，从不加班，而不是一看到别人的代码就头皮发麻，留其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F996.ICU" target="_blank"&gt;996.ICU&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;加班。&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;功能亮点图&lt;/strong&gt;&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b1071e517f1d71298d012c71e6f98a7c.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//15cfa4d262087c2b83dd40411f05a230.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//c9d856ba2697b9e39c3616f6de2c58e2.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//12eb4611701abae810e3331ae3e560a2.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e87bc020c32c09f8c19f870d00ca01ff.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//deb88775a4b1a4e2d65e7812e2932bbc.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e0ea9cf13fb5029642c57ea603f65d01.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//81df44014813a2fce9447aecb33ac119.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//25c33dbfcf930dbf2ab060e453f146dc.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//feedbc7cec172f3a14c21998a0d9b361.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;功能亮点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;安全体系&lt;/span&gt;&lt;/strong&gt;：&lt;span style="background-color:#ffffff; color:#3c3c43"&gt;满足国家三级等保要求，如双因子登录、密码加密、密码复杂度要求、登录错误次数锁定、登录超时退出、数据脱敏等网络安全和数据安全功能&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;接口加解密&lt;/span&gt;&lt;/strong&gt;：支持请求参数和返回内容进行加解密操作，支持国产加密算法和其他国外加密算法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;表格自定义列&lt;/strong&gt;：支持用户自定义列，并能将用户自定义列持久化到数据库&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据变更记录&lt;/strong&gt;：支持基于 git diff 插件的数据变更记录，查看数据变化更直观方便&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;在线文档&lt;/strong&gt;：支持右侧帮助文档（类似阿里云控制枱右侧帮助文档效果）、支持意见反馈、版本记录，等功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OA 办公&lt;/strong&gt;：公司信息（发票、银行、员工等）、通知公告（阅读记录、次数等）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;日志、监控&lt;/strong&gt;：服务器心跳日志、登录日志、操作日志（IP、浏览器、操作系统等设备信息）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;系统功能&lt;/strong&gt;：员工、部门、角色、权限、菜单、水印、文件管理、系统参数、数据字典、单号生成，等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代码生成&lt;/strong&gt;： 基于每个表的配置、在线预览代码、下载，等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;以上只是一些举例，更多灿若繁星的惊喜和细节，等待着你的发现！&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;SmartAdmin 业内独有功能亮点&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;代码亮点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 双版本】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供 js 和 ts 双版本，目录结构及其清晰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 常量维护】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;vue-enum，拒绝出现魔法数字，常量枚举不可维护的现象&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 命名】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内最好的 api、常量等命名和写法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 多环境支持】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;独有的本地、开发、测试、预发布、生产 5 个 env 环境配置文件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - layout 代码】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内代码最清晰的 layout 布局写法，小白都能看懂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - main.js】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内可能只有我们把 main.js 中的 router 加载方式写对了&lt;/li&gt; 
 &lt;li&gt;---- 华丽前后端分割线 ----&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 独有目录结构】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独有的高质量的 Java 代码分包结构，适合大、中、小型项目，结构非常清晰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 公共配置文件】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独有的共用配置文件维护，简化共同配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 返回码维护】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独创的请求返回码维护，非常值得一看&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 四层架构】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;四层架构（controller, service, manager, dao），为什么要有四层&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 多环境】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;maven 多环境：开发、测试、预发布、生产，环境配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 系统钩子】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;smart-reload，为系统预留钩子，动态加载，在不重启程序前提下执行一些代码&lt;/li&gt; 
 &lt;li&gt;以上只是沧海一粟，更多的细节等待你的发现！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;去查看&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349684/smart-admin-3-21-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349684/smart-admin-3-21-released</guid>
      <pubDate>Sat, 10 May 2025 12:17:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>OpenHarmony 5.1.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenHarmony 是由开放原子开源基金会孵化及运营的开源项目，目标是面向全场景、全连接、全智能时代，搭建一个智能终端设备操作系统的框架和平台，促进万物互联产业的繁荣发展。&lt;/p&gt; 
&lt;p&gt;OpenHarmony 5.1.0 Release 正式版&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/release-notes/OpenHarmony-v5.1.0-release.md"&gt;已发布并上线 Gitee 平台&lt;/a&gt;，升级 API 18。&lt;/p&gt; 
&lt;p&gt;相比前一个 Release 版本（OpenHarmony 5.0.3，即 API 15），OpenHarmony 5.1.0 Release 重点做出了如下特性新增或增强：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;进一步增强 ArkUI，提供更丰富的组件属性设置，支持更多精致动效，持续补充组件通过 C API 调用的能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步增强媒体能力，提供更丰富的编解码能力、播控能力、媒体会话管理能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步丰富了应用启动的细节设置能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步增强分布式数据管理的 UDMF、RDB 的数据处理能力；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;进一步完善了标准 Web 能力等等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;更详细的特性新增与增强的说明如下，将按照 API 版本顺序分别进行列举：&lt;/p&gt; 
&lt;h3&gt;应用框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持根据指定的数据加密级别创建应用上下文，以获取相应的路径。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-inner-application-context.md#contextcreateareamodecontext18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持同步获取当前进程的进程名（processName）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-inner-application-context.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取应用被拉起原因（LAUNCH_REASON_MESSAGE）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-wantConstant.md#params"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;启动框架新增支持 HAR/HSP 和 so 文件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/application-models/app-startup.md#%E6%94%AF%E6%8C%81%E7%9A%84%E8%8C%83%E5%9B%B4"&gt;指南&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-appstartup-startupManager.md#ohosappappstartupstartupmanager"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持启动 Ability 时指定主窗口显示的最大宽高（maxWindowWidth/maxWindowHeight）和最小宽高（minWindowWidth/minWindowHeight）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-startOptions.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取应用上一次退出的详细原因。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/application-models/ability-exit-info-record.md"&gt;指南&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-abilityConstant.md#lastexitdetailinfo18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持设置 UIAbility 的颜色模式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-inner-application-uiAbilityContext.md#uiabilitycontextsetcolormode18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持通过 startAbility 的属性 startOptions 来指定创建新窗口的大小（minWindowWidth、minWindowHeight、maxWindowWidth、maxWindowHeight）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-startOptions.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;C API 新增支持启动 Ability 时传递 startOptions。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/start__options_8h.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;C API 新增支持设置启动 Ability 时窗口和 dock 栏图标的显示模式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/_ability_runtime.md#oh_abilityruntime_setstartoptionsstartvisibility"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增一批 C API 函数，用于获取应用级别沙箱内文件目录。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ability-kit/_ability_runtime.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;应用包管理&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;配置文件 module.json5 新增重定向配置：通过 abilitySrcEntryDelegator 标识当前 Module 需要重定向到的 UIAbility 的名称，通过 abilityStageSrcEntryDelegator 标识当前 Module 需要重定向到的 UIAbility 对应的 Module 名称（不可为当前 Module 名称），两者组合使用，共同指定重定向的目标对象。 （&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/quick-start/module-configuration-file.md#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E6%A0%87%E7%AD%BE"&gt;指南&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;ArkUI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;文本与输入组件能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;文本组件支持通过 NODE_IMMUTABLE_FONT_WEIGHT 属性，设置文字粗细不会跟随系统字体粗细而变化。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype"&gt;API 参考-C API&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;文本组件支持对选中的文本提供分享服务（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-text-common.md#%E5%B1%9E%E6%80%A7"&gt;API 参考&lt;/a&gt;）、支持按音节连字符换行（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-appendix-enums.md#wordbreak11"&gt;API 参考&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;文本组件新增支持设置文本选择菜单显示在独立窗口。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#textmenucontroller16"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;富文本（RichEditor）组件支持设置最大行数。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-richeditor.md#maxlength18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextInput 组件支持设置文本省略位置。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textinput.md#ellipsismode18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextInput/TextArea/Search/RichEditor 组件支持将文本行间距平分至行的顶部与底部。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textinput.md#halfleading18"&gt;API 参考-TextInput&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textarea.md#halfleading18"&gt;API 参考-TextArea&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-search.md#halfleading18"&gt;API 参考-Search&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-richeditor.md#richeditortextstyleresult"&gt;API 参考-RichEditor&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextInput/TextArea 组件扩展自动填充类型，包含：车牌号、护照号等。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textinput.md#contenttype12%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_textinputcontenttype"&gt;API 参考-C&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;富文本（RichEditor）组件在长按预览菜单时支持振动效果。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-richeditor.md#previewmenuoptions18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;基础类型定义新增支持清除当前的预上屏文本内容。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-types.md#clearpreviewtext17"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;通用拖拽能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持封装自定义落位动效。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#notifydragstartrequest18"&gt;API 参考&lt;/a&gt;，&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-events-drag-drop.md#executedropanimation18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持自定义控制在拖拽至可滚动组件边缘时是否触发自动滚屏。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-drag-drop.md#draginteractionoptions12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;弹窗能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;支持通过设置 levelOrder 来管理弹出框的显示顺序，确保层级较高的弹出框覆盖在层级较低的弹出框之上。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-promptAction.md#showdialogoptions"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/ui/arkts-dialog-levelorder.md"&gt;指南&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;支持在自定义内容中，创建和关闭对应的自定义弹窗。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#opencustomdialogwithcontroller18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Popup 组件支持通过 maxWidth 设置最大宽度。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ohos-arkui-advanced-Popup.md#popupoptions"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;半模态 Popup 样式弹窗，支持通过 placement 设置相对于目标的显示位置，通过 placementOnTarget 设置弹窗能否覆盖在目标节点上。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-sheet-transition.md#sheetoptions"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Menu 和 Dialog 支持通过 backgroundBlurStyleOptions 和 backgroundEffect 设置自定义背景模糊。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-menu.md#contextmenuoptions10"&gt;API 参考-Menu&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-promptAction.md#showdialogoptions"&gt;API 参考-Dialog&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;模态转场和 MenuItem 支持!!双向绑定变量。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-sheet-transition.md#bindsheet"&gt;API 参考-半模态转场&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-modal-transition.md#bindcontentcover"&gt;API 参考-全屏模态转场&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-menuitem.md#selected"&gt;API 参考-MenuItem&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;自定义弹窗支持避让键盘后，通过 keyboardAvoidDistance 设置弹窗和键盘之间的最小距离。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-methods-custom-dialog-box.md#customdialogcontrolleroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_dialog_a_p_i__2.md"&gt;API 参考-C&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;支持通过 showInSubWindow 设置半模态是否在子窗中显示、支持通过 effectEdge 设置半模态面板边缘滚动的效果。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-sheet-transition.md#sheetoptions"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;菜单（Menu）在弹出时支持振动效果。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-menu.md#hapticfeedbackmode18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;表单选择类组件能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新增 SegmentButtonV2 组件，可创建页签型、单选或多选的胶囊型分段按钮。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ohos-arkui-advanced-SegmentButtonV2.md"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TextPicker/TimePicker 支持选项进入选中区域时触发事件回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-textpicker.md#onenterselectedarea18"&gt;API 参考-TextPicker&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-timepicker.md#onenterselectedarea18"&gt;API 参考-TimePicker&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;TimePicker/CalendarPicker 支持通过 start 和 end 配置开始时间和结束时间（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-timepicker.md#timepickeroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E"&gt;API 参考-TimePicker&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-calendarpicker.md#calendaroptions%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E"&gt;API 参考-CalendarPicker&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;TimePicker 支持通过 enableCascade 设置 12 小时制时上午下午跟随时间联动。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-timepicker.md#enablecascade18"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;滚动与滑动组件能力增强。包括：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Swiper/Tabs 组件增加页面选中元素改变时触发的回调，返回当前选中或将要隐藏的元素的索引值。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-container-swiper.md"&gt;API 参考-Swiper&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-container-tabs.md"&gt;API 参考-Tabs&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Swiper 组件增加控制手指或者鼠标等按下屏幕时子组件是否停止自动播放的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-container-swiper.md#onunselected18"&gt;API 参考-Swiper&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;Swiper 组件 CAPI 能力增强，可设置缓存节点是否显示、数字导航点和导航箭头的样式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/li&gt; 
   &lt;li&gt;List 组件支持设置布局样式和滚动效果（NODE_LIST_SCROLL_TO_INDEX_IN_GROUP、 NODE_LIST_LANES、NODE_LIST_SCROLL_SNAP_ALIGN、NODE_LIST_MAINTAIN_VISIBLE_CONTENT_POSITION）（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_nodeattributetype"&gt;API 参考-CAPI&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增 C API，支持可配置用户自定义数据的手势中断事件回调函数。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_gesture_a_p_i__2.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增 C API，支持获取事件命中组件的宽高和座标信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___event_module.md#%E5%87%BD%E6%95%B0"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持设置组件的自定义焦点走焦逻辑。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-focus.md#nextfocus18"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#arkui_focusmove"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持动态获取手势配置参数，可返回连续点击次数阈值。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-gesture-blocking-enhancement.md#taprecognizer18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持手势取消时触发的 onActionCancel 回调中返回手势事件信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-longpressgesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-LongPressGesture&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-pangesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-PanGesture&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-pinchgesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-PinchGesture&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-gestures-rotationgesture.md#%E4%BA%8B%E4%BB%B6"&gt;API 参考-RotationGesture&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;无障碍支持自定义焦点顺序（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-accessibility.md#accessibilitynextfocusid18"&gt;API 参考&lt;/a&gt;）、支持控制组件的屏幕朗读方式（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-accessibility.md#accessibilityrole18"&gt;API 参考&lt;/a&gt;）、支持设置屏幕朗读滚动操作（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-accessibility.md#accessibilityscrolltriggerable18"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持设置 EmbeddedComponent 或 UIExtensionComponent 组件的占用事件，指定手势事件的响应方式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-uiExtension.md#occupyevents18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持将当前 FrameNode 移动到目标 FrameNode 的指定位置，实现跨实例节点迁移。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-frameNode.md#moveto18"&gt;API 参考&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#oh_arkui_nodeutils_moveto"&gt;API 参考-CAPI&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;NodeController 新增节点上下树和绑定解绑前后的生命周期回调接口（onAttach、onDetach、onWillBind、onWillUnbind、onBind、onUnbind）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-nodeController.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持对 ComponentContent 构建的 UI 组件进行截图。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#createfromcomponent18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增鼠标轴事件相关接口。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-events-axis.md"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___event_module.md#oh_arkui_axisevent_setpropagation"&gt;API 参考-C API&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;NavDestination 新增 OnActive 和 OnInActive 生命周期。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-navdestination.md#onactive17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;C API 的事件能力增强，新增支持获取事件命中的组件的宽度、高度、X 座标、Y 座标等能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___event_module.md#oh_arkui_uiinputevent_geteventtargetwidth"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;UIContext 新增支持创建不依赖窗口的 UI 实例。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-UIContext.md#createuicontextwithoutwindow17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;组件可见区域变化事件新增支持设置事件的回调参数，限制它的执行间隔。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-component-visible-area-change-event.md#onvisibleareaapproximatechange17"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/_ark_u_i___native_module.md#oh_arkui_visibleareaeventoptions_create"&gt;API 参考-C API&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;ImageAnimator 组件支持设置是否通过系统 onVisibleAreaChange 的可见性来判断组件的暂停和播放。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-imageanimator.md#monitorinvisiblearea17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;窗口管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增软键盘弹出动画完成的监听回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-window.md#onkeyboarddidshow18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;画中画窗口支持通过创建参数 LocalStorage 实现页面级别的 UI 状态存储单元，多实例下可用来跟踪主窗实例。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-pipWindow.md#pipconfiguration"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;窗口管理新增支持创建虚拟屏幕。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkui/js-apis-display.md#displaycreatevirtualscreen16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;图形图像&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增一批 C API 函数和枚举，用于支持直接绘制到屏幕 buffer 的 gpu 渲染能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkgraphics2d/drawing__path__effect_8h.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;分布式数据管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;RelationalStore 新增 rootDir 配置，支持打开非 database 目录下的数据库。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-relationalStore.md#storeconfig"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;关系型数据库新增支持根据指定的列索引或列名称获取列数据类型。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-relationalStore.md#getcolumntype18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;UDMF 新增支持将传入的 data 转换成多样式数据结构的能力。若原 data 使用多个 record 去承载同一份数据的不同样式，则可以使用此接口将原 data 转换为多样式数据结构。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-unifiedDataChannel.md#unifieddatachannelconvertrecordstoentries17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;媒体&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;音频&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持 Float32 格式音频输出。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-audio-kit/_o_h_audio.md#oh_audiostream_sampleformat"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持空间音频管理的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/media/audio/public-audio-spatialization-management.md"&gt;指南&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-audio-kit/js-apis-audio.md#getspatializationmanager18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;音视频编解码&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;视频解码新增支持 MPEG2、MPEG4、H.263。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/media/avcodec/avcodec-support-formats.md"&gt;指南&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;播放控制&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;播放器支持向应用透传 SEI 字段数据，适用于 HTTP-FLV 直播。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#onseimessagereceived18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;调用媒体播放器 AVPlayer 设置播放策略时，新增支持 Prepare 之后显示视频起播首帧（showFirstFrameOnPrepare）、起播缓冲水线（preferredBufferDurationForPlaying）等播放策略。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#setplaybackstrategy12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;播放器新增支持播放预下载的视频数据。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#setmediaresourceloaderdelegate18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;调用媒体播放器 AVPlayer 设置播放策略时，新增支持智能追帧水线（thresholdForAutoQuickPlay）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#playbackstrategy12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;能力增强：支持应用创建多个 SoundPool 实例。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#mediacreatesoundpool10"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;调用媒体播放器 AVPlayer 设置播放策略时，新增支持 Prepare 之后显示视频起播首帧（showFirstFrameOnPrepare）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#playbackstrategy12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持通过 AV 会话命令传递设置目标循环模式（setTargetLoopMode）的能力（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-avsession-kit/js-apis-avsession.md#avcontrolcommandtype10"&gt;API 参考&lt;/a&gt;），并提供对设置动作的事件监听回调（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-avsession-kit/js-apis-avsession.md#onsettargetloopmode18"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;音频会话新增支持单句/单条歌词展示的属性 singleLyricText。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-avsession-kit/js-apis-avsession.md#avmetadata10"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;图片&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 C API 支持获取图片的可编辑标志。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-image-kit/_image___native_module.md#oh_pixelmapinitializationoptions_geteditable"&gt;API 参考&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;录制&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增屏幕录制时视频填充模式的枚举。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#avscreencapturefillmode18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;音视频录制配置文件新增支持配置稳定录制模式 enableStableQualityMode18。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-media-kit/js-apis-media.md#avrecorderprofile9"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;语言编译器运行时&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TaskPool 支持指定任务执行并发度和指定任务的排队策略。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-taskpool.md#asyncrunner18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TaskPool 支持通过任务 ID 取消任务池中的任务。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-taskpool.md#taskpoolcancel18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;collections（ArkTS 容器集）在 API 18 新增支持以下方法（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-arkts-collections.md#arktscollections-arkts%E5%AE%B9%E5%99%A8%E9%9B%86"&gt;API 参考&lt;/a&gt;）： Array：from、isArray、of、copyWithin、lastIndexOf、some、reduceRight、reverse、toString、every、toLocaleString&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TypedArray：toString、toLocaleString、lastIndexOf、reduceRight&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Sendable 支持在缓存空间不够的时候，将近期最少使用的数据替换为新数据。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-arkts-utils.md#sendablelrucachek-v18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Worker 支持创建任务时指定任务的优先级。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkts/js-apis-worker.md#threadworkerpriority18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安全&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增基于群组的关键资产访问控制。通过设置群组属性，同一开发者开发的多个应用可以共享数据。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/security/AssetStoreKit/asset-js-group-access-control.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;DFX&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持为当前线程转储虚拟机的原始堆快照。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-performance-analysis-kit/js-apis-hidebug.md#hidebugdumpjsrawheapdata18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;企业定制&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;可禁用/启用的特性限制新增 MTP（mtpClient/mtpServer）和恢复出厂设置（resetFactory）。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-mdm-kit/js-apis-enterprise-restrictions.md#restrictionssetdisallowedpolicy"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持按系统账户安装用户证书。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-mdm-kit/js-apis-enterprise-securityManager.md#securitymanagerinstallusercertificate18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持订阅账号的新增、删除、切换系统事件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-mdm-kit/js-apis-enterprise-adminManager.md#managedevent"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;基础通信&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增在蓝牙 socket server 端可以获取对端蓝牙设备虚拟 MAC 地址的功能（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-socket.md#socketgetdeviceid17"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增获取对端蓝牙设备原始名字的功能。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-connection.md#connectiongetremotedevicename16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增连接对端蓝牙设备可用 profile 的功能，如 A2DP、HFP、HID 等协议 profile。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-connection.md#connectionconnectallowedprofiles16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增持久化存储对端蓝牙设备虚拟 MAC 地址的功能。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-access.md#accessaddpersistentdeviceid16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增蓝牙 BLE 扫描围栏模式，可实现首次扫描到 BLE 广播报文时上报进入围栏，扫描不到 BLE 广播报文时上报离开围栏，并携带 BLE 广播报文信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-ble.md#scanreportmode15"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;完善蓝牙搜索到的设备信息，新增获取设备 RSSI（信号强度）、名称和类别信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-connection.md#discoveryresult18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增异步读取和发送蓝牙 socket 数据的功能，如果链路断开，会上报 IO 异常。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-bluetooth-socket.md#socketsppwriteasync18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;位置服务&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持订阅蓝牙扫描信息上报事件用于辅助定位。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-location-kit/js-apis-geoLocationManager.md#geolocationmanageronbluetoothscanresultchange16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;网络管理&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持获取 TLSSocket 的文件描述符。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-network-kit/js-apis-socket.md#getsocketfd16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;剪贴板&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;剪贴板支持获取剪贴板的内容变化的次数。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-pasteboard.md#getchangecount18"&gt;API 参考-ArkTS API&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/_pasteboard.md#oh_pasteboard_getchangecount"&gt;API 参考-C API&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;输入法&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;输入法框架新增支持设置显示预览文本时的回调（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethod.md#setpreviewtextcallback17"&gt;API 参考&lt;/a&gt;），支持订阅输入法应用操作文本预览内容的事件（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethod.md#onsetpreviewtext17"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; 
&lt;h3&gt;Web&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持获取上一次被点击区域的元素信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/js-apis-webview.md#getlasthittest18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持设置 Web 组件是否开启字重跟随系统设置变化。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#enablefollowsystemfontweight18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持 Web 内音视频可对接到播控中心。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#enablewebavsession18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;对接 W3C 规范，支持通过 accept 指定上传的文件类型。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#onshowfileselector9"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;提供静态方法，清除应用中的资源缓存文件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/js-apis-webview.md#removeallcache18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持以固定宽高设置同层渲染的元素。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-arkweb/ts-basic-components-web.md#nativeembedoptions16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;多模输入&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;新增支持设置处于前台的应用操作指定按键的回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-input-kit/js-apis-inputconsumer.md#inputconsumeronkeypressed16"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;上传下载&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;上传下载支持应用缓存下载能力，支持应用提前缓存文件到沙箱目录或内存中。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-request-cacheDownload.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;上传下载 agent 接口支持设置任务最高限速（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-request.md#setmaxspeed18"&gt;API 参考&lt;/a&gt;），支持设置待上传文件在表单中的 content-type 字段（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-basic-services-kit/js-apis-request.md#filespec10"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;资源调度&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增后台子进程管理模块，提供应用对子进程进行压制、解压制的能力，避免子进程过多占用系统资源，导致系统使用卡顿。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-backgroundtasks-kit/js-apis-backgroundProcessManager.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;后台代理提醒中提醒标题、提醒内容等字段支持设置资源 ID，用于全球化适配。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-backgroundtasks-kit/js-apis-reminderAgentManager.md#reminderrequest"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;全球化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取用户偏好温度单位和周起始日的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#gettemperaturetype18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持时间日期/数字精细化格式化的能力，便于更灵活的使用格式化能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#i18ngetsimpledatetimeformatbypattern18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持返回富文本的数字格式化能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#stylednumberformat18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持路径本地化显示的能力，可以根据输入语言判断路径是否需要镜像显示。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-localization-kit/js-apis-i18n.md#getunicodewrappedfilepath18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;测试框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持按照模糊匹配/正则匹配方式查找符合条件的控件 id、type 的能力。（API 参考：&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#id18"&gt;id&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#type18"&gt;type&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持获取控件提示文本（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#gethint18"&gt;API 参考&lt;/a&gt;），并根据控件提示文本查找控件（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#hint18"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增支持横向纵向查找控件，仅适用于支持滑动的控件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-5.1.0-Release/zh-cn/application-dev/reference/apis-test-kit/js-apis-uitest.md#scrollsearch18"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;完整更新说明：&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/release-notes/OpenHarmony-v5.1.0-release.md"&gt;OpenHarmony-v5.1.0-release&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349677/openharmony-v5-1-release</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349677/openharmony-v5-1-release</guid>
      <pubDate>Sat, 10 May 2025 11:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 Java Solon v3.3.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;Solon 框架！&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon 是新一代，Java 企业级应用开发框架。&lt;strong&gt;从零开始构建（No Java-EE），有灵活的接口规范与开放生态&lt;/strong&gt;。采用商用友好的 Apache 2.0 开源协议，是「杭州无耳科技有限公司」开源的根级项目，是 Java 应用开发的生态基座（可替换 Spring 生态）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;追求： 快速、小巧、简洁&lt;/li&gt; 
 &lt;li&gt;提倡： 克制、高效、开放&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;7 年开源时长，累计代码提交 1.6 万次 ，近半年下载量 1200 万次。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;有透明可预期的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F687" target="_blank"&gt;《版本发布与维护计划》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;有「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Fsupport" target="_blank"&gt;【社区交流】&lt;/a&gt;」和「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Fbiz" target="_blank"&gt;【商业服务】&lt;/a&gt;」双重技术支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;有什么特点（相对 Java Spring 方案）？&lt;/h2&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;特点&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更高的计算性价比&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;并发高 700%；内存省 50%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更快的开发效率&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;代码少；入门简单；启动快 10 倍（调试快）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更好的生产与部署体验&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;打包小 90%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更大的兼容范围&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;非 java-ee 架构；同时支持 java8 ～ java24，graalvm native image&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;最新的 techempower 测试数据：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techempower.com%2Fbenchmarks%2F%23hw%3Dph%26test%3Djson%25C2%25A7ion%3Ddata-r23" target="_blank"&gt;https://www.techempower.com/benchmarks/#hw=ph&amp;amp;test=json§ion=data-r23&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techempower.com%2Fbenchmarks%2F%23hw%3Dph%26test%3Dplaintext%25C2%25A7ion%3Ddata-r23" target="_blank"&gt;https://www.techempower.com/benchmarks/#hw=ph&amp;amp;test=plaintext§ion=data-r23&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目架构示意图（全场景应用开发支持）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//f00a33f6ce859426882daec71e77f3d8.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;最近更新了什么？（每个版本都会有满满的清单）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon 快如闪电！智也非凡！从 v3.1 起，提供完整的 AI 应用开发支持（Solon AI 同时支持 java8 到 java24）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 solon-ai-repo-dashvector 插件&lt;/li&gt; 
 &lt;li&gt;新增 seata-solon-plugin 插件&lt;/li&gt; 
 &lt;li&gt;新增 solon-data Ds 注解（为统一数据源注入作准备）&lt;/li&gt; 
 &lt;li&gt;插件 solon-ai 三次预览&lt;/li&gt; 
 &lt;li&gt;插件 solon-ai-mcp 二次预览&lt;/li&gt; 
 &lt;li&gt;调整 solon Cookie,Header,Param 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;required&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;默认改为 true (便与 mcp 复用)&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai 移除 ToolParam 注解，改用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Param&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注解（通用参数注解）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai ToolMapping 注解移到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;org.noear.solon.ai.annotation&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai FunctionToolDesc:param 改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paramAdd&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;风格&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai MethodToolProvider 取消对 Mapping 注解的支持（利于跨生态体验的统一性）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-mcp McpClientToolProvider 更名为 McpClientProvider（实现的接口变多了））&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai 拆分为 solon-ai-core 和 solon-ai-model-dialects（方便适配与扩展）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai 模型方言改为插件扩展方式&lt;/li&gt; 
 &lt;li&gt;优化 nami 的编码处理&lt;/li&gt; 
 &lt;li&gt;优化 nami-channel-http HttpChannel 表单提交时增加集合参数支持（自动拆解为多参数）&lt;/li&gt; 
 &lt;li&gt;优化 solon Param 注解，添加字段支持&lt;/li&gt; 
 &lt;li&gt;优化 solon 允许 MethodWrap 没有上下文的用况&lt;/li&gt; 
 &lt;li&gt;优化 solon-web-sse 边界，允许 SseEmitter 未提交之前就可 complete&lt;/li&gt; 
 &lt;li&gt;优化 solon-serialization JsonPropsUtil.apply 分解成本个方法，按需选择&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai 允许 MethodFunctionTool,MethodFunctionPrompt,MethodFunctionResource 没有 solon 上下文的用况&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;model.options(o-&amp;gt;{})&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可多次调用&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp McpClientProvider 同时实现 ResourceProvider, PromptProvider 接口&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-repo-redis metadataIndexFields 更名为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;metadataFields&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;（原名标为弃用）&lt;/li&gt; 
 &lt;li&gt;添加 nami NamiParam 注解支持&lt;/li&gt; 
 &lt;li&gt;添加 nami 文件（&lt;code&gt;UploadedFile&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;File&lt;/code&gt;）上传支持&lt;/li&gt; 
 &lt;li&gt;添加 nami 对 solon Mapping 相关注解的支持&lt;/li&gt; 
 &lt;li&gt;添加 nami 自动识别 File 或 UploadedFile 参数类型，并自动转为 FORM_DATA 提交&lt;/li&gt; 
 &lt;li&gt;添加 solon Mapping:headers 属性（用于支持 Nami 用况）&lt;/li&gt; 
 &lt;li&gt;添加 solon Body:description,Param:description,Header:description,Cookie:description 属性（用于支持 MCP 用况）&lt;/li&gt; 
 &lt;li&gt;添加 solon UploadedFile 基于 File 构造方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-net-httputils HttpUtilsBuilder:proxy 方法（设置代理）&lt;/li&gt; 
 &lt;li&gt;添加 solon-net-httputils HttpProxy 类&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatSubscriberProxy 用于控制外部订阅者，只触发一次 onSubscribe&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientProperties:httpProxy 配置&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientToolProvider isStarted 状态位（把心跳开始，转为第一次调用这后）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientToolProvider:readResourceAsText,readResource,getPromptAsMessages,getPrompt 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:getVersion,getChannel,getSseEndpoint,getTools,getServer 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:addResource,addPrompt 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:Builder:channel 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp ResourceMapping 和 PromptMapping 注解（支持资源与提示语服务）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpoint AOP 支持（可支持 solono auth 注解鉴权）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpoint 实体参数支持（可支持 solon web 的实体参数、注解相通）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mpc&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Tool.returnDirect&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性透传（前后端都有 solon-ai 时有效，目前还不是规范）&lt;/li&gt; 
 &lt;li&gt;修复 solon 由泛型桥接方法引起的泛型失真问题&lt;/li&gt; 
 &lt;li&gt;修复 solon Utils.getFile 在 window 下绝对位置失效的问题&lt;/li&gt; 
 &lt;li&gt;修复 solon-net-httputils OkHttpUtils 不支持 post 空提交的问题&lt;/li&gt; 
 &lt;li&gt;修复 nami-channel-http 不支持 post 空提交的问题&lt;/li&gt; 
 &lt;li&gt;修复 solon-serialization-fastjson2 在配置全局时间格式化后，个人注解格式化会失效的问题&lt;/li&gt; 
 &lt;li&gt;修复 solon Utils.getFile 在 window 下绝对位置失效的问题&lt;/li&gt; 
 &lt;li&gt;snack3 升为 3.2.133&lt;/li&gt; 
 &lt;li&gt;dbvisitor 升为 6.0.0&lt;/li&gt; 
 &lt;li&gt;sa-token 升为 1.42.0&lt;/li&gt; 
 &lt;li&gt;mybatis-flex 升为 1.10.9&lt;/li&gt; 
 &lt;li&gt;smart-http 升为 2.5.10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目仓库地址？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;gitee：&lt;a href="https://gitee.com/opensolon/solon"&gt;https://gitee.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitcode:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fopensolon%2Fsolon" target="_blank"&gt;https://gitcode.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopensolon%2Fsolon" target="_blank"&gt;https://github.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;官网？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2F" target="_blank"&gt;https://solon.noear.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349666/solon-3-3-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349666/solon-3-3-0-released</guid>
      <pubDate>Sat, 10 May 2025 10:22:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Excelize 开源基础库发布 2.9.1 版本更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img alt="Excelize 开源基础库发布 2.9.1 版本更新" height="600" src="https://oscimg.oschina.net/oscnet/up-4ffd16b521fea1e779757d02c6fd2a4c29f.jpg" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"&gt;Excelize 是 Go 语言编写的用于操作 Office Excel 文档基础库，基于 ECMA-376，ISO/IEC 29500 国际标准。可以使用它来读取、写入由 Microsoft Excel™ 2007 及以上版本创建的电子表格文档。支持 XLAM / XLSM / XLSX / XLTM / XLTX 等多种文档格式，高度兼容带有样式、图片 (表)、透视表、切片器等复杂组件的文档，并提供流式读写 API，用于处理包含大规模数据的工作簿。可应用于各类报表平台、云计算、边缘计算等系统。入选 2020 Gopher China - Go 领域明星开源项目 (GSP)、2018 年开源中国码云最有价值开源项目 GVP (Gitee Most Valuable Project)，目前已成为 Go 语言最受欢迎的 Excel 文档基础库。&lt;/p&gt; 
&lt;h2&gt;开源代码&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li style="color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: start;"&gt;&lt;strong&gt;GitHub:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize" target="_blank"&gt;github.com/xuri/excelize&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: start;"&gt;&lt;strong&gt;Gitee:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/xurime/excelize"&gt;gitee.com/xurime/excelize&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(36, 41, 46); margin-left: 0px; margin-right: 0px; text-align: start;"&gt;&lt;strong&gt;中文文档:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxuri.me%2Fexcelize%2Fzh-hans" target="_blank"&gt;xuri.me/excelize/zh-hans&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;版本说明&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;此版本中最显著的变化包括：&lt;/p&gt; 
&lt;h3&gt;兼容性提示&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;升级 Go 语言版本要求至 1.23 或更高版本，以升级依赖包&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;golang.org/x/crypto&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DataValidationType&lt;/code&gt;、&lt;code&gt;DataValidationErrorStyle&lt;/code&gt;、&lt;code&gt;DataValidationOperator&lt;/code&gt;、&lt;code&gt;PictureInsertType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的数据类型由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;int&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;变更为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetCellInt&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的形参类型改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;int64&lt;/code&gt;，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2068" target="_blank"&gt;#2068&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加图片、图表、形状和表单控件等绘图对象时，偏移设置将不再影响绘图对象的尺寸，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2001" target="_blank"&gt;#2001&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;新增功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Chart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GapWidth&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Overlap&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChartPlotArea&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ShowDataTable&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ShowDataTableKeys&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChartAxis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Alignment&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChartSeries&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DataLabel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;PageLayoutOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据类型中新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;PageOrder&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;字段&lt;/li&gt; 
 &lt;li&gt;新增 2 项错误变量：&lt;code&gt;ErrPageSetupAdjustTo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ErrStreamSetColStyle&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增 2 项枚举类型：&lt;code&gt;HeaderFooterImagePositionType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IgnoredErrorsType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增 2 项数据类型：&lt;code&gt;CalcPropsOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HeaderFooterImageOptions&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增 2 项函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetCalcProps&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GetCalcProps&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置和获取工作簿计算属性&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CultureNameJaJP&lt;/code&gt;、&lt;code&gt;CultureNameKoKR&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CultureNameZhTW&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;枚举值，用于读取带有日本年号、韩国檀君纪元（檀纪）和民国纪年数字格式的单元格，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F1885" target="_blank"&gt;#1885&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddHeaderFooterImage&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数，支持在页眉和页脚中设置图片，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F1395" target="_blank"&gt;#1395&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddIgnoredErrors&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数，支持忽略特定单元格范围内的错误，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2046" target="_blank"&gt;#2046&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetColStyle&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数，支持流式写入时设置列样式，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2075" target="_blank"&gt;#2075&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置图表座标轴文本方向和旋转角度，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2025" target="_blank"&gt;#2025&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置柱状图和条形图的间隙宽度和重叠程度，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2033" target="_blank"&gt;#2033&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置数据系列标签的格式，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2052" target="_blank"&gt;#2052&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddChartSheet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置位于图表绘图区域下方的数据表，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2117" target="_blank"&gt;#2117&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AddFormControl&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数支持为复选框类型的表单控件设置单元格超链接，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2113" target="_blank"&gt;#2113&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetPageLayout&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持设置页面布局的页面顺序&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DeletePicture&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持删除带有单一单元格锚定类型的图片，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2059" target="_blank"&gt;#2059&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;函数&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetPageLayout&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;增加了对选项参数的检查，如果给定的选项值无效，将返回错误提示信息&lt;/li&gt; 
 &lt;li&gt;支持跨多个工作表调整数据验证，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2072" target="_blank"&gt;#2072&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持应用带&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;#&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;号和零占位符的数字格式，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2058" target="_blank"&gt;#2058&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持应用带&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;?&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;符号的数字格式&lt;/li&gt; 
 &lt;li&gt;支持通过指定 "oneCell" 定位类型添加带有单一单元格锚定类型的绘图对象，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2002" target="_blank"&gt;#2002&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 v2.9.0 中引入的问题，修改由流式写入生成的工作簿后，打开后提示文档损坏问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2015" target="_blank"&gt;#2015&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下生成重复的「无填充」格式问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2014" target="_blank"&gt;#2014&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下单元格垂直或水平边框样式丢失问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2048" target="_blank"&gt;#2048&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下条件格式边框样式丢失的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2061" target="_blank"&gt;#2061&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下获取数据透视表时出现 panic 的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F1954" target="_blank"&gt;#1954&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2051" target="_blank"&gt;#2051&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GetStyle&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数无法获取&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;VertAlign&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;格式的问题&lt;/li&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CalcCellValue&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数在部分情况下子表达式计算错误的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2083" target="_blank"&gt;#2083&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下因图片引用检查有误导致的错误删除图片问题&lt;/li&gt; 
 &lt;li&gt;修复流式写入时，非零行样式 ID 未覆盖默认单元格样式的问题&lt;/li&gt; 
 &lt;li&gt;修复流式写入时，部分情况下将在工作簿内部生成重复的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;col&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;XML 元素问题&lt;/li&gt; 
 &lt;li&gt;修复部分情况下设置图表标题字体时出现的 panic 问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2102" target="_blank"&gt;#2102&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复部分情况下删除公式计算链时出现的 panic 问题&lt;/li&gt; 
 &lt;li&gt;修复因共享公式解析错误导致的公式计算结果有误问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2056" target="_blank"&gt;#2056&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复当工作簿内部包含大于 4GB 的部件时，生成的 ZIP64 格式文档损坏问题&lt;/li&gt; 
 &lt;li&gt;修复当部分情况下重命名工作表时，自定义名称中的工作表名称更新有误的问题，解决 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2126" target="_blank"&gt;#2126&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用深拷贝库&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;github.com/tiendc/go-deepcopy&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;代替&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;github.com/mohae/deepcopy&lt;/code&gt;，深度拷贝速度提升 3 倍，相关 issue&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize%2Fissues%2F2029" target="_blank"&gt;#2029&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 v2.9.0 中引入的问题，避免对空白单元格的值进行修剪以降低内存分配&lt;/li&gt; 
 &lt;li&gt;提高公式计算引擎对带有整行或整列单元格引用公式的计算速度&lt;/li&gt; 
 &lt;li&gt;行迭代器读取速度最高提升约 20%，内存分配降低约 10%&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go Modules 依赖模块更新&lt;/li&gt; 
 &lt;li&gt;单元测试与文档更新&lt;/li&gt; 
 &lt;li&gt;包含阿拉伯语、德语、英语、西班牙语、法语、意大利语、日语、韩语、葡萄牙语、俄语、简体中文和繁体中文的&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fxuri.me%2Fexcelize" target="_blank"&gt;多国语言文档网站&lt;/a&gt;更新&lt;/li&gt; 
 &lt;li&gt;支持 WebAssembly / JavaScript 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize-wasm" target="_blank"&gt;excelize-wasm&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;NPM 包发布版本更新&lt;/li&gt; 
 &lt;li&gt;支持 Python 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuri%2Fexcelize-py" target="_blank"&gt;excelize&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;PyPI 包发布版本更新&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349629/excelize-2-9-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349629/excelize-2-9-1-released</guid>
      <pubDate>Sat, 10 May 2025 07:37:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Notepad-- v3.3 已经发布，文本编辑器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Notepad-- v3.3 已经发布，文本编辑器&lt;/p&gt;
&lt;p&gt;此版本更新内容包括：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;windows&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Notepad--v3.3.0-plugin-Installer.exe 是 win10 下面的插件版安装包，会关联右键菜单等。 Notepad--v3.3.0-win10-portable.zip 是绿色免安装版本，解压即用，不会关联右键菜单注册表。&lt;/p&gt; 
&lt;p&gt;windows-qt6 版本&lt;/p&gt; 
&lt;p&gt;Notepad--v3.3-qt6-portable.zip 是 windwos 下 qt6 的版本，qt6 对高清 4K 幕适应更好。目前还是预览版，暂时不放在 gitee。网盘位置：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.123pan.com%2Fs%2FDkxzVv-BwJVh.html" target="_blank" rel="nofollow"&gt;https://www.123pan.com/s/DkxzVv-BwJVh.html&lt;/a&gt; 如果您使用高清大屏，愿意帮助内测 ndd qt6 版本，还请在网盘自取。&lt;/p&gt; 
&lt;p&gt;其余系统版本后续会发布。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.3 修改如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1 解决了 win10 暗色主题下标题栏白色的问题。&lt;/p&gt; 
&lt;p&gt;2 历史修改标记功能可在视图中关闭。&lt;/p&gt; 
&lt;p&gt;3 macos 云盘导致重加载弹窗误提示情况尝试解决&lt;/p&gt; 
&lt;p&gt;4 修正扩展替换模式下，关键字输入框消失故障。&lt;/p&gt; 
&lt;p&gt;5 临时文件也可以选择对比。&lt;/p&gt; 
&lt;p&gt;6 解决 qt6 下面水平滚动向左失灵的问题。水平滚动 macos 向左失败&lt;/p&gt; 
&lt;p&gt;7 微调：选中从 1 千扩大到 1 万 2 宏运行回车即可执行&lt;/p&gt; 
&lt;p&gt;8 微调：关闭 Python 自动空白提示；cpp html 的字体为 melo&lt;/p&gt; 
&lt;p&gt;9 处理 macos 下面设置目录没有权限或无法生效问题，做个备份目录。&lt;/p&gt; 
&lt;p&gt;10 黑色模式下 tab 标签不选中时隐藏关闭按钮，3 暗黑模式的关闭按钮不要红色，用户说刺眼。&lt;/p&gt; 
&lt;p&gt;11 微调：豆沙绿下面历史修改标记颜色调整，避免红色与绿色刺眼。&lt;/p&gt; 
&lt;p&gt;12 微调：去除空白可匹配选区中去除&lt;/p&gt; 
&lt;p&gt;13 快捷键重设置失败问题解决&lt;/p&gt; 
&lt;p&gt;14 文件夹列表打开情况下，保存 new 文件时，当前保存路径自动选择为文件夹列表中选中的目录&lt;/p&gt; 
&lt;p&gt;拼语言插件功能完善： 1 excel 支持写入公式。 2 增加内存池，加快速度。 3 增加文件或表格等异常时做关闭保护。 4 提供单个变量 print 格式化输出时，可以不需要括号。 5 插入列表按元素插入。&lt;/p&gt;
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/cxasm/notepad--/releases/v3.3" rel="nofollow"&gt;https://gitee.com/cxasm/notepad--/releases/v3.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349591</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349591</guid>
      <pubDate>Sat, 10 May 2025 05:24:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Hikyuu 2.6.1 发布，开源高性能量化交易框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;Hikyuu Quant Framework 基于 C++/Python 的极速量化交易框架，同时可基于策略部件进行资产重用，快速累积策略资产&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;更多信息，参见:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目主页:&lt;span&gt; &lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhikyuu.org" target="_blank"&gt;https://hikyuu.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitee 地址：&lt;a href="https://gitee.com/fasiondog/hikyuu"&gt;https://gitee.com/fasiondog/hikyuu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github 地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffasiondog%2Fhikyuu" target="_blank"&gt;https://github.com/fasiondog/hikyuu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;hub 地址: &lt;a href="https://gitee.com/fasiondog/hikyuu_hub"&gt;https://gitee.com/fasiondog/hikyuu_hub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;2.6.1 版本主要更新&lt;/strong&gt;&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;功能优化&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;改进 tdx 本地数据导入, 支持北交所, 股票代码、权息、财务等使用 pytdx&lt;/li&gt; 
   &lt;li&gt;优化 CVAL 创建，提升指标优化性能&lt;/li&gt; 
   &lt;li&gt;四舍五入从银行家算法更换为国内常用的传统四舍五入法&lt;/li&gt; 
   &lt;li&gt;SE 加上公共参数 get_n 参数只获取前多少选中系统，方便 SE 组合运算后获取结果&lt;/li&gt; 
   &lt;li&gt;importdata 增加命令行参数控制是否导入 K 线数据, 如果传递了 --ignore-kdata 参数，则不导入任何类型的 K 线数据&lt;/li&gt; 
   &lt;li&gt;优化动态库加载方式，以便一些插件能够顺利加载&lt;/li&gt; 
   &lt;li&gt;Strategy 优化 getKData 函数处理未来时间的逻辑和参数默认值&lt;/li&gt; 
   &lt;li&gt;为 MultiFactorBase 添加并行计算选项 "parallel" 参数，默认值为 true&lt;/li&gt; 
   &lt;li&gt;优化 SimplePortfolio 调仓逻辑: 保护对延迟买卖系统可能造成的未来操作及其他&lt;/li&gt; 
   &lt;li&gt;add python util func: hku_benchmark&lt;/li&gt; 
   &lt;li&gt;优化 AF, 对于当日买入的股票，延迟到下一个交易日开盘时处理，避免在当天卖出&lt;/li&gt; 
   &lt;li&gt;调整 PRICELIST 指标, 只允许作为子节点, 不再接收以 Indicator 作为输入，容易造成误解（语义不符）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;缺陷修复&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;fix(trade_sys): 修复无数据股票因子计算问题&lt;/li&gt; 
   &lt;li&gt;fix(indicator): 修复 IF 指标丢弃期逻辑&lt;/li&gt; 
   &lt;li&gt;fix(indicator): 修复 LAST 指标中的参数使用错误&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349587/hikyuu-2-6-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349587/hikyuu-2-6-1-released</guid>
      <pubDate>Sat, 10 May 2025 05:16:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>CrateDB 5.10.6 发布，分布式 SQL 数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;CrateDB 是一个分布式的 SQL 数据库，使得实时存储和分析大量的机器数据变得简单。CrateDB 提供了通常与 NoSQL 数据库相关的可扩展性和灵活性，最小的 CrateDB 集群可以轻松地每秒摄取数万条记录。这些数据可以在整个集群中实时地、临时地、并行地进行查询。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;CrateDB 5.10.6 现已正式发布，该版本更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复了一个问题，该问题可能导致&lt;code&gt;array(object)&lt;/code&gt;列的下标表达式返回空值，例如在&lt;code&gt;INDEX&lt;/code&gt; 定义中用作表达式时：&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;pre&gt;&lt;span style="color:#000000"&gt;create table t (
  obj object as (details array(object as (names text[]))),
  index ft using fulltext (obj['details']['names'])
)
&lt;/span&gt;&lt;/pre&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LIKE&amp;nbsp;ANY&lt;/code&gt;现在的行为与其他与&lt;code&gt;ANY&lt;/code&gt;搭配使用的运算符相同，并会根据需要用&lt;code&gt;array_unnest&lt;/code&gt;对右侧进行包装，从而自动调整维数。&lt;/li&gt; 
 &lt;li&gt;修复了一个 Bug，在 5.5 之前的 CrateDB 版本中，当通过&lt;code&gt;doc['column']&lt;/code&gt;对列进行寻址时，最初创建的列引用会返回&lt;code&gt;NULL&lt;/code&gt;而不是其实际值。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcratedb.com%2Fdocs%2Fcrate%2Freference%2Fen%2Flatest%2Fappendices%2Frelease-notes%2F5.10.6.html" target="_blank"&gt;查看更新说明&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349579/cratedb-5-10-6-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349579/cratedb-5-10-6-released</guid>
      <pubDate>Sat, 10 May 2025 03:30:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>DjangoAdmin 敏捷开发框架 FastAPI+AntdVue 版本 v2.5.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.5.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、优化鉴权中间件，支持非管理员鉴权认证；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、解决权限节点列表失效问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、优化用户模块，支持动态获取添加用户主键；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;4、优化菜单模块，支持动态获取添加菜单主键；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;5、优化获取模块详情路由规则；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;6、优化模块详情方法权限节点；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;7、优化单图组件，新增图片地址判空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;8、优化城市表单验证，移除上级 ID 判空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;9、优化开关组件，支持入参控制其他控件；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;10、优化广告模块，支持广告封面可以为空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;11、优化栏目模块，支持栏目图片可以为空；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;12、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;div&gt; 
            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;一款基于 Fastapi、Vue3、AntDesign、MySQL 等技术栈研发的前后端分离开发框架，设计之初就定位为一款高端产品，采用全新的架构设计，后端服务和前端都是采用全新的设计方案，兼容手机、PAD 和 PC 电脑端，具备良好的用户使用体验；框架拥有完善的 (RBAC) 权限架构和基础核心管理模块，权限控制精细化到按钮节点级别颗粒度控制，根据不同的角色分配不同的权限即可实现；为了避免重复造轮子，系统本身已经集成了基础模块，包括常规的权限管理、字典、配置、行政区划等等常规模块；开发者可以基于框架做二次开发，可以用户个人项目、公司项目以及客户定制化项目，本框架为一站式系统框架开发平台，可以帮助开发者提升开发效率、降低研发成本，同时便于后期的系统维护升级。&lt;/p&gt; 
            &lt;h2&gt;软件信息&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;软件名称：DjangoAdmin 敏捷开发框架 FastAPI+AntdVue 版本&lt;/li&gt; 
             &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoadmin.cn" target="_blank"&gt;https://www.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.fastapi.antdvue.djangoadmin.cn" target="_blank"&gt;http://docs.fastapi.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.fastapi.antdvue.djangoadmin.cn" target="_blank"&gt;http://manage.fastapi.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;版本说明&lt;/h2&gt; 
            &lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;th&gt;版本名称&lt;/th&gt; 
               &lt;th&gt;版本说明&lt;/th&gt; 
               &lt;th&gt;版本地址&lt;/th&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;FastAPI+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 FastAPI、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;FastAPI+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 FastAPI、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;FastAPI+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 FastAPI、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
            &lt;/table&gt; 
            &lt;h2&gt;模块展示&lt;/h2&gt; 
            &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-7dd1d0abdb572e300160c22888d34f366a0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349546</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349546</guid>
      <pubDate>Fri, 09 May 2025 22:50:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>k8m v0.0.106 已经发布，轻量级的 Kubernetes 仪表板</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;k8m v0.0.106 已经发布，轻量级的 Kubernetes 仪表板&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Merge pull request #151 from weibaohui/coderabbitai/docstrings/14vqsP9…&lt;/li&gt; 
 &lt;li&gt;Merge pull request #149 from weibaohui/cluster-permission-ns-ui&lt;/li&gt; 
 &lt;li&gt;Add docstrings to &lt;code&gt;cluster-permission-ns-ui&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Merge pull request #150 from weibaohui/coderabbitai/docstrings/14vqsP9…&lt;/li&gt; 
 &lt;li&gt;Add docstrings to &lt;code&gt;cluster-permission-ns-ui&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;feat(admin): 新增集群命名空间列表接口并优化命名空间选择功能&lt;/li&gt; 
 &lt;li&gt;docs(CHANGELOG): 更新 CHANGELOG.md 中的图片编号&lt;/li&gt; 
 &lt;li&gt;Merge pull request #148 from weibaohui/clean-mcp&lt;/li&gt; 
 &lt;li&gt;Merge pull request #147 from weibaohui/port-forward&lt;/li&gt; 
 &lt;li&gt;fix(pod_forward): 添加 podPort 的整数验证&lt;/li&gt; 
 &lt;li&gt;Merge pull request #145 from weibaohui/port-forward&lt;/li&gt; 
 &lt;li&gt;docs: 更新 CHANGELOG.md 以记录 v0.0.106 版本新增功能&lt;/li&gt; 
 &lt;li&gt;feat(UI): 在 Pod 页面新增端口转发功能&lt;/li&gt; 
 &lt;li&gt;feat(pod): 优化端口转发功能并添加随机端口生成&lt;/li&gt; 
 &lt;li&gt;feat(pod): 添加 Pod 端口转发功能&lt;/li&gt; 
 &lt;li&gt;build: 更新依赖库版本&lt;/li&gt; 
 &lt;li&gt;Merge pull request #144 from weibaohui/antdesign-x&lt;/li&gt; 
 &lt;li&gt;Merge pull request #143 from weibaohui/fix-login-page-alert&lt;/li&gt; 
 &lt;li&gt;chore: 更新前端依赖包版本&lt;/li&gt; 
 &lt;li&gt;feat(middleware): 添加 AuthMiddleware 并更新路由和错误处理&lt;/li&gt; 
 &lt;li&gt;chore: 更新 k8m 镜像版本至 v0.0.104&lt;/li&gt; 
 &lt;li&gt;fix(mcp_host): 处理生成 JWT 令牌时的错误&lt;/li&gt; 
 &lt;li&gt;Merge pull request #140 from weibaohui/update-version&lt;/li&gt; 
 &lt;li&gt;feat(about): 添加 go 版本、编译器和平台信息&lt;/li&gt; 
 &lt;li&gt;feat(version): 添加 Go 版本、编译器和平台信息&lt;/li&gt; 
 &lt;li&gt;chore(deploy): 更新 k8m 镜像版本至 v0.0.103&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href="https://gitee.com/weibaohui/k8m/compare/v0.0.103...v0.0.106" target="_blank"&gt;https://gitee.com/weibaohui/k8m/compare/v0.0.103...v0.0.106&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/weibaohui/k8m/releases/v0.0.106"&gt;https://gitee.com/weibaohui/k8m/releases/v0.0.106&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/349527/k8m-0-0-106-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/349527/k8m-0-0-106-released</guid>
      <pubDate>Fri, 09 May 2025 15:33:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
  </channel>
</rss>
