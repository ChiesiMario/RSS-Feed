<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 31 May 2024 12:20:33 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>真好用的 ORM 框架 mybatis-mp 1.5.3 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;官方文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;http://mybatis-mp.cn&lt;/a&gt;&lt;/h1&gt; 
&lt;h2&gt;1.5.3 更新：&lt;/h2&gt; 
&lt;p&gt;1：优化分页 paging,让开发者可以继承 Pager，并分页是无需再转换&lt;br&gt; 2：兼容普通 VO，实现字段名映射，lambda 映射，例如：.selectWithFun(SysAuthority::getParentId, c -&amp;gt; c.as(Tree::getParentId))&lt;br&gt; 3：修复 sql 模板 as 不生效的问题&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUserVo sysUserVo = QueryChain.of(sysUserMapper)
          .select(SysUserVo&lt;span&gt;.&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;
          .from(SysUser&lt;span&gt;.&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;
          .join(SysUser&lt;span&gt;.&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;, &lt;span style=&quot;color:#d73a49&quot;&gt;SysRole.class)&lt;/span&gt;&lt;/span&gt;
          .returnType(SysUserVo&lt;span&gt;.&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;
          .&lt;span style=&quot;color:#d73a49&quot;&gt;get&lt;/span&gt;();&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;10 大与众不同的亮点：&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点一：可自定义动态默认值&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点二：支持不同数据库 ID 自增配置&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点三：逻辑删除，可自动填充删除时间&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;4：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点四：可自定义 sql（sql 模板）&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;5：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点五：mapWithKey（把查询转成一个&amp;nbsp;map）&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;6：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点&amp;nbsp;六：部分字段&amp;nbsp;新增&amp;nbsp;和&amp;nbsp;修改&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;7：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点七：枚举的良好支持&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;8：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点八：mybatis-xml&amp;nbsp;returnType&amp;nbsp;的&amp;nbsp;ORM&amp;nbsp;映射&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;9：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点九：优雅的&amp;nbsp;XML 和&amp;nbsp;@Select 查询&amp;nbsp;自动分页&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;10：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点十：支持多层嵌套 VO，自动映射以及自动 select&amp;nbsp;所需列&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;mybatis-mp 包含丰富的 api：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;1：基于注解，映射数据库；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2：支持多表 join 和返回；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;3：api 采用 lambda 和 stream 流式设计；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;5：内置分页以及超强的 sql 优化功能；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;6：稳定且性能极优；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7：轻量级封装 mybatis，几乎没有侵入；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;9：零学习成本，和写 sql 一样方便。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;11：支持自定义 sql 模板，再也不用担心框架支持不足；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;12：内置代码生成器，通过配置，可定制自身规范；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;13：全新的框架，全新的设计理念，新的就是好！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295175/mybatis-mp-1-5-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295175/mybatis-mp-1-5-3-released</guid>
            <pubDate>Fri, 31 May 2024 07:35:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>gRPC 1.64.1 发布，跨语言 RPC 框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;gRPC 是可以在任何环境中运行的现代开源高性能 RPC 框架。gRPC 1.64.1 现已发布，包含了一些完善、改进和错误修复；具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;Core&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[StatsPlugin] 修复 use-after-free 问题 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36664&quot; target=&quot;_blank&quot;&gt;#36664&lt;/a&gt;)(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36670&quot; target=&quot;_blank&quot;&gt;#36670&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;C++&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[OTel] 为 grpcpp_otel_plugin 生成 pkg-config 文件 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36686&quot; target=&quot;_blank&quot;&gt;#36686&lt;/a&gt;)(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36722&quot; target=&quot;_blank&quot;&gt;#36722&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;[OTel] 在已安装的 gRPC 配置中添加对 OTel 依赖项的 find_package 调用 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36674&quot; target=&quot;_blank&quot;&gt;#36674&lt;/a&gt;)(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36688&quot; target=&quot;_blank&quot;&gt;#36688&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Python&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;[Python Server] 删除 add_registered_method_handlers 的 abstractmethod notation（v1.64.x backport）。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Fpull%2F36696&quot; target=&quot;_blank&quot;&gt;#36696&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrpc%2Fgrpc%2Freleases%2Ftag%2Fv1.64.1&quot; target=&quot;_blank&quot;&gt;https://github.com/grpc/grpc/releases/tag/v1.64.1&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295157/grpc-1-64-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295157/grpc-1-64-1-released</guid>
            <pubDate>Fri, 31 May 2024 06:12:03 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Bun 的五月更新：性能提升与内存优化</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;在刚刚过去的五月，Bun 团队只发布了三个小版本更新（v1.1.8、v1.1.9 和 v1.1.10），在不断优化性能和提升稳定性的同时，也为开发者带来了许多新的功能和改进。这些更新不仅修复了大量的 bug，还对关键功能进行了显著的优化，尤其是 fetch 函数的内存使用效率。&lt;/p&gt; 
&lt;h4&gt;主要更新内容概述&lt;/h4&gt; 
&lt;p&gt;这三次更新总共修复了超过 140 个 bug，涉及从 Windows 平台稳定性到 Node.js 兼容性的各个方面。以下是几个关键改进：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;异常处理改进&lt;/strong&gt;：添加了对&lt;code&gt;process.on(&quot;uncaughtException&quot;)&lt;/code&gt;和&lt;code&gt;process.on(&quot;unhandledRejection&quot;)&lt;/code&gt;的支持，提升了应用程序的错误处理能力。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;性能优化&lt;/strong&gt;：多项功能性能提升显著，例如&lt;code&gt;JSON.parse&lt;/code&gt;速度加快，&lt;code&gt;atob()&lt;/code&gt;函数提速 8 倍，&lt;code&gt;toString(&#39;base64url&#39;)&lt;/code&gt;提速 5 倍，&lt;code&gt;fetch()&lt;/code&gt;函数提速并减少内存使用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;新功能添加&lt;/strong&gt;：新增了&lt;code&gt;dns.prefetch()&lt;/code&gt; API 和&lt;code&gt;expect().toBeReturned()&lt;/code&gt; matcher，进一步丰富了 Bun 的功能集。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows 改进&lt;/strong&gt;：解决了多个 Windows 平台上的兼容性问题，提升了安装、路径加载等操作的可靠性。特别是&lt;code&gt;bun install&lt;/code&gt;在未缓存的情况下速度提高了 2 倍，显著提升了开发者在 Windows 平台上的体验。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bun Shell 和 Bun APIs 更新&lt;/strong&gt;：添加了对&lt;code&gt;[Symbol.dispose]&lt;/code&gt;的支持，修复了许多 Bun Shell 相关问题。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;fetch 内存使用优化&lt;/h4&gt; 
&lt;p&gt;在最新的 v1.1.10 版本中，Bun 团队重点优化了 fetch 函数的内存使用，使其在处理 HTTP 请求时更加高效。以下是具体的优化过程：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Promise 与 Response 管理&lt;/strong&gt;：在进行 HTTP 请求时，&lt;code&gt;Promise&lt;/code&gt;对象必须一直保留，直到 HTTP 状态码和头信息被接收。因此，在 Bun v1.1.9 及以前版本中，&lt;code&gt;Response&lt;/code&gt;和其主体在整个响应过程中都被保留。这种方式虽然简单，但导致了不必要的内存占用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;弱引用与强引用结合&lt;/strong&gt;：为了优化内存使用，Bun 利用了 JavaScriptCore 的&lt;code&gt;JSC::Weak&lt;/code&gt;和&lt;code&gt;JSC::Strong&lt;/code&gt;引用机制。首先在获取 HTTP 头信息和状态码后释放&lt;code&gt;Promise&lt;/code&gt;的强引用，接着通过弱引用和终结器函数管理&lt;code&gt;Response&lt;/code&gt;对象的生命周期。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;引用计数机制&lt;/strong&gt;：仅依靠弱引用并不足以完全管理&lt;code&gt;Response&lt;/code&gt;对象的生命周期，特别是在处理流式数据时。为此，Bun 引入了引用计数机制。当存在未处理的数据时，通过增加引用计数来保持&lt;code&gt;Response&lt;/code&gt;对象；当垃圾回收器通知&lt;code&gt;Response&lt;/code&gt;对象已被回收时，若引用计数为零，则释放相关资源。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;这些优化措施大幅减少了 fetch 函数的内存占用，使其在处理大规模数据和高并发请求时更加高效。&lt;/p&gt; 
&lt;h4&gt;结语&lt;/h4&gt; 
&lt;p&gt;Bun 团队在五月的三个版本更新中，通过修复大量 bug、优化性能和提升稳定性，进一步增强了 Bun 作为现代 JavaScript 运行时的竞争力。特别是 fetch 内存优化的引入，以及&lt;code&gt;bun install&lt;/code&gt;在 Windows 平台上速度的显著提升，显示了 Bun 团队在性能调优方面的不懈努力。期待未来 Bun 能继续带来更多创新和改进，助力开发者构建更加高效和可靠的应用。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295130</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295130</guid>
            <pubDate>Fri, 31 May 2024 03:50:11 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>MybatisPlus「 漏洞 CVE-2024-35548 」申明 &amp; 探讨</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;MybatisPlus 最新漏洞 CVE-2024-35548 说明，对于各种所谓的漏洞申明，也是让我们很头疼的，&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;出于使用者和 ORM 设计者的理解不一样产生是否为漏洞的&lt;span&gt;分歧，针对这个问题官方也做了很多的说明：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;color: rgba(0, 0, 0, 0.9); margin-left: 0px; margin-right: 0px; text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaomidou.com%2Freference%2Fabout-cve%2F&quot; target=&quot;_blank&quot;&gt;【预防安全漏洞 https://baomidou.com/reference/about-cve/】&lt;/a&gt;&lt;/li&gt; 
 &lt;li style=&quot;color: rgba(0, 0, 0, 0.9); margin-left: 0px; margin-right: 0px; text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaomidou.com%2Fguides%2Fsecurity%2F&quot; target=&quot;_blank&quot;&gt;【数据安全保护 https://baomidou.com/guides/security/】&lt;/a&gt;&lt;/li&gt; 
 &lt;li style=&quot;color: rgba(0, 0, 0, 0.9); margin-left: 0px; margin-right: 0px; text-align: justify;&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA4NzgyMTI0MA%3D%3D%26mid%3D2649526788%26idx%3D1%26sn%3D5f4cfbe92097cdd45fa8db72e5b9c1f1%26chksm%3D882bacd3bf5c25c5407d6251f4fa6a7ad444c1fcfba5830636cb217b7ffd37324f15bea0000d%26token%3D72916232%26lang%3Dzh_CN%23rd&quot; target=&quot;_blank&quot;&gt;MybatisPlus 最新漏洞 CVE-2024-35548 申明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;严格意义该问题并不属于真正意义上的漏洞，请问那个 orm 不允许字符串拼接 ？？&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;【不同意该观点可以留言探讨】&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提交者也是缺乏基本常识 「 SQL 片段 」 &lt;span style=&quot;color:#e74c3c&quot;&gt;&lt;strong&gt;主动交给前端传入&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;这是多么&lt;span style=&quot;color:#e74c3c&quot;&gt;&lt;strong&gt; 低级的错误甚至低能 &lt;/strong&gt;&lt;/span&gt;的行为。&lt;/p&gt; 
&lt;p&gt;更何况官方文档多处强调这种行为是不安全的不推荐的，也提供了判断可能存在注入的检查方案，然而提交漏洞者视而不见！&lt;/p&gt; 
&lt;p&gt;还有&lt;strong&gt; &lt;span style=&quot;color:#e74c3c&quot;&gt;CVE 的权威也是值得怀疑的&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;没有做严格的审定就判定为漏洞，这也是极其荒唐的行为。&lt;/p&gt; 
&lt;h3&gt;这种所谓的 「 漏洞 」，给开源项目和用户造成非常大的&lt;span style=&quot;color:#e74c3c&quot;&gt;负面影响和困扰&lt;/span&gt;！！&lt;/h3&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;再次号召一些 &lt;strong&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;喜欢 CVE 的人士&lt;/span&gt; &lt;/strong&gt;不要遇事就 CVE&amp;nbsp;最好的办法是先解决问题，你的一个行为会&lt;span&gt;为给很多人造成很多负面影响，我们很乐意接收 PR 完善框架&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;我们很乐意并接受更多社区人员的监督，让&amp;nbsp;&lt;span&gt;MybatisPlus 更加&lt;span&gt;的&lt;/span&gt;安全良性的发展，为更多的人提供一个更好的 orm 使用基座。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;看到以下 issue 不知道 CVE 人士作何感想？？？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbaomidou%2Fmybatis-plus%2Fissues%2F6225&quot; target=&quot;_blank&quot;&gt;https://github.com/baomidou/mybatis-plus/issues/6225&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1503&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-35960214c2feac4e2ec70694179746bdd82.png&quot; width=&quot;1699&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;617&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-985a2b4871b9a9bfa8b284813584d534fc3.png&quot; width=&quot;1885&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295115</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295115</guid>
            <pubDate>Fri, 31 May 2024 02:57:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>UJCMS 9.1.4 发布，国内开源 Java CMS</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 jar 包需要解压才可运行的问题&lt;/li&gt; 
 &lt;li&gt;修复上传视频时无法自动获取视频图片问题&lt;/li&gt; 
 &lt;li&gt;修复用户等级问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;Java 开源内容管理系统 (java cms)、Java 建站系统。使用 SpringBoot、MyBatis、Spring Security、Lucene、FreeMarker、TypeScript、Vue3、ElementPlus 等技术开发。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;支持无头 CMS，使用模板 (Freemarker)+ 标签方式或使用 Vue (React)+API 方式制作网站均可。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Apache-2.0&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;开源协议，可免费用于商业网站。支持多站点功能。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;技术上尽量选择主流、先进、简单的架构，方便用户进行二次开发。设计上强调 「简单」、「灵活」，避免繁杂的设计和实现，降低系统维护成本和二次开发难度。功能使用上也要求 「简单」，避免复杂的使用逻辑。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;官网地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ujcms.com%2F&quot; target=&quot;_blank&quot;&gt;https://www.ujcms.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;下载地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ujcms.com%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;https://www.ujcms.com/download/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供安装包下载。&lt;/li&gt; 
 &lt;li&gt;演示站前台：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2F&quot; target=&quot;_blank&quot;&gt;https://demo.ujcms.com&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用手机访问或者浏览器手机模式访问前台，会自动呈现手机页面。&lt;/li&gt; 
 &lt;li&gt;演示站后台：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2Fcp%2F&quot; target=&quot;_blank&quot;&gt;https://demo.ujcms.com/cp/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API、标签及对象文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2Fswagger-ui%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://demo.ujcms.com/swagger-ui/index.html&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;技术及功能亮点&lt;/h2&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;多站点&lt;/strong&gt;：支持多站点功能，在一套系统中管理多个网站。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;自定义字段&lt;/strong&gt;：文章、栏目等模块支持自定义字段，方便满足客户的不同需求。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;自定义字段可查询&lt;/strong&gt;：支持自定义字段，且所有的自定义字段都可查询，极大地增强了系统的灵活性。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;自定义字段可视化设计&lt;/strong&gt;：自定义字段使用拖拽式的可视化设计，所见即所得。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;MyBatis 参数化查询&lt;/strong&gt;：数据通常会需要通过不同字段进行搜索，对每个表都写大量的查询，无疑是一项繁重的工作。MyBatis 参数化查询功能通过前台传递查询参数，即可实现任意字段及关联表的查询功能（如：Q_title=abc，Q_user-username=test），无需后台编写代码，大幅减少后端的开发工作量。后台开发和前台标签（API）均可使用参数化查询，因此标签（API）几乎可以实现任意查询效果。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;URL 地址 SEO 优化&lt;/strong&gt;：栏目和文章的动态地址可以通过系统的全局设置功能进行修改。默认的栏目和文章 URL 地址前缀为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/channel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/article&lt;/code&gt;，可以根据自己的需要修改，如改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/categories&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/archives&lt;/code&gt;。多站点的情况下，子站点 URL 地址可为目录形式 (&lt;code&gt;www.example.com/abc&lt;/code&gt;) 或次级域名形式 (&lt;code&gt;abc.example.com&lt;/code&gt;)。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;清理垃圾附件&lt;/strong&gt;：系统使用时，可能会多传、误传图片等附件；在删除文章后，文章中的图片还保留在系统中，产生大量的未使用的垃圾图片和附件。系统中的附件管理可以查看所有未使用的图片和附件，并可对其进行删除。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;附件、模板、索引文件独立部署&lt;/strong&gt;：系统运行时产生的文件可以和程序分开，部署到独立的目录，方便系统备份、升级和管理。比如上传的图片和附件、前台的模板、索引文件，都可以部署到程序以外的目录。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;模板文件和 CSS、JS 在同一目录&lt;/strong&gt;：模板文件和 CSS、JS 分开的目录结构，会给模板制作和部署带来很大的不便性。而将模板文件和 CSS、JS 放在一起的设计，会方便很多。&lt;/p&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;主副表拆分&lt;/strong&gt;：对查询量大的复杂表进行主副表拆分，把常用查询字段放到主表，不常用的字段放到副表，提升大数据量下的性能表现。&lt;/p&gt; 
&lt;h2&gt;后端技术&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;SpringBoot：提供了对 Spring 开箱即用的功能。简化了 Spring 配置，提供自动配置 auto-configuration 功能。&lt;/li&gt; 
 &lt;li&gt;SpringMVC：MVC 框架，使用方便，Bug 较少。&lt;/li&gt; 
 &lt;li&gt;SpringSecurity：安全组件。&lt;/li&gt; 
 &lt;li&gt;Mybatis：持久化框架。&lt;/li&gt; 
 &lt;li&gt;FreeMarker：网站前台模板引擎。&lt;/li&gt; 
 &lt;li&gt;Lucene：全文检索组件。&lt;/li&gt; 
 &lt;li&gt;Liquibase：数据库跟踪、管理工具。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;前端技术&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vue 3：JavaScript 框架。&lt;/li&gt; 
 &lt;li&gt;ElementPlus 2：Vue 3 UI 框架。&lt;/li&gt; 
 &lt;li&gt;Vite: 下一代前端开发与构建工具。&lt;/li&gt; 
 &lt;li&gt;TypeScript: JavaScript 的一个超集。&lt;/li&gt; 
 &lt;li&gt;TailwindCSS: 功能类优先的 CSS 框架。&lt;/li&gt; 
 &lt;li&gt;Tinymce: 富文本编辑器。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;内容 
  &lt;ul&gt; 
   &lt;li&gt;文章管理&lt;/li&gt; 
   &lt;li&gt;文章审核&lt;/li&gt; 
   &lt;li&gt;栏目管理&lt;/li&gt; 
   &lt;li&gt;区块管理&lt;/li&gt; 
   &lt;li&gt;字典管理&lt;/li&gt; 
   &lt;li&gt;TAG 管理&lt;/li&gt; 
   &lt;li&gt;附件管理&lt;/li&gt; 
   &lt;li&gt;生成管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;互动 
  &lt;ul&gt; 
   &lt;li&gt;留言管理&lt;/li&gt; 
   &lt;li&gt;投票管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;文件 
  &lt;ul&gt; 
   &lt;li&gt;模板文件&lt;/li&gt; 
   &lt;li&gt;上传文件&lt;/li&gt; 
   &lt;li&gt;HTML 文件&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;配置 
  &lt;ul&gt; 
   &lt;li&gt;全局设置&lt;/li&gt; 
   &lt;li&gt;站点设置&lt;/li&gt; 
   &lt;li&gt;模型管理&lt;/li&gt; 
   &lt;li&gt;区块设置&lt;/li&gt; 
   &lt;li&gt;字典设置&lt;/li&gt; 
   &lt;li&gt;留言类型&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;统计 
  &lt;ul&gt; 
   &lt;li&gt;访问分析 
    &lt;ul&gt; 
     &lt;li&gt;访问趋势&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;访客分析 
    &lt;ul&gt; 
     &lt;li&gt;新老访客&lt;/li&gt; 
     &lt;li&gt;地域分布&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;用户 
  &lt;ul&gt; 
   &lt;li&gt;用户管理&lt;/li&gt; 
   &lt;li&gt;角色管理&lt;/li&gt; 
   &lt;li&gt;用户组管理&lt;/li&gt; 
   &lt;li&gt;组织管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;日志 
  &lt;ul&gt; 
   &lt;li&gt;短信日志&lt;/li&gt; 
   &lt;li&gt;登录日志&lt;/li&gt; 
   &lt;li&gt;操作日志&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;系统 
  &lt;ul&gt; 
   &lt;li&gt;站点管理&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;前台模板&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1934&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-80a0ebd93df8b45fee97e5ee120780e5c78.jpg&quot; width=&quot;1351&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;后台界面&lt;/h2&gt; 
&lt;p style=&quot;color:#24292e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;713&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cfe14e42ecbeb17974c201494ee2c931758.jpg&quot; width=&quot;1367&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295104</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295104</guid>
            <pubDate>Fri, 31 May 2024 01:52:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>MyBatis-Flex v1.9.0 发布，一个优雅的 MyBatis 增强框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;265&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0d6ec96d8070deb116566704fcc7bfd1291.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;MyBatis-Flex： 一个优雅的 MyBatis 增强框架&lt;/h1&gt; 
&lt;h1&gt;特征&lt;/h1&gt; 
&lt;h4&gt;1、很轻量&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 整个框架只依赖 MyBatis，再无其他任何第三方依赖。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2、只增强&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 支持 CRUD、分页查询、多表查询、批量操作，但不丢失 MyBatis 原有的任何功能。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;3、高性能&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 采用独特的技术架构、相比许多同类框架，MyBatis-Flex 的在增删改查等方面的性能均超越其 5~10 倍或以上。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;4、更灵动&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 支持多主键、多表查询、逻辑删除、乐观锁、数据脱敏、数据加密、多数据源、分库分表、字段权限、 字段加密、多租户、事务管理、SQL 审计... 等等等等。 这一切，免费且灵动。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;MyBatis-Flex v1.9.0 更新细节如下：&lt;/strong&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;优化：重构 Mapper 的获取，使之减少一层代理从而获得更高性能&lt;/li&gt; 
  &lt;li&gt;优化：优化 LambdaUtil 的性能&lt;/li&gt; 
  &lt;li&gt;优化：优化代码生成器 Controller 代码生成的主键类型，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;@王帅&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;优化：优化代码生成器的 JdbcTypeMapping&lt;/li&gt; 
  &lt;li&gt;优化：优化 QueryColumn 的 between 对于数组支持的灵活性，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/kamo-sama&quot; target=&quot;_blank&quot;&gt;@卡莫 sama&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;优化：当 Entity 中的字段命名不规范时可能无法通过 Lambda 获取属性的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/mybatis-flex/mybatis-flex/issues/I9P66C&quot;&gt;#I9P66C:[Bug]: 实体类中的属性首字母为大写时,querywrapper 的 eq 中获取不到属性&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;优化：优化 StringUtil.camelToUnderline 用于处理某些字段命名不规范的问题&lt;/li&gt; 
  &lt;li&gt;修复：在 Kotlin 中，LambdaUtil 无法通过 lambda 表达式正确获取到对象的属性值&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/mybatis-flex/mybatis-flex/issues/I9ONI4&quot;&gt;#I9ONI4:[Bug]: 在 Kotlin 中，LambdaUtil 无法正确获取到对象的属性值&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/cnscoo&quot; target=&quot;_blank&quot;&gt;@Haru&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;代码贡献者，请参考：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fwhat-is-mybatisflex.html%23%25E8%25B4%25A1%25E7%258C%25AE%25E8%2580%2585&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/intro/what-is-mybatisflex.html#%E8%B4%A1%E7%8C%AE%E8%80%85&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h4&gt;&lt;strong&gt;进一步了解 MyBatis-Flex 框架，请参考一下链接：&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、快速开始：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fgetting-started.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/intro/getting-started.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2、多表关联查询：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquery.html%23%25E5%2585%25B3%25E8%2581%2594%25E6%259F%25A5%25E8%25AF%25A2-%25E6%2588%2596%25E5%25A4%259A%25E8%25A1%25A8%25E6%259F%25A5%25E8%25AF%25A2&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/base/query.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;3、一对多、多对一：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Frelations-query.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/base/relations-query.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;4、灵活的 QueryWrapper：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquerywrapper.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/base/querywrapper.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;5、逻辑删除：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Flogic-delete.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/logic-delete.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;6、乐观锁：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fversion.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/version.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;7、数据填充：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ffill.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/fill.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;6、数据脱敏：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmask.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/mask.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;7、SQL 审计：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Faudit.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/audit.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;8、多数据源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-datasource.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/multi-datasource.htm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;9、数据源加密：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdatasource-encryption.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/datasource-encryption.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10、动态表名：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdynamic-table.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/dynamic-table.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11、事务管理：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ftx.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/tx.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;12、数据权限：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdata-permission.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/data-permission.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;13、字段权限：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-permission.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/columns-permission.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;14、字段加密：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-encrypt.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/columns-encrypt.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;15、字典回写：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-dict.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/columns-dict.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;16、枚举属性：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fenum-property.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/enum-property.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;17、多租户：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-tenancy.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/multi-tenancy.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;18、代码生成器：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fothers%2Fcodegen.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/others/codegen.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;19、QQ 交流群：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fqq-group.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/intro/qq-group.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20、更好用的功能正在路上：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;bilibili 视频教程（免费）：&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;课程 ：《MyBatis-Flex 视频教程》&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:var(--vp-c-text-2); margin-left:0; margin-right:0&quot;&gt;课程简介：该课程由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;王帅&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;老师录制主讲，&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;王帅&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;老师也是除了作者以外，对 MyBatis-Flex 代码贡献最大的 committer。 其无论对 MyBatis 还是 MyBatis-Flex，都有非常深入的理解。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;课程地址：&lt;/p&gt; 
&lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11h411A7cU&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV11h411A7cU&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295099/mybatis-flex-1-9-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295099/mybatis-flex-1-9-0-released</guid>
            <pubDate>Fri, 31 May 2024 01:30:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>赛风 Rust Web 框架 0.68 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Salvo 是 Rust 实现的简单好用且功能强大的 Web 后端框架。&lt;br&gt; &lt;br&gt; 不管你是刚刚 Rust 入门还是使用 Rust 做正规项目开发， Salvo 都很适合。近五年时间的持续维护改进，品质有保证。&lt;/p&gt; 
&lt;p&gt;同时 Rust 可以让你逃离 Axum 等框架无穷无尽的类型体操。更简单的类型系统，更强大的功能。&lt;/p&gt; 
&lt;p&gt;本次更新：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;quinn 更新至 0.11&lt;/li&gt; 
 &lt;li&gt;为 OpenAPI 添加 &lt;code&gt;FormFile&lt;/code&gt; 和&lt;code&gt;FormFiles&lt;/code&gt; 两种可以自动生成文档的类型。&lt;/li&gt; 
 &lt;li&gt;修复 otel-jaeger 不正常的问题。&lt;/li&gt; 
 &lt;li&gt;opentelemetry 相关的依赖更新到最新。&lt;/li&gt; 
 &lt;li&gt;移除不再维护的库 proc_macro_error 的依赖。&lt;/li&gt; 
 &lt;li&gt;允许定义全局重命名器重命名导出的 OpenAPI 的类型。&lt;/li&gt; 
 &lt;li&gt;添加 EC private keys 的支持。&lt;/li&gt; 
 &lt;li&gt;更新 swaggerUI 到 5.17.12。&lt;/li&gt; 
 &lt;li&gt;添加例子 logging-otlp。&lt;/li&gt; 
 &lt;li&gt;改进&amp;nbsp; OpenAPI 对 description and summary 的支持。&lt;/li&gt; 
 &lt;li&gt;为 OpenAPI 部分的 ToSchema 添加 description 属性。&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295066/salvo-0-68-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295066/salvo-0-68-released</guid>
            <pubDate>Thu, 30 May 2024 12:20:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>vxe-table 4.7.1 已经发布，vue 表格解决方案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;vxe-table 4.7.1 已经发布，vue 表格解决方案&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;兼容按需加载&lt;/li&gt; 
 &lt;li&gt;table 
  &lt;ul&gt; 
   &lt;li&gt;增加方法 setRow&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href=&quot;https://gitee.com/xuliangzhan_admin/vxe-table/releases/4.7.1&quot;&gt;https://gitee.com/xuliangzhan_admin/vxe-table/releases/4.7.1&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295060/vxe-table-4-7-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295060/vxe-table-4-7-1-released</guid>
            <pubDate>Thu, 30 May 2024 10:39:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Spring AI 1.0.0 M1 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;Spring AI 1.0.0 Milestone 1 版本现已发布，具有以下新功能和改进：&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ChatClient Fluent API&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fluent API 提供了构造 Prompt 的方法，然后将其作为输入传递给 AI 模型。用户可以使用&lt;code&gt;ChatClient.Builder&lt;/code&gt;对象创建一个&lt;code&gt;ChatClient&lt;/code&gt;。可以从 Spring Boot 自动配置中获取自动配置的&lt;code&gt;ChatClient.Builder&lt;/code&gt;对象，也可以通过编程方式创建一个。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;示例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@RestController
class MyController {

    private final ChatClient chatClient;

    MyController(ChatClient.Builder chatClientBuilder) {
        this.chatClient = chatClientBuilder.build();
    }

    @GetMapping(&quot;/ai&quot;)
    String generation(String userInput) {
        return this.chatClient.prompt()
            .user(userInput)
            .call()
            .content();
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;user&lt;/code&gt;方法设置 prompt 的用户文本。&lt;code&gt;call&lt;/code&gt;方法调用 AI 模型，提供各种重载以返回响应。在本例中，&lt;code&gt;content&lt;/code&gt;方法返回一个字符串。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;还可以响应式调用 AI 模型（using WebClient under the covers），如下所示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Flux&amp;lt;String&amp;gt; output = chatClient.prompt()
    .user(&quot;Tell me a joke&quot;)
    .stream()
    .content();&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;一个常见用例是从对 AI 模型的调用返回 JSON。使用&lt;code&gt;entity&lt;/code&gt;方法可以轻松实现这一点。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;record ActorFilms(String actor, List&amp;lt;String&amp;gt; movies) {
}

ActorFilms actorFilms = chatClient.prompt()
    .user(&quot;Generate the filmography for a random actor.&quot;)
    .call()
    .entity(ActorFilms.class);&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在&lt;code&gt;@Configuration&lt;/code&gt;类中创建时&lt;code&gt;ChatClient&lt;/code&gt;，可以指定默认值，例如系统文本。这种设计时和运行时的分离使得运行时代码最少，只需要属性占位符值。例如：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@Configuration
class Config {

    @Bean
    ChatClient chatClient(ChatClient.Builder builder) {
        return builder.defaultSystem(&quot;You are a friendly chat bot that answers question in the voice of a {voice}&quot;)
                .build();
    }

}

@RestController
class AIController {
private final ChatClient chatClient
AIController(ChatClient chatClient) {
this.chatClient = chatClient;
}
@GetMapping(&quot;/ai&quot;)
Map&amp;lt;String, String&amp;gt; completion(@RequestParam(value = &quot;message&quot;, defaultValue = &quot;Tell me a joke&quot;) String message, String voice) {
return Map.of(
&quot;completion&quot;,
chatClient.prompt()
.system(sp -&amp;gt; sp.param(&quot;voice&quot;, voice))
.user(message)
.call()
.content());
}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;评估（Evaluation）&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;帮助解决 AI 幻觉问题。用户可以使用一个 AI 模型来评估另一个 AI 模型的响应是否准确。初步使用的是一个简单的&lt;code&gt;RelevancyEvaluator&lt;/code&gt;，但事实证明也非常有用，在&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1.0 M2 中还会有所新增。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dataController.delete();
dataController.load();

String userText = &quot;What is the purpose of Carina?&quot;;

ChatResponse response = ChatClient.builder(chatModel)
        .build().prompt()
        .advisors(new QuestionAnswerAdvisor(vectorStore, SearchRequest.defaults()))
        .user(userText)
        .call()
        .chatResponse();

var relevancyEvaluator = new RelevancyEvaluator(ChatClient.builder(chatModel));

EvaluationRequest evaluationRequest = new EvaluationRequest(userText,
        (List&amp;lt;Content&amp;gt;) response.getMetadata().get(QuestionAnswerAdvisor.RETRIEVED_DOCUMENTS), response);

EvaluationResponse evaluationResponse = relevancyEvaluator.evaluate(evaluationRequest);

assertTrue(evaluationResponse.isPass(), &quot;Response is not relevant to the question&quot;);&lt;/code&gt;&lt;/pre&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;strong&gt;新的 AI 模型&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bedrock Anthropic Claude 3 -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fben-gineer&quot; target=&quot;_blank&quot;&gt;ben-gineer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watson AI -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPabloSanchi&quot; target=&quot;_blank&quot;&gt;PabloSanchi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenAI Speech -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhemeda3&quot; target=&quot;_blank&quot;&gt;hemeda3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multi-modality support for OpenAI&lt;/li&gt; 
 &lt;li&gt;AWS Bedrock claude3&lt;/li&gt; 
 &lt;li&gt;MiniMax -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmxsl-gr&quot; target=&quot;_blank&quot;&gt;mxsl-gr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ZhiPu -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmxsl-gr&quot; target=&quot;_blank&quot;&gt;mxsl-gr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Azure Open AI image generation -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbmoussaud&quot; target=&quot;_blank&quot;&gt;bmoussaud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;更新模型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI - 支持 GPT4o 和多模态&lt;/li&gt; 
 &lt;li&gt;Google Gemini Pro 1.5 pro、flash 等&lt;/li&gt; 
 &lt;li&gt;Anthropic function calling&lt;/li&gt; 
 &lt;li&gt;Ollama 多模态支持&lt;/li&gt; 
 &lt;li&gt;改进了 streaming function calling 支持 -&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGrogdunn&quot; target=&quot;_blank&quot;&gt;Grogdunn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新的&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;Vector Stores&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache Cassandra -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmichaelsembwever&quot; target=&quot;_blank&quot;&gt;michaelsembwever&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Elastic Search -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJM-Lab&quot; target=&quot;_blank&quot;&gt;JM-Lab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MongoDB Atlas -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKirbstomper&quot; target=&quot;_blank&quot;&gt;Kirbstomper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SAP HanaDB -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frahulmitt&quot; target=&quot;_blank&quot;&gt;rahulmitt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Test Container&amp;nbsp;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;支持&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Spring AI 提供 Testcontainer 支持，用于在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2F1.0%2Fapi%2Ftestcontainers.html&quot; target=&quot;_blank&quot;&gt;测试&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中或通过&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2F1.0%2Fapi%2Fdocker-compose.html&quot; target=&quot;_blank&quot;&gt;docker compose&lt;/a&gt;&amp;nbsp;启动向量存储数据库。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更多详情可&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2024%2F05%2F30%2Fspring-ai-1-0-0-m1-released&quot; target=&quot;_blank&quot;&gt;查看官方博客&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295036/spring-ai-1-0-0-m1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295036/spring-ai-1-0-0-m1-released</guid>
            <pubDate>Thu, 30 May 2024 08:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Java 流媒体服务框架 ZLM4J 发布 1.0.8 版本</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;&lt;strong&gt;流媒体服务框架 ZLM4J 发布 1.0.8 版本&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;🔥🔥🔥ZLM4J 打造属于 Java 的流媒体生态框架，打通直播协议栈、视频监控协议栈、实时音视频协议栈，是您二开流媒体不二的选择。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&amp;nbsp;🌟发布 1.0.8（已上传到中央仓库无需自己编译！）&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;开源地址：&lt;span style=&quot;color:#cccccc&quot;&gt;&lt;a href=&quot;https://gitee.com/aizuda/zlm4j&quot;&gt;https://gitee.com/aizuda/zlm4j&lt;/a&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;使用文档：&lt;span style=&quot;color:#cccccc&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fux5phie02ut.feishu.cn%2Fwiki%2FNA2ywJRY2ivALSkPfUycZFM4nUB&quot; target=&quot;_blank&quot;&gt;https://ux5phie02ut.feishu.cn/wiki/NA2ywJRY2ivALSkPfUycZFM4nUB&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#cccccc&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;&amp;lt;dependency&amp;gt;

&amp;lt;groupId&amp;gt;com.aizuda&amp;lt;/groupId&amp;gt;

&amp;lt;artifactId&amp;gt;zlm4j&amp;lt;/artifactId&amp;gt;

&amp;lt;version&amp;gt;1.0.8&amp;lt;/version&amp;gt;

&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;版本 1.0.8 更新日志：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;拉取基于 2024-05-29-master 分支开发&lt;/li&gt; 
 &lt;li&gt;&amp;nbsp;发布 jar 到中央仓库&lt;/li&gt; 
 &lt;li&gt;增加 mk_proxy_player_create3，mk_proxy_player_create4 函数配置拉流代理重试次数&lt;/li&gt; 
 &lt;li&gt;废弃&lt;s&gt;&lt;s&gt;mk_env_init1&lt;/s&gt;&lt;/s&gt;改为 mk_env_init2&lt;/li&gt; 
 &lt;li&gt;更多记录请查看：&lt;span style=&quot;color:#cccccc&quot;&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fux5phie02ut.feishu.cn%2Fwiki%2FXVblwTyLuiKN0nkppMacUDFuncg&quot; target=&quot;_blank&quot;&gt;版本更新记录&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&amp;nbsp;实战打通海康 SDK 与 ZLM4J 实现超低延迟实时预览监控&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&amp;nbsp;1. 预备知识与工具&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;海康 SDK、海康 SDK 对接知识、海康摄像头 or 海康 NVR、ZLM4J、VLC 播放器/flv.js 播放器&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&amp;nbsp;2. 使用到的 ZLM4J 的功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;创建流、推送流功能&lt;/li&gt; 
 &lt;li&gt;音频编码功能&lt;/li&gt; 
 &lt;li&gt;拉流播放功能&lt;/li&gt; 
 &lt;li&gt;&amp;nbsp;按需转协议功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&amp;nbsp;3. 对接流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&amp;nbsp;初始化海康 SDK 及 ZLM4J&lt;/li&gt; 
  &lt;li&gt;&amp;nbsp;海康 SDK 登录摄像头&lt;/li&gt; 
  &lt;li&gt;&amp;nbsp;开启摄像头实时预览及配置取流回调&lt;/li&gt; 
  &lt;li&gt;&amp;nbsp;创建 ZLM4J 对应流、并初始化音视频轨道&lt;/li&gt; 
  &lt;li&gt;&amp;nbsp;在回调的 ps 流中取到 H264/H265 裸码流及音频数据，并将音频数据解码为 PCM&lt;/li&gt; 
  &lt;li&gt;&amp;nbsp;推送音视频流到 ZLM4J 中&lt;/li&gt; 
  &lt;li&gt;使用 VLC 播放器/flv.js 播放器播放并观察延迟&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;&amp;nbsp;4. 相关代码&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;1-4 步相关代码&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public class RealPlayDemo {

public static ZLMApi ZLM_API = Native.load(&quot;mk_api&quot;, ZLMApi.class);

public static HCNetSDK hCNetSDK = Native.load(&quot;HCNetSDK&quot;, HCNetSDK.class);

static int lUserID = 0;

public static void main(String[] args) throws InterruptedException {

//初始化 zmk 服务器

ZLM_API.mk_env_init2(1, 1, 1, null, 0, 0, null, 0, null, null);

//创建 http 服务器 0:失败,非 0:端口号

short http_server_port = ZLM_API.mk_http_server_start((short) 7788, 0);

//创建 rtsp 服务器 0:失败,非 0:端口号

short rtsp_server_port = ZLM_API.mk_rtsp_server_start((short) 7554, 0);

//创建 rtmp 服务器 0:失败,非 0:端口号

short rtmp_server_port = ZLM_API.mk_rtmp_server_start((short) 7935, 0);

//初始化海康 SDK

boolean initSuc = hCNetSDK.NET_DVR_Init();

if (!initSuc) {

System.out.println(&quot;海康 SDK 初始化失败&quot;);

return;

}

//登录海康设备

Login_V40(&quot;192.168.1.64&quot;, (short) 8000, &quot;admin&quot;, &quot;hk123456&quot;);

MK_INI mkIni = ZLM_API.mk_ini_create();

ZLM_API.mk_ini_set_option(mkIni, &quot;enable_rtsp&quot;, &quot;1&quot;);

ZLM_API.mk_ini_set_option(mkIni, &quot;enable_rtmp&quot;, &quot;1&quot;);

ZLM_API.mk_ini_set_option_int(mkIni, &quot;auto_close&quot;, 1);

//创建媒体

MK_MEDIA mkMedia = ZLM_API.mk_media_create2(

&quot;defaultVhost&quot;,

&quot;live&quot;,

&quot;test&quot;,

0,

mkIni

);

ZLM_API.mk_ini_release(mkIni);

//这里分辨率、帧率、码率都可随便写 0 是 H264 1 是 h265 可以事先定义好，也可以放到回调里面判断编码类型让后再初始化这个

ZLM_API.mk_media_init_video(mkMedia, 0, 1, 1, 25.0f, 2500);

ZLM_API.mk_media_init_audio(mkMedia, 2, 8000, 1, 16);

ZLM_API.mk_media_init_complete(mkMedia);

FRealDataCallback fRealDataCallBack = new FRealDataCallback(mkMedia, 25.0);

HCNetSDK.NET_DVR_PREVIEWINFO netDvrPreviewinfo =

new HCNetSDK.NET_DVR_PREVIEWINFO();

netDvrPreviewinfo.lChannel = 1;

netDvrPreviewinfo.dwStreamType = 0;

netDvrPreviewinfo.bBlocked = 0;

netDvrPreviewinfo.dwLinkMode = 0;

netDvrPreviewinfo.byProtoType = 0;

//播放视频

long ret = hCNetSDK.NET_DVR_RealPlay_V40(

lUserID,

netDvrPreviewinfo,

fRealDataCallBack,

Pointer.NULL

);

if (ret == -1) {

System.out.println(

&quot;【海康 SDK】开始 sdk 播放视频失败! 错误码：&quot; +

hCNetSDK.NET_DVR_GetLastError()

);

return;

}

ZLM_API.mk_media_set_on_close(

mkMedia,

pointer -&amp;gt; {

fRealDataCallBack.release();

hCNetSDK.NET_DVR_StopRealPlay(ret);

System.out.println(&quot;流关闭自动释放资源&quot;);

},

Pointer.NULL

);

//休眠

Thread.sleep(120000);

// fRealDataCallBack.release();

// hCNetSDK.NET_DVR_StopRealPlay(ret);

Logout();

}

/**

* 登录

*

* @param m_sDeviceIP 设备 ip 地址

* @param wPort 端口号，设备网络 SDK 登录默认端口 8000

* @param m_sUsername 用户名

* @param m_sPassword 密码

*/

public static void Login_V40(

String m_sDeviceIP,

short wPort,

String m_sUsername,

String m_sPassword

) {

/* 注册 */

// 设备登录信息

HCNetSDK.NET_DVR_USER_LOGIN_INFO m_strLoginInfo =

new HCNetSDK.NET_DVR_USER_LOGIN_INFO();

// 设备信息

HCNetSDK.NET_DVR_DEVICEINFO_V40 m_strDeviceInfo =

new HCNetSDK.NET_DVR_DEVICEINFO_V40();

m_strLoginInfo.sDeviceAddress =

new byte[HCNetSDK.NET_DVR_DEV_ADDRESS_MAX_LEN];

System.arraycopy(

m_sDeviceIP.getBytes(),

0,

m_strLoginInfo.sDeviceAddress,

0,

m_sDeviceIP.length()

);

m_strLoginInfo.wPort = wPort;

m_strLoginInfo.sUserName =

new byte[HCNetSDK.NET_DVR_LOGIN_USERNAME_MAX_LEN];

System.arraycopy(

m_sUsername.getBytes(),

0,

m_strLoginInfo.sUserName,

0,

m_sUsername.length()

);

m_strLoginInfo.sPassword = new byte[HCNetSDK.NET_DVR_LOGIN_PASSWD_MAX_LEN];

System.arraycopy(

m_sPassword.getBytes(),

0,

m_strLoginInfo.sPassword,

0,

m_sPassword.length()

);

// 是否异步登录：false- 否，true- 是

m_strLoginInfo.bUseAsynLogin = false;

// write() 调用后数据才写入到内存中

m_strLoginInfo.write();

lUserID = hCNetSDK.NET_DVR_Login_V40(m_strLoginInfo, m_strDeviceInfo);

if (lUserID == -1) {

System.out.println(

&quot;登录失败，错误码为&quot; + hCNetSDK.NET_DVR_GetLastError()

);

return;

} else {

System.out.println(&quot;登录成功！&quot;);

// read() 后，结构体中才有对应的数据

m_strDeviceInfo.read();

return;

}

}

//设备注销 SDK 释放

public static void Logout() {

if (lUserID &amp;gt;= 0) {

if (!hCNetSDK.NET_DVR_Logout(lUserID)) {

System.out.println(

&quot;注销失败，错误码为&quot; + hCNetSDK.NET_DVR_GetLastError()

);

}

System.out.println(&quot;注销成功&quot;);

hCNetSDK.NET_DVR_Cleanup();

return;

} else {

System.out.println(&quot;设备未登录&quot;);

hCNetSDK.NET_DVR_Cleanup();

return;

}

}

}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;5-6 步相关代码&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public class FRealDataCallback implements HCNetSDK.FRealDataCallBack_V30 {

private final MK_MEDIA mkMedia;

private final Memory buffer = new Memory(1024 * 1024 * 5);

private int bufferSize = 0;

private long pts;

private double fps;

private long time_base;

private int videoType = 0;

private int audioType = 0;

public FRealDataCallback(MK_MEDIA mkMedia, double fps) {

this.mkMedia = mkMedia;

this.fps = fps;

//ZLM 以 1000 为时间基准

time_base = (long) (1000 / fps);

//回调使用同一个线程

Native.setCallbackThreadInitializer(

this,

new CallbackThreadInitializer(true, false, &quot;HikRealStream&quot;)

);

}

@Override

public void invoke(

long lRealHandle,

int dwDataType,

ByteByReference pBuffer,

int dwBufSize,

Pointer pUser

) throws IOException {

//ps 封装

if (dwDataType == HCNetSDK.NET_DVR_STREAMDATA) {

Pointer pointer = pBuffer.getPointer();

int offset = 0;

//解析 psh 头 psm 头 psm 标题

offset = readPSHAndPSMAndPSMT(pointer, offset);

//读取 pes 数据

readPES(pointer, offset);

}

}

/**

* 读取 pes 及数据

*

* @param pointer

* @param offset

*/

private void readPES(Pointer pointer, int offset) {

//pes header

byte[] pesHeaderStartCode = new byte[3];

pointer.read(offset, pesHeaderStartCode, 0, pesHeaderStartCode.length);

if (

(pesHeaderStartCode[0] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(pesHeaderStartCode[1] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(pesHeaderStartCode[2] &amp;amp; 0xFF) == 0x01

) {

offset = offset + pesHeaderStartCode.length;

byte[] streamTypeByte = new byte[1];

pointer.read(offset, streamTypeByte, 0, streamTypeByte.length);

offset = offset + streamTypeByte.length;

int streamType = streamTypeByte[0] &amp;amp; 0xFF;

//视频流

if (streamType &amp;gt;= 0xE0 &amp;amp;&amp;amp; streamType &amp;lt;= 0xEF) {

//视频数据

readVideoES(pointer, offset);

} else if ((streamType &amp;gt;= 0xC0) &amp;amp; (streamType &amp;lt;= 0xDF)) {

//音频数据

readAudioES(pointer, offset);

}

}

}

/**

* 读取视频数据

*

* @param pointer

* @param offset

*/

private void readVideoES(Pointer pointer, int offset) {

byte[] pesLengthByte = new byte[2];

pointer.read(offset, pesLengthByte, 0, pesLengthByte.length);

offset = offset + pesLengthByte.length;

int pesLength =

((pesLengthByte[0] &amp;amp; 0xFF) &amp;lt;&amp;lt; 8) | (pesLengthByte[1] &amp;amp; 0xFF);

//pes 数据

if (pesLength &amp;gt; 0) {

byte[] pts_dts_length_info = new byte[3];

pointer.read(offset, pts_dts_length_info, 0, pts_dts_length_info.length);

offset = offset + pts_dts_length_info.length;

int pesHeaderLength = (pts_dts_length_info[2] &amp;amp; 0xFF);

//判断是否是有 pts 忽略 dts

int i = (pts_dts_length_info[1] &amp;amp; 0xFF) &amp;gt;&amp;gt; 6;

if (i == 0x02 || i == 0x03) {

//byte[] pts_dts = new byte[5];

//pointer.read(offset, pts_dts, 0, pts_dts.length);

//这里获取的是以 90000 为时间基的，需要转为 1/1000 为基准的，但是 pts 还是不够平滑导致画面卡顿，所以不采用读取的 pts

//long pts_90000 = ((pts_dts[0] &amp;amp; 0x0e) &amp;lt;&amp;lt; 29) | (((pts_dts[1] &amp;lt;&amp;lt; 8 | pts_dts[2]) &amp;amp; 0xfffe) &amp;lt;&amp;lt; 14) | (((pts_dts[3] &amp;lt;&amp;lt; 8 | pts_dts[4]) &amp;amp; 0xfffe) &amp;gt;&amp;gt; 1);

pts = time_base + pts;

}

offset = offset + pesHeaderLength;

byte[] naluStart = new byte[5];

pointer.read(offset, naluStart, 0, naluStart.length);

//nalu 起始标志

if (

(naluStart[0] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(naluStart[1] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(naluStart[2] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(naluStart[3] &amp;amp; 0xFF) == 0x01

) {

if (bufferSize != 0) {

//获取 nalu 类型

int naluType = (naluStart[4] &amp;amp; 0x1F);

//如果是 sps pps 不需要变化 pts

if (naluType == 7 || naluType == 8) {

pts = pts - time_base;

}

if (videoType == 0x1B) {

//推送帧数据

ZLM_API.mk_media_input_h264(

mkMedia,

buffer.share(0),

bufferSize,

pts,

pts

);

} else if (videoType == 0x24) {

//推送帧数据

ZLM_API.mk_media_input_h265(

mkMedia,

buffer.share(0),

bufferSize,

pts,

pts

);

}

bufferSize = 0;

}

}

int naluLength = pesLength - pts_dts_length_info.length - pesHeaderLength;

byte[] temp = new byte[naluLength];

pointer.read(offset, temp, 0, naluLength);

buffer.write(bufferSize, temp, 0, naluLength);

bufferSize = naluLength + bufferSize;

}

}

/**

* 读取音频数据

*

* @param pointer

* @param offset

*/

private void readAudioES(Pointer pointer, int offset) {

byte[] pesLengthByte = new byte[2];

pointer.read(offset, pesLengthByte, 0, pesLengthByte.length);

offset = offset + pesLengthByte.length;

int pesLength =

((pesLengthByte[0] &amp;amp; 0xFF) &amp;lt;&amp;lt; 8) | (pesLengthByte[1] &amp;amp; 0xFF);

//pes 数据

if (pesLength &amp;gt; 0) {

byte[] pts_dts_length_info = new byte[3];

pointer.read(offset, pts_dts_length_info, 0, pts_dts_length_info.length);

offset = offset + pts_dts_length_info.length;

int pesHeaderLength = (pts_dts_length_info[2] &amp;amp; 0xFF);

//判断是否是有 pts 忽略 dts

int i = (pts_dts_length_info[1] &amp;amp; 0xFF) &amp;gt;&amp;gt; 6;

long pts_90000 = 0;

if (i == 0x02 || i == 0x03) {

byte[] pts_dts = new byte[5];

pointer.read(offset, pts_dts, 0, pts_dts.length);

//这里获取的是以 90000 为时间基的，需要转为 1/1000 为基准的，但是 pts 还是不够平滑导致画面卡顿，所以不采用读取的 pts

pts_90000 =

((pts_dts[0] &amp;amp; 0x0e) &amp;lt;&amp;lt; 29) |

((((pts_dts[1] &amp;lt;&amp;lt; 8) | pts_dts[2]) &amp;amp; 0xfffe) &amp;lt;&amp;lt; 14) |

((((pts_dts[3] &amp;lt;&amp;lt; 8) | pts_dts[4]) &amp;amp; 0xfffe) &amp;gt;&amp;gt; 1);

//pts = time_base + pts;

}

offset = offset + pesHeaderLength;

int audioLength =

pesLength - pts_dts_length_info.length - pesHeaderLength;

byte[] bytes = G711ACodec._toPCM(

pointer.getByteArray(offset, audioLength)

);

Memory temp = new Memory(bytes.length);

temp.write(0, bytes, 0, bytes.length);

ZLM_API.mk_media_input_pcm(

mkMedia,

temp.share(0),

bytes.length,

pts_90000

);

temp.close();

}

}

/**

* 读取 psh 头 psm 头 psm 标题，及数据

*

* @param pointer

* @param offset

* @return

*/

private int readPSHAndPSMAndPSMT(Pointer pointer, int offset) {

//ps 头起始标志

byte[] psHeaderStartCode = new byte[4];

pointer.read(offset, psHeaderStartCode, 0, psHeaderStartCode.length);

//判断是否是 ps 头

if (

(psHeaderStartCode[0] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(psHeaderStartCode[1] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(psHeaderStartCode[2] &amp;amp; 0xFF) == 0x01 &amp;amp;&amp;amp;

(psHeaderStartCode[3] &amp;amp; 0xFF) == 0xBA

) {

byte[] stuffingLengthByte = new byte[1];

offset = 13;

pointer.read(offset, stuffingLengthByte, 0, stuffingLengthByte.length);

int stuffingLength = stuffingLengthByte[0] &amp;amp; 0x07;

offset = offset + stuffingLength + 1;

//ps 头起始标志

byte[] psSystemHeaderStartCode = new byte[4];

pointer.read(

offset,

psSystemHeaderStartCode,

0,

psSystemHeaderStartCode.length

);

//PS system header 系统标题

if (

(psSystemHeaderStartCode[0] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(psSystemHeaderStartCode[1] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(psSystemHeaderStartCode[2] &amp;amp; 0xFF) == 0x01 &amp;amp;&amp;amp;

(psSystemHeaderStartCode[3] &amp;amp; 0xFF) == 0xBB

) {

offset = offset + psSystemHeaderStartCode.length;

byte[] psSystemLengthByte = new byte[1];

//ps 系统头长度

pointer.read(offset, psSystemLengthByte, 0, psSystemLengthByte.length);

int psSystemLength = psSystemLengthByte[0] &amp;amp; 0xFF;

//跳过 ps 系统头

offset = offset + psSystemLength;

pointer.read(

offset,

psSystemHeaderStartCode,

0,

psSystemHeaderStartCode.length

);

}

//判断是否是 psm 系统头，则为 IDR 帧

if (

(psSystemHeaderStartCode[0] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(psSystemHeaderStartCode[1] &amp;amp; 0xFF) == 0x00 &amp;amp;&amp;amp;

(psSystemHeaderStartCode[2] &amp;amp; 0xFF) == 0x01 &amp;amp;&amp;amp;

(psSystemHeaderStartCode[3] &amp;amp; 0xFF) == 0xBC

) {

offset = offset + psSystemHeaderStartCode.length;

//psm 头长度可以

byte[] psmLengthByte = new byte[2];

pointer.read(offset, psmLengthByte, 0, psmLengthByte.length);

int psmLength =

((psmLengthByte[0] &amp;amp; 0xFF) &amp;lt;&amp;lt; 8) | (psmLengthByte[1] &amp;amp; 0xFF);

//获取音视频类型

if (videoType == 0 || audioType == 0) {

//自定义复合流描述

byte[] detailStreamLengthByte = new byte[2];

int tempOffset = offset + psmLengthByte.length + 2;

pointer.read(

tempOffset,

detailStreamLengthByte,

0,

detailStreamLengthByte.length

);

int detailStreamLength =

((detailStreamLengthByte[0] &amp;amp; 0xFF) &amp;lt;&amp;lt; 8) |

(detailStreamLengthByte[1] &amp;amp; 0xFF);

tempOffset =

detailStreamLength + detailStreamLengthByte.length + tempOffset + 2;

byte[] videoStreamTypeByte = new byte[1];

pointer.read(

tempOffset,

videoStreamTypeByte,

0,

videoStreamTypeByte.length

);

videoType = videoStreamTypeByte[0] &amp;amp; 0xFF;

tempOffset = tempOffset + videoStreamTypeByte.length + 1;

byte[] videoStreamDetailLengthByte = new byte[2];

pointer.read(

tempOffset,

videoStreamDetailLengthByte,

0,

videoStreamDetailLengthByte.length

);

int videoStreamDetailLength =

((videoStreamDetailLengthByte[0] &amp;amp; 0xFF) &amp;lt;&amp;lt; 8) |

(videoStreamDetailLengthByte[1] &amp;amp; 0xFF);

tempOffset =

tempOffset +

videoStreamDetailLengthByte.length +

videoStreamDetailLength;

byte[] audioStreamTypeByte = new byte[1];

pointer.read(

tempOffset,

audioStreamTypeByte,

0,

audioStreamTypeByte.length

);

audioType = audioStreamTypeByte[0] &amp;amp; 0xFF;

}

offset = offset + psmLengthByte.length + psmLength;

}

}

return offset;

}

/**

* 释放资源

*

* @return

*/

public void release() {

ZLM_API.mk_media_release(mkMedia);

buffer.close();

}

}&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;5. 预览画面与延迟对比&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span style=&quot;color:#6796e6&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;color:#cccccc&quot;&gt; &lt;/span&gt;观察到对应的媒体流已经注册上去，即可使用播放器观看&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;2024-05-30 14:38:48.514 I [java.exe] [13388-event poller 0] MediaSource.cpp:517 emitEvent | 媒体注册:fmp4://defaultVhost/live/test

2024-05-30 14:38:48.514 I [java.exe] [13388-event poller 0] MultiMediaSourceMuxer.cpp:561 onAllTrackReady | stream: schema://defaultVhost/app/stream , codec info: H264[2688/1520/25] mpeg4-generic[8000/1/16]

2024-05-30 14:38:48.514 I [java.exe] [13388-event poller 0] MediaSource.cpp:517 emitEvent | 媒体注册:rtsp://defaultVhost/live/test

2024-05-30 14:38:48.514 I [java.exe] [13388-event poller 0] MediaSource.cpp:517 emitEvent | 媒体注册:rtmp://defaultVhost/live/test

2024-05-30 14:38:48.515 I [java.exe] [13388-event poller 0] MediaSource.cpp:517 emitEvent | 媒体注册:ts://defaultVhost/live/test

2024-05-30 14:38:52.080 I [java.exe] [13388-event poller 0] MediaSource.cpp:517 emitEvent | 媒体注册:hls://defaultVhost/live/test&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;color:#6796e6&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;color:#cccccc&quot;&gt; &lt;/span&gt;使用 WS-FLV 协议与直接使用摄像头 RTSP 协议播放对比&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;269&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-76ee236453dfc650dc26bfa9e7e9f5461e2.png&quot; width=&quot;604&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#6796e6&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;color:#cccccc&quot;&gt; &lt;/span&gt;使用 WS-FLV 协议与摄像头管理界面播放对比&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;383&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b8abf68a990d93e794fb5b9483e301121e1.jpg&quot; width=&quot;487&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;4. &lt;strong&gt;&lt;strong&gt;可以看到与摄像头 RTSP 协议对比画面快 1-2s 左右，与摄像头管理界面对比画面基本一样。&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;6. 总结&lt;/strong&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&amp;nbsp;通过实战打通海康 SDK 与 ZLM4J 实现超低延迟实时预览监控案例，我们可以学到 ZLM4J 的接入流程和简单使用步骤，通过这个示例展示集成流媒体的带来的强大功能，完整项目我已上传至 GITEE:&amp;nbsp; &lt;a href=&quot;https://gitee.com/daofuli/zlm4j_hk&quot;&gt;https://gitee.com/daofuli/zlm4j_hk&lt;/a&gt;，后续将分享更多 ZLM4J 使用案例。&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295024/zlm4j-1-0-8</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295024/zlm4j-1-0-8</guid>
            <pubDate>Thu, 30 May 2024 07:26:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>BootstrapBlazor v8.6.0 已经发布，Bootstrap 样式的 Blazor UI 组件库</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;BootstrapBlazor v8.6.0 已经发布，Bootstrap 样式的 Blazor UI 组件库&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;Release 2024-5-30 V8.6.0&lt;/h2&gt; 
&lt;h3&gt;Bugs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix(DateTimePicker): 修复 &lt;code&gt;NET6&lt;/code&gt; 框架无法拖动表针问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3376&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3376&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(IconTheme): 修复刷新导致图标显示为乱码问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3428&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3428&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(SelectTable): 修复下拉框宽度未自动填充父容器问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3465&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3465&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(Chart): 修复 &lt;code&gt;ShowPointStyle&lt;/code&gt; 设置不生效问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3476&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3476&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(FreeSqlExtensions): 修复模糊搜索条件不生效问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3504&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3504&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(TreeView): 修复刷新后所有父节点均显示为不确定状态问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3517&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3517&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(Table): 修复开启列调整功能空数据导致表格组件异常问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3552&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3552&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(ClockPicker): 修复 &lt;code&gt;NET6&lt;/code&gt; 框架下组件销毁报错问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3567&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3567&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(Collapse): 修复 &lt;code&gt;collapsed&lt;/code&gt; 状态下图标不正确问题 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3569&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3569&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;feat(DockView): 增加 &lt;code&gt;TitleClass/TitleWidth&lt;/code&gt; 参数用于设置标题宽度与自定义样式 #3377 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3378&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3378&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IHtml2Pdf): 增加 &lt;code&gt;PdfStreamFromHtmlAsync&lt;/code&gt; 回调方法 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3382&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3382&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(TableExport): 更新 &lt;code&gt;ExportPdfAsync&lt;/code&gt; 方法使用 &lt;code&gt;IHtml2Pdf&lt;/code&gt; 接口实现 &lt;code&gt;PDF&lt;/code&gt; 导出功能 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3384&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3384&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IExportPdf): 删除 &lt;code&gt;ExportPdfService&lt;/code&gt; 服务 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3386&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3386&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ITableExport): 增加 &lt;code&gt;TagLinks&lt;/code&gt; 参数支持自定义导出样式功能 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3390&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3390&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IHtml2Pdf): 支持 &lt;code&gt;linux&lt;/code&gt; 操作系统 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3388&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3388&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(MultiSelect): 公开 &lt;code&gt;Clear/SelectAll/InvertSelect&lt;/code&gt; 实例方法 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3403&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3403&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(MultiSelect): 公开 &lt;code&gt;Show/Hide&lt;/code&gt; 方法 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3404&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3404&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(DockView): 增加 &lt;code&gt;TitleTemplate&lt;/code&gt; 参数可实现自定义标题（如增加，小图标等功能） by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3411&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3411&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ExportPdfButton): 增加 &lt;code&gt;ExportPdfButton&lt;/code&gt; 组件通过设置可以指定导出网页中任意部分 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3416&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3416&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IJSRuntime): 增加 &lt;code&gt;GetHtml&lt;/code&gt; 扩展方法，可获得任意指定区域 &lt;code&gt;Html&lt;/code&gt; 原生代码用于导出 &lt;code&gt;PDF&lt;/code&gt; by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3420&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3420&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IconTheme): 增加 &lt;code&gt;FullScreenExitButtonIcon&lt;/code&gt; 全屏图标 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3422&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3422&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ExportPdfButton): 增加 &lt;code&gt;ExportPdfSettings&lt;/code&gt; 组件用于设置 &lt;code&gt;Pdf&lt;/code&gt; 导出配置 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3426&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3426&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ThemeProvider): 增加 &lt;code&gt;ThemeProvider&lt;/code&gt; 组件提供 &lt;code&gt;明亮&lt;/code&gt; &lt;code&gt;暗黑&lt;/code&gt; &lt;code&gt;自动&lt;/code&gt; 主题切换功能 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3430&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3430&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IconTheme): 增加主题图标 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3432&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3432&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Topology): 增加 &lt;code&gt;IsFitView/IsCenterView&lt;/code&gt; 配置项 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3436&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3436&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IconTheme): 更新全屏图标 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3438&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3438&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ScrollOptions): 增加 &lt;code&gt;ScrollOptions&lt;/code&gt; 全局配置参数，通过 &lt;code&gt;BootstrapBlazorOptions&lt;/code&gt; by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3440&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3440&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Table): 增加 &lt;code&gt;ColumnMinWidth&lt;/code&gt; 参数用于设置列最小宽度，防止列过多时挤在一起 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3442&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3442&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Chart): 增加导出图片功能 by @azlis in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3455&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3455&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Chart): 增加 &lt;code&gt;CanvasBackgroundColor&lt;/code&gt; 参数用于设置导出图片背景色 by @azlis in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3458&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3458&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(DateTimeRange): 增加 &lt;code&gt;RenderMode&lt;/code&gt; 参数用于设置 &lt;code&gt;DateTimeRange&lt;/code&gt; 组件渲染模式，可通过单个日历弹窗设置区间 by @eramosr16 in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3445&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3445&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Chart): 增加 &lt;code&gt;IsAnimation&lt;/code&gt; 参数用于控制是否使用动画 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3474&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3474&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Button): 增加 &lt;code&gt;IsKeepDisabled&lt;/code&gt; 参数用于按钮异步操作后是否保持禁用状态 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3478&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3478&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(MultiSelect): 增加 &lt;code&gt;IsSingleLine&lt;/code&gt; 参数用于设置多选框显示结果显示成一行 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3507&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3507&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(CardUpload): 增加点击图片自动显示预览大图功能 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3515&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3515&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(SvgEdtior): 增加 &lt;code&gt;UpdateAsync&lt;/code&gt; 方法用于更新 &lt;code&gt;svg&lt;/code&gt; 编辑器 by &lt;a href=&quot;https://gitee.com/visionZhang&quot; target=&quot;_blank&quot;&gt;@Vision-zhang&lt;/a&gt; in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3512&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3512&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(WebClientOptions): 增加 &lt;code&gt;WebClientOptions&lt;/code&gt; 配置类，可控制是否将 IP 地址进行城市翻译 class by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3520&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3520&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(TimePicker): 重新设计 &lt;code&gt;TimePicker&lt;/code&gt; 组件 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3526&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3526&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Message): 增加 &lt;code&gt;ShowMode&lt;/code&gt; 参数，可设置为仅显示一个消息弹窗 by &lt;a href=&quot;https://gitee.com/j4587698&quot; target=&quot;_blank&quot;&gt;@j4587698&lt;/a&gt; in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3531&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3531&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Select): 增加关闭图标当使用 &lt;code&gt;DisplayTemplate&lt;/code&gt; 自定义显示内容时 by @eramosr16 in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3544&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3544&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(RibbonTab): 样式使用变量化为进一步使用主题做准备 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3560&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3560&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(MultiSelect): 增加 &lt;code&gt;DisplayTemplate&lt;/code&gt; 参数用于自定义显示模板 by @eramosr16 in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3557&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3557&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Table): 增加 &lt;code&gt;GetTooltipTextCallback&lt;/code&gt; 回调参数，用于自定义 &lt;code&gt;Tooltip&lt;/code&gt; 显示内容 by @azlis in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3565&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3565&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Table): 增加自定义搜索条件功能 by &lt;a href=&quot;https://gitee.com/j4587698&quot; target=&quot;_blank&quot;&gt;@j4587698&lt;/a&gt; in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3576&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3576&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Drawser): 增加 &lt;code&gt;DrawserService&lt;/code&gt; 服务，可通过代码直接弹出抽屉无需 &lt;code&gt;Razor&lt;/code&gt; 代码 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3582&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3582&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Table): 增加 &lt;code&gt;LoadingTemplate&lt;/code&gt; 模板，可自定义加载时显示内容 by @azlis in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3583&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3583&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Localization): 增加 &lt;code&gt;ILocalizationMissingItemHandler&lt;/code&gt; 接口，可自定义处理丢失本地化键值项逻辑 by @cairabbit in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3584&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3584&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Dialog): 重新设计模态框扩展方法 &lt;code&gt;ShowModal&lt;/code&gt; 精简半吨代码 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3590&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3590&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(ColorPicker): 增加 &lt;code&gt;Formatter&lt;/code&gt; 参数，用于格式化显示值，可用于将 &lt;code&gt;RGB&lt;/code&gt; 值显示为 &lt;code&gt;ARGB&lt;/code&gt; 或者 &lt;code&gt;RGBA&lt;/code&gt; by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3592&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3592&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(DialogSaveButton): 增加 &lt;code&gt;OnSaveAsync&lt;/code&gt; 回调方法，内置规则返回 &lt;code&gt;true&lt;/code&gt; 时自动关闭弹窗 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3595&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3595&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Table): 增加第四种编辑模式 &lt;code&gt;Drawer&lt;/code&gt; 新建或者编辑时使用抽屉进行数据更新操作 by @ArgoZhang in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3588&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3588&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;New Contributors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;@eramosr16 made their first contribution in &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F3445&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/3445&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: &lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fcompare%2Fv8.5.0...v8.6.0&quot; target=&quot;_blank&quot;&gt;https://github.com/dotnetcore/BootstrapBlazor/compare/v8.5.0...v8.6.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href=&quot;https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v8.6.0&quot;&gt;https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v8.6.0&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295018/bootstrapblazor-8-6-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295018/bootstrapblazor-8-6-0-released</guid>
            <pubDate>Thu, 30 May 2024 06:59:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>【Lazy ORM +Netty+DB 开发一个内网穿透】</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;【Lazy ORM +Netty+DB 开发一个内网穿透】&lt;/h1&gt; 
&lt;h2&gt;环境&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Java 17&lt;/li&gt; 
 &lt;li&gt;Spring Boot 3.x&lt;/li&gt; 
 &lt;li&gt;Lazy ORM&lt;/li&gt; 
 &lt;li&gt;Netty&lt;/li&gt; 
 &lt;li&gt;Mysql、H2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;体验地址&lt;/h2&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F124.222.48.62%3A32743%2Fnetty-server-ui%2Findex.html%23%2Flogin&quot; target=&quot;_blank&quot;&gt;http://124.222.48.62:32743/netty-server-ui/index.html#/login&lt;/a&gt; （admin/admin）&lt;/p&gt; 
&lt;h2&gt;功能内网穿透&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;登录注册&lt;/li&gt; 
 &lt;li&gt;菜单权限配置&lt;/li&gt; 
 &lt;li&gt;端口管理&lt;/li&gt; 
 &lt;li&gt;客户端注册&lt;/li&gt; 
 &lt;li&gt;网络映射管理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;登录注册&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;1936&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fa2b0c11dbd5c126c58f67de43daa836495.png&quot; width=&quot;3358&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;菜单权限配置&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;1928&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ba0754755d72d86934acf542ad07c8c720e.png&quot; width=&quot;3312&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;端口管理&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;2002&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-882f306a99c138abdddb6ee6778a4e179b4.png&quot; width=&quot;3276&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;客户端注册&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;客户端源码启动&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://gitee.com/wujiawei1207537021/wu-lazy-cloud-network/tree/master/wu-lazy-cloud-heartbeat-start/wu-lazy-cloud-heartbeat-client-start&quot;&gt;https://gitee.com/wujiawei1207537021/wu-lazy-cloud-network/tree/master/wu-lazy-cloud-heartbeat-start/wu-lazy-cloud-heartbeat-client-start&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;docker 启动&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;docker run -d -it --privileged --name client -p 6004:6004 registry.cn-hangzhou.aliyuncs.com/wu-lazy/wu-lazy-cloud-heartbeat-client-start:1.2.6-JDK17-NATIVE-SNAPSHOT

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;打开客户端页面配置服务端地址&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;2002&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8a6eae880a4a73c19cd8e6f95c8d5cff0ea.png&quot; width=&quot;3346&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;客户端配置成功&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;2010&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a86fee9f7b589db5e3b5f7ab26e7da2b8f.png&quot; width=&quot;3320&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;网络映射管理&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;1996&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2bfe7411426a82944f0aa0102067fbe75ab.png&quot; width=&quot;3332&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;项目地址&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/wujiawei1207537021/wu-lazy-cloud-network&quot;&gt;https://gitee.com/wujiawei1207537021/wu-lazy-cloud-network&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Lazy ORM 框架地址&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/wujiawei1207537021/wu-framework-parent&quot;&gt;https://gitee.com/wujiawei1207537021/wu-framework-parent&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295016</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295016</guid>
            <pubDate>Thu, 30 May 2024 06:50:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>国产数据迁移同步工具 CloudCanal v4.1.1.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;CloudCanal&lt;span&gt;&amp;nbsp;免费社区版&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;是&lt;span&gt;&amp;nbsp;&lt;/span&gt;ClouGence&lt;span&gt;&amp;nbsp;&lt;/span&gt;公司推出的一款&lt;strong&gt;全自研&lt;/strong&gt;、&lt;strong&gt;可视化&lt;/strong&gt;、&lt;strong&gt;自动化&lt;/strong&gt;数据迁移同步工具，具备&amp;nbsp;&lt;strong&gt;结构迁移&lt;/strong&gt;、&lt;strong&gt;数据迁移&lt;/strong&gt;、&lt;strong&gt;数据同步&lt;/strong&gt;、&lt;strong&gt;数据校验&lt;/strong&gt;、&lt;strong&gt;数据订正&amp;nbsp;&lt;/strong&gt;等功能，支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;30+ 款&lt;/strong&gt;流行关系型数据库、实时数仓、消息中间件、缓存数据库和搜索引擎之间数据互通，其中包含国产数据库&amp;nbsp;&lt;strong&gt;OceanBase&lt;/strong&gt;,&lt;strong&gt;PolarDB&lt;/strong&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;TiDB&lt;/strong&gt;,&amp;nbsp;&lt;strong&gt;StarRocks&lt;/strong&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Doris&lt;/strong&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;RocketMQ&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;结合开源项目&amp;nbsp;&lt;a href=&quot;https://gitee.com/clougence/cloudcanal-data-process&quot;&gt;CloudCanalProcess&lt;/a&gt;&amp;nbsp;，可方便实现如下功能&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;wide-table&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 打宽表数据处理插件，主要包括事实表和单维表组合处理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-transform&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 数据通用转换插件，比如做操作变幻、额外加字段、清洗回填数据&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-gather&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 数据汇聚插件，将分库分表、垂直拆分、异地数据进行实时汇聚&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-compare&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 数据对比插件，根据源端数据变化进行业务对账&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;business-alert&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 业务告警插件，根据数据变化趋势做出相应告警&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;CloudCanal&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;产品功能对标阿里云 DTS,&amp;nbsp; 亚马逊 DMS,&amp;nbsp; StreamSets, AirByte，助力开发、DBA 或运维同学快速构建在线数据应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e272e9fc5e6af50fcf4e5a39da62d43cbef.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h1&gt;&lt;strong&gt;Release-Note&lt;/strong&gt;&lt;/h1&gt; 
&lt;/div&gt; 
&lt;h2&gt;新链路&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2FreleaseNote%2Frn-cloudcanal-4-1-1-0%23%25E6%2596%25B0%25E9%2593%25BE%25E8%25B7%25AF&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;开放 Hana -&amp;gt; PostgreSQL 结构迁移、全量同步、增量同步、数据校验与订正&lt;/li&gt; 
 &lt;li&gt;开放 OceanBase -&amp;gt; SelectDB / Doris 结构迁移、全量同步、增量同步、数据校验与订正、DDL 同步（建表、加列、减列、修改列、重命名表）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;新特性&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2FreleaseNote%2Frn-cloudcanal-4-1-1-0%23%25E6%2596%25B0%25E7%2589%25B9%25E6%2580%25A7&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 PostgreSQL -&amp;gt; PostgreSQL / MySQL / StarRocks DDL 同步（ALTER TABLE ADD / MODIFY / DROP COLUMN）&lt;/li&gt; 
 &lt;li&gt;支持 Oracle -&amp;gt; ClickHouse DDL 同步（ALTER TABLE ADD / MODIFY / DROP COLUMN 和 TRUNCATE TABLE）&lt;/li&gt; 
 &lt;li&gt;支持 Oracle -&amp;gt; Doris / SelectDB DDL 同步（CREATE TABLE(全库同步)，DROP TABLE(全库同步)，ALTER TABLE ADD / MODIFY / DROP COLUMN 和 TRUNCATE TABLE）&lt;/li&gt; 
 &lt;li&gt;支持 MySQL / Oracle -&amp;gt; Oracle DDL 同步（ALTER TABLE ADD / MODIFY / DROP COLUMN）&lt;/li&gt; 
 &lt;li&gt;支持 Oracle / PostgreSQL / OceanBase / AdbForMySQL / TiDB 目标端 DDL 去重能力&lt;/li&gt; 
 &lt;li&gt;支持 GuassDbForOpenGauss 对端 UPSERT 写入方式（参数 keyConflictStrategy 为 IGNORE / REPLACE）&lt;/li&gt; 
 &lt;li&gt;支持 Oracle BFLOAT / BDOUBLE 类型同步&lt;/li&gt; 
 &lt;li&gt;支持 Kafka -&amp;gt; ElasticSearch 修改订阅&lt;/li&gt; 
 &lt;li&gt;支持 StarRocks 源端全量期间修改订阅&lt;/li&gt; 
 &lt;li&gt;支持 SqlServer -&amp;gt; MySQL、StarRocks 设置虚拟列&lt;/li&gt; 
 &lt;li&gt;支持 Oracle -&amp;gt; Doris 设置虚拟列&lt;/li&gt; 
 &lt;li&gt;支持，目标端为 SQLServer 的链路创建任务前重建表或清空数据&lt;/li&gt; 
 &lt;li&gt;支持 Kafka 源端 Debezium Json 格式的 Read 事件&lt;/li&gt; 
 &lt;li&gt;支持 Oracle 修改订阅子任务复制主任务部分参数：redoFetchSize / logMiningScnStep / oraMiningSessionPauseSec&lt;/li&gt; 
 &lt;li&gt;支持 CloudCanal 扩展 CloudDM Team 能力，具体查看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2FproductOP%2Fplatform%2Fextend_clouddm_team&quot; target=&quot;_blank&quot;&gt;https://www.clougence.com/cc-doc/productOP/platform/extend_clouddm_team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持，操作审计记录任务的生命周期全流程&lt;/li&gt; 
 &lt;li&gt;支持，创建任务时可修改对端待创建表的名字&lt;/li&gt; 
 &lt;li&gt;支持，修改子账号的用户名与账号&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;优化&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2FreleaseNote%2Frn-cloudcanal-4-1-1-0%23%25E4%25BC%2598%25E5%258C%2596&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化，多种链路 DDL 同步架构和能力，默认包含 CREATE TABLE(全库同步)，DROP TABLE(全库同步)，ALTER / TRUNCATE TABLE 4 大类 DDL 同步&lt;/li&gt; 
 &lt;li&gt;优化，添加 Doris、StarRocks、TiDB、Hive 数据源时，对 Host 进行格式检查以及连通性检查&lt;/li&gt; 
 &lt;li&gt;优化 StarRocks 和 Doris 序列化异常报错信息，方便排查库表列&lt;/li&gt; 
 &lt;li&gt;优化 TiDB 对端组合 DDL 执行异常问题&lt;/li&gt; 
 &lt;li&gt;优化，结构迁移 PostgreSQL TEXT 类型映射成 StarRocks VARCHAR(1048576) (sr .ver &amp;lt; 2.1 则为 65533)&lt;/li&gt; 
 &lt;li&gt;优化，结构迁移 PostgreSQL DATE 类型映射成 StarRocks DATE 类型&lt;/li&gt; 
 &lt;li&gt;优化，子账号登录方式，更加简单和直观&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;问题修复&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2FreleaseNote%2Frn-cloudcanal-4-1-1-0%23%25E9%2597%25AE%25E9%25A2%2598%25E4%25BF%25AE%25E5%25A4%258D&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 MySQL -&amp;gt; TiDB 、ADB for MySQL DDL 语句中注释信息带有引号导致异常的问题&lt;/li&gt; 
 &lt;li&gt;修复 TiDB 对端组合 DDL 执行异常的问题&lt;/li&gt; 
 &lt;li&gt;修复 Hana 表级 CDC 模式下丢数据的问题&lt;/li&gt; 
 &lt;li&gt;修复 Oracle 源端刷新 Thread 个数异常的问题&lt;/li&gt; 
 &lt;li&gt;修复 Oracle -&amp;gt; Oracle 结构迁移 VARCHAR2(N CHAR) 时丢失 CHAR 的问题&lt;/li&gt; 
 &lt;li&gt;修复 Oracle 目标端写入时 CHAR / NCHAR 包含中文补全空格导致超长的问题&lt;/li&gt; 
 &lt;li&gt;修复 Oracle -&amp;gt; Oracle 结构迁移，某个列既是 PK 又是 INDEX 同步报错的问题&lt;/li&gt; 
 &lt;li&gt;修复，双向同步 PostgreSQL / GuassDbForOpenGauss 修改订阅时，子任务未带上主任务对应防循环配置的问题&lt;/li&gt; 
 &lt;li&gt;修复，双向同步 PostgreSQL / GuassDbForOpenGauss DML 单行写入防循环问题&lt;/li&gt; 
 &lt;li&gt;修复，双向同步 PostgreSQL DDL 防循环问题&lt;/li&gt; 
 &lt;li&gt;修复 PostgreSQL / GuassDbForOpenGauss 对端结构迁移将 CHAR 和 BPCHAR 默认转换为 VARCHAR 的问题（前者数据填充空格，后者去除）&lt;/li&gt; 
 &lt;li&gt;修复 StarRocks / Doris / SelectDB 对端连续 DDL 执行报错和 DDL 后写入数据报字段不一致的问题&lt;/li&gt; 
 &lt;li&gt;修复 StarRocks RENAME 语句库表未映射导致 DDL 跳过的问题&lt;/li&gt; 
 &lt;li&gt;修复，高级模式过滤条件部分类型和条件表达式过滤失败的问题&lt;/li&gt; 
 &lt;li&gt;修复，状态机页面显示记录不包含子任务的问题&lt;/li&gt; 
 &lt;li&gt;修复，追加的数据校验任务报错的问题&lt;/li&gt; 
 &lt;li&gt;修复，数据校验子任务自动启动的问题&lt;/li&gt; 
 &lt;li&gt;修复，同步任务的创建人信息展示错误的问题&lt;/li&gt; 
 &lt;li&gt;修复，子账号在有权限的前提下，获取 Sidecar 核心配置验证码出错问题&lt;/li&gt; 
 &lt;li&gt;修复，子账号对於单独创建校验订正子任务未自动授权问题，子任务加入授权鉴权体系&lt;/li&gt; 
 &lt;li&gt;修复，子账号资源授权操作完页面无数据或数据无更新的问题&lt;/li&gt; 
 &lt;li&gt;修复，资源授权切换资源类型时筛选条件没有清空的问题&lt;/li&gt; 
 &lt;li&gt;修复，目标端有大小写不一致的表名时源端没有显示对应的待创建表的问题&lt;/li&gt; 
 &lt;li&gt;修复，异步任务详情样式展示问题&lt;/li&gt; 
 &lt;li&gt;修复，修改订阅失败按钮依然 Loading 导致无法继续修改的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;免费下载与使用&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;快速上手：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2Fquick%2Fquick_start&quot; target=&quot;_blank&quot;&gt;https://www.clougence.com/cc-doc/quick/quick_start&lt;/a&gt;&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295013/cloudcanal-4-1-1-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295013/cloudcanal-4-1-1-0-released</guid>
            <pubDate>Thu, 30 May 2024 06:29:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>高性能多语言序列化框架 Apache Fury 0.5.1 版本正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;div&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;大家好，非常高兴向大家发布 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Freleases%2Ftag%2Fv0.5.1&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Apache Fury 0.5.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 版本。该版本包含了来自七个 contributor 的 37 个 PR 的贡献，可以参考&lt;/span&gt;&lt;span&gt;安装&lt;/span&gt;&lt;span&gt;文档获取最新版本。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;Release Notes：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Freleases%2Ftag%2Fv0.5.1&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://github.com/apache/incubator-fury/releases/tag/v0.5.1&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;span&gt;Apache Fury 简介&lt;/span&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;Apache Fury 是一个基于 JIT 动态编译和零拷贝的高性能多语言序列化框架，只 Java/Python/JavaScript/Golang/Scala/C++等语言，提供最高 170 倍的性能和极致的易用性&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;项目 github repo 地址：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://github.com/apache/incubator-fury&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;官网主页：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffury.apache.org%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://fury.apache.org&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(spec): 从类型元数据规范移除 list/map header by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1590&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1590&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;perf(java): 优化 MetaString 编码 deleteCharAt 的性能开销 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLiangliangSui&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@LiangliangSui&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1591&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1591&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 类型元数据共享规范实现 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1556&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1556&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; and &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1601&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1601&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(sepc): 更新跨语言类型元数据字段信息规范 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1603&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1603&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(javascript): add data to description util by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytemain&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@bytemain&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1609&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1609&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 内置支持 CopyOnWriteArrayListSerializer by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1613&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1613&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 新增 blocked stream 工具，用于无法进行 Native 流式反序列化场景 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1617&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1617&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(go/java): meta string 编码增加 ASCII 检查 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjasonmokk&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@jasonmokk&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1620&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1620&lt;/span&gt;&lt;/a&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1631&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1631&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 支持低版本 guava by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1622&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1622&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 支持反序列化不存在的枚举值 by @157152688 in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1623&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1623&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 内置 concurrent set 序列化器 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1616&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1616&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): 增加自定义序列化器注册工厂函数 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1625&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1625&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;feat(java): ThreadSafeFury 移除软引用和弱引用 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1639&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1639&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;refactor(java): 移除 Guava 集合使用 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMunoon&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@Munoon&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1611&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1611&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; and &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1614&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1614&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;refactor(java): 移除 Guava String 工具类使用 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMunoon&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@Munoon&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1624&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1624&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;Bug Fix&lt;/span&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 支持低版本 guava by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fissues%2F1593&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1593&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; and &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1594&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1594&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复 getClassDef 线程安全问题 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1597&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1597&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 将 slf4j 依赖设置为 provided by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1605&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1605&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 异常情况下清理 collection/map 元素序列化器 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1606&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1606&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复 TypeRef#getSubType by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1608&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1608&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复 fastutil Object2ObjectOpenHashMap 序列化 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1618&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1618&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复子类无字段时直接序列化父类问题 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1626&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1626&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复 wildcard capturer 空指针异常 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1637&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1637&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复集合元素类型为抽象类型时序列化异常 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1641&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1641&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;fix(java): 修复 classLoaderFuryPooled 时 ThreadPoolFury#factoryCallback 不生效问题 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1628&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1628&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;Misc&lt;/span&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;chore(java): 将部分 Java 测试移动到 meta/reflect 包 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1592&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1592&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;chore(java): 将枚举序列化器从内部类升级为顶级类型 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1598&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1598&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;chore: Fury header 规范增加语言字段 by &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLiangliangSui&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@LiangliangSui&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; in &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1612&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1612&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;chore(java): remove gpg pinentry-mode by&lt;/span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchaokunyang&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@chaokunyang&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; &lt;/span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1636&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1636&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;New Contributors&lt;/span&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMrChang0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@MrChang0&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; 在 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1594&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1594&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 做出了首次贡献&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjasonmokk&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;@jasonmokk&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; 在 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1620&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1620&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 做出了首次贡献&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;@157152688 在 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fpull%2F1623&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#1623&lt;/span&gt;&lt;/a&gt;&lt;span&gt; 做出了首次贡献&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;&lt;strong&gt;&lt;span&gt;致谢&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;感谢 chaokunyang、MrChang0、bytemain、weijiang157152688、Munoon、jasonmokk、LiangliangSui。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;对于在这次发布工作中倾注了大量心血的所有贡献者，我们表示由衷的感谢。无论是通过代码、文档撰写还是问题报告，我们都非常感激大家的贡献。 &lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span&gt;完整变更记录&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury%2Fcompare%2Fv0.5.0...v0.5.1&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;v0.5.0...v0.5.1&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#000000&quot;&gt;加入我们&lt;/span&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;欢迎对 Fury 感兴趣的各位用户和开发者加入 Fury 开源社区，欢迎任何形式的参与，包括但不限于提问、代码贡献、技术讨论等。非常期待收到大家的想法和反馈，一起参与到项目的建设中来，推动项目向前发展。可以通过以下方式关注和了解社区的最近动态，期待您的加入：&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Fury Github 仓库地址：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-fury&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://github.com/apache/incubator-fury&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;官方网站：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffury.apache.org%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://fury.apache.org&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Fury 邮件列表地址：dev@fury.apache.org, 可通过向 dev-subscribe@fury.apache.org 发送邮件订阅&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Fury 微信公众号：apache-fury&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295012/apache-fury-0-5-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295012/apache-fury-0-5-1-released</guid>
            <pubDate>Thu, 30 May 2024 06:28:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>JavaMelody v2.2.0 发布，Java 应用监控平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;JavaMelody 是一个监控系统，目标是在 QA 和生产环境中监控&amp;nbsp;Java 或 Java EE 应用程序。JavaMelody v2.1.0 现已发布，&lt;/span&gt;&lt;strong style=&quot;color:#333333&quot;&gt;主要更新内容包括：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fissues%2F1214&quot; target=&quot;_blank&quot;&gt;#1214&lt;/a&gt;&amp;nbsp;PostgreSQL pg_database 请求由于自 PostgreSQL 15 以来因缺少列而失败（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fcommit%2F54d2178&quot; target=&quot;_blank&quot;&gt;54d2178&lt;/a&gt;）。&lt;/li&gt; 
 &lt;li&gt;修复 Spring Boot reactive webapp 中的 javamelody 异常，并在没有 javamelody 的情况下启动（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fpull%2F1206&quot; target=&quot;_blank&quot;&gt;PR 1206&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;现在，使用 jakarta.servlet api&amp;nbsp;的 2.x 版本至少需要 Java 11 &lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fcommit%2Fc2c4f22&quot; target=&quot;_blank&quot;&gt;c2c4f22&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fcommit%2F972dd28&quot; target=&quot;_blank&quot;&gt;972dd28&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;)&lt;/span&gt;。使用 javax.servlet api 的 1.x 版本仍至少需要 Java 7。&lt;/li&gt; 
 &lt;li&gt;放弃对旧版 log4j v1 的支持并保留对 log4j v2 的支持（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fcommit%2Fa4f5888&quot; target=&quot;_blank&quot;&gt;a4f5888&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;放弃对旧版 commons-dbcp 属性的支持并保留对 commons-dbcp2 的支持（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fcommit%2F375005d&quot; target=&quot;_blank&quot;&gt;375005d&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;更新了中文（大陆）翻译（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fcommit%2Fd2f72d4&quot; target=&quot;_blank&quot;&gt;d2f72d4&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;要使用自己的语言进行贡献，可加入翻译项目&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpoeditor.com%2Fjoin%2Fproject%2FQIaCp4bThS&quot; target=&quot;_blank&quot;&gt;https://poeditor.com/join/project/QIaCp4bThS&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;在 sql requests 的详细信息中，添加针对 Postgresql 16 或更高版本的解释计划（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fissues%2F727&quot; target=&quot;_blank&quot;&gt;#727&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;用 javamelody-core 2.2.0 和 Tomcat embedded 10.1.23 更新&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fwiki%2FUserGuideAdvanced%23offline-viewer&quot; target=&quot;_blank&quot;&gt;offline viewer&lt;/a&gt;。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Freleases%2Fdownload%2Fjavamelody-core-2.2.0%2Fjavamelody-offline-viewer.jar&quot; target=&quot;_blank&quot;&gt;javamelody-offline-viewer 2.2.0&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;可供下载。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;下载：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;可参阅&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fwiki%2FReleaseNotes%23220&quot; target=&quot;_blank&quot;&gt;发行说明 v2.2.0&lt;/a&gt;&amp;nbsp;和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fwiki%2FUserGuide&quot; target=&quot;_blank&quot;&gt;用户指南&lt;/a&gt;以进行安装。&lt;/li&gt; 
 &lt;li&gt;如果你使用 Maven，在你的 webapp 的 pom.xml 中添加&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fwiki%2FUserGuide%23dependencies&quot; target=&quot;_blank&quot;&gt;依赖项：&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;        &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;net.bull.javamelody&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;javamelody-core&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;2.2.0&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Freleases%2Fdownload%2Fjavamelody-core-2.2.0%2Fjavamelody-core-2.2.0.jar&quot; target=&quot;_blank&quot;&gt;javamelody-core-2.2.0.jar&lt;/a&gt;：用于集成到 web 应用程序中的 Jar&lt;/li&gt; 
 &lt;li&gt;War of the optional collect server 从 1.x 版本开始可用。在大多数用例中不需要它。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;插件：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fwiki%2FAtlassianPlugin&quot; target=&quot;_blank&quot;&gt;JIRA / Confluence / Bamboo / Bitbucket&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwiki.jenkins-ci.org%2Fdisplay%2FJENKINS%2FMonitoring&quot; target=&quot;_blank&quot;&gt;Jenkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fliferay-javamelody&quot; target=&quot;_blank&quot;&gt;Liferay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Falfresco-javamelody&quot; target=&quot;_blank&quot;&gt;Alfresco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fsonar-javamelody&quot; target=&quot;_blank&quot;&gt;Sonar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.grails.org%2Fplugin%2Fgrails-melody&quot; target=&quot;_blank&quot;&gt;Grails&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更多详情可查看&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjavamelody%2Fjavamelody%2Fwiki%2FReleaseNotes&quot; target=&quot;_blank&quot;&gt;ReleaseNotes&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295006/javamelody-2-2-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295006/javamelody-2-2-0-released</guid>
            <pubDate>Thu, 30 May 2024 06:01:23 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Light Chaser v1.2.0 已经发布，大屏数据可视化设计器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Light Chaser v1.2.0 已经发布，大屏数据可视化设计器&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h4&gt;Features.&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;文本组件细化文本详细配置，支持字间距、行间距、描边、对齐设置。数字翻牌器支持对齐设置。&lt;/li&gt; 
 &lt;li&gt;支持自定义高德地图组件（需自行申请高德地图 key）&lt;/li&gt; 
 &lt;li&gt;支持自定义 G2Plot 图表组件（自定义文档请参考 G2 官方文档）&lt;/li&gt; 
 &lt;li&gt;支持项目导出、导入功能（json 格式）&lt;/li&gt; 
 &lt;li&gt;支持 Ctrl + F 快捷键搜素图层（最新为弹窗方式搜索，原有图层顶部搜索功能废弃）&lt;/li&gt; 
 &lt;li&gt;支持 docker 部署&lt;/li&gt; 
 &lt;li&gt;新增当前日期时间组件&lt;/li&gt; 
 &lt;li&gt;新增组件滤镜功能&lt;/li&gt; 
 &lt;li&gt;新增项目重命名功能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Bug Fixes:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;修复分组后删除分组元素导致整个分组均被删除的 bug&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Enhancement:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化首页、图标显示效果&lt;/li&gt; 
 &lt;li&gt;移除冗余依赖项&lt;/li&gt; 
 &lt;li&gt;优化字体加载时机&lt;/li&gt; 
 &lt;li&gt;优化项目编译打包速度，静态导入统一调整为动态导入&lt;/li&gt; 
 &lt;li&gt;优化图层隐藏与重新显示效果&lt;/li&gt; 
 &lt;li&gt;优化首页展示效果及首页加载速度&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;详情查看：&lt;a href=&quot;https://gitee.com/xiaopujun/light-chaser/releases/v1.2.0&quot;&gt;https://gitee.com/xiaopujun/light-chaser/releases/v1.2.0&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/294998/light-chaser-1-2-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/294998/light-chaser-1-2-0-released</guid>
            <pubDate>Thu, 30 May 2024 05:32:23 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>写字楼里写字间，写字间里程序员</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;strong&gt;写字楼里写字间，写字间里程序员&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Minix 作者唐伯虎有诗云：&lt;/p&gt; 
&lt;p&gt;写字楼里写字间，写字间里程序员；&lt;br&gt; 程序人员写程序，又拿程序换酒钱。&lt;br&gt; 酒醒只能网上坐，醉酒还来网下眠；&lt;br&gt; 醉酒酒醒日复日，网上网下年复年。&lt;br&gt; 但愿老死电脑间，不愿鞠躬老板前；&lt;br&gt; 别人笑我太疯癫，我笑自己命太贱；&lt;br&gt; 不见满街漂亮妹，那个归得程序员。&lt;/p&gt; 
&lt;p&gt;所以您需要魔法棒，Rust 通用代码生成器就是这样的魔法棒。最近的视频介绍了最新版尝鲜版二十四对编辑器功能的改进，视频请见：&lt;br&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jU411d756%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1jU411d756/&lt;/a&gt;&lt;br&gt; &lt;br&gt; Rust 通用代码生成器莲花，红莲尝鲜版二十四，此版本完善了多对多候选功能，实现了多对多候选的持久化和反射功能。增强了数据库自动反射功能和模板向导的元数据与数据编辑器。改进了编译警告和编译错。灵活使用通用代码生成器的各种梦幻功能，您可以拥有代码魔法，自由的穿行于代码世界，从此拥有开发速度，质量，劳动量和成本的优势。视频请见：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rz421Y7U7%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1rz421Y7U7/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Rust 通用代码生成器：莲花将强大的生产力赋能广大程序员。无论是新开发的软件还是通过遗留数据库反射以再次开发的遗留项目，您都可以使用动词算子式通用代码生成器的强大生产力大大加速研发速度。得此，您可以感叹：」程序山河程序居，经理产品列两边。「岂不爽哉？&lt;/p&gt; 
&lt;p&gt;红莲新版发布了相关的视频，讲解了相关的数据库自动反射功能的增强和对元数据和数据编辑器的增强。视频请见：&lt;br&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Lw4m1Q7SJ%2F+%C2%A0&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1Lw4m1Q7SJ/ &amp;nbsp; &lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1KJ4m1N7gs%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1KJ4m1N7gs/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;代码生成器的项目地址：&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus&quot;&gt;https://gitee.com/jerryshensjf/Lotus&lt;/a&gt;&lt;br&gt; 二进制 war 包的下载地址:&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fhttps%3A%2F%2Fgitee.com%2Fjerryshensjf%2FLotus%2Fattach_files&quot; target=&quot;_blank&quot;&gt; https://gitee.com/jerryshensjf/Lotus/attach_files&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Rust 通用代码生成器：莲花&lt;/h1&gt; 
&lt;h3&gt;项目介绍&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器：莲花，是 Java 写成的 Rust 通用代码生成器，目前的版本采用 openjdk 17 编译。软件为一 war 包，可以部署在 Tomcat 9 的 webapps 目录下，启动即可运行。&lt;/p&gt; 
&lt;h4&gt;项目图片&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/RedLotus.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/pl_3.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;软件架构&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;后端代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;前端代码生成物可运行在 Nodejs 21,18 或 14 上。是 Vue ElementUI 架构。&lt;/p&gt; 
&lt;h3&gt;近期版本&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十四，此版本完善了多对多候选功能，实现了多对多候选的持久化和反射功能。增强了数据库自动反射功能和模板向导的元数据与数据编辑器。改进了编译警告和编译错。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十三，此版本新增了多对多候选功能，增强了数据库自动反射功能和模板向导的编辑器。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十二，此版本新增了数据库自动反射功能，可以为遗留数据库配上操作软件。此版本增强了模板向导界面的编辑器功能，可以不清空数据的情况下编辑项目的元数据和数据。可以切换域对象和枚举，可以清洗登录数据。此版本彻底修复了枚举和哑数据功能。并有前端界面更新。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通用代码生成器阵列是通过 Excel 模板来表征系统的。和市面上大多数使用数据库来表征系统的不一样。此功能可以将数据库反射成通用代码生成器的一个项目。并进一步反射成 Excel 模板和前端后端的代码生成物。此功能拥有强大的编辑器功能，可以对反射而来的元数据和数据深入编辑，生成相应的结果。同时，对编辑器的深度改进，使用户可以方便的将域对象切换为枚举，或将枚举切换为域对象，也可以清洗登录数据，使密码自动设为用户名。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;有了数据库自动反射功能，Rust 通用代码生成器莲花成了可以在数分钟内为遗留数据库配上完整的 Rust 后端软件和 Vue 前端软件的能力。非常实用，非常强大。欢迎大家试用。&lt;/p&gt; 
&lt;h3&gt;重点组件和功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;动词算子&lt;/li&gt; 
 &lt;li&gt;域对象&lt;/li&gt; 
 &lt;li&gt;棱柱&lt;/li&gt; 
 &lt;li&gt;项目&lt;/li&gt; 
 &lt;li&gt;时空之门前端代码生成器引擎&lt;/li&gt; 
 &lt;li&gt;弹性登录模块&lt;/li&gt; 
 &lt;li&gt;Grid 页生成模块&lt;/li&gt; 
 &lt;li&gt;多对多生成模块&lt;/li&gt; 
 &lt;li&gt;数据库脚本生成模块&lt;/li&gt; 
 &lt;li&gt;动态椰子树功能群&lt;/li&gt; 
 &lt;li&gt;动词否定功能群&lt;/li&gt; 
 &lt;li&gt;字段否定功能群&lt;/li&gt; 
 &lt;li&gt;高级定制功能群&lt;/li&gt; 
 &lt;li&gt;部分生成功能群&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本功能群&lt;/li&gt; 
 &lt;li&gt;上传生成界面&lt;/li&gt; 
 &lt;li&gt;模板向导生成界面&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本生成界面&lt;/li&gt; 
 &lt;li&gt;Excel 数据导出功能&lt;/li&gt; 
 &lt;li&gt;PDF 数据导出功能&lt;/li&gt; 
 &lt;li&gt;数据库后端模式&lt;/li&gt; 
 &lt;li&gt;数据库工具模式&lt;/li&gt; 
 &lt;li&gt;哑数据模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安装教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;先装好 open jdk 17 和 Apache Tomcat 9，如果您从源码编译代码生成器还需要事先装好 Apache Maven&lt;/li&gt; 
 &lt;li&gt;下载编译好的 Rust 通用代码生成器莲花的 war 包，或者下载源码，解压后使用 mvn install 命令编译，得到代码生成器的 war 包&lt;/li&gt; 
 &lt;li&gt;把代码生成器的 war 包的名字改短，成为 Lotus.war，并放置在 Apache Tomcat 9 的 webapps 目录下&lt;/li&gt; 
 &lt;li&gt;启动 Apache Tomcat 9&lt;/li&gt; 
 &lt;li&gt;访问&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8080%2FLotus%2F&quot;&gt;http://localhost:8080/Lotus/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;即可使用代码生成器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;后端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将后端项目下载并解压&lt;/li&gt; 
 &lt;li&gt;根据您的数据库选项，配置好您后端的数据库，并使用后端代码生成物的 sql 文件夹下的数据库脚本完成建库建表并加载初始化数据&lt;/li&gt; 
 &lt;li&gt;您需要检查后端代码生成物内的配置文件，确认数据库和用户名密码的正确性&lt;/li&gt; 
 &lt;li&gt;您需要安装配置好 rust 1.69 或其他兼容版本的 rust 环境&lt;/li&gt; 
 &lt;li&gt;在后端代码生成物的根目录下运行 cargo run 命令启动 rust 后端项目&lt;/li&gt; 
 &lt;li&gt;启动完毕后访问后端代码生成物，&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8082&quot;&gt;http://localhost:8082&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将前端代码生成物解压&lt;/li&gt; 
 &lt;li&gt;确认您已经安装好和您选择的 Nodejs 版本相容的前端 Nodejs 环境&lt;/li&gt; 
 &lt;li&gt;使用 npm install -registry=&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org&quot;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;安装 Nodejs 依赖包&lt;/li&gt; 
 &lt;li&gt;如果您使用的是 Nodejs 21 和 Nodejs18，请运行命令：export NODE_OPTIONS=--openssl-legacy-provider&lt;/li&gt; 
 &lt;li&gt;运行命令：node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js&lt;/li&gt; 
 &lt;li&gt;如此访问前端代码生成物，&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8000%2F&quot;&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;运行截图&lt;/h3&gt; 
&lt;h4&gt;数据库反射为项目截屏&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/DBReflectProject.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;软件截屏&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_excelg.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excelWizard.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_compare2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;后端代码生成物截屏&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;日期时间对话框&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/datetime.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;单表操作&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_grid.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;多对多&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/rust_mtm.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;复杂版面，树表&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_treegrid.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;图形报表&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_echarts.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;图片功能&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/lotus_pic.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Excel 数据导出&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_excel_export.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;PDF 数据导出&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_pdf_export.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;前端代码生成物截屏&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Vue 前端日期对话框&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/front_date.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Vue 独立前端，登录界面&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_login.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Vue 独立前端，内页&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://gitee.com/jerryshensjf/Lotus/raw/master/Lotus_frontend_inner.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;百度话题&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;＃通用代码生成器＃&lt;/p&gt; 
&lt;h3&gt;尝鲜版二十四的二进制发布包下载&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus/attach_files&quot;&gt;https://gitee.com/jerryshensjf/Lotus/attach_files&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Nodejs 前端代码生成物运行指南&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;莲花尝鲜版二十一消除了 95% 的 EsLint 编译警告。并且，您可以忽略全部编译警告。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;莲花尝鲜版二十支持 Nodejs 21, 18 和 14 三种 Nodejs 环境。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;首先，使用 Rust 通用代码生成器莲花的红莲尝鲜版二十生成前端代码生成物，生成时需选择 Nodejs 相应版本。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;将代码生成物的前端和后端代码生成物的压缩包拷入工作目录并完成解压缩，部署并启动后端项目。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;进入前端代码生成物的根目录，需选择正确的 Nodejs 版本。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;运行命令：npm install -registry=&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org&quot;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;此命令使用淘宝镜像安装 Nodejs 依赖包。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;如果您使用的是 Nodejs 21 和 Nodejs18，请运行命令：export NODE_OPTIONS=--openssl-legacy-provider&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;此命令暴露了一个必须的内存变量。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;运行命令：node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;此命令启动了前端项目。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;访问：&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8000%2F&quot;&gt;http://localhost:8000/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;源码编译用户指南&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通用代码生成器已经支持自己编译源码，我已把原来缺的前端代码生成器的 jar 包上传。支持大家自行编译源码。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;需要注意的是，现在我的开发平台是 Fedora 37 上的 openjdk 17。所以大家编译源码最好使用 openjdk17。编译好的 war 包运行在 apache tomcat 9.0 上。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;已有 jdk8 的用户报告默认下载的代码生成器 war 包在他的平台上无法运行。您如果遇到类似问题请报告。我的电子邮件是：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=mailto%3Ajerry_shen_sjf%40qq.com&quot; target=&quot;_blank&quot;&gt;jerry_shen_sjf@qq.com&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;附 openjdk 17 下载地址：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fjdk.java.net%2Fjava-se-ri%2F17&quot;&gt;https://jdk.java.net/java-se-ri/17&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;近期视频&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;最近的视频介绍了最新版尝鲜版二十四对编辑器功能的改进，视频请见：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jU411d756%2F&quot;&gt;https://www.bilibili.com/video/BV1jU411d756/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十四，视频请见：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rz421Y7U7%2F&quot;&gt;https://www.bilibili.com/video/BV1rz421Y7U7/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十三，此版本新增了多对多候选功能，增强了数据库自动反射功能和模板向导的编辑器。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1KJ4m1N7gs%2F&quot;&gt;https://www.bilibili.com/video/BV1KJ4m1N7gs/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花发布红莲尝鲜版二十二发布介绍视频，支持数据库自动反射功能，视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fK421h74U%2F&quot;&gt;https://www.bilibili.com/video/BV1fK421h74U/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1cE421371y%2F&quot;&gt;https://www.bilibili.com/video/BV1cE421371y/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花发布红莲尝鲜版二十一发布介绍视频，前端代码生成物大翻新，视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1UH4y1j7td%2F&quot;&gt;https://www.bilibili.com/video/BV1UH4y1j7td/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花发布红莲尝鲜版二十介绍视频，视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GW4y1c7vA%2F&quot;&gt;https://www.bilibili.com/video/BV1GW4y1c7vA/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十九介绍视频，介绍了 PostgreSQL 代码生成。视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1bC4y1C7bT%2F&quot;&gt;https://www.bilibili.com/video/BV1bC4y1C7bT/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Rust 通用代码生成器莲花发布深度修复版红莲尝鲜版十八介绍视频，初学者指南，详细介绍代码生成器环境搭建，编译，运行和使用代码生成物，欢迎使用。视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1364y157Zg%2F&quot;&gt;https://www.bilibili.com/video/BV1364y157Zg/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;尝鲜版十八的视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1sa4y1d7cz%2F&quot;&gt;https://www.bilibili.com/video/BV1sa4y1d7cz/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;尝鲜版十七的视频请见：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1pG411i7Qa%2F&quot;&gt;https://www.bilibili.com/video/BV1pG411i7Qa/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1iC4y1j7rd%2F&quot;&gt;https://www.bilibili.com/video/BV1iC4y1j7rd/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rQ4y1t7qJ%2F&quot;&gt;https://www.bilibili.com/video/BV1rQ4y1t7qJ/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;版本历史和视频&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus/blob/master/History.md&quot;&gt;版本历史和视频&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;源码研读者注意事项&lt;/h3&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;无垠式代码生成器第一个完整版本源码，有兴趣可以抄写一下：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5&quot;&gt;https://gitee.com/jerryshensjf/InfinityGPGenerator_0_6_5&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;相关技术视频：&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1fX4y1u7Bn%2F&quot;&gt;https://www.bilibili.com/video/BV1fX4y1u7Bn/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1rv41187qY%2F&quot;&gt;https://www.bilibili.com/video/BV1rv41187qY/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xv41187cA%2F&quot;&gt;https://www.bilibili.com/video/BV1xv41187cA/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1t64y1v7WA%2F&quot;&gt;https://www.bilibili.com/video/BV1t64y1v7WA/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/294985</link>
            <guid isPermaLink="false">https://www.oschina.net/news/294985</guid>
            <pubDate>Thu, 30 May 2024 03:52:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>真好用的 ORM 框架 mybatis-mp 1.5.2 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;官方文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;http://mybatis-mp.cn&lt;/a&gt;&lt;/h1&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUserVo sysUserVo = QueryChain.of(sysUserMapper)
          .select(SysUserVo.class)
          .from(SysUser.class)
          .join(SysUser.class, SysRole.class)
          .returnType(SysUserVo.class)
          .get();&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;10 大与众不同的亮点：&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点一：可自定义动态默认值&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点二：支持不同数据库 ID 自增配置&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点三：逻辑删除，可自动填充删除时间&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;4：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点四：可自定义 sql（sql 模板）&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;5：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点五：mapWithKey（把查询转成一个&amp;nbsp;map）&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;6：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点&amp;nbsp;六：部分字段&amp;nbsp;新增&amp;nbsp;和&amp;nbsp;修改&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;7：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点七：枚举的良好支持&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;8：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点八：mybatis-xml&amp;nbsp;returnType&amp;nbsp;的&amp;nbsp;ORM&amp;nbsp;映射&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;9：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点九：优雅的&amp;nbsp;XML 和&amp;nbsp;@Select 查询&amp;nbsp;自动分页&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;10：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点十：支持多层嵌套 VO，自动映射以及自动 select&amp;nbsp;所需列&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;mybatis-mp 包含丰富的 api：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;1：基于注解，映射数据库；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2：支持多表 join 和返回；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;3：api 采用 lambda 和 stream 流式设计；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;5：内置分页以及超强的 sql 优化功能；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;6：稳定且性能极优；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7：轻量级封装 mybatis，几乎没有侵入；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;9：零学习成本，和写 sql 一样方便。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;11：支持自定义 sql 模板，再也不用担心框架支持不足；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;12：内置代码生成器，通过配置，可定制自身规范；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;13：全新的框架，全新的设计理念，新的就是好！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/294972/mybatis-mp-1-5-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/294972/mybatis-mp-1-5-2-released</guid>
            <pubDate>Thu, 30 May 2024 03:22:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Semi Design v2.59.1 发布，抖音企业级 UI 库</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semi Design 是现代、全面、灵活的设计系统和 UI 库，由字节跳动抖音前端与 UED 团队设计、开发并维护，是一款包含设计语言、React 组件、主题等开箱即用的中后台解决方案，可用于快速搭建美观的 React 应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semi Design v2.59.1 现已发布，此版本带来如下更新内容：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;【Fix】 
  &lt;ul&gt; 
   &lt;li&gt;修复 Select Option 传入 data-*属性未生效的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2258&quot; target=&quot;_blank&quot;&gt;#2258&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 Toast 在多条长度不同的 toast 弹出时，没有居中而是左对齐的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2257&quot; target=&quot;_blank&quot;&gt;#2257&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 TreeSelect 在 defaultOpen 模式时候，点击外部没有无法关闭弹出层问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2254&quot; target=&quot;_blank&quot;&gt;#2254&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 Avatar 在设置了 border/topSlot/bottomSlot API 情况下，无法触发 onClick、onMouseEnter、onMouseLeave 事件问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2255&quot; target=&quot;_blank&quot;&gt;#2255&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 Badge className 作用范围不正确的问题，功能对齐其他组件，作用于 DOM 最外层&lt;/li&gt; 
   &lt;li&gt;修正 Badge API 定义，增加更语义的 countStyle API，作用与现有 style API 保持一致（旧 API props.style 仍可使用，效果不变，但不再于文档中推荐）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;【Chore】 
  &lt;ul&gt; 
   &lt;li&gt;修复 FormApi 在未传入泛型时，调用 setValue 时会有 string 类型不能赋值给 never 的类型报错问题（影响范围，v2.59.0）&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2259&quot; target=&quot;_blank&quot;&gt;#2259&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;优化 FormApi getValue 对于嵌套路径的类型提示，对齐 setValue 行为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2259&quot; target=&quot;_blank&quot;&gt;#2259&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 TextArea 的 onBlur/onFocus 类型定义错误问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2261&quot; target=&quot;_blank&quot;&gt;#2261&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 Semi Webpack plugin 中的 webcomponentPath 参数类型定义错误问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2260&quot; target=&quot;_blank&quot;&gt;#2260&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Freleases%2Ftag%2Fv2.59.1&quot; target=&quot;_blank&quot;&gt;https://github.com/DouyinFE/semi-design/releases/tag/v2.59.1&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/294969/semi-design-2-59-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/294969/semi-design-2-59-1-released</guid>
            <pubDate>Thu, 30 May 2024 03:13:18 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>go-oam v1.2.1 已经发布，运维资产管理系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;go-oam v1.2.1 已经发布，运维资产管理系统&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;1.fix bug&lt;/p&gt; 
&lt;p&gt;2.安装包不再带开发时的 RSA 密钥证书, 程序首次运行时自动生成,保证安全性&lt;/p&gt; 
&lt;p&gt;3.应用列表增加筛选条件&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志&lt;/strong&gt;: &lt;a href=&quot;https://gitee.com/jqncc/OAM/commits/v1.2.1&quot; target=&quot;_blank&quot;&gt;https://gitee.com/jqncc/OAM/commits/v1.2.1&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href=&quot;https://gitee.com/jqncc/OAM/releases/v1.2.1&quot;&gt;https://gitee.com/jqncc/OAM/releases/v1.2.1&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/294941/go-oam-1-2-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/294941/go-oam-1-2-1-released</guid>
            <pubDate>Thu, 30 May 2024 02:05:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>