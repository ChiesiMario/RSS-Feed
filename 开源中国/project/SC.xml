<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Sat, 08 Feb 2025 07:40:10 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>Semi Design v2.74.0 发布，抖音企业级 UI 库</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semi Design 是现代、全面、灵活的设计系统和 UI 库，由字节跳动抖音前端与 UED 团队设计、开发并维护，是一款包含设计语言、React 组件、主题等开箱即用的中后台解决方案，可用于快速搭建美观的 React 应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semi Design v2.74.0 现已发布，此版本带来如下更新内容：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;【Fix】 
  &lt;ul&gt; 
   &lt;li&gt;修复 List 组件 dataSource 为空时被 Spin 组件遮挡问题&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2693&quot; target=&quot;_blank&quot;&gt;#2693&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 TreeSelect 在开启搜索并且 treeData 为      时，关闭面板时候的 TypeError&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2694&quot; target=&quot;_blank&quot;&gt;#2694&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复类型为 basic 的 Steps icon 和 title 未与 line 居中对齐问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fissues%2F2688&quot; target=&quot;_blank&quot;&gt;#2688&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2689&quot; target=&quot;_blank&quot;&gt;#2689&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复单选，可搜索的 Select 在面板打开状态下失去焦点后，无法再次通过点击 trigger 聚焦问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2668&quot; target=&quot;_blank&quot;&gt;#2668&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 AudioPlayer 倍速弹出层样式白边问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2685&quot; target=&quot;_blank&quot;&gt;#2685&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;AudioPlay 组件内部 ref 使用修改，兼容其他框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2673&quot; target=&quot;_blank&quot;&gt;#2673&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Freleases%2Ftag%2Fv2.74.0&quot; target=&quot;_blank&quot;&gt;https://github.com/DouyinFE/semi-design/releases/tag/v2.74.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332669/semi-design-2-74-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332669/semi-design-2-74-0-released</guid>
            <pubDate>Sat, 08 Feb 2025 06:47:07 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>不敢相信💥！Univer GO+DeepSeek，在电子表格内瞬间实现数据自动采集填充</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;h2&gt;模版背景：&lt;/h2&gt; 
 &lt;div&gt;
  相信大家在日常工作的数据处理过程中，都深受手动录入和采集数据的困扰。每次操作时，心里总是提心吊胆，生怕稍有不慎，数据就会出现错误。而且还要把所需信息完整收集起来，难度极大。好不容易解决了数据收集的问题，紧接着又要面临繁重的分析与整合工作。最令人无奈的是，一旦数据出现哪怕一丁点偏差，整个数据分析结果都会截然不同，进而对重要的业务决策产生影响。
 &lt;/div&gt; 
 &lt;div&gt;
  为了解决大家在数据处理方面的这些困扰，同时让大家能够毫无负担地继续使用日常熟悉的表格，我们基于 Univer Go 开发了一款智能模板 ——AI Data Enrichment。有了它数据处理效率大幅提升，大家再也不用被繁琐的数据处理工作折磨，可以将时间和精力投入到更有价值的事情上，工作和生活都能更加惬意！
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;strong&gt;赶紧点击体验链接试试&lt;/strong&gt;：
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;https://go.univer.ai/?&lt;/a&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//33f2924ea67308a549cc6170a203125b.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h2&gt;表格界面展示&lt;/h2&gt; 
 &lt;h4&gt;原 Univer 表格：&lt;/h4&gt; 
 &lt;div&gt;
  一款高度可定制化的电子表格，能够根据用户需求构建一个性能与功能对标 excel 的电子表格，支持开发者创建和运行自动化脚本、进行数据库连接与数据读写管理以及开发自定义应用。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//bc3786e12a7424e62a850291fdae7da3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h4&gt;一键运行模版后的表格：&lt;/h4&gt; 
 &lt;div&gt;
  在已有基础上深度整合 Phidata API，为用户提供三大核心功能：智能 AI 问答、精准语义搜索、网页数据提取。只需简单设置表头即可自动完成数据采集与填充，让数据处理效率提升到一个全新的水平
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//df893fa5caf31cf52448125c94a5539c.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h2&gt;来 Univer GO &lt;strong&gt;告别手动填充数据！&lt;/strong&gt;&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    请先下载 
    &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt; ， 在模版中找到 
    &lt;strong&gt;AI Data Enrichment&lt;/strong&gt;，点击使用
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&amp;nbsp;下载链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;https://go.univer.ai/?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;教程视频：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1wPf6YzEeL%2F%3Fshare_source%3Dcopy_web%26vd_source%3D54ca691c116c1bc44a5f42a0b1a8f572&quot; target=&quot;_blank&quot;&gt;Univer Go 智能数据补全和实时信息提取&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//33f1058307217bfcab15b27f4d98773e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  2.&amp;nbsp; 进入 Workspace ，等待依赖安装完成
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;右侧代码编辑器支持 AI 辅写功能，具体请查看这篇文章：&lt;a href=&quot;https://my.oschina.net/u/6977969/blog/17182756&quot;&gt;Univer Go 推出 AI 辅助编写 Univer API 功能&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//292b752d99934e114035aa51cdf559fc.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    调整代码后预览表格，最后运行代码
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//f8f26d79157ff2f0b9fd90cc0ced79d2.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    预览表格内的表头结构讲解：列标题工具按钮及列标题下方的两行内容
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    列标题，点击工具按钮，下拉框中有多种工具可以选择
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  - GPT：直接向 LLM 提问
 &lt;/div&gt; 
 &lt;div&gt;
  - 网页搜索：在网页上搜索信息。
 &lt;/div&gt; 
 &lt;div&gt;
  - 阅读：阅读文档并提取信息
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//52c76977fedb2f244982cb118d4a7820.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    列标题下方的两行内容，作为提示词的一部分，其中可以编辑「描述」部分的提示词，以便 AI 模型更好地理解您的需求。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//4cd76ef58d0041dda1f6a338371abd0d.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    接下来，我们将演示模板的使用方法。首先，框选目标区域后，会出现一个「执行」按钮。点击后，系统将根据当前列所选工具，并结合当前行和列的提示词，自动补全前一列的数据。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//1881a844acc76eb89220ca257e029bc2.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    我们可以添加一些附加提示词，调整提问效果
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//d12ac9c5a2e182ac81846651d023ae8e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    使用 Web Search 工具可以获取互联网的实时信息。当点击 Web Search 生成的结果单元格时，侧边栏会弹出更多相关链接供你查看。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//3dddd1e76a234769b92bff0e4d3f777f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    使用 Read 工具，可以对任何的公开网址进行信息提取和总结
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b69e6bafdf19bac2e51ccb1dfdf8ceeb.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    通过以上简单步骤，帮助您轻松实现在表格内自动数据采集与填充！即刻登录 
    &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer GO&lt;/a&gt; ，探索丰富多样的定制化功能，开启高效办公新体验！
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332663</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332663</guid>
            <pubDate>Tue, 04 Feb 2025 06:30:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>SQLite 3.49.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;SQLite 是一个 C 语言库，实现了一个小型、快速、独立、高可靠性、全功能的 SQL 数据库引擎。SQLite 是世界上使用最多的数据库引擎。SQLite 的源代码属于公共领域，每个人都可以免费使用，用于任何目的。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;SQLite 3.49.0 现已发布，更新内容如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Foptoverview.html&quot; target=&quot;_blank&quot;&gt;查询计划器&lt;/a&gt;的增强功能： 
  &lt;ol style=&quot;list-style-type:lower-alpha&quot;&gt; 
   &lt;li&gt;改进&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Foptoverview.html%23autoindex&quot; target=&quot;_blank&quot;&gt;查询时间索引&lt;/a&gt;优化，使其适用于&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fwithoutrowid.html&quot; target=&quot;_blank&quot;&gt;WITHOUT ROWID&lt;/a&gt;&amp;nbsp;表。&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fqueryplanner-ng.html%23starq&quot; target=&quot;_blank&quot;&gt;改进大型 star-query&lt;/a&gt;&amp;nbsp;连接的查询计划。修复了 SQLite 论坛上报告的三种不同的性能回归问题。&lt;/li&gt; 
   &lt;li&gt;当两个或多个查询具有相同的估计成本时，使用每行字节数较少的查询。&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;增强&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_corefunc.html%23iif&quot; target=&quot;_blank&quot;&gt;iif() SQL 函数&lt;/a&gt;，使其能够接受大于或等于二的任意数量的参数。&lt;/li&gt; 
 &lt;li&gt;增强&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fsessionintro.html&quot; target=&quot;_blank&quot;&gt;会话扩展&lt;/a&gt;，使其能在使用生成列的数据库上运行。&lt;/li&gt; 
 &lt;li&gt;忽略 SQLITE_USE_STDIO_FOR_CONSOLE 编译时选项，该选项未正确实现且从未正常工作。取而代之的是&amp;nbsp;SQLITE_USE_W32_FOR_CONSOLE_IO 编译时选项。此选项仅适用于 CLI 等命令行工具&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fcli.html&quot; target=&quot;_blank&quot;&gt;，&lt;/a&gt;而不适用于 SQLite core。它导致 Win32 API 用于控制枱 I/O 而不是 stdio。此选项仅影响 Windows 版本。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fdb_config.html&quot; target=&quot;_blank&quot;&gt;sqlite3_db_config()&lt;/a&gt;&amp;nbsp;有三个新选项。全部默认为「开启」。 
  &lt;ol style=&quot;list-style-type:lower-alpha&quot;&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigenableattachcreate&quot; target=&quot;_blank&quot;&gt;SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigenableattachwrite&quot; target=&quot;_blank&quot;&gt;SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigenablecomments&quot; target=&quot;_blank&quot;&gt;SQLITE_DBCONFIG_ENABLE_COMMENTS&lt;/a&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Famalgamation.html%23amalgtarball&quot; target=&quot;_blank&quot;&gt;将预编译的合并 tarball&lt;/a&gt;&amp;nbsp;中使用的配置脚本的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FGNU_Autotools&quot; target=&quot;_blank&quot;&gt;Autotools&lt;/a&gt;&amp;nbsp;替换&amp;nbsp;为&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmsteveb.github.io%2Fautosetup%2F&quot; target=&quot;_blank&quot;&gt;Autosetup&lt;/a&gt;。在之前的版本 (3.48.0) 中，规范源代码的配置脚本已更改为 Autosetup。只有合并 tarball 中的主要 SQLite 配置脚本发生了更改。合并 tarball 的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tcl-lang.org%2Fdoc%2Ftea%2FTEAOverview.html&quot; target=&quot;_blank&quot;&gt;TEA&lt;/a&gt;&amp;nbsp;子目录使用的 (已弃用的) 配置脚本仍然依赖于 Autotools。&lt;/li&gt; 
 &lt;li&gt;针对 3.48.0 版本中出现的问题进行各种小修补和修复。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;更多详情可查看：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fchanges.html&quot; target=&quot;_blank&quot;&gt;https://sqlite.org/changes.html&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332658/sqlite-3-49-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332658/sqlite-3-49-0-released</guid>
            <pubDate>Tue, 04 Feb 2025 06:04:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🎉 降低 DDD 实践成本 | Wow 5.1.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架&quot; src=&quot;https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg&quot; width=&quot;150&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow&quot;&gt;&lt;img alt=&quot;Integration Test Status&quot; src=&quot;https://oscimg.oschina.net/oscnet/badge.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin&quot;&gt;&lt;img alt=&quot;Awesome Kotlin Badge&quot; src=&quot;https://oscimg.oschina.net/oscnet/awesome-kotlin.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt=&quot;👉&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt=&quot;👈&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h2&gt;更新内容&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;新功能（查询服务）&lt;/strong&gt;：添加自定义日期模式支持的时间范围查询&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;org.springframework.boot:spring-boot-dependencies&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖更新到 v3.4.2&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 Gradle 依赖更新到 v8.12.1&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 springdoc 依赖更新到 v2.8.4&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 Angular CLI monorepo 更新到 v19.1.6&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;org.gradle.test-retry&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖更新到 v1.6.2&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 Angular monorepo 更新到 v19.1.5&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;io.opentelemetry:opentelemetry-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖更新到 v1.47.0&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html&quot; target=&quot;_blank&quot;&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Features&quot; src=&quot;https://oscimg.oschina.net/oscnet/Features.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Architecture&quot; src=&quot;https://oscimg.oschina.net/oscnet/Architecture.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html&quot; target=&quot;_blank&quot;&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html&quot; target=&quot;_blank&quot;&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;传统架构 VS 事件溯源&quot; src=&quot;https://oscimg.oschina.net/oscnet/300ee974_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;ETL 同步流程&quot; src=&quot;https://oscimg.oschina.net/oscnet/5fda25c1_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332652/wow-5-1-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332652/wow-5-1-6-released</guid>
            <pubDate>Tue, 04 Feb 2025 05:31:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>PageForge v2025.1.4 紧急修复版本：新增全站搜索能力</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; text-align:start&quot;&gt;我们发布了 PageForge 2025.1.4 紧急修复版本。此版本主要带来了搜索功能，并修复了一些关键问题。PageForge 是一款现代化的静态页面生成与部署平台，致力于为用户提供从创建到部署的一站式解决方案。&lt;/p&gt; 
&lt;h2&gt;新增功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持全站搜索功能 (#8)&lt;/li&gt; 
 &lt;li&gt;搜索结果关键词高亮显示&lt;/li&gt; 
 &lt;li&gt;新增团队展示模版&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;界面优化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进目录滚动突出显示和活动状态&lt;/li&gt; 
 &lt;li&gt;优化内容与菜单之间的位置计算&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;问题修复&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复发布 npm 导致 example 丢失问题 (#38)&lt;/li&gt; 
 &lt;li&gt;修复移动端语言选择器报错问题&lt;/li&gt; 
 &lt;li&gt;修复移动端触发按钮丢失问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;架构改进&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;拆分 JavaScript 文件为独立模块&lt;/li&gt; 
 &lt;li&gt;拆分 Logo 和导航组件为独立模块&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;链接&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fpageforge&quot; target=&quot;_blank&quot;&gt;https://github.com/devlive-community/pageforge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官网:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpageforge.devlive.org&quot; target=&quot;_blank&quot;&gt;https://pageforge.devlive.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;反馈与支持&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:start&quot;&gt;如果您在使用过程中遇到任何问题，请通过 GitHub Issues 向我们反馈。您的建议对我们至关重要！&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#333333; text-align:start&quot;&gt;此版本是一个紧急修复版本，同时新增了重要的搜索功能，建议所有用户尽快升级到此版本。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332647/pageforge-2025-1-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332647/pageforge-2025-1-4-released</guid>
            <pubDate>Tue, 04 Feb 2025 04:34:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>程序员笔记 CherryTree 1.3.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;CherryTree 1.3.0 现已发布。CherryTree&amp;nbsp;是一个支持无限层级分类的笔记软件，Python 编写，支持富文本编辑和代码高亮，支持 Linux 和 Windows 平台。数据采用 sqlite 或 XML 存储，支持密码保护，支持从 NoteCase、KeepNote、Knowit、Tomboy、TuxCards、Treepad、Leo 等笔记软件导入数据。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;386&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-74d5462cec92aebeee6aba29fbbd9e4efc8.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;397&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d46aab5bb4de58574991a12865fd14414d1.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此版本更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;插入图片对话框，增加了对裁剪的支持（＃2626）&lt;/li&gt; 
 &lt;li&gt;实现了表格列剪切/复制/粘贴（＃2542）&lt;/li&gt; 
 &lt;li&gt;修复了表格行向上移动时的崩溃，所谓的&amp;nbsp;heavy version&lt;/li&gt; 
 &lt;li&gt;修复了表格导出为 csv 时单元格为空的问题（＃2028）&lt;/li&gt; 
 &lt;li&gt;改进了 html 解析（从剪贴板/从 html 导入富文本） - 增加了对&amp;nbsp;&amp;lt;font style=&quot;color: rgb(255, 0, 0);&quot;&amp;gt; 的支持&lt;/li&gt; 
 &lt;li&gt;修复了外部编辑和加密文档后重新加载文档的问题（#2612）&lt;/li&gt; 
 &lt;li&gt;修复了代码框后搜索缺少第一个匹配项的问题 （#2631）&lt;/li&gt; 
 &lt;li&gt;修复了更改代码框属性后代码框工具栏回调重复的问题（#2635）&lt;/li&gt; 
 &lt;li&gt;修复了将代码框粘贴到代码框中的问题（#2625）&lt;/li&gt; 
 &lt;li&gt;更改悬停可折叠页眉时的光标，以表明它是可点击的（#2389）&lt;/li&gt; 
 &lt;li&gt;可折叠页眉使用与展开/折叠树节点相同的图标（#2389）&lt;/li&gt; 
 &lt;li&gt;改进了清除格式化以保留链接的操作（#2389）&lt;/li&gt; 
 &lt;li&gt;多文件存储，添加了可配置选项，为嵌入文件使用常量名称（#2354）&lt;/li&gt; 
 &lt;li&gt;不要在 「mailto:」 类型的链接前添加「http://」&lt;/li&gt; 
 &lt;li&gt;preferences dialog，添加了重置为默认值的按钮：时间戳格式、双击时选择的字符、horizontal rule&lt;/li&gt; 
 &lt;li&gt;恢复了对在 ubuntu 18. 04 上的构建支持，此时 gtksourceview4 不可用，必须使用 gtksourceview3 (#2583)&lt;/li&gt; 
 &lt;li&gt;如果是 snap 包，则不要在主目录内的备份中使用前导点 (#2507)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;详情可查看&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgiuspen%2Fcherrytree%2Fblob%2Fmaster%2Fchangelog.txt&quot; target=&quot;_blank&quot;&gt;changelog&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332609/cherrytree-1-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332609/cherrytree-1-3-0-released</guid>
            <pubDate>Tue, 04 Feb 2025 02:22:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Apache Ignite 3.0.0 版本发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;Apache Ignite 3 版本发布说明&lt;/h1&gt; 
&lt;p&gt;===========================&lt;/p&gt; 
&lt;h2&gt;Apache Ignite 分布式内存数据库 3.0.0&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p&gt;这个是 Apache Ignite 3 的初始版本。&lt;/p&gt; 
&lt;p&gt;与 Apache Ignite 2 相比，该版本的代码已经完全重写，基于最新技术，从头开始设计，以应对现代数据存储和计算挑战。&lt;/p&gt; 
&lt;p&gt;Ignite 3 的主要特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 Apache Calcite 的 SQL 引擎；&lt;/li&gt; 
 &lt;li&gt;兼容 OpenAPI 的 REST API；&lt;/li&gt; 
 &lt;li&gt;基于 HOCON 的动态配置；&lt;/li&gt; 
 &lt;li&gt;改进的集群管理和控制工具；&lt;/li&gt; 
 &lt;li&gt;改进的事务协议；&lt;/li&gt; 
 &lt;li&gt;基于 Raft 的共识算法架构；&lt;/li&gt; 
 &lt;li&gt;简化的表和模式管理。&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332597/ignite-3-0-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332597/ignite-3-0-0-released</guid>
            <pubDate>Tue, 04 Feb 2025 01:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>蛋糕商城 Rust 版介绍二</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;蛋糕商城 Rust 版介绍二&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;蛋糕商城是一个在大学生学习者中流行的 JSP，JSTL，JDBC 的开源项目。由于原作者并未签名，所以原作者未知。蛋糕商城虽说比较简单，但是界面比较美观，核心业务表述清晰，是一款非常优秀的开源例程。在大学生中非常流行。大家把它改造成形形色色的系统。您经常可以在搜索引擎上发现这些作品。我是从一名大学生手上得到了蛋糕商城的源码。&lt;br&gt; 我将 Java 的原版蛋糕商城移植到了 Rust 环境下。将应用程序移植为 Axum，tokio，Sqlx 和 MariaDB 的环境。使用 Rust 通用代码生成器莲花，红莲尝鲜版三十一彻底增强了蛋糕商城，为蛋糕商城 Rust 版生成了一个集成后台。现在，升级后的蛋糕商城已经是一个 Rust，Axum 的应用程序。赶上了技术列车。特别指出的是，蛋糕商城的界面没有大改，但是界面已经不是 JSP，JSTL 的了，而是改成了 html，JavaScript 和 JSON 的了，界面的样子没有大概，唯一的改动是后台管理界面独立的新增和编辑界面改成了在列表页面的弹出框中。您可以详细检查源码，发现和原版不同的实现方式。还有就是主菜单，从嵌套逻辑的 JSP 包含文件变成了 HTML 的基干和 Javascript 的装饰函数的组合，同样实现了主菜单的逻辑，您可以查看。&lt;br&gt; 蛋糕商城 Rust 版介绍二在介绍一的基础上，完成度更高。软件完成了更多功能，可以进行比较完整的演示。&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;介绍视频请见：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GgNNegEW5%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1GgNNegEW5/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1FJP1eaEVr%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1FJP1eaEVr/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;蛋糕商城 Rust 版的项目地址为：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/jerryshensjf/CookieShopRust&quot;&gt;https://gitee.com/jerryshensjf/CookieShopRust&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;h1&gt;蛋糕商城 Rust 版&lt;/h1&gt; 
     &lt;h3&gt;介绍&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;蛋糕商城 Rust 版本。 基于开源软件蛋糕商城，升级至 Axum, tokio, Sqlx。采用 MariaDB 数据库。使用修改过的界面，设计保持原样。有 Rust 通用代码生成器莲花生成的集成后台界面。&lt;/p&gt; 
     &lt;h3&gt;截屏&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//8478113df7dfcb026e204aa6c850b651.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//29d0c9f75ad819b73c8b9c38039d25a7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//f8c63badd5d518c3814ca6b9d0f94363.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//c52cf681f66980fad6a894b60271858c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//bdf6f874fb0e39d0d486c49ed402ce35.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//3540d4e59e374f4d37728247fd2fa8a7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;h3&gt;姊妹项目&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;蛋糕商城 JPA 版,采用 SpringBoot3.4.0,JPA 技术栈&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;项目地址：&lt;a href=&quot;https://gitee.com/jerryshensjf/JPACookieShop&quot;&gt;https://gitee.com/jerryshensjf/JPACookieShop&lt;/a&gt;&lt;/p&gt; 
     &lt;h3&gt;介绍视频&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GgNNegEW5%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1GgNNegEW5/&lt;/a&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1FJP1eaEVr%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1FJP1eaEVr/&lt;/a&gt;&lt;/p&gt; 
     &lt;h3&gt;数据库初始化清注意&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;可以使用 sql 文件夹下的数据库脚本建库建表。蛋糕的图片在 resources/static/picture 文件夹下面。admin 的密码是 admin，其他密码可以使用 admin 修改。&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;您只需要使用 Sql 文件夹下的 sql 脚本恢复数据库，图片放在 picture 文件夹下，商品和图片的关系请参考 excelTemplate 文件夹下的 Cookieshop_org.xls 即可。&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;注意，商品如果没有设置 cover 图片，就会自动过滤掉，不会显示出来。&lt;/p&gt; 
     &lt;h3&gt;软件架构&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;软件架构说明&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Axum， tokio, Sqlx。采用 MariaDB 数据库。有 Rust 通用代码生成器莲花生成的集成后台界面。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332593</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332593</guid>
            <pubDate>Tue, 04 Feb 2025 01:06:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>EasyGoAdmin 敏捷开发框架 Gin+EleVue 版本 v2.9.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;v2.9.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1、优化性能提升使用操作体验；&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2、优化升级核心类库和功能；&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;一款 Go 语言基于 Gin、Vue、ElementUI、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式，同时为了敏捷快速开发，框架特地集成了代码生成器，完全自主研发了自定义 GO 后端服务模板和前端 Vue 自定义模板，可以根据已建好的表结构，可以快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发方式，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、可插拔式的敏捷开发框架。&lt;/span&gt;&lt;/p&gt; 
        &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-afeccbf5a31db738898226bfa85a4be226a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
        &lt;h2&gt;软件信息&lt;/h2&gt; 
        &lt;ul&gt; 
         &lt;li&gt;软件名称：EasyGoAdmin 敏捷开发框架 Gin+EleVue 版本&lt;/li&gt; 
         &lt;li&gt;官网网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easygoadmin.vip&quot; target=&quot;_blank&quot;&gt;https://www.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;文档网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.gin.elevue.easygoadmin.vip&quot; target=&quot;_blank&quot;&gt;http://docs.gin.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;演示地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.gin.elevue.easygoadmin.vip&quot; target=&quot;_blank&quot;&gt;http://manage.gin.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; 
        &lt;h2&gt;项目结构&lt;/h2&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;pre&gt;&lt;span&gt;├── app             &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 应用目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── controller  &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 控制器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── dto         &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// DTO 层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── middleware  &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 中间件层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── model       &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 模型层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   └── service     &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 服务层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   └── vo          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// VO 视图层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── boot&lt;/span&gt;
&lt;span&gt;├── config          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 系统配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── &lt;span&gt;&lt;span&gt;&lt;span&gt;document&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 文档目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── i18n            &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 国际化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── library         &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 类库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── packed&lt;/span&gt;
&lt;span&gt;├── &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 资源目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── router          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 路由&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── templates       &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 自定义模板&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── utils           &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 工具类库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── Dockerfile&lt;/span&gt;
&lt;span&gt;├── go.mod&lt;/span&gt;
&lt;span&gt;└── main.go&lt;/span&gt;&lt;/pre&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
        &lt;h2&gt;版本说明&lt;/h2&gt; 
        &lt;table cellspacing=&quot;0&quot; style=&quot;--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px&quot;&gt; 
         &lt;tbody&gt; 
          &lt;tr&gt; 
           &lt;th&gt;版本名称&lt;/th&gt; 
           &lt;th&gt;版本说明&lt;/th&gt; 
           &lt;th&gt;版本地址&lt;/th&gt; 
          &lt;/tr&gt; 
         &lt;/tbody&gt; 
         &lt;tbody&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;GoFrame+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 GoFrame、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Beego+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Beego、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Gin+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Gin、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Iris+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Iris、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Echo+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Echo、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Revel+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Revel、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;GoFrame+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 GoFrame、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Beego+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Beego、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Gin+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Gin、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Iris+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Iris、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Echo+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Echo、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Revel+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Revel、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;GoFrame+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 GoFrame、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Beego+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Beego、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Gin+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Gin、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Iris+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Iris、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Echo+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Echo、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Revel+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Revel、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
         &lt;/tbody&gt; 
        &lt;/table&gt; 
        &lt;h2&gt;模块展示&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f3802d9148ff50b4794706f97369a8b72eb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/h2&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332588</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332588</guid>
            <pubDate>Mon, 03 Feb 2025 23:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>XXL-MQ v1.3.0 ｜ 分布式消息队列</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【增强】消费者分组属性 &quot;group&quot; 支持为空，为空时自动赋值 UUID，方便实现多分组广播消费；&lt;/li&gt; 
 &lt;li&gt;2、【增强】海量数据堆积：消息数据存储在 DB 中，原生兼容支持 &quot;MySQL、TIDB&quot; 两种存储方式，前者支持千万级消息堆积，后者支持百亿级别消息堆积（TIDB 理论上无上限）；&lt;/li&gt; 
 &lt;li&gt;3、【优化】消费者批量注册发现，提高注册发现性能；&lt;/li&gt; 
 &lt;li&gt;4、【优化】消息流转日志格式优化，提升日志可读性；&lt;/li&gt; 
 &lt;li&gt;5、【优化】升级 xxl-rpc、xxl-registry 至较新版本，Broker 注册发现服务做适配性优化；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-MQ 是一款轻量级分布式消息队列，拥有 &quot;水平扩展、高可用、海量数据堆积、单机 TPS 过 10 万、毫秒级投递&quot; 等特性,&lt;br&gt; 支持 &quot;并发消息、串行消息、广播消息、延迟消息、事务消费、失败重试、超时控制&quot; 等消息特性。现已开放源代码，开箱即用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xuxueli.com%2Fxxl-mq%2F&quot; target=&quot;_blank&quot;&gt;中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-mq&quot; target=&quot;_blank&quot;&gt;Github 地址&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;758&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1362764e612fbcb09fb4a0ce7dddbb36fe2.webp&quot; width=&quot;978&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、简单易用: 一行代码即可发布一条消息; 一行注解即可订阅一个消息主题;&lt;/li&gt; 
 &lt;li&gt;2、轻量级: 部署简单，不依赖第三方服务，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;3、水平扩展：消息中心支持无限水平扩展，这里的水平扩展包括两方面：消息生产能力、消息消费能力；通过集群扩展线性提升消息吞吐能力；&lt;/li&gt; 
 &lt;li&gt;4、高可用：消息中心能够忍受部分示例失效，不影响整个集群的可用性。通过内置注册中心可以实现秒级摘除失效节点，消息服务动态转移；&lt;/li&gt; 
 &lt;li&gt;5、消息持久化：全部消息持久化存储，消息中心支持通过配置选择是否清理过期消息。&lt;/li&gt; 
 &lt;li&gt;6、强数据安全：消息数据存储在 DB 中，可事务保障数据安全，防止消息数据丢失；&lt;/li&gt; 
 &lt;li&gt;7、海量数据堆积：消息数据存储在 DB 中，原生兼容支持 &quot;MySQL、TIDB&quot; 两种存储方式，前者支持千万级消息堆积，后者支持百亿级别消息堆积（TIDB 理论上无上限）；&lt;/li&gt; 
 &lt;li&gt;8、单机 TPS 过 10W：单机 TPS 受限于 DB 存储方式，选型 &quot;MySQL&quot; 时单机 TPS 过万，选型 &quot;TIDB&quot; 时单机 TPS 过 10 万；&lt;/li&gt; 
 &lt;li&gt;9、毫秒级投递延迟：消息中心与客户端通过 RPC 的方式进行消息通讯，毫秒级延时；&lt;/li&gt; 
 &lt;li&gt;10、多种消息模式: 
  &lt;ul&gt; 
   &lt;li&gt;并行消息：消息平均分配在该主题在线消费者，分片方式并行消费；适用于吞吐量较大的消息场景，如邮件发送、短信发送等业务逻辑&lt;/li&gt; 
   &lt;li&gt;串行消息：消息固定分配给该主题在线消费者中其中一个，FIFO 方式串行消费；适用于严格限制并发的消息场景，如秒杀、抢单等排队业务逻辑；&lt;/li&gt; 
   &lt;li&gt;广播消息：消息将会广播发送给该主题在线消费者分组，全部分组都会消费该消息，但是一个分组下只会消费一次；适用于广播场景，如广播更新缓存等&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;11、延时消息: 支持设置消息的延迟生效时间, 到达设置的生效时间时该消息才会被消费；适用于延时消费场景，如订单超时取消等;&lt;/li&gt; 
 &lt;li&gt;12、事务消费: 消费者开启事务开关后,消息事务性保证只会成功执行一次;&lt;/li&gt; 
 &lt;li&gt;13、失败重试: 支持设置消息的重试次数, 在消息执行失败后将会按照设置的值进行消息重试执行,直至重试次数耗尽或者执行成功;&lt;/li&gt; 
 &lt;li&gt;14、超时控制: 支持自定义消息超时时间，消息消费超时将会主动中断；&lt;/li&gt; 
 &lt;li&gt;15、消息可见: 系统中每一条消息可通过 Web 界面在线查看,甚至支持编辑消息内容和消息状态;&lt;/li&gt; 
 &lt;li&gt;16、消息可追踪: 支持追踪每一条消息的执行路径, 便于排查业务问题;&lt;/li&gt; 
 &lt;li&gt;17、消息失败告警：支持以 Topic 粒度监控消息，存在失败消息时主动推送告警邮件；默认提供邮件方式失败告警，同时预留扩展接口，可方面的扩展短信、钉钉等告警方式；&lt;/li&gt; 
 &lt;li&gt;18、容器化：提供官方 docker 镜像，并实时更新推送 dockerhub，进一步实现产品开箱即用；&lt;/li&gt; 
 &lt;li&gt;19、访问令牌（accessToken）：为提升系统安全性，消息中心和客户端进行安全性校验，双方 AccessToken 匹配才允许通讯；&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332572/xxl-mq-1-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332572/xxl-mq-1-3-0-released</guid>
            <pubDate>Mon, 03 Feb 2025 15:58:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>XXL-CACHE v1.2.0 ｜ 多级缓存框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【增强】多序列化协议支持：针对 L2 缓存，组件化抽象 Serializer，可灵活扩展更多序列化协议；&lt;/li&gt; 
 &lt;li&gt;2、【优化】移除冗余依赖，精简 Core 体积；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;XXL- CACHE 快速接入示例&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;代码参考 github 仓库 /test 目录：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-cache%2Ftree%2Fmaster%2Fxxl-cache-samples&quot; target=&quot;_blank&quot;&gt;https://github.com/xuxueli/xxl-cache/tree/master/xxl-cache-samples&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;1、Maven 引入&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;em&gt;&amp;lt;!-- https://mvnrepository.com/artifact/com.xuxueli/xxl-cache-core --&amp;gt;&lt;/em&gt;
&lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.xuxueli&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;xxl-cache-core&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${最新稳定版}&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;2、组件配置&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;配置文件说明：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;em&gt;# xxl-cache&lt;/em&gt;
&lt;em&gt;## L1 缓存（本地）提供者，默认 caffeine&lt;/em&gt;
xxl.cache.l1.provider=caffeine
&lt;em&gt;## L1 缓存最大容量，默认 10000；&lt;/em&gt;
xxl.cache.l1.maxSize=-1
&lt;em&gt;## L1 缓存过期时间，单位秒，默认 10min；&lt;/em&gt;
xxl.cache.l1.expireAfterWrite=-1
&lt;em&gt;## L2 缓存（分布式）提供者，默认 redis&lt;/em&gt;
xxl.cache.l2.provider=redis
&lt;em&gt;## L2 缓存序列化方式，默认 java&lt;/em&gt;
xxl.cache.l2.serializer=java
&lt;em&gt;## L2 缓存节点配置，多个节点用逗号分隔；示例 「127.0.0.1:6379,127.0.0.1:6380」&lt;/em&gt;
xxl.cache.l2.nodes=127.0.0.1:6379
&lt;em&gt;## L2 缓存用户名配置&lt;/em&gt;
xxl.cache.l2.user=
&lt;em&gt;## L2 缓存密码配置&lt;/em&gt;
xxl.cache.l2.password=
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;组件初始化配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#61aeee&quot;&gt;@Bean&lt;/span&gt;(initMethod = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;start&quot;&lt;/span&gt;, destroyMethod = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;stop&quot;&lt;/span&gt;)
&lt;span&gt;&lt;span style=&quot;color:#c678dd&quot;&gt;public&lt;/span&gt; XxlCacheFactory &lt;span style=&quot;color:#e06c75&quot;&gt;xxlCacheFactory&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{
    XxlCacheFactory xxlCacheFactory = &lt;span style=&quot;color:#c678dd&quot;&gt;new&lt;/span&gt; XxlCacheFactory();
    xxlCacheFactory.setL1Provider(l1Provider);
    xxlCacheFactory.setMaxSize(maxSize);
    xxlCacheFactory.setExpireAfterWrite(expireAfterWrite);
    xxlCacheFactory.setL2Provider(l2Provider);
    xxlCacheFactory.setSerializer(serializer);
    xxlCacheFactory.setNodes(nodes);
    xxlCacheFactory.setUser(user);
    xxlCacheFactory.setPassword(password);
    &lt;span style=&quot;color:#c678dd&quot;&gt;return&lt;/span&gt; xxlCacheFactory;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;经过上述 2 步，已完成全部配置工作。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;3、客户端接入：&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;String category = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;user&quot;&lt;/span&gt;;
&lt;span style=&quot;color:#c678dd&quot;&gt;long&lt;/span&gt; survivalTime = &lt;span style=&quot;color:#98c379&quot;&gt;60&lt;/span&gt;*&lt;span style=&quot;color:#98c379&quot;&gt;1000&lt;/span&gt;;
String key = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;user03&quot;&lt;/span&gt;;
&lt;em&gt;/**
* 1、定义缓存对象，并指定 「缓存 category + 过期时间」
*/&lt;/em&gt;
XxlCacheHelper.XxlCache userCache = XxlCacheHelper.getCache(category, survivalTime);
&lt;em&gt;/**
* 2、缓存写：按照 L1 -&amp;gt; L2 顺序依次写缓存，同时借助内部广播机制更新全局 L1 节点缓存；
*/&lt;/em&gt;
userCache.&lt;span style=&quot;color:#e6c07b&quot;&gt;set&lt;/span&gt;(key, value);
&lt;em&gt;/**
* 3、缓存读：按照 L1 -&amp;gt; L2 顺序依次读取缓存，如果 L1 存在缓存则返回，否则读取 L2 缓存并同步 L1；
*/&lt;/em&gt;
userCache.get(key);
&lt;em&gt;/**
* 4、缓存删：按照 L1 -&amp;gt; L2 顺序依次删缓存，同时借助内部广播机制更新全局 L1 节点缓存；
*/&lt;/em&gt;
userCache.del(key);
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-CACHE 是一个，多级缓存框架，高效组合本地缓存和分布式缓存 (Redis+Caffeine)，支持「多级缓存、一致性保障、TTL、Category 隔离、防穿透」等能力；拥有「高性能、高扩展、灵活易用」等特性，提供高性能多级缓存解决方案；&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xuxueli.com%2Fxxl-cache%2F&quot; target=&quot;_blank&quot;&gt;中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-cache&quot; target=&quot;_blank&quot;&gt;Github 地址&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img alt=&quot;img_01.png&quot; src=&quot;https://oscimg.oschina.net/oscnet//4bb929cccd1b27f240e1f84f3fe958c2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;div&gt;
  img_01.png
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、灵活易用: 接入灵活方便，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;2、多级缓存：高效组合本地缓存和分布式缓存 (Redis+Caffeine)，支持 L1、L2 级别缓存，支持多场景缓存诉求；&lt;/li&gt; 
 &lt;li&gt;3、高扩展：框架进行模块化抽象设计，本地缓存、分布式缓存以及序列化方案均支持自定义扩展；&lt;/li&gt; 
 &lt;li&gt;4、高性能：底层设计 L1(Local)+L2(Remote) 多级缓存模型，除分布式缓存之外前置在应用层设置本地缓存，高热查询前置本地处理避免远程通讯，最大化提升性能；&lt;/li&gt; 
 &lt;li&gt;5、一致性保障：支持多层级、集群多节点之间缓存数据一致性保障，借助广播消息（Redis Pub/Sub）以及客户端主动过期，实现 L1 及 L2 之间以及 L1 各集群节点间缓存数据一致性同步；&lt;/li&gt; 
 &lt;li&gt;6、TTL：支持 TTL，支持缓存数据主动过期及清理；&lt;/li&gt; 
 &lt;li&gt;7、Category 隔离：支持自定义缓存 Category 分类，缓存数据存储隔离；&lt;/li&gt; 
 &lt;li&gt;8、缓存风险治理：针对典型缓存风险，如缓存穿透，底层进行针对性设计进行风险防护；&lt;/li&gt; 
 &lt;li&gt;9、透明接入：支持业务透明接入，屏蔽底层实现细节，降低业务开发成本，以及学习认知成本；&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332571/xxl-cache-1-2-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332571/xxl-cache-1-2-0-released</guid>
            <pubDate>Mon, 03 Feb 2025 15:55:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>XXL-JOB v3.0.0 | 分布式任务调度平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【升级】调度中心升级至 SpringBoot3 + JDK17；&lt;/li&gt; 
 &lt;li&gt;2、【升级】Docker 镜像升级，镜像构建基于 JDK17；&lt;/li&gt; 
 &lt;li&gt;3、【优化】IP 获取逻辑优化，优先遍历网卡来获取可用 IP；&lt;/li&gt; 
 &lt;li&gt;4、【优化】通用命令行任务 (「commandJobHandler」) 优化，支持多参数执行，命令及参数之间通过空格隔开；如任务参数 &quot;ls la&quot; 或 &quot;pwd&quot; 将会执行命令并输出数据；&lt;/li&gt; 
 &lt;li&gt;5、【优化】通用 HTTP 任务（httpJobHandler）优化，任务参数格式调整为 json 格式；&lt;/li&gt; 
 &lt;li&gt;6、【升级】多个项目依赖升级至较新稳定版本，涉及 gson、groovy、spring/springboot 等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;备注：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;a、本次升级数据模型及通讯协议向前兼容，v2.4.*及后续版本可无缝升级；&lt;/li&gt; 
  &lt;li&gt;b、版本 3.x 开始要求 Jdk17；版本 2.x 及以下支持 Jdk1.8。如对 Jdk 版本有诉求，可选择接入不同版本;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;代码接入示例&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-JOB 支持多模式任务，下文以简单的「Bean 模式任务」为例介绍，三步快速开发接入。&lt;/p&gt; 
&lt;p&gt;步骤一：执行器，开发 Job 方法&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#61aeee&quot;&gt;@XxlJob&lt;/span&gt;(&lt;span style=&quot;color:#98c379&quot;&gt;&quot;demoJobHandler&quot;&lt;/span&gt;)
 &lt;span&gt;&lt;span style=&quot;color:#c678dd&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#c678dd&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#e06c75&quot;&gt;demoJobHandler&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#c678dd&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{
    XxlJobHelper.log(&lt;span style=&quot;color:#98c379&quot;&gt;&quot;XXL-JOB, Hello World.&quot;&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;步骤二：调度中心，新建调度任务&lt;/h4&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;1017&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f9f008cde404c381057fa6cf04d6ef7eabe.webp&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h4&gt;步骤三：任务执行，查看任务进度及日志&lt;/h4&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;348&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c1de54ceda4a5a471376a0154b000a11cf2.webp&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-JOB 是一个轻量级分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xuxueli.com%2Fxxl-job%2F&quot; target=&quot;_blank&quot;&gt;中文文档：http://www.xuxueli.com/xxl-job/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xuxueli.com%2Fpage%2Fcommunity.html&quot; target=&quot;_blank&quot;&gt;社区交流：http://www.xuxueli.com/page/community.html&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;631&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-85e679cb44bb11441c6d01fbc19a671aa85.webp&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、简单：支持通过 Web 页面对任务进行 CRUD 操作，操作简单，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;2、动态：支持动态修改任务状态、启动/停止任务，以及终止运行中任务，即时生效；&lt;/li&gt; 
 &lt;li&gt;3、调度中心 HA（中心式）：调度采用中心式设计，「调度中心」自研调度组件并支持集群部署，可保证调度中心 HA；&lt;/li&gt; 
 &lt;li&gt;4、执行器 HA（分布式）：任务分布式执行，任务&quot;执行器&quot;支持集群部署，可保证任务执行 HA；&lt;/li&gt; 
 &lt;li&gt;5、注册中心: 执行器会周期性自动注册任务, 调度中心将会自动发现注册的任务并触发执行。同时，也支持手动录入执行器地址；&lt;/li&gt; 
 &lt;li&gt;6、弹性扩容缩容：一旦有新执行器机器上线或者下线，下次调度时将会重新分配任务；&lt;/li&gt; 
 &lt;li&gt;7、触发策略：提供丰富的任务触发策略，包括：Cron 触发、固定间隔触发、固定延时触发、API（事件）触发、人工触发、父子任务触发；&lt;/li&gt; 
 &lt;li&gt;8、调度过期策略：调度中心错过调度时间的补偿处理策略，包括：忽略、立即补偿触发一次等；&lt;/li&gt; 
 &lt;li&gt;9、阻塞处理策略：调度过于密集执行器来不及处理时的处理策略，策略包括：单机串行（默认）、丢弃后续调度、覆盖之前调度；&lt;/li&gt; 
 &lt;li&gt;10、任务超时控制：支持自定义任务超时时间，任务运行超时将会主动中断任务；&lt;/li&gt; 
 &lt;li&gt;11、任务失败重试：支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；其中分片任务支持分片粒度的失败重试；&lt;/li&gt; 
 &lt;li&gt;12、任务失败告警；默认提供邮件方式失败告警，同时预留扩展接口，可方便的扩展短信、钉钉等告警方式；&lt;/li&gt; 
 &lt;li&gt;13、路由策略：执行器集群部署时提供丰富的路由策略，包括：第一个、最后一个、轮询、随机、一致性 HASH、最不经常使用、最近最久未使用、故障转移、忙碌转移等；&lt;/li&gt; 
 &lt;li&gt;14、分片广播任务：执行器集群部署时，任务路由策略选择&quot;分片广播&quot;情况下，一次任务调度将会广播触发集群中所有执行器执行一次任务，可根据分片参数开发分片任务；&lt;/li&gt; 
 &lt;li&gt;15、动态分片：分片广播任务以执行器为维度进行分片，支持动态扩容执行器集群从而动态增加分片数量，协同进行业务处理；在进行大数据量业务操作时可显著提升任务处理能力和速度。&lt;/li&gt; 
 &lt;li&gt;16、故障转移：任务路由策略选择&quot;故障转移&quot;情况下，如果执行器集群中某一台机器故障，将会自动 Failover 切换到一台正常的执行器发送调度请求。&lt;/li&gt; 
 &lt;li&gt;17、任务进度监控：支持实时监控任务进度；&lt;/li&gt; 
 &lt;li&gt;18、Rolling 实时日志：支持在线查看调度结果，并且支持以 Rolling 方式实时查看执行器输出的完整的执行日志；&lt;/li&gt; 
 &lt;li&gt;19、GLUE：提供 Web IDE，支持在线开发任务逻辑代码，动态发布，实时编译生效，省略部署上线的过程。支持 30 个版本的历史版本回溯。&lt;/li&gt; 
 &lt;li&gt;20、脚本任务：支持以 GLUE 模式开发和运行脚本任务，包括 Shell、Python、NodeJS、PHP、PowerShell 等类型脚本;&lt;/li&gt; 
 &lt;li&gt;21、命令行任务：原生提供通用命令行任务 Handler（Bean 任务，&quot;CommandJobHandler&quot;）；业务方只需要提供命令行即可；&lt;/li&gt; 
 &lt;li&gt;22、任务依赖：支持配置子任务依赖，当父任务执行结束且执行成功后将会主动触发一次子任务的执行, 多个子任务用逗号分隔；&lt;/li&gt; 
 &lt;li&gt;23、一致性：「调度中心」通过 DB 锁保证集群分布式调度的一致性, 一次任务调度只会触发一次执行；&lt;/li&gt; 
 &lt;li&gt;24、自定义任务参数：支持在线配置调度任务入参，即时生效；&lt;/li&gt; 
 &lt;li&gt;25、调度线程池：调度系统多线程触发调度运行，确保调度精确执行，不被堵塞；&lt;/li&gt; 
 &lt;li&gt;26、数据加密：调度中心和执行器之间的通讯进行数据加密，提升调度信息安全性；&lt;/li&gt; 
 &lt;li&gt;27、邮件报警：任务失败时支持邮件报警，支持配置多邮件地址群发报警邮件；&lt;/li&gt; 
 &lt;li&gt;28、推送 maven 中央仓库: 将会把最新稳定版推送到 maven 中央仓库, 方便用户接入和使用;&lt;/li&gt; 
 &lt;li&gt;29、运行报表：支持实时查看运行数据，如任务数量、调度次数、执行器数量等；以及调度报表，如调度日期分布图，调度成功分布图等；&lt;/li&gt; 
 &lt;li&gt;30、全异步：任务调度流程全异步化设计实现，如异步调度、异步运行、异步回调等，有效对密集调度进行流量削峰，理论上支持任意时长任务的运行；&lt;/li&gt; 
 &lt;li&gt;31、跨语言/OpenAPI：调度中心与执行器提供语言无关的 OpenApi（RESTful 格式），第三方任意语言可据此对接调度中心或者实现执行器，实现多语言支持。除此之外，还提供了 「多任务模式」和「httpJobHandler」等其他跨语言方案；&lt;/li&gt; 
 &lt;li&gt;32、国际化：调度中心支持国际化设置，提供中文、英文两种可选语言，默认为中文；&lt;/li&gt; 
 &lt;li&gt;33、容器化：提供官方 docker 镜像，并实时更新推送 dockerhub，进一步实现产品开箱即用；&lt;/li&gt; 
 &lt;li&gt;34、线程池隔离：调度线程池进行隔离拆分，慢任务自动降级进入&quot;Slow&quot;线程池，避免耗尽调度线程，提高系统稳定性；&lt;/li&gt; 
 &lt;li&gt;35、用户管理：支持在线管理系统用户，存在管理员、普通用户两种角色；&lt;/li&gt; 
 &lt;li&gt;36、权限控制：执行器维度进行权限控制，管理员拥有全量权限，普通用户需要分配执行器权限后才允许相关操作；&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332570/xxl-job-3-0-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332570/xxl-job-3-0-0-released</guid>
            <pubDate>Mon, 03 Feb 2025 15:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>SQLAlchemy 2.0.38 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;SQLAlchemy 2.0.38 现已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlalchemy.org%2Fblog%2F2025%2F02%2F06%2Fsqlalchemy-2.0.38-released%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;SQLAlchemy 是一个 Python 的 SQL 工具包以及数据库对象映射 (ORM) 框架。它包含整套企业级持久化模式，专门用于高效和高性能的数据库访问。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;228&quot; src=&quot;https://static.oschina.net/uploads/space/2022/1207/071040_PUaS_4252687.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#110000&quot;&gt;版本 &lt;/span&gt;&lt;span style=&quot;color:#110000&quot;&gt;2.0.38 修复了一系列与引擎和 SQL 组件以及 aiosqlite、asyncpg 和 MySQL/MariaDB 相关的错误。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#110000&quot;&gt;更多&amp;nbsp;2.0.38&lt;/span&gt;&lt;span style=&quot;color:#110000&quot;&gt;&amp;nbsp;的详细变更日志可查看&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlalchemy.org%2Fchangelog%2FCHANGES_2_0_38&quot; target=&quot;_blank&quot;&gt;Changelog&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlalchemy.org%2Fdownload.html&quot; target=&quot;_blank&quot;&gt;Download Page&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332490/sqlalchemy-2-0-38-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332490/sqlalchemy-2-0-38-released</guid>
            <pubDate>Mon, 03 Feb 2025 06:00:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🔥 动态编译 Java 的神器 Liquor v1.3.9 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;Liquor 是一个开源的轻量级 Java 动态编译器（零依赖，40KB），它可以在运行时编译 Java 字符串代码片段、类、方法等。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;源码地址：&lt;a href=&quot;https://gitee.com/noear/liquor&quot;&gt;https://gitee.com/noear/liquor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;基础编译特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;可以单个类编译&lt;/li&gt; 
 &lt;li&gt;可以多个类同时编译&lt;/li&gt; 
 &lt;li&gt;可以增量编译&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;增值功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;java 表达式引擎&lt;/li&gt; 
 &lt;li&gt;java 脚本引擎（支持 java8 到 java23 语法）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;本次更新&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加 DynamicCompiler:addClassPath 方法&lt;/li&gt; 
 &lt;li&gt;添加 DynamicCompiler:getStandardFileManager 方法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;新特性示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;em&gt;// A.java&lt;/em&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;A&lt;/span&gt; { &lt;span style=&quot;color:#a626a4&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;B&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;b&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;B&lt;/span&gt;(); }

&lt;em&gt;// B.java&lt;/em&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;B&lt;/span&gt; {}

&lt;em&gt;// Demo.java&lt;/em&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;Demo&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;test&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span style=&quot;color:#a626a4&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;DynamicCompiler&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;dynamicCompiler&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DynamicCompiler&lt;/span&gt;(); 

        dynamicCompiler.addClassPath(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;File&lt;/span&gt;(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;.../test/&quot;&lt;/span&gt;)); &lt;em&gt;//这是重点&lt;/em&gt;
        dynamicCompiler.addSource(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;JavaFileSource&lt;/span&gt;(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;File&lt;/span&gt;(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;.../test/A.java&quot;&lt;/span&gt;)));
        dynamicCompiler.build();

        &lt;span style=&quot;color:#a626a4&quot;&gt;final&lt;/span&gt; Class&amp;lt;?&amp;gt; clazz = dynamicCompiler.getClassLoader().loadClass(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;test.A&quot;&lt;/span&gt;);
        System.out.printf(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;clazz: %s\n&quot;&lt;/span&gt;, clazz);
    }

    &lt;span style=&quot;color:#a626a4&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;JavaFileSource&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;extends&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;SimpleJavaFileObject&lt;/span&gt; {
        &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;JavaFileSource&lt;/span&gt;&lt;span&gt;(File codeSourceFile)&lt;/span&gt; {
            &lt;span style=&quot;color:#c18401&quot;&gt;super&lt;/span&gt;(codeSourceFile.toURI(), Kind.SOURCE);
        } 

        &lt;span style=&quot;color:#4078f2&quot;&gt;@Override&lt;/span&gt;
        &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; CharSequence &lt;span style=&quot;color:#4078f2&quot;&gt;getCharContent&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#986801&quot;&gt;boolean&lt;/span&gt; ignoreEncodingErrors)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; IOException {
            &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;String&lt;/span&gt;(Files.readAllBytes(Paths.get(&lt;span style=&quot;color:#c18401&quot;&gt;this&lt;/span&gt;.uri)), StandardCharsets.UTF_8);
        } 
    }
}&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332484/liquor-1-3-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332484/liquor-1-3-9-released</guid>
            <pubDate>Mon, 03 Feb 2025 05:16:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Visual Studio Code 1.97 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Visual Studio Code 1.97 已&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_copilot-next-edit-suggestions-preview&quot; target=&quot;_blank&quot;&gt;Copilot Next Edit Suggestions（预览）&lt;/a&gt;&amp;nbsp;- Copilot 预测你可能进行的下一步编辑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Copilot Next Edit Suggestions (Copilot NES) 会预测用户要进行的下一次编辑的位置以及编辑的内容。并提供与当前工作相关的更改建议，只需按&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:var(--keybinding-background)&quot;&gt;&lt;span style=&quot;color:var(--keybinding-foreground)&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Tab 键&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;即可快速导航并接受建议。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5904664d7228584b631ce23ca015f34fe0c.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_move-the-command-palette-and-quick-inputs&quot; target=&quot;_blank&quot;&gt;重新定位命令面板&lt;/a&gt;&amp;nbsp;- &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;现在可以将命令面板和其他快速输入移动到新位置，而不是将其固定在窗口顶部。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;313&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-83eb72e5e2b50cbd7cc56302cc18631fafe.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_improved-editor-controls&quot; target=&quot;_blank&quot;&gt;Auto accept&amp;nbsp;编辑&lt;/a&gt;- 可配置的超时后自动接受来自 Copilot 的编辑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;261&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-497de618afc94a1f2baf18de6c6cc147afb.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_trusting-extension-publishers&quot; target=&quot;_blank&quot;&gt;扩展发布者信任&lt;/a&gt;&amp;nbsp;- 使用扩展发布者信任保证你的环境安全。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新到 VS Code 1.97 版本时，当前安装的扩展的发布者将自动获得信任。可以使用 Extensions: Manage Trusted Extensions Publishers 命令来管理受信任的扩展发布者。此命令允许你重置或撤销对之前信任的发布者的信任。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;188&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4f9570a0e8b931590c61f790c23b6dcd5f4.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_compound-logs&quot; target=&quot;_blank&quot;&gt;Compound logs&lt;/a&gt;&amp;nbsp;- 将多个日志合并为单个聚合日志视图。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;334&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26e5c3e97eea4ea577ab4dc208154c92293.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_output-panel-filtering&quot; target=&quot;_blank&quot;&gt;过滤输出日志&lt;/a&gt;&amp;nbsp;- 过滤输出面板的内容。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;可以极大地改善日志的管理和分析，特别是必须处理大量日志数据时。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;169&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d444d9420cfac6b1dff02dd8d09c2769aba.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_git-blame-information&quot; target=&quot;_blank&quot;&gt;Git blame 信息&lt;/a&gt;&amp;nbsp;- 丰富的 git blame 信息并在 GitHub 上开放。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新版本&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;继续完善在编辑器和状态栏中显示 git blame 信息的功能。还改进了将鼠标悬停在 editor decoration 或 Status Bar item 上时显示的信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;298&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-380f3d1507e567f503206bfbda8483e3cd0.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_filter-and-search-on-values&quot; target=&quot;_blank&quot;&gt;在调试变量中搜索值&lt;/a&gt;&amp;nbsp;- 过滤并搜索调试变量中的特定值。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;现在可以在变量和监视视图中的视图（&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:var(--keybinding-background)&quot;&gt;&lt;span style=&quot;color:var(--keybinding-foreground)&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Ctrl+Alt+F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）内进行搜索，以筛选变量和表达式值，而不仅仅是名称。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;201&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-60c580c97eb7e68f8f81435d9ba1445c596.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_inline-values-upon-cell-execution&quot; target=&quot;_blank&quot;&gt;Notebook 内联值&lt;/a&gt;&amp;nbsp;- 查看 Notebook 中代码单元变量的内联值。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;236&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-42d2e997f680175039221bbf6eecf5cf537.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_no-config-debug&quot; target=&quot;_blank&quot;&gt;Python no-config debug&lt;/a&gt;&amp;nbsp;- 无需设置即可快速调试 Python 脚本或模块。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;293&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26fad6c72960abc4b322cbd19e25230dc37.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332476/vs-code-1-97-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332476/vs-code-1-97-released</guid>
            <pubDate>Mon, 03 Feb 2025 03:30:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>📊 Univer Go ：AI 结合电子表格，让数据采集与填充实现全流程自动化</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;&lt;span&gt;&lt;/span&gt;从此刻起，告别手动填充数据：&lt;/h2&gt; 
&lt;div&gt;
 hi👋 ，向大家推荐一款基于 
 &lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;&lt;/strong&gt; 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/a&gt;平台开发的智能模板—— 
 &lt;strong&gt;AI Data Enrichment&lt;/strong&gt;。该模板深度整合了 Phidata API，为用户提供三大核心功能：智能 AI 问答、精准语义搜索和网页数据提取。更值得一提的是，通过与 Univer 表格的无缝协作，您只需简单设置表头，模板即可自动完成数据采集与填充，让数据处理效率提升到一个全新的水平。相信这款智能模板将成为您工作中的得力助手！
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 在 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Univer Go&lt;/strong&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/a&gt; 的操作界面中，您只需一键点击运行 
 &lt;strong&gt;AI Data Enrichment &lt;/strong&gt; 脚本，即可自动完成表格内的数据采集与填充。不仅如此，Univer Go 还赋予了您对脚本进行深度自定义的能力，让您手中的工具真正为己所用，不管您是在应对复杂的业务流程，还是将创意工作设想变为现实，它都能精准匹配您的多元需求，高效又轻松地达成目标。
&lt;/div&gt; 
&lt;div&gt;
 &lt;strong&gt;点击观看专属于你的自动化办公视频，让工作高效，自在摸鱼！&lt;/strong&gt;： 
 &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1UoFPenEa7%2F%3Fshare_source%3Dcopy_web%26vd_source%3D54ca691c116c1bc44a5f42a0b1a8f572&quot;&gt;Univer Go：体验智能工作流，AI 助力高效办公&lt;/a&gt;&lt;/span&gt;
&lt;/div&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;453&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-77cccc9c31bb59a59e8da7e7a76987a5e7c.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt; 是一款高度可定制化的电子表格工具，能够根据用户需求构建一个性能与功能对标 excel 的电子表格。它支持灵活的功能扩展，涵盖基础数据处理、复杂的导入导出操作和协同功能，同时为 UI/UX 设计提供了定制空间，助力打造易用交互界面。此外，Univer Go 融合先进 AI 技术，配备了功能强大的脚本编写与执行工具，支持开发者创建和运行自动化脚本、进行数据库连接与数据读写管理以及开发自定义应用。无论是初学者还是专业开发者，都能凭借其简洁的操作逻辑和丰富功能支持，轻松上手。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;strong&gt;体验链接&lt;/strong&gt;： 
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//84026b029f601804f3df064b1a6434cc.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//c45364286cf0bb51fada9c1ed3645a70.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h3&gt;实现 AI Data Enrichment&lt;strong&gt; &lt;/strong&gt;：&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;1. client script 自定义交互组件&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// 定制冻结情况
sheet.setFrozenColumns(1);
sheet.setFrozenRows(2);

// 定制列头
univerAPI.customizeColumnHeader({
    headerStyle: { textAlign: &quot;left&quot;, fontSize: 12, size: COLUMN_HEADER_HEIGHT },
});

// 定制行高
for (let i = 0; i &amp;lt; 100; i++) {
    sheet.setRowHeight(i, 30);
}
sheet.setRowHeight(0, 40);

// 为列头绑定自定义组件
const rsGPT1 = sheet.addFloatDomToColumnHeader(
    1,
    {
        allowTransform: false,
        componentKey: &quot;AIAgentSelect&quot;, // React comp key registered in ComponentManager
        props: {
            column: 1,
        },
        data: {
            defaultOption: &quot;optionGPT&quot;,
            column: 1,
        },
    },
    {
        width: 210, // univer-float-dom-wrapper width 208 ai-gpt 206
        height: 58,
        marginX: 0,
        marginY: 0,
        horizonOffsetAlign: &quot;right&quot;,
    },
    &quot;ai-gpt&quot; // dom id
);&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2.&amp;nbsp; python server script 添加各个 agent 提供 ai 能力&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def gpt(query: str):
    gpt_agent = Agent(
        name=&quot;GPT Agent&quot;,
        model=model,
        show_tool_calls=False,
        markdown=False,
        response_model=GPTResult,
        instructions=[&quot;Ask a question and get an answer, give me the briefest answer.&quot;],
    )

    resp: RunResponse = gpt_agent.run(query)

    s: GPTResult = resp.content

    ss = s.model_dump_json()
    print(ss)

    return ss

def web_reader(url: str):
  ...

def web_search(query: str, search_engine: str = &#39;google&#39;):&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;3.&amp;nbsp; client script 调用执行 python script 的 agent 获取数据&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const serverRespStr = await univerAPI.runOnServer(&quot;agent&quot;, &quot;gpt&quot;, prompt);
 console.log(&quot;serverGPT:::&quot;, serverRespStr, &quot;!!!!&quot;);&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;现成模版快速使用 ！&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;1. 请先下载 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;， 在模版中找到 &lt;strong&gt;AI Data Enrichment&lt;/strong&gt;，点击使用&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;下载链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;教程视频：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1wPf6YzEeL%2F%3Fshare_source%3Dcopy_web%26vd_source%3D54ca691c116c1bc44a5f42a0b1a8f572&quot; target=&quot;_blank&quot;&gt;Univer Go 智能数据补全和实时信息提取&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b3074019321c7753a4419cd185a0ace7.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 2.&amp;nbsp; 进入 Workspace ，等待依赖安装完成
&lt;/div&gt; 
&lt;div&gt;
 右侧代码编辑器支持 AI 辅写功能，具体请查看这篇文章： 
 &lt;a href=&quot;https://my.oschina.net/u/6977969/blog/17182756&quot;&gt;Univer Go 推出 AI 辅助编写 Univer API 功能&lt;/a&gt;
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//f45df26d1cc8cbe1cd71d4bea08dd7f1.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 3.&amp;nbsp; 调整代码后预览表格，最后运行代码
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//427c4b85a3078da34722e3bdf6709734.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 4.&amp;nbsp; 预览表格内的表头结构讲解：列标题工具按钮及列标题下方的两行内容
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div&gt;
   列标题，点击工具按钮，下拉框中有多种工具可以选择
  &lt;/div&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 - GPT：直接向 LLM 提问
&lt;/div&gt; 
&lt;div&gt;
 - 网页搜索：在网页上搜索信息。
&lt;/div&gt; 
&lt;div&gt;
 - 阅读：阅读文档并提取信息
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//da46fd39d40bfa25076c276e1bb783de.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div&gt;
   列标题下方的两行内容，作为提示词的一部分，其中可以编辑「描述」部分的提示词，以便 AI 模型更好地理解您的需求。
  &lt;/div&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//a00f427221bd8d6f3c27373bcc58061e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 5.&amp;nbsp; 接下来，我们将演示模板的使用方法。首先，框选目标区域后，会出现一个「执行」按钮。点击后，系统将根据当前列所选工具，并结合当前行和列的提示词，自动补全前一列的数据。
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//9a77497f6143652b07963716c4e29760.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 6.&amp;nbsp; 我们可以添加一些附加提示词，调整提问效果
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//d2b38df698ff8615590f0230b38d4696.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 7.&amp;nbsp; 使用 Web Search 工具可以获取互联网的实时信息。当点击 Web Search 生成的结果单元格时，侧边栏会弹出更多相关链接供你查看。
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//0ebf2f625219f75226b07327147e0c89.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 8.&amp;nbsp; 使用 Read 工具，可以对任何的公开网址进行信息提取和总结
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//fbb546fb7296de72b68bf3657955cb72.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 9.&amp;nbsp; 通过以上简单步骤，帮助您轻松实现在表格内自动数据采集与填充！即刻登录 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Univer Go&lt;/strong&gt;&lt;/a&gt; ，探索丰富多样的定制化功能，开启高效办公新体验！
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332457</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332457</guid>
            <pubDate>Mon, 03 Feb 2025 02:51:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>OpenWrt 24.10 发布首个稳定版，初步支持 Wi-Fi 7</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;面向嵌入式设备（通常是无线路由器）的开源 Linux 发行版系统 OpenWrt 24.10 &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrt.org%2Freleases%2F24.10%2Fnotes-24.10.0&quot; target=&quot;_blank&quot;&gt;首个稳定版已正式发布&lt;/a&gt;&lt;/u&gt;，距离上一个版本（23.05.0）已经过去了一年四个月，期间包括 5400 多次更新提交。&lt;/p&gt; 
&lt;p&gt;OpenWrt 24.10 的新特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持逾 1970 款设备，比 23.05.0 增加了 100 多款；&lt;/li&gt; 
 &lt;li&gt;Linux 内核从 5.15 升级到 6.6；&lt;/li&gt; 
 &lt;li&gt;包管理器仍然是 OPKG，APK 包尚不支持，预计下个版本才会切换到 APK；&lt;/li&gt; 
 &lt;li&gt;加密库 mbedtls 更新到 3.6；&lt;/li&gt; 
 &lt;li&gt;改进了 WiFi6 (802.11ax) 支持，初步支持 WiFi7 (802.11be)；&lt;/li&gt; 
 &lt;li&gt;改进了 Link Layer Discovery Protocol(LLDP) 支持，等等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下载地址：&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.openwrt.org%2Freleases%2F24.10.0%2Ftargets%2F&quot; target=&quot;_blank&quot;&gt;https://downloads.openwrt.org/releases/24.10.0/targets/&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332452/openwrt-24-10-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332452/openwrt-24-10-released</guid>
            <pubDate>Mon, 03 Feb 2025 02:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>cURL 8.12.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;curl 8.12.0 现已正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2025%2F02%2F05%2Fcurl-8-12-0%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，具体更新内容包括：&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2025-0167.html&quot; target=&quot;_blank&quot;&gt;CVE-2025-0167：netrc 和默认凭据泄露&lt;/a&gt;。当被要求使用&lt;code&gt;.netrc&lt;/code&gt;文件作为凭据&lt;strong&gt;并&lt;/strong&gt;遵循 HTTP 重定向时，curl 可能会在某些情况下将用于第一个主机的密码泄露给后续主机。此缺陷仅在 netrc 文件中有一个&lt;code&gt;default&lt;/code&gt;省略登录名和密码的条目时才会显现。这是一种罕见的情况。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2025-0665.html&quot; target=&quot;_blank&quot;&gt;CVE-2025-0665：eventfd double close&lt;/a&gt;。在完成线程名称解析后关闭连接通道时，libcurl 会错误地两次关闭同一个文件描述符。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2025-0725.html&quot; target=&quot;_blank&quot;&gt;CVE-2025-0725：gzip 整数溢出&lt;/a&gt;。当使用 zlib 1.2.0.3 或更旧版本的 libcurl 被要求使用&lt;code&gt;CURLOPT_ACCEPT_ENCODING&lt;/code&gt;选项对内容编码的 HTTP 响应执行自动 gzip 解压缩时，攻击者控制的整数溢出会使 libcurl 执行缓冲区溢出。几乎没有用户还在使用如此老旧和易受攻击的 zlib 版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;strong&gt;Changes&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;curl：为从文件读取变量&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2024%2F12%2F30%2Fcurl-with-partial-files%2F&quot; target=&quot;_blank&quot;&gt;添加字节范围支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;curl：make –etag-save acknowledge –create-dirs&lt;/li&gt; 
 &lt;li&gt;curl：将「time_queue」变量添加到 -w&lt;/li&gt; 
 &lt;li&gt;getinfo：提供用于 HTTP 和代理的身份验证信息：&lt;/li&gt; 
 &lt;li&gt;openssl：添加使用来自 PKCS#11 供应商的密钥和证书的支持&lt;/li&gt; 
 &lt;li&gt;QUIC：通过 CURLSSLOPT_EARLYDATA 实现 gnutls 的 0RTT&lt;/li&gt; 
 &lt;li&gt;vtls：为 SSL 会话 im-/export 提供 ssls-export 功能&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2024%2F12%2F21%2Fdropping-hyper%2F&quot; target=&quot;_blank&quot;&gt;hyper：放弃支持&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Bugfixes&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;libcurl&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;确认 CURLOPT_DNS_SERVERS 设置为 NULL&lt;/li&gt; 
 &lt;li&gt;修复 CURLOPT_CURLU override logic&lt;/li&gt; 
 &lt;li&gt;初始 HTTPS RR 解析支持&lt;/li&gt; 
 &lt;li&gt;禁止使用 sscanf()&lt;/li&gt; 
 &lt;li&gt;支持使用自定义 libzstd 内存函数&lt;/li&gt; 
 &lt;li&gt;将 cookie 的过期时间限制为 400 天&lt;/li&gt; 
 &lt;li&gt;仅解析确切的 cookie 过期日期&lt;/li&gt; 
 &lt;li&gt;在 curl_multi_fdset 返回的集合中包含关闭连接&lt;/li&gt; 
 &lt;li&gt;ECH：将 API 更新为与 OpenSSL 维护人员达成一致的 API&lt;/li&gt; 
 &lt;li&gt;mbedtls：修复 blocked sends 的处理&lt;/li&gt; 
 &lt;li&gt;在 Windows 上终止 snprintf 输出&lt;/li&gt; 
 &lt;li&gt;将 ssl_scache 添加到&amp;nbsp;multi handle&lt;/li&gt; 
 &lt;li&gt;为 wolfSSL + OpenSSL 构建自动启用&lt;code&gt;OPENSSL_COEXIST&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;使用 SSL_poll 确定 OpenSSL QUIC streams 的可写性&lt;/li&gt; 
 &lt;li&gt;……&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;scripts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;众多 cmake 改进&lt;/li&gt; 
 &lt;li&gt;scripts/mdlinkcheck：markdown 链接检查器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;curl tool&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果 etag 选项与多个 URL 一起使用，则返回错误&lt;/li&gt; 
 &lt;li&gt;接受 –form type= 字符串中的数字&lt;/li&gt; 
 &lt;li&gt;make –etag-compare 接受不存在的文件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;docs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FINFRASTRUCTURE.md&quot; target=&quot;_blank&quot;&gt;INFRASTRUCTURE.md&lt;/a&gt; describing project infra&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下一个版本&amp;nbsp;curl 8.13.0 预计将于 2025 年 4 月 2 日发布。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332451/curl-8-12-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332451/curl-8-12-0-released</guid>
            <pubDate>Mon, 03 Feb 2025 02:21:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>DjangoAdmin 敏捷开发框架 Django+AntdVue 版本 v2.4.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;v2.4.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1、新增支持原生 SQL 语句查询；&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2、新增验证码大小写校验规则；&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;div&gt; 
            &lt;h2&gt;项目介绍&lt;/h2&gt; 
            &lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;一款 Python 语言基于 Django、Vue3、AntDesign、MySQL 等框架精心打造的一款模块化、高性能、企业级的敏捷开发框架，本着简化开发、提升开发效率的初衷触发，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮等等一系列个性化、轻量级的组件，是一款真正意义上实现低代码开发的敏捷开发框架。&lt;/p&gt; 
            &lt;h2&gt;内置模块&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;用户管理：用于维护管理系统的用户，常规信息的维护与账号设置。&lt;/li&gt; 
             &lt;li&gt;角色管理：角色菜单管理与权限分配、设置角色所拥有的菜单权限。&lt;/li&gt; 
             &lt;li&gt;菜单管理：配置系统菜单，操作权限，按钮权限标识等。&lt;/li&gt; 
             &lt;li&gt;职级管理：主要管理用户的职级。&lt;/li&gt; 
             &lt;li&gt;岗位管理：主要管理用户担任职务。&lt;/li&gt; 
             &lt;li&gt;部门管理：配置系统组织机构，树结构展现支持数据权限。&lt;/li&gt; 
             &lt;li&gt;字典管理：对系统中常用的较为固定的数据进行统一维护。&lt;/li&gt; 
             &lt;li&gt;配置管理：对系统的常规配置信息进行维护，网站配置管理功能进行统一维护。&lt;/li&gt; 
             &lt;li&gt;通知公告：系统通知公告信息发布维护。&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;软件信息&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;软件名称：DjangoAdmin 敏捷开发框架 Django+AntdVue 版本&lt;/li&gt; 
             &lt;li&gt;官网网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoadmin.cn&quot; target=&quot;_blank&quot;&gt;https://www.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;文档网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.django.antdvue.djangoadmin.cn&quot; target=&quot;_blank&quot;&gt;http://docs.django.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;演示地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.django.antdvue.djangoadmin.cn&quot; target=&quot;_blank&quot;&gt;http://manage.django.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;版本说明&lt;/h2&gt; 
            &lt;table cellspacing=&quot;0&quot; style=&quot;-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px&quot;&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;th&gt;版本名称&lt;/th&gt; 
               &lt;th&gt;版本说明&lt;/th&gt; 
               &lt;th&gt;版本地址&lt;/th&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Django+Layui 混编版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Django、Layui 等框架研发&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Flask+Layui 混编版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Flask、Layui 等框架研发&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;FastAPI+Layui 混编版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 FastAPI、Layui 等框架研发&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_Layui&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Tornado+Layui 混编版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Tornado、Layui 等框架研发&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Django+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Django、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Flask+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Flask、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;FastAPI+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 FastAPI、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_EleVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Tornado+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Tornado、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Django+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Django、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Flask+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Flask、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;FastAPI+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 FastAPI、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_AntdVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Fastapi_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;Tornado+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;采用 Tornado、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue&quot;&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
            &lt;/table&gt; 
            &lt;h2&gt;模块展示&lt;/h2&gt; 
            &lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-42bb4b187a904bc724e0d4466cacf778241.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332442</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332442</guid>
            <pubDate>Sun, 02 Feb 2025 23:00:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Dante Cloud 3.4.2.1 发布，支持 Passkey 通行密钥 「无密码」 登录</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;150&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9aa2afd1c3db8b37af478db8969ed8c3d2b.png&quot; width=&quot;200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;[一] 项目简介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 国内首个支持阻塞式和响应式服务并行的微服务平台。是采用&lt;strong&gt;领域驱动模型 (DDD)&lt;strong&gt;设计思想，以「&lt;strong&gt;高质量代码、低安全漏洞&lt;/strong&gt;」为核心，基于 Spring 生态全域开源技术，高度&lt;/strong&gt;模块化和组件化设计&lt;/strong&gt;，支持&lt;strong&gt;智能电视、IoT 等物联网设备&lt;/strong&gt;认证，满足&lt;strong&gt;国家三级等保要求&lt;/strong&gt;，支持&lt;strong&gt;接口国密数字信封加解密&lt;/strong&gt;等一系列安全体系的多租户微服务解决方案。可以「&lt;strong&gt;一套代码实现微服务和单体两种架构&lt;/strong&gt;」的企业级应用系统。&lt;/p&gt; 
&lt;h2&gt;[二] 项目理念&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 一直秉承着「简洁、高效、包容、务实」的理念，使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，不断地深耕细作、去粗取精、用心打造。目标是构建一款&lt;code&gt;代码质量高、维护投入低、安全防护强&lt;/code&gt;的，可以帮助用户快速跨越架构技术选型、技术研究探索阶段，降低传统项目中因安全漏洞、技术负债、低质代码等潜在隐患所产生的高维护投入，期望像项目名字寓意一样，在行业变革的时期承上启下，助力企业信息化建设和变革的产品。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 核心关注点是：&lt;strong&gt;「高质量的系统代码」&lt;/strong&gt;、&lt;strong&gt;「合理的系统架构」&lt;/strong&gt;、&lt;strong&gt;「低耦合的模块划分」&lt;/strong&gt;、&lt;strong&gt;「高安全性系统实现」&lt;/strong&gt;、&lt;strong&gt;「灵活的功能扩展能力」&lt;/strong&gt;，&lt;strong&gt;「优质的微服务实现」&lt;/strong&gt;，而不是追求 &lt;strong&gt;业务功能&lt;/strong&gt; 的 &lt;strong&gt;丰富&lt;/strong&gt; 性。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;[三] 特性介绍&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Passkey&lt;/code&gt;（通行密钥）是一种新型的 &lt;strong&gt;无密码登录&lt;/strong&gt; 技术，旨在提高在线账户的安全性并简化登录流程。通行密钥是密码的一种替代形式，基于公钥密码学技术。每个通行密钥包含一对公钥和私钥，用于快速登录应用，更便捷、安全。用户无需记忆或输入密码，只需通过设备的 PIN 码、指纹或人脸识别验证身份。密钥信息安全存储在设备中，不会被共享或泄露。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Passkey&lt;/code&gt; 的使用非常方便，用户无需记忆复杂的密码，只需通过设备上的生物识别技术（如指纹或面部识别）即可完成登录。此外，&lt;code&gt;Passkey&lt;/code&gt; 可以在多个设备上生成和使用，提高了用户的便利性。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Passkey&lt;/code&gt; 的安全性依赖于端上密钥的保护，由于非对称加密是目前加密强度最高的加密技术，理论上任何人都无法破解，可以说安全性是 100%。即使数据库被盗，黑客也无法获取用户的私钥，因为私钥从未离开用户的设备。&lt;/p&gt; 
&lt;p&gt;在 Dante Cloud 最新版本中，也集成支持了 &lt;code&gt;Passkey&lt;/code&gt; 登录，并且将其与 OAuth2 协议进行了融合，支持使用 &lt;code&gt;Passkey&lt;/code&gt; 通行密钥进行登录并返回 Access Token。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;效果演示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;259&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-07e0aeeffe3766543e60c20824774b8d9fc.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;259&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-57d696c25c01b07257d473fef929fab21ab.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;strong&gt;&lt;img alt=&quot;&quot; height=&quot;259&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-94064ab61429154d068984b133c16aac25a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;[四] 更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;主要更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] Spring Boot 版本升级至 3.4.2&lt;/li&gt; 
   &lt;li&gt;[升级] Nacos 版本升级至 2.5.0。支持 Postgresql 的 Nacos 镜像同步发布至 Docker hub&lt;/li&gt; 
   &lt;li&gt;[新增] 新增 Passkey 通行密钥「无密码」登录方式。&lt;/li&gt; 
   &lt;li&gt;[新增] 新增与 OAuth2 融合的自定义 Passkey 授权模式。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其它更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 新增 Hypersistence Utils 简化 Hibernate 操作和 JSON 等特殊 PostgreSQL 类型支持工具集&lt;/li&gt; 
   &lt;li&gt;[新增] 新增 Passkey 基础存储定义和 Service 实现。&lt;/li&gt; 
   &lt;li&gt;[新增] 新增 404 相关错误码配置。&lt;/li&gt; 
   &lt;li&gt;[新增] 前端新增 UnoCSS 支持 IDE 提示支持&lt;/li&gt; 
   &lt;li&gt;[新增] 新增响应式服务前端对象存储文件下载接口，支持在线下载和打开&lt;/li&gt; 
   &lt;li&gt;[新增] 新增 OSS 模块和 Ip2Region 模块错误码定义。&lt;/li&gt; 
   &lt;li&gt;[新增] 新增 Nacos API 权限初始化脚本&lt;/li&gt; 
   &lt;li&gt;[重构] 重构自定义 SAS 授权模式，抽取通用代码，减少重复代码编写&lt;/li&gt; 
   &lt;li&gt;[重构] 简化 Spring Authorization Server 认证服务核心配置&lt;/li&gt; 
   &lt;li&gt;[修复] 修复新版本 Spring Authorization Server 默认设置与 Opaque Token 冲突导致应用启动抛错问题。&lt;/li&gt; 
   &lt;li&gt;[修复] 去除不必要的 Jackson Module 定义，修复该定义对反序列化产生转型副作用。&lt;/li&gt; 
   &lt;li&gt;[修复] 修复分页查询缓存异常导致分页操作异常问题。&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 Nacos Postgresql 数据库脚本缺少序列器定义问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 Reactive 环境下，Xss 防护会将时间字符中的空格去除，导致反序列化出错问题。&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 OSS GRPC 客户端上传文件失败，需要 SSL/TLS 认证问题。&lt;/li&gt; 
   &lt;li&gt;[修复] 修复响应式服务无法将包含有占位符的接口转换为权限问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复证书文件删除操作不会同步删除本地文件问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复前端对象存储文件下载地址错误问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复前端选型自定义组件默认值不会及时设定问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复读取证书逻辑错误，导致证书无法读取影响其它证书生成问题。&lt;/li&gt; 
   &lt;li&gt;[修复] 修复授权码模式登录出现数据反序列化问题。&lt;/li&gt; 
   &lt;li&gt;[优化] 去除 Docker File 中过时标签&lt;/li&gt; 
   &lt;li&gt;[优化] 系统使用各组件 JSON 反序列化组件进一步统一为使用 Jackson，避免不同组件使用不同反序列化组件产生不必要的问题&lt;/li&gt; 
   &lt;li&gt;[优化] 前端打包压缩组件变更为使用 vite-plugin-compression2&lt;/li&gt; 
   &lt;li&gt;[优化] 前端去除多余的 Typescript Config JSON 文件&lt;/li&gt; 
   &lt;li&gt;[优化] 删除早期版本为临时解决 SAS Issuer 不支持微服务服务名增加的覆盖类&lt;/li&gt; 
   &lt;li&gt;[优化] 证书管理页面补充必要信息，增加后端处理提示及防误操作控制。&lt;/li&gt; 
   &lt;li&gt;[升级] Liberica 基础镜像版本升级至 21.0.6-10&lt;/li&gt; 
   &lt;li&gt;[升级] zipkin 版本升级至 3.4.4&lt;/li&gt; 
   &lt;li&gt;[升级] tempo 版升级至 2.7.0&lt;/li&gt; 
   &lt;li&gt;[升级] clickhouse 版本升级至 24.12.3&lt;/li&gt; 
   &lt;li&gt;[升级] minio docker 镜像版本升级至 RELEASE.2025-02-03T21-03-04Z&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] hypersistence-utils-hibernate-63 版本升级至 3.9.1&lt;/li&gt; 
   &lt;li&gt;[升级] okhttps 版本升级至 4.1.0&lt;/li&gt; 
   &lt;li&gt;[升级] redisson 版本升级至 3.44.0&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk 版本升级至 2.30.14&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk.crt 版本升级至 0.33.11&lt;/li&gt; 
   &lt;li&gt;[升级] springdoc 版本升级至 2.8.4&lt;/li&gt; 
   &lt;li&gt;[升级] weixin-java 版本升级至 4.7.2.B&lt;/li&gt; 
   &lt;li&gt;[升级] grpc 版本升级至 1.70.0&lt;/li&gt; 
   &lt;li&gt;[升级] mysql 版本升级至 9.2.0&lt;/li&gt; 
   &lt;li&gt;[升级] nacos 版本升级至 2.5.0&lt;/li&gt; 
   &lt;li&gt;[升级] lettuce 版本升级至 6.5.2.RELEASE&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;[五] 系统文档&lt;/h2&gt; 
&lt;p&gt;为了更好的帮助大家理解学习 Dante Cloud，新增文档站点 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.vip&quot; target=&quot;_blank&quot;&gt;https://www.herodotus.vip&lt;/a&gt; 。 该站点目前包含矫正和重新梳理后的系统部署相关内容，已根据系统涉及的详细知识点和模块补充大量设计实现和认知理解相关文章。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;如果本项目对你有所帮助，欢迎 Star 一波来支持我们！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitee&lt;/strong&gt;：&lt;a href=&quot;https://gitee.com/dromara/dante-cloud&quot;&gt;https://gitee.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud&quot; target=&quot;_blank&quot;&gt;https://github.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332434/dante-cloud-3-4-2-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332434/dante-cloud-3-4-2-1-released</guid>
            <pubDate>Sun, 02 Feb 2025 16:31:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>