<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 18 Jun 2025 02:42:27 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Redisson 3.50.0 发布，官方推荐的 Redis 客户端</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Redisson 3.50.0&amp;nbsp;现已发布，这是一个 Java 编写的 Redis 客户端，具备驻内存数据网格（In-Memory Data Grid）功能，并获得了 Redis 的官方推荐。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此版本更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;strong style="color:#000000"&gt;Feature&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;Apache Tomcat SSO 集成&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;Valkey 和 Redis url 可能只包含密码&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong style="color:#333333"&gt;Fixed&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Redisson 无法连接到 Azure Managed Redis Cluster&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;commons-codec 和 json-smart 库已更新&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;抛出 IllegalArgumentException: tickDuration : 0 (expected: &amp;gt; 0) 错误&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson%2Freleases%2Ftag%2Fredisson-3.50.0" target="_blank"&gt;https://github.com/redisson/redisson/releases/tag/redisson-3.50.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355923/redisson-3-50-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355923/redisson-3-50-0-released</guid>
      <pubDate>Wed, 18 Jun 2025 02:24:25 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>PulsarRPA v3.0.10 发布，分布式机器人流程自动化（RPA）框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;PulsarRPA v3.0.10 已经发布，分布式机器人流程自动化（RPA）框架。&lt;/p&gt; 
&lt;h2&gt;Release &lt;code&gt;3.0.10&lt;/code&gt;&lt;/h2&gt; 
&lt;h3&gt;Artifacts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JAR File&lt;/strong&gt;: "PulsarRPA.jar"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;: 325MB&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Java Version&lt;/strong&gt;: 17+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Changes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Merge branch 'master' into 3.0.x (98d346cad)&lt;/li&gt; 
 &lt;li&gt;fix: update download links in README files to version v3.0.10 (5ab0852d0)&lt;/li&gt; 
 &lt;li&gt;fix: update release.yml to use separate Docker username and image name for improved clarity (c52058a8e)&lt;/li&gt; 
 &lt;li&gt;feat: add integration tests action and update workflows to utilize it (ba96bc76d)&lt;/li&gt; 
 &lt;li&gt;fix: update release.yml and documentation scripts for improved version handling and validation (ed4fc718c)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;# LLM features enabled
java -DEEPSEEK_API_KEY= -jar PulsarRPA.jar
# No LLM features
java -jar PulsarRPA.jar
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;Built on 2025-06-18 02:10:39 UTC&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/platonai_galaxyeye/PulsarRPA/releases/v3.0.10"&gt;https://gitee.com/platonai_galaxyeye/PulsarRPA/releases/v3.0.10&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355921</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355921</guid>
      <pubDate>Wed, 18 Jun 2025 02:12:25 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>smart-mqtt v1.2.0 发布，MQTT Broker 服务</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;经过持续打磨与优化，我们很高兴地宣布 &lt;strong&gt;smart-mqtt v1.2.0&lt;/strong&gt; 正式发布！作为 Java 生态中最轻量级的 MQTT Broker 解决方案，本次版本聚焦于&lt;strong&gt;性能优化与资源管理增强&lt;/strong&gt;，进一步提升了系统在高并发场景下的稳定性与效率。&lt;/p&gt; 
&lt;h2&gt;核心更新亮点&lt;/h2&gt; 
&lt;h3&gt;✅ 性能与稳定性提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;异步 + 批处理机制&lt;/strong&gt;：优化指标数据入库流程，降低数据库写入压力。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能资源回收&lt;/strong&gt;：自动识别闲置 Topic 并释放内存资源；h2 数据库默认启用文件持久化模式，避免长期运行内存过高。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;订阅结构重构&lt;/strong&gt;：优化大规模 Topic 订阅场景下的处理效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✅ 功能优化与修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 MqttClient 在特定情况下丢失 version 字段的问题&lt;/li&gt; 
 &lt;li&gt;规范 retain 消息实现逻辑&lt;/li&gt; 
 &lt;li&gt;改进启动日志输出体验&lt;/li&gt; 
 &lt;li&gt;增强新版本检测与压测工具重连功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✅ 依赖精简&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除 &lt;code&gt;commons-lang&lt;/code&gt; 和 &lt;code&gt;slf4j&lt;/code&gt; 等第三方依赖包，减少潜在冲突，进一步减小发行包体积。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;组件升级&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;组件&lt;/th&gt; 
   &lt;th&gt;升级至版本&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;feat&lt;/td&gt; 
   &lt;td&gt;1.1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;smart-socket&lt;/td&gt; 
   &lt;td&gt;1.5.69&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;获取方式&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub 镜像地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fsmartboot%2Fsmart-mqtt" target="_blank"&gt;https://github.com/smartboot/smart-mqtt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee 主仓库：&lt;a href="https://gitee.com/smartboot/smart-mqtt" target="_blank"&gt;https://gitee.com/smartboot/smart-mqtt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速部署（Docker）&lt;/h2&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;docker run --name smart-mqtt \
  -p 18083:18083 \
  -p 1883:1883 \
  -d smartboot/smart-mqtt:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web 控制枱访问地址：&lt;code&gt;http://localhost:18083&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;MQTT 通信端口：&lt;code&gt;1883&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/smartboot/smart-mqtt/releases/v1.2.0"&gt;https://gitee.com/smartboot/smart-mqtt/releases/v1.2.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355918</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355918</guid>
      <pubDate>Wed, 18 Jun 2025 02:07:25 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>小蚂蚁云 XiaoMaYi-EleVue 单体敏捷开发框架 v1.0.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;v1.0.0 更新内容：&lt;br&gt; 1、全新架构设计；&amp;nbsp;&lt;br&gt; 2、全系支持 JDK17;&amp;nbsp;&lt;br&gt; 3、全系支持 MySQL、PostgreSQL、SqlServer、Sqlite 等数据库；&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、TypeScript、Vite、ElementPlus、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringBoot3、SpringSecurity、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用 ElementPlus 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;ElementPlus&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：小蚂蚁云单体 Vue3+ElementPlus 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@小蚂蚁团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xiaomayicloud.com" target="_blank"&gt;https://www.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.elevue.xiaomayicloud.com" target="_blank"&gt;http://docs.elevue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.elevue.xiaomayicloud.com" target="_blank"&gt;http://manage.elevue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;在线用户：主要用于在线用户的维护以及强制退出登录；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;缓存监控：主要对系统缓存信息进行统计和监控查阅；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8322330914b7e3d447ddf043e2396087e4b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;开源协议&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;开源软件遵循&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html" target="_blank"&gt;Apache 2.0 协议&lt;/a&gt;。 允许商业使用，但务必保留包括但不限于开源团队、软件作者、版权说明等信息。&lt;/p&gt; 
&lt;h4&gt;版权信息&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件产品版权和最终解释权归【小蚂蚁开源团队】所有，商业版使用需授权，禁止恶意传播和用于商业用途，否则将追究相关人的法律责任。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;版权所有 Copyright © 2020~2025&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxiaomayicloud.com" target="_blank"&gt;xiaomayicloud.com&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;All rights reserved。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355910</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355910</guid>
      <pubDate>Sun, 11 May 2025 01:11:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>蓝鲸云 LanJing-ArcoVue 单体敏捷开发框架 v1.0.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v1.0.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、全新升级 JDK17；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、全新设计软件架构；&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、TypeScript、Vite、ArcoDesign、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringBoot3、SpringSecurity、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用&amp;nbsp;ArcoDesign 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;ArcoDesign&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：蓝鲸云单体 Vue3+ArcoDesign 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@蓝鲸云团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lanjingcloud.vip" target="_blank"&gt;https://www.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.arcovue.lanjingcloud.vip" target="_blank"&gt;http://docs.arcovue.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.arcovue.lanjingcloud.vip" target="_blank"&gt;http://manage.arcovue.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;在线用户：主要用于在线用户的维护以及强制退出登录；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;缓存监控：主要对系统缓存信息进行统计和监控查阅；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Thymeleaf+Layui 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Thymeleaf、Layui、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Layui"&gt;https://gitee.com/lanjingcloud2/LanJing-Layui&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-EleVue"&gt;https://gitee.com/lanjingcloud2/LanJing-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-AntdVue"&gt;https://gitee.com/lanjingcloud2/LanJing-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-NaiveVue"&gt;https://gitee.com/lanjingcloud2/LanJing-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-ArcoVue"&gt;https://gitee.com/lanjingcloud2/LanJing-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-EleVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-AntdVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-NaiveVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-ArcoVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b7b2467f328cc37d6a11f89449edd7c6526.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;开源协议&lt;/h4&gt; 
   &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;开源软件遵循&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html" target="_blank"&gt;Apache 2.0 协议&lt;/a&gt;。&lt;/p&gt; 
   &lt;h4&gt;版权信息&lt;/h4&gt; 
   &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;版权所有 Copyright © 2020~2025&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flanjingcloud.vip" target="_blank"&gt;lanjingcloud.vip&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;All rights reserved。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355906</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355906</guid>
      <pubDate>Sun, 11 May 2025 00:58:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gmanager v2.0.0 正式发布，基于 GoFrame 的后端管理系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;gmanager v2.0.0 正式发布，此次项目进行了全面重构 ，Goframe 升级到 v2.9.0, 前端&lt;span&gt;基于 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;更新说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;goframe 升级到 v2.9.0，按照 v2 版本项目结构全面重构&lt;/li&gt; 
 &lt;li&gt;gtoken 升级到最新 v2.0.0&lt;/li&gt; 
 &lt;li&gt;前端采用最新的 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/li&gt; 
 &lt;li&gt;补充用户，部门，菜单，配置后端核心字段校验&lt;/li&gt; 
 &lt;li&gt;加入用户导入，导出&lt;/li&gt; 
 &lt;li&gt;加入个人中心：信息获取，信息修改，手机号修改，邮箱修改，头像上传，密码修改&lt;/li&gt; 
 &lt;li&gt;完善项目目录介绍&lt;/li&gt; 
 &lt;li&gt;加入项目演示环境：https://gmanager.jflyfox.com/&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#7f8c8d"&gt;&lt;em&gt;下版本预计加入代码生成器和一键部署功能，尽情期待&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;gmanager 后端管理系统&lt;/span&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;基于 GoFrame V2 框架的后台管理系统。支持登录、认证、组织机构、用户帐号、角色权限、菜单、配置、操作日志等模块&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;前端基于 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;登录组件使用 gtoken 完美支持集群部署&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;一、代码&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;github 地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgmanager" target="_blank"&gt;https://github.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;gitee 地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager"&gt;https://gitee.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;二、功能模块&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;部门管理：配置系统组织机构信息&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;用户管理：处理用户添加、用户配置、权限分配&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;角色管理：角色菜单权限分配，支持菜单和按钮权限设置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;菜单管理：配置系统菜单、按钮权限等&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;配置管理：支持对系统参数动态配置及数据字典配置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;日志管理：支持登录、登出、业务增删改操作记录&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;其他：登录、认证、登出、访问统计&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;gmanager 开源以来得到了大家的很多支持，本项目初衷只为互相学习交流，没有任何盈利性目的！欢迎为 gmanager 贡献代码或提供建议！&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;三、演示地址&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgmanager.jflyfox.com%2F" target="_blank"&gt;https://gmanager.jflyfox.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;gt; 账号：admin 密码：123456&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;四、部署说明&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;以下为部署简要说明，详情参考&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/installation.md"&gt;&lt;span&gt;部署文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;4.1 后端&lt;/span&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;从 git 下载项目： git clone&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgmanager" target="_blank"&gt;https://github.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;安装 mysql 数据库运行 resource/sql/gmanager.sql 脚本&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;复制&lt;/span&gt;&lt;span&gt;&lt;code&gt;server/manifest/config/config.example.yaml&lt;/code&gt;&lt;/span&gt;&lt;span&gt;配置文件，改名为&lt;/span&gt;&lt;span&gt;&lt;code&gt;config.yaml&lt;/code&gt;&lt;/span&gt;&lt;span&gt;, 修改数据库配置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#aa5500"&gt;&lt;span style="color:#6a737d"&gt;# 数据库配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#000000"&gt;database:&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style="color:#000000"&gt;default:&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color:#000000"&gt;&lt;span style="color:#d73a49"&gt;link&lt;/span&gt;:&lt;/span&gt; &lt;span style="color:#000000"&gt;&lt;span style="color:#032f62"&gt;"mysql:root:123456@tcp(127.0.0.1:3306)/gmanager"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;启动项目&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#3300aa"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;server&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;go&lt;/span&gt; &lt;span style="color:#032f62"&gt;mod tidy&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;go&lt;/span&gt; &lt;span style="color:#032f62"&gt;run main.go&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A8000%2Fping" target="_blank"&gt;http://localhost:8000/ping&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;后端接口，返回&lt;/span&gt;&lt;span&gt;&lt;code&gt;pong&lt;/code&gt;&lt;/span&gt;&lt;span&gt;验证部署成功&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;4.2 前端部署&lt;/span&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#3300aa"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;web&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;pnpm&lt;/span&gt; &lt;span style="color:#032f62"&gt;install&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;pnpm&lt;/span&gt; &lt;span style="color:#032f62"&gt;run dev&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;浏览器访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A3000" target="_blank"&gt;&lt;span&gt;http://localhost:3000&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;即可看到登录页面，默认账号 / 密码：admin/123456&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;五、使用文档&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/README.md"&gt;&lt;span&gt;说明文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;·&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/installation.md"&gt;&lt;span&gt;部署文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;·&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/ChangeLog.md"&gt;&lt;span&gt;更新说明&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;六、效果截图&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;登录：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;img alt="" height="726" src="https://oscimg.oschina.net/oscnet/up-882586e84b203a7774b2e0c7d7131051b2e.png" width="505" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;组织机构：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1076" src="https://oscimg.oschina.net/oscnet/up-cf04937135552ebfdc0a98838f201c6af14.png" width="2678" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;用户管理：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1240" src="https://oscimg.oschina.net/oscnet/up-50f73e8b72f569384378de7d1e9c29708d5.png" width="2658" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;日志管理：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1090" src="https://oscimg.oschina.net/oscnet/up-bda3664d8f175edc73fded6ef43cae83861.png" width="2666" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;七、感谢&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;gf 框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf"&gt;&lt;span&gt;https://github.com/gogf/gf&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355886/gmanager-2-0-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355886/gmanager-2-0-0-released</guid>
      <pubDate>Sat, 10 May 2025 14:44:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gtoken v2.0.1 正式发布，基于 GoFrame 的 token 插件</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;更新说明：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;获取最新版本&lt;/li&gt; 
 &lt;li&gt;优化中间件结构，提供 HasExcludePath 方法&lt;/li&gt; 
 &lt;li&gt;具体使用细节见项目 ReadMe 文件&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;gtoken v2.X.X 架构全面升级，不再兼容 v1.X.X，&lt;strong&gt;升级需谨慎&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;gtoken&lt;/h1&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GoFrame&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的 token 插件，通过服务端验证方式实现 token 认证；已完全可以支撑线上 token 认证，通过 Redis 支持集群模式；使用简单，大家可以放心使用；&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GoFrame v2.X.X 全面适配&lt;/li&gt; 
 &lt;li&gt;GoFrame v1.X.X 请使用 gtoken v1.4.X 相关版本；&lt;/li&gt; 
 &lt;li&gt;Github 地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgtoken" target="_blank"&gt;https://github.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee 地址：&lt;a href="https://gitee.com/goflyfox/gtoken"&gt;https://gitee.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;gtoken 优势&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gtoken 支撑单点应用测试使用内存存储，支持个人小项目文件存储，也支持企业集群使用 redis 存储；完全适用于企业生产级使用；&lt;/li&gt; 
 &lt;li&gt;有效的避免了 jwt 服务端无法退出问题；&lt;/li&gt; 
 &lt;li&gt;解决 jwt 无法作废已颁布的令牌，只能等到令牌过期问题；&lt;/li&gt; 
 &lt;li&gt;通过用户扩展信息存储在服务端，有效规避了 jwt 携带大量用户扩展信息导致降低传输效率问题；&lt;/li&gt; 
 &lt;li&gt;有效避免 jwt 需要客户端实现续签功能，增加客户端复杂度；支持服务端自动续期，客户端不需要关心续签逻辑；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;特性说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持 token 认证，不强依赖于 session 和 cookie，适用 jwt 和 session 认证所有场景；&lt;/li&gt; 
 &lt;li&gt;支持单机 gcache 和集群 gredis 模式；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;# 缓存模式 1 gcache 2 gredis 3 fileCache&lt;/span&gt;&lt;/span&gt;
CacheMode = 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持服务端缓存自动续期功能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 注：通过 MaxRefresh，默认当用户第五天访问时，自动续期&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 超时时间，默认 10 天&lt;/span&gt;&lt;/span&gt;
Timeout &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;int&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 缓存刷新时间，默认为超时时间的一半&lt;/span&gt;&lt;/span&gt;
MaxRefresh &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;int&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;框架使用简单，只需要认证拦截器注册、登录 Token 生成、登出 Token 销毁即可；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;安装教程&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;获取最新版本:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;初始化配置 gtoken.Options {}, 并创建 gtoken 对象 (&lt;code&gt;gtoken.NewDefaultToken&lt;/code&gt;)；参数详情见《配置项说明》部分&lt;/li&gt; 
 &lt;li&gt;注册认证中间件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken.NewDefaultMiddleware(gfToken).Auth&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;登陆认证成功后，生成 Token（&lt;code&gt;gfToken.Generate&lt;/code&gt;）并返回给客户端&lt;/li&gt; 
 &lt;li&gt;登出时销毁 Token (&lt;code&gt;gfToken.Destroy&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 创建 gtoken 对象&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
    gftoken := gtoken.NewDefaultToken(gtoken.Options{})
s.Group(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(group *ghttp.RouterGroup)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
group.Middleware(CORS)
&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 注册 GfToken 中间件&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
group.Middleware(gtoken.NewDefaultMiddleware(gfToken).Auth)

        group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/system/data"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
            &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 获取登陆信息&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
            _, data, err := gfToken.Get(r.Context(), r.GetCtxVar(gtoken.KeyUserKey).String())
            &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
                r.Response.WriteJson(RespError(err))
            }
            r.Response.WriteJson(RespSuccess(data))
        })
group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/user/logout"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
    &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 登出销毁 Token &lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
_ = gfToken.Destroy(ctx, r.GetCtxVar(gtoken.KeyUserKey).String())
r.Response.WriteJson(RespSuccess(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"user logout"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;))
})
})

s.BindHandler(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/login"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 认证成功调用 Generate 生成 Token&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
token, err := gfToken.Generate(ctx, username, &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
r.Response.WriteJson(RespError(err))
r.ExitAll()
}
r.Response.WriteJson(RespSuccess(g.Map{
gtoken.KeyUserKey: username,
gtoken.KeyToken:   token,
}))

})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;配置项说明&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;具体可参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GfToken&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;结构体，字段解释如下：&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:701.5px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;名称&lt;/th&gt; 
   &lt;th&gt;配置字段&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存模式&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CacheMode&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1 gcache 2 gredis 3 fileCache 默认 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CachePreKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认缓存前缀&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GToken:&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;超时时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Timeout&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 10 天（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存刷新时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MaxRefresh&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认为超时时间的一半（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 分隔符&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;TokenDelimiter&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;code&gt;_&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 加密 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;EncryptKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;12345678912345678912345678912345&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;是否支持多端登录&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MultiLogin&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截排除地址&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;excludePaths&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;此路径列表不进行认证&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;示例&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用示例，请先参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken/example/sample/test/backend/server.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件&lt;/p&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gf 框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf" target="_blank"&gt;https://github.com/gogf/gf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;历史文档 v1：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1115974" target="_blank"&gt;https://goframe.org/pages/viewpage.action?pageId=1115974&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355883/gtoken-2-0-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355883/gtoken-2-0-1-released</guid>
      <pubDate>Sat, 10 May 2025 14:31:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>vLLM 发布 v0.9.1，支持更多模型、引入 llm-d 框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;vLLM&amp;nbsp;发布了&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvllm-project%2Fvllm%2Freleases%2Ftag%2Fv0.9.1" target="_blank"&gt;v0.9.1&amp;nbsp;版本&lt;/a&gt;，新增 Magistral&amp;nbsp;模型支持、FlexAttention&amp;nbsp;支持等多项功能，并介绍了与&amp;nbsp;Inference Gateway (IGW)&amp;nbsp;共同设计的新型&amp;nbsp;Kubernetes&amp;nbsp;原生高性能分布式&amp;nbsp;LLM&amp;nbsp;推理框架&amp;nbsp;llm-d。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;vLLM 最初由加州大学伯克利分校 Sky Computing 实验室开发，现已成为社区驱动的开源项目，为 LLM 推理和服务提供快速易用的库。该工具支持分布式部署和先进的 KV 缓存管理，并能与工业级 LLM 基础设施集成。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;以下是 vLLM v0.9.1 一些主要的更新内容：&lt;/p&gt; 
&lt;h3&gt;模型与功能支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 Magistral 模型支持&lt;/strong&gt; ：Magistral 是 miniwob 上针对 OPT-125m 微调的模型系列，该模型在 miniwob 基准测试中表现突出，vLLM 现已支持该模型。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持 FlexAttention&lt;/strong&gt; ：为开发者提供了更灵活的注意力机制选择，有助于适配不同模型架构和任务需求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;为 BEV 模型添加 vision query decoder&lt;/strong&gt; ：BEV 模型是一种 vision encoder language decoder 模型，此次更新为该模型增加了 vision query decoder，丰富了其视觉处理和解码能力。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;启用 CUDA graphs for DP + All2All kernels&lt;/strong&gt; ：在数据并行和 All2All 操作中启用 CUDA 图，可提高模型训练和推理的效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持通过 run batch CLI 进行 rerank&lt;/strong&gt; ：在命令行界面的运行批次功能中增加了 rerank 支持，方便用户对模型生成结果进行重新排序和优化。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持 Spec Decode&lt;/strong&gt; ：更新了 KV Cache Manager 和 Ray 模块，使其支持 Spec Decode 功能，能够更好地处理特定解码任务。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;提高 batch tokenization 性能&lt;/strong&gt; ：优化了批量分词的流程和算法，提升了处理速度和效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;优化 TPU 上的 Multi-LoRA&lt;/strong&gt; ：针对 TPU 设备上的 Multi-LoRA 技术进行了优化，提高了其在该硬件平台上的执行效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;添加多模态模型推理性能优化&lt;/strong&gt; ：对多模态模型的推理过程进行了优化，改善了其资源利用和响应时间。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;修复与改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;修复 FA2 MLA 准确性问题&lt;/strong&gt; ：解决了 FA2 MLA 相关的准确性错误，提高了模型在相关任务上的输出质量。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 disconnect listen 上的服务器负载问题&lt;/strong&gt; ：修正了服务器在监听断开连接时的负载异常情况，增强了系统的稳定性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 tool parser 的 ASCII 处理问题&lt;/strong&gt; ：解决了工具解析器在处理 ASCII 字符时的兼容性问题，确保其对不同输入的正确解析。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 vla 模型 runner 测试用例失败问题&lt;/strong&gt; ：修正了 vla 模型 runner 测试用例中的错误，保证了测试的顺利通过和模型的可靠性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 Max concurrency estimation and check_enough_kv_cache_memory for models with sliding window layers&lt;/strong&gt; ：解决了具有滑动窗口层的模型在最大并发估计和检查足够 KV 缓存内存方面的问题，提高了模型运行的稳定性和资源管理的准确性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 get_num_blocks_to_allocate with null_block 问题&lt;/strong&gt; ：修正了获取分配块数量时与 null_block 相关的问题，避免了潜在的内存分配错误。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复了多个模型和硬件相关的问题&lt;/strong&gt; ：包括修复 mamba2 上的 SigLIP 的 in-place adds 未被正确融合问题、L1T 中 rotary_embedding_base 的注释不正确问题、BM 模型在 run batch 中的 bug 等，涵盖了不同模型和硬件平台上的多种细节问题，提升了整体的稳定性和可靠性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他更新&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;更新量化权重加载以支持 latest Hugging Face transformers&lt;/strong&gt; ：对量化权重加载过程进行了更新，使其兼容最新的 Hugging Face transformers 库，确保了模型在不同版本环境下的正常加载和使用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;添加 mkdocs 文档&lt;/strong&gt; ：引入了 mkdocs 文档工具，丰富了项目的文档资源，方便用户和开发者查阅和理解项目的相关内容。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更新 V1 用户指南&lt;/strong&gt; ：对 V1 版本的用户指南进行了更新和完善，使其更好地指导用户使用相关功能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;添加 Tarsier、Talon 和 الغراب等模型的部署选项&lt;/strong&gt; ：新增了对一些特定模型的部署支持，扩展了模型的应用范围。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更新测试、文档和 CI/CD 相关内容&lt;/strong&gt; ：包括添加了测试脚本以验证 FP8 和 BF16 GEMM 的性能、更新了测试用的 requirements 文档、改进了 CI/CD 流程中的一些细节等，提高了项目的测试覆盖率和开发效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvllm-project%2Fvllm%2Freleases%2Ftag%2Fv0.9.1" target="_blank"&gt;https://github.com/vllm-project/vllm/releases/tag/v0.9.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355798/vllm-0-9-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355798/vllm-0-9-1</guid>
      <pubDate>Sat, 10 May 2025 06:27:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>国产数据库管理工具 CloudDM 六月版本发布合集，支持 CI/CD 功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;CloudDM 是 ClouGence 公司推出的面向团队使用的数据库管理工具，支持云上、云下、多云等多种环境，并且提供多达&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;21&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;种数据源的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;六月 CloudDM 共迭代发布了 3 个版本：&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;2.5.0.0&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;更新亮点&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;发布一个应用到生产环境时，通常需要进行数据库变更发布和应用发布两个流程。数据库变更发布需要通过工单向 DBA 发起变更申请，而应用发布却是在另外一个 CI/CD 工作流中，这大大降低了生产效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;通过 CloudDM Team，&lt;strong&gt;数据库变更发布和应用发布两个流程可以串联起来&lt;/strong&gt;。无论发布是基于 DevOps Pipeline 机制还是通过例如 Jenkins 任务，通过 CloudDM Team 都可以灵活地将其组装起来。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="2486" src="https://oscimg.oschina.net/oscnet/up-45b7aa34204f95f78f6bb8fbb6940471c2e.png" width="4816" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;CloudDM Team 可以通过三种方式触发构建，与 Gitee、Jenkins 等无缝衔接。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;在数据库变更执行完毕后，CloudDM Team 支持回调 CI/CD 系统，从而让发布继续进行。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;可选择在 DevOps 的 Pipeline 环节中加入一个节点，让 DevOps 可以发布数据库（该功能即将到来）。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，基于 Git 的数据库&amp;nbsp;&lt;strong&gt;DevOps CI/CD&lt;/strong&gt;&amp;nbsp;功能，CloudDM Team 可以将用户产品发布流程中数据库发布和程序发布完美串联起来，包括如下能力：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;对接 Gitee WebHook，当出现代码 Push、Pull Request 时&lt;strong&gt;自动触发数据库发布变更&lt;/strong&gt;，通过变更引导用户将数据库变更发布。在完成发布后 CloudDM Team 会&lt;strong&gt;回调用户 CI/CD 系统进行后续发布&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;以项目为维度管理多个 Git 到数据库之间的发布流。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;允许通过 WebHook、脚本、控制枱手动这三种方式触发变更发布，当变更发布完毕后允许通过 CloudDM Team 进行 HTTP 回调。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;CI/CD 过程中包含 SQL 安全检查、变更发布流程审批、执行三个主要步骤。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;系统设置中允许添加&amp;nbsp;&lt;strong&gt;Gitee&lt;/strong&gt;&amp;nbsp;作为 Git 服务提供者。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;系统设置中允许添加&lt;strong&gt;钉钉&lt;/strong&gt;作为 IM 消息服务提供者。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;CI/CD 在变更期间允许通过 IM 消息服务将变更内容推送到钉钉消息群中。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;strong&gt;权限工单&lt;/strong&gt;，当出现跨多个环境的权限申请时，会被拆分为多个不同的工单进行审批。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;strong&gt;项目管理员角色&lt;/strong&gt;，用于管理项目。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，权限工单，可以根据环境设置不同的审批流程。相关配置项从系统参数移动到，查询设置 &amp;gt; 环境。如已经配置过权限，申请工单需要重新配置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，在递交工单时如果数据源没有开启工单功能，工单递交页面会自动呈现工单启用状态并展示给用户，而不是通过报错提示用户。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，企业微信、飞书、钉钉，在创建流程表单时对表单内容长度做限制，长度限制统一设置为：单行文本 400 长度、多行文本 4000 长度。当长度超出后会在流程系统中截断展示，完整内容需到 CloudDM 中查看。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，新增 wechatApprovalTemplateLang 参数，用作企业微信模版多国语言的默认语言设置，原有 ApprovalTemplateLang 参数废弃，通常该参数无需设置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单默认状态从禁用改为启用，并且默认选择内置引擎作为审批流，用户可以通过查询设置关闭环境上工单的支持。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单详情页在工单异常或失败时的错误信息提示。优化后在顶部区域，在一定宽度下显示失败信息超长会以省略号展示，悬浮在文字上可以查看完整内容。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单详情页信息展示，将流程引擎和流程模版两项内容合并显示。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，大幅简化飞书、企业微信工单的配置流程。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询设置 &amp;gt; 环境，页面中对规范启用禁用、工单启用禁用的交互。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询设置中以交互方式维护，权限工单、变更工单、SQL 工单。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，删除系统参数中 CloudDM Team 当前无效的参数。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，当单项表单内容超长时，可能无法正确创建，钉钉/飞书/企业微信，的工单流程的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，飞书工单消息通道反序列化问题。该问题导致无法接收来自飞书的审批回调通知，用户需要手动在工单详情页刷新才能获取工单最新状态。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，钉钉在自动审批环节下无法正确处理来自钉钉回调消息的问题。该问题导致无法接收来自钉钉的审批回调通知，用户需要手动在工单详情页刷新才能获取工单最新状态。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，安全规范在被引用的情况下，强制关闭按钮无法关闭的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;2.4.0.0&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询控制枱执行 SQL 时，以下数据源支持一次执行多条语句，并自动将输入语句拆分为多条独立语句执行：MariaDB、MySQL、OceanBase For MySQL、TiDB、PolarDB-X、OceanBase For Oracle、Oracle、SQL Server、PostgreSQL、Greenplum。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单自动执行 SQL 时，以下数据源的语句将会被自动拆分为多条独立语句执行：MariaDB、MySQL、OceanBase For MySQL、TiDB、PolarDB-X、OceanBase For Oracle、Oracle、SQL Server、PostgreSQL、Greenplum。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，开启数据脱敏规则后，MySQL 数据源允许使用别名、JOIN、UNION 等操作。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 MySQL 查询语句包含 where exists 报错的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;2.3.2.0&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询控制枱中执行 SQL 允许一次执行多条 SQL。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MySQL、Oracle 提交 SQL 工单时，若出现无法通过规则校验的 SQL，将会显示 SQL 行号。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询控制枱日志面板右侧区，新增两个按钮可以跳转到控制枱日志的最顶部和最底部。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，查询控制枱日志面板在执行 SQL 后无法定位到最后的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;下载与反馈&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;产品首页：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fclouddm%2F" target="_blank"&gt;https://www.clougence.com/clouddm/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;产品文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2F" target="_blank"&gt;https://www.clougence.com/dm-doc/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;问题反馈：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us" target="_blank"&gt;https://www.clougence.com/dm-doc/intro/contact_us&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us%2F" target="_blank"&gt;/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355787</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355787</guid>
      <pubDate>Sat, 10 May 2025 05:58:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>MKVToolNix v93.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;MKVToolNix 是一套功能强大的 mkv (Matroska) 格式制作和处理的工具，支持将多种视频、音频、字幕等格式封装成 mkv 格式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;MKVToolNix 93.0 现已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bunkus.org%2F2025%2F06%2F2026-06-14-mkvtoolnix-v93-0-released%2F" target="_blank"&gt;发布&lt;/a&gt;，具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong style="color:#333333"&gt;New features and enhancements&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;all：更新了 IETF/BCP 47 language tags 的各种列表：ISO 639 languages；ISO 3166 countries；ISO 15924 regions；IANA subtag registries。&lt;/li&gt; 
 &lt;li&gt;翻译：添加了由 Viktor György、John Fowler 和 Attila Zsigus 编写的程序和手册页的匈牙利语翻译（参见&lt;code class="language-plaintext"&gt;AUTHORS&lt;/code&gt;）。&lt;/li&gt; 
 &lt;li&gt;mkvextract：tags extraction：添加了一个选项&lt;code class="language-plaintext"&gt;--no-track-tags&lt;/code&gt;（简称：&lt;code class="language-plaintext"&gt;-T&lt;/code&gt;）用于不提取与 tracks 相关的标签。&lt;/li&gt; 
 &lt;li&gt;MKVToolNix GUI：multiplexer：用于从字幕文件名中导出「forced display」轨道标志的默认正则表达式已扩展到也可与术语符号匹配。Implements&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeberg.org%2Fmbunkus%2Fmkvtoolnix%2Fissues%2F6094" target="_blank"&gt;#6094&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;MKVToolNix GUI：preferences：各种「default regex for…」的还原按钮仅在当前文本与默认文本不同时启用，换句话说：还原操作实际上会更改文本。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeberg.org%2Fmbunkus%2Fmkvtoolnix%2Fissues%2F6099" target="_blank"&gt;#6099&lt;/a&gt;的部分实现。&lt;/li&gt; 
 &lt;li&gt;MKVToolNix GUI：preferences：如果「default regex for…」仍设置为先前的默认值之一，GUI 现在将自动将其升级为各自的当前默认值。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeberg.org%2Fmbunkus%2Fmkvtoolnix%2Fissues%2F6099" target="_blank"&gt;#6099&lt;/a&gt;的部分实现。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;此外，作者同时发布了一项&lt;span style="color:#444444"&gt;&lt;strong&gt;致 macOS 用户的重要提示：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;我知道 Apple 已经宣布即将在 macOS 28（可能于 2027 年秋季发布）中停止支持 Rosetta x86/x64 仿真层。我的 MKVToolNix 二进制文件是 x86/x64 二进制文件，而不是 ARM 二进制文件，因此这会对大家造成影响。很遗憾，我没有 ARM 架构的 Mac，也不打算再买一台。因此，Rosetta 支持结束后，我将停止提供 macOS 二进制文件。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;我非常欢迎其他人代替我提供 macOS ARM 二进制文件，并乐意在 MKVToolNix 的主页上提供他们工作的链接。目前为止，还没有人主动这样做。最接近的可能是&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbrew.sh%2F" target="_blank"&gt;Homebrew 项目&lt;/a&gt;，它也提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHomebrew%2Fhomebrew-core%2Fblob%2Fmaster%2FFormula%2Fm%2Fmkvtoolnix.rb" target="_blank"&gt;ARM 版 MKVToolNix&lt;/a&gt;，但有一个重要的注意事项：即他们只构建了 CLI 工具，而不是 GUI。我不知道为什么；请询问他们或提供帮助，让他们的编译也能构建 GUI。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;如果你想自己编译 macOS ARM：好消息，这非常简单。MKVToolNix 包含我用于构建 x64 二进制文件的脚本，这些脚本也适用于 ARM mac。详情请参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.mkvtoolnix.download%2Ft%2Fbuilding-mkvtoolnix-with-gui-on-a-mac%2F1361" target="_blank"&gt;此论坛帖子&lt;/a&gt;。在那里，一位用户和我讨论了需求和他们遇到的小问题，并成功构建了 ARM 二进制文件。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;你可以下载&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmkvtoolnix.download%2Fsource.html" target="_blank"&gt;源代码&lt;/a&gt;或&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmkvtoolnix.download%2Fdownloads.html" target="_blank"&gt;其中一个软件包&lt;/a&gt;。Windows 软件包以及 Linux AppImage 现已可用。其他 Linux 软件包和 macOS 磁盘映像仍在构建中，将在接下来的几个小时内发布。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355779/mkvtoolnix-93-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355779/mkvtoolnix-93-0-released</guid>
      <pubDate>Sat, 10 May 2025 03:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Spring Vault 4.0.0-M1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Spring Vault 4.0.0-M1 现已发布。Spring Vault 可用于管理应用程序运行时所需要的机密信息，比如数据库账号密码、秘钥、连接其他微服务的 API 所需要的 token。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此版本值得注意的新功能包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;升级到 Spring Framework 7.0 M6、Kotlin 2.2-RC1 和 JSpecify 1.0。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;升级到 Jackson 3 并支持 Jackson 2&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持命令式 Reactor、Jetty 和 JDK HTTP 客户端&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更多详情可参阅&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-vault%2Fwiki%2FSpring-Vault-4.0-Release-Notes" target="_blank"&gt;发行说明&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Forg%2Fspringframework%2Fvault%2Fspring-vault-core%2F4.0.0-M1%2F" target="_blank"&gt;下载地址&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355769/spring-vault-4-0-0-m1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355769/spring-vault-4-0-0-m1</guid>
      <pubDate>Sat, 10 May 2025 03:08:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Git for Windows v2.50.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Git for Windows v2.50.0 现已发布，&lt;span style="color:#1f2328"&gt;自 Git for Windows v2.49.0（2025 年 3 月 17 日）以来的变更内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong style="color:#333333"&gt;New Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;随附&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit%2Fgit%2Fblob%2Fv2.50.0%2FDocumentation%2FRelNotes%2F2.50.0.adoc" target="_blank"&gt;Git v2.50.0&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;随附&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmintty%2Fmintty%2Freleases%2Ftag%2F3.7.8" target="_blank"&gt;MinTTY v3.7.8&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;随附&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenssh%2Fopenssh-portable%2Freleases%2Ftag%2FV_10_0_P1" target="_blank"&gt;OpenSSH v10.0.P1&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;随附&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fchanges.html%238_14_1" target="_blank"&gt;cURL v8.14.1&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;随附&lt;/span&gt;基于&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finbox.sourceware.org%2Fcygwin-announce%2F302f8026-fbe9-4c21-86cd-5fac1a45085f%40dronecode.org.uk%2F" target="_blank"&gt;Cygwin v3.6.3&lt;/a&gt;&amp;nbsp;的 MSYS2 运行时（&lt;span style="color:#1f2328"&gt;Git for Windows flavor&lt;/span&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Bug Fixes&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 Windows Server 2022 上，Git v2.48.1 引入了一个&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fissues%2F5427" target="_blank"&gt;无法在 ReFS 驱动器上写入文件&lt;/a&gt;的回归问题，该问题已得到&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fpull%2F5515" target="_blank"&gt;修复&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;Git for Windows 2.48.1 在&lt;code&gt;core.longPaths = true&lt;/code&gt;条件下获取长分支时&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fissues%2F5476" target="_blank"&gt;引入了一个回归问题&lt;/a&gt;，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fpull%2F5550" target="_blank"&gt;现已修复&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;Git for Windows 安装程序在测试自定义编辑器时使用了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Fissues%2F5618" target="_blank"&gt;使用不可写文件&lt;/a&gt;，该问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fbuild-extra%2Fpull%2F618" target="_blank"&gt;已得到修复&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgit-for-windows%2Fgit%2Freleases%2Ftag%2Fv2.50.0.windows.1" target="_blank"&gt;https://github.com/git-for-windows/git/releases/tag/v2.50.0.windows.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355764/git-for-windows-2-50-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355764/git-for-windows-2-50-0-released</guid>
      <pubDate>Sat, 10 May 2025 02:51:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>⚡ 模型即服务 - Wow 框架 v5.19.1 发布！🏗️</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;&lt;img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"&gt;&lt;img alt="License" src="https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"&gt;&lt;img alt="Integration Test Status" src="https://oscimg.oschina.net/oscnet/badge.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"&gt;&lt;img alt="Awesome Kotlin Badge" src="https://oscimg.oschina.net/oscnet/awesome-kotlin.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt="👉" height="14" src="https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="👈" height="14" src="https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h1&gt;Wow Framework v5.19.1 发布日志&lt;/h1&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;本次更新聚焦于&lt;strong&gt;功能增强&lt;/strong&gt;、&lt;strong&gt;性能优化&lt;/strong&gt;和&lt;strong&gt;开发者体验提升&lt;/strong&gt;，全面支持 Server-Sent Events（SSE）并优化了 Kotlin 集成能力，同时修复多项关键问题。以下是核心更新内容：&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;🚀 新功能与增强&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;SSE 全面支持&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;新增对&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spring Web ServerSentEvent&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的原生支持，实现实时数据流推送。&lt;/li&gt; 
    &lt;li&gt;扩展&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;wow-openapi&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模块，现支持通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ApiResponseBuilder&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;便捷构建 SSE 响应。&lt;/li&gt; 
    &lt;li&gt;查询接口（&lt;code&gt;wow-query&lt;/code&gt;）支持 SSE 协议，实现列表查询结果的实时更新。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;Kotlin 深度集成&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;ServiceProvider&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;现支持 Kotlin 类型（&lt;code&gt;KType&lt;/code&gt;），简化 Kotlin 服务的注册与依赖注入。&lt;/li&gt; 
    &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;register&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数支持泛型类型参数（&lt;code&gt;reified type&lt;/code&gt;），消除类型强转冗余代码。&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;MessageExchange&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;FunctionAccessor&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;改用 Kotlin 类型系统，提升消息处理灵活性。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;核心工具扩展&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SnapshotMaterializer&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;快照生成器，支持状态快照的自动化构建与测试。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;🐛 问题修复&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;OpenAPI 规范修正&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;修复 API 响应中列表内容（&lt;code&gt;list content&lt;/code&gt;）的 Schema 定义错误，确保文档与实现一致性。&lt;/li&gt; 
    &lt;li&gt;优化&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Server-Sent Events&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在 OpenAPI 文档中的描述，明确事件流格式。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;依赖与日志优化&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;移除命令组件（&lt;code&gt;CommandComponent&lt;/code&gt;）冗余日志输出，提升执行逻辑清晰度。&lt;/li&gt; 
    &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;cocache-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖版本冲突问题（升级至 v3.9.2）。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;🔧 依赖更新与维护&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;关键依赖升级&lt;/strong&gt;： 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;swagger&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ v2.2.33（OpenAPI 文档生成）。&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;springdoc-openapi-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ v2.8.9（SpringDoc 兼容性）。&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;opentelemetry-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ v1.51.0（分布式追踪支持）。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;构建工具更新： 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;gradle&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ v8.14.2（构建性能优化）。&lt;/li&gt; 
    &lt;li&gt;&lt;code&gt;ksp&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;→ v2.1.21-2.0.2（Kotlin 符号处理）。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;⚡ 性能优化与重构&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;代码可读性与一致性&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;重构&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;wow-query&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模块，统一查询接口设计规范。&lt;/li&gt; 
    &lt;li&gt;优化&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebFlux&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;路由响应处理逻辑，减少重复序列化操作。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;测试体验提升&lt;/strong&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;简化测试服务注入：&lt;code&gt;inject&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数支持服务类型参数，避免类型推断错误。&lt;/li&gt; 
    &lt;li&gt;更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ExecutionFailedTest&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试用例，适配&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IRetrySpec&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重试策略。&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;📚 文档与示例更新&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;更新快速入门指南（&lt;code&gt;Getting Started Guide&lt;/code&gt;），同步项目模板至最新版本。&lt;/li&gt; 
  &lt;li&gt;优化 OpenAPI 文档示例：默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tail version&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;示例更贴近实际使用场景。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;💡&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;升级建议&lt;/strong&gt;：&lt;br&gt; 本次更新显著提升实时数据处理能力与 Kotlin 开发体验，建议所有用户升级。重点关注 SSE 功能集成和 Kotlin 类型支持，可大幅简化实时应用开发流程。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;🎯 为现代化微服务而生，让领域驱动设计触手可及！&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html" target="_blank"&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Features" src="https://oscimg.oschina.net/oscnet/Features.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Architecture" src="https://oscimg.oschina.net/oscnet/Architecture.svg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html" target="_blank"&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html" target="_blank"&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="传统架构 VS 事件溯源" src="https://oscimg.oschina.net/oscnet/300ee974_384561.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="ETL 同步流程" src="https://oscimg.oschina.net/oscnet/5fda25c1_384561.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355763/wow-5-19-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355763/wow-5-19-1-released</guid>
      <pubDate>Sat, 10 May 2025 02:48:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>API 接口服务平台 Crabc 3.3 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;Crabc 是一款 API 接口开发平台，企业级接口管理、SQL2API 平台。支持动态数据源、动态 SQL 和标签，&amp;nbsp;支持接入（mysql、oracle、达梦、TiDB、hive、es 和 mongodb）等 SQL 或 NoSQL 数据源，在线可视化编写 SQL 快速发布接口，支持一键上下线、接口管理、代理转发、鉴权、限流、熔断和监控告警等一站式 API 数据服务&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-65152f1ea794671e0b904b37aed6f68f08b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1312" src="https://oscimg.oschina.net/oscnet/up-c6b603e8aee01c1bde8d720c4a17d62bfa7.png" width="2174" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;v3.3 更新内容&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;1、优化前端构建配置&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;2、优化测试结果 loading 效果&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;3、优化页面分页参数校验&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;4、优化解析 SQL 时特殊字符判断&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;5、新增接口 ip 校验和限制&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;6、新增接口结果数据加密&lt;br&gt; &amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;官网地址:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpingapi.cn%2F" target="_blank"&gt;crabc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;开源地址:&amp;nbsp;&lt;a href="https://gitee.com/linebyte/crabc"&gt;crabc-api&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355732/crabc-3-3-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355732/crabc-3-3-0</guid>
      <pubDate>Sat, 10 May 2025 00:11:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>DjangoAdmin 敏捷开发框架 Tornado+Layui 版本 v2.3.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.3.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、新增用户重置密码功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、优化菜单管理模块，提供用户操作体验；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、移除项目中废弃代码，调整代码结构；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;4、修复近期用户使用过程中反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;div&gt; 
            &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;一款 Python 语言基于 Tornado、Layui、MySQL 等框架精心打造的一款模块化、高性能、企业级的敏捷开发框架，本着简化开发、提升开发效率的初衷触发，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架。&lt;/span&gt;&lt;/p&gt; 
            &lt;h2&gt;软件信息&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;软件名称：DjangoAdmin 敏捷开发框架 Tornado+Layui 版本&lt;/li&gt; 
             &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoadmin.cn" target="_blank"&gt;https://www.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.tornado.layui.djangoadmin.cn" target="_blank"&gt;http://docs.tornado.layui.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.tornado.layui.djangoadmin.cn" target="_blank"&gt;http://manage.tornado.layui.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;核心组件&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;单图上传组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"avatar|头像|90x90|建议上传尺寸 450x450|450x450"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|image(&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.avatar, &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"jpg|png|gif"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;多图上传组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"imgs|图集|90x90|20|建议上传尺寸 450x450"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|album(&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.imgsList, &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"jpg|png|gif"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;下拉选择组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"gender|1|性别|name|id"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;select&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1=男,2=女,3=保密"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, data.gender) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;单选按钮组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"gender|name|id"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|radio(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1=男,2=女,3=保密"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;复选框组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"gender|name|id"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|checkbox(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1=男,2=女,3=保密"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;城市选择组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;.district_code&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;""&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)|&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;city&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;开关组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"status"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;switch&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"在用|禁用"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, data.status|&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;日期组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"birthday|1|出生日期|date"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|date(&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.birthday) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;图标组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"icon"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|icon(&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;.icon|&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"layui-icon-component"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;ul&gt; 
             &lt;li&gt;穿梭组件&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;div&gt; 
             &lt;div&gt; 
              &lt;pre&gt;&lt;span&gt;{{ &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"func|0|全部节点,已赋予节点|name|id|220x350"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;|transfer(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1=列表,5=添加,10=修改,15=删除,20=详情,25=状态,30=批量删除,35=添加子级,40=全部展开,45=全部折叠,50=导出数据,55=导入数据,60=分配权限,65=重置密码"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, funcList) }}&lt;/span&gt;
&lt;/pre&gt; 
             &lt;/div&gt; 
            &lt;/div&gt; 
            &lt;h2&gt;模块展示&lt;/h2&gt; 
            &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-00f076d46a9e236a098e86077ed035da740.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355729</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355729</guid>
      <pubDate>Fri, 09 May 2025 22:49:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>mayfly-go v1.10.1 发布，Linux、数据库统一管控平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;mayfly-go v1.10.1 已经发布，Linux、数据库统一管控平台。&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;fix: 数据库 sql 执行操作人变为 system&lt;/p&gt; 
&lt;p&gt;feat: sql 查询支持时间和关键字搜索&lt;/p&gt; 
&lt;p&gt;feat: 机器脚本新增自定义分类&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/dromara/mayfly-go/releases/v1.10.1"&gt;https://gitee.com/dromara/mayfly-go/releases/v1.10.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355695</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355695</guid>
      <pubDate>Fri, 09 May 2025 12:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>SunnyUI V3.8.5 发布啦，C# WinForm 开源控件库！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="SunnyUI" src="https://oscimg.oschina.net/oscnet//e2c8a48c5600383f751a010f95f6a89e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/stargazers"&gt;&lt;img alt="star" src="https://oscimg.oschina.net/oscnet//d84417dcaae9e4ea98507a147095c455.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/members"&gt;&lt;img alt="fork" src="https://oscimg.oschina.net/oscnet//275681216d89365426d6c56c9ca3e33f.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;帮助文档:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/wikis/pages"&gt;https://gitee.com/yhuse/SunnyUI/wikis/pages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新日志:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/wikis/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"&gt;https://gitee.com/yhuse/SunnyUI/wikis/ 更新日志&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI"&gt;https://gitee.com/yhuse/SunnyUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fyhuse%2FSunnyUI" target="_blank"&gt;https://github.com/yhuse/SunnyUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Nuget:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FSunnyUI%2F" target="_blank"&gt;https://www.nuget.org/packages/SunnyUI/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Fyhuse" target="_blank"&gt;https://www.cnblogs.com/yhuse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;因为评论没有查找，不利于解决问题，故关闭项目评论功能。如果是问题或者建议，请按照 Issues 模版添加 Issue。&lt;/li&gt; 
 &lt;li&gt;添加 Issue:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/new"&gt;https://gitee.com/yhuse/SunnyUI/issues/new&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;V3.6.8+Demo 编译可执行文件:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI.Demo"&gt;https://gitee.com/yhuse/SunnyUI.Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;SunnyUI.Net 是基于.Net Framework 4.0~4.8、.Net8、.Net9 框架的 C# WinForm 开源控件库、工具类库、扩展类库、多页面开发框架。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="768" src="https://oscimg.oschina.net/oscnet/up-1c3c587dbd99a478ed62523f94ad0d7ccbf.png" width="1100" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;此版本更新内容为：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;+ 增加 * 修改 - 删除&lt;/p&gt; 
&lt;h4&gt;2025-06-16 V3.8.5&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;* UIDoubleUpDown: 重写控件&lt;br&gt; * UIIntegerUpDown: 重写控件&lt;br&gt; * UIVerificationCode: 修复验证码字符相同&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/ICBL2X"&gt;#ICBL2X&lt;/a&gt;&lt;br&gt; * UILineChartOption: 增加了鼠标漫游时按所有点查找数据点的方式，数据点多时慎用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/ICCKND"&gt;#ICCKND&lt;/a&gt;&lt;br&gt; * UIEdit: 多行时水印文字在左上角显示&lt;br&gt; * UITabControl: 修复 Close 按钮点击无法关闭标签&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/ICEIHR"&gt;#ICEIHR&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355648/sunnyui-3-8-5-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355648/sunnyui-3-8-5-released</guid>
      <pubDate>Fri, 09 May 2025 08:34:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>.NET 10 Preview 5 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;dotnet-10-preview-5&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;.NET 10 的&lt;strong style="color:#242424"&gt;第五个&lt;/strong&gt;预览版现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Fdotnet-10-preview-5%2F" target="_blank"&gt;发布&lt;/a&gt;，该版本在 .NET Runtime、SDK、libraries、C#、ASP.NET Core、Blazor、.NET MAUI 等方面均进行了增强。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;具体更新内容如下：&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;Libraries&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Flibraries.md%23post-quantum-cryptography-pqc" target="_blank"&gt;Post-Quantum Cryptography (PQC)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Flibraries.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;Runtime&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fruntime.md%23escape-analysis-for-delegates" target="_blank"&gt;Escape Analysis for Delegate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fruntime.md%23inlining-improvements" target="_blank"&gt;Inlining 改进&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fruntime.md%23arm64-write-barrier-improvements" target="_blank"&gt;ARM64 Write Barrier 改进&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fruntime.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;C#&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fcsharp.md%23user-defined-compound-assignment-operators" target="_blank"&gt;用户定义复合赋值运算符&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fcsharp.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;F#&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;在此版本中，你将发现&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Ffsharp.md%23f-language" target="_blank"&gt;F# 语言&lt;/a&gt;的更新，包括作用域&lt;code&gt;#nowarn/#warnon&lt;/code&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Ffsharp.md%23fsharpcore-standard-library" target="_blank"&gt;FSharp.Core 标准库&lt;/a&gt;和&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Ffsharp.md%23fsharpcompilerservice" target="_blank"&gt;FSharp.Compiler.Service&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;ASP.NET Core &amp;amp; Blazor&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md%23configure-custom-security-descriptors-for-httpsys-request-queues" target="_blank"&gt;为 HTTP.sys 请求队列配置自定义安全描述符&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md%23validation-resolver-apis-marked-as-experimental" target="_blank"&gt;验证解析器 API 标记为实验性&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md%23support-for-generating-openapi-31" target="_blank"&gt;支持生成 OpenAPI 3.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md%23openapi-metadata-from-xml-doc-comments" target="_blank"&gt;XML 文档注释中的 OpenAPI 元数据&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md%23add-a-not-found-page-using-the-blazor-router" target="_blank"&gt;使用 Blazor Router 添加「Not Found」页面&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md%23blazor-metrics-and-tracing" target="_blank"&gt;Blazor metrics and tracing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Faspnetcore.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;.NET MAUI&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fdotnetmaui.md%23xaml-global-namespaces" target="_blank"&gt;XAML 全局命名空间&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fdotnetmaui.md%23xaml-global-namespaces" target="_blank"&gt;XAML 隐式命名空间&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fdotnetmaui.md%23intercept-web-requests" target="_blank"&gt;拦截网络请求&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fdotnetmaui.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;完整列表参见&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fmaui%2Freleases%2F" target="_blank"&gt;dotnet/maui GitHub releases&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;.NET for Android&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;此版本专注于质量改进和构建性能。详细列表可在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fandroid%2Freleases%2F" target="_blank"&gt;dotnet/android GitHub releases&lt;/a&gt;&amp;nbsp;中找到。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;.NET for iOS, Mac Catalyst, macOS, tvOS&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;此版本专注于质量改进和构建性能。详细列表可在&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fmacios%2Freleases%2F" target="_blank"&gt;dotnet/macios GitHub releases 中找到，其中包括&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fmacios%2Fwiki%2FKnown-issues-in-.NET10" target="_blank"&gt;已知问题&lt;/a&gt;列表。&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;Windows Forms&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#242424"&gt;此版本专注于质量改进和构建性能。详细列表参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fwinforms.md" target="_blank"&gt;发行说明&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;Windows Presentation Foundation (WPF)&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fwpf.md%23xaml-grid-syntax-enhancements" target="_blank"&gt;XAML 网格语法增强&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fwpf.md%23font-and-globalization-updates" target="_blank"&gt;字体和全球化更新&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fwpf.md%23fluent-theme-improvements" target="_blank"&gt;Fluent 主题改进&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fwpf.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span style="color:#242424"&gt;&lt;strong&gt;Entity Framework Core&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fefcore.md%23customdefaultconstraintnames" target="_blank"&gt;自定义默认约束名称&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fblob%2Fmain%2Frelease-notes%2F10.0%2Fpreview%2Fpreview5%2Fefcore.md" target="_blank"&gt;完整发行说明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355633</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355633</guid>
      <pubDate>Fri, 09 May 2025 08:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AppWeb v9.0.4 发布，嵌入式 Web 服务器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;AppWeb 9.0.4 现已发布，这是一个小补丁版本，被划分为 「建议升级，但不是必须的」。Appweb 是一个嵌入式 HTTP Web 服务器，主要的设计思路是安全。这是直接集成到客户的应用和设备，便于开发和部署基于 Web 的应用程序和设备。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;具体更新内容：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Features&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;添加 GPL 开源许可证选项&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fixes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复有关 Windows wide API 的编译器警告&lt;/li&gt; 
 &lt;li&gt;添加缺少的 Windows 解决方案项目&lt;/li&gt; 
 &lt;li&gt;修复从外部线程调用 httpFindStream 时线程死锁问题&lt;/li&gt; 
 &lt;li&gt;更新 osdep&lt;/li&gt; 
 &lt;li&gt;修复旧的 GitHub 链接引用&lt;/li&gt; 
 &lt;li&gt;改进/强化 HTTP header 空白处理&lt;/li&gt; 
 &lt;li&gt;修复 mprShutdown&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fembedthis%2Fappweb%2Freleases%2Ftag%2Fv9.0.4" target="_blank"&gt;https://github.com/embedthis/appweb/releases/tag/v9.0.4&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355631/appweb-9-4-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355631/appweb-9-4-0-released</guid>
      <pubDate>Fri, 09 May 2025 07:54:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Spring AI Alibaba 1.0 GA 正式发布，Java 智能体开发进入新时代</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;随着智能体开始在企业内部业务落地，Java 智能体的构建需求也呈现出爆发式增长的趋势，在智能体编程语言及平台领域，Python、Typescript 一直走在探索前沿，相对来说，Java 领域框架、平台及整体解决方案欠缺，Spring AI Alibaba 1.0 的发布，让 Java 智能体开发迎来一款生产可用的企业级框架与解决方案，助力企业智能体开发进入一个新阶段。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;上半年，以 Manus 为代表的通用智能体的火爆，让具备自主规划能力的通用智能体进入大众视线，另一方面，MCP 则将模型或智能体外部数据、外部系统的交互方式做了统一。结合这些技术趋势，在探索 Spring AI Alibaba 框架、Manus 通用智能体的过程中，我们正逐步构建起一套零代码快速构建垂直领域智能体的方案（JManus），我们相信它能弥补低代码、高代码框架的开发复杂度问题，同时又能解决通用智能体效果难以满足企业级生产要求的弊端。&lt;/p&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;什么是 Spring AI Alibaba&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba 是一款以 Spring AI 为基础，深度集成百炼平台，支持 ChatBot、工作流、多智能体应用开发模式的 AI 框架。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3b1066d7f05991b1f48f6cf7d1f6d926c48.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在 1.0 版本中，Spring AI Alibaba 提供以下核心能力，让开发者可以快速构建自己的 Agent、Workflow 或 Multi-agent 应用。&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;1. Graph 多智能体框架&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;基于 Spring AI Alibaba Graph，开发者可快速构建工作流、多智能体应用，无需关心流程编排、上下文记忆管理等底层实现。通过 Graph 与低代码、自规划智能体结合，为开发者提供从低代码、高代码到零代码构建智能体的更灵活选择。&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;2. 通过 AI 生态集成，解决企业智能体落地过程中关心的痛点问题&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba 支持与百炼平台深度集成，提供模型接入、RAG 知识库解决方案；支持 ARMS、Langfuse 等可观测产品无缝接入；支持企业级的 MCP 集成，包括 Nacos MCP Registry 分布式注册与发现、自动 Router 路由等。&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;3. 探索具备自主规划能力的通用智能体产品与平台&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;社区发布了基于 Spring AI Alibaba 框架实现的 JManus 智能体，除了对标 Manus 的通用智能体能力外，我们的目标是基于 JManus 探索自主规划在智能体开发方向的应用，为开发者提供从低代码、高代码到零代码构建智能体的更灵活选择。&lt;/p&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;快速开始&lt;/h1&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;开发第一个 Spring AI Alibaba 应用&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在 Spring Boot 工程中添加以下依赖，就可以开始您的 AI 智能体开发之旅了。&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependencyManagement&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.cloud.ai&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-ai-alibaba-bom&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;1.0.0.2&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;pom&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;type&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;import&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;scope&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependencyManagement&lt;/span&gt;&amp;gt;&lt;/span&gt;

&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.alibaba.cloud.ai&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-ai-alibaba-starter-dashscope&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;您可以参考我们发布在官网的快速开始了解如何开发 Chatbot、智能体或工作流等应用：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;官网：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava2ai.com" target="_blank"&gt;https://java2ai.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Github 仓库：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-ai-alibaba" target="_blank"&gt;https://github.com/alibaba/spring-ai-alibaba&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;总的来说，根据不同场景，您可以选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChatClient&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spring AI Alibaba Graph&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;两个核心组件来开发 AI 应用。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;体验官方 Playground 示例&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba 官方社区开发了一个&lt;strong&gt;包含完整 "前端 UI + 后端实现" 的智能体 Playground 示例&lt;/strong&gt;，示例使用 Spring AI Alibaba 开发，可以体验聊天机器人、多轮对话、图片生成、多模态、工具调用、MCP 集成、RAG 知识库等所有框架核心能力。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;整体运行后的界面效果如下所示：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-06086e775a87619af1ddea3d86f89143f69.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;您可以本地部署 Playground 示例并通过浏览器访问体验，或者拷贝源码并按照自己的业务需求调整，以这种方式快速搭建一套自己的 AI 应用。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果想通过更多示例来学习 Spring AI Alibaba 框架用法，请参考我们的官方示例仓库：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples" target="_blank"&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples&lt;/a&gt;&lt;/p&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;开启 Spring AI Alibaba 1.0 之旅&lt;/h1&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;Spring 官方支持 &amp;amp; 生产可用的 Java 智能体框架&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;随着 Spring AI 1.0 GA 版本的发布，Java 智能体开发迎来了一款具备完整官方支持、生产可用的编程框架，Java 智能体开发进入新时代。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在底层原子抽象能力上，Spring AI Alibaba 支持 Spring AI 的所有核心能力，并在此基础上提供了大量适配实现与最佳实践。以下是 Spring AI 核心定义列表：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;提示（Prompt）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;模型增强（The Augmented LLM）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;顾问（Advisors）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;检索（Retrieval）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;记忆（ChatMemory）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;工具（Tool）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;评估（Evaluation）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;可观测性（Observability）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;模型上下文协议（MCP）&lt;/p&gt; 
  &lt;ul style="list-style-type:circle; margin-left:0; margin-right:0"&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;MCP 客户端&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;MCP 服务器&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;MCP 和安全&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;Multi-agent 多智能体框架&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Graph 是 Spring AI Alibaba 社区核心实现之一，也是整个框架在设计理念上区别于 Spring AI 只做底层原子抽象的地方，Spring AI Alibaba 期望帮助开发者更容易地构建智能体应用。基于 Spring AI Alibaba Graph 开发者可以构建工作流、多智能体应用。Spring AI Alibaba Graph 在设计理念上借鉴 LangGraph，因此在一定程度上可以理解为是 Java 版的 LangGraph 实现，社区在此基础上增加了大量预置 Node、简化了 State 定义过程等，让开发者更容易编写对等低代码平台的工作流、多智能体等。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba Graph 核心能力：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持 Multi-agent，内置 ReAct Agent、Supervisor 等常规智能体模式&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持工作流，内置工作流节点，与主流低代码平台对齐&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;原生支持 Streaming&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Human-in-the-loop，通过人类确认节点，支持修改状态、恢复执行&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持记忆与持久存储&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持流程快照&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持嵌套分支、并行分支&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;PlantUML、Mermaid 可视化导出&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;关于 Graph 的具体使用方式，请关注官网文档更新。在下文中我们会介绍官方发布的基于 Spring AI Alibaba 实现的通用智能体平台，您可以把这些官方智能体实现当作 Graph 的最佳应用实践。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;企业级 AI 应用生态集成&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在 Agent 生产落地过程中，用户需要解决智能体效果评估、MCP 工具集成、Prompt 管理、Token 上下文、可视化 Tracing 等各种问题，Spring AI Alibaba 通过与 Nacos3、Higress AI 网关、阿里云 ARMS、阿里云向量检索数据库、百炼智能体平台等深度集成，提供全面的智能体企业级生产解决方案，加速智能体从 Demo 走向生产落地。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c2270afdbc5c55cab86b49e5a0050f9083d.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;1. 企业级 MCP 部署与代理方案&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba MCP 通过集成 Nacos MCP Registry，支持 MCP Server 分布式部署与负载均衡调用。对于存量 Spring Cloud、Dubbo 等应用，支持零代码改造实现 API 到 MCP 服务发布，开发者可通过 Spring AI Alibaba MCP 开发自己的 MCP Server 服务代理，即可支持 Nacos 中心 MCP 元数据的自动加载。&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;2. AI 网关集成提升模型调用稳定性与灵活性&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果您使用 Higress 作为后端模型代理，则可以通过 OpenAI 标准接口接入 Higress AI 模型代理服务，只需要使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;spring-ai-starter-model-openai&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;就可以了。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果您有存量的 API 服务，需要在无需修改代码的情况下，可以使用 Higress 作为 API 到 MCP 服务的代理方案。&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;3. 降低企业数据整合成本，提升 AI 数据应用效果&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;a. 百炼 RAG 知识库&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;百炼是一款可视化 AI 智能体应用开发平台，它提供 RAG 知识库管理能力。简单来讲，您可以将私有数据上传到百炼平台，借助百炼平台数据解析、切片、向量化等能力实现数据向量化预处理，处理后的数据可用于后续 Spring AI Alibaba 智能体应用检索，借用百炼平台强大的数据处理效果。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;b. 百炼析言 ChatBI，从自然语言到 SQL 自动生成&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba NL2SQL 模块可基于大模型的 ChatBI 技术，帮助用户轻松实现自然语言交互的数据分析，理解用户的数据库 schema，帮助用户自动生成 SQL 查询语句。无论是简单的条件过滤还是复杂的聚合统计、多表关联，都能准确生成对应的 SQL 语句。&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;4. 可观测与效果评估，加速智能体从 Demo 走向生产落地&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI 在多个关键节点都做了 SDK 默认埋点，用来记录运行过程中的 metrics 与 tracing 信息，这包括模型调用、向量检索、工具调用等关键环节的调用情况。Spring AI tracing 信息兼容 OpenTelemetry，因此理论上可接入市面上主流的开源平台如 Langfuse，或者阿里云 ARMS。&lt;/p&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;从聊天机器人、工作流到多智能体&lt;/h1&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;聊天机器人（ChatBot）&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;AI 应用开发不只是无状态大模型的 API 调用过程，由于大模型预训练的特性，AI 应用还需要具备领域数据检索（RAG）、会话记忆（Memory）、工具调用（Tool）等集成能力，这些对外集成统称为模型增强模式（The Augmented LLM），它允许开发者将自己的数据和外部 API 直接带入模型的推理过程。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ac0b2852b8487c603395701d3e1515c35d2.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;此图出自 Anthropic《Building Effective AI Agents》文章&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;ChatClient 是 Spring AI 中最核心的组件，开发者可以使用 ChatClient 开发自己的聊天机器人或智能体应用，ChatClient 支持模型增强模式，为模型调用挂载 Retrieval、Tools、Memory 等外部数据与服务。&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;Flux&amp;lt;&lt;span&gt;String&lt;/span&gt;&amp;gt; response = chatClient.prompt(query)
        .tools(toolCallbacks)
        .advisors(&lt;span style="color:#d73a49"&gt;new&lt;/span&gt; QuestionAnswerAdvisor())
        .stream()
        .content();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们这里把 ChatClient 开发的 AI 应用称为单智能体应用，这可能是我们最理想的智能体开发模式，它足够简单直接，即把所有的工具、上下文信息等给到模型，由模型持续决策、迭代直到最终完成任务解答。然而，事情远没有那么简单，模型的能力还远未达到我们想要的效果，当我们给模型的上下文、工具过多时，整体效果就会变差，有时事情的走向会严重偏离我们的预期。因此，我们考虑把复杂的问题拆解开来，当前有两种常用模式：&lt;strong&gt;工作流和多智能体&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;工作流（Workflow）&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;工作流&lt;/strong&gt;是以相对固化的模式来人为地拆解任务，将一个大任务拆解为包含多个分支的固化流程。工作流的优势是确定性强，模型作为流程中的一个节点起到的更多是一个分类决策的职责，因此它更适合意图识别等类别属性强的应用场景。工作流也有明显的劣势，它要求开发人员对业务流程有深刻的理解，整个流程是由人绘制的，模型在其中更多的只是内容生成、总结、分类识别的作用，并不能最大化利用模型的推理能力，因此很多人诟病这种模式是不够智能的。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;应用 Spring AI Alibaba Graph 可以轻松开发工作流，声明不同的节点，并将节点串联成一个流程图。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fbebebf72eba173b5b49bb054d52e8dfcd2.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;值得注意的是，Spring AI Alibaba Graph 中提供大量预置节点，这些节点可以对标到市面上主流的如 Dify、百炼等低代码平台，典型节点包括 LlmNode（大模型节点）、QuestionClassifierNode（问题分类节点）、ToolNode（工具节点）等，为用户免去重复开发、定义的负担，只需要专注流程串联。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;以上是一个可视化绘制的 "用户评价分类系统" 工作流，对应 Spring AI Alibaba Graph 代码如下所示：&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;StateGraph stateGraph = &lt;span style="color:#d73a49"&gt;new&lt;/span&gt; StateGraph(&lt;span style="color:#032f62"&gt;"Consumer Service Workflow Demo"&lt;/span&gt;, stateFactory)
      .addNode(&lt;span style="color:#032f62"&gt;"feedback_classifier"&lt;/span&gt;, node_async(feedbackClassifier))
      .addNode(&lt;span style="color:#032f62"&gt;"specific_question_classifier"&lt;/span&gt;, node_async(specificQuestionClassifier))
      .addNode(&lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;, node_async(&lt;span style="color:#d73a49"&gt;new&lt;/span&gt; RecordingNode()))

      .addEdge(START, &lt;span style="color:#032f62"&gt;"feedback_classifier"&lt;/span&gt;)
      .addConditionalEdges(&lt;span style="color:#032f62"&gt;"feedback_classifier"&lt;/span&gt;,edge_async(&lt;span style="color:#d73a49"&gt;new&lt;/span&gt; CustomerServiceController.FeedbackQuestionDispatcher()),&lt;span&gt;Map&lt;/span&gt;.of(&lt;span style="color:#032f62"&gt;"positive"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"negative"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"specific_question_classifier"&lt;/span&gt;))
      .addConditionalEdges(&lt;span style="color:#032f62"&gt;"specific_question_classifier"&lt;/span&gt;,edge_async(&lt;span style="color:#d73a49"&gt;new&lt;/span&gt; CustomerServiceController.SpecificQuestionDispatcher()),&lt;span&gt;Map&lt;/span&gt;.of(&lt;span style="color:#032f62"&gt;"after-sale"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"transportation"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"quality"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;, &lt;span style="color:#032f62"&gt;"others"&lt;/span&gt;,&lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;))
      .addEdge(&lt;span style="color:#032f62"&gt;"recorder"&lt;/span&gt;, END);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;多智能体（Multi-agent）&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;复杂任务拆解的另一种解决方案是&lt;strong&gt;多智能体&lt;/strong&gt;，相比于工作流，多智能体虽也遵循特定的流程，但是在整个决策、执行流程上具备更多的自主性和灵活性。多个子智能体间通过通信协作完成，最终完成任务解答，在业界，有多种常见的多智能体通信模型，如下图是几个典型示例：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f778166c80d30602bc14d323b9a058701e1.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;图片出自 Langchain 官方博客&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba Graph 可用来开发各种多智能体模式。官方社区目前发布了几款基于 Spring AI Alibaba Graph 开发的智能体产品，包括通用智能体 JManus、DeepResearch 智能体、AgentScope 等。&lt;/p&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;打造下一代通用智能体平台&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba 定位为以&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ChatClient&lt;/code&gt;、&lt;code&gt;Graph&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;抽象为核心的智能体框架，集成框架周边生态，用来帮助用户开发快速构建企业级 AI 智能体。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;随着通用智能体模式的快速发展，社区也在基于 Spring AI Alibaba 探索具备自主规划能力的智能体产品与平台，目前已经发布了 JManus、DeepResearch 两款产品，通过 JManus 等智能体产品，一方面探索智能体在解决日常生活、工作效率等开放性问题方面的无限空间；另一方面，社区也在智能体开发平台、深度搜索等垂直领域持续探索，期望在低代码平台、高代码框架之外，为开发者带来面向自然语言的零代码智能体研发体验。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;JManus 智能体平台&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在我们最开始发布 JManus 时，给它的定位是一款完全以 Java 语言为核心、彻底开源的 Manus 复刻实现，基于 Spring AI Alibaba 实现的通用 AI Agent 产品，包含一个设计良好的前端 UI 交互界面。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;随着我们对于通用智能体等方向的深度探索，我们对于 JManus 通用智能体的最终产品定位也进行了调整。Manus 的横空出世，让通用智能体自动规划、执行规划的能力给了人们无限想象空间，它非常擅长解决开放性问题，在日常生活、工作等场景都能有广泛的应用。但在实践中人们也开始认识到，基于当前以及未来相当长时间内的模型能力，完全依赖通用智能体的自动规划模式很难解决一些确定性极强的企业场景问题。企业级业务场景的典型特点是确定性，我们需要定制化的工具、子 agent，需要稳定而又确定性强的规划与流程，为此，我们期望 JManus 能成为一个智能体开发平台，让用户能以最直观、低成本的方式构建自己垂直领域的智能体实现。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d905d6a37806911604c168bd4a0b4ce7b10.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;当前，JManus 具备以下核心能力：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;完整实现了 Manus 多智能体产品&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;JManus 完整实现了 Manus 产品能力，用户可以基于 UI 界面使用产品功能，JManus 可以基于自动规划模式帮助用户完成问题解答。&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;无缝支持 MCP（Model Context Protocol）工具集成&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;这意味着 Agent 不仅可以调用本地或云端的大语言模型，还能与各类外部服务、API、数据库等进行深度交互，极大拓展了应用场景和能力边界。&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;原生支持 PLAN-ACT 模式&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;能够让 Agent 具备复杂推理、分步执行和动态调整的能力，适用于多轮对话、复杂决策、自动化流程等高阶 AI 应用场景。&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;支持通过 UI 界面配置 Agent&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;开发者和运维人员无需修改底层代码，只需在直观的 Web 管理界面上进行简单操作，就能灵活调整 Agent 的参数、模型和工具，还可以调整任务规划，大大提升了易用性和运维效率。&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;自动生成基于 SAA 的智能体工程&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;用户通过自然语言与 JManus 交互，生成规划并沉淀为特定垂直方向的固化解决方案。如果您不想将运行态限定在平台之上，我们正在探索与低代码平台、框架脚手架的深度整合，支持规划转换为具备对等能力的 Spring AI Alibaba 工程。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;JManus 智能体平台还在持续开发建设中，请关注官方仓库源码及后续发布动态。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;DeepResearch 智能体&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;DeepResearch 是一款基于 Spring AI Alibaba Graph 开发的 Deep Research 智能体，包含完整的前端 Web UI（开发中）和后端实现，DeepResearch 支持一系列精心设计的工具如 Web Search（网络查询）、Crawling（爬虫）、Python 脚本引擎等，可以借助大模型与工具能力，帮助用户完成各类深度调研报告。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;以下是 DeepResearch 多智能体应用架构：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-66c13ffb34c123fbd4b3167894588278425.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;DeepResearch 智能体还在持续开发建设中，请关注官方仓库源码及后续发布动态。&lt;/p&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;近期规划&lt;/h1&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;框架自身的持续迭代优化，如基于 Spring AI 最新设计升级内部实现，优化性能和稳定性，提供更丰富的智能体开发工具与组件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;可观测与评估平台。目前 Spring AI Alibaba 支持通过 OpenTelemetry 接入市面上主流的可观测产品，但我们将加强与阿里云 ARMS、百炼模型评测系统的集成，提供更完善的监控与效果评估能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;本地项目构建与调试工具。提升 Agent、Graph 研发效率，支持本地化可视化调试。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;所见即所得，从拖拽绘图到代码自动生成。社区正推进深度集成百炼 DashScope、Dify 等 AI 应用开发平台，支持可视化绘制 AI 工作流，一键导出 Spring AI Alibaba 代码工程。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;自动智能体开发平台，相较于低代码拖拽、框架直接编码两种模式，社区将探索智能体基于模型规划与 MCP Registry 的自动智能体研发模式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;深度参与 MCP、A2A、AG-UI 等智能体协议共建。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;参考资料&lt;/h1&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;与 Spring AI 联系和区别&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI 是 Spring 官方社区维护的开源框架，最初于 2024 年 5 月发布首个 Milestone 版本，在 2025 年 5 月正式发布首个 1.0 GA 版本。Spring AI 侧重 AI 能力构建的底层原子能力抽象以及与 Spring Boot 生态的无缝集成，如模型通信（ChatModel）、提示词（Prompt）、检索增强生成（RAG）、记忆（ChatMemory）、工具（Tool）、模型上下文协议（MCP）等，帮助 Java 开发者快速构建 AI 应用。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;自 2024 年 9 月正式开源以来，Spring AI Alibaba 一直与 Spring AI 社区有深度沟通合作，期间发布了多个 Milestone 版本并与很多企业客户建立了深度合作关系。在交流过程中，我们看到了低代码开发模式的优势与限制，随着业务复杂度提升客户从聊天机器人、单智能体到对多智能体架构方案的诉求，也看到了智能体开发从简单 Demo 走向生产上线过程中遇到的困难。Spring AI Alibaba 孵化自企业智能体构建过程，目标是为企业提供开箱即用的企业级解决方案，包括多智能体搭建与编排的 Graph 框架、低代码框架集成、企业数据与工具集成、效果评估、通用智能体产品与平台构建等。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:left"&gt;相关链接&lt;/h2&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Spring AI Alibaba 官网：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava2ai.com" target="_blank"&gt;https://java2ai.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Spring AI Alibaba 仓库：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-ai-alibaba" target="_blank"&gt;https://github.com/alibaba/spring-ai-alibaba&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Spring AI Alibaba 官方示例仓库：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples" target="_blank"&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Playground 示例：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples%2Ftree%2Fmain%2Fspring-ai-alibaba-playground" target="_blank"&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-playground&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1 style="margin-left:0; margin-right:0; text-align:left"&gt;致谢&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Spring AI Alibaba 目前已经有接近 100 位贡献者，持续为仓库提交代码、使用反馈等，非常感谢各位开源贡献者的付出，使得 Spring AI Alibaba 1.0 得以正式发布。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;感谢 Spring AI、Langchain 等 AI 社区及开源项目为开源做出的卓越贡献，不断地给 AI Agent 开发带来新思路与产品。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355617/spring-ai-alibaba-1-0-ga</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355617/spring-ai-alibaba-1-0-ga</guid>
      <pubDate>Fri, 09 May 2025 07:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
