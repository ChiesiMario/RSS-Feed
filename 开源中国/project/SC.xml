<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Sat, 08 Feb 2025 16:39:34 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>InfluxDB 3 开源版发布 alpha 公测，采用 MIT/Apache 2 许可证</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;em&gt;本文翻译自：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.influxdata.com%2Fblog%2Finfluxdb3-open-source-public-alpha%2F&quot; target=&quot;_blank&quot;&gt;https://www.influxdata.com/blog/influxdb3-open-source-public-alpha/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们激动地宣布&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.influxdata.com%2Finfluxdb3%2Fcore%2Fget-started%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;InfluxDB 3 Core&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.influxdata.com%2Fdownloads%2F%3Fdl%3Doss3&quot; target=&quot;_blank&quot;&gt;下载&lt;/a&gt;) 的 alpha 版本发布，这是 InfluxDB 3 产品线中的新开源产品，与&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.influxdata.com%2Finfluxdb3%2Fenterprise%2Fget-started%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;InfluxDB 3 Enterprise&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.influxdata.com%2Fproducts%2Finfluxdb-3-enterprise%2F%3Fdl%3Denterprise&quot; target=&quot;_blank&quot;&gt;下载&lt;/a&gt;) 一起推出，后者是基于 Core 的商业版本。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;InfluxDB 3 Core 是一款用于时序数据和事件数据的近期数据引擎。InfluxDB 3 Enterprise 增加了历史查询功能、读取副本、高可用性、可扩展性和细粒度安全性。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;对于开源，我们知道构建一个可以作为单个进程运行的产品非常重要，这样的产品易于设置和立即开始使用。我们还意识到，许多客户希望有一个操作上简单的数据库作为选项，要么替代，要么作为我们可扩展分布式系统的补充。结果是，开源社区中出现了 InfluxDB 3 Core（MIT 或 Apache 2 双许可），以及 InfluxDB 3 Enterprise，这是核心开源产品的商业版本。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;这些产品基于超过四年的开发，并由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.influxdata.com%2Fblog%2Fflight-datafusion-arrow-parquet-fdap-architecture-influxdb%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;FDAP 堆栈&lt;/a&gt;——Apache Flight、DataFusion、Arrow 和 Parquet——提供支持，并在我们重新构建的时间序列数据库架构上交付。它们提供了 InfluxDB 3 的所有关键功能，包括无限基数、原生对象存储支持以及强大的 SQL 查询引擎，同时保持对我们开源社区的承诺。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我将深入探讨这两个产品，重点关注它们如何填补时间序列数据开发者工具集中的关键空白。我还会详细讨论以下相关主题：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;InfluxDB 3.0 开源版将被称为 InfluxDB 3 Core&lt;/strong&gt;，这是一个持久化 Parquet 文件并允许查询最近 72 小时数据的实时数据引擎。[编辑者注：对历史数据的限制已取消。更多信息请见 2025 年 1 月 27 日的更新。] Core 的开发将继续在宽松的 MIT 或 Apache 2 许可证下进行。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;除了发布 InfluxDB 3 Core，&lt;strong&gt;我们还发布了 InfluxDB 3 Enterprise&lt;/strong&gt;，这是开源 Core 产品的商业版本。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Core 和 Enterprise 的关键特性以及它们在时间序列工具集中填补的独特位置，包括无盘架构、快速访问近期数据处理以及支持使用 Python 编写插件和触发器。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;与 InfluxDB 旧版本的兼容性、迁移工具以及从 1.x/2.x 升级时应期待的内容。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;我们对开源的承诺&lt;/strong&gt;，宽松的许可协议，以及 InfluxData 持续关注在开源产品和商业产品之间保持清晰的界限。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;如果您想立即下载并使用该软件，您可以找到&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.influxdata.com%2Finfluxdb3%2Fcore%2Fget-started%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;Core&lt;/a&gt;和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.influxdata.com%2Finfluxdb3%2Fenterprise%2Fget-started%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;Enterprise&lt;/a&gt;的入门指南。您可以在&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Finfluxdata%2Finfluxdb&quot; target=&quot;_blank&quot;&gt;这里&lt;/a&gt;找到 InfluxDB 3 Core 的开源仓库。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;在 alpha 测试期间，您可以通过免费限时的试用来访问 InfluxDB 3 Enterprise。对于企业版，我们在设置过程中只要求您提供电子邮件地址，这样您就可以在不与任何人交谈的情况下开始使用。&lt;/p&gt; 
&lt;h2&gt;InfluxDB 3 Core 关键特性&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;InfluxDB 3 核心为开发者提供了一种新的时间序列数据处理工具——一个高性能的最近数据引擎，专为查询过去 72 小时的数据优化[编辑者注：对历史数据的限制已取消，查看更新]。这种专注的方法使得 Core 能够为实时监控、数据收集和流式分析用例提供卓越的性能。通过针对这种模式进行优化，我们实现了最后值查询的响应时间低于 10 毫秒，以及小时范围查询的响应时间低于 50 毫秒。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;「通过针对最常用的用例进行优化，我们创建了一个在许可宽松的情况下真正开源的系统，同时提供卓越的性能。」&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;InfluxDB 3 核心版旨在以本地磁盘和无需依赖的方式运行，或者「无盘」模式，使用对象存储（例如，S3）来存储所有数据。搭配内置的 Python 虚拟机以编写插件以及最后值和唯一值缓存，InfluxDB 3 核心版是一款有用的数据收集器、监控代理和最近时间序列数据库，它将数据持久化到 Parquet 文件中，以便长期存储和第三方系统的访问。&lt;/p&gt; 
&lt;h3&gt;无盘架构&lt;/h3&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;核心版（以及企业版）的一个关键特性是它们能够在「无盘」模式下运行，使用对象存储作为唯一的持久化层。虽然它们仍然能够仅使用本地磁盘运行，但仅使用对象存储运行的无状态选项使得操作环境更加动态。在这些环境中，第三方系统可以无缝访问对象存储来读取数据。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;写入数据库的数据经过验证并缓冲到内存中的 WAL（Write-Ahead Log）中，每秒刷新一次到对象存储。写入者可以选择在刷新后接收响应，从而保证数据的持久性，或者验证后立即接收响应。刷新后的数据被放入内存中的 Arrow 缓冲区，该缓冲区是可查询的。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;WAL 会定期进行快照，将内存中的 Arrow 缓冲区持久化到对象存储上的 Parquet 文件。这个过程会删除已持久化到 Parquet 的 WAL 文件，并写入包含已持久化数据摘要的快照文件。这有助于保持 WAL 的大小在可控范围内。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;第三方查询引擎、数据湖和数据仓库可以直接查询 Core 存储在对象存储中的 Parquet 文件，使用户有更多方式访问其历史时间序列数据。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;每个将数据写入对象存储的主机都会持久化所有以用户在启动时分配的唯一标识符开头的文件路径。由于所有数据都保存在对象存储中，我们获得了随之而来的所有好处：多可用区耐久性保证、备份实用工具，以及整个第三方对象存储工具生态系统。如果某个写入主机因某种原因关闭，可以使用旧主机的标识符启动一个新的主机，并从上次停止的地方继续。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;第三方查询引擎、数据湖和数据仓库可以直接查询 Core 存储在对象存储中的 Parquet 文件，使用户有更多方式访问他们的历史时间序列数据。我们选择 Parquet 作为持久化格式，正是因为它在数据生态系统中得到了广泛的应用。随着 Iceberg 目录格式的流行，这一点变得更加重要。InfluxDB 3 是实时数据在对象存储和 Iceberg 目录中落地的优秀代理。&lt;/p&gt; 
&lt;h3&gt;快速访问近期数据&lt;/h3&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;InfluxDB 3 设计了针对快速访问近期数据的特性。这包括内存缓冲区、Parquet 缓存、最后值缓存和唯一值缓存。我们的性能目标是查询最后值和唯一值在 10 毫秒以内完成，查询最后 1 小时的数据在 50 毫秒以内完成，以及查询过去 72 小时内的数据在几百毫秒内完成[注意：对历史数据的限制已取消]。通过使用对象存储进行持久化来实现这一点，我们拥有多种内存缓存。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;内存缓冲区作为 WAL 中尚未转换为 Parquet 并持久化的数据的快速查询路径。它在构建器中保持为 Arrow 格式，并在数据到达时附加。当从 WAL 快照数据、将其缓冲到 Parquet 并持久化到对象存储时，我们在清除缓冲区之前将其写入内存中的 Parquet 缓存。这意味着对于最近的数据，我们不应需要触摸对象存储来回答查询。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;最后值缓存是一个新特性，允许用户配置数据库以缓存单个系列、特定列值或层次结构中看到的最后 N 个值。这可以在每个表的基础上或在整个数据库层面上进行。例如，如果您有传感器数据，并且有&lt;strong&gt;site_name&lt;/strong&gt;、&lt;strong&gt;machine_id&lt;/strong&gt;和&lt;strong&gt;sensor_id&lt;/strong&gt;这些列，您可以为这个层次结构（站点 -&amp;gt; 机器 -&amp;gt; 传感器）配置最后值缓存，然后快速获取特定传感器的最后两个值、机器内的所有传感器或整个站点内的所有传感器的最后值。缓存作为内存中的循环缓冲数据库，在 WAL 刷新时（默认每秒一次）填充数据。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;独特的值缓存是另一个新特性，它允许用户配置数据库以缓存列或列层次结构中看到的唯一值，类似于最后值缓存的工作方式。它像最后值缓存一样，在 WAL 刷新（每秒一次）时填充。虽然通过 SQL 引擎针对原始数据可以访问相同的信息，但独特的值缓存旨在在 10 到 30 毫秒内返回值，使其非常适合构建快速的 UI 体验。&lt;/p&gt; 
&lt;h3&gt;支持使用 Python 编写插件和触发器&lt;/h3&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;作为这次 alpha 版本发布的一部分，我们正在测试一个新的插件系统的体验，该系统允许用户定义 Python 脚本，可以直接在数据库中实时收集、处理、转换和监控数据。它附带全新的 API 和开发流程。它仍然处于非常早期阶段，因此我们将迭代功能和完善开发者体验——在此期间可能会有破坏性的 API 更改。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们对插件系统将带来的各种可能性感到兴奋，尤其是当它与快速的数据查询引擎和最后值缓存结合使用时。我们选择 Python，是因为其广泛的采用以及大多数大型语言模型编写简短 Python 脚本的能力。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;插件系统是 InfluxDB 早期版本中功能（如连续查询、任务、Kapacitor 和 Telegraf）的合理继承者。虽然 Kapacitor 和 Telegraf 继续与 InfluxDB 3 协同工作，但插件系统将这一功能直接引入了数据库。该系统使得以下功能成为可能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;自定义数据收集和转换&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;实时监控和警报&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;与第三方服务的集成&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;定时任务执行&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;下采样和聚合&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;创建 HTTP 端点以实现自定义 API&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;用户可以定义由数据库中各种数据生命周期事件触发的插件。插件 API 包括查询数据库、将数据写回数据库以及连接通过 Python 的库和工具生态系统启用的任何第三方服务的能力。插件触发的点包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;在 WAL 刷新时&lt;/strong&gt;，每秒将一批写数据发送到插件一次（可配置）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;在快照（Parquet 文件的持久化）时&lt;/strong&gt;，将元数据发送到插件以对 Parquet 数据进行进一步处理或将信息发送到其他地方（例如，添加到 Iceberg 目录）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;按计划&lt;/strong&gt;，根据用户配置的计划执行插件，对于数据收集和死亡监控非常有用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;在请求时&lt;/strong&gt;，将插件绑定到&lt;code&gt;/api/v3/plugins/&amp;lt;name&amp;gt;&lt;/code&gt;的 HTTP 端点，请求头和内容会发送到插件，然后插件可以解析、处理并将数据发送到数据库或第三方服务。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们对插件系统所能实现的多种可能性感到兴奋，尤其是当它与快速的数据查询引擎和最后值缓存相结合时。我们选择 Python，因为它被广泛采用，并且大多数大型语言模型（LLMs）都能够编写简短的 Python 脚本。我们认为，凭借今天可用的工具，即使是非程序员也能够在数据库中创建插件来解决他们特定的领域问题。&lt;/p&gt; 
&lt;h2&gt;InfluxDB 3 企业版&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;今天我们宣布的第二个产品是 InfluxDB 3 企业版，它在 Core 的基础上增加了以下功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;高可用性配置&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;用于查询和插件处理的可扩展性读副本&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;增强的安全功能&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;历史数据压缩和索引，以实现超过一小时的查询速度提升&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持行级删除（即将推出）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;集成管理 UI（即将推出）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;企业版旨在简化操作，无论是在裸金属、虚拟机、容器还是 Kubernetes 上部署。其架构能够隔离不同的工作负载，同时只在对象存储上共享文件，使其非常适合定制部署架构。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们将提供从先前版本的 InfluxDB 迁移数据到新版本的工具。&lt;/p&gt; 
&lt;h2&gt;与 InfluxDB 旧版本的兼容性&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;虽然我们无法将 InfluxDB 先前版本的所有功能都迁移到新版本中，但我们努力将一些旧 API 引入新版本。我们保持了以下现有 InfluxDB 功能的兼容性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持 1.x 和 2.x 版本的 InfluxDB 写入 API&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;InfluxDB 行协议支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;InfluxQL 查询支持（以及 v1 查询 API）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;然而，与 v1 和 v2 相比，InfluxDB 3 在数据摄取方面存在一些限制。对于 Core 版本，服务器上数据库的数量有硬性限制为五个，总表数为 2,000 张。对于 Enterprise 版本，限制为 100 个数据库和 4,000 张表。我们这样做是为了限制资源利用，以及减少在缓冲区快照时需要持久化到对象存储的 Parquet 文件数量。根据这些限制对我们用户的影响，我们可能会在未来努力提高这些限制。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;尽管 InfluxDB 3 仍然支持写入时模式，但它不支持在创建表后添加新的标签列。这是因为标签集和时间在表中代表主键。然而，可以在任何时候添加新字段。在 InfluxDB 3 中创建模式时，应该只将代表行唯一标识信息的放在标签中，而其他所有信息都应该作为字段。通常，最好使用字段来存储数据，而不是标签。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们将致力于为 InfluxDB Enterprise 开发数据迁移工具。由于开源版本仅设计用于过去 72 小时内的数据，我们建议将迁移到开源版本的操作，是通过将旧版本的数据写入到一个新的运行中的开源实例上来实现的，并在 72 小时后切换。[注意：对历史数据的限制已取消。]&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;遗憾的是，我们目前无法为 Flux 用户提前提供一个兼容层。我们希望 Python 插件系统、SQL 和 InfluxQL 的组合，能够为用户提供他们之前在 Flux 中拥有的所有功能。&lt;/p&gt; 
&lt;h2&gt;FDAP 堆栈：InfluxDB 3 的核心组件&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们早在四年前就开始开发 InfluxDB 3，围绕 FDAP 堆栈（Apache Arrow Flight、Apache DataFusion、Apache Arrow 和 Apache Parquet）构建了一个新的基于 Rust 的核心。投资 Apache 软件基金会项目，并围绕它们构建 InfluxDB 3，是我们开源开发策略的一部分。我们相信开源的存在是为了创造广泛使用的商品——免费使用、改进、构建、商业化，并激发衍生项目。具体来说，我们相信一个具有解析器、规划器、优化器和向量执行的现代高性能 SQL 引擎应该免费提供给任何用户或公司，用于任何目的，即使它是 InfluxDB 的竞争对手也不例外。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;「随着我们发布基于这项技术的新版本 InfluxDB，我们现在拥有了强大的顺风，这将继续推动新功能和性能的发展。」&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;我们故意选择了基于开放标准的构建方式，目标是实现与第三方项目和产品更广泛的兼容性。这导致了查询语言使用 SQL，RPC 使用 Flight 和 Arrow，文件格式使用 Parquet。随着 Iceberg 目录格式的兴起，Parquet 的选择变得更加重要。我们认识到了这一点，甚至&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Ficeberg%2Fissues%2F8657&quot; target=&quot;_blank&quot;&gt;向 Iceberg 规范和实现贡献了纳秒级时间戳&lt;/a&gt;，以支持 InfluxDB 所需的高精度。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;在过去的 4.5 年里，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.influxdata.com%2Fblog%2Fdatafusion-2025-influxdb%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;我们帮助构建了 DataFusion&lt;/a&gt;，使其成为今天的高性能列式查询引擎。在这个过程中，我们开发了、开源了，并将对象存储抽象层捐赠给了 Apache 软件基金会（ASF），这使得 DataFusion 能够对任何主流云服务提供商的对象存储中的文件执行操作。我们的努力成果以及许多围绕 DataFusion 的贡献者，由 InfluxData 的工程师和项目管理委员会（PMC）主席 Andrew Lamb 领导，可以在去年的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.acm.org%2Fdoi%2F10.1145%2F3626246.3653368&quot; target=&quot;_blank&quot;&gt;SIGMOD 论文&lt;/a&gt;中看到，并且&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatafusion.apache.org%2Fblog%2F2024%2F11%2F18%2Fdatafusion-fastest-single-node-parquet-clickbench%2F&quot; target=&quot;_blank&quot;&gt;DataFusion 最近在针对 Parquet 文件的单一节点查询引擎排名中位居榜首&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;这种创新的步伐因 DataFusion 位于 Apache 软件基金会（ASF）而不断加速。这使得所有规模的公司都能安全地贡献和改进 DataFusion。世界上最大的公司和各种类型的初创企业不仅在使用 DataFusion，还在提升引擎的性能、功能和可靠性。这些进步直接流入 InfluxDB 3，持续提升其性能，并为我们实现了在踏上这段旅程时所期望的最好结果。与封闭的专有软件相比，这是一种无与伦比的战略——我们通过这种方式加速了成熟度，节省了数年的时间。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;从一开始，我们的目标就是让核心引擎尽可能多地被用户和企业采用，甚至超出 InfluxDB 本身。这种广泛的采用促进了更多贡献者加入，他们推动创新的边界，同时创造更健壮的软件。它在许多不同的环境中经过了实战考验，适用于各种用例，并处理了各种类型的数据。随着我们发布基于这项技术的新版本 InfluxDB，我们现在拥有强大的顺风，这将继续推动新功能和性能的发展。&lt;/p&gt; 
&lt;h2&gt;我们的开源理念&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;随着今天的公告，我们继续承诺支持开源，并保持我们开源项目和商业产品之间的明确区分。我们不是通过许可证限制使用，而是选择通过架构决策来区分，这些决策既有利于我们的开源用户，也有利于商业客户。我们相信这种方法能够促进更加活跃的社区，同时确保我们能够长期持续投资于开源开发。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;将 Core 专注于最近数据的决定反映了在技术和商业考量上的精心平衡。Core 对最近数据的优化不仅仅是一个商业边界——它是一个架构选择，使得最常见的时间序列工作负载能够获得更好的性能、可靠性和简单性。通过针对最常见的使用案例进行优化，我们创建了一个在保持真正开源的同时，在宽松许可下提供卓越性能的系统。这种专注的方法使我们能够通过避免开源提供中压缩的复杂性来确保可靠的运行。此外，它通过使用户能够轻松地将 Core 与他们选择的第三方工具结合用于历史分析，从而鼓励生态系统整合。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;最终，我们将根据社区和客户的反馈进行迭代。我们希望确保 InfluxDB 的某个版本仍然能够满足家庭和副项目的使用需求。根据我们收到的反馈，我们可能会为 Enterprise 版本开放一个非商业用途的免费使用层。&lt;/p&gt; 
&lt;h2&gt;开发日程表&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;alpha 阶段将专注于广泛的测试和性能验证，整合社区反馈，精炼 API，并提升操作体验。在此期间，我们可能会对文件格式或 API 进行破坏性更改。我们的目标是于三月初过渡到 beta 版本，这标志着任何潜在的破坏性更改的结束。一般发布计划于四月，前提是从 alpha 和 beta 阶段吸取经验教训。&lt;/p&gt; 
&lt;h2&gt;加入社区并提供反馈&lt;/h2&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;这只是持续旅程的开始，持续的开发和迭代将在公开环境中进行。查看我们的入门指南，以了解&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.influxdata.com%2Finfluxdb3%2Fcore%2Fget-started%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;Core&lt;/a&gt;和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.influxdata.com%2Finfluxdb3%2Fenterprise%2Fget-started%3Futm_source%3Dwebsite%26utm_medium%3Ddirect%26utm_campaign%3D2025-01-13-InfluxDB-3-Launch%26utm_content%3Dblog&quot; target=&quot;_blank&quot;&gt;Enterprise&lt;/a&gt;，并加入以下渠道以提供反馈：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Discord：加入&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscord.gg%2FvZe2w2Ds8B&quot; target=&quot;_blank&quot;&gt;InfluxDB Discord&lt;/a&gt;上的#influxdb3_core，与我们的开发团队直接互动&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.influxdata.com%2F&quot; target=&quot;_blank&quot;&gt;社区网站&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Reddit：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Finfluxdb%2F&quot; target=&quot;_blank&quot;&gt;r/InfluxDB&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finfluxdata.com%2Fslack&quot; target=&quot;_blank&quot;&gt;Slack&lt;/a&gt;：#influxdb3_core 频道&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;InfluxDB 3 核心和企业的 alpha 版本代表了我们对时序数据未来的展望，以及我们对开源社区的承诺。我们期待您的反馈和参与，共同塑造 InfluxDB 的未来。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332708/influxdb3-open-source-public-alpha</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332708/influxdb3-open-source-public-alpha</guid>
            <pubDate>Fri, 07 Feb 2025 10:47:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>ModStartBlog v10.1.0 博客批量导入支持，文章富文本优化交互</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;ModStart 是一个基于 Laravel 模块化极速开发框架。模块市场拥有丰富的功能应用，支持后台一键快速安装，让开发者能快的实现业务功能开发。&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;系统完全开源，基于 Apache 2.0 开源协议。&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;&lt;img alt=&quot;系统演示&quot; src=&quot;https://oscimg.oschina.net/oscnet//a059bafe747beca220ecb80f1d7b1ed2.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;功能特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;丰富的模块市场，后台一键快速安装&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;会员模块通用且完整，支持完整的 API 调用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;大文件分片上传，进度条显示，已上传文件管理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;强大的模块扩展功能，所有模块可以无缝集成，支持在线安装、卸载模块&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;完善的开发助手，实现模块、主题的的一键创建&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;完善的后台权限管理，支持基于 RBAC 的权限管理系统&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;后台管理支持使用手机、平板、PC，无论何时何地都可方便管理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;第三方登录（QQ、微信、微博、支付宝、微信小程序）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;第三方支付支持（微信、支付宝、支付宝当面付、微信扫码、微信小程序）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;第三方云存储支持，支持云储存分片上传（阿里云、百度云、华为云、腾讯云、FTP、七牛云、UCloud、又拍云）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;第三方短信支持（阿里云、腾讯云、华为云、百度云、253 云通讯、聚合、七牛云、融云、赛邮、UCloud、云片、网易云）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V10.1.0 版本更新&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;2025 年 02 月 08 日 ModStartBlog Laravel9 发布 v10.1.0 版本，增加了以下 9 个特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[新功能] 通用倒计时验证库增加 init 和 destroy 方法&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[新功能] 博客批量导入支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[系统优化] 富文本图标样式调整优化&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[系统优化] 富文本默认使用连续格式模式，支持快速格式化&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[系统优化] 富文本 gif 图片上传失效问题，首行缩进不准确问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[Bug 修复] 页面多文件上传按钮自定义上传配置相互覆盖问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[Bug 修复] 文件分片上传存储修复，避免缓存开启情况下文件一直重复上传问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[Bug 修复] Checkbox 组件选项配置 Bug&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;[Bug 修复] 模型属性判断一处 Bug&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;功能特性&lt;/h2&gt; 
&lt;h3&gt;富文本图标样式调整优化&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//e4c5b09007f26cc1da8437f3deab8ca2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;博客批量导入支持&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//37acdbf061f7472e4136d2387a91904d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//f5daebd48e44dcb2f5a39b5ff9f24e90.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;模块市场一键安装&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;系统内置模块市场，有行业应用、插件、云存储、云短信等功能模块，后台支持一键安装、启用、禁用、卸载，可快速搭建属于自己的系统应用。&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.5em; margin-right:.5em; text-align:left&quot;&gt;&lt;img alt=&quot;功能模块&quot; src=&quot;https://oscimg.oschina.net/oscnet//84fc95e7dc623f560f2d8a3f9b56e466.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;系统演示与文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;码云仓库：&lt;a href=&quot;https://gitee.com/modstart/ModStartBlog&quot;&gt;https://gitee.com/modstart/ModStartBlog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;Github 仓库：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmodstart%2FModStartBlog&quot; target=&quot;_blank&quot;&gt;https://github.com/modstart/ModStartBlog&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;系统演示：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.demo.tecmz.com%2F&quot; target=&quot;_blank&quot;&gt;https://blog.demo.tecmz.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;框架功能演示：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.modstart.com%2F&quot; target=&quot;_blank&quot;&gt;https://demo.modstart.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;下载使用：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdownload&quot; target=&quot;_blank&quot;&gt;https://modstart.com/download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;开发者文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fdoc&quot; target=&quot;_blank&quot;&gt;https://modstart.com/doc&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5em; margin-right:.5em&quot;&gt;模块市场：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodstart.com%2Fstore&quot; target=&quot;_blank&quot;&gt;https://modstart.com/store&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332699/modstartblog-10-1-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332699/modstartblog-10-1-0-released</guid>
            <pubDate>Fri, 07 Feb 2025 08:56:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Semi Design v2.74.0 发布，抖音企业级 UI 库</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semi Design 是现代、全面、灵活的设计系统和 UI 库，由字节跳动抖音前端与 UED 团队设计、开发并维护，是一款包含设计语言、React 组件、主题等开箱即用的中后台解决方案，可用于快速搭建美观的 React 应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semi Design v2.74.0 现已发布，此版本带来如下更新内容：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;【Fix】 
  &lt;ul&gt; 
   &lt;li&gt;修复 List 组件 dataSource 为空时被 Spin 组件遮挡问题&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2693&quot; target=&quot;_blank&quot;&gt;#2693&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 TreeSelect 在开启搜索并且 treeData 为      时，关闭面板时候的 TypeError&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2694&quot; target=&quot;_blank&quot;&gt;#2694&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复类型为 basic 的 Steps icon 和 title 未与 line 居中对齐问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fissues%2F2688&quot; target=&quot;_blank&quot;&gt;#2688&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2689&quot; target=&quot;_blank&quot;&gt;#2689&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复单选，可搜索的 Select 在面板打开状态下失去焦点后，无法再次通过点击 trigger 聚焦问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2668&quot; target=&quot;_blank&quot;&gt;#2668&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;修复 AudioPlayer 倍速弹出层样式白边问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2685&quot; target=&quot;_blank&quot;&gt;#2685&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;AudioPlay 组件内部 ref 使用修改，兼容其他框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Fpull%2F2673&quot; target=&quot;_blank&quot;&gt;#2673&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDouyinFE%2Fsemi-design%2Freleases%2Ftag%2Fv2.74.0&quot; target=&quot;_blank&quot;&gt;https://github.com/DouyinFE/semi-design/releases/tag/v2.74.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332669/semi-design-2-74-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332669/semi-design-2-74-0-released</guid>
            <pubDate>Fri, 07 Feb 2025 06:46:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>不敢相信💥！Univer GO+DeepSeek，在电子表格内瞬间实现数据自动采集填充</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;h2&gt;模版背景：&lt;/h2&gt; 
 &lt;div&gt;
  相信大家在日常工作的数据处理过程中，都深受手动录入和采集数据的困扰。每次操作时，心里总是提心吊胆，生怕稍有不慎，数据就会出现错误。而且还要把所需信息完整收集起来，难度极大。好不容易解决了数据收集的问题，紧接着又要面临繁重的分析与整合工作。最令人无奈的是，一旦数据出现哪怕一丁点偏差，整个数据分析结果都会截然不同，进而对重要的业务决策产生影响。
 &lt;/div&gt; 
 &lt;div&gt;
  为了解决大家在数据处理方面的这些困扰，同时让大家能够毫无负担地继续使用日常熟悉的表格，我们基于 Univer Go 开发了一款智能模板 ——AI Data Enrichment。有了它数据处理效率大幅提升，大家再也不用被繁琐的数据处理工作折磨，可以将时间和精力投入到更有价值的事情上，工作和生活都能更加惬意！
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;strong&gt;赶紧点击体验链接试试&lt;/strong&gt;：
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;https://go.univer.ai/?&lt;/a&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//33f2924ea67308a549cc6170a203125b.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h2&gt;表格界面展示&lt;/h2&gt; 
 &lt;h4&gt;原 Univer 表格：&lt;/h4&gt; 
 &lt;div&gt;
  一款高度可定制化的电子表格，能够根据用户需求构建一个性能与功能对标 excel 的电子表格，支持开发者创建和运行自动化脚本、进行数据库连接与数据读写管理以及开发自定义应用。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//bc3786e12a7424e62a850291fdae7da3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h4&gt;一键运行模版后的表格：&lt;/h4&gt; 
 &lt;div&gt;
  在已有基础上深度整合 Phidata API，为用户提供三大核心功能：智能 AI 问答、精准语义搜索、网页数据提取。只需简单设置表头即可自动完成数据采集与填充，让数据处理效率提升到一个全新的水平
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//df893fa5caf31cf52448125c94a5539c.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h2&gt;来 Univer GO &lt;strong&gt;告别手动填充数据！&lt;/strong&gt;&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    请先下载 
    &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt; ， 在模版中找到 
    &lt;strong&gt;AI Data Enrichment&lt;/strong&gt;，点击使用
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&amp;nbsp;下载链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;https://go.univer.ai/?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;教程视频：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1wPf6YzEeL%2F%3Fshare_source%3Dcopy_web%26vd_source%3D54ca691c116c1bc44a5f42a0b1a8f572&quot; target=&quot;_blank&quot;&gt;Univer Go 智能数据补全和实时信息提取&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//33f1058307217bfcab15b27f4d98773e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  2.&amp;nbsp; 进入 Workspace ，等待依赖安装完成
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;右侧代码编辑器支持 AI 辅写功能，具体请查看这篇文章：&lt;a href=&quot;https://my.oschina.net/u/6977969/blog/17182756&quot;&gt;Univer Go 推出 AI 辅助编写 Univer API 功能&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//292b752d99934e114035aa51cdf559fc.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    调整代码后预览表格，最后运行代码
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//f8f26d79157ff2f0b9fd90cc0ced79d2.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    预览表格内的表头结构讲解：列标题工具按钮及列标题下方的两行内容
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    列标题，点击工具按钮，下拉框中有多种工具可以选择
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  - GPT：直接向 LLM 提问
 &lt;/div&gt; 
 &lt;div&gt;
  - 网页搜索：在网页上搜索信息。
 &lt;/div&gt; 
 &lt;div&gt;
  - 阅读：阅读文档并提取信息
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//52c76977fedb2f244982cb118d4a7820.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    列标题下方的两行内容，作为提示词的一部分，其中可以编辑「描述」部分的提示词，以便 AI 模型更好地理解您的需求。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//4cd76ef58d0041dda1f6a338371abd0d.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    接下来，我们将演示模板的使用方法。首先，框选目标区域后，会出现一个「执行」按钮。点击后，系统将根据当前列所选工具，并结合当前行和列的提示词，自动补全前一列的数据。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//1881a844acc76eb89220ca257e029bc2.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    我们可以添加一些附加提示词，调整提问效果
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//d12ac9c5a2e182ac81846651d023ae8e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    使用 Web Search 工具可以获取互联网的实时信息。当点击 Web Search 生成的结果单元格时，侧边栏会弹出更多相关链接供你查看。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//3dddd1e76a234769b92bff0e4d3f777f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    使用 Read 工具，可以对任何的公开网址进行信息提取和总结
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b69e6bafdf19bac2e51ccb1dfdf8ceeb.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    通过以上简单步骤，帮助您轻松实现在表格内自动数据采集与填充！即刻登录 
    &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgo.univer.ai%2F%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer GO&lt;/a&gt; ，探索丰富多样的定制化功能，开启高效办公新体验！
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332663</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332663</guid>
            <pubDate>Fri, 07 Feb 2025 06:30:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>SQLite 3.49.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;SQLite 是一个 C 语言库，实现了一个小型、快速、独立、高可靠性、全功能的 SQL 数据库引擎。SQLite 是世界上使用最多的数据库引擎。SQLite 的源代码属于公共领域，每个人都可以免费使用，用于任何目的。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;SQLite 3.49.0 现已发布，更新内容如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Foptoverview.html&quot; target=&quot;_blank&quot;&gt;查询计划器&lt;/a&gt;的增强功能： 
  &lt;ol style=&quot;list-style-type:lower-alpha&quot;&gt; 
   &lt;li&gt;改进&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Foptoverview.html%23autoindex&quot; target=&quot;_blank&quot;&gt;查询时间索引&lt;/a&gt;优化，使其适用于&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fwithoutrowid.html&quot; target=&quot;_blank&quot;&gt;WITHOUT ROWID&lt;/a&gt;&amp;nbsp;表。&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fqueryplanner-ng.html%23starq&quot; target=&quot;_blank&quot;&gt;改进大型 star-query&lt;/a&gt;&amp;nbsp;连接的查询计划。修复了 SQLite 论坛上报告的三种不同的性能回归问题。&lt;/li&gt; 
   &lt;li&gt;当两个或多个查询具有相同的估计成本时，使用每行字节数较少的查询。&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;增强&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Flang_corefunc.html%23iif&quot; target=&quot;_blank&quot;&gt;iif() SQL 函数&lt;/a&gt;，使其能够接受大于或等于二的任意数量的参数。&lt;/li&gt; 
 &lt;li&gt;增强&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fsessionintro.html&quot; target=&quot;_blank&quot;&gt;会话扩展&lt;/a&gt;，使其能在使用生成列的数据库上运行。&lt;/li&gt; 
 &lt;li&gt;忽略 SQLITE_USE_STDIO_FOR_CONSOLE 编译时选项，该选项未正确实现且从未正常工作。取而代之的是&amp;nbsp;SQLITE_USE_W32_FOR_CONSOLE_IO 编译时选项。此选项仅适用于 CLI 等命令行工具&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fcli.html&quot; target=&quot;_blank&quot;&gt;，&lt;/a&gt;而不适用于 SQLite core。它导致 Win32 API 用于控制枱 I/O 而不是 stdio。此选项仅影响 Windows 版本。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fdb_config.html&quot; target=&quot;_blank&quot;&gt;sqlite3_db_config()&lt;/a&gt;&amp;nbsp;有三个新选项。全部默认为「开启」。 
  &lt;ol style=&quot;list-style-type:lower-alpha&quot;&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigenableattachcreate&quot; target=&quot;_blank&quot;&gt;SQLITE_DBCONFIG_ENABLE_ATTACH_CREATE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigenableattachwrite&quot; target=&quot;_blank&quot;&gt;SQLITE_DBCONFIG_ENABLE_ATTACH_WRITE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fc3ref%2Fc_dbconfig_defensive.html%23sqlitedbconfigenablecomments&quot; target=&quot;_blank&quot;&gt;SQLITE_DBCONFIG_ENABLE_COMMENTS&lt;/a&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Famalgamation.html%23amalgtarball&quot; target=&quot;_blank&quot;&gt;将预编译的合并 tarball&lt;/a&gt;&amp;nbsp;中使用的配置脚本的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FGNU_Autotools&quot; target=&quot;_blank&quot;&gt;Autotools&lt;/a&gt;&amp;nbsp;替换&amp;nbsp;为&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmsteveb.github.io%2Fautosetup%2F&quot; target=&quot;_blank&quot;&gt;Autosetup&lt;/a&gt;。在之前的版本 (3.48.0) 中，规范源代码的配置脚本已更改为 Autosetup。只有合并 tarball 中的主要 SQLite 配置脚本发生了更改。合并 tarball 的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tcl-lang.org%2Fdoc%2Ftea%2FTEAOverview.html&quot; target=&quot;_blank&quot;&gt;TEA&lt;/a&gt;&amp;nbsp;子目录使用的 (已弃用的) 配置脚本仍然依赖于 Autotools。&lt;/li&gt; 
 &lt;li&gt;针对 3.48.0 版本中出现的问题进行各种小修补和修复。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;更多详情可查看：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsqlite.org%2Fchanges.html&quot; target=&quot;_blank&quot;&gt;https://sqlite.org/changes.html&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332658/sqlite-3-49-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332658/sqlite-3-49-0-released</guid>
            <pubDate>Fri, 07 Feb 2025 06:04:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🎉 降低 DDD 实践成本 | Wow 5.1.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架&quot; src=&quot;https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg&quot; width=&quot;150&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE&quot;&gt;&lt;img alt=&quot;License&quot; src=&quot;https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow&quot;&gt;&lt;img alt=&quot;Integration Test Status&quot; src=&quot;https://oscimg.oschina.net/oscnet/badge.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin&quot;&gt;&lt;img alt=&quot;Awesome Kotlin Badge&quot; src=&quot;https://oscimg.oschina.net/oscnet/awesome-kotlin.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt=&quot;👉&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F&quot; target=&quot;_blank&quot;&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt=&quot;👈&quot; height=&quot;14&quot; src=&quot;https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png&quot; width=&quot;14&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h2&gt;更新内容&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;新功能（查询服务）&lt;/strong&gt;：添加自定义日期模式支持的时间范围查询&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;org.springframework.boot:spring-boot-dependencies&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖更新到 v3.4.2&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 Gradle 依赖更新到 v8.12.1&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 springdoc 依赖更新到 v2.8.4&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 Angular CLI monorepo 更新到 v19.1.6&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;org.gradle.test-retry&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖更新到 v1.6.2&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将 Angular monorepo 更新到 v19.1.5&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;：将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;io.opentelemetry:opentelemetry-bom&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖更新到 v1.47.0&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html&quot; target=&quot;_blank&quot;&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Features&quot; src=&quot;https://oscimg.oschina.net/oscnet/Features.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;Wow-Architecture&quot; src=&quot;https://oscimg.oschina.net/oscnet/Architecture.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html&quot; target=&quot;_blank&quot;&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html&quot; target=&quot;_blank&quot;&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;传统架构 VS 事件溯源&quot; src=&quot;https://oscimg.oschina.net/oscnet/300ee974_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;ETL 同步流程&quot; src=&quot;https://oscimg.oschina.net/oscnet/5fda25c1_384561.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html&quot; target=&quot;_blank&quot;&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332652/wow-5-1-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332652/wow-5-1-6-released</guid>
            <pubDate>Fri, 07 Feb 2025 05:31:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>PageForge v2025.1.4 紧急修复版本：新增全站搜索能力</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; text-align:start&quot;&gt;我们发布了 PageForge 2025.1.4 紧急修复版本。此版本主要带来了搜索功能，并修复了一些关键问题。PageForge 是一款现代化的静态页面生成与部署平台，致力于为用户提供从创建到部署的一站式解决方案。&lt;/p&gt; 
&lt;h2&gt;新增功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持全站搜索功能 (#8)&lt;/li&gt; 
 &lt;li&gt;搜索结果关键词高亮显示&lt;/li&gt; 
 &lt;li&gt;新增团队展示模版&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;界面优化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进目录滚动突出显示和活动状态&lt;/li&gt; 
 &lt;li&gt;优化内容与菜单之间的位置计算&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;问题修复&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复发布 npm 导致 example 丢失问题 (#38)&lt;/li&gt; 
 &lt;li&gt;修复移动端语言选择器报错问题&lt;/li&gt; 
 &lt;li&gt;修复移动端触发按钮丢失问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;架构改进&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;拆分 JavaScript 文件为独立模块&lt;/li&gt; 
 &lt;li&gt;拆分 Logo 和导航组件为独立模块&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;链接&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdevlive-community%2Fpageforge&quot; target=&quot;_blank&quot;&gt;https://github.com/devlive-community/pageforge&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官网:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpageforge.devlive.org&quot; target=&quot;_blank&quot;&gt;https://pageforge.devlive.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;反馈与支持&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:start&quot;&gt;如果您在使用过程中遇到任何问题，请通过 GitHub Issues 向我们反馈。您的建议对我们至关重要！&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#333333; text-align:start&quot;&gt;此版本是一个紧急修复版本，同时新增了重要的搜索功能，建议所有用户尽快升级到此版本。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332647/pageforge-2025-1-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332647/pageforge-2025-1-4-released</guid>
            <pubDate>Fri, 07 Feb 2025 04:34:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>程序员笔记 CherryTree 1.3.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;CherryTree 1.3.0 现已发布。CherryTree&amp;nbsp;是一个支持无限层级分类的笔记软件，Python 编写，支持富文本编辑和代码高亮，支持 Linux 和 Windows 平台。数据采用 sqlite 或 XML 存储，支持密码保护，支持从 NoteCase、KeepNote、Knowit、Tomboy、TuxCards、Treepad、Leo 等笔记软件导入数据。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;386&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-74d5462cec92aebeee6aba29fbbd9e4efc8.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;397&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d46aab5bb4de58574991a12865fd14414d1.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此版本更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;插入图片对话框，增加了对裁剪的支持（＃2626）&lt;/li&gt; 
 &lt;li&gt;实现了表格列剪切/复制/粘贴（＃2542）&lt;/li&gt; 
 &lt;li&gt;修复了表格行向上移动时的崩溃，所谓的&amp;nbsp;heavy version&lt;/li&gt; 
 &lt;li&gt;修复了表格导出为 csv 时单元格为空的问题（＃2028）&lt;/li&gt; 
 &lt;li&gt;改进了 html 解析（从剪贴板/从 html 导入富文本） - 增加了对&amp;nbsp;&amp;lt;font style=&quot;color: rgb(255, 0, 0);&quot;&amp;gt; 的支持&lt;/li&gt; 
 &lt;li&gt;修复了外部编辑和加密文档后重新加载文档的问题（#2612）&lt;/li&gt; 
 &lt;li&gt;修复了代码框后搜索缺少第一个匹配项的问题 （#2631）&lt;/li&gt; 
 &lt;li&gt;修复了更改代码框属性后代码框工具栏回调重复的问题（#2635）&lt;/li&gt; 
 &lt;li&gt;修复了将代码框粘贴到代码框中的问题（#2625）&lt;/li&gt; 
 &lt;li&gt;更改悬停可折叠页眉时的光标，以表明它是可点击的（#2389）&lt;/li&gt; 
 &lt;li&gt;可折叠页眉使用与展开/折叠树节点相同的图标（#2389）&lt;/li&gt; 
 &lt;li&gt;改进了清除格式化以保留链接的操作（#2389）&lt;/li&gt; 
 &lt;li&gt;多文件存储，添加了可配置选项，为嵌入文件使用常量名称（#2354）&lt;/li&gt; 
 &lt;li&gt;不要在 「mailto:」 类型的链接前添加「http://」&lt;/li&gt; 
 &lt;li&gt;preferences dialog，添加了重置为默认值的按钮：时间戳格式、双击时选择的字符、horizontal rule&lt;/li&gt; 
 &lt;li&gt;恢复了对在 ubuntu 18. 04 上的构建支持，此时 gtksourceview4 不可用，必须使用 gtksourceview3 (#2583)&lt;/li&gt; 
 &lt;li&gt;如果是 snap 包，则不要在主目录内的备份中使用前导点 (#2507)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;详情可查看&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgiuspen%2Fcherrytree%2Fblob%2Fmaster%2Fchangelog.txt&quot; target=&quot;_blank&quot;&gt;changelog&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332609/cherrytree-1-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332609/cherrytree-1-3-0-released</guid>
            <pubDate>Fri, 07 Feb 2025 02:22:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Apache Ignite 3.0.0 版本发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;Apache Ignite 3 版本发布说明&lt;/h1&gt; 
&lt;p&gt;===========================&lt;/p&gt; 
&lt;h2&gt;Apache Ignite 分布式内存数据库 3.0.0&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p&gt;这个是 Apache Ignite 3 的初始版本。&lt;/p&gt; 
&lt;p&gt;与 Apache Ignite 2 相比，该版本的代码已经完全重写，基于最新技术，从头开始设计，以应对现代数据存储和计算挑战。&lt;/p&gt; 
&lt;p&gt;Ignite 3 的主要特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 Apache Calcite 的 SQL 引擎；&lt;/li&gt; 
 &lt;li&gt;兼容 OpenAPI 的 REST API；&lt;/li&gt; 
 &lt;li&gt;基于 HOCON 的动态配置；&lt;/li&gt; 
 &lt;li&gt;改进的集群管理和控制工具；&lt;/li&gt; 
 &lt;li&gt;改进的事务协议；&lt;/li&gt; 
 &lt;li&gt;基于 Raft 的共识算法架构；&lt;/li&gt; 
 &lt;li&gt;简化的表和模式管理。&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332597/ignite-3-0-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332597/ignite-3-0-0-released</guid>
            <pubDate>Fri, 07 Feb 2025 01:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>蛋糕商城 Rust 版介绍二</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;蛋糕商城 Rust 版介绍二&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;蛋糕商城是一个在大学生学习者中流行的 JSP，JSTL，JDBC 的开源项目。由于原作者并未签名，所以原作者未知。蛋糕商城虽说比较简单，但是界面比较美观，核心业务表述清晰，是一款非常优秀的开源例程。在大学生中非常流行。大家把它改造成形形色色的系统。您经常可以在搜索引擎上发现这些作品。我是从一名大学生手上得到了蛋糕商城的源码。&lt;br&gt; 我将 Java 的原版蛋糕商城移植到了 Rust 环境下。将应用程序移植为 Axum，tokio，Sqlx 和 MariaDB 的环境。使用 Rust 通用代码生成器莲花，红莲尝鲜版三十一彻底增强了蛋糕商城，为蛋糕商城 Rust 版生成了一个集成后台。现在，升级后的蛋糕商城已经是一个 Rust，Axum 的应用程序。赶上了技术列车。特别指出的是，蛋糕商城的界面没有大改，但是界面已经不是 JSP，JSTL 的了，而是改成了 html，JavaScript 和 JSON 的了，界面的样子没有大概，唯一的改动是后台管理界面独立的新增和编辑界面改成了在列表页面的弹出框中。您可以详细检查源码，发现和原版不同的实现方式。还有就是主菜单，从嵌套逻辑的 JSP 包含文件变成了 HTML 的基干和 Javascript 的装饰函数的组合，同样实现了主菜单的逻辑，您可以查看。&lt;br&gt; 蛋糕商城 Rust 版介绍二在介绍一的基础上，完成度更高。软件完成了更多功能，可以进行比较完整的演示。&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;介绍视频请见：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GgNNegEW5%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1GgNNegEW5/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1FJP1eaEVr%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1FJP1eaEVr/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;蛋糕商城 Rust 版的项目地址为：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/jerryshensjf/CookieShopRust&quot;&gt;https://gitee.com/jerryshensjf/CookieShopRust&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;h1&gt;蛋糕商城 Rust 版&lt;/h1&gt; 
     &lt;h3&gt;介绍&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;蛋糕商城 Rust 版本。 基于开源软件蛋糕商城，升级至 Axum, tokio, Sqlx。采用 MariaDB 数据库。使用修改过的界面，设计保持原样。有 Rust 通用代码生成器莲花生成的集成后台界面。&lt;/p&gt; 
     &lt;h3&gt;截屏&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//8478113df7dfcb026e204aa6c850b651.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//29d0c9f75ad819b73c8b9c38039d25a7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//f8c63badd5d518c3814ca6b9d0f94363.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//c52cf681f66980fad6a894b60271858c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//bdf6f874fb0e39d0d486c49ed402ce35.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet//3540d4e59e374f4d37728247fd2fa8a7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;h3&gt;姊妹项目&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;蛋糕商城 JPA 版,采用 SpringBoot3.4.0,JPA 技术栈&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;项目地址：&lt;a href=&quot;https://gitee.com/jerryshensjf/JPACookieShop&quot;&gt;https://gitee.com/jerryshensjf/JPACookieShop&lt;/a&gt;&lt;/p&gt; 
     &lt;h3&gt;介绍视频&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1GgNNegEW5%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1GgNNegEW5/&lt;/a&gt;&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1FJP1eaEVr%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1FJP1eaEVr/&lt;/a&gt;&lt;/p&gt; 
     &lt;h3&gt;数据库初始化清注意&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;可以使用 sql 文件夹下的数据库脚本建库建表。蛋糕的图片在 resources/static/picture 文件夹下面。admin 的密码是 admin，其他密码可以使用 admin 修改。&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;您只需要使用 Sql 文件夹下的 sql 脚本恢复数据库，图片放在 picture 文件夹下，商品和图片的关系请参考 excelTemplate 文件夹下的 Cookieshop_org.xls 即可。&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;注意，商品如果没有设置 cover 图片，就会自动过滤掉，不会显示出来。&lt;/p&gt; 
     &lt;h3&gt;软件架构&lt;/h3&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;软件架构说明&lt;/p&gt; 
     &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Axum， tokio, Sqlx。采用 MariaDB 数据库。有 Rust 通用代码生成器莲花生成的集成后台界面。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332593</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332593</guid>
            <pubDate>Fri, 07 Feb 2025 01:06:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>EasyGoAdmin 敏捷开发框架 Gin+EleVue 版本 v2.9.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;v2.9.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1、优化性能提升使用操作体验；&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2、优化升级核心类库和功能；&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;一款 Go 语言基于 Gin、Vue、ElementUI、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式，同时为了敏捷快速开发，框架特地集成了代码生成器，完全自主研发了自定义 GO 后端服务模板和前端 Vue 自定义模板，可以根据已建好的表结构，可以快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发方式，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、可插拔式的敏捷开发框架。&lt;/span&gt;&lt;/p&gt; 
        &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-afeccbf5a31db738898226bfa85a4be226a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
        &lt;h2&gt;软件信息&lt;/h2&gt; 
        &lt;ul&gt; 
         &lt;li&gt;软件名称：EasyGoAdmin 敏捷开发框架 Gin+EleVue 版本&lt;/li&gt; 
         &lt;li&gt;官网网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easygoadmin.vip&quot; target=&quot;_blank&quot;&gt;https://www.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;文档网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.gin.elevue.easygoadmin.vip&quot; target=&quot;_blank&quot;&gt;http://docs.gin.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
         &lt;li&gt;演示地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.gin.elevue.easygoadmin.vip&quot; target=&quot;_blank&quot;&gt;http://manage.gin.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; 
        &lt;h2&gt;项目结构&lt;/h2&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;pre&gt;&lt;span&gt;├── app             &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 应用目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── controller  &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 控制器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── dto         &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// DTO 层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── middleware  &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 中间件层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   ├── model       &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 模型层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   └── service     &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 服务层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;│   └── vo          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// VO 视图层&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── boot&lt;/span&gt;
&lt;span&gt;├── config          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 系统配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── &lt;span&gt;&lt;span&gt;&lt;span&gt;document&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 文档目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── i18n            &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 国际化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── library         &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 类库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── packed&lt;/span&gt;
&lt;span&gt;├── &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 资源目录&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── router          &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 路由&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── templates       &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 自定义模板&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── utils           &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 工具类库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;├── Dockerfile&lt;/span&gt;
&lt;span&gt;├── go.mod&lt;/span&gt;
&lt;span&gt;└── main.go&lt;/span&gt;&lt;/pre&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
        &lt;h2&gt;版本说明&lt;/h2&gt; 
        &lt;table cellspacing=&quot;0&quot; style=&quot;--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px&quot;&gt; 
         &lt;tbody&gt; 
          &lt;tr&gt; 
           &lt;th&gt;版本名称&lt;/th&gt; 
           &lt;th&gt;版本说明&lt;/th&gt; 
           &lt;th&gt;版本地址&lt;/th&gt; 
          &lt;/tr&gt; 
         &lt;/tbody&gt; 
         &lt;tbody&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;GoFrame+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 GoFrame、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Beego+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Beego、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Gin+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Gin、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Iris+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Iris、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Echo+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Echo、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Revel+Layui 混编版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Revel、Layui 等框架研发&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;GoFrame+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 GoFrame、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Beego+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Beego、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Gin+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Gin、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Iris+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Iris、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Echo+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Echo、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Revel+EleVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Revel、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;GoFrame+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 GoFrame、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Beego+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Beego、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Gin+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Gin、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Iris+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Iris、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Echo+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Echo、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
          &lt;tr&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;Revel+AntdVue 前后端分离版&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;采用 Revel、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
           &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px&quot;&gt;&lt;a href=&quot;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue&quot;&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue&lt;/a&gt;&lt;/td&gt; 
          &lt;/tr&gt; 
         &lt;/tbody&gt; 
        &lt;/table&gt; 
        &lt;h2&gt;模块展示&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f3802d9148ff50b4794706f97369a8b72eb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/h2&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332588</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332588</guid>
            <pubDate>Thu, 06 Feb 2025 23:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>XXL-MQ v1.3.0 ｜ 分布式消息队列</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【增强】消费者分组属性 &quot;group&quot; 支持为空，为空时自动赋值 UUID，方便实现多分组广播消费；&lt;/li&gt; 
 &lt;li&gt;2、【增强】海量数据堆积：消息数据存储在 DB 中，原生兼容支持 &quot;MySQL、TIDB&quot; 两种存储方式，前者支持千万级消息堆积，后者支持百亿级别消息堆积（TIDB 理论上无上限）；&lt;/li&gt; 
 &lt;li&gt;3、【优化】消费者批量注册发现，提高注册发现性能；&lt;/li&gt; 
 &lt;li&gt;4、【优化】消息流转日志格式优化，提升日志可读性；&lt;/li&gt; 
 &lt;li&gt;5、【优化】升级 xxl-rpc、xxl-registry 至较新版本，Broker 注册发现服务做适配性优化；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-MQ 是一款轻量级分布式消息队列，拥有 &quot;水平扩展、高可用、海量数据堆积、单机 TPS 过 10 万、毫秒级投递&quot; 等特性,&lt;br&gt; 支持 &quot;并发消息、串行消息、广播消息、延迟消息、事务消费、失败重试、超时控制&quot; 等消息特性。现已开放源代码，开箱即用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xuxueli.com%2Fxxl-mq%2F&quot; target=&quot;_blank&quot;&gt;中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-mq&quot; target=&quot;_blank&quot;&gt;Github 地址&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;758&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1362764e612fbcb09fb4a0ce7dddbb36fe2.webp&quot; width=&quot;978&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、简单易用: 一行代码即可发布一条消息; 一行注解即可订阅一个消息主题;&lt;/li&gt; 
 &lt;li&gt;2、轻量级: 部署简单，不依赖第三方服务，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;3、水平扩展：消息中心支持无限水平扩展，这里的水平扩展包括两方面：消息生产能力、消息消费能力；通过集群扩展线性提升消息吞吐能力；&lt;/li&gt; 
 &lt;li&gt;4、高可用：消息中心能够忍受部分示例失效，不影响整个集群的可用性。通过内置注册中心可以实现秒级摘除失效节点，消息服务动态转移；&lt;/li&gt; 
 &lt;li&gt;5、消息持久化：全部消息持久化存储，消息中心支持通过配置选择是否清理过期消息。&lt;/li&gt; 
 &lt;li&gt;6、强数据安全：消息数据存储在 DB 中，可事务保障数据安全，防止消息数据丢失；&lt;/li&gt; 
 &lt;li&gt;7、海量数据堆积：消息数据存储在 DB 中，原生兼容支持 &quot;MySQL、TIDB&quot; 两种存储方式，前者支持千万级消息堆积，后者支持百亿级别消息堆积（TIDB 理论上无上限）；&lt;/li&gt; 
 &lt;li&gt;8、单机 TPS 过 10W：单机 TPS 受限于 DB 存储方式，选型 &quot;MySQL&quot; 时单机 TPS 过万，选型 &quot;TIDB&quot; 时单机 TPS 过 10 万；&lt;/li&gt; 
 &lt;li&gt;9、毫秒级投递延迟：消息中心与客户端通过 RPC 的方式进行消息通讯，毫秒级延时；&lt;/li&gt; 
 &lt;li&gt;10、多种消息模式: 
  &lt;ul&gt; 
   &lt;li&gt;并行消息：消息平均分配在该主题在线消费者，分片方式并行消费；适用于吞吐量较大的消息场景，如邮件发送、短信发送等业务逻辑&lt;/li&gt; 
   &lt;li&gt;串行消息：消息固定分配给该主题在线消费者中其中一个，FIFO 方式串行消费；适用于严格限制并发的消息场景，如秒杀、抢单等排队业务逻辑；&lt;/li&gt; 
   &lt;li&gt;广播消息：消息将会广播发送给该主题在线消费者分组，全部分组都会消费该消息，但是一个分组下只会消费一次；适用于广播场景，如广播更新缓存等&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;11、延时消息: 支持设置消息的延迟生效时间, 到达设置的生效时间时该消息才会被消费；适用于延时消费场景，如订单超时取消等;&lt;/li&gt; 
 &lt;li&gt;12、事务消费: 消费者开启事务开关后,消息事务性保证只会成功执行一次;&lt;/li&gt; 
 &lt;li&gt;13、失败重试: 支持设置消息的重试次数, 在消息执行失败后将会按照设置的值进行消息重试执行,直至重试次数耗尽或者执行成功;&lt;/li&gt; 
 &lt;li&gt;14、超时控制: 支持自定义消息超时时间，消息消费超时将会主动中断；&lt;/li&gt; 
 &lt;li&gt;15、消息可见: 系统中每一条消息可通过 Web 界面在线查看,甚至支持编辑消息内容和消息状态;&lt;/li&gt; 
 &lt;li&gt;16、消息可追踪: 支持追踪每一条消息的执行路径, 便于排查业务问题;&lt;/li&gt; 
 &lt;li&gt;17、消息失败告警：支持以 Topic 粒度监控消息，存在失败消息时主动推送告警邮件；默认提供邮件方式失败告警，同时预留扩展接口，可方面的扩展短信、钉钉等告警方式；&lt;/li&gt; 
 &lt;li&gt;18、容器化：提供官方 docker 镜像，并实时更新推送 dockerhub，进一步实现产品开箱即用；&lt;/li&gt; 
 &lt;li&gt;19、访问令牌（accessToken）：为提升系统安全性，消息中心和客户端进行安全性校验，双方 AccessToken 匹配才允许通讯；&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332572/xxl-mq-1-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332572/xxl-mq-1-3-0-released</guid>
            <pubDate>Thu, 06 Feb 2025 15:58:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>XXL-CACHE v1.2.0 ｜ 多级缓存框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【增强】多序列化协议支持：针对 L2 缓存，组件化抽象 Serializer，可灵活扩展更多序列化协议；&lt;/li&gt; 
 &lt;li&gt;2、【优化】移除冗余依赖，精简 Core 体积；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;XXL- CACHE 快速接入示例&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;代码参考 github 仓库 /test 目录：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-cache%2Ftree%2Fmaster%2Fxxl-cache-samples&quot; target=&quot;_blank&quot;&gt;https://github.com/xuxueli/xxl-cache/tree/master/xxl-cache-samples&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;1、Maven 引入&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;em&gt;&amp;lt;!-- https://mvnrepository.com/artifact/com.xuxueli/xxl-cache-core --&amp;gt;&lt;/em&gt;
&lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.xuxueli&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;xxl-cache-core&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style=&quot;color:#e06c75&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;${最新稳定版}&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style=&quot;color:#e06c75&quot;&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;2、组件配置&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;配置文件说明：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;em&gt;# xxl-cache&lt;/em&gt;
&lt;em&gt;## L1 缓存（本地）提供者，默认 caffeine&lt;/em&gt;
xxl.cache.l1.provider=caffeine
&lt;em&gt;## L1 缓存最大容量，默认 10000；&lt;/em&gt;
xxl.cache.l1.maxSize=-1
&lt;em&gt;## L1 缓存过期时间，单位秒，默认 10min；&lt;/em&gt;
xxl.cache.l1.expireAfterWrite=-1
&lt;em&gt;## L2 缓存（分布式）提供者，默认 redis&lt;/em&gt;
xxl.cache.l2.provider=redis
&lt;em&gt;## L2 缓存序列化方式，默认 java&lt;/em&gt;
xxl.cache.l2.serializer=java
&lt;em&gt;## L2 缓存节点配置，多个节点用逗号分隔；示例 「127.0.0.1:6379,127.0.0.1:6380」&lt;/em&gt;
xxl.cache.l2.nodes=127.0.0.1:6379
&lt;em&gt;## L2 缓存用户名配置&lt;/em&gt;
xxl.cache.l2.user=
&lt;em&gt;## L2 缓存密码配置&lt;/em&gt;
xxl.cache.l2.password=
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;组件初始化配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#61aeee&quot;&gt;@Bean&lt;/span&gt;(initMethod = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;start&quot;&lt;/span&gt;, destroyMethod = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;stop&quot;&lt;/span&gt;)
&lt;span&gt;&lt;span style=&quot;color:#c678dd&quot;&gt;public&lt;/span&gt; XxlCacheFactory &lt;span style=&quot;color:#e06c75&quot;&gt;xxlCacheFactory&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;/span&gt;{
    XxlCacheFactory xxlCacheFactory = &lt;span style=&quot;color:#c678dd&quot;&gt;new&lt;/span&gt; XxlCacheFactory();
    xxlCacheFactory.setL1Provider(l1Provider);
    xxlCacheFactory.setMaxSize(maxSize);
    xxlCacheFactory.setExpireAfterWrite(expireAfterWrite);
    xxlCacheFactory.setL2Provider(l2Provider);
    xxlCacheFactory.setSerializer(serializer);
    xxlCacheFactory.setNodes(nodes);
    xxlCacheFactory.setUser(user);
    xxlCacheFactory.setPassword(password);
    &lt;span style=&quot;color:#c678dd&quot;&gt;return&lt;/span&gt; xxlCacheFactory;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;经过上述 2 步，已完成全部配置工作。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;3、客户端接入：&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;String category = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;user&quot;&lt;/span&gt;;
&lt;span style=&quot;color:#c678dd&quot;&gt;long&lt;/span&gt; survivalTime = &lt;span style=&quot;color:#98c379&quot;&gt;60&lt;/span&gt;*&lt;span style=&quot;color:#98c379&quot;&gt;1000&lt;/span&gt;;
String key = &lt;span style=&quot;color:#98c379&quot;&gt;&quot;user03&quot;&lt;/span&gt;;
&lt;em&gt;/**
* 1、定义缓存对象，并指定 「缓存 category + 过期时间」
*/&lt;/em&gt;
XxlCacheHelper.XxlCache userCache = XxlCacheHelper.getCache(category, survivalTime);
&lt;em&gt;/**
* 2、缓存写：按照 L1 -&amp;gt; L2 顺序依次写缓存，同时借助内部广播机制更新全局 L1 节点缓存；
*/&lt;/em&gt;
userCache.&lt;span style=&quot;color:#e6c07b&quot;&gt;set&lt;/span&gt;(key, value);
&lt;em&gt;/**
* 3、缓存读：按照 L1 -&amp;gt; L2 顺序依次读取缓存，如果 L1 存在缓存则返回，否则读取 L2 缓存并同步 L1；
*/&lt;/em&gt;
userCache.get(key);
&lt;em&gt;/**
* 4、缓存删：按照 L1 -&amp;gt; L2 顺序依次删缓存，同时借助内部广播机制更新全局 L1 节点缓存；
*/&lt;/em&gt;
userCache.del(key);
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-CACHE 是一个，多级缓存框架，高效组合本地缓存和分布式缓存 (Redis+Caffeine)，支持「多级缓存、一致性保障、TTL、Category 隔离、防穿透」等能力；拥有「高性能、高扩展、灵活易用」等特性，提供高性能多级缓存解决方案；&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xuxueli.com%2Fxxl-cache%2F&quot; target=&quot;_blank&quot;&gt;中文文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-cache&quot; target=&quot;_blank&quot;&gt;Github 地址&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img alt=&quot;img_01.png&quot; src=&quot;https://oscimg.oschina.net/oscnet//4bb929cccd1b27f240e1f84f3fe958c2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;div&gt;
  img_01.png
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、灵活易用: 接入灵活方便，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;2、多级缓存：高效组合本地缓存和分布式缓存 (Redis+Caffeine)，支持 L1、L2 级别缓存，支持多场景缓存诉求；&lt;/li&gt; 
 &lt;li&gt;3、高扩展：框架进行模块化抽象设计，本地缓存、分布式缓存以及序列化方案均支持自定义扩展；&lt;/li&gt; 
 &lt;li&gt;4、高性能：底层设计 L1(Local)+L2(Remote) 多级缓存模型，除分布式缓存之外前置在应用层设置本地缓存，高热查询前置本地处理避免远程通讯，最大化提升性能；&lt;/li&gt; 
 &lt;li&gt;5、一致性保障：支持多层级、集群多节点之间缓存数据一致性保障，借助广播消息（Redis Pub/Sub）以及客户端主动过期，实现 L1 及 L2 之间以及 L1 各集群节点间缓存数据一致性同步；&lt;/li&gt; 
 &lt;li&gt;6、TTL：支持 TTL，支持缓存数据主动过期及清理；&lt;/li&gt; 
 &lt;li&gt;7、Category 隔离：支持自定义缓存 Category 分类，缓存数据存储隔离；&lt;/li&gt; 
 &lt;li&gt;8、缓存风险治理：针对典型缓存风险，如缓存穿透，底层进行针对性设计进行风险防护；&lt;/li&gt; 
 &lt;li&gt;9、透明接入：支持业务透明接入，屏蔽底层实现细节，降低业务开发成本，以及学习认知成本；&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332571/xxl-cache-1-2-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332571/xxl-cache-1-2-0-released</guid>
            <pubDate>Thu, 06 Feb 2025 15:55:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>XXL-JOB v3.0.0 | 分布式任务调度平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【升级】调度中心升级至 SpringBoot3 + JDK17；&lt;/li&gt; 
 &lt;li&gt;2、【升级】Docker 镜像升级，镜像构建基于 JDK17；&lt;/li&gt; 
 &lt;li&gt;3、【优化】IP 获取逻辑优化，优先遍历网卡来获取可用 IP；&lt;/li&gt; 
 &lt;li&gt;4、【优化】通用命令行任务 (「commandJobHandler」) 优化，支持多参数执行，命令及参数之间通过空格隔开；如任务参数 &quot;ls la&quot; 或 &quot;pwd&quot; 将会执行命令并输出数据；&lt;/li&gt; 
 &lt;li&gt;5、【优化】通用 HTTP 任务（httpJobHandler）优化，任务参数格式调整为 json 格式；&lt;/li&gt; 
 &lt;li&gt;6、【升级】多个项目依赖升级至较新稳定版本，涉及 gson、groovy、spring/springboot 等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;备注：&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;a、本次升级数据模型及通讯协议向前兼容，v2.4.*及后续版本可无缝升级；&lt;/li&gt; 
  &lt;li&gt;b、版本 3.x 开始要求 Jdk17；版本 2.x 及以下支持 Jdk1.8。如对 Jdk 版本有诉求，可选择接入不同版本;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;代码接入示例&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-JOB 支持多模式任务，下文以简单的「Bean 模式任务」为例介绍，三步快速开发接入。&lt;/p&gt; 
&lt;p&gt;步骤一：执行器，开发 Job 方法&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#61aeee&quot;&gt;@XxlJob&lt;/span&gt;(&lt;span style=&quot;color:#98c379&quot;&gt;&quot;demoJobHandler&quot;&lt;/span&gt;)
 &lt;span&gt;&lt;span style=&quot;color:#c678dd&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#c678dd&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#e06c75&quot;&gt;demoJobHandler&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#c678dd&quot;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;{
    XxlJobHelper.log(&lt;span style=&quot;color:#98c379&quot;&gt;&quot;XXL-JOB, Hello World.&quot;&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;步骤二：调度中心，新建调度任务&lt;/h4&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;1017&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f9f008cde404c381057fa6cf04d6ef7eabe.webp&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h4&gt;步骤三：任务执行，查看任务进度及日志&lt;/h4&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;348&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c1de54ceda4a5a471376a0154b000a11cf2.webp&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;XXL-JOB 是一个轻量级分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xuxueli.com%2Fxxl-job%2F&quot; target=&quot;_blank&quot;&gt;中文文档：http://www.xuxueli.com/xxl-job/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xuxueli.com%2Fpage%2Fcommunity.html&quot; target=&quot;_blank&quot;&gt;社区交流：http://www.xuxueli.com/page/community.html&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;631&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-85e679cb44bb11441c6d01fbc19a671aa85.webp&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、简单：支持通过 Web 页面对任务进行 CRUD 操作，操作简单，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;2、动态：支持动态修改任务状态、启动/停止任务，以及终止运行中任务，即时生效；&lt;/li&gt; 
 &lt;li&gt;3、调度中心 HA（中心式）：调度采用中心式设计，「调度中心」自研调度组件并支持集群部署，可保证调度中心 HA；&lt;/li&gt; 
 &lt;li&gt;4、执行器 HA（分布式）：任务分布式执行，任务&quot;执行器&quot;支持集群部署，可保证任务执行 HA；&lt;/li&gt; 
 &lt;li&gt;5、注册中心: 执行器会周期性自动注册任务, 调度中心将会自动发现注册的任务并触发执行。同时，也支持手动录入执行器地址；&lt;/li&gt; 
 &lt;li&gt;6、弹性扩容缩容：一旦有新执行器机器上线或者下线，下次调度时将会重新分配任务；&lt;/li&gt; 
 &lt;li&gt;7、触发策略：提供丰富的任务触发策略，包括：Cron 触发、固定间隔触发、固定延时触发、API（事件）触发、人工触发、父子任务触发；&lt;/li&gt; 
 &lt;li&gt;8、调度过期策略：调度中心错过调度时间的补偿处理策略，包括：忽略、立即补偿触发一次等；&lt;/li&gt; 
 &lt;li&gt;9、阻塞处理策略：调度过于密集执行器来不及处理时的处理策略，策略包括：单机串行（默认）、丢弃后续调度、覆盖之前调度；&lt;/li&gt; 
 &lt;li&gt;10、任务超时控制：支持自定义任务超时时间，任务运行超时将会主动中断任务；&lt;/li&gt; 
 &lt;li&gt;11、任务失败重试：支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；其中分片任务支持分片粒度的失败重试；&lt;/li&gt; 
 &lt;li&gt;12、任务失败告警；默认提供邮件方式失败告警，同时预留扩展接口，可方便的扩展短信、钉钉等告警方式；&lt;/li&gt; 
 &lt;li&gt;13、路由策略：执行器集群部署时提供丰富的路由策略，包括：第一个、最后一个、轮询、随机、一致性 HASH、最不经常使用、最近最久未使用、故障转移、忙碌转移等；&lt;/li&gt; 
 &lt;li&gt;14、分片广播任务：执行器集群部署时，任务路由策略选择&quot;分片广播&quot;情况下，一次任务调度将会广播触发集群中所有执行器执行一次任务，可根据分片参数开发分片任务；&lt;/li&gt; 
 &lt;li&gt;15、动态分片：分片广播任务以执行器为维度进行分片，支持动态扩容执行器集群从而动态增加分片数量，协同进行业务处理；在进行大数据量业务操作时可显著提升任务处理能力和速度。&lt;/li&gt; 
 &lt;li&gt;16、故障转移：任务路由策略选择&quot;故障转移&quot;情况下，如果执行器集群中某一台机器故障，将会自动 Failover 切换到一台正常的执行器发送调度请求。&lt;/li&gt; 
 &lt;li&gt;17、任务进度监控：支持实时监控任务进度；&lt;/li&gt; 
 &lt;li&gt;18、Rolling 实时日志：支持在线查看调度结果，并且支持以 Rolling 方式实时查看执行器输出的完整的执行日志；&lt;/li&gt; 
 &lt;li&gt;19、GLUE：提供 Web IDE，支持在线开发任务逻辑代码，动态发布，实时编译生效，省略部署上线的过程。支持 30 个版本的历史版本回溯。&lt;/li&gt; 
 &lt;li&gt;20、脚本任务：支持以 GLUE 模式开发和运行脚本任务，包括 Shell、Python、NodeJS、PHP、PowerShell 等类型脚本;&lt;/li&gt; 
 &lt;li&gt;21、命令行任务：原生提供通用命令行任务 Handler（Bean 任务，&quot;CommandJobHandler&quot;）；业务方只需要提供命令行即可；&lt;/li&gt; 
 &lt;li&gt;22、任务依赖：支持配置子任务依赖，当父任务执行结束且执行成功后将会主动触发一次子任务的执行, 多个子任务用逗号分隔；&lt;/li&gt; 
 &lt;li&gt;23、一致性：「调度中心」通过 DB 锁保证集群分布式调度的一致性, 一次任务调度只会触发一次执行；&lt;/li&gt; 
 &lt;li&gt;24、自定义任务参数：支持在线配置调度任务入参，即时生效；&lt;/li&gt; 
 &lt;li&gt;25、调度线程池：调度系统多线程触发调度运行，确保调度精确执行，不被堵塞；&lt;/li&gt; 
 &lt;li&gt;26、数据加密：调度中心和执行器之间的通讯进行数据加密，提升调度信息安全性；&lt;/li&gt; 
 &lt;li&gt;27、邮件报警：任务失败时支持邮件报警，支持配置多邮件地址群发报警邮件；&lt;/li&gt; 
 &lt;li&gt;28、推送 maven 中央仓库: 将会把最新稳定版推送到 maven 中央仓库, 方便用户接入和使用;&lt;/li&gt; 
 &lt;li&gt;29、运行报表：支持实时查看运行数据，如任务数量、调度次数、执行器数量等；以及调度报表，如调度日期分布图，调度成功分布图等；&lt;/li&gt; 
 &lt;li&gt;30、全异步：任务调度流程全异步化设计实现，如异步调度、异步运行、异步回调等，有效对密集调度进行流量削峰，理论上支持任意时长任务的运行；&lt;/li&gt; 
 &lt;li&gt;31、跨语言/OpenAPI：调度中心与执行器提供语言无关的 OpenApi（RESTful 格式），第三方任意语言可据此对接调度中心或者实现执行器，实现多语言支持。除此之外，还提供了 「多任务模式」和「httpJobHandler」等其他跨语言方案；&lt;/li&gt; 
 &lt;li&gt;32、国际化：调度中心支持国际化设置，提供中文、英文两种可选语言，默认为中文；&lt;/li&gt; 
 &lt;li&gt;33、容器化：提供官方 docker 镜像，并实时更新推送 dockerhub，进一步实现产品开箱即用；&lt;/li&gt; 
 &lt;li&gt;34、线程池隔离：调度线程池进行隔离拆分，慢任务自动降级进入&quot;Slow&quot;线程池，避免耗尽调度线程，提高系统稳定性；&lt;/li&gt; 
 &lt;li&gt;35、用户管理：支持在线管理系统用户，存在管理员、普通用户两种角色；&lt;/li&gt; 
 &lt;li&gt;36、权限控制：执行器维度进行权限控制，管理员拥有全量权限，普通用户需要分配执行器权限后才允许相关操作；&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332570/xxl-job-3-0-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332570/xxl-job-3-0-0-released</guid>
            <pubDate>Thu, 06 Feb 2025 15:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>SQLAlchemy 2.0.38 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;SQLAlchemy 2.0.38 现已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlalchemy.org%2Fblog%2F2025%2F02%2F06%2Fsqlalchemy-2.0.38-released%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;SQLAlchemy 是一个 Python 的 SQL 工具包以及数据库对象映射 (ORM) 框架。它包含整套企业级持久化模式，专门用于高效和高性能的数据库访问。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;228&quot; src=&quot;https://static.oschina.net/uploads/space/2022/1207/071040_PUaS_4252687.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#110000&quot;&gt;版本 &lt;/span&gt;&lt;span style=&quot;color:#110000&quot;&gt;2.0.38 修复了一系列与引擎和 SQL 组件以及 aiosqlite、asyncpg 和 MySQL/MariaDB 相关的错误。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#110000&quot;&gt;更多&amp;nbsp;2.0.38&lt;/span&gt;&lt;span style=&quot;color:#110000&quot;&gt;&amp;nbsp;的详细变更日志可查看&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlalchemy.org%2Fchangelog%2FCHANGES_2_0_38&quot; target=&quot;_blank&quot;&gt;Changelog&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sqlalchemy.org%2Fdownload.html&quot; target=&quot;_blank&quot;&gt;Download Page&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332490/sqlalchemy-2-0-38-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332490/sqlalchemy-2-0-38-released</guid>
            <pubDate>Thu, 06 Feb 2025 06:00:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>🔥 动态编译 Java 的神器 Liquor v1.3.9 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;Liquor 是一个开源的轻量级 Java 动态编译器（零依赖，40KB），它可以在运行时编译 Java 字符串代码片段、类、方法等。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;源码地址：&lt;a href=&quot;https://gitee.com/noear/liquor&quot;&gt;https://gitee.com/noear/liquor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;基础编译特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;可以单个类编译&lt;/li&gt; 
 &lt;li&gt;可以多个类同时编译&lt;/li&gt; 
 &lt;li&gt;可以增量编译&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;增值功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;java 表达式引擎&lt;/li&gt; 
 &lt;li&gt;java 脚本引擎（支持 java8 到 java23 语法）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;本次更新&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加 DynamicCompiler:addClassPath 方法&lt;/li&gt; 
 &lt;li&gt;添加 DynamicCompiler:getStandardFileManager 方法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#24292e; text-align:start&quot;&gt;新特性示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;em&gt;// A.java&lt;/em&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;A&lt;/span&gt; { &lt;span style=&quot;color:#a626a4&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;B&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;b&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;B&lt;/span&gt;(); }

&lt;em&gt;// B.java&lt;/em&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;B&lt;/span&gt; {}

&lt;em&gt;// Demo.java&lt;/em&gt;
&lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;Demo&lt;/span&gt; {
    &lt;span style=&quot;color:#4078f2&quot;&gt;@Test&lt;/span&gt;
    &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;test&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; Exception {
        &lt;span style=&quot;color:#a626a4&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;DynamicCompiler&lt;/span&gt; &lt;span style=&quot;color:#986801&quot;&gt;dynamicCompiler&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;DynamicCompiler&lt;/span&gt;(); 

        dynamicCompiler.addClassPath(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;File&lt;/span&gt;(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;.../test/&quot;&lt;/span&gt;)); &lt;em&gt;//这是重点&lt;/em&gt;
        dynamicCompiler.addSource(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;JavaFileSource&lt;/span&gt;(&lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;File&lt;/span&gt;(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;.../test/A.java&quot;&lt;/span&gt;)));
        dynamicCompiler.build();

        &lt;span style=&quot;color:#a626a4&quot;&gt;final&lt;/span&gt; Class&amp;lt;?&amp;gt; clazz = dynamicCompiler.getClassLoader().loadClass(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;test.A&quot;&lt;/span&gt;);
        System.out.printf(&lt;span style=&quot;color:#50a14f&quot;&gt;&quot;clazz: %s\n&quot;&lt;/span&gt;, clazz);
    }

    &lt;span style=&quot;color:#a626a4&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;JavaFileSource&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;extends&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;SimpleJavaFileObject&lt;/span&gt; {
        &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#4078f2&quot;&gt;JavaFileSource&lt;/span&gt;&lt;span&gt;(File codeSourceFile)&lt;/span&gt; {
            &lt;span style=&quot;color:#c18401&quot;&gt;super&lt;/span&gt;(codeSourceFile.toURI(), Kind.SOURCE);
        } 

        &lt;span style=&quot;color:#4078f2&quot;&gt;@Override&lt;/span&gt;
        &lt;span style=&quot;color:#a626a4&quot;&gt;public&lt;/span&gt; CharSequence &lt;span style=&quot;color:#4078f2&quot;&gt;getCharContent&lt;/span&gt;&lt;span&gt;(&lt;span style=&quot;color:#986801&quot;&gt;boolean&lt;/span&gt; ignoreEncodingErrors)&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;throws&lt;/span&gt; IOException {
            &lt;span style=&quot;color:#a626a4&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#a626a4&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#c18401&quot;&gt;String&lt;/span&gt;(Files.readAllBytes(Paths.get(&lt;span style=&quot;color:#c18401&quot;&gt;this&lt;/span&gt;.uri)), StandardCharsets.UTF_8);
        } 
    }
}&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332484/liquor-1-3-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332484/liquor-1-3-9-released</guid>
            <pubDate>Thu, 06 Feb 2025 05:16:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Visual Studio Code 1.97 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Visual Studio Code 1.97 已&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;，具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_copilot-next-edit-suggestions-preview&quot; target=&quot;_blank&quot;&gt;Copilot Next Edit Suggestions（预览）&lt;/a&gt;&amp;nbsp;- Copilot 预测你可能进行的下一步编辑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Copilot Next Edit Suggestions (Copilot NES) 会预测用户要进行的下一次编辑的位置以及编辑的内容。并提供与当前工作相关的更改建议，只需按&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:var(--keybinding-background)&quot;&gt;&lt;span style=&quot;color:var(--keybinding-foreground)&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Tab 键&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;即可快速导航并接受建议。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5904664d7228584b631ce23ca015f34fe0c.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_move-the-command-palette-and-quick-inputs&quot; target=&quot;_blank&quot;&gt;重新定位命令面板&lt;/a&gt;&amp;nbsp;- &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;现在可以将命令面板和其他快速输入移动到新位置，而不是将其固定在窗口顶部。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;313&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-83eb72e5e2b50cbd7cc56302cc18631fafe.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_improved-editor-controls&quot; target=&quot;_blank&quot;&gt;Auto accept&amp;nbsp;编辑&lt;/a&gt;- 可配置的超时后自动接受来自 Copilot 的编辑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;261&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-497de618afc94a1f2baf18de6c6cc147afb.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_trusting-extension-publishers&quot; target=&quot;_blank&quot;&gt;扩展发布者信任&lt;/a&gt;&amp;nbsp;- 使用扩展发布者信任保证你的环境安全。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新到 VS Code 1.97 版本时，当前安装的扩展的发布者将自动获得信任。可以使用 Extensions: Manage Trusted Extensions Publishers 命令来管理受信任的扩展发布者。此命令允许你重置或撤销对之前信任的发布者的信任。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;188&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4f9570a0e8b931590c61f790c23b6dcd5f4.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_compound-logs&quot; target=&quot;_blank&quot;&gt;Compound logs&lt;/a&gt;&amp;nbsp;- 将多个日志合并为单个聚合日志视图。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;334&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26e5c3e97eea4ea577ab4dc208154c92293.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_output-panel-filtering&quot; target=&quot;_blank&quot;&gt;过滤输出日志&lt;/a&gt;&amp;nbsp;- 过滤输出面板的内容。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;可以极大地改善日志的管理和分析，特别是必须处理大量日志数据时。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;169&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d444d9420cfac6b1dff02dd8d09c2769aba.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_git-blame-information&quot; target=&quot;_blank&quot;&gt;Git blame 信息&lt;/a&gt;&amp;nbsp;- 丰富的 git blame 信息并在 GitHub 上开放。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新版本&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;继续完善在编辑器和状态栏中显示 git blame 信息的功能。还改进了将鼠标悬停在 editor decoration 或 Status Bar item 上时显示的信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;298&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-380f3d1507e567f503206bfbda8483e3cd0.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_filter-and-search-on-values&quot; target=&quot;_blank&quot;&gt;在调试变量中搜索值&lt;/a&gt;&amp;nbsp;- 过滤并搜索调试变量中的特定值。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;现在可以在变量和监视视图中的视图（&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:var(--keybinding-background)&quot;&gt;&lt;span style=&quot;color:var(--keybinding-foreground)&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Ctrl+Alt+F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;）内进行搜索，以筛选变量和表达式值，而不仅仅是名称。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;201&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-60c580c97eb7e68f8f81435d9ba1445c596.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_inline-values-upon-cell-execution&quot; target=&quot;_blank&quot;&gt;Notebook 内联值&lt;/a&gt;&amp;nbsp;- 查看 Notebook 中代码单元变量的内联值。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;236&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-42d2e997f680175039221bbf6eecf5cf537.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97%23_no-config-debug&quot; target=&quot;_blank&quot;&gt;Python no-config debug&lt;/a&gt;&amp;nbsp;- 无需设置即可快速调试 Python 脚本或模块。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;293&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26fad6c72960abc4b322cbd19e25230dc37.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_97&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332476/vs-code-1-97-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332476/vs-code-1-97-released</guid>
            <pubDate>Thu, 06 Feb 2025 03:30:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>📊 Univer Go ：AI 结合电子表格，让数据采集与填充实现全流程自动化</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;&lt;span&gt;&lt;/span&gt;从此刻起，告别手动填充数据：&lt;/h2&gt; 
&lt;div&gt;
 hi👋 ，向大家推荐一款基于 
 &lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;&lt;/strong&gt; 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/a&gt;平台开发的智能模板—— 
 &lt;strong&gt;AI Data Enrichment&lt;/strong&gt;。该模板深度整合了 Phidata API，为用户提供三大核心功能：智能 AI 问答、精准语义搜索和网页数据提取。更值得一提的是，通过与 Univer 表格的无缝协作，您只需简单设置表头，模板即可自动完成数据采集与填充，让数据处理效率提升到一个全新的水平。相信这款智能模板将成为您工作中的得力助手！
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 在 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Univer Go&lt;/strong&gt;&lt;/a&gt; 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt; &lt;/strong&gt;&lt;/a&gt; 的操作界面中，您只需一键点击运行 
 &lt;strong&gt;AI Data Enrichment &lt;/strong&gt; 脚本，即可自动完成表格内的数据采集与填充。不仅如此，Univer Go 还赋予了您对脚本进行深度自定义的能力，让您手中的工具真正为己所用，不管您是在应对复杂的业务流程，还是将创意工作设想变为现实，它都能精准匹配您的多元需求，高效又轻松地达成目标。
&lt;/div&gt; 
&lt;div&gt;
 &lt;strong&gt;点击观看专属于你的自动化办公视频，让工作高效，自在摸鱼！&lt;/strong&gt;： 
 &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1UoFPenEa7%2F%3Fshare_source%3Dcopy_web%26vd_source%3D54ca691c116c1bc44a5f42a0b1a8f572&quot;&gt;Univer Go：体验智能工作流，AI 助力高效办公&lt;/a&gt;&lt;/span&gt;
&lt;/div&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;453&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-77cccc9c31bb59a59e8da7e7a76987a5e7c.png&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt; 是一款高度可定制化的电子表格工具，能够根据用户需求构建一个性能与功能对标 excel 的电子表格。它支持灵活的功能扩展，涵盖基础数据处理、复杂的导入导出操作和协同功能，同时为 UI/UX 设计提供了定制空间，助力打造易用交互界面。此外，Univer Go 融合先进 AI 技术，配备了功能强大的脚本编写与执行工具，支持开发者创建和运行自动化脚本、进行数据库连接与数据读写管理以及开发自定义应用。无论是初学者还是专业开发者，都能凭借其简洁的操作逻辑和丰富功能支持，轻松上手。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;strong&gt;体验链接&lt;/strong&gt;： 
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//84026b029f601804f3df064b1a6434cc.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//c45364286cf0bb51fada9c1ed3645a70.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h3&gt;实现 AI Data Enrichment&lt;strong&gt; &lt;/strong&gt;：&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;1. client script 自定义交互组件&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;// 定制冻结情况
sheet.setFrozenColumns(1);
sheet.setFrozenRows(2);

// 定制列头
univerAPI.customizeColumnHeader({
    headerStyle: { textAlign: &quot;left&quot;, fontSize: 12, size: COLUMN_HEADER_HEIGHT },
});

// 定制行高
for (let i = 0; i &amp;lt; 100; i++) {
    sheet.setRowHeight(i, 30);
}
sheet.setRowHeight(0, 40);

// 为列头绑定自定义组件
const rsGPT1 = sheet.addFloatDomToColumnHeader(
    1,
    {
        allowTransform: false,
        componentKey: &quot;AIAgentSelect&quot;, // React comp key registered in ComponentManager
        props: {
            column: 1,
        },
        data: {
            defaultOption: &quot;optionGPT&quot;,
            column: 1,
        },
    },
    {
        width: 210, // univer-float-dom-wrapper width 208 ai-gpt 206
        height: 58,
        marginX: 0,
        marginY: 0,
        horizonOffsetAlign: &quot;right&quot;,
    },
    &quot;ai-gpt&quot; // dom id
);&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;2.&amp;nbsp; python server script 添加各个 agent 提供 ai 能力&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;def gpt(query: str):
    gpt_agent = Agent(
        name=&quot;GPT Agent&quot;,
        model=model,
        show_tool_calls=False,
        markdown=False,
        response_model=GPTResult,
        instructions=[&quot;Ask a question and get an answer, give me the briefest answer.&quot;],
    )

    resp: RunResponse = gpt_agent.run(query)

    s: GPTResult = resp.content

    ss = s.model_dump_json()
    print(ss)

    return ss

def web_reader(url: str):
  ...

def web_search(query: str, search_engine: str = &#39;google&#39;):&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;3.&amp;nbsp; client script 调用执行 python script 的 agent 获取数据&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; const serverRespStr = await univerAPI.runOnServer(&quot;agent&quot;, &quot;gpt&quot;, prompt);
 console.log(&quot;serverGPT:::&quot;, serverRespStr, &quot;!!!!&quot;);&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;现成模版快速使用 ！&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;1. 请先下载 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;， 在模版中找到 &lt;strong&gt;AI Data Enrichment&lt;/strong&gt;，点击使用&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;下载链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;Univer Go&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;教程视频：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1wPf6YzEeL%2F%3Fshare_source%3Dcopy_web%26vd_source%3D54ca691c116c1bc44a5f42a0b1a8f572&quot; target=&quot;_blank&quot;&gt;Univer Go 智能数据补全和实时信息提取&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b3074019321c7753a4419cd185a0ace7.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 2.&amp;nbsp; 进入 Workspace ，等待依赖安装完成
&lt;/div&gt; 
&lt;div&gt;
 右侧代码编辑器支持 AI 辅写功能，具体请查看这篇文章： 
 &lt;a href=&quot;https://my.oschina.net/u/6977969/blog/17182756&quot;&gt;Univer Go 推出 AI 辅助编写 Univer API 功能&lt;/a&gt;
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//f45df26d1cc8cbe1cd71d4bea08dd7f1.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 3.&amp;nbsp; 调整代码后预览表格，最后运行代码
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//427c4b85a3078da34722e3bdf6709734.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 4.&amp;nbsp; 预览表格内的表头结构讲解：列标题工具按钮及列标题下方的两行内容
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div&gt;
   列标题，点击工具按钮，下拉框中有多种工具可以选择
  &lt;/div&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 - GPT：直接向 LLM 提问
&lt;/div&gt; 
&lt;div&gt;
 - 网页搜索：在网页上搜索信息。
&lt;/div&gt; 
&lt;div&gt;
 - 阅读：阅读文档并提取信息
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//da46fd39d40bfa25076c276e1bb783de.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div&gt;
   列标题下方的两行内容，作为提示词的一部分，其中可以编辑「描述」部分的提示词，以便 AI 模型更好地理解您的需求。
  &lt;/div&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//a00f427221bd8d6f3c27373bcc58061e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 5.&amp;nbsp; 接下来，我们将演示模板的使用方法。首先，框选目标区域后，会出现一个「执行」按钮。点击后，系统将根据当前列所选工具，并结合当前行和列的提示词，自动补全前一列的数据。
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//9a77497f6143652b07963716c4e29760.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 6.&amp;nbsp; 我们可以添加一些附加提示词，调整提问效果
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//d2b38df698ff8615590f0230b38d4696.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 7.&amp;nbsp; 使用 Web Search 工具可以获取互联网的实时信息。当点击 Web Search 生成的结果单元格时，侧边栏会弹出更多相关链接供你查看。
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//0ebf2f625219f75226b07327147e0c89.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 8.&amp;nbsp; 使用 Read 工具，可以对任何的公开网址进行信息提取和总结
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//fbb546fb7296de72b68bf3657955cb72.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt;
 9.&amp;nbsp; 通过以上简单步骤，帮助您轻松实现在表格内自动数据采集与填充！即刻登录 
 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgo.univer.ai%2Fen-US%3Ffrom%3Doschina&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Univer Go&lt;/strong&gt;&lt;/a&gt; ，探索丰富多样的定制化功能，开启高效办公新体验！
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332457</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332457</guid>
            <pubDate>Thu, 06 Feb 2025 02:51:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>OpenWrt 24.10 发布首个稳定版，初步支持 Wi-Fi 7</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;面向嵌入式设备（通常是无线路由器）的开源 Linux 发行版系统 OpenWrt 24.10 &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrt.org%2Freleases%2F24.10%2Fnotes-24.10.0&quot; target=&quot;_blank&quot;&gt;首个稳定版已正式发布&lt;/a&gt;&lt;/u&gt;，距离上一个版本（23.05.0）已经过去了一年四个月，期间包括 5400 多次更新提交。&lt;/p&gt; 
&lt;p&gt;OpenWrt 24.10 的新特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持逾 1970 款设备，比 23.05.0 增加了 100 多款；&lt;/li&gt; 
 &lt;li&gt;Linux 内核从 5.15 升级到 6.6；&lt;/li&gt; 
 &lt;li&gt;包管理器仍然是 OPKG，APK 包尚不支持，预计下个版本才会切换到 APK；&lt;/li&gt; 
 &lt;li&gt;加密库 mbedtls 更新到 3.6；&lt;/li&gt; 
 &lt;li&gt;改进了 WiFi6 (802.11ax) 支持，初步支持 WiFi7 (802.11be)；&lt;/li&gt; 
 &lt;li&gt;改进了 Link Layer Discovery Protocol(LLDP) 支持，等等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下载地址：&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.openwrt.org%2Freleases%2F24.10.0%2Ftargets%2F&quot; target=&quot;_blank&quot;&gt;https://downloads.openwrt.org/releases/24.10.0/targets/&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332452/openwrt-24-10-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332452/openwrt-24-10-released</guid>
            <pubDate>Thu, 06 Feb 2025 02:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>cURL 8.12.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;curl 8.12.0 现已正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2025%2F02%2F05%2Fcurl-8-12-0%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，具体更新内容包括：&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2025-0167.html&quot; target=&quot;_blank&quot;&gt;CVE-2025-0167：netrc 和默认凭据泄露&lt;/a&gt;。当被要求使用&lt;code&gt;.netrc&lt;/code&gt;文件作为凭据&lt;strong&gt;并&lt;/strong&gt;遵循 HTTP 重定向时，curl 可能会在某些情况下将用于第一个主机的密码泄露给后续主机。此缺陷仅在 netrc 文件中有一个&lt;code&gt;default&lt;/code&gt;省略登录名和密码的条目时才会显现。这是一种罕见的情况。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2025-0665.html&quot; target=&quot;_blank&quot;&gt;CVE-2025-0665：eventfd double close&lt;/a&gt;。在完成线程名称解析后关闭连接通道时，libcurl 会错误地两次关闭同一个文件描述符。&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2025-0725.html&quot; target=&quot;_blank&quot;&gt;CVE-2025-0725：gzip 整数溢出&lt;/a&gt;。当使用 zlib 1.2.0.3 或更旧版本的 libcurl 被要求使用&lt;code&gt;CURLOPT_ACCEPT_ENCODING&lt;/code&gt;选项对内容编码的 HTTP 响应执行自动 gzip 解压缩时，攻击者控制的整数溢出会使 libcurl 执行缓冲区溢出。几乎没有用户还在使用如此老旧和易受攻击的 zlib 版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;strong&gt;Changes&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;curl：为从文件读取变量&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2024%2F12%2F30%2Fcurl-with-partial-files%2F&quot; target=&quot;_blank&quot;&gt;添加字节范围支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;curl：make –etag-save acknowledge –create-dirs&lt;/li&gt; 
 &lt;li&gt;curl：将「time_queue」变量添加到 -w&lt;/li&gt; 
 &lt;li&gt;getinfo：提供用于 HTTP 和代理的身份验证信息：&lt;/li&gt; 
 &lt;li&gt;openssl：添加使用来自 PKCS#11 供应商的密钥和证书的支持&lt;/li&gt; 
 &lt;li&gt;QUIC：通过 CURLSSLOPT_EARLYDATA 实现 gnutls 的 0RTT&lt;/li&gt; 
 &lt;li&gt;vtls：为 SSL 会话 im-/export 提供 ssls-export 功能&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2024%2F12%2F21%2Fdropping-hyper%2F&quot; target=&quot;_blank&quot;&gt;hyper：放弃支持&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Bugfixes&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;libcurl&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;确认 CURLOPT_DNS_SERVERS 设置为 NULL&lt;/li&gt; 
 &lt;li&gt;修复 CURLOPT_CURLU override logic&lt;/li&gt; 
 &lt;li&gt;初始 HTTPS RR 解析支持&lt;/li&gt; 
 &lt;li&gt;禁止使用 sscanf()&lt;/li&gt; 
 &lt;li&gt;支持使用自定义 libzstd 内存函数&lt;/li&gt; 
 &lt;li&gt;将 cookie 的过期时间限制为 400 天&lt;/li&gt; 
 &lt;li&gt;仅解析确切的 cookie 过期日期&lt;/li&gt; 
 &lt;li&gt;在 curl_multi_fdset 返回的集合中包含关闭连接&lt;/li&gt; 
 &lt;li&gt;ECH：将 API 更新为与 OpenSSL 维护人员达成一致的 API&lt;/li&gt; 
 &lt;li&gt;mbedtls：修复 blocked sends 的处理&lt;/li&gt; 
 &lt;li&gt;在 Windows 上终止 snprintf 输出&lt;/li&gt; 
 &lt;li&gt;将 ssl_scache 添加到&amp;nbsp;multi handle&lt;/li&gt; 
 &lt;li&gt;为 wolfSSL + OpenSSL 构建自动启用&lt;code&gt;OPENSSL_COEXIST&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;使用 SSL_poll 确定 OpenSSL QUIC streams 的可写性&lt;/li&gt; 
 &lt;li&gt;……&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;scripts&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;众多 cmake 改进&lt;/li&gt; 
 &lt;li&gt;scripts/mdlinkcheck：markdown 链接检查器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;curl tool&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果 etag 选项与多个 URL 一起使用，则返回错误&lt;/li&gt; 
 &lt;li&gt;接受 –form type= 字符串中的数字&lt;/li&gt; 
 &lt;li&gt;make –etag-compare 接受不存在的文件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;docs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FINFRASTRUCTURE.md&quot; target=&quot;_blank&quot;&gt;INFRASTRUCTURE.md&lt;/a&gt; describing project infra&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下一个版本&amp;nbsp;curl 8.13.0 预计将于 2025 年 4 月 2 日发布。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/332451/curl-8-12-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/332451/curl-8-12-0-released</guid>
            <pubDate>Thu, 06 Feb 2025 02:21:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>