<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Sat, 11 May 2024 06:54:56 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>Redisson 3.30.0 发布，官方推荐的 Redis 客户端</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Redisson 3.30.0&amp;nbsp;现已发布，这是一个 Java 编写的 Redis 客户端，具备驻内存数据网格（In-Memory Data Grid）功能，并获得了 Redis 的官方推荐。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;此版本更新内容如下：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;Feature&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;新增 sslKeystoreType 设置&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;新增 RPatternTopic.getActiveTopic() 方法&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;新增 RJsonBucket.merge() 方法&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;为 RBloomFilter 对象实现了 Async、Rx、Reactive 接口&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;JCache 的 fallback 模式&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;支持密码加密&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;Spring Cloud Stream 集成&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;Improvement&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;定义为 Java 系统属性的配置变量覆盖环境变量&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;Fixed&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;io.projectreactor 包应在 OSGi Manifest 中定义为可选包&lt;/li&gt; 
 &lt;li&gt;Spring Data Redis StreamPollTask.deserializeAndEmitRecords() 方法在故障转移后抛出 NPE&lt;/li&gt; 
 &lt;li&gt;Spring Data Redis 阻塞轮询命令在故障转移后无法重新连接&lt;/li&gt; 
 &lt;li&gt;RedissonSessionManager 报告的无法找到会话错误&lt;/li&gt; 
 &lt;li&gt;如果 sentinelsDiscovery = true，则会在 Redisson 启动时应用 Sentinels discovery&lt;/li&gt; 
 &lt;li&gt;如果在复制模式下 readMode = SLAVE，在添加从节点后，主节点用于读取操作&lt;/li&gt; 
 &lt;li&gt;使用已定义超时的阻塞方法调用的故障转移处理。RStream 和 RBlockingQueue 对象&lt;/li&gt; 
 &lt;li&gt;多个 RLocalCachedMap 对象在同一 RTransaction 中不起作用的问题&lt;/li&gt; 
 &lt;li&gt;redisson.getMap(MapOptions) 方法中未应用编解码器设置的问题。&lt;/li&gt; 
 &lt;li&gt;Live Object 字段无法设置为空值的问题&lt;/li&gt; 
 &lt;li&gt;SentinelConnectionManager 在主机解析错误后停止调度&amp;nbsp;topology change change / dns check&lt;/li&gt; 
 &lt;li&gt;RMapCache.fastPutIfExistsOperation() 方法使用不正确的&amp;nbsp;pubsub channel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson%2Freleases%2Ftag%2Fredisson-3.30.0&quot; target=&quot;_blank&quot;&gt;https://github.com/redisson/redisson/releases/tag/redisson-3.30.0&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291903/redisson-3-30-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291903/redisson-3-30-0-released</guid>
            <pubDate>Sat, 11 May 2024 06:20:54 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Taro 3.6.29 发布，BAT 小程序、H5 与 RN 端统一框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;Taro 3.6.29 现已发布。Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 等应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;此版本具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;小程序&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增了对微信小程序 Skyline 组件的适配（不包括手势相关组件）&lt;/li&gt; 
 &lt;li&gt;修复了因容器事件重复触发导致的生命周期执行顺序异常的问题&lt;/li&gt; 
 &lt;li&gt;修复了字节跳动小程序上传命令报错的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;H5&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;兼容了 webpack v5.90+ 新增的 EnvironmentNotSupportAsyncWarn 警告&lt;/li&gt; 
 &lt;li&gt;优化了 navigateBack 和 navigateTo 的动画展示逻辑，解决了返回时上一个页面瞬间白屏的问题，fix&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fpull%2F15576&quot; target=&quot;_blank&quot;&gt;#15576&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了路由变化时 onhide 事件的调用时机，并且在 switchTab 时无需动画&lt;/li&gt; 
 &lt;li&gt;修复了自定义路由的跳转问题&lt;/li&gt; 
 &lt;li&gt;修复了 View 组件初始绑定 onClick 为      导致点击时报错的问题，fix&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Fissues%2F15530&quot; target=&quot;_blank&quot;&gt;#15530&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;鸿蒙 Hybrid&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化了 request 的实现，通过接口参数，业务可以灵活选择实现机制&lt;/li&gt; 
 &lt;li&gt;优化了 osChannel 的实现，支持业务动态选择&lt;/li&gt; 
 &lt;li&gt;修复了第一个页面的动画无法正常停止的问题&lt;/li&gt; 
 &lt;li&gt;支持了 addInterceptor 和 clearInterceptor&lt;/li&gt; 
 &lt;li&gt;增加了原生 API chooseMedium&lt;/li&gt; 
 &lt;li&gt;font-size 支持了一多适配&lt;/li&gt; 
 &lt;li&gt;导航栏适配了深色模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;Typings&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;调整了 request 请求 API 的 complete 回调中 res 参数的类型，与 success 一致&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Freleases%2Ftag%2Fv3.6.29&quot; target=&quot;_blank&quot;&gt;https://github.com/NervJS/taro/releases/tag/v3.6.29&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291895/taro-3-6-29-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291895/taro-3-6-29-released</guid>
            <pubDate>Sat, 11 May 2024 05:39:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>netty 高性能游戏服务器框架；ioGame 21.7 真.轻量级网络编程框架发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;ioGame 源码完全开放、最新文档阅读完全开放；使用完全自由、免费（遵守开源协议）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;ioGame 是一个&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;轻量级的&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;网络编程框架，适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;及各种需要长连接的场景。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;文档与日志&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fab15oe&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;框架版本更新日志 (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;ioGame 网络游戏服务器框架 (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Freleases%2Ftag%2F21.7&quot; target=&quot;_blank&quot;&gt;Release ioGame 21.7，java 高性能游戏服务器框架;netty 高性能游戏服务器框架 · iohao/ioGame (github.com)&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;版本更新汇总&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;[core] &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F112&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#112&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; protobuf 协议类添加检测，通过 action 构建时的监听器实现&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;[core] &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F272&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#272&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 业务框架 - 提供 action 构建时的监听回调&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;[core] &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F274&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#274&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 优化、提速 - 预生成 jprotobuf 协议类的代理，通过 action 构建时的监听器实现&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;[broker] fix &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F277&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#277&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 、&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F280&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#280&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 偶现 BrokerClientType 为空&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;[external] &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F271&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#271&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 游戏对外服 - 内置与可选 handler - log 相关的打印（触发异常、断开连接时）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;[room] 简化命名: AbstractPlayer --&amp;gt; Player、AbstractRoom --&amp;gt; Room&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;其他优化：预先生成游戏对外服统一协议的代理类及内置的&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片 (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;相关代理类，优化 action 参数解析&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;[external]&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F271&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#271&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 游戏对外服 - 内置与可选 handler - log 相关的打印（触发异常、断开连接时）&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;其他参考 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgqvf6cooowpo0ukp&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;内置与可选的 Handler (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;[core]&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F272&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#272&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 业务框架 - 提供 action 构建时的监听回调&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;开发者可以利用 ActionParserListener 接口来观察 action 构建过程，或者做一些额外的扩展。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;扩展示例参考 &lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#aa5500&quot;&gt;// 简单打印&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#770088&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#770088&quot;&gt;final&lt;/span&gt; &lt;span style=&quot;color:#770088&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#0000ff&quot;&gt;YourActionParserListener&lt;/span&gt; &lt;span style=&quot;color:#770088&quot;&gt;implements&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;ActionParserListener&lt;/span&gt; {&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#555555&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#770088&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#008855&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;onActionCommand&lt;/span&gt;(&lt;span style=&quot;color:#000000&quot;&gt;ActionParserContext&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;context&lt;/span&gt;) {&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;ActionCommand&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;actionCommand&lt;/span&gt; &lt;span style=&quot;color:#981a1a&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;context&lt;/span&gt;.&lt;span style=&quot;color:#000000&quot;&gt;getActionCommand&lt;/span&gt;();&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;log&lt;/span&gt;.&lt;span style=&quot;color:#000000&quot;&gt;info&lt;/span&gt;(&lt;span style=&quot;color:#000000&quot;&gt;actionCommand&lt;/span&gt;);&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp;  }&lt;/span&gt;
&amp;nbsp;&lt;span&gt;}&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#008855&quot;&gt;void&lt;/span&gt; &lt;span style=&quot;color:#0000ff&quot;&gt;test&lt;/span&gt;() {&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;BarSkeletonBuilder&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;builder&lt;/span&gt; &lt;span style=&quot;color:#981a1a&quot;&gt;=&lt;/span&gt; ...;&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#000000&quot;&gt;builder&lt;/span&gt;.&lt;span style=&quot;color:#000000&quot;&gt;addActionParserListener&lt;/span&gt;(&lt;span style=&quot;color:#770088&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;YourActionParserListener&lt;/span&gt;());&lt;/span&gt;
&amp;nbsp;&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F112&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#112&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; protobuf 协议类添加检测，通过 action 构建时的监听器实现&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;如果当前使用的编解码器为 ProtoDataCodec 时，当 action 的参数或返回值的类没有添加 ProtobufClass 注解时（通常是忘记添加），给予一些警告提示。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#aa5500&quot;&gt;// 该协议类没有添加 ProtobufClass 注解&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#770088&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#0000ff&quot;&gt;Bird&lt;/span&gt; {&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#770088&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#008855&quot;&gt;String&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;name&lt;/span&gt;;&lt;/span&gt;
&amp;nbsp;&lt;span&gt;}&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#555555&quot;&gt;@ActionController&lt;/span&gt;(&lt;span style=&quot;color:#116644&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;
&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#770088&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#770088&quot;&gt;class&lt;/span&gt; &lt;span style=&quot;color:#0000ff&quot;&gt;MyAction&lt;/span&gt; {&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#555555&quot;&gt;@ActionMethod&lt;/span&gt;(&lt;span style=&quot;color:#116644&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#770088&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;Bird&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;testObject&lt;/span&gt;() {&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style=&quot;color:#770088&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#770088&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color:#000000&quot;&gt;Bird&lt;/span&gt;();&lt;/span&gt;
&amp;nbsp;&lt;span&gt; &amp;nbsp;  }&lt;/span&gt;
&amp;nbsp;&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;警告打印参考&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&amp;nbsp;&lt;span&gt;======== 注意，协议类没有添加 ProtobufClass 注解 ========&lt;/span&gt;
&amp;nbsp;&lt;span&gt;class com.iohao.game.action.skeleton.core.action.Bird&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F274&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#274&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 优化、提速 - 预生成 jprotobuf 协议类的代理，通过 action 构建时的监听器实现&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:.8em; margin-right:0&quot;&gt;&lt;span&gt;如果当前使用的编解码器为 ProtoDataCodec 时，会在启动时就预先生成好 jprotobuf 协议类对应的代理类（用于 .proto 相关的，编码、解码），而不必等到用时在创建该代理类。从而达到整体优化提速的效果。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:.8em; margin-right:.8em&quot;&gt;&lt;span&gt;在此之前，在没做其他设置的情况下，首次访问 action 时，如果参数使用的 jprotobuf 协议类，那么在解码该参数时，会通过 &lt;/span&gt;&lt;span&gt;&lt;code&gt;ProtobufProxy.create&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 来创建对应的代理类（类似 .proto 相关的，编码、解码）。之后再访问时，才会从缓存中取到对应的代理类。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:.8em; margin-right:.8em&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:.8em&quot;&gt;&lt;span&gt;该优化默认开启，开发者可以不需要使用与配置跟 jprotobuf-precompile-plugin 插件相关的了。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;已经预先生成的代理类有&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fxeokui&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;统一协议 ExternalMessage (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;所有开发者定义的 action 的方法参数及返回值&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;解决协议碎片 (yuque.com)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;相关，如 int、int list、String、String list、long、long list、ByteValueList ...等&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;[room]&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;简化命名: AbstractPlayer --&amp;gt; Player、AbstractRoom --&amp;gt; Room&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;其他优化&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;优化 action 参数解析&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#40485b&quot;&gt;ioGame 使用趋势数据&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;关注 ioGame 的游戏服务器开发者持续增多，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;2022-09 ~ 至今&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;各月&lt;/span&gt;&lt;span&gt;的统计数据；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;这里的统计信息是关于开发者关注 ioGame 框架相关的，从统计数据中可以看出，由于 ioGame 上手简单，功能强大等优点，得到了众多开发者的关注。如果你想知道 ioGame 有没有人在使用，可以先到这里看下统计数据、开发者的评价与讨论。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://www.yuque.com/iohao/game/gpxk93#TwVa8&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;这里展示了每月的统计数据，统计数据来源于语雀后台，这些数据都是&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;真实的、客观存在的、活的&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;blockquote&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;因为成本的原因，某宝某多还没有出现能提供这种服务的商家，所以这样的统计数据也更具真实性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;通过统计数据，我们可以看到每天会有很多开发者在访问 ioGame 的在线文档，并且这些统计数据不是来源于口嗨的，也不是主观创造的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;所以，还在犹豫要不要使用 ioGame 的开发者们，更应该讨论的是 「为什么这些开发者会选择使用 ioGame」，而不是 ioGame 有没有人在使用的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;点击我，到语雀后台查看 ioGame 的数据&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://foruda.gitee.com/images/1715140349658841142/86906a4e_5475.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;ioGame 网络游戏服务器框架简介&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;无锁异步化、事件驱动的架构设计；轻量级，无需依赖任何第三方中间件或数据库就能支持集群、分布式&lt;/li&gt; 
 &lt;li&gt;通过 ioGame 可以很容易的搭建出一个集群无中心节点、集群自动化、多进程的分布式游戏服务器&lt;/li&gt; 
 &lt;li&gt;包体小、启动快、内存占用少、更加的节约、无需配置文件、提供了优雅的路由访问权限控制&lt;/li&gt; 
 &lt;li&gt;可同时支持多种连接方式：WS、UDP、TCP... 等；框架已支持全链路调用日志跟踪特性&lt;/li&gt; 
 &lt;li&gt;让开发者用一套业务代码，能轻松切换和扩展不同的通信协议：Protobuf、JSON&lt;/li&gt; 
 &lt;li&gt;近原生的性能；业务框架在单线程中平均每秒可以执行 1152 万次业务逻辑&lt;/li&gt; 
 &lt;li&gt;代码即联调文档、JSR380 验证、断言 + 异常机制 = 更少的维护成本&lt;/li&gt; 
 &lt;li&gt;框架具备智能的同进程亲和性；开发中，业务代码可定位与跳转&lt;/li&gt; 
 &lt;li&gt;架构部署灵活性与多样性：既可相互独立，又可相互融合&lt;/li&gt; 
 &lt;li&gt;可同时与同类型的多个游戏逻辑服通信并得到数据&lt;/li&gt; 
 &lt;li&gt;逻辑服之间可相互跨进程、跨机器进行通信&lt;/li&gt; 
 &lt;li&gt;支持玩家对游戏逻辑服进行动态绑定&lt;/li&gt; 
 &lt;li&gt;能与任何其他框架做融合共存&lt;/li&gt; 
 &lt;li&gt;对 webMVC 开发者友好&lt;/li&gt; 
 &lt;li&gt;无 spring 强依赖&lt;/li&gt; 
 &lt;li&gt;零学习成本&lt;/li&gt; 
 &lt;li&gt;javaSE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;你是否想要开发一个&lt;/span&gt;&lt;strong&gt;&lt;span&gt;高性能、稳定、易用、自带负载均衡、避免类爆炸设计、可跨进程跨机器通信、集群无中心节点、集群自动化、有状态多进程的分布式的&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;网络编程服务器呢？如果是的话，这里向你推荐一个由 java 语言编写的网络编程框架 ioGame。下面将会从多个方面来对框架做一些简单的介绍。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 是一个&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;轻量级的&lt;/span&gt;&lt;span&gt;网络编程框架，适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景；&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;blockquote&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 有以下特点：&lt;/span&gt;&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span&gt;无锁异步化、事件驱动的架构设计&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;同时支持 TCP、WebSocket、UDP 多种连接方式，并且可扩展&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;支持 protobuf、json 等不同的通信协议&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;集群无中心节点、集群自动化、分布式的设计&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;真轻量级，不依赖任何第三方中间件或数据库就能支持集群、分布式&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;提供多种通讯方式，且逻辑服之间可以相互跨机器通信&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;ioGame 是纯 javaSE 的，使得 ioGame 能与其他框架方便的进行集成、融合；如 spring ... 等&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;学习成本低，开发体验好&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;支持多服单进程、多服多进程的启动和部署方式&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;提供游戏文档生成的辅助功能&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;包体小、启动快、内存占用少&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;提供优雅的路由访问权限控制&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;提供了灵活的线程扩展、设置&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;具备智能的同进程亲和性&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;具备全链路调用日志跟踪特性&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;业务框架提供了插件机制，插件是可插拨、可扩展的&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;JSR380 验证、断言 + 异常机制 = 更少的维护成本&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span&gt;action 支持自动装箱、拆箱基础类型，用于解决&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/blockquote&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 是一个专为网络编程设计的&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;轻量级&lt;/span&gt;&lt;span&gt;框架，它可以帮助你快速地搭建和运行自己的网络服务器。ioGame 适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景。如各种类型和规模的网络游戏，无论是 H5、手游还是 PC 游戏，无论是简单的聊天室，还是复杂的&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;全球同服&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;、回合制游戏、策略游戏、放置休闲游戏、即时战斗、&lt;/span&gt;&lt;span&gt;MMORPG 等，ioGame 都可以满足你的需求。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;ioGame 在打包、内存占用、启动速度等方面也是优秀的。打 jar 包后大约&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;15MB&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;，应用通常会在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;0.x 秒&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;内完成启动，内存占用小。详细请看&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzm6qg2%23LF8Qh&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;快速从零编写服务器完整示例&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#262626&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在生态融合方面，ioGame 可以很方便的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fevkgnz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;与&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;spring 集成&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（5 行代码）；除了 spring 外，还能与任何其他的框架做&lt;/span&gt;&lt;strong&gt;&lt;span&gt;融合&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，如：&lt;/span&gt;&lt;span&gt;solon&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;... 等，从而使用其他框架的相关生态。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;ioGame 在架构上解决了传统框架所产生的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;N*N 问题&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;（&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fcklv8p&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;与传统架构对比&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#262626&quot;&gt;）。传统架构在扩展机器时，需要借助很多第三方中间件，如：Redis、MQ、ZooKeeper ... 等，才能满足整体架构的运作。通常，只要引入了需要安装的中间件才能做到扩展的，那么你的架构或者说框架，基本上与轻量级无缘了。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在轻量级方面，ioGame&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;不依赖任何第三方&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;中间件或数据库&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;就能支持集群、分布式&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，只需要 java 环境就可以运行。这意味着在使用上简单了，在部署上也为企业减少了部署成本、维护难度。使用 ioGame 时，只需一个依赖即可获得整个框架，而无需安装其他服务，如： Nginx、Redis、MQ、Mysql、ZooKeeper、Protobuf 协议编译工具 ... 等。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 具备&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzurusq&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;全链路调用日志跟踪&lt;/span&gt;&lt;/a&gt;&lt;span&gt;特性，这在分布式下非常的实用。该特性为每个请求分配一个唯一标识，并记录在日志中，通过唯一标识可以快速的在日志中过滤出指定请求的信息。ioGame 提供的全链路调用日志跟踪特性更是强大，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;支持跨机器、跨进程&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。简单的说，从玩家的请求进来到结束，无论该请求经过了多少个游戏逻辑服，都能精准记录。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在通讯方式方面，大部分框架只能支持推送（广播）这一类型的通讯方式；ioGame 则提供了多种类型的通讯方式，通过对各种通讯方式的组合使用，可以简单完成以往难以完成的工作，并且这些通讯方式都支持跨进程、跨机器通信，且具备全链路调用日志跟踪。这些通讯方式分别是&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fkrzxcmgoispw0gl8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;请求响应&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（单次请求处理）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fqv4qfo&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;广播&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（推送）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fanguu6&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;单个逻辑服间的相互通讯&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（可跨机器通信、可跨进程通信）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Frf9rb9&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;与同类型多个逻辑服相互通讯&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（可跨多个机器通信、可跨多个进程通信）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzgaldoxz6zgg0tgn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;脉冲通讯&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（可跨多个机器通信、可跨多个进程通信）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmxz33&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;分布式事件总线&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（类似 MQ、Redis 发布订阅机制；可跨多个机器通信、可跨多个进程通信）&lt;/span&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在编码风格上，ioGame 为开发者提供了类 MVC 的编码风格（无入侵的 Java Bean ），这种设计方式很好的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;避免了类爆炸&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。同时，框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问；这使得开发者所编写的代码会非常的优雅，并且具备全链路调用日志跟踪。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;从 ioGame21 开始，框架添加了虚拟线程的相关支持。各逻辑服之间通信阻塞部分使用虚拟线程，这样可以很好的避免阻塞业务线程，并大幅提高了框架的吞吐量。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在线程安全方面，框架为开发者解决了单个玩家的&lt;/span&gt;&lt;strong&gt;&lt;span&gt;并发问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;；即使玩家重新登录后，也会使用相同的线程来消费业务，并推荐使用&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmfy1k&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;领域事件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;来解决同一房间或业务内多个玩家的并发问题。&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Feixd6x&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;框架在线程的扩展性&lt;/span&gt;&lt;/a&gt;&lt;span&gt;上提供了友好的支持，开发者可以很容易的编写出无锁并发代码，这得益于 ioGame 独有的线程执行器设计与扩展。换句话说，你不会因为并发问题烦恼。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在无锁并发方面，ioGame 提供了优雅、独特的线程执行器设计。通过该特性，开发者能轻易的编写出无锁高并发的代码。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在连接方式方面，ioGame 允许开发者&lt;/span&gt;&lt;strong&gt;&lt;span&gt;使用一套业务代码&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;同时支持&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多种连接方式，无需进行任何修改。ioGame 已经支持了 TCP、WebSocket 和 UDP 连接方式，并且也支持在这几种连接方式之间进行灵活切换。连接方式是可扩展的，并且扩展操作也很简单，这意味着之后如果支持了 KCP，无论你当前项目使用的是 TCP、WebSocket 还是 UDP，都可以切换成 KCP；注意了，即使切换到 KCP 的连接方式，现有的业务代码也无需改变。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在通信协议方面，ioGame 让开发者&lt;/span&gt;&lt;strong&gt;&lt;span&gt;用一套业务代码&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，就能轻松&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fuq2zrltrc7to27bt&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;切换和扩展不同的通信协议&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，如 Protobuf、JSON 等。只需一行代码，就可以从 Protobuf 切换到 JSON，无需改变业务方法。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在增减协议方面，ioGame 可以让你在&lt;/span&gt;&lt;strong&gt;&lt;span&gt;新增或减少协议&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;时，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;无需重启&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;游戏对外服与 Broker（游戏网关）；这样既能避免玩家断线，又能避免因新增、减少协议而重启所有机器的痛点。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在协议碎片方面，action 支持自动装箱、拆箱基础类型特性，用于解决&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的问题。同时该特性除了能使你的业务代码更加清晰以外，还能大幅提高开发者在该环节的生产力。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在集群方面，ioGame 的 Broker （游戏网关）采用无中心节点、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fqmo56c&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;自动化的集群设计&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，所有节点平等且自治，不存在单点故障。集群能够&lt;/span&gt;&lt;strong&gt;&lt;span&gt;自动管理和弹性扩缩&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，节点加入或退出时，能够自动保证负载均衡和数据一致性，不影响服务可用性。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在分布式方面，ioGame 的逻辑服使用了分布式设计思想，将服务器分为&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwotnhl&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fensevx&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;游戏逻辑服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;等不同层次，并且每一层都有明确的职责和接口。这样可以提高代码可读性和可维护性，并且方便进行&lt;/span&gt;&lt;strong&gt;&lt;span&gt;水平扩展&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在学习成本方面，ioGame 的学习成本非常低，可以说是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;零学习成本&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，即使没有游戏编程经验，也能轻松上手。开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能用框架开发业务。框架不要求开发者改变编码习惯，而是自身适应开发者的需求。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Funp26u&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;同进程亲和性&lt;/span&gt;&lt;/a&gt;&lt;span&gt;方面，在同一进程内，不同 Netty 实例之间的通信，是通过内存进行传输的，不需要经过网络传输，数据传输速度极快。同进程亲和性指的是，优先访问同进程内的游戏逻辑服，当同进程内没有能处理请求的游戏逻辑服时，才会去其他进程或机器中查找能处理请求的游戏逻辑服；简单点说，框架对于请求的处理很智能，会优先将请求给同进程内的逻辑服消费。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在开发体验方面，ioGame 非常注重开发者的开发体验；框架提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fghng6g&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;JSR380 验证&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Favlo99&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;断言 + 异常机制&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fpf3sx0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;业务代码定位&lt;/span&gt;&lt;/a&gt;&lt;span&gt;，action 支持自动装箱、拆箱基础类型，用于解决&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;协议碎片&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的问题 ... 等。诸多丰富的功能，使得开发者的业务代码更加的清晰、简洁；&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;业务框架提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fbsgvzglvlr5tenao&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;插件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;机制，插件是可插拨、可扩展的。框架内置提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fpf3sx0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;DebugInOut&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fznapzm1dqgehdyw8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;action 调用统计&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzoqabk4gez3bckis&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;业务线程监控插件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;、&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fumzk2d6lovo4n9gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;各时间段调用统计插件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;... 等插件；不同的插件提供了不同的关注点，比如我们可以使用调用、监控等插件相互配合，可以让我们在开发阶段就知道&lt;/span&gt;&lt;strong&gt;&lt;span&gt;是否存在性能问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。合理利用好各个插件，可以让我们在开发阶段就能知道问题所在，提前发现问题，提前预防问题。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;在分布式开发体验方面，通常在开发分布式应用时是需要启动多个进程的。这会让调试与排查问题变得非常困难，从而降低开发者的效率、增加工作量等，这也是很多框架都&lt;/span&gt;&lt;strong&gt;&lt;span&gt;解决不了的问题&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，但 ioGame 做到了！ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分布式系统时更加简单。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;与前端对接联调方面，ioGame 提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Firth38&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;游戏文档生成&lt;/span&gt;&lt;/a&gt;&lt;span&gt;的辅助功能，可以做到&lt;/span&gt;&lt;strong&gt;&lt;span&gt;代码即对接文档&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。简单地说，当业务代码编写完后，框架会自动生成最新的文档。如果没有游戏文档的生成，那么你将要抽出一些时间来编写、维护对接文档的工作，而且当团队人数多了之后，文档就会很乱、不同步、不是最新的、忘记更新等情况就会出现。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;在部署方面，ioGame 支持&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;多服单进程&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;的方式部署，也支持&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;多服多进程&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;多机器的方式部署；在部署方式上可以随意的切换而不需要更改代码。日常中我们可以按照单体思维开发，到了生产可以选择使用多进程的方式部署。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;在安全方面，所有的游戏逻辑服&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fcklv8p%23NQ6Oc&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;不需要开放端口，天然地避免了扫描攻击&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#262626&quot;&gt;。由于不需要为每个逻辑服分配独立的端口，那么我们在使用诸如云服务器之类的服务时，就不需要担心端口开放权限的问题了。别小看这一个环节，通常这些小细节最浪费开发者的时间。由于我们不需要管理这些 IP:Port，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;这部分的工作量就自然地消失了&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;在模拟客户端测试方面，ioGame 提供了&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ftc83ud&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;压测 &amp;amp; 模拟客户端请求&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#333333&quot;&gt;模块。此模块是用于模拟客户端，简化模拟工作量，只需要编写对应请求与回调。除了可以模拟简单的请求外，通常还可以做一些复杂的请求编排，并支持复杂业务的压测。&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;与单元测试不同的是，该模块可以模拟真实的网络环境，并且在模拟测试的过程中与服务器的交互是可持续的、可互动的，同时也是支持自动化的&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fzqgdv3g9if8w37vr&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;架构灵活性&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;方面，ioGame 的架构由三部分组成：1. 游戏对外服、2.Broker（游戏网关）、3. 游戏逻辑服；三者既可相互独立，又可相互融合。这意味着使用 ioGame 可以&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;适应任何类型的游戏&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，因为只需通过调整部署方式，就可以满足不同类型的游戏需求。在 ioGame 中进行这些调整工作非常简单，而且不会对现有代码产生不良影响。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;架构是可以动态扩缩的，游戏对外服、游戏逻辑服、Broker（游戏网关）都&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持动态增加和减少&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;。无论未来玩家数量增加或减少，我们都能够轻松应对。同时，架构是&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持玩家无感知更新&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;的，这得益于分布式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;开发者基于 ioGame 编写的项目模块，通常是条理清晰的，得益于框架对&lt;/span&gt;&lt;strong&gt;&lt;span&gt;路由的合理设计&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，同时也为路由提供了优雅的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fnap5y8p5fevhv99y&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;访问权限控制&lt;/span&gt;&lt;/a&gt;&lt;span&gt;。当我们整理好这些模块后，对于其他开发者接管项目或后续的维护中，会是一个不错的帮助（&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fruaqza%2F%23OBwXQ&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;模块的整理与建议&lt;/span&gt;&lt;/a&gt;&lt;span&gt;）。或许现阶段你感受不到这块的威力，随着你深入地使用实践就能体会到这么设计的诸多好处与优势。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;开发者基于 ioGame 编写的项目，通常是语法简洁的、高性能的、低延迟的。框架最低要求使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;JDK21&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;，这样即可以让项目享受到&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;分代 ZGC&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;带来的改进，还能享受语法上的简洁。分代 ZGC 远低于其&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;亚毫秒级&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;暂停时间的目标，&lt;/span&gt;&lt;span&gt;可以在不影响游戏速度的情况下，清理掉多余的内存；这样就不会出现卡顿或者崩溃的问题了，&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;相当于在项目中变相的引入了一位 JVM 调优大师。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;综上所述，ioGame 是一个非常适合网络游戏开发的框架。可以让你轻松地创建高性能、低延迟、易扩展的游戏服务器，并且节省时间和资源。如果你想要快速地开发出令人惊艳的网络游戏，请不要犹豫，立即选择 ioGame 吧！框架&lt;/span&gt;&lt;span style=&quot;color:#262626&quot;&gt;屏蔽了很多复杂且重复性的工作，并可为项目中的功能模块结构、开发流程等进行&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;清晰的组织定义&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#262626&quot;&gt;，减少了后续的项目维护成本。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;框架在开发、部署、压测 &amp;amp; 模拟测试 ... 等，各个阶段都提供了很好的支持。&lt;/span&gt;&lt;span&gt;相信你已经对 ioGame 有了一个初步的了解，虽然还有很多丰富的功能与特性没有介绍到，但你可以通过后续的实践过程中来深入了解。感谢你的阅读，并期待你使用 ioGame 来打造自己的游戏服务器。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h2&gt;&lt;span&gt;ioGame 的组成&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;ioGame 由 [&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;网络通信框架&lt;/span&gt;&lt;span&gt;] 和 [&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;业务框架&lt;/span&gt;&lt;span&gt;] 组成&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;网络通信框架：职责是各服务器之间的网络通信&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;业务框架：职责是业务逻辑的处理方式和编写方式&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;网络通信框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sofastack.tech%2Fprojects%2Fsofa-bolt%2Foverview%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;SOFABolt&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是蚂蚁金融服务集团开发的一套基于 Netty 实现的网络通信框架。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;为了让 Java 程序员能将&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;更多的精力放在&lt;/span&gt;&lt;span&gt;基于网络通信的&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;业务逻辑实现上&lt;/span&gt;&lt;span&gt;，而不是过多的纠结于网络底层 NIO 的实现以及处理难以调试的网络问题，Netty 应运而生。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;为了让中间件开发者能将更多的精力放在产品功能特性实现上，而不是重复地一遍遍制造通信框架的轮子，SOFABolt 应运而生。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;Bolt 名字取自迪士尼动画 - 闪电狗，是一个基于 Netty 最佳实践的&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;轻量、易用、高性能、易扩展&lt;/span&gt;&lt;span&gt;的通信框架。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;业务框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;如果说&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;sofa-bolt&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是为了让 Java 程序员能&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;将更多的精力放在基于网络通信的业务逻辑实现上&lt;/span&gt;&lt;span&gt;。而业务框架正是&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;解决&lt;/span&gt;&lt;span&gt;业务逻辑&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;如何方便实现&lt;/span&gt;&lt;span&gt;这一问题上。业务框架是游戏框架的一部分，职责是简化程序员的业务逻辑实现，业务框架使程序员能够快速的开始编写游戏业务。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;业务框架对于每个 action （即业务的处理方法） 都是通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/p/reflectasm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;asm&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;与 Singleton、Flyweight 、Command 等设计模式结合，对 action 的获取上通过 array 来得到，是一种近原生的方式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;单线程中，业务框架平均每秒可以执行 1152 万次业务逻辑。&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span&gt;架构简图&lt;/span&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;387&quot; src=&quot;https://foruda.gitee.com/images/1708310869810934709/12963674_5475.jpeg&quot; width=&quot;621&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;通过 ioGame 你可以很容易的搭建出一个集群无中心节点、集群自动化、分布式的网络游戏服务器！&lt;/span&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;从图中可以看出，游戏网关支持以集群方式启动多个实例。这个设计选择了集群的方式，因为游戏网关通常是无状态的，主要作用是解耦各逻辑服之间的关系、负载均衡、调度和转发任务。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;而游戏对外服、游戏逻辑服使用分布式设计，支持启动多个相同类型的服务。这意味着，当玩家数量增加时，我们可以轻松增加相应类型的游戏逻辑服以处理更多请求。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;以游戏逻辑服为例，假设我们启动了两个 A 类型的游戏逻辑服，分别为 A-1 和 A-2。当玩家向 A 类型的游戏逻辑服发起多次请求时，游戏网关会使用默认的随机负载策略将请求分配给 A-1 和 A-2 来处理。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;现在我们明白，游戏对外服和游戏逻辑服都支持动态增加和减少。无论未来玩家数量增加或减少，我们都能够轻松应对。架构是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;支持玩家无感知更新&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的，这得益于分布式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;此外，框架还支持玩家&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fidl1wm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;动态绑定游戏逻辑服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;；玩家与游戏逻辑服绑定后，之后的请求都由该游戏逻辑服来处理。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;除了游戏之外，ioGame 也适用于物联网相关项目。只需将图中的玩家视为具体的设备，即使存在数亿个设备，ioGame 的架构也可以轻松支持。从 2022 年开始，已经有一些物联网公司开始采用这一解决方案，并得到了很好的体验。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;ioGame 适用于&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景；&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;无锁异步化与事件驱动的架构设计、集群无中心节点、自带负载均衡、分布式支持、可动态增减机器、避免类爆炸的设计；&lt;/span&gt;&lt;/p&gt; 
 &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border-spacing:1px; border:1px solid #d9d9d9; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 20px; max-width:100%; overflow:auto; table-layout:fixed; width:583px; word-break:keep-all&quot;&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td style=&quot;background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;名称&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;扩展方式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;职责&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;与玩家连接、交互&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;游戏逻辑服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;处理具体业务逻辑&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;Broker（游戏网关）&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;集群&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style=&quot;border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;调度和转发任务；&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;通过 ioGame 可以使得游戏编程变得简单，下面是一个业务示例&lt;/h2&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;协议文件定义&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;首先我们自定义一个协议文件，这个协议文件作为我们的业务载体描述。这个协议是纯 java 代码编写的，使用的是 jprotobuf，jprotobuf 是对&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;google protobuf&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的简化使用，性能同等。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;可以把这理解成 DTO、POJO、业务数据载体等，其主要目的是用于业务数据的传输；&lt;/span&gt;&lt;/p&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;/** 请求 */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@ProtobufClass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@FieldDefaults&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(level = AccessLevel.PUBLIC)
public class HelloReq {
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;Action&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;游戏服务器的编程，游戏服务器接收业务数据后，对业务数据进行处理；下面这段代码可以同时支持 TCP、WebSocket、UDP 通信方式。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;示例代码中展示了玩家的请求与响应处理，还展示了跨服（跨进程、跨机器）的请求处理的示例。&lt;/span&gt;&lt;span style=&quot;background-color:#f5f5f5; color:#262626&quot;&gt;无入侵的 Java Bean。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ActionController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;DemoAction&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ActionMethod&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; HelloReq &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(HelloReq helloReq)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 业务数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; newHelloReq = &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; HelloReq();
        newHelloReq.name = helloReq.name + &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;, I&#39;m here &quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; newHelloReq;
    }

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 注意，这个方法只是为了演示而写的；（ioGame21 开始支持）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 效果与上面的方法一样，只不过是用广播（推送）的方式将数据返回给请求方&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ActionMethod&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;here&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(HelloReq helloReq, FlowContext flowContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 业务数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; newHelloReq = &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; HelloReq();
        newHelloReq.name = helloReq.name + &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;, I&#39;m here &quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

        flowContext.broadcastMe(newHelloReq);
    }

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 跨服调用示例，下面分别展示了同步与异步回调的写法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;testShowInvokeModule&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(FlowContext flowContext)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;/* * 框架为跨服请求提供了同步、异步、异步回调的编码风格 api。（ioGame21 开始支持） */&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; cmdInfo = CmdInfo.of(&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;);
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; yourData = ... 你的请求参数
        
        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 跨服请求（异步回调 - 无阻塞）-- 路由、请求参数、回调。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        flowContext.invokeModuleMessageAsync(cmdInfo, yourData, responseMessage -&amp;gt; {
            &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; helloReq = responseMessage.getData(HelloReq&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
             &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// --- 此异步回调，具备全链路调用日志跟踪 ---&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
            log.info(&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;异步回调 : {}&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, helloReq);
        });


        &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;// 跨服请求（同步 - 阻塞）-- 路由、请求参数。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        ResponseMessage responseMessage = flowContext.invokeModuleMessage(cmdInfo, yourData);
        &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; helloReq = responseMessage.getData(HelloReq&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;
        log.info(&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;同步调用 : {}&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, helloReq);
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;一个方法（here）在业务框架中表示一个&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsqcevl&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Action&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（一个业务动作）。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;方法声明的参数是用于接收前端传入的业务数据，在方法 return 时，数据就可以被游戏前端接收到。程序员可以不需要关心业务框架的内部细节。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;从上面的示例可以看出，这和普通的 java 类并无区别，同时这种设计方式&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#fa8c16&quot;&gt;避免了类爆炸&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。如果&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;只负责编写游戏业务&lt;/span&gt;&lt;span&gt;，那么对于业务框架的学习可以&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;到此为止&lt;/span&gt;&lt;span&gt;了。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;游戏编程就是如此简单&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;问：我可以开始游戏服务&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;器&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;的编程了吗？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;是的，你已经可以开始游戏服务&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;器&lt;/span&gt;&lt;span&gt;的编程了。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;访问示例（控制枱）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;当我们访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;here&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;方法时（通常由游戏前端来请求），控制枱将会打印&lt;/span&gt;&lt;/p&gt; 
  &lt;pre&gt;&lt;code&gt;┏━━━━━ &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;Debug&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[(DemoAction.java:4).hello]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[cmd:1-0 65536]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[逻辑服 [xxx 逻辑服]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[76526c134cc88232379167be83e4ddfc]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]
┣ &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;userId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
┣ 参数: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;active&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(id=&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;101&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, name=塔姆)
┣ 响应: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(name=塔姆, I&#39;m here )
┣ 时间: &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (业务方法总耗时)
┗━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[ioGameVersion]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[线程:User-8-2]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━ &lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;[traceId:956230991452569600]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━&lt;/code&gt;&lt;/pre&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span&gt;控制枱打印说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#e8323c&quot;&gt;Debug. [(DemoAction.java:4).here]&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;:&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;表示执行业务的是&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;DemoAction&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类下的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;here&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法，&lt;/span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;表示业务方法所在的代码行数。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在工具中点击控制枱的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;DemoAction.java:4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;这条信息，就可以跳转到对应的代码中（&lt;/span&gt;&lt;span style=&quot;color:#52c41a&quot;&gt;快速导航到对应的代码&lt;/span&gt;&lt;span&gt;），这是一个开发良好体验的开始！&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;userId&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 当前发起请求的，用户 id。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;参数&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;: 通常是游戏前端传入的值。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;响应&lt;/span&gt;&lt;span&gt;：通常是业务方法返回的值 ，业务框架会把这个返回值推送到游戏前端。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;时间&lt;/span&gt;&lt;span&gt;：执行业务方法总耗时，我们可根据业务方法总耗时的时长来优化业务。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;路由信息&lt;/span&gt;&lt;span&gt;：[cmd - subCmd]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsoxp4u&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;路由&lt;/span&gt;&lt;/a&gt;&lt;span&gt;是唯一的访问地址。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;ioGameVersion&lt;/span&gt;&lt;span&gt;：表示当前所使用的 ioGame 版本。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;线程&lt;/span&gt;&lt;span&gt;：当前执行 action 所使用的线程。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;traceId&lt;/span&gt;&lt;span&gt;：全链路调用日志跟踪 id，每个请求唯一。（该特性在分布式下非常实用）&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#df2a3f&quot;&gt;逻辑服&lt;/span&gt;&lt;span&gt;：当前游戏逻辑服与其 id&lt;/span&gt;&lt;/p&gt; 
   &lt;/blockquote&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;有了以上信息，游戏开发者可以很快的定位问题。如果没有可视化的信息，开发中会浪费很多时间在前后端的沟通上。问题包括：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;是否传参问题 （游戏前端说传了）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;是否响应问题（游戏后端说返回了）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;业务执行时长问题 （游戏前端说没收到响应， 游戏后端说早就响应了）&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;其中&lt;/span&gt;&lt;span style=&quot;color:#f5222d&quot;&gt;代码导航&lt;/span&gt;&lt;span&gt;可以让开发者快速的跳转到业务类对应代码中，在多人合作的项目中，可以快速的知道业务经过了哪些方法的执行，使得我们可以快速的进行阅读或修改；&lt;/span&gt;&lt;/p&gt; 
  &lt;hr&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;h2&gt;&lt;span&gt;框架内置的其他功能&lt;/span&gt;&lt;/h2&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span&gt;内置多种可选模块，可按需选择，以方便应用开发：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgmfy1k&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;领域事件&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;（&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;轻量级&lt;/span&gt;&lt;span&gt;单机最快 MQ --&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;disruptor&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;；通过&lt;/span&gt;&lt;span&gt;领域事件模块，可为你的系统实现类似 Guava-EventBus、Spring 事件驱动模型 ApplicationEvent、业务解耦、规避并发、不阻塞主线程... 等，各种浪操作）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fniflk0&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;任务延时器&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;（将来某个时间可对任务进行执行、暂停、取消等操作，并不是类似 Quartz 的任务调度）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fekx6ve&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;多环境切换&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;（不同运行环境下的配置支持）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fvpe2t6&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;light-jprotobuf&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（&lt;/span&gt;&lt;span style=&quot;color:#333333&quot;&gt;补足 jprotobuf 不能让多个对象在单个 .proto 源文件中生成的需求，并简化 jprotobuf 对源文件的注释&lt;/span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwz7af5&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;分布式锁&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(基于 Redisson 的简单实现)&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span&gt;内置的其他功能：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fuueq3i&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;心跳相关&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fhv5qqh&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;用户上线、离线相关的钩子方法&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwg6lk7&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;UserSessions&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;（对所有用户 UserSession 的管理，统计在线用户等）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fwg6lk7&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;UserSession&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(与 channel 是 1:1 的关系，可取到对应的 userId、channel 等信息。)&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Ftywkqv&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;登录相关&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（提供重复登录、顶号等相关增强功能）&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fieimzn&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;业务参数基础类型，自动装箱、拆箱&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（解决协议碎片）&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;hr&gt; 
  &lt;h2&gt;&lt;span&gt;适合人群？&lt;/span&gt;&lt;/h2&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;长期从事 web 内部系统开发人员， 想了解游戏的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;刚从事游戏开发的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#333333&quot;&gt;未从事过游戏开发，但却对其感兴趣的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;对设计模式在实践中的应用和 sofa-bolt 有兴趣的学习者&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;可以接受新鲜事物的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#40485b&quot;&gt;想放弃祖传代码的&lt;/span&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;推荐实际编程经验一年以上的人员。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;ioGame&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;提供了丰富的在线高质量使用文档，为你的团队助力，带上你们的小伙伴一起，这样就不用手把手的教了。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291880/iogame-21-7-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291880/iogame-21-7-released</guid>
            <pubDate>Sat, 11 May 2024 03:55:45 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>夜莺监控新版上线内置指标功能</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Prometheus 生态里如果要查询数据，需要编写 promql，对于普通用户来说，门槛有点高。通常有两种解法，一个是通过 AI 的手段做翻译，你用大白话跟 AI 提出你的诉求，让 AI 帮你写 promql，另一种是平台里内置现成的 promql，覆盖常用场景开箱即用。夜莺监控（Nightingale）最近上线了内置指标功能，可以方便做知识沉淀，让普通用户也能开箱即用。&lt;/p&gt; 
&lt;h2&gt;版本说明&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;需要 v7.0.0.beta3 以上版本支持。虽然是 beta 版本，实际上既有功能都是稳定的，当前还在持续往里添加新功能，而根据发版节奏，正式版本固定每年七八月份发布，所以当前的版本都是 beta，实际是可以用于生产的，可以放心升级。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;指标视图长下面这个样子：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;20240511092248&quot; src=&quot;https://download.flashcat.cloud/ulric/20240511092248.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;核心就是把 promql 提前内置，配上中文名称，难理解的还会配上详细解释，同时分门别类，最终用户点击指标的中文名称就可以直接出图了。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;点击某个指标，侧拉板里出图，如下：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;20240511093207&quot; src=&quot;https://download.flashcat.cloud/ulric/20240511093207.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;这样一来，用户不需要懂 promql，只需要知道自己要查什么，就可以直接查到，非常方便。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;默认提供的 promql 都是查询整个时序库的，没有过滤条件。对于某个业务的研发人员，可能只想看自己负责的服务的指标，此时可以提前配置一些过滤条件，选中某个过滤条件之后再点击指标，就会自动在 promql 中增加过滤条件，比如下面的例子，我配置了一个这样的过滤条件：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;20240511093613&quot; src=&quot;https://download.flashcat.cloud/ulric/20240511093613.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;这里我使用 ident 标签做过滤，值为 categraf01，你完全可以自定义其他标签的过滤条件。再次点击指标，效果如下：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;20240511092952&quot; src=&quot;https://download.flashcat.cloud/ulric/20240511092952.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;可以看到 promql 已经被自动修改了，添加上了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ident=&quot;categraf01&quot;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的过滤条件。&lt;/p&gt; 
&lt;h2&gt;其他改动&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;v7.0.0.beta3 版本的其他 changelog 如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;feat: 单点登录配置，敏感信息支持使用加密变量&lt;/li&gt; 
 &lt;li&gt;refactor: Prometheus 源的即时查询支持使用内置指标查询数据，易用性提升&lt;/li&gt; 
 &lt;li&gt;refactor: 一些 TextArea 组件打开 autoSize 高度会自动随着内容撑开&lt;/li&gt; 
 &lt;li&gt;refactor: 仪表盘只会在点击全屏后展示关闭说明提示&lt;/li&gt; 
 &lt;li&gt;fix: 修复订阅规则多选告警规则时会横向溢出问题&lt;/li&gt; 
 &lt;li&gt;fix: 修复 VictoriaMetrics 源的仪表盘变量查询时间范围大于 1 天时可能存在缓存数据的问题&lt;/li&gt; 
 &lt;li&gt;fix: 修复切换账号后本地缓存的 gid 不合法导致查询错误的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;升级注意&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;替换二进制以及 integrations 目录，重启即可。夜莺会自动创建表结构，如果你的夜莺所用的数据库连接账号不具备建表权限，就需要手工建表了，语句如下：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;TABLE&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;builtin_metrics&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;id&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; bigint unsigned &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;unique identifier&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;collector&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;type of collector&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;typ&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;type of metric&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;name of metric&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;unit&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;unit of metric&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;lang&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;language of metric&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;note&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;4096&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;description of metric in Chinese&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;expression&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;4096&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;expression of metric&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;created_at&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; bigint &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;create time&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;created_by&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;creator&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;updated_at&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; bigint &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#ae81ff&quot;&gt;0&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;update time&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;updated_by&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;updater&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;PRIMARY&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;KEY&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;id&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;UNIQUE&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;KEY&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;idx_collector_typ_name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;lang&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;,&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;collector&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;, &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;typ&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;, &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;INDEX&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;idx_collector&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;collector&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;INDEX&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;idx_typ&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;typ&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;INDEX&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;idx_name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;    &lt;span style=&quot;color:#66d9ef&quot;&gt;INDEX&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;idx_lang&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;lang&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;) ENGINE&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;InnoDB &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;utf8mb4;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#66d9ef&quot;&gt;CREATE&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;TABLE&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;metric_filter&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;id&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; bigint &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; AUTO_INCREMENT &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;unique identifier&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;name of metric filter&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;configs&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;4096&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;configuration of metric filter&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;groups_perm&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; text,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;create_at&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; bigint &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;create time&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;create_by&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;creator&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;update_at&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; bigint &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;0&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;update time&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;update_by&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; varchar(&lt;span style=&quot;color:#ae81ff&quot;&gt;191&lt;/span&gt;) &lt;span style=&quot;color:#66d9ef&quot;&gt;NOT&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;NULL&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;COMMENT&lt;/span&gt; &lt;span style=&quot;color:#e6db74&quot;&gt;&#39;updater&#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#66d9ef&quot;&gt;PRIMARY&lt;/span&gt; &lt;span style=&quot;color:#66d9ef&quot;&gt;KEY&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;id&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;span style=&quot;color:#66d9ef&quot;&gt;KEY&lt;/span&gt; &lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;idx_name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt; (&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;name&lt;span style=&quot;color:#f92672&quot;&gt;`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;) ENGINE&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;InnoDB &lt;span style=&quot;color:#66d9ef&quot;&gt;DEFAULT&lt;/span&gt; CHARSET&lt;span style=&quot;color:#f92672&quot;&gt;=&lt;/span&gt;utf8mb4;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;小结&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;看到夜莺监控（Nightingale）发布的这个新功能不错，介绍给大家，希望对大家有所帮助。据说，更多有趣的功能也快来了，不说了，快去升级吧，跟紧节奏！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291877/nightingale-v7-0-0-beta3</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291877/nightingale-v7-0-0-beta3</guid>
            <pubDate>Sat, 11 May 2024 03:39:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>企业微信 Java 开发包 WECOM-SDK 1.2.7 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/felord/wecom-sdk&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;WECOM-SDK&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 是开源的企业微信开放 API 的 Java 实现，是目前最完整的 Java 实现。目前已经实现了企业微信通讯录管理、客户管理、上下游、微信客服、素材管理、消息推送、企微机器人、身份验证、应用管理、汇报、收集表、考勤等相关接口，开发人员不需要很高的学习成本就能快速优雅地接入企业微信。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;本次更新主要优化了一些 API,响应企业微信 20240408 新的 API 变更，具体参见文末更新说明。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;仓库地址&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;gitee: &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/felord/wecom-sdk&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;https://gitee.com/felord/wecom-sdk&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;github: &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNotFound403%2Fwecom-sdk&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;https://github.com/NotFound403/wecom-sdk&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;开发文档&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;文档：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffelord.cn%2Fwecom%2Foverview.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://felord.cn/wecom/overview.html&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;特性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持多企业微信同时配置作业&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持响应式，高性能&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;集成方便，适用于各种 Java 生态&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;学习成本低&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;目前实现企业微信接口&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;200&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;多个，能满足大部分企业微信业务场景的需求&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;全参数封装，入参、出参高度语义化封装，再也不担心组织参数、解析参数的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;实现统一回调，所有回调事件可集中异步处理，开发者只需要关心业务逻辑的开发&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;由 SDK 接管 AccessToken 生命周期，开发者无需关心 AccessToken 的管理。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Maven 中央仓库座标&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;普通版本&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;dependency&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;cn.felord&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;wecom-sdk&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;1.2.7&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;dependency&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;响应式版本&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;dependency&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;cn.felord&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;groupId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;rx-wecom-sdk&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;artifactId&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;1.2.7&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;version&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;dependency&lt;/span&gt;&lt;span style=&quot;color:#80cbc4&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;采用技术栈&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Retrofit2&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Rxjava3&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Okhttp4&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Jackson2&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;XStream&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#363c42; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;🚀1.2.7 更新&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加对企业微信审批银行控件赋值的支持&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加企业成员 openid 转 userid 相关 API&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;对一些 API 接口的入参进行了简化&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;对企业微信审批文本控件进行了优化&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加对企业微信审批流程节点的支持&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加企业微信应用 MP 消息的内部分享安全策略&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:var(--text-color); margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加对企业微信新特性的回调支持&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291872/wecom-sdk-1-2-7-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291872/wecom-sdk-1-2-7-released</guid>
            <pubDate>Sat, 11 May 2024 03:26:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>FreeFileSync 13.6 发布，文件夹比较与同步软件</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;FreeFileSync 是一款开源软件，适用于 Windows、macOS 和 Linux。FreeFileSync 本质是一个用于文件夹对比和同步的软件，它可以创建和管理所有重要文件的备份副本。FreeFileSync 不是每次都复制每个文件，而是确定源文件夹和目标文件夹之间的差异，并只传输所需的最低数据量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;FreeFileSync 13.6&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;针对中/大尺寸行，压缩父路径显示&lt;/li&gt; 
 &lt;li&gt;修复了由于系统延迟导致鼠标输入排队时的崩溃问题&lt;/li&gt; 
 &lt;li&gt;同步进度对话框显示时，不从其他应用程序&amp;nbsp;steal focus&lt;/li&gt; 
 &lt;li&gt;修复 WAV 播放开始时的噼啪声 (Linux)&lt;/li&gt; 
 &lt;li&gt;防止中间网格工具提示复盖同步方向&lt;/li&gt; 
 &lt;li&gt;禁用 SFTP 连接的 Nagle 算法&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更新说明：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffreefilesync.org%2F&quot; target=&quot;_blank&quot;&gt;https://freefilesync.org/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291858/freefilesync-13-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291858/freefilesync-13-6-released</guid>
            <pubDate>Sat, 11 May 2024 02:02:19 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>MeEdu v4.9.9 版本上线，在线网校解决方案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;MeEdu v4.9.9 发布，更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：API 限流 IP 白名单配置&lt;/li&gt; 
 &lt;li&gt;新增：代理带名单配置，从而获得客户真实 IP&lt;/li&gt; 
 &lt;li&gt;新增：Docker 部署&lt;/li&gt; 
 &lt;li&gt;新增：docker-compose 部署&lt;/li&gt; 
 &lt;li&gt;新增：H5 使用 React18 重新开发&lt;/li&gt; 
 &lt;li&gt;新增：系统初次安装需要配置 API,PC,H5 的访问地址才可以使用后台&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Github：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FQsnh%2Fmeedu&quot; target=&quot;_blank&quot;&gt;https://github.com/Qsnh/meedu&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Gitee：&lt;a href=&quot;https://gitee.com/myteng/MeEdu&quot;&gt;https://gitee.com/myteng/MeEdu&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;官网：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmeedu.vip%2F&quot; target=&quot;_blank&quot;&gt;https://meedu.vip&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291848/meedu-4-9-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291848/meedu-4-9-9-released</guid>
            <pubDate>Sat, 11 May 2024 00:45:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开放签开源工具版升级至 1.3 版本，新增个人印章样式</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源工具版自上线以后广受大家的喜欢，尤其是个人用户或者小微软件开发公司，可以依据工具版能力开发出自用简单的电子签名应用软件。近期在收集优秀案例，后期逐步向广大用户展示共享&lt;span style=&quot;color:#e74c3c&quot;&gt;【欢迎开源用户投稿开发案例，可通过我们的自媒体账号推广宣传】。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;工具版 1.3 版本更新内容如下：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、新增骑缝签章距离顶部的扩展签名。【原版本只支持固定位置，现版本支持自定义】；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、新增证书申请、位置签署、骑缝签的 Test 测试类【&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;方便小白用户快速上手，可根据我们的测试类进行体验&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;】&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、新增生成个人印章测试类【支持长方形无框、长方形有框、正方形无框、正方形有框&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，如图&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;】；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;400&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d1c3b0f64bb3991c9a3315376086f8dcaea.png&quot; width=&quot;900&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291788</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291788</guid>
            <pubDate>Fri, 10 May 2024 09:25:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Shopwind 社区团购独立版发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Shopwind 社区团购独立版发布，系统简洁明了，用户移动端下单、平台/商家配送、自提点提货、次日可达。通过小区团长、辐射小区用户，社区团购平台或者社区团购风格模板可供参考选择。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#353535&quot;&gt;主页预览&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;667&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3120e4ece6d645bd259690ebc325999f3ea.jpg&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#353535&quot;&gt;&lt;strong&gt;分类页&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;667&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0e196533f36e3d529dae9f6a0213c550c63.jpg&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;演示体验&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;H5 端体验： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcgb.shopwind.net%2Fh5&quot; target=&quot;_blank&quot;&gt;https://cgb.shopwind.net/h5&lt;/a&gt; 买家测试账号：18978189192 密码：111111 支付密码：111111&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;商家后台： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcgb.shopwind.net&quot; target=&quot;_blank&quot;&gt;https://cgb.shopwind.net&lt;/a&gt; 商家测试账号：18978189171 密码：111111&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;平台后台： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcgb.shopwind.net%2Fadmin&quot; target=&quot;_blank&quot;&gt;https://cgb.shopwind.net/admin&lt;/a&gt; 平台管理员账号：admin 密码：111111&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;团长登陆： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcgb.shopwind.net%2Fh5%2Fpages%2Fguider%2Findex%2Findex&quot; target=&quot;_blank&quot;&gt;https://cgb.shopwind.net/h5/pages/guider/index/index&lt;/a&gt; 平台管理员账号：18999999999 密码：111111&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291783</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291783</guid>
            <pubDate>Fri, 10 May 2024 09:10:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>蓦然回首，木已成林，.NET 框架 Furion 斩获近 1.2 万⭐，v4.9.3</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;自上次发布以来的短短 20 天里，Furion 框架再次爆发了增长势头。在此期间，Furion 文档的注册用户激增，已突破 6 万人大关，其中近 1.9 万用户选择升级为文档会员，更有近 620 位用户开通了 VIP 会员。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;同时，在 Gitee 平台上，我们收获了近 12K Stars 评价和超过 6.2K Watching，这一成绩充分证明了 Furion 框架的受欢迎程度和专业实力。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此外，&lt;strong&gt;我们的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nuget.org%2Fprofiles%2Fmonk.soul&quot; target=&quot;_blank&quot;&gt;NuGet&lt;/a&gt;&amp;nbsp;总下载量也迈过了 1600 万的里程碑&lt;/strong&gt;，这一数字不仅是对我们努力的肯定，更是对未来发展的坚实支撑。这一系列的成绩值得我们骄傲和记录，同时也激励着我们不断前行，为 Furion 框架的未来发展继续贡献力量。&lt;/p&gt; 
&lt;h3&gt;商业化半年回顾&lt;/h3&gt; 
&lt;p&gt;六个月的时光匆匆而过，Furion 框架文档收费的实施也走过了其初始阶段。站在这个节点上，我想与大家分享一些感悟和体会。&lt;/p&gt; 
&lt;p&gt;首先，&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;开源确实很棒，它打破了技术的壁垒，让知识得以自由传播。然而，开源并不意味着免费。开源项目的持续运营和维护需要巨大的投入成本，这些成本可能包括服务器费用、人力成本、时间投入等。Furion 框架亦是如此，我们一直致力于为开发者提供高质量的工具和文档，但这背后是我们团队无数日夜的辛勤付出&lt;/span&gt;。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;文档收费的决策，我们在充分考量现有情况后，为确保 Furion 框架能够持续、健康地发展而做出的选择。&lt;/strong&gt;我们希望通过这一方式，为团队提供稳定的资金来源，以便我们能够更加专注于框架的研发、优化以及文档的更新和维护。&lt;/p&gt; 
&lt;p&gt;这六个月里，我们听到了许多声音，有支持、有理解，也有质疑和担忧。但无论如何，&lt;strong&gt;我们始终坚信，只有确保了项目的持续运营和健康发展，才能更好地为开发者服务。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通过文档收费，我们得以更加专注于提升文档质量、优化用户体验。我们倾听每一位开发者的反馈和建议，努力让 Furion 框架的文档更加完善、易用。同时，我们也积极投入资源，加强技术支持和研发力度，为开发者提供更加高效、稳定的开发工具。&lt;/p&gt; 
&lt;p&gt;回顾这六个月，我们深刻体会到开源项目的不易。但我们也看到了社区的力量和潜力。&lt;strong&gt;感谢每一位支持 Furion 的开发者，是你们的信任让我们有动力前行。我们将继续努力，为开源社区贡献更多的力量。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1439&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-12bc8305d42f0fabd795d57fc1d5ec8be1c.png&quot; width=&quot;1385&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1234&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9185a524e7c9279c709471071268eef03bb.png&quot; width=&quot;1206&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;蓦然回首，木已成林&lt;/h3&gt; 
&lt;p&gt;基于 Furion 开源项目已在各大平台崭露头角，成为行业的翘楚。据统计，&lt;strong&gt;已有超过 4200 家企业选择成为 Furion 会员，并在招聘平台上发布相关职位，这些企业均采用了 Furion 进行项目开发&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;借助大数据工具的分析，我们进一步发现，利用 Furion 构建的网站系统数量已超过 20 万&lt;/strong&gt;，充分证明了其在业界的广泛认可与实际应用价值。&lt;/p&gt; 
&lt;p&gt;招聘信息：&lt;a href=&quot;https://www.oschina.net/news/288793/furion-4-9-2-25-released&quot;&gt;https://www.oschina.net/news/288793/furion-4-9-2-25-released&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1333&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b22578146f5eaab8754392a5bd492e3ec5e.png&quot; width=&quot;1708&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;项目信息&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee：&lt;strong&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion&quot;&gt;https://gitee.com/dotnetchina/Furion&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Github：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMonkSoul%2FFurion&quot; target=&quot;_blank&quot;&gt;https://github.com/MonkSoul/Furion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;NuGet：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nuget.org%2Fprofiles%2Fmonk.soul&quot; target=&quot;_blank&quot;&gt;https://www.nuget.org/profiles/monk.soul&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档：&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffurion.net&quot; target=&quot;_blank&quot;&gt;https://furion.net&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;本期亮点&lt;/h2&gt; 
&lt;p&gt;随着 Furion 近期用户数量的显著增长，其需求也呈现出井喷态势，因此本次更新汇聚了众多引人注目的亮点。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;1. 新增，远程请求&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;对象，支持携带更多返回数据&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;早期的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;版本在处理远程请求时，提供了多样化的返回类型支持，涵盖了从原始的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseMessage&lt;/code&gt;、&lt;code&gt;Stream&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;到具体类型&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;、字符串和字节数组等。如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;字符串拓展方式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;// HttpResponseMessage
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using var response = await &quot;https://furion.net/&quot;.GetAsync();&lt;/span&gt;
// Stream
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var (stream, encoding, response) = await &quot;https://furion.net/&quot;.GetAsStreamAsync();&lt;/span&gt;
// T
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var user = await &quot;https://furion.net/&quot;.GetAsAsync&amp;lt;User&amp;gt;();&lt;/span&gt;
// String
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var str = await &quot;https://www.baidu.com&quot;.GetAsStringAsync();&lt;/span&gt;
// Byte[]
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var bytes = await &quot;https://www.baidu.com&quot;.GetAsByteArrayAsync();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;代理方式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;public interface IHttp : IHttpDispatchProxy
{
    // HttpResponseMessage
    [Post(&quot;https://furion.net/post&quot;)]
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+   Task&amp;lt;HttpResponseMessage&amp;gt; PostXXXAsync();&lt;/span&gt;
    // Stream
    [Post(&quot;https://furion.net/post&quot;)]
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+   Task&amp;lt;Stream&amp;gt; PostXXXAsync();&lt;/span&gt;
    // T
    [Post(&quot;https://furion.net/post&quot;)]
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+   Task&amp;lt;User&amp;gt; PostXXXAsync();&lt;/span&gt;
    // String
    [Post(&quot;https://furion.net/post&quot;)]
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+   Task&amp;lt;string&amp;gt; PostXXXAsync();&lt;/span&gt;
    // Byte[]
    [Post(&quot;https://furion.net/post&quot;)]
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+   Task&amp;lt;byte[]&amp;gt; PostXXXAsync();&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;然而，这些方法的局限性在于每次调用仅能获取单一结果，导致若需同时访问响应信息及内容时，不得不先获取&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseMessage&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;后再做额外转换，影响了开发效率和代码简洁度。&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;本次&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的更新，引入了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;新类型，旨在一举解决上述难题。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;这一新型响应模型不仅包含了目标数据类型&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的结果，还封装了原始的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseMessage&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;对象以及内容编码信息，为开发者提供了全方位的响应处理能力。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;字符串拓展方式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;// 支持多种类型&lt;/em&gt;
&lt;strong&gt;var&lt;/strong&gt; httpResponseModel = &lt;strong&gt;await&lt;/strong&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;https://furion.net/&quot;&lt;/span&gt;.GetAsync&amp;lt;HttpResponseModel&amp;lt;&lt;strong&gt;string&lt;/strong&gt;&amp;gt;&amp;gt;();
&lt;strong&gt;var&lt;/strong&gt; httpResponseModel = &lt;strong&gt;await&lt;/strong&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;https://furion.net/&quot;&lt;/span&gt;.GetAsync&amp;lt;HttpResponseModel&amp;lt;Stream&amp;gt;&amp;gt;();
&lt;strong&gt;var&lt;/strong&gt; httpResponseModel = &lt;strong&gt;await&lt;/strong&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;https://furion.net/&quot;&lt;/span&gt;.GetAsync&amp;lt;HttpResponseModel&amp;lt;&lt;strong&gt;byte&lt;/strong&gt;[]&amp;gt;&amp;gt;();
&lt;strong&gt;var&lt;/strong&gt; httpResponseModel = &lt;strong&gt;await&lt;/strong&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;&quot;https://furion.net/&quot;&lt;/span&gt;.GetAsync&amp;lt;HttpResponseModel&amp;lt;User&amp;gt;&amp;gt;();&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;代理方式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;public&lt;/strong&gt; &lt;strong&gt;interface&lt;/strong&gt; &lt;strong&gt;IHttp&lt;/strong&gt; : &lt;strong&gt;IHttpDispatchProxy&lt;/strong&gt;
{
    &lt;em&gt;// 支持多种类型&lt;/em&gt;
    [&lt;span&gt;Post(&lt;span&gt;&quot;https://furion.net/post&quot;&lt;/span&gt;)&lt;/span&gt;]
    Task&amp;lt;HttpResponseModel&amp;lt;&lt;strong&gt;string&lt;/strong&gt;&amp;gt;&amp;gt; PostXXXAsync();
    Task&amp;lt;HttpResponseModel&amp;lt;Stream&amp;gt;&amp;gt; PostXXXAsync();
    Task&amp;lt;HttpResponseModel&amp;lt;&lt;strong&gt;byte&lt;/strong&gt;[]&amp;gt;&amp;gt; PostXXXAsync();
    Task&amp;lt;HttpResponseModel&amp;lt;User&amp;gt;&amp;gt; PostXXXAsync();
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;无论是通过字符串拓展方法还是代理接口调用，用户现在只需一个调用即可同时获得响应体数据、响应消息对象及编码信息。通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;httpResponseModel.Response&lt;/code&gt;、&lt;code&gt;.Result&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;及&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;.Encoding&lt;/code&gt;，分别快速访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseMessage&lt;/code&gt;、数据结果及内容编码。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Stream、String、Byte[]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和自定义类型作为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;，确保了广泛适用性，同时明确了不支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseMessage&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;自身作为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的类型限制，防止潜在的类型循环引用问题。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;2.&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;新增&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;EntityFramework Core&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;支持批量更新设置包含或排除的属性列表&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;在过去版本的程序中，当进行批量更新时，系统会自动更新对象的所有字段。&lt;strong&gt;若实际需求仅需要更新对象的部分字段或者需要排除某些字段不进行更新，开发者则需要使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;for/foreach&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;循环遍历每个实体，并分别调用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;UpdateInclude&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;UpdateExclude&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法来指定或排除需要更新的字段。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;这种做法不仅代码繁琐，而且效率不高。例如：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;var entities = new List&amp;lt;Person&amp;gt; { ... };  
  
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- foreach(var entity in entities)  &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- {  &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;-     // 更新指定列  &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;-     repository.UpdateInclude(entity, new string[] { nameof(entity.Name), nameof(entity.Age) });  &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;-       &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;-     // 或者排除指定列  &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;-     // repository.UpdateExclude(entity, new string[] { nameof(entity.Address) });  &lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;在新版本中，我们针对这一痛点进行了优化。现在，开发者无需再为每个实体单独调用更新方法，而是可以直接在批量更新操作中通过传递参数来指定需要更新或排除的字段列表。这种方式既简洁又高效。代码示例如下：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;var entities = new List&amp;lt;Person&amp;gt; { ... };  
  
// 更新指定列  
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ repository.Update(entities, includePropertyNames: new string[] { nameof(Person.Name), nameof(Person.Age) });  &lt;/span&gt;
  
// 或者排除指定列  
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ repository.Update(entities, excludePropertyNames: new string[] { nameof(Person.Address) });&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;在上面的代码中，我们使用了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;_repository.Update&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法，并通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;includePropertyNames&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;excludePropertyNames&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数来指定需要更新或排除的字段列表。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;这种方式不仅简化了代码，提高了可读性，还提高了批量更新的效率。开发者只需要一次性设置参数，即可对整个实体列表进行批量更新操作。&lt;/p&gt; 
&lt;h4&gt;其他说明&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;所有批量更新方法都添加了以上两个参数，包含&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;UpdateNow/UpdateAsync/UpdateNowAsync&lt;/code&gt;。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;3. 新增定时任务可配置&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;RunOnStart&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;的逻辑&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;定时任务作业触发器包含一个&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性配置，允许用户设置是否在程序启动时触发执行。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;原先的逻辑是这样的：&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;code&gt;RunOnStart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性用于控制是否在启动时执行一次任务。如果同时设置了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;StartTime&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性，并且&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;StartTime&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;null&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;或小于当前时间，那么任务会在程序启动时立即执行。否则，任务会在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;StartTime&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;指定的时间执行。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;😳😳😳 虽然这个逻辑在表面上看似合理，但问题在于它限制了用户的自由度和灵活性。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;然而，我们遇到了一位有特殊需求的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;VIP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户，他们希望更加灵活地控制任务的启动执行行为。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1713859534042458563/2cb32d58_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;用户截图&quot; src=&quot;https://foruda.gitee.com/images/1713859534042458563/2cb32d58_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;为了满足用户的个性化需求，我们开放了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的处理逻辑，引入了一个名为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStartProvider&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的提供器配置。通过此配置，用户可以自定义&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的行为逻辑。例如：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;services.AddSchedule(options =&amp;gt; 
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.RunOnStartProvider = (trigger, checkTime) =&amp;gt;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    {&lt;/span&gt;
         // 如果用户未设置 StartTime，则返回一个比当前时间早一秒的时间
         // 如果设置了 StartTime，则返回 StartTime 的下一个发生时间（😊😊😊这是用户需要的）
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        return (trigger.StartTime == null)&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            ? checkTime.AddSeconds(-1)&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            : trigger.GetNextOccurrence(checkTime);&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    };&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;此外，框架底层也提供了一个默认的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStartProvider&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现，用于处理通用的启动执行逻辑：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;services.AddSchedule(options =&amp;gt; 
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.RunOnStartProvider = (trigger, checkTime) =&amp;gt;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    {&lt;/span&gt;
         // 如果 StartTime 为 null 或小于等于当前时间 checkTime，则返回比当前时间早一秒的时间
         // 否则，返回 StartTime 作为启动执行的时间
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        return (trigger.StartTime == null || trigger.StartTime.Value &amp;lt;= checkTime)&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            ? checkTime.AddSeconds(-1)&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            : trigger.StartTime;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    };&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;通过这一改进，我们既保留了原有逻辑的通用性，又为用户提供了足够的灵活性和扩展性，以满足各种个性化需求。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;4. 新增日志模块&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;MessageProcess&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;配置，可对日志消息进行额外处理，如敏感内容脱敏&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;在某些场景中，&lt;strong&gt;我们可能无意中会将敏感信息，如用户密码或手机号等，输出到日志中&lt;/strong&gt;。为了增强数据安全性，我们可以采取以下措施进行额外的拦截处理：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;控制枱日志配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;services.AddConsoleFormatter(options =&amp;gt;
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.MessageProcess = (originalMessage) =&amp;gt; &lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    {&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        // 对原始消息进行脱敏处理，以确保敏感信息不被泄露&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        var newMessage = 脱敏处理 (originalMessage); // 这里的「脱敏处理」只是一个例子。&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        return newMessage;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    };&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;文件日志配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;services.AddFileLogging(options =&amp;gt;
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.MessageProcess = (originalMessage) =&amp;gt; &lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    {&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        // 对原始消息进行脱敏处理，以确保敏感信息不被泄露&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        var newMessage = 脱敏处理 (originalMessage); // 这里的「脱敏处理」只是一个例子。&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        return newMessage;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    };&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;存储介质日志配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;services.AddDatabaseLogging&amp;lt;DatabaseLoggingWriter&amp;gt;(options =&amp;gt;
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.MessageProcess = (originalMessage) =&amp;gt; &lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    {&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        // 对原始消息进行脱敏处理，以确保敏感信息不被泄露&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        var newMessage = 脱敏处理 (originalMessage); // 这里的「脱敏处理」只是一个例子。&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        return newMessage;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    };&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;在上述代码中，&lt;code&gt;脱敏处理&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;函数用于执行实际的脱敏操作，即替换或移除原始消息中的敏感信息。这样，即使日志被记录或查看，敏感信息也不会被泄露。通过这种方法，我们可以有效地保护用户数据的安全，避免潜在的风险。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;5. 新增，动态&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;WebAPI&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;支持配置默认的&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;BindingInfo&lt;/span&gt;&lt;/code&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1714304128642953067/ea573b0a_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1714304128642953067/ea573b0a_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;针对基元类型和字符串类型的参数，默认情况下会自动应用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[FromRoute]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;绑定元数据。这导致了与原生&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ASP.NET Core&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在路由生成上的显著差异&lt;/strong&gt;。具体示例如下：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ public class TestController : IDynamicApiController // 动态 WebAPI&lt;/span&gt;
 {
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method1&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method1(int id) // Furion 框架生成路由为：/test/method1/{id}&lt;/span&gt;
     {
     }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method2/{id:int}&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method2(int id) // 生成路由与原生 ASP.NET Core 一致：/test/method2/{id:int}&lt;/span&gt;
     {
     }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method3&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method3(int id, string name) // Furion 框架生成路由为：/test/method3/{id}/{name}&lt;/span&gt;
     {
     }
 }&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;然而，原生&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ASP.NET Core&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;生成的路由则是：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ public class TestController : ControllerBase // 控制器基类&lt;/span&gt;
 {
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method1&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method1(int id) // 原生 ASP.NET Core 生成路由为：/test/method1，id 参数通过 ?id= 传入&lt;/span&gt;
     {
     }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method2/{id:int}&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method2(int id) // 生成路由与 Furion 框架一致：/test/method2/{id:int}&lt;/span&gt;
     {
     }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method3&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method3(int id, string name) // 原生 ASP.NET Core 生成路由为：/test/method3，id 和 name 参数通过 ?id=&amp;amp;name= 传入&lt;/span&gt;
     {
     }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;这种差异导致在将旧项目迁移到 Furion 框架动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时，可能会因为路由不匹配而引发错误。&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;为了解决这一问题，我们为动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;引入了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DefaultBindingInfo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置参数。该参数默认值为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;route&lt;/code&gt;，表示基元类型和字符串类型参数将使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[FromRoute]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;绑定元数据。同时，我们也提供了一个&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;query&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项，允许开发者选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[FromQuery]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;绑定元数据。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;具体配置如下：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&quot;DynamicApiControllerSettings&quot;: {
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+  &quot;DefaultBindingInfo&quot;: &quot;query&quot; // 默认值原为 route，现在设置为 query&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;通过上述配置，动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;生成的路由将与原生&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ASP.NET Core&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;保持一致，从而确保项目迁移过程中的路由兼容性。例如：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ public class TestController : IDynamicApiController // 动态 WebAPI&lt;/span&gt;
 {
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method1&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method1(int id) // 生成路由为：/test/method1，id 参数通过 ?id= 传入&lt;/span&gt;
     {
     }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method2/{id:int}&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method2(int id) // 生成路由与原生 ASP.NET Core 一致：/test/method2/{id:int}&lt;/span&gt;
     {
     }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    [HttpGet(&quot;Method3&quot;)]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    public void method3(int id, string name) // 生成路由为：/test/method3，id 和 name 参数通过 ?id=&amp;amp;name= 传入&lt;/span&gt;
     {
     }
 }&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;通过以上优化，我们提供了更加灵活和兼容的路由配置选项，从而满足了不同项目迁移和集成的需求。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;6. 改进定时任务看板，新增更多可配置特性&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;strong&gt;定时任务看板有一年没有更新了，今天花了点时间做了不少改进。&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;改进一：作业&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Id&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;列固定&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715078193191498468/b271886e_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715078193191498468/b271886e_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;改进二：点击作业信息列表【行】可【展开/收缩】作业触发器列表&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715078271972378588/fe54f595_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715078271972378588/fe54f595_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;改进三：没有作业触发器的作业部分操作按钮显示【禁用】状态&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715078368550284408/5d70df9b_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715078368550284408/5d70df9b_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;改进四：作业触发器看板文字超出自动换行&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715078471308373502/2007a155_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715078471308373502/2007a155_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;改进五：可配置作业列表【是否显示空触发器的作业】&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;app.UseScheduleUI(options =&amp;gt; 
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    // 是否显示空触发器的作业信息&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.DisplayEmptyTriggerJobs = false;&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715078809606017018/f5a623e7_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715078809606017018/f5a623e7_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;改进六：可配置是否隐藏【页头】，方便嵌入到各种系统中&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;app.UseScheduleUI(options =&amp;gt; 
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    // 是否显示页头&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.DisplayHead = false;&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715079034862982983/ce1a1ab5_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715079034862982983/ce1a1ab5_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;改进七：自从配置作业触发器释放默认展开&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;默认情况下，定时任务看板都是【收缩】状态，点击再【展开】，现在可以支持配置默认【展开】啦。&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;app.UseScheduleUI(options =&amp;gt; 
{
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    // 是否默认展开所有作业&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+    options.DefaultExpandAllJobs = true;&lt;/span&gt;
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715085536816191485/36e3a121_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715085536816191485/36e3a121_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;其他改进&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715079079215036196/91742d08_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715079079215036196/91742d08_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;7. 新增定时任务支持取消指定触发器正在执行的作业程序&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的定时任务功能虽然支持取消正在执行的作业处理程序，但这一操作目前仅能通过作业的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Id&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;来执行。当作业包含多个触发器且它们同时运行时，使用现有的取消机制会导致所有触发器下的作业处理程序都被强制终止。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;今天收到了一个来自&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;VIP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户的定时任务需求：&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715061085303829369/95e6dd18_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;用户需求截图 1&quot; src=&quot;https://foruda.gitee.com/images/1715061085303829369/95e6dd18_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715061100370587723/35e4fbf2_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;用户需求截图 2&quot; src=&quot;https://foruda.gitee.com/images/1715061100370587723/35e4fbf2_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;从上述需求中可以看出，&lt;strong&gt;用户期望能够对定时任务的取消操作进行更精细化的控制，而不仅仅是基于作业&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Id&lt;/code&gt;&lt;/strong&gt;。显然，现有的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架定时任务功能无法满足这一需求。&lt;/p&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;为了满足这一需求，在最新的版本更新中（&lt;code&gt;Furion 4.9.2.38+&lt;/code&gt;）引入了新的取消机制，&lt;strong&gt;允许用户通过指定作业触发器的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Id&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;来取消对应的作业处理程序&lt;/strong&gt;。具体实现如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IScheduler&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口的方式：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;// 取消作业下所有触发器正在执行的程序
scheduler.Cancel();

// 新增功能：取消作业下特定触发器正在执行的程序
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ scheduler.Cancel(&quot;triggerId&quot;); // Furion 4.9.2.38+ 支持&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ISchedulerFactory&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口的方式：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;// 取消作业下所有触发器正在执行的程序
var scheduleResult = _schedulerFactory.TryCancelJob(&quot;job1&quot;, out var scheduler);
var scheduleResult = _schedulerFactory.TryCancelJob(scheduler);

// 新增功能：取消作业下特定触发器正在执行的程序
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var scheduleResult = _schedulerFactory.TryCancelJob(&quot;job1&quot;, out var scheduler, &quot;triggerId&quot;); // Furion 4.9.2.38+ 支持&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var scheduleResult = _schedulerFactory.TryCancelJob(scheduler, &quot;triggerId&quot;); // Furion 4.9.2.38+ 支持&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;通过这一更新，增强了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架定时任务的灵活性和控制能力，使得用户能够更精准地管理定时任务的执行和取消。&lt;/p&gt; 
&lt;h4&gt;破坏性更改&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;strong&gt;&lt;code&gt;JobExecutionContext.RunId&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性类型从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Guid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型调整为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;String&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型。&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;8. 新增定时任务支持立即执行特定的作业触发器&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的早期版本中，存在一个功能限制：&lt;strong&gt;仅支持立即执行指定的作业，而无法直接触发特定作业下的特定触发器。&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;为了解决这一限制，我们在本次更新中&lt;strong&gt;实现了对特定作业触发器的直接执行功能，并同步更新了定时任务的管理界面&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715309582468109884/f76fa0f6_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;更新后的定时任务看板&quot; src=&quot;https://foruda.gitee.com/images/1715309582468109884/f76fa0f6_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;如何使用新特性：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ISchedulerFactory&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;// 之前的版本只能立即执行整个作业
var scheduleResult = _schedulerFactory.TryRunJob(&quot;job1&quot;, out var scheduler);
var scheduleResult = _schedulerFactory.TryRunJob(scheduler);

// Furion 4.9.2.44+ 新增支持，可以指定触发器 Id 来立即执行特定触发器
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var scheduleResult = _schedulerFactory.TryRunJob(&quot;job1&quot;, out var scheduler, &quot;triggerId&quot;);&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var scheduleResult = _schedulerFactory.TryRunJob(scheduler, &quot;triggerId&quot;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IScheduler&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;// 之前的版本只能执行整个作业的所有触发器
scheduler.Run();

// Furion 4.9.2.44+ 新增支持，可以直接指定触发器 Id 来执行特定触发器
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ scheduler.Run(&quot;triggerId&quot;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;这样，开发者就能够更灵活地管理和执行定时任务了。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;9. 新增日志模块设置上下文数据支持无限嵌套&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;在一些特别的业务场景中，我们可能需要多重设置日志上下文，如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;ScopeContext&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方式&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using (logger.ScopeContext(ctx =&amp;gt; ctx.Set(&quot;one&quot;, &quot;one&quot;)))&lt;/span&gt;
 {
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+     using (logger.ScopeContext(ctx =&amp;gt; ctx.Set(&quot;two&quot;, &quot;two&quot;)))&lt;/span&gt;
      {
         logger.LogInformation(&quot;第 two 层日志输出&quot;);

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+        using _ = logger.ScopeContext(ctx =&amp;gt; ctx.Set(&quot;three&quot;, &quot;three&quot;));&lt;/span&gt;

         logger.LogInformation(&quot;第 three 层日志输出&quot;);
      }

     logger.LogInformation(&quot;第 one 层日志输出&quot;);
}

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using (logger.ScopeContext(ctx =&amp;gt; ctx.Set(&quot;一&quot;, &quot;一&quot;)))&lt;/span&gt;
  {
     logger.LogInformation(&quot;第一层日志输出&quot;);
  }&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;BeginScope&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方式&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using (logger.BeginScope(new List&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;&lt;/span&gt;
  {
     new(&quot;one&quot;, &quot;one&quot;)
  }))
  {
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+      using (logger.BeginScope(new List&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;&lt;/span&gt;
       {
          new(&quot;two&quot;, &quot;two&quot;)
       }))
       {
          logger.LogInformation(&quot;第 two 层日志输出&quot;);

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+         using _ = logger.BeginScope(new List&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;&lt;/span&gt;
          {
             new(&quot;three&quot;, &quot;three&quot;)
          });

          logger.LogInformation(&quot;第 three 层日志输出&quot;);
       }

      logger.LogInformation(&quot;第 one 层日志输出&quot;);
  }

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using (logger.BeginScope(new List&amp;lt;KeyValuePair&amp;lt;string, object&amp;gt;&amp;gt;&lt;/span&gt;
  {
     new(&quot;一&quot;, &quot;一&quot;)
  }))
  {
     logger.LogInformation(&quot;第一层日志输出&quot;);
  }&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;现在支持这样的方式设置了。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;10. 新增定时任务支持检查作业信息额外数据的键是否定义&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1714287331845854444/70cabc1b_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1714287331845854444/70cabc1b_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;11. 修复/改进任务队列执行方式，将队列消费速度提升百倍以上&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;昨天一位&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;VIP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户反馈了一个关于任务队列在动态编译&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JavaScript&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;引擎时的性能问题。&lt;strong&gt;用户表示，发送了超过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;500&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;条消息，但任务队列在出队时仅处理了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;80&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;多次，且处理速度异常缓慢。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715177249973080320/66bf6580_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;任务队列性能问题截图&quot; src=&quot;https://foruda.gitee.com/images/1715177249973080320/66bf6580_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;初步分析后，发现用户使用了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Jint&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;库，然而该库不支持异步和多线程操作，这导致了任务队列服务在出队消费时遭遇同步阻塞。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715177349817066197/c4587cc4_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Jint 库不支持异步多线程&quot; src=&quot;https://foruda.gitee.com/images/1715177349817066197/c4587cc4_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715177654934439116/18bb4ac9_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;Jint 库限制&quot; src=&quot;https://foruda.gitee.com/images/1715177654934439116/18bb4ac9_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;实际上，&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在处理定时任务和事件总线时已经解决了类似的问题，但这一解决方案尚未应用于任务队列😳😒&lt;/strong&gt;。现在，我们将通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;TaskFactory&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Parallel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的组合来轻松解决此问题。&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ // 创建一个任务工厂并保证执行任务都使用当前的计划程序&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var taskFactory = new TaskFactory(TaskScheduler.Current);&lt;/span&gt;

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ // 使用 Parallel.For 启动一个并行操作，仅执行一次迭代即可（解决 `Thread` 线程阻塞问题）&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ Parallel.For(0, 1, _ =&amp;gt;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ {&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+     // 创建新的线程执行&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+     taskFactory.StartNew(async () =&amp;gt;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+     {&lt;/span&gt;
          // 在这里可以调用任何异步或同步（包括阻塞线程）的代码 🎉🎉🎉😊😊😊
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+     }, stoppingToken);&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ });&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;上述代码在定时任务和事件总线中已得到验证，并成功应用于此次任务队列问题。用户提供的测试案例已通过验证，并显示出显著的性能提升。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1715177596881747132/8cb63f4f_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;问题解决后截图&quot; src=&quot;https://foruda.gitee.com/images/1715177596881747132/8cb63f4f_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;结语&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;现在，任务队列的性能已至少提升了一百倍，且不再出现阻塞现象。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;12. 修复，远程请求&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;不支持重复读&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;Stream&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;问题&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;在上一版本中引入的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型，&lt;strong&gt;当&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型为自定义类时，存在一个潜在问题：一旦从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Response.Content&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;流中读取数据并将其转换为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型后，原始流会被释放，从而阻止后续尝试再次读取该流。这会导致在尝试重复读取流时遇到「流已关闭」或「流不可读」的错误。&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;var httpResponseModel1 = await &quot;https://furion.net/getuser/1&quot;.PostAsync&amp;lt;HttpResponseModel&amp;lt;User&amp;gt;&amp;gt;();

&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- // 下列的代码会出错 ❌❌❌&lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- var stream = await httpResponseModel1.Response.Content.ReadAsStreamAsync();&lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- using var streamReader = new StreamReader(stream, httpResponseModel1.Encoding);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;为了解决此问题，框架底层在读取原始响应流时采用了以下策略：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ReadAsStreamAsync&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;response.Content&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中读取流。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;创建一个流的副本，保留原始数据的完整副本。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;将该副本重新设置回&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;response.Content&lt;/code&gt;，以便后续可以重复读取。&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;此过程确保了即使在将流转换为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型后，原始数据仍然可以通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;response.Content&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;访问，而不会遇到流已关闭的错误。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1714475104193525559/d14fc08d_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1714475104193525559/d14fc08d_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;此外，&lt;strong&gt;为了更好地管理资源释放，&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型现在实现了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。这意味着当不再需要&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实例时，可以确保与其关联的流被正确释放。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1714475216827806983/c789a86b_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1714475216827806983/c789a86b_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;使用注意事项&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;由于现在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IDisposable&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口，因此在创建其实例时，&lt;strong&gt;建议使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;using&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;语句来确保资源得到正确管理。&lt;/strong&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ // 使用 using 语句确保 HttpResponseModel&amp;lt;T&amp;gt; 资源得到释放&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using var httpResponseModel1 = await &quot;https://furion.net/getuser/1&quot;.PostAsync&amp;lt;HttpResponseModel&amp;lt;User&amp;gt;&amp;gt;();&lt;/span&gt;

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ // 下列的代码正常啦 ✅✅✅&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var stream = await httpResponseModel1.Response.Content.ReadAsStreamAsync();&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ using var streamReader = new StreamReader(stream, httpResponseModel1.Encoding);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;请注意，在大多数情况下，直接从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;.Data&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;T&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型的数据就足够了，无需再次读取&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Response.Content&lt;/code&gt;。如果确实需要访问原始流，则应在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;using&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;语句块内部执行此操作，以确保在流被释放之前完成所有必要的读取操作。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;13. 修复，模板引擎不支持将粘土对象或&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;DynamicObject&lt;/span&gt;&lt;/code&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;&amp;nbsp;派生类类型设置为模板数据&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;问题分析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;过往版本的模板引擎在处理模板数据时，存在限制，仅兼容&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;匿名类型&lt;/code&gt;、&lt;code&gt;强类型&lt;/code&gt;及&lt;code&gt;集合类型&lt;/code&gt;。这导致了当尝试使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Furion&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的粘土对象&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Clay&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;作为模板数据源时，系统抛出异常，无法正常执行。例如：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;var sql = @&quot;
@foreach(var item in Model)
{
    @:insert into table(member_id, site_id) values(@item.member_id, @item.site_id);

    @foreach(var subItem in item.goods_list)
    {
        @:insert into table(order_id, goods_id) values(@subItem.order_id, @subItem.goods_id);
    }
}&quot;;

&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ object clay = Clay.Parse(&quot;&quot;&quot;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            [{&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;member_id&quot;: 69697,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;site_id&quot;: 1,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;remark&quot;: &quot;&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;order_id&quot;: 344,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;order_no&quot;: &quot;1202405051550696970001&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;order_status&quot;: 3,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;name&quot;: &quot;百签科技（广东）有限公司&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;mobile&quot;: &quot;13800138000&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;telephone&quot;: &quot;&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;address&quot;: &quot;广东省中山市&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;full_address&quot;: &quot;广东省中山市西区&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;create_time&quot;: 1714895456,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;pay_money&quot;: &quot;148.20&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;buyer_message&quot;: &quot;&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;drug_code&quot;: null,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                &quot;goods_list&quot;: [&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                    {&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;order_id&quot;: 344,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;goods_id&quot;: 816503,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;num&quot;: 60,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;price&quot;: &quot;2.60&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;real_goods_money&quot;: &quot;148.20&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;refund_real_money&quot;: &quot;0.00&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;country_code&quot;: &quot;ZHONGSHAN&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;goods_code&quot;: &quot;YPJN0000776&quot;,&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                        &quot;third_id&quot;: &quot;SPH00008614&quot;&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                    }&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+                ]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            }]&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+            &quot;&quot;&quot;);&lt;/span&gt;

// 下面两种方式将出现异常
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- var result = await viewEngine.RunCompileAsync(sql, clay);    // IViewEngine 方式&lt;/span&gt;
&lt;span style=&quot;background-color:#ffdddd&quot;&gt;- var result = await sql.RunCompileAsync(clay);    // 字符串拓展方式&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;解决方案&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;最新提交的更新已成功解决该问题，现全面支持将粘土对象&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Clay&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;及任何派生于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DynamicObject&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的类型直接作为模板数据使用。&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;// 可正常使用
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var result = await viewEngine.RunCompileAsync(sql, clay);    // IViewEngine 方式&lt;/span&gt;
&lt;span style=&quot;background-color:#ddffdd&quot;&gt;+ var result = await sql.RunCompileAsync(clay);    // 字符串拓展方式&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;14.&amp;nbsp;修复，定时任务毫秒级间隔触发器存在严重的误差问题&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;问题剖析&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;在之前的两次提交（&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/734a8c38d1e0d16e2c82f450fdbe7112fea17f9a&quot; target=&quot;_blank&quot;&gt;734a8c3&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/1756ab4cf94e0eeb4210da91e6337227604e6cc9&quot; target=&quot;_blank&quot;&gt;1756ab4&lt;/a&gt;）对间隔触发器的计算逻辑进行了修正，有效地解决了之前存在的误差问题。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;然而，开发过程中出现了疏漏：&lt;strong&gt;原有的误差处理代码未能同步移除，导致系统在新逻辑执行后仍额外进行了一次误差校正操作。所以出现了间隔触发器出现预料以外的触发时间。&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;用户反馈&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1713782751843608813/be9c3a01_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1713782751843608813/be9c3a01_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1713782798104444623/1f7cc1d1_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1713782798104444623/1f7cc1d1_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;15. 修复文件日志在一些特定情况下出现 `The stream writer is currently in use by a previo&lt;/span&gt;&lt;span style=&quot;color:#40485b&quot;&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;us write operation.` 异常&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;在之前的版本中，文件日志的写入操作采用同步与异步方法混合的方式，这在某些情况下引发了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;The stream writer is currently in use by a previous write operation.&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的异常问题。为了解决这个问题，本版本进行了优化，现在完全采用异步方法进行文件日志的写入操作，以确保更高效、稳定的数据处理。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1713791274381205796/862b3051_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1713791274381205796/862b3051_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#f1c40f&quot;&gt;16. 修复定时任务看板触发器文字过多出现超出布局情况&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;旧版本&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1713856728944276841/8cf7305f_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1713856728944276841/8cf7305f_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;新版本&lt;/h4&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.8); margin-left:0em; margin-right:0em; text-align:start&quot;&gt;&lt;a href=&quot;https://foruda.gitee.com/images/1713856758155357456/249a3d67_974299.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1713856758155357456/249a3d67_974299.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;本期更新&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;更新日志：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffurion.net%2Fdocs%2Fcategory%2Fupgrade%2F&quot; target=&quot;_blank&quot;&gt;https://furion.net/docs/category/upgrade/&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;新特性&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 规范化结果支持拦截&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JWT&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;授权出现代码异常&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.3&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/52d3c2cc95c894095daebf81ce55ac2f7c54f839&quot;&gt;52d3c2c&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/edc51f4dad122f3b7749f81ac0df6db820f9cc09&quot;&gt;edc51f4&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务支持立即执行触发特定作业下的特定触发器&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.3&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/3d833428e6097fe991de0775c40aaf6fa6522c7d&quot;&gt;3d83342&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 日志模块设置上下文支持无限极嵌套&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.3&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/0e313d2e444e3a8902d27fe4ff7ab8e6c55f916d&quot;&gt;0e313d2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SHA1&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;加密和比较功能的静态类和字符串拓展支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.41&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.08&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/superbisu&quot;&gt;@superbisu&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/879&quot;&gt;!879&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/f592757132f34a6e7d7f3da5ebe9d950e0af91c2&quot;&gt;f592757&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务看板可配置是否默认展开所有作业触发器&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DefaultExpandAllJobs&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.40&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.07&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/77c1e6f933b2a56e554276cd7f46033f4a47bac5&quot;&gt;77c1e6f&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务看板支持是否显示空触发器作业&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DisplayEmptyTriggerJobs&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和是否显示页头&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DisplayHead&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.39&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.07&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/f64d45f658f1fca22cc624dfaa324e124b490fdd&quot;&gt;f64d45f&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务支持取消指定触发器正在执行的作业程序&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.38&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.07&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/5aa20b583f1d2c11fe5ebce069e78985e7fb7ff5&quot;&gt;5aa20b5&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 粘土对象&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Clay&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;转换为可枚举对象&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AsEnumerable()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.37&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.06&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/b1c8fa4d3b4a46b22a97f3ef566bb927ee8cbd5f&quot;&gt;b1c8fa4&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 远程请求支持返回&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型，包含&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseMessage&lt;/code&gt;、返回值等属性&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.34&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.30&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/42ccdaa6cb1dcd3381ee8788d254bcb2f99acc69&quot;&gt;42ccdaa&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务作业计划支持根据触发器&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Id&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;集合做批量删除操作&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.33&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.30&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/d01a6e7ee42e197f78b054e360c34b337fe3d902&quot;&gt;d01a6e7&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持配置基元类型和字符串类型默认绑定信息&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.32&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.28&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/d7e7a027153ed2fa68ee1ee571d568954a9564e8&quot;&gt;d7e7a02&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 支持检查作业信息额外数据的键是否定义&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ContainsProperty(key)&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.32&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.28&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/71f97f0304c5d5048b09c87d9d2928be8ff9dc86&quot;&gt;71f97f0&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 日志模块&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MessageProcess&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置，可对日志消息进行额外处理，如敏感内容脱敏&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.32&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.28&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/0d9ff5e938b21acd958902c288e629c7c89273c9&quot;&gt;0d9ff5e&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务支持配置作业触发器&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的处理逻辑&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;options.RunOnStartProvider&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.29&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.23&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/c9e0e3eb0bde08cb6e12a4ae0cbf834f70e44768&quot;&gt;c9e0e3e&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;EFCore&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;批量更新支持设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;includePropertyNames&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;excludePropertyNames&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.28&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.23&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/c9926ccb6434316338816eaf259ae9191f40505e&quot;&gt;c9926cc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 远程请求代理模式支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[BaseAddress]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;特性快速设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpClient&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;客户端&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;BaseAddress&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.25&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.19&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/ea88c95eeca855a0692a7516a72f8b10b3e47637&quot;&gt;ea88c95&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 粘土对象进行固化类型时支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JsonSerializerOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;序列化配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.24&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.17&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/cc6dd133a6e8f9ab03bf37b0011449e7f798bddd&quot;&gt;cc6dd13&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持贴&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[Route]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;特性动态生成控制器&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.19&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/issues/I9H1QH&quot;&gt;#I9H1QH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 粘土对象支持无限极组合嵌套功能&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.19&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/b02916e3397e07328f6d31c301034af004e37067&quot;&gt;b02916e&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AES&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;加解密支持向量&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IV&lt;/code&gt;、模式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Mode&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和填充&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Padding&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.18&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.15&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/d549bba917114a57441cd3fc80795340131f3dcf&quot;&gt;d549bba&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务作业计划工厂&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ISchedulerFactory&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;启停作业&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;StartJob&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;PauseJob&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.11&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/89061ef4679378dd76e162323927f7654a5e1390&quot;&gt;89061ef&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AppSettings&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;拓展程序集&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ExternalAssemblies&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置支持目录扫描&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.14&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/e68f0a665eb1cb745016d993516b4935d4ae932c&quot;&gt;e68f0a6&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务批量设置作业组名称&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;.GroupSet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.9&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.09&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/9e08278e95ba0ec98a3ffaeb54c46b598d7d6c81&quot;&gt;9e08278&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 控制器/动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法添加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[DisplayName]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;特性生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Swagger&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文档注释&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.3&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.03.30&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/0f24c66cfea3b0484aea97f2659f81a873324e0a&quot;&gt;0f24c66&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 远程请求且出现异常时输出重试日志&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.1&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.03.29&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/e4549eb6f37b5f5036c69952d1df2284e8e33417&quot;&gt;e4549eb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[新增] 定时任务启动时检查不合法的作业触发器配置并打印警告日志&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.03.28&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/3190f4c705bf7fb84b210e1239254626253c9e94&quot;&gt;3190f4c&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;突破性变化&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[调整]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;规范化结果&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IUnifyResultProvider&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口，新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;OnAuthorizeException&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.3&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/52d3c2cc95c894095daebf81ce55ac2f7c54f839&quot;&gt;52d3c2c&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/edc51f4dad122f3b7749f81ac0df6db820f9cc09&quot;&gt;edc51f4&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[调整]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;授权处理程序&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AppAuthorizeHandler&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HandleAsync&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法签名，新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DefaultHttpContext &lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.3&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/52d3c2cc95c894095daebf81ce55ac2f7c54f839&quot;&gt;52d3c2c&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/edc51f4dad122f3b7749f81ac0df6db820f9cc09&quot;&gt;edc51f4&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[调整]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;code&gt;DES&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;加解密相关类和方法命名：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DESCEncryption&lt;/code&gt;-&amp;gt;&lt;code&gt;DESEncryption&lt;/code&gt;，&lt;code&gt;ToDESCEncrypt&lt;/code&gt;-&amp;gt;&lt;code&gt;ToDESEncrypt&lt;/code&gt;，&lt;code&gt;ToDESCDecrypt&lt;/code&gt;-&amp;gt;&lt;code&gt;ToDESDecrypt&lt;/code&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.41&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.08&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/a46f12987d22e52845dd70ec634f2e9f09abd730&quot;&gt;a46f129&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[调整] 定时任务作业执行上下文&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunId&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型，由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Guid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;改为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;string&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.38&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.07&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/5aa20b583f1d2c11fe5ebce069e78985e7fb7ff5&quot;&gt;5aa20b5&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[调整]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Swagger&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文档注释逻辑，将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;///&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;注释方式优先级调整至最高，可覆盖&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[DisplayName]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;特性方式&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.17&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.14&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/ba5249c2617b5740c79c67fa3e452e9e28a6ea61&quot;&gt;ba5249c&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[调整] 定时任务作业计划工厂&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;TryRunJob&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法签名，追加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;out IScheduler scheduler&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.11&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/89061ef4679378dd76e162323927f7654a5e1390&quot;&gt;89061ef&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;问题修复&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[修复] 任务队列在个别情况下出现出队同步阻塞问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.43&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.08&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/f595b47f79ececfd07558200091e1f40c1c8fbf2&quot;&gt;f595b47&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务看板点击作业信息列表的操作按钮也会触发展开/收缩作业触发器&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;bug&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.40&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.07&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/77c1e6f933b2a56e554276cd7f46033f4a47bac5&quot;&gt;77c1e6f&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 模板引擎不支持将粘土对象或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DynamicObject&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;派生类类型设置为模板数据&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.36&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.05&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/07ee1720b48a6dcd1a91be67c1ad7d34d99df83c&quot;&gt;07ee172&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 启动时输出控制枱日志配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;options.MessageProcess&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;无效问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.36&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.05.05&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/b5cb0fef937a74b6ee2a451d7b66ceab8e11dd49&quot;&gt;b5cb0fe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 远程请求&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;HttpResponseModel&amp;lt;T&amp;gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;不支持重复读&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Response.Content&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;流问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.35&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.30&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/7ca0650ef62bde041f6747ccc5b3699251dac465&quot;&gt;7ca0650&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 审计日志&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Monitor&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;捕获异常时因其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;StackTrace&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;堆栈信息可能为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;null&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;引发的空异常问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.31&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.25&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/xjj_0906&quot;&gt;@xjj_0906&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/875&quot;&gt;!875&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/7621e75a90f3f9301c861bb5331ada3d9014790a&quot;&gt;7621e75&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务间隔触发器获取下一周期时间缺少了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RunOnStart&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;StartTime&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;考虑场景&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.30&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.23&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/2595379666f980a8fd29f4322c352406ff4a48c1&quot;&gt;2595379&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/7ac6a5486098964a740be9626e5431c5b7b07a9b&quot;&gt;7ac6a54&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务看板作业触发器类型文字过多出现超出布局情况&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.29&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.23&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/f9dd33bf5d45df1b110548a744099f9f0e960e07&quot;&gt;f9dd33b&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 文件日志在一些特定情况下出现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;The stream writer is currently in use by a previous write operation.&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;异常&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.27&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.22&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/3ca012bdf2cd6ccd95efff9dc8a5108f3d2c6c02&quot;&gt;3ca012b&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务毫秒级间隔触发器存在严重的误差问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.26&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.22&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/9c8210c2d3b56bd19eaf08147b031742349e28b2&quot;&gt;9c8210c&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务创建作业处理程序存在内存溢出风险&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.25&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.19&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/issues/I9D0RH&quot;&gt;#I9D0RH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;不支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[BindNever]&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;特性忽略路由和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Action&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.25&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.19&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/21599e6932467a3dac891bf2a116309e7a93d2e7&quot;&gt;21599e6&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 审计日志&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Monitor&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;不支持粘土对象&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Clay/dynamic&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型格式化输出&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.24&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.17&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/d578cfb553e5a5013b77bae617d5e94daf299acb&quot;&gt;d578cfb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 粘土对象无限嵌套粘土对象且&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;XElement&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性包含&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;type=&quot;null&quot;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点出现异常问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.21&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/9d5870f7eeff129f01b6214120ef4ff26471833e&quot;&gt;9d5870f&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 粘土对象嵌套粘土对象只输出第一个属性问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.20&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/1a7577810e3e5b5ffa179600ce60a466741487dc&quot;&gt;1a75778&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;错误将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CancellationToken&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型当作路由参数&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.19&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.16&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/issues/I9H14X&quot;&gt;#I9H14X&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务因新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GroupSet&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;功能影响到了原有的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SetGroupName&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;逻辑&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.15&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.11&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/issues/I9FOU0&quot;&gt;#I9FOU0&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/9e08278e95ba0ec98a3ffaeb54c46b598d7d6c81&quot;&gt;9e08278&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;PostgreSQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;语句的字段名缺少&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;&quot;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;双引号&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.13&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/issues/I9FD9Y&quot;&gt;#I9FD9Y&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 定时任务使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JobBuilder&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;构建委托作业永远无法执行问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.10&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Sundial/issues/I7KU7K&quot;&gt;Sundial#I7KU7K&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 规范化结果在未启用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;401/403&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等状态码中间件时进行了错误拦截&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.8&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.08&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/b135e8c8acb002273cce20798f49a7e95fa76025&quot;&gt;b135e8c&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 客户端设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JWT Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时如果&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Bearer&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;后面跟多个空格导致验证失败问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.8&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.08&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/xuejf168&quot;&gt;@xuejf168&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/874&quot;&gt;!874&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;查询结果转模型不支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DateOnly&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;TimeOnly&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;属性类型&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.7&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.04&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/31f9d23c430b531c78e848ab62476f3fbac73dfd&quot;&gt;31f9d23&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 粘土对象调整原先类型并设置混合类型异常问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.6&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.03&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/83b216f11fa2bcbc12e7186b57d149f7611d1cd1&quot;&gt;83b216f&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 粘土对象将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Object&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型设置给&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Array&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;类型出现递归死循环问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.5&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.03&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/1126c740f73f2a8083c7be4e35fafafef71ad5db&quot;&gt;1126c74&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 粘土对象不支持嵌套粘土对象问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.4&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.02&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/fcb1223978d0125292be17475c5ec06af2081f97&quot;&gt;fcb1223&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 粘土对象序列化后出现二次序列化成字符串问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.4&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.02&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/fcb1223978d0125292be17475c5ec06af2081f97&quot;&gt;fcb1223&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;.NET8&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;之后修改&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;System.Text.Json&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;默认序列化选项引发&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;This JsonSerializerOptions instance is read-only or has already been used in serialization or deserialization.&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;异常问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.2&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.03.29&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/9f446535e054ff6c5fdb750a96b1c65a6ac27411&quot;&gt;9f44653&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[修复] 远程请求&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IHttpDispatchProxy&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式配置重试策略无效&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.1&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.03.29&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/issues/I9CK7X&quot;&gt;#I9CK7X&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;其他更改&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[调整]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;IPC&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;管道消息消费方式由无序改为有序&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.33&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.04.30&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/ce59c3a831410752ffa1f987deaa4f68eb18a46b&quot;&gt;ce59c3a&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[调整] 默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;System.Text.Json&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;序列化提供器选项为不区分大小写匹配&lt;span&gt;&amp;nbsp;&lt;/span&gt;4.9.2.1&lt;span&gt;&amp;nbsp;&lt;/span&gt;⏱️2024.03.29&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/commit/b58e7beda68d70ce829fac77fc378a407d8c44e8&quot;&gt;b58e7be&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[更新] 事件总线文档、定时任务文档、规范化接口文档、远程请求文档、粘土对象文档、&lt;code&gt;FS&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;静态类文档、序列化文档、模块化文档、数据加解密文档、动态&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;WebAPI&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文档、&lt;code&gt;IPC&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通信模块文档、日志文档、安全授权文档&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;贡献者&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;简简安 (&lt;a href=&quot;https://gitee.com/MadOneYou&quot;&gt;@MadOneYou&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/876&quot;&gt;!876&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/877&quot;&gt;!877&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;写意 (&lt;a href=&quot;https://gitee.com/xjj_0906&quot;&gt;@xjj_0906&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/875&quot;&gt;!875&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;薛金峰 (&lt;a href=&quot;https://gitee.com/xuejf168&quot;&gt;@xuejf168&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/874&quot;&gt;!874&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;lindexi (&lt;a href=&quot;https://gitee.com/lindexi&quot;&gt;@lindexi&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/dotnetchina/Furion/pulls/873&quot;&gt;!873&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291763/furion-4-9-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291763/furion-4-9-3-released</guid>
            <pubDate>Fri, 10 May 2024 08:21:11 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>wfs 文件存储系统 v1.0.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt;
 &lt;span&gt;前言：wfs 是高性能海量小文件存储系统 ，支持 Linux，Windows，Macos，FreeBSD 等系统， 可以高效地进行文件存储和读取。wfs 支持文件压缩归档，并提供简洁的数据读取方式和文件后台管理和，以及归档文件的碎片整理等。&lt;/span&gt;
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfs&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;WFS 官网&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ftestwfs.tlnet.top%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;在线测试&lt;/strong&gt;&lt;/a&gt;&lt;span&gt;&lt;strong&gt;（用户名 admin 密码 123）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;WFS 使用文档&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WFS 文件存储系统 V1.0.6 主要更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化并修复部分 bug&lt;/li&gt; 
 &lt;li&gt;增加 rust 客户端 wfs-rsclient&lt;/li&gt; 
 &lt;li&gt;完善&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc&quot; target=&quot;_blank&quot;&gt;wfs 使用文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 docker 镜像： &amp;nbsp; docker pull donnie4w/wfs&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;wfs-rsclient&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdonnie4w%2Fwfs-rsclient&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrates.io%2Fcrates%2Fwfs&quot; target=&quot;_blank&quot;&gt;包仓库&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;配置 wfs-rsclient 依赖&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;[dependencies]
wfs=&quot;0.0.2&quot;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;引入 wfs-rsclient 库&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;use wfs::{client::WfsClient, stub::WfsFile};&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;创建 wfsclient 实例对象&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-no-highlight&quot;&gt;let mut wc = WfsClient::new(false, &quot;127.0.0.1&quot;, 6802, &quot;admin&quot;, &quot;123&quot;).unwrap();
#拉取文件
let opdata = wc.get(&quot;readme1.md&quot;);
match opdata {
    Some(value) =&amp;gt; {
        let data = value.data.unwrap();
        println!(&quot;data length {}&quot;, data.len());
    }
    None =&amp;gt; println!(&quot;No value&quot;),
}
#删除文件
let wa = wc.delete(&quot;readme1.md&quot;);
println!(&quot;delete ack status: {}&quot;, wa.ok);
if !wa.ok {
    match wa.error {
        Some(value) =&amp;gt; {
            let code = value.code.unwrap();
            println!(&quot;error code: {}&quot;, code);
        }
        None =&amp;gt; println!(&quot;No value&quot;),
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftlnet.top%2Fwfsdoc&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;wfs 使用文档&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://tlnet.top/statics/tlnet/29947.jpg&quot; width=&quot;940&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#212529; text-align:left&quot;&gt;&lt;strong&gt;wfs 的应用场景&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#fdfdfe; color:#05073b&quot;&gt;海量非结构化数据存储：适用于存储大量的非结构化数据，如图片、视频、日志文件、 备份数据、静态资源文件等。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#fdfdfe; color:#05073b&quot;&gt;高效文件数据读取：wfs 存储引擎可以达到 100 万/每秒，以上的数据读取效率，特别适合文件读取密集型的业务。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#fdfdfe; color:#05073b&quot;&gt;多种图片处理需求：wfs 内置图片基础处理，适合对图片处理多种要求的业务，如图片适应多个尺寸，自定义裁剪等。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;海量小文件问题（LOSF）是一个在大规模数据存储与管理中广泛存在的挑战，尤其是在互联网、物联网、云计算、大数据等领域的应用场景中尤为突出&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;系统调用开销：对每个小文件的操作（如打开、关闭、读写等）都需要单独的系统调用，这些调用的开销在小文件数量巨大时累积起来，成为性能瓶颈。&lt;/li&gt; 
 &lt;li&gt;元数据管理：每个文件对应一份元数据（如文件名、大小、权限、位置等），海量小文件意味着需要管理大量的元数据。元数据索引、查询和更新的效率直接影响到文件的检索速度和存储系统的整体性能。&lt;/li&gt; 
 &lt;li&gt;文件查询效率：在大量小文件中查找特定文件时，遍历和筛选的成本很高，尤其是在缺乏高效索引的情况下。&lt;/li&gt; 
 &lt;li&gt;磁盘数据布局：小文件可能导致磁盘空间利用率低（由于文件系统块大小与小文件大小不匹配造成的内部碎片），以及写放大问题（尤其是在写密集型场景中）。&lt;/li&gt; 
 &lt;li&gt;CPU 占用率：处理大量小文件请求时，CPU 可能忙于处理 I/O 调度、元数据操作等，导致 CPU 资源消耗过大，影响整体系统性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#212529; text-align:start&quot;&gt;wfs 针对 LOSF 问题的实现&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;高效存储布局与合并技术： WFS 将多个小文件聚合成大文件存储，以减少元数据开销和提高存储利用率。同时，通过灵活的索引机制，确保每个小文件都能快速定位和提取。&lt;/li&gt; 
 &lt;li&gt;元数据管理优化： 针对大量小文件元数据管理难题，wfs 采用高效元数据索引和缓存策略，减少元数据查询时间，并采用层级目录结构或哈希索引等方法，降低元数据存储的复杂度。&lt;/li&gt; 
 &lt;li&gt;缓存与预读策略： lru 缓存机制，对访问频繁的数据进行缓存，降低 I/O 操作次数，提高读取速度。&lt;/li&gt; 
 &lt;li&gt;数据去重与压缩技术： 实现数据去重和数据压缩，去除重复内容，减小存储空间占用，并通过多级压缩算法优化存储效率。&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291714/wfs-go-1-0-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291714/wfs-go-1-0-6-released</guid>
            <pubDate>Fri, 10 May 2024 03:43:33 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Crabc 3.0 发布，低代码 API 开发平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;crabc-api&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是低代码接口开发平台，企业级 API 管理系统，深度整合 SpringBoot 和 Mybatis 实现动态数据源和动态 SQL。 支持接入（mysql、oracle、postgresql、sqlserver、达梦、TiDB、es）等 SQL 或 / NoSQL 数据源， 在编辑框内编写好 SQL 后即可快速生成 Rest 接口对外提供服务。支持 Mybatis 中 if 等标签语法、数据脱敏、 以及复杂的多 SQL 执行并支持事务， 减少通用接口的 SQL 编写，让开发人员专注更复杂的业务逻辑实现。可通过插件的，方式扩展支持其他的数据源。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;升级说明&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1、SpringBoot 升级至 3.2.5，全面拥抱 JDK21&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2、优化逻辑及问题修复&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3、启用新版官网：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.crabc.cn&quot; target=&quot;_blank&quot;&gt;www.crabc.cn&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1126&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a0ae680946b71099a122cc9c661d1a7c989.png&quot; width=&quot;2420&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;开源地址:&amp;nbsp;&lt;a href=&quot;https://gitee.com/linebyte/crabc&quot;&gt;crabc-api&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;官网地址:&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.crabc.cn%2F&quot; target=&quot;_blank&quot;&gt;crabc&lt;/a&gt;&lt;/h2&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291713/crabc-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291713/crabc-3-0-released</guid>
            <pubDate>Fri, 10 May 2024 03:35:33 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Python 3.13 发布首个 Beta：实验性自由线程模式和 JIT、改进交互式解释器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Python 3.13 Beta 1&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.python.org%2F2024%2F05%2Fpython-3130-beta-1-released.html&quot; target=&quot;_blank&quot;&gt; 已发布&lt;/a&gt;，主要变化包括改进的交互式解释器，以及实验性即时编译器 (JIT)，这将带来性能上的提升。&lt;/p&gt; 
&lt;p&gt;至于&lt;a href=&quot;https://www.oschina.net/news/251454/steering-council-notice-about-pep-703&quot;&gt;备受关注的 no-GIL&lt;/a&gt;，目前自由线程构建模式已进入实验阶段。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;PEP 703（Making the Global Interpreter Lock Optional，让全局解释器锁成为可选），简称&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;no-GIL&lt;/strong&gt;，也被称为自由线程 (free-threaded)。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;此外，循环垃圾收集器现在更具增量性，还引入了修改后的 mimalloc、以及新的类型注解等变化。&lt;/p&gt; 
&lt;p&gt;Python 3.13 Beta 1 的发布标志着已进入功能冻结阶段。在接下来的两个月中，至少还会有三个 Beta 版本，然后才是 RC 候选版本。如果一切顺利，Python 3.13 正式版本将在 10 月初发布。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291696/python-3-13-beta1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291696/python-3-13-beta1-released</guid>
            <pubDate>Fri, 10 May 2024 02:38:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>PHP 8.3.7 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;PHP 8.3.7 现已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2Farchive%2F2024.php%232024-05-09-2&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，这是一个错误修复版本。具体更新内容包括：&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;Core： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13772&quot; target=&quot;_blank&quot;&gt;GH-13772&lt;/a&gt;（启用 JIT 时 observer fcall handlers 中的 execute_data-&amp;gt;opline 指针无效）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13931&quot; target=&quot;_blank&quot;&gt;GH-13931&lt;/a&gt;（将 zero offset 应用于 Zend/zend_opcode.c 中的空指针）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13942&quot; target=&quot;_blank&quot;&gt;GH-13942&lt;/a&gt;（将 zend-max-execution-timers 的行为与其他超时实现保持一致）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F14003&quot; target=&quot;_blank&quot;&gt;GH-14003&lt;/a&gt;（使用可调用转换参数对未完成的调用进行了 Broken cleanup）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F14013&quot; target=&quot;_blank&quot;&gt;GH-14013&lt;/a&gt;（在 configure 中，附加了错误的 dnl）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F10232&quot; target=&quot;_blank&quot;&gt;GH-10232&lt;/a&gt;（如果自动加载发生在常量解析过程中，文件名和 lineno 会被错误识别）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13727&quot; target=&quot;_blank&quot;&gt;GH-13727&lt;/a&gt;（缺少 void 关键字）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Fibers： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13903&quot; target=&quot;_blank&quot;&gt;GH-13903&lt;/a&gt;（执行 copy() 时出现 ASAN false positive underflow）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Fileinfo： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13795&quot; target=&quot;_blank&quot;&gt;GH-13795&lt;/a&gt;（在&amp;nbsp;big-endian PPC 上测试 ext/fileinfo/tests/bug78987.phpt 失败）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;FPM： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13563&quot; target=&quot;_blank&quot;&gt;GH-13563&lt;/a&gt;（通过 FPM 配置中的 env 设置 bool 值失败）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Intl： 
  &lt;ul&gt; 
   &lt;li&gt;修复了 icu 74 及以上版本的构建。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;MySQLnd: 
  &lt;ul&gt; 
   &lt;li&gt;修复 32-bit non-fast-path platforms 上的移位越界问题。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Opcache： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13433&quot; target=&quot;_blank&quot;&gt;GH-13433&lt;/a&gt;（使用 opcache.preload 时 zend_class_init_statics 中的 Segmentation Fault）。&lt;/li&gt; 
   &lt;li&gt;修复了静态调用跨编译单元的错误假设。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;OpenSSL： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F10495&quot; target=&quot;_blank&quot;&gt;GH-10495&lt;/a&gt;（OpenSSL stream 上的 feof 无限期挂起）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PDO SQLite： 
  &lt;ul&gt; 
   &lt;li&gt;修复&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13984&quot; target=&quot;_blank&quot;&gt;GH-13984&lt;/a&gt;（现在在 memcmp 之前检查缓冲区大小）。&lt;/li&gt; 
   &lt;li&gt;修复&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13998&quot; target=&quot;_blank&quot;&gt;GH-13998&lt;/a&gt;（正确管理 agg_context-&amp;gt;val 的&amp;nbsp;refcount）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Phar： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13836&quot; target=&quot;_blank&quot;&gt;GH-13836&lt;/a&gt;（将 Phar 中的文件重命名为已存在的文件名会导致 NULL 指针取消引用）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13833&quot; target=&quot;_blank&quot;&gt;GH-13833&lt;/a&gt;（将 zero offset 应用于 zend_hash.c 中的空指针）。&lt;/li&gt; 
   &lt;li&gt;在调用 EVP_SignInit 之前修复潜在的 NULL 指针取消引用。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;PHPDBG： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13827&quot; target=&quot;_blank&quot;&gt;GH-13827&lt;/a&gt;（phpdbg_frame 中类型「zval」的空指针访问）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Posix： 
  &lt;ul&gt; 
   &lt;li&gt;修复 ext/posix 中可重入函数的使用。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Session： 
  &lt;ul&gt; 
   &lt;li&gt;修复了错误&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13856&quot; target=&quot;_blank&quot;&gt;GH-13856&lt;/a&gt;（ext/session/mod_files.c 中「ps_files」类型的空指针内的 Member access）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13891&quot; target=&quot;_blank&quot;&gt;GH-13891&lt;/a&gt;（在 session.trans_sid_hosts 中使用 ini_set 时的 memleak 和 segfault）。&lt;/li&gt; 
   &lt;li&gt;修复了 Windows 上文件模式的缓冲区 _read/_write 大小限制。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Streams： 
  &lt;ul&gt; 
   &lt;li&gt;修复了 Windows 上的 file_get_contents() 失败并显示「errno=22 Invalid argument」的错误。&lt;/li&gt; 
   &lt;li&gt;修复了错误&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13264&quot; target=&quot;_blank&quot;&gt;GH-13264&lt;/a&gt;（Part 1&amp;nbsp;- stream filter failure 时内存泄漏）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F13860&quot; target=&quot;_blank&quot;&gt;GH-13860&lt;/a&gt;（ext/openssl/xp_ssl.c 中的 PHP_STREAM_OPTION_CHECK_LIVENESS 情况不正确 - 导致使用 dead socket）。&lt;/li&gt; 
   &lt;li&gt;修复了错误&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fphp%2Fphp-src%2Fissues%2F11678&quot; target=&quot;_blank&quot;&gt;GH-11678&lt;/a&gt;（在 musl 1.2.4 - lfs64 上 Build 失败）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Treewide： 
  &lt;ul&gt; 
   &lt;li&gt;修复 gcc-14 Wcalloc-transpose-args 警告。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更多详情可查看&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.php.net%2FChangeLog-8.php%238.3.7&quot; target=&quot;_blank&quot;&gt;ChangeLog&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291683/php-8-3-7-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291683/php-8-3-7-released</guid>
            <pubDate>Fri, 10 May 2024 02:25:09 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>MyBatis-Flex v1.8.9 发布，一个优雅的 MyBatis 增强框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;265&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0d6ec96d8070deb116566704fcc7bfd1291.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;MyBatis-Flex： 一个优雅的 MyBatis 增强框架&lt;/h1&gt; 
&lt;h1&gt;特征&lt;/h1&gt; 
&lt;h4&gt;1、很轻量&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 整个框架只依赖 MyBatis，再无其他任何第三方依赖。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;2、只增强&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 支持 CRUD、分页查询、多表查询、批量操作，但不丢失 MyBatis 原有的任何功能。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;3、高性能&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 采用独特的技术架构、相比许多同类框架，MyBatis-Flex 的在增删改查等方面的性能均超越其 5~10 倍或以上。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;4、更灵动&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MyBatis-Flex 支持多主键、多表查询、逻辑删除、乐观锁、数据脱敏、数据加密、多数据源、分库分表、字段权限、 字段加密、多租户、事务管理、SQL 审计... 等等等等。 这一切，免费且灵动。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;MyBatis-Flex v1.8.9 更新细节如下：&lt;/strong&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;新增：QueryColumn 的 between 增加数组参数，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/CrazyAirhead&quot; target=&quot;_blank&quot;&gt;@CrazyAirhead&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;新增：代码生成器生成的 Controller 配置@RequestMapping 前缀路径，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/yfxuwork&quot; target=&quot;_blank&quot;&gt;@distantSail&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;优化：调整 ServiceImpl#getMapper 返回 Mapper 类型特化，感谢 @Clownsw&lt;/li&gt; 
  &lt;li&gt;修复：ClassUtil.newInstance 无法生成实例问题修复，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/snobbyvirus1973&quot; target=&quot;_blank&quot;&gt;@SnobbyVirus1973&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;修复：QueryWrapper.as() 可能在某些自定义生成 TableDef 下出错的问题&lt;/li&gt; 
  &lt;li&gt;修复：修复 Map 传参审计打印 SQL 不正确的问题，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;@王帅&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;修复：QueryCondition.create value 传入 List，执行 select 报错的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/mybatis-flex/mybatis-flex/issues/I9JRAT&quot;&gt;#I9JRAT:[Bug]: QueryCondition.create value 传入 List，执行 select 报错&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;修复：未生效的 JOIN 跳过拼接逻辑删除的问题，感谢&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;@王帅&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;代码贡献者，请参考：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fwhat-is-mybatisflex.html%23%25E8%25B4%25A1%25E7%258C%25AE%25E8%2580%2585&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/intro/what-is-mybatisflex.html#%E8%B4%A1%E7%8C%AE%E8%80%85&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h4&gt;&lt;strong&gt;进一步了解 MyBatis-Flex 框架，请参考一下链接：&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、快速开始：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fgetting-started.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/intro/getting-started.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;2、多表关联查询：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquery.html%23%25E5%2585%25B3%25E8%2581%2594%25E6%259F%25A5%25E8%25AF%25A2-%25E6%2588%2596%25E5%25A4%259A%25E8%25A1%25A8%25E6%259F%25A5%25E8%25AF%25A2&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/base/query.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;3、一对多、多对一：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Frelations-query.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/base/relations-query.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;4、灵活的 QueryWrapper：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fbase%2Fquerywrapper.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/base/querywrapper.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;5、逻辑删除：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Flogic-delete.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/logic-delete.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;6、乐观锁：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fversion.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/version.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;7、数据填充：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ffill.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/fill.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;6、数据脱敏：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmask.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/mask.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;7、SQL 审计：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Faudit.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/audit.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;8、多数据源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-datasource.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/multi-datasource.htm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;9、数据源加密：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdatasource-encryption.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/datasource-encryption.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10、动态表名：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdynamic-table.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/dynamic-table.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11、事务管理：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Ftx.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/tx.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;12、数据权限：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fdata-permission.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/data-permission.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;13、字段权限：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-permission.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/columns-permission.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;14、字段加密：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-encrypt.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/columns-encrypt.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;15、字典回写：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fcolumns-dict.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/columns-dict.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;16、枚举属性：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fenum-property.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/enum-property.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;17、多租户：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fcore%2Fmulti-tenancy.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/core/multi-tenancy.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;18、代码生成器：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fothers%2Fcodegen.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/others/codegen.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;19、QQ 交流群：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com%2Fzh%2Fintro%2Fqq-group.html&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com/zh/intro/qq-group.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20、更好用的功能正在路上：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-flex.com&quot; target=&quot;_blank&quot;&gt;https://mybatis-flex.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;bilibili 视频教程（免费）：&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;课程 ：《MyBatis-Flex 视频教程》&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:var(--vp-c-text-2); margin-left:0; margin-right:0&quot;&gt;课程简介：该课程由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;王帅&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;老师录制主讲，&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/Suomm&quot; target=&quot;_blank&quot;&gt;王帅&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;老师也是除了作者以外，对 MyBatis-Flex 代码贡献最大的 committer。 其无论对 MyBatis 还是 MyBatis-Flex，都有非常深入的理解。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;课程地址：&lt;/p&gt; 
&lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV11h411A7cU&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV11h411A7cU&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291669/mybatis-flex-1-8-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291669/mybatis-flex-1-8-9-released</guid>
            <pubDate>Fri, 10 May 2024 01:31:09 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🔥httpsok-v1.11.0 支持 OSS 证书自动部署</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;&lt;span&gt;🔥httpsok-v1.11.0 支持 OSS 证书自动部署&lt;/span&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;span&gt;介绍&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;httpsok&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 是一个便捷的 HTTPS 证书自动续签工具，专为 Nginx 、OpenResty 服务器设计。已服务众多中小企业，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;稳定&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;安全&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;可靠&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一行命令，一分钟轻松搞定 SSL 证书自动续期&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;code&gt;v1.11.0&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 版本新特性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复某些情况下无法识别主配置文件&lt;/span&gt;&lt;span&gt;&lt;code&gt;nginx.conf&lt;/code&gt;&lt;/span&gt;&lt;span&gt;问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复某些证书出现的签名算法解析错误问题（RSA，ECC）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复多级通配符域名、混合通配符域名证书申请问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复申请时，域名被通配符域名冗余包含，导致申请失败问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅重构 DNS 快速检测功能&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅完善 TLD 库&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;文档&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhttpsok%2Fhttpsok&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;仓库地址-github.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/httpsok/httpsok&quot;&gt;&lt;span&gt;仓库地址-gitee.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fquickstart.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;nginx 证书一键自动续期&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fapply.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;免费申请 SSL 通配符证书&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fcdn.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;CDN 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Foss.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;OSS 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;特性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;⚡️ 简单高效&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 一行命令，一分钟轻松搞定 SSL 证书自动续签&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 自动检测&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 无需关心 nginx 配置，自动识别证书配置，适合老旧系统、复杂配置的生产环境&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 泛解析、多域名、多服务器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 轻松搞定&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 证书监控&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 对于即将失效的证书，提供公众号推送提醒&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 兼容性好&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 兼容主流的 Linux 系统 &lt;/span&gt;&lt;span&gt;&lt;code&gt;Debain&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;CentOS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;Ubuntu&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;TencentOS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 等&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 支持手动申请&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 支持手动申请证书，方便部署 CDN、OSS 等场景。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;OSS 证书部署&lt;/span&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;span&gt;一、进入自动部署&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;进入 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fconsole%2Fdeploy&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;自动部署页面&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; ，选择 OSS 标签，点击 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;code&gt;新建部署任务&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 按钮&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509113752674&quot; src=&quot;https://cdn.httpsok.com/doc/assets/oss/image-20240509113752674.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;二、新建部署任务&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;① 选择云厂商&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;② 配置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;SecretId&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;span&gt;&lt;code&gt;SecretKey&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;③ 选择域名&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;④ DNS 验证通过后，点击确定&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509114350997&quot; src=&quot;https://cdn.httpsok.com/doc/assets/oss/image-20240509114350997.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;点击确认后，任务进入 &lt;/span&gt;&lt;span&gt;&lt;code&gt;待部署&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 状态，点击 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;code&gt;部署&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 按钮&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509114544740&quot; src=&quot;https://cdn.httpsok.com/doc/assets/oss/image-20240509114544740.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;三、部署成功&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;部署成功后，可以看到状态发生了变化，证书有效期也有了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509114616965&quot; src=&quot;https://cdn.httpsok.com/doc/assets/oss/image-20240509114616965.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;查看证书&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;访问 OSS 地址，可以看到证书信息已经生效了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;有些平台证书可能会有缓存，可以关闭浏览器后再试试。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509115326881&quot; src=&quot;https://cdn.httpsok.com/doc/assets/oss/image-20240509115326881.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;结束&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;恭喜您，OSS 证书部署就是这么简单。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;如果您觉得 &lt;/span&gt;&lt;span&gt;&lt;code&gt;httpsok&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 对您带来了帮助，还请动动 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;您的发财小手&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 给项目点点 &lt;/span&gt;&lt;span&gt;&lt;code&gt;star&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;也可以把我们的工具，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享给您的小伙伴&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;非常感谢大家的认可和支持🙏🙏🙏。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhttpsok%2Fhttpsok&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;仓库地址-github.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/httpsok/httpsok&quot;&gt;&lt;span&gt;仓库地址-gitee.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fquickstart.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;nginx 证书一键自动续期&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fapply.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;免费申请 SSL 通配符证书&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fcdn.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;CDN 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Foss.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;OSS 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291665/httpsok-1-11-0-oss</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291665/httpsok-1-11-0-oss</guid>
            <pubDate>Fri, 10 May 2024 01:09:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🔥架构师狂掉 1024 根头发，总算搞定 SSL 通配证书</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;&lt;span&gt;🔥架构师狂掉 1024 根头发，总算搞定 SSL 通配证书&lt;/span&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;经过许多个日日夜夜的持续开发（掉了 1024 根头发），总算搞定了 v1.11.0 版本，修复和解决了许多问题，也支持 CDN 和 OSS 证书的部署。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;code&gt;v1.11.0&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 版本新特性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复某些情况下无法识别主配置文件&lt;/span&gt;&lt;span&gt;&lt;code&gt;nginx.conf&lt;/code&gt;&lt;/span&gt;&lt;span&gt;问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复某些证书出现的签名算法解析错误问题（RSA，ECC）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复多级通配符域名、混合通配符域名证书申请问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复申请时，域名被通配符域名冗余包含，导致申请失败问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅重构 DNS 快速检测功能&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅完善 TLD 库&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;介绍&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;httpsok&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 是一个便捷的 HTTPS 证书自动续签工具，专为 Nginx 、OpenResty 服务器设计。已服务众多中小企业，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;稳定&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;安全&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;可靠&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一行命令，一分钟轻松搞定 SSL 证书自动续期&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;文档&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhttpsok%2Fhttpsok&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;仓库地址-github.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/httpsok/httpsok&quot;&gt;&lt;span&gt;仓库地址-gitee.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fquickstart.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;nginx 证书一键自动续期&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fapply.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;免费申请 SSL 通配符证书&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fcdn.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;CDN 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Foss.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;OSS 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;特性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;⚡️ 简单高效&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 一行命令，一分钟轻松搞定 SSL 证书自动续签&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 自动检测&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 无需关心 nginx 配置，自动识别证书配置，适合老旧系统、复杂配置的生产环境&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 泛解析、多域名、多服务器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 轻松搞定&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 证书监控&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 对于即将失效的证书，提供公众号推送提醒&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 兼容性好&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 兼容主流的 Linux 系统 &lt;/span&gt;&lt;span&gt;&lt;code&gt;Debain&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;CentOS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;Ubuntu&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;TencentOS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 等&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 支持手动申请&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 支持手动申请证书，方便部署 CDN、OSS 等场景。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;快速开始&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;只需二步，轻松搞定 SSL 证书自动续签。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;一、安装 httpsok&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;登陆控制枱 👉 👉 👉 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2F%3Fp%3D4c9n&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;获取 token&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style=&quot;color:#3300aa&quot;&gt;curl&lt;/span&gt; &lt;span style=&quot;color:#0000cc&quot;&gt;-s&lt;/span&gt; https://get.httpsok.com | &lt;span style=&quot;color:#3300aa&quot;&gt;bash&lt;/span&gt; &lt;span style=&quot;color:#0000cc&quot;&gt;-s&lt;/span&gt; &lt;span style=&quot;color:#22a2c9&quot;&gt;&#39;your token&#39;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;安装成功后，脚本会自动检测一次系统中的&lt;/span&gt;&lt;span&gt;&lt;code&gt;nginx&lt;/code&gt;&lt;/span&gt;&lt;span&gt;证书。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;二、DNS 解析配置&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;根据脚本运行的实际情况&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;，添对应的的 DNS 解析记录。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fdns.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;DNS 解析配置参考&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;httsok 的 DNS 解析配置示例&quot; src=&quot;https://cdn.httpsok.com/doc/assets/image-20240314024435126.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;三、完成&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;没错，已经结束，SSL 证书自动续签就这么简单。快登录控制枱查看自己的证书吧。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;控制枱-证书管理&quot; src=&quot;https://cdn.httpsok.com/doc/assets/image-20240422160902921.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291664/httpsok-1-11-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291664/httpsok-1-11-0-released</guid>
            <pubDate>Fri, 10 May 2024 01:08:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🔥httpsok-v1.11.0 支持 CDN 证书自动部署</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;&lt;span&gt;🔥httpsok-v1.11.0 支持 CDN 证书自动部署&lt;/span&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;span&gt;介绍&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;httpsok&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 是一个便捷的 HTTPS 证书自动续签工具，专为 Nginx 、OpenResty 服务器设计。已服务众多中小企业，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;稳定&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;安全&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;可靠&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一行命令，一分钟轻松搞定 SSL 证书自动续期&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;code&gt;v1.11.0&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 版本新特性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复某些情况下无法识别主配置文件&lt;/span&gt;&lt;span&gt;&lt;code&gt;nginx.conf&lt;/code&gt;&lt;/span&gt;&lt;span&gt;问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复某些证书出现的签名算法解析错误问题（RSA，ECC）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复多级通配符域名、混合通配符域名证书申请问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅修复申请时，域名被通配符域名冗余包含，导致申请失败问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅重构 DNS 快速检测功能&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;✅完善 TLD 库&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;文档&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhttpsok%2Fhttpsok&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;仓库地址-github.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/httpsok/httpsok&quot;&gt;&lt;span&gt;仓库地址-gitee.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fquickstart.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;nginx 证书一键自动续期&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fapply.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;免费申请 SSL 通配符证书&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fcdn.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;CDN 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Foss.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;OSS 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;特性&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;⚡️ 简单高效&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 一行命令，一分钟轻松搞定 SSL 证书自动续签&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 自动检测&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 无需关心 nginx 配置，自动识别证书配置，适合老旧系统、复杂配置的生产环境&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 泛解析、多域名、多服务器&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 轻松搞定&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 证书监控&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 对于即将失效的证书，提供公众号推送提醒&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 兼容性好&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 兼容主流 Linux 系统 &lt;/span&gt;&lt;span&gt;&lt;code&gt;Debain&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;CentOS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;Ubuntu&lt;/code&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;code&gt;TencentOS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;span&gt;&lt;code&gt;docker 容器&lt;/code&gt;&lt;/span&gt;&lt;span&gt;环境&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ 支持手动申请&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 支持手动申请证书&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;✅ CDN、OSS 轻松搞定&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 支持主流的厂商的 CDN 和 OSS 自动部署&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;快速开始&lt;/span&gt;&lt;/h2&gt; 
&lt;h1&gt;&lt;span&gt;CDN 证书部署&lt;/span&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;span&gt;一、进入自动部署&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;进入 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fconsole%2Fdeploy&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;自动部署页面&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; ，选择 OSS 标签，点击 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;code&gt;新建部署任务&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 按钮&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509104433466&quot; src=&quot;https://cdn.httpsok.com/doc/assets/cdn/image-20240509104433466.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;二、新建部署任务&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;① 选择云厂商&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;② 配置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;SecretId&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 和 &lt;/span&gt;&lt;span&gt;&lt;code&gt;SecretKey&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;③ 选择域名&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;④ DNS 验证通过后，点击确定&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509104929308&quot; src=&quot;https://cdn.httpsok.com/doc/assets/cdn/image-20240509104929308.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;点击确认后，任务进入 &lt;/span&gt;&lt;span&gt;&lt;code&gt;待部署&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 状态，点击 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;code&gt;部署&lt;/code&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 按钮&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509105053078&quot; src=&quot;https://cdn.httpsok.com/doc/assets/cdn/image-20240509105053078.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;三、部署成功&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;部署成功后，可以看到状态发生了变化，证书有效期也有了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509111558355&quot; src=&quot;https://cdn.httpsok.com/doc/assets/cdn/image-20240509111558355.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;查看证书&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;访问你的 CDN 地址，可以看到证书信息已经生效了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;有些平台证书可能会有缓存，可以关闭浏览器后再试试。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;image-20240509110350868&quot; src=&quot;https://cdn.httpsok.com/doc/assets/cdn/image-20240509110350868.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;结束&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;恭喜您，CDN 证书部署就是这么简单。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;如果您觉得 &lt;/span&gt;&lt;span&gt;&lt;code&gt;httpsok&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 对您带来了帮助，还请动动 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;您的发财小手&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; 给项目点点 &lt;/span&gt;&lt;span&gt;&lt;code&gt;star&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;也可以把我们的工具，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;分享给您的小伙伴&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#34495e; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;非常感谢大家的认可和支持🙏🙏🙏。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhttpsok%2Fhttpsok&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;仓库地址-github.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://gitee.com/httpsok/httpsok&quot;&gt;&lt;span&gt;仓库地址-gitee.com&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fquickstart.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;nginx 证书一键自动续期&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fapply.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;免费申请 SSL 通配符证书&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Fcdn.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;CDN 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhttpsok.com%2Fdoc%2Fguide%2Foss.html&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;OSS 证书部署&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291663/httpsok-1-11-0-cdn</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291663/httpsok-1-11-0-cdn</guid>
            <pubDate>Fri, 10 May 2024 01:07:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>巡云轻论坛系统 6.3 发布，包含多项更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;v6.3 主要更新&lt;/p&gt; 
&lt;p&gt;1、新增评论、问答、回复模块点赞功能。&lt;br&gt; 2、新增话题标签上传图片功能。&lt;br&gt; 3、新增问题标签上传图片功能。&lt;br&gt; 4、新增用户中心显示管理员信息。&lt;br&gt; 5、修复 accessToken 过期时，多个 ajax 同时请求无法自动续期的问题。&lt;br&gt; 6、修复&#39;我的动态&#39;的图片延迟加载被‘更多’挡住。&lt;br&gt; 7、修复热门话题没有过滤已删除的话题。&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; 轻论坛系统简介&lt;/p&gt; 
&lt;p&gt;巡云轻论坛系统包含论坛、问答模块。系统采用 JAVA+MYSQL 架构，自适应手机端和电脑端，界面简洁，性能高效。数据库表结构设计使用分表方案，提高系统的负载能力。 后台数据库备份 / 还原、全站指定目录打包、一键自动升级等功能使维护简单方便。&lt;/p&gt; 
&lt;p&gt;演示网站：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.diyhi.com%2Fcms.html&quot; target=&quot;_blank&quot;&gt;http://www.diyhi.com/cms.html&lt;/a&gt; 页面可获取前后台演示地址、登录账号和密码 (Spring 版)&lt;/p&gt; 
&lt;p&gt;开源代码托管平台&lt;br&gt; 码云 (Spring 版)：&lt;a href=&quot;https://gitee.com/diyhi/bbs&quot;&gt;https://gitee.com/diyhi/bbs&lt;/a&gt;&lt;br&gt; 码云 (Spring Boot 版)：&lt;a href=&quot;https://gitee.com/diyhi/bbs-pro&quot;&gt;https://gitee.com/diyhi/bbs-pro&lt;/a&gt;&lt;br&gt; github (Spring 版)：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdiyhi%2Fbbs&quot; target=&quot;_blank&quot;&gt;https://github.com/diyhi/bbs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;2874&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fae87020dc9a00f30f1270e6294e19e07b0.jpg&quot; width=&quot;2015&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291662/diyhibbs-6-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291662/diyhibbs-6-3-released</guid>
            <pubDate>Fri, 10 May 2024 01:02:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>停止维护前的最后一个版本，BookStack v2.12 发布，支持图书版本控制</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;程序介绍&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;BookStack，基于 Mindoc、使用 Go 语言的 Beego 框架开发的功能类似 GitBook 和看云的在线文档管理系统，拥有简洁美观的页面布局，实现了文档采集、导入、电子书生成以及版本控制等强大的文档功能，并推出了配套的开源微信小程序&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/truthhun/BookChat&quot; target=&quot;_blank&quot;&gt;BookChat&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和使用&lt;code&gt;uni-app&lt;/code&gt;开发的开源手机 APP&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/truthhun/BookChatApp&quot; target=&quot;_blank&quot;&gt;BookChatApp&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202101/1659d50b8e1a8988.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;v2.12 升级日志&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;1. 支持图书版本控制：可以在后台创建版本库，然后将图书划分版本。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;PC 端效果&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715300936876309085/0fd831b1_1593004.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;移动端效果&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715300978180979533/305ba671_1593004.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;阅读页效果&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://foruda.gitee.com/images/1715301040208328512/fadc1203_1593004.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;2. 阅读模式，支持日间和夜间模式&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;3. 优化文档渲染模式&lt;/strong&gt;&lt;br&gt; &lt;strong&gt;4. 修复导入 zip 出现 panic 的问题&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;附 v2.11 升级日志&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;鉴于 v2.11 发布至今已过了两年多...&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;1. 支持自定义内容阅读页右上角导航栏链接。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;操作方式：在书籍设置页面的&lt;code&gt;导航栏&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;根据提示添加相应链接，保存后，即可在书籍阅读页面右上角显示。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3bf0202d90ce8.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3bf1ba2159058.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;2. 在个人书籍列表页，支持&lt;code&gt;拷贝书籍&lt;/code&gt;（适用于书籍版本迭代发布）；支持生成电子书的进度状态显示。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3bf6434c9cd62.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;3. 内容阅读页支持将当前内容打印为 PDF&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;4. 修改文档章节标识时，联动修改书籍内所有链接到该章节的内链。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;5. 在个人书籍列表页，支持个人书籍简单检索，特别是在用户创建了比较多书籍项目的时候特别有用。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3bfb8415ea329.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;6. 支持设置默认首页，您可以将&lt;code&gt;发现页&lt;/code&gt;、&lt;code&gt;分类页&lt;/code&gt;、&lt;code&gt;搜索页&lt;/code&gt;或者外链等任意页面设置为首页&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3bfda8558b23e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;7. 优化管理后台的配置管理功能 (见上图)，拆分为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;基础&lt;/code&gt;、&lt;code&gt;界面&lt;/code&gt;、&lt;code&gt;用户&lt;/code&gt;、&lt;code&gt;搜索&lt;/code&gt;、&lt;code&gt;内容&lt;/code&gt;、&lt;code&gt;运营&lt;/code&gt;、&lt;code&gt;APP/小程序&lt;/code&gt;等配置项，便于配置和管理&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;8. 支持宽屏 (页面占满屏幕) 和窄屏 (页面占据 80% 左右居中显示) 设置&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在，管理后台 -&amp;gt; 配置管理 -&amp;gt; 页面，里面进行设置&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;9. 游客阅读设置，支持设置允许未登录的游客可阅读的内容百分比（默认为 100%）。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在，管理后台 -&amp;gt; 配置管理 -&amp;gt; 运营，里面设置&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3e13545ff07b0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;10. 修复书籍分类数量统计不正确的问题&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;11. 修复一个安全问题（&lt;strong&gt;建议先行版用户升级到当前 v2.11 版本，普通版本用户升级到 v2.10 版本&lt;/strong&gt;）&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;12. 支持章节内容评论以及回复评论 (均需要后台审核方可显示)&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.sitestack.cn/projects/help/202111/16b3c146028d8fd4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;13. 根据依赖安装情况屏蔽相关功能:&lt;/p&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:879.203px; word-break:initial; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;依赖&lt;/th&gt; 
   &lt;th&gt;作用&lt;/th&gt; 
   &lt;th&gt;关联功能&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;calibre&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;生成 pdf、epub、mobi 等电子书&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;未安装该依赖，屏蔽电子书生成按钮&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;git&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;导入 gitee、github 等 git 托管平台的电子书&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;未安装该依赖，屏蔽 git clone 方式的电子书导入&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;chrome 或 puppeteer&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;内容采集和渲染的导入内容&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dfe2e5; border-style:solid; border-width:1px&quot;&gt;未安装该依赖，屏蔽所有书籍导入相关页面功能&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;详细&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bookstack.cn%2Fread%2Fhelp%2FUbuntu.md&quot; target=&quot;_blank&quot;&gt;安装部署文档&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;温馨提示&lt;/strong&gt;： 升级部署前，请自行对旧版本程序以及数据库进行备份。&lt;/p&gt; 
&lt;h2&gt;相关地址&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;BookStack 官网&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;书栈网：&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bookstack.cn&quot; target=&quot;_blank&quot;&gt;https://www.bookstack.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;手机 APP 下载体验：&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fwww.bookstack.cn%2Fapp&quot; target=&quot;_blank&quot;&gt;https://www.bookstack.cn/app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;BookStack 开源地址&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee (码云):&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/truthhun/BookStack&quot; target=&quot;_blank&quot;&gt;https://gitee.com/truthhun/BookStack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub 开源:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FTruthHun%2FBookStack&quot; target=&quot;_blank&quot;&gt;https://github.com/TruthHun/BookStack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;配套手机 APP BookChatApp 开源地址&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee (码云)：&lt;a href=&quot;https://gitee.com/truthhun/BookChatApp&quot; target=&quot;_blank&quot;&gt;https://gitee.com/truthhun/BookChatApp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub 开源：&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftruthhun%2FBookChatApp&quot; target=&quot;_blank&quot;&gt;https://github.com/truthhun/BookChatApp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;配套微信小程序 BookChat 开源地址&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee (码云)：&lt;a href=&quot;https://gitee.com/truthhun/BookChat&quot; target=&quot;_blank&quot;&gt;https://gitee.com/truthhun/BookChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub 开源：&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftruthhun%2FBookChat&quot; target=&quot;_blank&quot;&gt;https://github.com/truthhun/BookChat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;关于停止维护的原因&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0em; margin-right:0em; text-align:start&quot;&gt;其实 BookStack 早在两年前就已经死了，只是没有宣布它的死讯。至于为什么停止维护，原因会近期专门发下公告吐槽下，说说这些年开源 BookStack 的明与暗、苦与乐...&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/291661/bookstack-2-12-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/291661/bookstack-2-12-released</guid>
            <pubDate>Fri, 10 May 2024 00:49:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>