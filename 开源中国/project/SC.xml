<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 25 Aug 2025 02:42:29 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>HandBrake 1.10.1 发布，多功能视频转码工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;HandBrake 1.10.1 现已发布。HandBrake 是一款适用于 Linux、Mac 和 Windows 的开源视频转码器。具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;All platforms&lt;/h3&gt; 
&lt;h4 style="text-align:start"&gt;Video&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了使用 x265 编码时可能出现的视觉损坏问题&lt;/li&gt; 
 &lt;li&gt;修复了 SVT-AV1 预设 10、9 和 8 与 SSIM 调谐不兼容的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="text-align:start"&gt;&lt;span style="color:#1f2328"&gt;第三方库&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新的库 
  &lt;ul&gt; 
   &lt;li&gt;HarfBuzz 11.4.2 (subtitles)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;&lt;span style="color:#1f2328"&gt;Linux&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了运行 flatpak 构建时的预览音频&lt;/li&gt; 
 &lt;li&gt;修复了标题更改时 Vorbis passthru checkbox 未应用的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;&lt;span style="color:#1f2328"&gt;Mac&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进了自定义边框颜色验证&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;&lt;span style="color:#1f2328"&gt;Windows&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加了新的翻译 
  &lt;ul&gt; 
   &lt;li&gt;罗马尼亚语（Română）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;修复 arm64 构建&lt;/li&gt; 
 &lt;li&gt;修复音轨名称生成问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHandBrake%2FHandBrake%2Freleases%2Ftag%2F1.10.1" target="_blank"&gt;https://github.com/HandBrake/HandBrake/releases/tag/1.10.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368254/handbrake-1-10-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368254/handbrake-1-10-1-released</guid>
      <pubDate>Mon, 25 Aug 2025 02:37:27 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>jsoup 1.21.2 发布，Java HTML 解析器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;jsoup 1.21.2 现已发布，&lt;span style="color:#192943"&gt;新增了对 HTTP/2 连接中自定义&lt;code&gt;SSLContext&lt;/code&gt;的支持，并提升了属性中用户数据处理方式的一致性。此外，它还提升了 DOM 操作和片段解析的性能，并修复了流解析、遍历、克隆和并发读取中的一些边缘情况。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;变化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;已弃用的内部（但可见）方法&lt;code&gt;Normalizer#normalize(String, bool)&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttribute.html%23shouldCollapseAttribute%28org.jsoup.nodes.Document.OutputSettings%29" target="_blank"&gt;Attribute#shouldCollapseAttribute(Document.OutputSettings)&lt;/a&gt;&lt;/code&gt;。这些将在未来的版本中删除。&lt;/li&gt; 
 &lt;li&gt;已弃用&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23sslSocketFactory%28javax.net.ssl.SSLSocketFactory%29" target="_blank"&gt;Connection#sslSocketFactory(SSLSocketFactory)&lt;/a&gt;&lt;/code&gt;，建议使用新的&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23sslContext%28javax.net.ssl.SSLContext%29" target="_blank"&gt;Connection#sslContext(SSLContext)&lt;/a&gt;&lt;/code&gt;。使用&lt;code&gt;sslSocketFactory&lt;/code&gt;将强制使用旧&lt;code&gt;HttpUrlConnection&lt;/code&gt;实现，该实现不支持 HTTP/2。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2370" target="_blank"&gt;#2370&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;改进&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;当进行 pretty-printing 时，如果有连续的文本节点（通过 DOM 操作），则它们之间的非重要空白将被折叠。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2349" target="_blank"&gt;#2349&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;更新&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23statusMessage%28%29" target="_blank"&gt;Connection.Response#statusMessage()&lt;/a&gt;&lt;/code&gt;为在使用&lt;code&gt;HttpClient&lt;/code&gt;实现时返回一个简单的可记录字符串消息（例如「OK」），否则不会返回任何服务器设置的状态消息。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2346" target="_blank"&gt;#2356&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23size%28%29" target="_blank"&gt;Attributes#size()&lt;/a&gt;&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23isEmpty%28%29" target="_blank"&gt;Attributes#isEmpty()&lt;/a&gt;&lt;/code&gt;现在将所有内部属性（例如用户数据）排除在其计数之外。这与属性的序列化输出和迭代器保持一致。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2369" target="_blank"&gt;#2369&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23sslContext%28javax.net.ssl.SSLContext%29" target="_blank"&gt;Connection#sslContext(SSLContext)&lt;/a&gt;&lt;/code&gt;以向请求提供自定义 SSL (TLS) 上下文，同时支持&lt;code&gt;HttpClient&lt;/code&gt;和旧版&lt;code&gt;HttUrlConnection&lt;/code&gt;实现。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2370" target="_blank"&gt;#2370&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;针对 DOM 操作方法的性能优化，包括在多次移除元素的第一个子元素（&lt;code&gt;element.child(0).remove()&lt;/code&gt;），以及使用&lt;code&gt;Parser#parseBodyFragement()&lt;/code&gt;解析大量直接子元素时的情景。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2373" target="_blank"&gt;#2373&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;错误修复&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;当从 InputStream 进行解析并且多字节字符恰好跨越缓冲区边界时，流将无法完全读取。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2353" target="_blank"&gt;#2353&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;在&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FNodeTraversor.html" target="_blank"&gt;NodeTraversor&lt;/a&gt;&lt;/code&gt;中，如果在&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FDocument.html%23head%28%29" target="_blank"&gt;head()&lt;/a&gt;&lt;/code&gt;调用期间删除了最后一个子元素，则父元素会被访问两次。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2355" target="_blank"&gt;#2355&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;克隆具有 Attributes 对象的 Element 会向该克隆添加一个空的内部用户数据属性，这会导致&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23size%28%29" target="_blank"&gt;Attributes#size()&lt;/a&gt;&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23isEmpty%28%29" target="_blank"&gt;Attributes#isEmpty()&lt;/a&gt;&lt;/code&gt;出现意外结果。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2356" target="_blank"&gt;#2356&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在多线程应用程序中，多个线程同时调用同一元素&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23children%28%29" target="_blank"&gt;Element#children()&lt;/a&gt;&lt;/code&gt;时，该方法生成内部子元素缓存（其子节点的筛选视图）时可能会发生竞争条件。由于 DOM 对象的并发读取应该是线程安全的，无需外部同步，因此该方法已更新为原子执行。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2366" target="_blank"&gt;#2366&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;格式错误的 HTML 可能会在 adoption agency 期间抛出 IndexOutOfBoundsException。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2377" target="_blank"&gt;#2377&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fnews%2Frelease-1.21.2" target="_blank"&gt;https://jsoup.org/news/release-1.21.2&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368253/jsoup-1-21-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368253/jsoup-1-21-2-released</guid>
      <pubDate>Mon, 25 Aug 2025 02:30:27 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🚀Jarboot 服务运维平台 v3.3.0 重磅发布！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"&gt;Jarboot 是一款集&lt;span style="color:#40485b"&gt;服务启停、管理、诊断的平台，可以管理、守护、监控及诊断本地和远程的服务进程。本次发布更新了几款重磅功能，推荐无脑升级。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#40485b"&gt;修复已知的 bug，修复已知的 bug，新增 docker compose 部署方案，新增定时重启功能，新增 jarboot 软件升级功能方便后续 jarboot 的升级更新。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#40485b"&gt;官方文档及功能视频演示：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fjarboot" target="_blank"&gt;Jarboot 文档&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align: left;"&gt;&lt;span style="color:#333333"&gt;&lt;strong&gt;Gitee 主页&lt;/strong&gt;：&lt;a href="https://gitee.com/majz0908/jarboot"&gt;https://gitee.com/majz0908/jarboot&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align: left;"&gt;&lt;span style="color:#333333"&gt;GitHub 主页：&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmajianzheng%2Fjarboot" target="_blank"&gt;https://github.com/majianzheng/jarboot&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//30e09e4ccafc9492d8163ea6542e7216.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#222222"&gt;同时更新了官方 maven 仓库，可以通过引用如下客户端仓库进行二次开发。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.github.majianzheng&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jarboot-client&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.3.0&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:left"&gt;spring-boot：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;io.github.majianzheng&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-jarboot&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#114ba6"&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.3.0&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#114ba6"&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;新特性&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;启动时支持通过环境变量初始化账号（JARBOOT_USER）和密码（JARBOOT_DEFAULT_PWD）&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;在启动 Jarboot 的前可以通过配置&lt;span style="color:#40485b"&gt;JARBOOT_USER 和 JARBOOT_DEFAULT_PWD 环境变量的方式来配置默认的账号和密码，未配置环境变量时默认账号和密码均为 jarboot。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;自启动配置，配置自启动时在 jarboot 启动后会自动启动该服务&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;配置自启动可以让 jarboot 启动自身后自动启动该服务，默认配置是跟随系统配置，即【设置】/ 【系统配置】/ 【jarboot 启动后自动启动服务】这个配置项，选择【自动启动】则无论系统配置如何都会自动启动。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e93333c322cbae14697dbdbd77a8671a.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;可通过-Dstart.wait.time=30000 指定最大的启动等待时间&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;client-cli 支持通过 token 登录，可通过环境变量或-token 参数传入&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;客户端脚本工具，可以通过该脚本工具远程操控服务，详细参见文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fjarboot%2Fusage%2Fey45hp43eo4d1f4o" target="_blank"&gt;client-cli 客户端工具 · 语雀&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;新增 docker compose 集群及单节点的配置文件示例&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;详细可见文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fjarboot%2Fusage%2Fuse_docker" target="_blank"&gt;使用 Docker · 语雀&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#999999"&gt;# clone 项目&lt;/span&gt;
&lt;span style="color:#999999"&gt;# 从 gitee clone&lt;/span&gt;
&lt;span&gt;git&lt;/span&gt; &lt;span style="color:#00753b"&gt;clone https://gitee.com/majz0908/jarboot.git&lt;/span&gt;
&lt;span style="color:#999999"&gt;# 从 github clone&lt;/span&gt;
&lt;span&gt;git&lt;/span&gt; &lt;span style="color:#00753b"&gt;clone https://github.com/majianzheng/jarboot.git&lt;/span&gt;

&lt;span&gt;cd&lt;/span&gt; &lt;span style="color:#00753b"&gt;jarboot&lt;/span&gt;
&lt;span style="color:#999999"&gt;
# 编译打包项目，需 jdk17+、maven、nodejs16+&lt;/span&gt;
&lt;span&gt;mvn&lt;/span&gt; &lt;span style="color:#00753b"&gt;clean install -P prod&lt;/span&gt;

&lt;span&gt;cd&lt;/span&gt; &lt;span style="color:#00753b"&gt;docker&lt;/span&gt;
&lt;span style="color:#999999"&gt;# 若在运行中，先关闭&lt;/span&gt;
&lt;span&gt;sudo&lt;/span&gt; &lt;span style="color:#00753b"&gt;docker compose down&lt;/span&gt;
&lt;span style="color:#999999"&gt;
# 构建 jarboot 镜像&lt;/span&gt;
&lt;span&gt;sudo&lt;/span&gt; &lt;span style="color:#00753b"&gt;bash docker_image_build.sh&lt;/span&gt;
&lt;span style="color:#999999"&gt;
#  初始化 docker 目录&lt;/span&gt;
&lt;span&gt;sudo&lt;/span&gt; &lt;span style="color:#00753b"&gt;bash init_docker_dir.sh&lt;/span&gt;
&lt;span style="color:#999999"&gt;
# vi .env 文件，可通过修改环境变量配置来修改默认的用户名和密码，默认用户名：jarboot 密码：jarboot&lt;/span&gt;
&lt;span style="color:#999999"&gt;
# 启动 jarboot docker compose，单机版可指定使用【docker-compose-standalone.yml】文件&lt;/span&gt;
&lt;span&gt;sudo&lt;/span&gt; &lt;span style="color:#00753b"&gt;docker compose up -d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;新增软件升级脚本，可通过脚本一键升级 jarboot，执行&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#f7f7f9"&gt;bin/upgrade.sh&lt;/span&gt;&lt;/span&gt;或&lt;span style="color:#000000"&gt;&lt;span style="background-color:#f7f7f9"&gt;bin/windows/upgrade.bat&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;如下图可以通过执行&lt;strong&gt;upgrade.bat -d {安装路径}&lt;/strong&gt;，来升级或重装 jarboot&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//75d27c60749428c50261447fbcad989a.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;新增软件升级功能，可在界面上点击升级，选择安装包或安装包下载连接，可一键升级&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;如下图，除了可以通过脚本来升级/重装外，也可以通过界面右上角的升级按钮来升级或重装，可以通过上次安装包文件或者输入下载链接地址让 jarboot 自己下载两种方式来升级或安装。效果与执行 upgrade 脚本一样。&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;值得注意的是如果是集群模式会自动升级集群中的所有节点，但要注意升级前把所有服务要先关掉。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//875e8d5be9f87554de17b028b575dd64.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;新增定时重启服务配置，可使用 CRON 表达式配置重启计划&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;有些小伙伴开发的服务有时需要定时重新启动，可通过这个配置来完成。如下图配置在每天的凌晨 1 点 15 重启一次服务。这样每天就会重启一次，适用于一些非核心且不怎么稳定又没有太多精力去修复的服务。总之重启大法好。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//20cc6ef84dedec3255a90f775c8d854a.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;.env 文件支持，可通过工作目录下的.env 文件配置环境变量&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;服务启动时会自动加载【工作目录】下的.env 文件中配置的环境变量，并和服务配置中配置的环境变量合并。注意工作目录未配置时默认是服务目录，如果修改了工作目录只会加载工作目录中.env 文件。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//35953f301857e0162d35048fd30834df.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#40485b"&gt;服务配置界面增加提示信息，鼠标移到提示信息图标上可查看更多帮助信息&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;bug 修复&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#40485b"&gt;打印日志太多时异常掉线问题，The remote endpoint was in state [BINARY_FULL_WRITING] which is an invalid state for called method&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#40485b"&gt;集群模式下文件上传到另一节点时，服务名为中文时上传文件失败问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#40485b"&gt;修复使用 docker compose 集群模式下节点认证失败问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#40485b"&gt;断开重连时新增 cookie 校验功能，校验失败则退出登录&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;下载 &amp;amp; 使用&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;包下载：&lt;a href="https://gitee.com/majz0908/jarboot/releases"&gt;https://gitee.com/majz0908/jarboot/releases&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;Gitee 主页：&lt;a href="https://gitee.com/majz0908/jarboot"&gt;https://gitee.com/majz0908/jarboot&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;GitHub 主页：&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmajianzheng%2Fjarboot" target="_blank"&gt;https://github.com/majianzheng/jarboot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;更多帮助见官方文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.yuque.com%2Fjarboot%2F" target="_blank"&gt;www.yuque.com/jarboot/&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368251/jarboot-3-3-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368251/jarboot-3-3-0-released</guid>
      <pubDate>Mon, 25 Aug 2025 02:17:27 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Dante Cloud 3.5.5.0 发布， 「你们项目是单体还是微服务？」 「我都是。」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;[一] 项目简介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 国内首个支持阻塞式和响应式服务并行的微服务平台。是采用&lt;strong&gt;领域驱动模型 (DDD)&lt;strong&gt;设计思想，以「&lt;strong&gt;高质量代码、低安全漏洞&lt;/strong&gt;」为核心，基于 Spring 生态全域开源技术，高度&lt;/strong&gt;模块化和组件化设计&lt;/strong&gt;，支持&lt;strong&gt;智能电视、IoT 等物联网设备&lt;/strong&gt;认证，满足&lt;strong&gt;国家三级等保要求&lt;/strong&gt;，支持&lt;strong&gt;接口国密数字信封加解密&lt;/strong&gt;等一系列安全体系的多租户微服务解决方案。独创的可以「&lt;strong&gt;一套代码实现微服务和单体两种架构灵活切换&lt;/strong&gt;」的企业级应用系统。&lt;/p&gt; 
&lt;h2&gt;[二] 项目理念&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 一直秉承着「简洁、高效、包容、务实」的理念，使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，不断地深耕细作、去粗取精、用心打造。目标是构建一款&lt;code&gt;代码质量高、维护投入低、安全防护强&lt;/code&gt;的，可以帮助用户快速跨越架构技术选型、技术研究探索阶段，降低传统项目中因安全漏洞、技术负债、低质代码等潜在隐患所产生的高维护投入，期望像项目名字寓意一样，在行业变革的时期承上启下，助力企业信息化建设和变革的产品。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 核心关注点是：&lt;strong&gt;「高质量的系统代码」&lt;/strong&gt;、&lt;strong&gt;「合理的系统架构」&lt;/strong&gt;、&lt;strong&gt;「低耦合的模块划分」&lt;/strong&gt;、&lt;strong&gt;「高安全性系统实现」&lt;/strong&gt;、&lt;strong&gt;「灵活的功能扩展能力」&lt;/strong&gt;，&lt;strong&gt;「优质的微服务实现」&lt;/strong&gt;。不会像其它一些系统一样，追求 &lt;strong&gt;业务功能&lt;/strong&gt; 的 &lt;strong&gt;丰富&lt;/strong&gt; 性。堆叠大量无法做到真正通用的功能，反倒会成为负担和干扰，不如由用户自己按照需求灵活设计和实现。&lt;/p&gt; 
&lt;h2&gt;[三] 架构设计&lt;/h2&gt; 
&lt;p&gt;Dante Cloud 除了提供一套完整的微服务架构以外，还支持以单体架构运行。这里的微服务架构和单体架构并不是分离的两套代码，也不是分离的两个项目。而是完全融合的一整套代码，使用时可以根据需要选择是以微服务模式或者单体模式运行。这是 Dante Cloud 微服务最大的特色之一：&lt;strong&gt;「一套代码、两种架构」&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;基于 &lt;code&gt;Spring Boot&lt;/code&gt; 和 &lt;code&gt;Spring Cloud&lt;/code&gt; 的微服务架构，已经成为企业级应用建设的主流方案。但不可否认的是，搭建一套微服务架构所需的基础设施越来越多，也越来越复杂。仅仅是在开发电脑上搭建一套运行开发调试环境，其复杂度和所需的资源也不容小觑。而很多应用特别是小型应用，在早期开发中或者用户量不大的前期，很多情况下一套单体的，前后端分离的后台就足以满足。完全没有必要上一整套微服务，额外增加复杂度。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud &lt;strong&gt;「一套代码、两种架构」&lt;/strong&gt; 的特点，可以帮助企业在项目早期以单体架构快速建设项目、方便开发人员在本地进行开发以及新技术研究。在项目后期随着用户规模增大以及并发需求提升时，可以快速无缝迁移至微服务架构。&lt;/p&gt; 
&lt;h2&gt;[四] 实现组件&lt;/h2&gt; 
&lt;p&gt;本项目并未使用任何复杂难懂或难以上手掌握的技术，项目中所涉及核心关键组件中，其中「&lt;strong&gt;近 80% 均为 Spring 生态原生组件&lt;/strong&gt;」。技术实现均为各组件标准用法的组合与应用，编码风格和代码设计一直也在极尽努力尽量与 Spring 生态的标准规范用法保持一致，只不过经过大量的版本迭代和重构之后逐渐形成了一定的封装与抽象。&lt;/p&gt; 
&lt;p&gt;学习使用本项目对 &lt;strong&gt;Java 以及 Spring 生态基础知识&lt;/strong&gt;，以及对 &lt;strong&gt;微服务思想理念的认知&lt;/strong&gt; 要求较高。因此，如果你觉得本项目学习曲线高、掌握难度大，不像其它同类开源项目那样「&lt;strong&gt;简单&lt;/strong&gt;」，那么很有可能是你尚未 &lt;strong&gt;真正&lt;/strong&gt; 的了解或者掌握 Spring 生态的相关组件。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;听过不等于知道&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;知道不等于了解&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;了解不等于会用&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;会用不等于精通&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;当然，换个角度，本项目也可以是深入学习掌握 Spring 生态各组件的优秀案例。&lt;strong&gt;建议详细阅读《企业 IT 架构转型之道：阿里巴巴中台战略思想与架构实战》一书（可以先读前几章）之后再上手本项目，特别是对于仅擅长单体应用的朋友，一定要读！&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本项目提供了《Dante Cloud 及相关知识学习方法和学习路径的建议》，欢迎感兴趣的朋友阅读，&lt;a href="https://my.oschina.net/pointerv/blog/18630283"&gt;【在线阅读】&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud 所使用的核心组件如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;序号&lt;/th&gt; 
   &lt;th&gt;Spring 生态组件&lt;/th&gt; 
   &lt;th&gt;国内开源组件&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Spring Boot&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Alibaba&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Spring Security&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Tencent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;Spring Security OAuth2&lt;/td&gt; 
   &lt;td&gt;JetCache&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Spring Authorization Server&lt;/td&gt; 
   &lt;td&gt;Mybatis Plus&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;Spring Data JPA&lt;/td&gt; 
   &lt;td&gt;JustAuth&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;Spring Data MongoDB&lt;/td&gt; 
   &lt;td&gt;WxJava&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;Spring Data Redis&lt;/td&gt; 
   &lt;td&gt;Hutool&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;Spring Data Envers&lt;/td&gt; 
   &lt;td&gt;sms-spring-boot-starter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;Spring Cloud&lt;/td&gt; 
   &lt;td&gt;grpc-spring-boot-starter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Bus&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Stream&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Gateway&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Loadbalancer&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;Spring Cloud OpenFegin&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Zookeeper&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;Spring Session&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;Spring Integration&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;Spring Kafka&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;Spring WebSocket&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;Spring RSocket&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;Spring Webflux&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;Micrometer&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;SpringDoc&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;Spring Boot Admin&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;[五] 交流反馈&lt;/h2&gt; 
&lt;p&gt;为了方便 Dante Cloud 开源版及企业版用户交流，深入了解、掌握 Dante Cloud 使用相关技术栈，快速解决实际应用问题。自 2025 年 8 月 18 日起，Dante Cloud 重新开放 &lt;strong&gt;技术交流群&lt;/strong&gt;，欢迎所有 &lt;code&gt;真心&lt;/code&gt; 交流技术朋友加入。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;如何进群&lt;/strong&gt;：详见&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.vip%2Fsupport%2Fcommunication.html" target="_blank"&gt;【技术交流群】&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;[六] 本次更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;主要更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] Spring Boot 版本升级至 3.5.5&lt;/li&gt; 
   &lt;li&gt;[升级] Spring Boot Admin 版本升级至 3.5.2&lt;/li&gt; 
   &lt;li&gt;[升级] Spring Authorization Server 版本升级至 1.5.2&lt;/li&gt; 
   &lt;li&gt;[升级] Nacos 版本升级至 3.0.3。自封装支持 Postgresql 的 Nacos Docker 镜像已经上传至 Docker Hub 和 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FQuay.IO" target="_blank"&gt;Quay.IO&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[优化] 系统已支持 Redis 8.2.1 版本，&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其它更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 前端工程新增主题切换特效&lt;/li&gt; 
   &lt;li&gt;[修复] 修复自定义扩展 Client Credentials 模式 Provider 与 SAS 最新配置方式不匹配，导致 Client Credentials 模式使用不稳定问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复物联网设备客户端动态注册，因循环开启认证导致客户端注册生的 Registered Client 信息被覆盖问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 Spring Session 在退出系统时会抛出 java.lang.IllegalStateException: LettuceConnectionFactory has been STOPPED. Use start() to initialize it 问题。fix：#ICTVGU&lt;/li&gt; 
   &lt;li&gt;[修复] 修复前端设备码验证轮询 API 返回信息错误&lt;/li&gt; 
   &lt;li&gt;[修复] 修复客户端动态注册时 oauth2_authorization_resource 表中，出现多条相同 clientId 信息存在，导致查询出错问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复设备码授权默认验证成功后跳转地址错误问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复前端 framework kernel 模块因导入信息错误，导致模块打包过大问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 @vue/tsconfig 升级至 0.8.0，默认开启 noUncheckedIndexedAccess 和 exactOptionalPropertyTypes 配置，导致打包编译时出现错误提示问题&lt;/li&gt; 
   &lt;li&gt;[重构] 重构前端 Axios 组件抽象定义中的类型，让类型验证更准确，减少不必要的类型转换&lt;/li&gt; 
   &lt;li&gt;[优化] IP 地址库数据库更新至 2025-08-13&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端客户端动态注册默认参数，避免注册时生成不必要的授权模式&lt;/li&gt; 
   &lt;li&gt;[优化] 删除 Baidu OCR OpenAPI 封装模块&lt;/li&gt; 
   &lt;li&gt;[优化] 去除 Velocity 组件的依赖以及相关配置&lt;/li&gt; 
   &lt;li&gt;[优化] 优化 Maven 配置，去除早期为控制依赖漏洞而引入的 fastjson 统一版本控制&lt;/li&gt; 
   &lt;li&gt;[优化] 优化 Gitee ISSUE Template&lt;/li&gt; 
   &lt;li&gt;[优化] 删除前端 Bpmn 设计器模块打包配置中的无用配置&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端 vite.config.mts 和 tsconfig.json 配置，采用更合理的定义配置，同时去除无用或过时的配置内容&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端应用 Vite 配置，调整自动生成配置文件位置，优化自动导入配置&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端模块 package.json 导出配置，简化模块样式引入路径长途&lt;/li&gt; 
   &lt;li&gt;[升级] tempo docker 镜像版本升级至 2.8.2&lt;/li&gt; 
   &lt;li&gt;[升级] cassandra docker 镜像版本升级至 5.0.5&lt;/li&gt; 
   &lt;li&gt;[升级] clickhouse docker 镜像版本升级至 25.7.4&lt;/li&gt; 
   &lt;li&gt;[升级] kestra docker 镜像版本升级至 v0.24.2&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] alipay-sdk-java 版本升级至 4.40.411.ALL&lt;/li&gt; 
   &lt;li&gt;[升级] grpc 版本升级至 1.75.0&lt;/li&gt; 
   &lt;li&gt;[升级] skywalking agent 版升级至 9.5.0&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk 版本升级至 2.32.27&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk.crt 版本升级至 0.38.9&lt;/li&gt; 
   &lt;li&gt;[升级] springdoc 版本升级至 2.8.10&lt;/li&gt; 
   &lt;li&gt;[升级] sweetalert2 webjars 版本升级至 11.22.4&lt;/li&gt; 
   &lt;li&gt;[升级] wxjava 版本升级至 4.7.7-20250808.182223&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;如果本项目对你有所帮助，欢迎 Star 一波来支持我们！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitee&lt;/strong&gt;：&lt;a href="https://gitee.com/dromara/dante-cloud"&gt;https://gitee.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://github.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitcode&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://gitcode.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368249</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368249</guid>
      <pubDate>Mon, 25 Aug 2025 02:06:27 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>​维基框架 (Wiki Framework) 1.1.0 版本发布​ 提供多模型 AI 辅助开发</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;多模型 AI 辅助开发&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;维基框架 1.1.0 集成了主流 AI 引擎的统一接口，支持开发者按需调用不同模型的优势能力：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DeepSeek&lt;/strong&gt;：专注代码生成与重构，擅长复杂业务逻辑实现&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ChatGPT&lt;/strong&gt;：多模态推理能力，适用于系统架构设计&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Grok&lt;/strong&gt;：实时数据分析，优化生产环境问题诊断&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DouBao&lt;/strong&gt;：中文语义深度理解，提升本土化文档质量&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qwen3&lt;/strong&gt;：强化数学推理，专精财务/统计模块开发，&lt;strong&gt;支持在线搜索功能&lt;/strong&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通过智能路由机制，系统根据代码特征自动选择最佳模型（可手动配置）。开发者可同时使用多个模型协同工作，例如用 DeepSeek 生成代码，Qwen3 验证事务，DouBao 编写文档。&lt;/p&gt; 
&lt;h2&gt;使用&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;运行环境要求&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;最低 JDK 版本：17+（1.0.7 及更早版本支持 Java 8）&lt;/p&gt; 
&lt;h3&gt;统一接口架构&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;public static void main(String[] args) {
    CdkjApplication.run(AiApplication.class, args);
    QwenConfig config = new QwenConfig();
    config.setApiKey("sk-xxxx");
    QwenService chatService = (QwenService) AiUtils.findAiService(config);
    System.out.printf("AI 回复" + chatService.chat("你好，请介绍一下你呢。"));

    config.setModel(Qwen.QWEN_VL_MAX_LATEST.getModel());
    QwenService service = AiUtils.findAiService(config, QwenService.class);
    System.out.printf("AI 回复" + service.chatVision(List.of("介绍这个图片。"), List.of("https://framewiki.com/logo.png")));
  }&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;依赖引入&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;
  com.framewiki
  wiki-all
  1.1.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;模块介绍&lt;/h2&gt; 
&lt;h3&gt;模块目录&lt;/h3&gt; 
&lt;h3&gt;配置读取&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;package com.cdkjframework.ai.model.qwen;

import com.cdkjframework.ai.core.impl.BaseAiConfig;
import com.cdkjframework.ai.enums.ModelsName;
import com.cdkjframework.ai.enums.Openai;
import com.cdkjframework.ai.enums.Qwen;
import com.cdkjframework.util.tool.StringUtils;

/**
 * @ProjectName: wiki-framework
 * @Package: com.cdkjframework.ai.model.qwen
 * @ClassName: QwenConfig
 * @Description: java 类作用描述
 * @Author: xiaLin
 * @Date: 2025/8/3 9:07
 * @Version: 1.0
 */
public class QwenConfig extends BaseAiConfig {
  /**
   * 构造函数
   */
  public QwenConfig() {
    // API 接口地址
    super.setApiUrl("https://dashscope.aliyuncs.com/compatible-mode/v1");
    if (StringUtils.isNullAndSpaceOrEmpty(super.getModel())) {
      super.setModel(Qwen.QWEN_PLUS.getModel());
    }
  }

  /**
   * 构造函数
   *
   * @param apiKey API 密钥
   */
  public QwenConfig(String apiKey) {
    this();
    super.setApiKey(apiKey);
  }

  /**
   * 获取模型（厂商）名称
   *
   * @return 返回模型（厂商）名称
   */
  @Override
  public String getModelName() {
    return ModelsName.QWEN.getValue();
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;服务注入&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;package com.cdkjframework.ai.model.qwen;

import com.cdkjframework.ai.core.AiConfig;
import com.cdkjframework.ai.core.AiProvider;
import com.cdkjframework.ai.enums.ModelsName;
import com.cdkjframework.ai.model.qwen.impl.QwenServiceImpl;

/**
 * @ProjectName: wiki-framework
 * @Package: com.cdkjframework.ai.model.qwen
 * @ClassName: QwenProvider
 * @Description: java 类作用描述
 * @Author: xiaLin
 * @Date: 2025/8/3 9:08
 * @Version: 1.0
 */
public class QwenProvider implements AiProvider {
  /**
   * 获取服务名称
   *
   * @return 返回服务名称
   */
  @Override
  public String getServiceName() {
    return ModelsName.QWEN.getValue();
  }

  /**
   * 创建服务
   *
   * @param config 配置信息
   */
  @Override
  public QwenService create(AiConfig config) {
    return new QwenServiceImpl(config);
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;接口&lt;/h3&gt; 
&lt;h4&gt;服务接口&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;package com.cdkjframework.ai.model.qwen;

import java.util.List;
import java.util.function.Consumer;

import com.cdkjframework.ai.constant.AiCommon;
import com.cdkjframework.ai.core.AiService;
import com.cdkjframework.ai.core.Message;
import com.cdkjframework.builder.ResponseBuilder;

/**
 * @ProjectName: wiki-framework
 * @Package: com.cdkjframework.ai.model.qwen
 * @ClassName: QwenService
 * @Description: java 类作用描述
 * @Author: xiaLin
 * @Date: 2025/8/3 9:08
 * @Version: 1.0
 */
public interface QwenService extends AiService {

  /**
   * 搜索
   */
  String EXTRA_BODY = "extra_body";

  /**
   * 搜索值
   */
  String EXTRA_BODY_VALUE = "{\\"enable_search\\": True\\"}";

  /**
   * 流式参数
   */
  String STREAM_OPTIONS = "stream_options";

  /**
   * 流式参数值
   */
  String STREAM_OPTIONS_VALUE = "{\\"include_usage\\": True}";

  /**
   * 对话
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param messages 消息列表
   * @return 返回 AI 回复的消息
   */
  String chatSearch(final List messages);

  /**
   * 对话-SSE 流式输出
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param messages 消息列表
   * @param callback 流式数据回调函数
   */
  void chatSearch(final List messages, final Consumer callback);

  /**
   * 图像理解：模型会依据传入的图片信息以及问题，给出回复。
   *
   * @param prompts 提问
   * @param images 图片列表/或者图片 Base64 编码图片列表 (URI 形式)
   * @return AI 回答内容
   */
  String chatVision(List prompts, final List images);

  /**
   * 图像理解-SSE 流式输出
   *
   * @param prompts   提问
   * @param images   传入的图片列表地址/或者图片 Base64 编码图片列表 (URI 形式)
   * @param callback 流式数据回调函数
   */
  void chatVision(List prompts, final List images, final Consumer callback);

  /**
   * 图像理解：模型会依据传入的图片信息以及问题，给出回复。
   *
   * @param prompts 提问
   * @param videos 视频列表 (URI 形式)
   * @return AI 回答内容
   */
  String chatVideoVision(List prompts, final List&amp;gt; videos);

  /**
   * 图像理解-SSE 流式输出
   *
   * @param prompts   提问
   * @param videos   视频列表 (URI 形式)
   * @param callback 流式数据回调函数
   */
  void chatVideoVision(List prompts, final List&amp;gt; videos, final Consumer callback);
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;服务接口实现&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;package com.cdkjframework.ai.model.qwen.impl;

import com.cdkjframework.ai.core.AiConfig;
import com.cdkjframework.ai.core.Message;
import com.cdkjframework.ai.core.impl.BaseAiService;
import com.cdkjframework.ai.model.qwen.QwenService;
import com.cdkjframework.builder.ResponseBuilder;
import com.cdkjframework.constant.IntegerConsts;
import com.cdkjframework.util.tool.JsonUtils;
import com.cdkjframework.util.tool.ThreadUtils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Consumer;

import static com.cdkjframework.ai.constant.AiConstant.*;
import static com.cdkjframework.ai.constant.AiConstant.Qwen.*;

/**
 * @ProjectName: wiki-framework
 * @Package: com.cdkjframework.ai.model.qwen.impl
 * @ClassName: QwenServiceImpl
 * @Description: Qwen AI 服务实现类
 * @Author: xiaLin
 * @Date: 2025/8/3 9:08
 * @Version: 1.0
 */
public class QwenServiceImpl extends BaseAiService implements QwenService {

  /**
   * 构造函数
   *
   * @param config AI 服务接口
   */
  public QwenServiceImpl(AiConfig config) {
    super(config);
  }

  /**
   * 对话
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param messages 消息列表
   * @return 返回 AI 回复的消息
   */
  @Override
  public String chat(List messages) {
    final String paramJson = buildChatRequestBody(messages, Boolean.FALSE);
    // 发送 POST 请求
    final StringBuilder response = post(CHAT_ENDPOINT, paramJson);
    // 返回结果
    return response.toString();
  }

  /**
   * 对话-检索增强
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param messages 消息列表
   * @return 返回 AI 回复的消息
   */
  @Override
  public String chatSearch(List messages) {
    final String paramJson = buildChatRequestBody(messages, Boolean.TRUE);
    // 发送 POST 请求
    final StringBuilder response = post(CHAT_ENDPOINT, paramJson);
    // 返回结果
    return response.toString();
  }

  /**
   * 对话-SSE 流式输出
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param messages 消息列表
   * @param callback 流式数据回调函数
   */
  @Override
  public void chat(List messages, Consumer callback) {
    Map paramMap = buildChatStreamRequestBody(messages, Boolean.FALSE);
    ThreadUtils.newThread(() -&amp;gt; postStream(CHAT_ENDPOINT, paramMap, callback), QWEN_CHAT_SSE).start();
  }

  /**
   * 对话-SSE 流式输出
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param messages 消息列表
   * @param callback 流式数据回调函数
   */
  @Override
  public void chatSearch(List messages, Consumer callback) {
    Map paramMap = buildChatStreamRequestBody(messages, Boolean.TRUE);
    ThreadUtils.newThread(() -&amp;gt; postStream(CHAT_ENDPOINT, paramMap, callback), QWEN_CHAT_SSE).start();
  }

  /**
   * 对话-检索增强
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param prompts 消息列表
   * @return 返回 AI 回复的消息
   */

  @Override
  public String chatVision(List prompts, List images) {
    // 构建请求体
    String paramJson = buildChatVisionRequestBody(prompts, images);
    return post(CHAT_ENDPOINT, paramJson).toString();
  }

  /**
   * 对话 VISION SSE 流式输出
   * messages 可以由当前对话组成的消息列表，可以设置 role，content。详细参考官方文档
   *
   * @param prompts   提词
   * @param images   图片列表
   * @param callback 流式数据回调函数
   */
  @Override
  public void chatVision(List prompts, List images, Consumer callback) {
    // 构建请求体
    Map paramMap = buildChatVisionStreamRequestBody(prompts, images);
    ThreadUtils.newThread(() -&amp;gt; postStream(CHAT_ENDPOINT, paramMap, callback), QWEN_CHAT_VISION_SSE).start();
  }

  /**
   * 图像理解：模型会依据传入的图片信息以及问题，给出回复。
   *
   * @param prompts 提问
   * @param videos  视频列表 (URI 形式)
   * @return AI 回答内容
   */
  @Override
  public String chatVideoVision(List prompts, List&amp;gt; videos) {
    // 构建请求体
    String paramJson = buildChatVideoRequestBody(prompts, videos);
    return post(CHAT_ENDPOINT, paramJson).toString();
  }

  /**
   * 图像理解-SSE 流式输出
   *
   * @param prompts  提问
   * @param videos   视频列表 (URI 形式)
   * @param callback 流式数据回调函数
   */
  @Override
  public void chatVideoVision(List prompts, List&amp;gt; videos, Consumer callback) {
    // 构建请求体
    Map paramMap = buildChatVideoStreamRequestBody(prompts, videos);
    ThreadUtils.newThread(() -&amp;gt; postStream(CHAT_ENDPOINT, paramMap, callback), QWEN_CHAT_VISION_SSE).start();
  }

  /**
   * 构建 chat 请求体
   *
   * @param messages 消息列表
   * @param search   是否搜索
   * @return 返回消息字符串
   */
  private String buildChatRequestBody(final List messages, boolean search) {
    final Map paramMap = new HashMap&amp;lt;&amp;gt;();
    buildRequestBody(Boolean.FALSE, search, paramMap, messages);
    // 合并其他参数
    paramMap.putAll(config.getAddConfigMap());

    // JSON 序列化
    return JsonUtils.objectToJsonString(paramMap);
  }

  /**
   * 构建 chatVision 请求体
   *
   * @param prompts 提词
   * @param images 图片列表
   * @return 请求体字符串
   */
  private String buildChatVisionRequestBody(List prompts, final List images) {
    // 使用 JSON 工具
    Map paramMap = buildRequestBody(Boolean.FALSE, prompts, images);
    return JsonUtils.objectToJsonString(paramMap);
  }

  /**
   * 构建 chatStream 请求体
   *
   * @param messages 消息列表
   * @return 返回消息集合
   */
  private Map buildChatStreamRequestBody(final List messages, boolean search) {
    final Map paramMap = new HashMap&amp;lt;&amp;gt;();
    buildRequestBody(Boolean.TRUE, search, paramMap, messages);
    // 合并其他参数
    paramMap.putAll(config.getAddConfigMap());

    return paramMap;
  }

  /**
   * 构建图片生成请求体
   *
   * @param prompts 描述
   * @param images 图片
   * @return 请求体
   */
  private Map buildChatVisionStreamRequestBody(List prompts, final List images) {
    // 返回参数
    return buildRequestBody(Boolean.TRUE, prompts, images);
  }

  /**
   * 构建视频生成请求体
   *
   * @param prompts 描述
   * @param videos 图片
   * @return 请求体
   */
  private String buildChatVideoRequestBody(List prompts, final List&amp;gt; videos) {
    // 使用 JSON 工具
    Map paramMap = buildVideoRequestBody(Boolean.FALSE, prompts, videos);
    return JsonUtils.objectToJsonString(paramMap);
  }

  /**
   * 构建视频生成请求体
   *
   * @param prompts 描述
   * @param videos 图片
   * @return 请求体
   */
  private Map buildChatVideoStreamRequestBody(List prompts, final List&amp;gt; videos) {
    // 返回参数
    return buildVideoRequestBody(Boolean.TRUE, prompts, videos);
  }

  /**
   * 构建请求体
   *
   * @param stream 是否流式
   * @param prompts 提词
   * @param videos 图片列表
   * 
   * @return 请求体集合
   */
  private Map buildVideoRequestBody(boolean stream, List prompts,
      final List&amp;gt; videos) {
    // 定义消息结构
    final List messages = new ArrayList&amp;lt;&amp;gt;();
    final List content = getVideoObjects(prompts, videos);

    messages.add(new Message(USER, content));

    // 使用 JSON 工具
    final Map paramMap = new HashMap&amp;lt;&amp;gt;();
    if (stream) {
      paramMap.put(STREAM, Boolean.TRUE);
    }
    paramMap.put(MODEL, config.getModel());
    paramMap.put(MESSAGES, messages);
    // 合并其他参数
    paramMap.putAll(config.getAddConfigMap());
    return paramMap;
  }

  /**
   * 构建请求体
   *
   * @param stream  是否流式
   * @param prompts 提词
   * @param images  图片列表
   * 
   * @return 请求体集合
   */
  private Map buildRequestBody(boolean stream, List prompts, final List images) {
    // 定义消息结构
    final List messages = new ArrayList&amp;lt;&amp;gt;();
    final List content = getObjects(prompts, images);

    messages.add(new Message(USER, content));

    // 使用 JSON 工具
    final Map paramMap = new HashMap&amp;lt;&amp;gt;();
    if (stream) {
      paramMap.put(STREAM, Boolean.TRUE);
    }
    paramMap.put(MODEL, config.getModel());
    paramMap.put(MESSAGES, messages);
    // 合并其他参数
    paramMap.putAll(config.getAddConfigMap());
    return paramMap;
  }

  /**
   * 获取图片内容
   *
   * @param prompts 提词
   * @param videos 图片列表
   * 
   * @return 图片内容
   */
  private static List getVideoObjects(List prompts, List&amp;gt; videos) {
    final List content = new ArrayList&amp;lt;&amp;gt;(videos.size());
    for (List video : videos) {
      int idx = videos.indexOf(video);
      String prompt = prompts.get(idx);
      // 构建视频内容
      HashMap urlMap = new HashMap&amp;lt;&amp;gt;(IntegerConsts.TWO);
      urlMap.put(TYPE, VIDEO);
      urlMap.put(VIDEO, video);
      content.add(urlMap);

      // 构建文本内容
      final Map contentMap = new HashMap&amp;lt;&amp;gt;(IntegerConsts.TWO);
      contentMap.put(TYPE, TEXT);
      contentMap.put(TEXT, prompt);
      content.add(contentMap);
    }
    return content;
  }

  /**
   * 获取视频内容
   *
   * @param prompts 提词
   * @param images  图片列表
   * 
   * @return 图片内容
   */
  private static List getObjects(List prompts, List images) {
    final List content = new ArrayList&amp;lt;&amp;gt;(IntegerConsts.ONE);
    for (String img : images) {
      int idx = img.indexOf(img);
      String prompt = prompts.get(idx);

      // 构建图片内容
      HashMap imgUrlMap = new HashMap&amp;lt;&amp;gt;(IntegerConsts.ONE);
      imgUrlMap.put(TYPE, IMAGE_URL);
      HashMap imgMap = new HashMap&amp;lt;&amp;gt;(IntegerConsts.ONE);
      imgMap.put(URL, img);

      imgUrlMap.put(IMAGE_URL, imgMap);
      content.add(imgUrlMap);

      HashMap urlMap = new HashMap&amp;lt;&amp;gt;(IntegerConsts.TWO);
      urlMap.put(TYPE, TEXT);
      urlMap.put(TEXT, prompt);

      content.add(urlMap);
    }

    return content;
  }

  /**
   * 构建请求体
   *
   * @param stream   是否流式
   * @param search   是否搜索
   * @param paramMap 参数集合
   * @param messages 聊天消息
   */
  private void buildRequestBody(boolean stream, boolean search, final Map paramMap,
      final List messages) {
    paramMap.put(MODEL, config.getModel());
    paramMap.put(MESSAGES, messages);
    if (stream) {
      paramMap.put(STREAM, Boolean.TRUE);
      paramMap.put(STREAM_OPTIONS, STREAM_OPTIONS_VALUE);
    }
    if (search) {
      paramMap.put(EXTRA_BODY, EXTRA_BODY_VALUE);
    }
  }

}&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AI 工厂&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;package com.cdkjframework.ai;

import com.cdkjframework.ai.core.AiConfig;
import com.cdkjframework.ai.core.AiProvider;
import com.cdkjframework.ai.core.AiService;
import com.cdkjframework.exceptions.GlobalRuntimeException;

import java.util.Map;
import java.util.ServiceLoader;
import java.util.concurrent.ConcurrentHashMap;

/**
 * 创建 AiFactory 工厂类
 *
 * @ProjectName: wiki-framework
 * @Package: com.cdkjframework.ai
 * @ClassName: AiFactory
 * @Description: 创建 AiFactory 工厂类
 * @Author: xiaLin
 * @Version: 1.0
 */
public class AiFactory {
  /**
   * 创建 AiFactory 工厂类
   */
  private static final Map PROVIDERS = new ConcurrentHashMap&amp;lt;&amp;gt;();

  // 加载所有 AiProvider 实现类
  static {
    final ServiceLoader loader = ServiceLoader.load(AiProvider.class);
    for (final AiProvider provider : loader) {
      PROVIDERS.put(provider.getServiceName().toLowerCase(), provider);
    }
  }


  /**
   * 获取 AI 服务
   *
   * @param config AI 配置
   * @return AI 服务实例
   */
  public static AiService findAiService(final AiConfig config) {
    return findAiService(config, AiService.class);
  }

  /**
   * 获取 AI 服务
   *
   * @param config Ai 配置
   * @param clazz  AI 服务类
   * @param     AI 服务类
   * @return clazz 对应的 AI 服务类实例
   */
  @SuppressWarnings("unchecked")
  public static  T findAiService(final AiConfig config, final Class clazz) {
    final AiProvider provider = PROVIDERS.get(config.getModelName().toLowerCase());
    if (provider == null) {
      throw new IllegalArgumentException("不支持的模型: " + config.getModelName());
    }

    final AiService service = provider.create(config);
    if (!clazz.isInstance(service)) {
      throw new GlobalRuntimeException("模型服务不属于指定类型: " + clazz.getSimpleName());
    }

    // 返回服务
    return (T) service;
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AI 工具&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;package com.cdkjframework.ai;

import com.cdkjframework.ai.core.AiConfig;
import com.cdkjframework.ai.core.AiService;
import com.cdkjframework.ai.core.Message;
import com.cdkjframework.ai.model.deepseek.DeepSeekService;
import com.cdkjframework.ai.model.doubao.DouBaoService;
import com.cdkjframework.ai.model.grok.GrokService;
import com.cdkjframework.ai.model.openai.OpenaiService;
import com.cdkjframework.ai.model.qwen.QwenService;

import java.util.List;

/**
 * AI 工具类
 *
 * @ProjectName: wiki-framework
 * @Package: com.cdkjframework.ai
 * @ClassName: AiUtils
 * @Description: AI 工具类
 * @Author: xiaLin
 * @Version: 1.0
 */
public class AiUtils {


  /**
   * 获取 AI 模型服务，每个大模型提供的功能会不一样，可以调用此方法指定不同 AI 服务类，调用不同的功能
   *
   * @param config 创建的 AI 服务模型的配置
   * @param clazz  AI 模型服务类
   * @param     AiService 实现类
   * @return 返回 AI 模型服务类，的实现类实例
   */
  public static  T findAiService(final AiConfig config, final Class clazz) {
    return AiFactory.findAiService(config, clazz);
  }

  /**
   * 获取 AI 模型服务
   *
   * @param config 创建的 AI 服务模型的配置
   * @return 返回 AI 服务模型，其中只有公共方法
   */
  public static AiService findAiService(final AiConfig config) {
    return findAiService(config, AiService.class);
  }

  /**
   * 获取 DeepSeek 模型服务
   *
   * @param config 创建的 AI 服务模型的配置
   * @return DeepSeekService
   */
  public static DeepSeekService findDeepSeekService(final AiConfig config) {
    return findAiService(config, DeepSeekService.class);
  }

  /**
   * 获取 DouBao 模型服务
   *
   * @param config 创建的 AI 服务模型的配置
   * @return DouBaoService
   */
  public static DouBaoService findDouBaoService(final AiConfig config) {
    return findAiService(config, DouBaoService.class);
  }

  /**
   * 获取 Grok 模型服务
   *
   * @param config 创建的 AI 服务模型的配置
   * @return GrokService
   */
  public static GrokService findGrokService(final AiConfig config) {
    return findAiService(config, GrokService.class);
  }

  /**
   * 获取 Openai 模型服务
   *
   * @param config 创建的 AI 服务模型的配置
   * @return OpenAiService
   */
  public static OpenaiService findOpenAiService(final AiConfig config) {
    return findAiService(config, OpenaiService.class);
  }

  /**
   * 获取 Qwen 模型服务
   *
   * @param config 创建的 AI 服务模型的配置
   * @return QwenService
   */
  public static QwenService findQwenService(final AiConfig config) {
    return findAiService(config, QwenService.class);
  }

  /**
   * AI 大模型对话功能（公共）
   *
   * @param config 创建的 AI 服务模型的配置
   * @param prompt 需要对话的内容
   * @return 返回 AI 模型返回消息内容
   */
  public static String chat(final AiConfig config, final String prompt) {
    return findAiService(config).chat(prompt);
  }

  /**
   * AI 大模型对话功能（公共）
   *
   * @param config   创建的 AI 服务模型的配置
   * @param messages 由目前为止的对话组成的消息列表，可以设置 role，content。详细参考官方文档
   * @return 返回 AI 模型返回消息内容
   */
  public static String chat(final AiConfig config, final List messages) {
    return findAiService(config).chat(messages);
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;总结&lt;/h2&gt; 
&lt;p&gt;以上只是博主自己在实际项目中和参考其它文章总结出来，然后在将其实封成工具分享给大家。&lt;/p&gt; 
&lt;p&gt;相关源码在：维基框架&lt;/p&gt; 
&lt;p&gt;Gitee: &lt;a href="https://gitee.com/cdkjframework/wiki-framework"&gt;https://gitee.com/cdkjframework/wiki-framework&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcdkjframework%2Fwiki-framework" target="_blank"&gt;https://github.com/cdkjframework/wiki-framework&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;如果喜欢博主的分享记得给博主点点小星星&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367954</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367954</guid>
      <pubDate>Fri, 22 Aug 2025 14:26:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>​维基框架 (Wiki FW) 1.1.0 正式发布：开启智能编程新篇章，AI 助手「马建仓」上线！​</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;2025 年 8 月 18 日&amp;nbsp;&lt;/strong&gt;- 我们自豪地宣布，面向全场景 Java 企业级应用开发的 &lt;strong&gt;维基框架 (Wiki Framework) 1.1.0 版本&lt;/strong&gt; 正式发布！此版本标志着框架在技术栈、开发效率和智能化支持上的重大飞跃，为开发者带来更强大、更现代、更智能的微服务开发体验。&lt;/p&gt; 
&lt;h2&gt;核心升级：全面拥抱 Java 17+&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;坚定前行：&lt;/strong&gt; 遵循先前发布的路线图，&lt;strong&gt;Wiki Framework 1.1.0 及后续版本将仅支持 JDK 17 及以上版本&lt;/strong&gt;。这是拥抱现代 Java 特性（如 Records、Sealed Classes、Pattern Matching 等）、提升性能和安全性的必然选择。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;兼容性说明：&lt;/strong&gt; 对于仍需使用 Java 8 的项目，请继续使用 &lt;strong&gt;1.0.7 及以下版本&lt;/strong&gt;（该分支已进入维护状态，不再更新新功能）。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;未来基石：&lt;/strong&gt; 这一升级确保了框架能够充分利用最新 Java 平台的潜力，为构建高性能、高可靠性的云原生应用奠定坚实基础。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;轻松获取与集成&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;中央库直达：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Gradle:&lt;/strong&gt; &lt;code&gt;implementation 'com.framewiki:wiki-all:1.1.0'&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Maven:&lt;/strong&gt; 依赖座标同上，可通过 Maven Central Repository 自动下载。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;手动下载：&lt;/strong&gt; 直接下载 &lt;code&gt;wiki-all-1.1.0.jar&lt;/code&gt;文件进行集成。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;源码编译：&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;访问 Gitee 主页：&lt;span&gt;&lt;span&gt;https://gitee.com/cdkjframework/wiki-framework&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;克隆 &lt;code&gt;master&lt;/code&gt;或 &lt;code&gt;1.1.0&lt;/code&gt;分支源码。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;进入项目目录，执行（Linux）&amp;nbsp;&lt;code&gt;./wiki.sh install&lt;/code&gt;进行本地安装，Windows 下 IDEA 执行 mvn clean install。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;即可通过 Maven 引入本地安装的版本。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;重磅亮点：AI 助手「马建仓」赋能开发&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;本次 1.1.0 版本最激动人心的创新是内置了「马建仓」AI 助手！&lt;/strong&gt; 这不仅仅是工具集的扩展，更是维基框架向&lt;strong&gt;智能化开发&lt;/strong&gt;迈出的革命性一步。&lt;/p&gt; 
&lt;p&gt;「马建仓」AI 助手旨在深度融入开发者的日常工作流，提供实时的智能支持：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;智能代码解读：&lt;/strong&gt; 面对复杂或遗留代码，「马建仓」能快速解析逻辑结构，生成清晰易懂的解释，大幅降低理解成本。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;高效代码找茬：&lt;/strong&gt; 在编码过程中或代码评审阶段，AI 助手能智能扫描潜在的错误模式、代码异味、性能瓶颈和安全漏洞，提供精准的问题定位和改进建议。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;精准代码优化：&lt;/strong&gt; 基于最佳实践和框架特性，「马建仓」能提出针对性的代码优化方案，提升代码性能、可读性和可维护性。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;增强开发体验：&lt;/strong&gt; 尝试更多智能功能（如智能补全建议、依赖分析、文档生成辅助等）的可能性，让开发过程更流畅、更高效。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;「马建仓」的目标是成为您身边的「智能结对编程伙伴」，显著提升开发效率与代码质量，释放开发者创造力。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;社区共建：贡献指南&lt;/h2&gt; 
&lt;p&gt;我们坚信开源的力量！维基框架的成长离不开社区的贡献：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;分支策略：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;master&lt;/code&gt;: 稳定发布分支（对应中央库版本），不接受直接 PR。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;dev&lt;/code&gt;: &lt;strong&gt;活跃开发分支&lt;/strong&gt;（默认为下个版本的 SNAPSHOT），&lt;strong&gt;欢迎所有问题修复、功能增强和 AI 助手优化的 PR 提交至此分支！&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;贡献流程：&lt;/strong&gt; Fork -&amp;gt; Clone (&lt;code&gt;dev&lt;/code&gt;分支) -&amp;gt; 编码 -&amp;gt; Commit -&amp;gt; Push -&amp;gt; 提交 Pull Request 到上游 &lt;code&gt;dev&lt;/code&gt;分支。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;PR 原则：&lt;/strong&gt; 请确保代码注释完备、遵循 IDEA 默认缩进、避免引入不必要依赖、清晰描述改动。&lt;strong&gt;尤其欢迎围绕「马建仓」AI 助手功能优化和扩展的贡献！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;反馈渠道：&lt;/strong&gt; 遇到问题？有功能建议？特别是关于 AI 助手的使用体验或需求，请通过以下方式告诉我们：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;QQ 群：&lt;/strong&gt; 25056933&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;公众号：&lt;/strong&gt; 维基框架 (framewiki-com)&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;邮箱：&lt;/strong&gt; &lt;span&gt;&lt;span&gt;wiki@framewiki.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Issue：&lt;/strong&gt; &lt;span&gt;&lt;span&gt;Gitee Issues&lt;/span&gt;&lt;/span&gt;/ &lt;span&gt;&lt;span&gt;GitHub Issues&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;(务必注明 JDK 版本、框架版本和依赖库版本)&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;感谢伙伴：&lt;/strong&gt; 衷心感谢宏图物流、成都乐享智家、成都领数云、成都千街万巷、成都蓝眸智能等公司的支持与应用！&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;展望未来&lt;/h2&gt; 
&lt;p&gt;维基框架 1.1.0 的发布，特别是「马建仓」AI 助手的引入，标志着我们构建「高效、开放、安全、智能」的 Java 企业级开发框架的愿景进入新阶段。我们将持续迭代核心框架，并重点投入&lt;strong&gt;AI 辅助开发能力&lt;/strong&gt;的深度优化和场景拓展，致力于让 Java 微服务开发更简单、更智能、更愉悦！&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;立即升级至 Wiki Framework 1.1.0，体验现代 Java 与 AI 智能融合的开发魅力，开启您的高效智能编程之旅！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;获取资源与了解更多：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;官网：&lt;span&gt;&lt;span&gt;https://framewiki.com/wiki-framework&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;Gitee：&lt;span&gt;&lt;span&gt;https://gitee.com/cdkjframework/wiki-framework&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;Github：&lt;span&gt;&lt;span&gt;https://github.com/cdkjframework/wiki-framework&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;示例项目：&lt;/span&gt;https://gitee.com/cdkjframework/framewiki-example&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;使用许可：&lt;/strong&gt; Wiki Framework 采用 &lt;strong&gt;木兰宽松许可证 (MulanPSL-2.0)&lt;/strong&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367944</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367944</guid>
      <pubDate>Fri, 22 Aug 2025 13:21:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>FastBuildAI - 面向 AI 创业者设计的开源 AI 应用框架 1.0.0-beta.4 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;FastBuildAI-面向 AI 创业者设计的开源 AI 应用框架 1.0.0-beta.4 已经发布。&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;新增&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;智能体模板&lt;/li&gt; 
 &lt;li&gt;智能体导入导出&lt;/li&gt; 
 &lt;li&gt;富文本编辑器支持 Markdown&lt;/li&gt; 
 &lt;li&gt;模型批量状态切换&lt;/li&gt; 
 &lt;li&gt;模型视图切换&lt;/li&gt; 
 &lt;li&gt;深度思考过程回显&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;优化&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker 一键部署时依赖安装过久&lt;/li&gt; 
 &lt;li&gt;智能体匿名用户记录与登录用户兼容&lt;/li&gt; 
 &lt;li&gt;智能体标注弹窗优化&lt;/li&gt; 
 &lt;li&gt;智能体调试预览支持重新开始&lt;/li&gt; 
 &lt;li&gt;优化首页未登录状态交互体验&lt;/li&gt; 
 &lt;li&gt;对话记录标题生成交互体验&lt;/li&gt; 
 &lt;li&gt;优化部分页面 UI 交互体验&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;修复&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;知识库&amp;amp;智能体列表分页无限加载问题&lt;/li&gt; 
 &lt;li&gt;智能体 API 无法调用问题&lt;/li&gt; 
 &lt;li&gt;后台菜单权限控制问题&lt;/li&gt; 
 &lt;li&gt;其他若干已知问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/FastbuildAI/FastbuildAI/releases/1.0.0-beta.4"&gt;https://gitee.com/FastbuildAI/FastbuildAI/releases/1.0.0-beta.4&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367934</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367934</guid>
      <pubDate>Fri, 22 Aug 2025 11:40:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>AIFlowy v1.1.6 发布，一个 AI 产品的底座和基石</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AIFlowy v1.1.6 已经发布，一个 AI 产品的底座和基石&lt;/p&gt; 
&lt;h2&gt;v1.1.6 2025-08-22&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;开源版：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：添加 Docker 和 Nginx 配置以支持前后端容器化部署&lt;/li&gt; 
 &lt;li&gt;优化：优化 hooks 调用逻辑&lt;/li&gt; 
 &lt;li&gt;修复：修复新增/编辑用户的表单校验问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;商业版：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：新增通用字段&lt;/li&gt; 
 &lt;li&gt;新增：去掉字段&lt;/li&gt; 
 &lt;li&gt;优化：修复 hooks 调用逻辑&lt;/li&gt; 
 &lt;li&gt;修复：移除多余表&lt;/li&gt; 
 &lt;li&gt;修复：解决一些页面的控制枱警告&lt;/li&gt; 
 &lt;li&gt;修复：修复 QA 知识库 ID 为空的问题&lt;/li&gt; 
 &lt;li&gt;修复：修复新增/编辑用户的表单校验问题&lt;/li&gt; 
 &lt;li&gt;修复：补全实体类缺失字段&lt;/li&gt; 
 &lt;li&gt;修复：默认跳转 bot 页&lt;/li&gt; 
 &lt;li&gt;修复：sql 相关问题&lt;/li&gt; 
 &lt;li&gt;修复：修改配置文件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/aiflowy/aiflowy/releases/v1.1.6"&gt;https://gitee.com/aiflowy/aiflowy/releases/v1.1.6&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367925</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367925</guid>
      <pubDate>Fri, 22 Aug 2025 10:40:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Syncthing 2.0.3 正式发布，连续文件同步工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Syncthing&amp;nbsp;是一个免费开源的工具，它能在你的各个网络计算机间同步文件 / 文件夹，它的同步数据是直接从一个系统中直接传输到另一个系统的，并且它是安全且私密的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#1f2328"&gt;Syncthing 2.0.3 现已发布，具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;修复&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix(cmd)：恢复 --version 标志以实现兼容性&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10269" target="_blank"&gt;#10269&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(cmd)：使数据库迁移更具容错性，以应对写入错误&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10278" target="_blank"&gt;#10278&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(cmd)：在数据库迁移期间提供临时 GUI/API 服务器&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10279" target="_blank"&gt;#10279&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(db)：在启动时清理已删除文件夹的文件&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10280" target="_blank"&gt;#10280&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;其他&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;chore(slog)：重新启用 LOGGER_DISCARD（修复&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F10262" target="_blank"&gt;#10262&lt;/a&gt;）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10267" target="_blank"&gt;#10267&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;build：降级 gopsutil（修复&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F10276" target="_blank"&gt;#10276&lt;/a&gt;）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10277" target="_blank"&gt;#10277&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Freleases%2Ftag%2Fv2.0.3" target="_blank"&gt;https://github.com/syncthing/syncthing/releases/tag/v2.0.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367909/syncthing-2-0-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367909/syncthing-2-0-3-released</guid>
      <pubDate>Fri, 22 Aug 2025 09:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>go-dongle 1.1.0 版本发布，一个轻量级、语义化的 golang 编码解码、加密解密库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;carbon 是一个轻量级、语义化的 golang 编码解码、加密解密库&lt;span style="background-color:#ffffff; color:#40485b"&gt;，&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;100%&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;单元测试覆盖率，已被&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank"&gt;awesome-go&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;收录，并获得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;gitee&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;2024 年最有价值项目（&lt;/span&gt;&lt;code&gt;GVP&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;）和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;gitcode&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;2024 年度开源摘星计划 (&lt;/span&gt;&lt;code&gt;G-Star&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;) 项目&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="gvp" height="1328" src="https://oscimg.oschina.net/oscnet/up-3288d4acaf5b5ce412fba57384a9746e2eb.png" width="2213" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;docs:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdongle.go-pkg.com" target="_blank"&gt;dongle.go-pkg.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdongle" target="_blank"&gt;github.com/dromara/dongle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitee:&amp;nbsp;&lt;a href="https://gitee.com/dromara/dongle" target="_blank"&gt;gitee.com/dromara/dongle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitcode:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fdromara%2Fdongle" target="_blank"&gt;gitcode.com/dromara/dongle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;更新日志&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;⚠️&lt;span style="background-color:#ffffff; color:#59636e"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;这是一个破坏性更新版本，请慎重升级，但是强烈建议升级&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 删除&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;BySafeURL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码/解码方法&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 删除&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Sm3&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;哈希算法 (&lt;code&gt;hash&lt;/code&gt;) 和消息认证码算法 (&lt;code&gt;hmac&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 重命名&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ByBase64URL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码/解码方法为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ByBase64Url&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 哈希算法 (&lt;code&gt;hash&lt;/code&gt;) 调用方式从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dongle.Encrypt.ByXXX()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;改成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dongle.Hash.ByXXX()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 消息认证码算法 (&lt;code&gt;hmac&lt;/code&gt;) 调用方式从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dongle.Encrypt.ByHmacXXX()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;改成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dongle.Hash.WithKey().ByXXX()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 重构&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AES&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DES&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;3DES&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Blowfish&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等对称加密/解密方法，统一使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;cipher.NewXXXCipher()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[refactor] 重构&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RSA&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等非对称加密/解密方法，统一使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;keypair.NewXXXKeyPair()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat] 增加对&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;文件流&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码/解码、加密/解密、Hash/Hmac、签名/验签的支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat] 新增&lt;code&gt;ByBase32Hex&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码/解码方法&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;base32/base32Hex&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码增加对自定义字符集的支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;base45&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码增加对自定义字符集的支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;base58&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码增加对自定义字符集的支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;base62&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码增加对自定义字符集的支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[feat]&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;base64/base64Url&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;编码增加对自定义字符集的支持&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368243/go-dongle-1-1-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368243/go-dongle-1-1-0-released</guid>
      <pubDate>Tue, 19 Aug 2025 01:25:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Skyeye 云智能制造办公系统 - Saas v3.17.2 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;Skyeye 云智能制造，&lt;/span&gt;智能制造一体化，采用 SpringBoot+ UNI-APP + Ant Design Vue 的低代码平台开发模式。包含 50 多种电子流程，CRM、PM、ERP、MES、ADM、OA、EHR、AI、项目、商城、财务、多班次考勤、薪资、招聘、云售后、论坛、问卷、报表设计、工作流、Saas 等功能。打造全网首套低代码、功能最全的智能制造行业供应链一体化管理软件&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fip.makerview.cn%3A30003%2FskyPortal" target="_blank"&gt;官方网站&lt;/a&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Farticles.zsxq.com%2Fid_xi3xhacte72g.html" target="_blank"&gt;开发文档&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fspace.bilibili.com%2F87396008%2Fchannel%2Fseries" target="_blank"&gt;视频教程&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkdocs.cn%2Fl%2Fcbf2cgCLrUyz" target="_blank"&gt;功能点&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Skyeye&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;云【源代码】针对 {Skyeye 会员} 开源。拿到源码后可进行学习、毕设、企业等使用。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 云智能制造 v3.17.2 发布 ，发布内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;Skyeye 云已加入 Dromara 社区&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;业务对象适配 Saas 进展 100%&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VUE 版开发&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;解决发布版本的 bug&lt;/li&gt; 
   &lt;li&gt;文档管理系统，完成以下功能： 
    &lt;ul&gt; 
     &lt;li&gt;源代码包管理&lt;/li&gt; 
     &lt;li&gt;源代码管理&lt;/li&gt; 
     &lt;li&gt;版本管理&lt;/li&gt; 
     &lt;li&gt;会员管理&lt;/li&gt; 
     &lt;li&gt;会员等级管理&lt;/li&gt; 
     &lt;li&gt;会员权益管理等&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;登录新增同一账号的设备数限制，并且可以动态修改设备数&lt;/li&gt; 
 &lt;li&gt;聊天的好友获取修改同一租户下的所有企业&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;源代码只对 Skyeye 会员开放&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 具备&lt;/span&gt;&lt;strong&gt;&lt;span&gt;低代码、快捷开发、可视化设计、微服务&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;等特点，方便客户二次开发，极大的提高了开发效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;strong&gt;项目地址：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Gitee：&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;https://gitee.com/dromara/skyeye&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;GitCode：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://gitcode.com/doc_wei/erp-pro&lt;/li&gt; 
 &lt;li&gt;https://gitcode.com/doc_wei/skyeye-oa&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;PC 端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-35a653b1c873ab9501f7187b0901a27cc64.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a8f7c658a21594b2787c667fc1214c673b1.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-50138b38c37d750b93db5b37493f71bf4ca.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-00fd5dbd8a44f8d815ecf77d93d37062616.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-6499d74ddcfe9a99997d8c797aae7b7f0b0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-e97af4a2caccb199b76d906ecbb339a7575.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a58e6cb3e687de2a468cb095516951f077c.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-9eb76f53a99358fdf1ce532dc711baec41a.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ce7c58e9fe940d58b2cb9cec441176b3481.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ca685ab278a861067f5850e12470e155e59.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-270d853e879bc14cf6632d67e0168c656c0.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-0bebb255d3c79c13a69bfa0fbb7fcd80836.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-90cde5042c0effeea9e85761ff8dc7283d5.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-47ccf76ab671effc6142727caf066d67071.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;移动端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-6850576a0a01188e6b2a9d1ecce58ed7455.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1266" src="https://oscimg.oschina.net/oscnet/up-b5a18816a9e0e785ec5efcbd5baaac89d91.png" width="585" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1266" src="https://oscimg.oschina.net/oscnet/up-df25b57cc822bc730f41ca85c69caee46b6.png" width="588" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-d7707ebc67ddf3842adbb54fdc0c062a2a1.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368232/win10-skyeye-3-17-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368232/win10-skyeye-3-17-2-released</guid>
      <pubDate>Tue, 19 Aug 2025 00:56:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>低代码未死，AI 让它重获新生！「AI + 低代码」如何颠覆开发世界？</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style="color:#707070; margin-left:0; margin-right:0"&gt;曾经被诟病为「玩具」的低代码平台，正在人工智能的驱动下，重回企业数字化舞台的中央。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;曾几何时，低代码平台被誉为「全民开发」的福音，却因难以应对复杂业务逻辑和个性化需求，被贴上「难堪大用」的标签。一时间，「低代码已凉」的观点甚嚣尘上。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="427" src="https://oscimg.oschina.net/oscnet/up-cdbf25e7077aaef7d479cfef3aeee0494ad.png" width="640" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;然而，随着 AI 技术尤其是大模型的迅猛发展，低代码平台正悄然重生。&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;Gartner 预测，到 2025 年，70% 的新应用将通过低代码/无代码技术构建&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;这不是简单的回归，而是一场彻底的技术革命。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;低代码困境，为何被质疑「已凉」？&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;低代码平台最初承诺让不懂编程的人也能「搭系统」，用可视化界面代替编码。但实践中，人们发现：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;理解门槛仍在：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;使用者仍需理解流程逻辑和数据结构，学习如何「拖」、「拉」、「连」。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;灵活性受限：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;面对复杂、高度个性化的业务逻辑与用户体验设计，平台通用定制选项往往无法满足。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;平台依赖强：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;企业一旦选型，后续维护、升级与业务拓展便紧密依赖该平台，易陷入供应商锁定困境。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;最终能搭建出靠谱系统的，往往还是「半个程序员」。低代码降低了一部分门槛，但本质上仍是「拼装式」的系统建设方式，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;效率提升有限，一改就乱，一复杂就崩&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-dd22ca33e33abda92d809de7c9a17106d2a.png" width="640" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;AI 加持，低代码如何「起死回生」？&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;大模型的崛起，正在彻底改变低代码平台的命运。传统低代码强调「怎么拼系统」，而 AI 赋能的全新思路是「你只管说，系统来干」。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="764" src="https://oscimg.oschina.net/oscnet/up-bdd8918fd72b57670d14cd0fe5849e31cff.png" width="2256" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;从「手动拼装」到「意图理解」：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;过去需一个个「搭」出页面，现在只需说「我要一个报销功能」，AI 就能从表单到流程一并生成。更重要的是，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;AI 会「理解你没说出口的东西」&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;，而传统低代码只懂你点到哪儿。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;开发效率的质变：A&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;I 不仅能自动生成代码，还能智能优化逻辑、排查故障 8。VTJ.PRO 等平台通过 AI 助手，能将开发效率提升 300% 以上。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;复杂任务的驾驭能力：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;AI 让低代码平台能够处理更复杂的业务场景，如智能流程优化、合规性自动检查、动态数据填充等 5，真正进入企业核心业务系统。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;VTJ.PRO，AI 加持下的低代码新范式&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;VTJ.PRO 作为 AI 驱动的低代码平台，正引领这场变革。它不再是一个简单的可视化开发工具，而是智能应用开发平台，融合了最先进的 AI 能力与低代码的便捷性。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="480" src="https://oscimg.oschina.net/oscnet/up-079f2db33f1b1ed5908be757862893904a3.png" width="640" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;智能开发助手：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;VTJ.PRO 集成多模态大模型，支持通过自然语言描述生成业务逻辑、数据模型甚至页面布局。开发者只需简单描述需求：「创建一个跨境电商订单管理系统，包含用户认证、支付接口和库存管理」，系统便能自动生成应用框架。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-1147e6ff99e56dd675172837011af313556.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;上下文感知的代码生成：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;平台能够理解当前开发上下文，基于企业现有数据模型和 API，生成高度匹配、可运行的代码片段，远超传统代码补全工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;智能调试与优化：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;VTJ.PRO 内置的 AI 能力可以实时分析代码质量，预测潜在性能瓶颈和安全漏洞，并提供修复建议，大幅降低后期维护成本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;无缝迁移能力：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;针对传统低代码平台的「供应商锁定」问题，VTJ.PRO 支持一键导出完整可部署的应用源码，保障了企业的技术自主权。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f17ec254932c70092a4631090bbc27be63a.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;案例实战，看 VTJ.PRO 如何解决真实问题&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;某金融机构信贷审批系统：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;传统开发模式下，每次业务流程变更都需要 2-3 周的开发测试周期。使用 VTJ.PRO 后，业务人员通过自然语言描述调整需求，系统&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;自动生成审批流程优化方案&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;，开发周期缩短至小时级，年运维成本降低 40%。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="1718" src="https://oscimg.oschina.net/oscnet/up-681a7c5cd10c300ef259cdd1fb5baa3662d.png" width="3024" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;跨境电商平台后台管理系统：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;需要快速适配新市场政策，传统开发无法满足快速变化的需求。通过 VTJ.PRO 的 AI 助手，描述业务需求后，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;系统在一天内生成完整的后台管理应用&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;，包含订单处理、退款流程和税务计算等功能。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="1055" src="https://oscimg.oschina.net/oscnet/up-a6c3d3f525cfc3d3bbf588ff76520f2e6a0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;制造企业质量追溯系统：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;需要将原有 Excel 流程系统化，并与现有 MES、ERP 集成。VTJ.PRO 通过自然语言理解业务需求，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;自动生成数据模型和接口集成方案&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;，开发效率提升 3 倍以上。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://p0-private.toutiao.com/tos-cn-i-6w9my0ksvp/c45880b65fe74fc1a5e634f69e2f109e~tplv-tt-origin-web:gif.jpeg?_iz=58558&amp;amp;from=article.pc_detail&amp;amp;lk3s=953192f4&amp;amp;policy=eyJ2bSI6MywidWlkIjoiMTA0MzQ4NzUzNDU3In0%3D&amp;amp;x-orig-authkey=5a21e4afda5945d9a206a695e4c78a63&amp;amp;x-orig-expires=1756685699&amp;amp;x-orig-sign=1u2sY5qsjZbuHzi8Q4PJ77TCd%2FI%3D" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;未来已来，AI 与低代码融合的三大趋势&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;自然语言成为主流开发方式：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;未来的企业应用开发，将不再是专业程序员的专属领域。业务人员通过自然语言描述需求，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;AI 系统自动生成完整应用&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;将成为常态。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;低代码平台成为 AI 智能体孵化器：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;低代码平台将进化成为企业智能体的快速构建和部署环境。&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;「一句话创建一个智能体」&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;（如智能合同审核员、自动财务分析师等）将成为现实。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;融合开发成为标准范式：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;专业编码、低代码和智能体开发之间的界限将被彻底打破。开发者可根据不同场景灵活选择开发方式，实现&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;效率与灵活性的最佳平衡&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;选择 VTJ.PRO 的理由，为何是现在？&lt;/h1&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;在选择低代码平台时，企业应考虑多个维度：安全性（85% 的企业视为首要因素）、易集成性（84%）和后端集成与 API 管理能力（83%）。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="862" src="https://oscimg.oschina.net/oscnet/up-05e0bf9ce54424e7cc18710c83cee89c5fe.png" width="1225" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;VTJ.PRO 在这些关键维度上表现出色：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;企业级安全性：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;采用加密技术对数据传输与存储进行加密，通过严格的访问控制机制，基于角色和权限管理数据访问。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;无缝集成能力：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持与现有企业系统（OA、ERP、CRM、MES 等）的深度集成，保护企业已有投资。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;开放架构：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持微服务架构与开源框架，避免供应商锁定，保障企业技术自主权。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;div&gt;
 &amp;nbsp; 
 &lt;p&gt;&lt;img height="904" src="https://oscimg.oschina.net/oscnet/up-8aa8d94ad9a6a47e78fcd2aa0b7caaa3916.png" width="1220" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;不是低代码已凉，而是旧的低代码已凉&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;。与 AI 融合的新一代低代码平台如 VTJ.PRO，正在重新定义企业数字化的实施方式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#3c3c43"&gt;据调研，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;38% 的企业已在或计划使用 AI 与低代码结合的方案&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;，另有 40% 的企业计划在未来 12 个月内启动相关项目 7。这场变革已不是未来，而是正在发生的现实。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span style="color:#3c3c43"&gt;VTJ.PRO 正引领这场开发范式的革命&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3c3c43"&gt;，让每个企业都能以最低成本、最高效率拥抱智能时代。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#707070; margin-left:0; margin-right:0"&gt;开源仓库：&lt;a href="https://gitee.com/newgateway/vtj" target="_blank"&gt;VTJ: AI 驱动的 Vue3 低代码开发平台。内置低代码引擎、渲染器与代码生成器，实现 Vue 源码与低代码 DSL 的双向智能转换。专为前端开发者打造，开箱即用。无缝融入现有工程，零侵入开发流程与编码习惯。&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368231</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368231</guid>
      <pubDate>Tue, 19 Aug 2025 00:23:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>EasyGoAdmin 敏捷开发框架 GoFrame+EleVue 版本 v2.4.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.4.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、调整后端服务注册目录 boot, 启动项目时自动注册；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、变成自定义模块目录，统一放在 templdates 目录下；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、解决数据列表日期格式无法正常显示的问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;4、新增非管理员相关权限和角色功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;5、修复近期用户使用过程中反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;div&gt; 
            &lt;h2&gt;项目介绍&lt;/h2&gt; 
            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;一款 Go 语言基于 GoFrame、Vue、ElementUI、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式，同时为了敏捷快速开发，框架特地集成了代码生成器，完全自主研发了自定义 GO 后端服务模板和前端 Vue 自定义模板，可以根据已建好的表结构，可以快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发方式，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、可插拔式的敏捷开发框架。&lt;/p&gt; 
            &lt;h2&gt;软件信息&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;软件名称：EasyGoAdmin 敏捷开发框架 GoFrame+EleVue 版本&lt;/li&gt; 
             &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easygoadmin.vip" target="_blank"&gt;https://www.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.goframe.elevue.easygoadmin.vip" target="_blank"&gt;http://docs.goframe.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.goframe.elevue.easygoadmin.vip" target="_blank"&gt;http://manage.goframe.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;版本说明&lt;/h2&gt; 
            &lt;table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;th&gt;版本名称&lt;/th&gt; 
               &lt;th&gt;版本说明&lt;/th&gt; 
               &lt;th&gt;版本地址&lt;/th&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;GoFrame+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 GoFrame、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Beego+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Beego、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Gin+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Gin、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Iris+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Iris、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Echo+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Echo、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Revel+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Revel、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;GoFrame+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 GoFrame、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Beego+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Beego、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Gin+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Gin、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Iris+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Iris、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Echo+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Echo、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Revel+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Revel、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;GoFrame+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 GoFrame、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Beego+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Beego、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Gin+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Gin、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Iris+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Iris、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Echo+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Echo、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;Revel+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;采用 Revel、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
            &lt;/table&gt; 
            &lt;div&gt; 
             &lt;h2&gt;模块展示&lt;/h2&gt; 
            &lt;/div&gt; 
            &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-126ddb704ff44ea3380c9dfebd9c2c443af.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368229</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368229</guid>
      <pubDate>Mon, 18 Aug 2025 22:50:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>RXThinkCMF 敏捷开发框架 Laravel10+Layui 版本 v2.4.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.4.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、新增 `DevOps` 兼容解决方案；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、优化 `Docker` 容器化脚本；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;h2&gt;项目介绍&lt;/h2&gt; 
         &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;一款 PHP 语言基于 Laravel10、Layui、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可用于快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架，框架已集成了完整的 RBAC 权限架构和常规基础模块，为了敏捷快速开发，提升研发效率，框架内置了一键 CRUD 代码生成器，自定义了模块生成模板，可以根据已建好的表结构 (字段注释需规范) 快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、低代码敏捷开发框架。&lt;/p&gt; 
         &lt;h2&gt;内置模块&lt;/h2&gt; 
         &lt;ul&gt; 
          &lt;li&gt;用户管理：用于维护管理系统的用户，常规信息的维护与账号设置。&lt;/li&gt; 
          &lt;li&gt;角色管理：角色菜单管理与权限分配、设置角色所拥有的菜单权限。&lt;/li&gt; 
          &lt;li&gt;菜单管理：配置系统菜单，操作权限，按钮权限标识等。&lt;/li&gt; 
          &lt;li&gt;职级管理：主要管理用户担任的职级。&lt;/li&gt; 
          &lt;li&gt;岗位管理：主要管理用户担任的岗位。&lt;/li&gt; 
          &lt;li&gt;部门管理：主要管理系统组织架构，对组织架构进行统一管理维护。&lt;/li&gt; 
          &lt;li&gt;操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。&lt;/li&gt; 
          &lt;li&gt;登录日志：系统登录日志记录查询包含登录异常。&lt;/li&gt; 
          &lt;li&gt;字典管理：对系统中常用的较为固定的数据进行统一维护。&lt;/li&gt; 
          &lt;li&gt;配置管理：对系统的常规配置信息进行维护，网站配置管理功能进行统一维护。&lt;/li&gt; 
          &lt;li&gt;城市管理：统一对全国行政区划进行维护，对其他模块提供行政区划数据支撑。&lt;/li&gt; 
          &lt;li&gt;友链管理：对系统友情链接、合作伙伴等相关外链进行集成维护管理的模块。&lt;/li&gt; 
          &lt;li&gt;个人中心：主要是对当前登录用户的个人信息进行便捷修改的功能。&lt;/li&gt; 
          &lt;li&gt;广告管理：主要对各终端的广告数据进行管理维护。&lt;/li&gt; 
          &lt;li&gt;站点栏目：主要对大型系统网站等栏目进行划分和维护的模块。&lt;/li&gt; 
          &lt;li&gt;会员管理：对各终端注册的会员进行统一的查询与管理的模块。&lt;/li&gt; 
          &lt;li&gt;网站配置：对配置管理模块的数据源动态解析与统一维护管理的模块。&lt;/li&gt; 
          &lt;li&gt;通知公告：系统通知公告信息发布维护。&lt;/li&gt; 
          &lt;li&gt;代码生成：一键生成模块 CRUD 的功能，包括后端和前端等相关代码。&lt;/li&gt; 
          &lt;li&gt;案例演示：常规代码生成器一键生成后的演示案例。&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;h2&gt;软件信息&lt;/h2&gt; 
         &lt;ul&gt; 
          &lt;li&gt;软件名称：RXThinkCMF 敏捷开发框架 Laravel10.x+Layui 版本&lt;/li&gt; 
          &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank"&gt;https://www.rxthink.cn&lt;/a&gt;&lt;/li&gt; 
          &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.laravel10.layui.rxthink.cn" target="_blank"&gt;http://docs.laravel10.layui.rxthink.cn&lt;/a&gt;&lt;/li&gt; 
          &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.laravel10.layui.rxthink.cn" target="_blank"&gt;http://manage.laravel10.layui.rxthink.cn&lt;/a&gt;&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;h2&gt;核心组件&lt;/h2&gt; 
         &lt;ul&gt; 
          &lt;li&gt;单图上传组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'UploadImageComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'avatar|头像|90x90|建议上传尺寸 450x450|450x450'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'avatar_url'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'avatar_url'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;''&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;多图上传组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt; @render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'UploadAlbumComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'imgs|图集|90x90|20|建议上传尺寸 450x450|450x450'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'imgsList'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'imgsList'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : []])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;下拉选择组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'SelectComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'gender|1|性别|name|id'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'data'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;config(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"admin.gender_list"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;),&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'gender'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'gender'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;单选按钮组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'RadioComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'gender|name|id'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'data'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;config(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"admin.gender_list"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;),&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($vo[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'gender'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $vo[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'gender'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;复选框组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'CheckboxComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'type|name|id'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'data'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1=云计算,2=数据库,3=大数据"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($vo[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'type'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $vo[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'type'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : []])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;城市选择组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'CityComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'cityId'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'district_id'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'district_id'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'limit'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;开关组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'SwitchComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'status'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'title'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'在用|禁用'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'status'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'status'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;日期组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'DateComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'entry_date|入职时间|date'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'format_entry_date'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'format_entry_date'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;''&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;图标组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'IconComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'name'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'icon'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'icon'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'icon'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'layui-icon-component'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;ul&gt; 
          &lt;li&gt;穿梭组件&lt;/li&gt; 
         &lt;/ul&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;pre&gt;&lt;span&gt;@render(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'TransferComponent'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, [&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'param'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'func|0|全部节点,已赋予节点|name|id|220x350'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;,&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'data'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;config(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'admin.menu_func'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;),&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'value'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;=&amp;gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;isset&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;($info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'funcList'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]) ? $info[&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'funcList'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;] : &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;""&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;])&lt;/span&gt;
&lt;/pre&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
         &lt;h2&gt;模块展示&lt;/h2&gt; 
         &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-78efa203fa062e8476dd5b727f6eb121d55.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368228</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368228</guid>
      <pubDate>Mon, 18 Aug 2025 22:48:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🔥🔥🔥高质量代码 SmartAdmin 发布 V3.28</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff"&gt;&lt;strong&gt;SmartAdmin&lt;/strong&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;「高质量代码、简洁、高效、安全」的快速开发平台&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;v3.28 版本，重磅更新，发布，&lt;/strong&gt;更新如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;【优化】优化 Long、BigInteger、BigDecimal 的 JSON 序列化&lt;/li&gt; 
  &lt;li&gt;【优化】个人中心样式&lt;/li&gt; 
  &lt;li&gt;【优化】Spin 加载&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;hr&gt; 
   &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;SmartAdmin&lt;/strong&gt;&amp;nbsp;由&amp;nbsp;&lt;strong&gt;中国・洛阳&lt;/strong&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.1024lab.net%2F" target="_blank"&gt;1024 创新实验室&lt;/a&gt;&amp;nbsp;基于 SpringBoot2/3+Sa-Token+Mybatis-Plus 和 Vue3+Ant Design Vue+Uni-App+Uni-UI，并以&amp;nbsp;&lt;span style="color:#dc143c"&gt;&lt;strong&gt;「高质量代码」为核心，「简洁、高效、安全」&lt;/strong&gt;&lt;/span&gt;的快速开发平台。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;国内首个满足《网络安全 - 三级等保》、《数据安全》&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;功能要求，支持登录限制、接口国产加解密、数据脱敏等一系列安全要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前端提供&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;JavaScript 和 TypeScript 双版本&lt;/span&gt;&lt;/strong&gt;，后端提供&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;Java8+SpringBoot2.X 和 Java17+SpringBoot3.X 双版本&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;支持&lt;span style="color:#dc143c"&gt;&lt;strong&gt;国产数据库：【达梦、金仓、南大通用、OceanBase、GaussDB 高斯、阿里 PolarDB、GoldenDB 】&lt;/strong&gt;&lt;/span&gt;等，主流数据库：&lt;strong&gt;&lt;span style="color:#dc143c"&gt;【Mysql，PostgreSQL 】等&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同时&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;重磅开源&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;开源六年来&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;千余家企业验证过且正在使用&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;的代码规范:&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;《高质量代码思想》、《Vue3 规范》、《Java 规范》&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;，让大家在这浮躁的世界里感受到一股把代码写好的清流！同时又能节省大量时间，减少加班，快乐工作，保持谦逊，保持学习，&lt;strong&gt;&lt;span style="color:#dc143c"&gt;热爱代码，更热爱生活&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;技术体系&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;前端：Vue3 + Vite5 + Vue-Router + Pinia + Ant Design Vue 4.X&lt;/li&gt; 
 &lt;li&gt;移动端：uniapp (vue3 版本) + uni-ui + （同时支持 APP、小程序、H5）&lt;/li&gt; 
 &lt;li&gt;后端：SpringBoot2/3 + Sa Token + Mybatis-plus + 主流数据库 / 国产数据库&lt;/li&gt; 
 &lt;li&gt;电脑在线预览：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpreview.smartadmin.vip" target="_blank"&gt;https://preview.smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官方文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;https://smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;移动端在线预览：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.smartadmin.vip%2F%23%2Fpages%2Flogin%2Flogin" target="_blank"&gt;https://app.smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;理念与思想&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;我们分享的不是徒劳无功的各种功能，而是必须有的功能，如：网络安全、数据变动记录、系统说明文档、版本更新记录、意见反馈、日志、心跳、单号生成器等等。&lt;/li&gt; 
 &lt;li&gt;我们分享的还有经过上百家公司验证过的前端、后端、vue3 等代码规范，好的规范能让我们敲下的每行代码更铿锵有力！&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;我们推崇高质量的代码，身为开发，代码即利剑，键盘上一套行云流水，宛如侠客，事了拂衣去，深藏身与名。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;我们推崇团队的高度配合默契、互相帮助，从不加班，而不是一看到别人的代码就头皮发麻，留其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F996.ICU" target="_blank"&gt;996.ICU&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;加班。&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;功能亮点图&lt;/strong&gt;&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b1071e517f1d71298d012c71e6f98a7c.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//15cfa4d262087c2b83dd40411f05a230.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//c9d856ba2697b9e39c3616f6de2c58e2.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//12eb4611701abae810e3331ae3e560a2.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e87bc020c32c09f8c19f870d00ca01ff.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//deb88775a4b1a4e2d65e7812e2932bbc.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e0ea9cf13fb5029642c57ea603f65d01.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//81df44014813a2fce9447aecb33ac119.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//25c33dbfcf930dbf2ab060e453f146dc.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//feedbc7cec172f3a14c21998a0d9b361.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;功能亮点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;安全体系&lt;/span&gt;&lt;/strong&gt;：&lt;span style="background-color:#ffffff; color:#3c3c43"&gt;满足国家三级等保要求，如双因子登录、密码加密、密码复杂度要求、登录错误次数锁定、登录超时退出、数据脱敏等网络安全和数据安全功能&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;接口加解密&lt;/span&gt;&lt;/strong&gt;：支持请求参数和返回内容进行加解密操作，支持国产加密算法和其他国外加密算法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;表格自定义列&lt;/strong&gt;：支持用户自定义列，并能将用户自定义列持久化到数据库&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据变更记录&lt;/strong&gt;：支持基于 git diff 插件的数据变更记录，查看数据变化更直观方便&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;在线文档&lt;/strong&gt;：支持右侧帮助文档（类似阿里云控制枱右侧帮助文档效果）、支持意见反馈、版本记录，等功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OA 办公&lt;/strong&gt;：公司信息（发票、银行、员工等）、通知公告（阅读记录、次数等）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;日志、监控&lt;/strong&gt;：服务器心跳日志、登录日志、操作日志（IP、浏览器、操作系统等设备信息）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;系统功能&lt;/strong&gt;：员工、部门、角色、权限、菜单、水印、文件管理、系统参数、数据字典、单号生成，等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代码生成&lt;/strong&gt;： 基于每个表的配置、在线预览代码、下载，等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;以上只是一些举例，更多灿若繁星的惊喜和细节，等待着你的发现！&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;SmartAdmin 业内独有功能亮点&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;代码亮点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 双版本】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供 js 和 ts 双版本，目录结构及其清晰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 常量维护】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;vue-enum，拒绝出现魔法数字，常量枚举不可维护的现象&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 命名】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内最好的 api、常量等命名和写法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 多环境支持】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;独有的本地、开发、测试、预发布、生产 5 个 env 环境配置文件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - layout 代码】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内代码最清晰的 layout 布局写法，小白都能看懂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - main.js】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内可能只有我们把 main.js 中的 router 加载方式写对了&lt;/li&gt; 
 &lt;li&gt;---- 华丽前后端分割线 ----&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 独有目录结构】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独有的高质量的 Java 代码分包结构，适合大、中、小型项目，结构非常清晰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 公共配置文件】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独有的共用配置文件维护，简化共同配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 返回码维护】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独创的请求返回码维护，非常值得一看&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 四层架构】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;四层架构（controller, service, manager, dao），为什么要有四层&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 多环境】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;maven 多环境：开发、测试、预发布、生产，环境配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 系统钩子】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;smart-reload，为系统预留钩子，动态加载，在不重启程序前提下执行一些代码&lt;/li&gt; 
 &lt;li&gt;以上只是沧海一粟，更多的细节等待你的发现！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;去查看&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368204/smart-admin-3-28-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368204/smart-admin-3-28-released</guid>
      <pubDate>Mon, 18 Aug 2025 15:13:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Snow 编程语言 v0.7.0 发布: 数组支持、类型推断与全局安全等多项增强</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h3&gt;更新内容&lt;/h3&gt; 
&lt;h4&gt;新增功能&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持标准 URL 格式，增强模块兼容性与可用性。&lt;/li&gt; 
 &lt;li&gt;编译器增强错误定位功能，定位信息更精准，便于问题排查。&lt;/li&gt; 
 &lt;li&gt;支持一维及多维数组类型和字面量，丰富数据结构支持。&lt;/li&gt; 
 &lt;li&gt;数组元素赋值、访问和数组常量递归序列化，提升数组操作能力。&lt;/li&gt; 
 &lt;li&gt;检查和禁止全局变量重复声明，保证变量唯一性和安全性。&lt;/li&gt; 
 &lt;li&gt;支持数组下标访问类型分派，类型推断更智能。&lt;/li&gt; 
 &lt;li&gt;支持模块函数调用自动省略当前模块前缀，提升模块内调用便捷性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;性能和稳定性改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化数字字面量的语义分析与错误提示，提升溢出检测准确性与用户体验。&lt;/li&gt; 
 &lt;li&gt;修复常量类型在 VM 中的表示问题，区分浮点数、双精度、长整数，防止类型混淆。&lt;/li&gt; 
 &lt;li&gt;优化常量生成逻辑，提升代码可读性和维护性。&lt;/li&gt; 
 &lt;li&gt;重构关键字与标准库、模板代码，整体代码更规范，结构更清晰。&lt;/li&gt; 
 &lt;li&gt;移除词法分析器中的调试代码，保持代码整洁性。&lt;/li&gt; 
 &lt;li&gt;重构 VM 相关生成逻辑，移除冗余字段，简化结构。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;开发者体验提升&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;IDEA 配置和运行配置文件优化，便于本地开发和演示。&lt;/li&gt; 
 &lt;li&gt;多个 Demo、BugFarm 测试项目重构和完善，测试流程更加流畅。&lt;/li&gt; 
 &lt;li&gt;命令行 debug 标志统一为 &lt;code&gt;--debug&lt;/code&gt;，使用体验一致。&lt;/li&gt; 
 &lt;li&gt;优化和完善文档及代码注释，增强代码可读性与维护性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Bug 修复&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复数字字面量溢出、类型后缀、位宽符号等边界条件相关问题。&lt;/li&gt; 
 &lt;li&gt;修复 NumberTokenScanner 误判和死循环问题，增强词法分析健壮性。&lt;/li&gt; 
 &lt;li&gt;修复变量作用域与寄存器别名导致内外循环变量互相影响的问题，保证作用域隔离。&lt;/li&gt; 
 &lt;li&gt;修复语法分析、词法分析等边界条件 Bug，提升整体稳定性。&lt;/li&gt; 
 &lt;li&gt;修复模块内函数自动补全和语义分析相关问题，确保符号解析准确。&lt;/li&gt; 
 &lt;li&gt;修复全局变量重复声明问题，保障全局作用域安全。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;文档改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除废弃的字面量后缀（如 i、d），文档更清晰。&lt;/li&gt; 
 &lt;li&gt;更新 README 和相关说明文档，确保文档与代码同步。&lt;/li&gt; 
 &lt;li&gt;完善方法与命令行文档主描述，参数显示更清晰，注释更完善。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如遇到使用问题，欢迎及时 &lt;a href="https://gitee.com/jcnc-org/snow/issues"&gt;提交 Issue&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368194/snow-lang-0-7-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368194/snow-lang-0-7-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 14:10:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>XXL-JOB v3.2.0 | 分布式任务调度平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h3&gt;Release Notes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、【强化】AI 任务（ollamaJobHandler）优化：针对 「model」 模型配置信息，从执行器侧文件类配置调整至调度中心「任务参数」动态配置，支持集成多模型、并结合任务动态配置切换。&lt;/li&gt; 
 &lt;li&gt;2、【安全】登录认证重构：密码加密算法从 Md5 改为 Sha256；登录态改为登录后动态随机生成；提升系统安全性；（需要针对用户表进行字段调整，同时需要重新初始化密码信息；相关 SQL 脚本如下）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;// 1、用户表 password 字段需要调整长度，执行如下命令
ALTER TABLE xxl_job_user
    MODIFY COLUMN `password` varchar(100) NOT NULL COMMENT '密码加密信息';
ALTER TABLE xxl_job_user
    ADD COLUMN `token` varchar(100) DEFAULT NULL COMMENT '登录 token';
    
// 2、存量用户密码需要修改，可执行如下命令将密码初始化 「123456」；也可以自行通过 「SHA256Tool.sha256」 工具生成其他初始化密码；
UPDATE xxl_job_user t SET t.password = '8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92' WHERE t.username = {用户名};
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;3、【强化】GLUE 模式 (Python) 扩展，支持 "GLUE(Python3)" 与 "GLUE(Python2)" 两种模式，分别支持 python3/2 多版本；&lt;/li&gt; 
 &lt;li&gt;4、【强化】调度中心系统日志调整，支持启动时指定 -DLOG_HOME 参数自定义日志位置；同时优化日志格式提升易读性；&lt;/li&gt; 
 &lt;li&gt;5、【优化】任务 Bean 扫描规则调整，过滤冗余不必要扫描，避免系统组件提前初始化；&lt;/li&gt; 
 &lt;li&gt;6、【优化】登录信息页面空值处理优化，避免空值影响 ftl 渲染；&lt;/li&gt; 
 &lt;li&gt;7、【优化】异常页面处理逻辑优化，新增兜底落地页配置；&lt;/li&gt; 
 &lt;li&gt;8、【重构】ReturnT 重构，简化代码结构，提升 API 易用性以及可维护性；&lt;/li&gt; 
 &lt;li&gt;9、【重构】项目结构重构，提升可维护性与易读性；&lt;/li&gt; 
 &lt;li&gt;10、【修复】漏洞修复（CVE-2025-7787），针对 httpJobHandler 支持配置 URL 白名单限制，防止服务器端请求伪造（SSRF）攻击。&lt;/li&gt; 
 &lt;li&gt;11、【修复】合并 PR-3738，修复拼写问题；&lt;/li&gt; 
 &lt;li&gt;12、【修复】合并 PR-3506，修复小概率情况下任务重复调度问题；&lt;/li&gt; 
 &lt;li&gt;13、【修复】合并 PR-3747，修复异常情况下资源泄漏风险；&lt;/li&gt; 
 &lt;li&gt;14、【修复】IDOR 越权问题修复，提升任务操作及日志管理安全性；&lt;/li&gt; 
 &lt;li&gt;15、【升级】升级多项 maven 依赖至较新版本，如 netty、groovy、mybatis、spring、spring-ai、dify 等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;「AI 任务」接入示例&lt;/h3&gt; 
&lt;p&gt;此处以 difyWorkflowJobHandler 为例，注意需要前置部署 AI 执行器（xxl-job-executor-sample-ai），可参考官方文档说明。&lt;/p&gt; 
&lt;p&gt;步骤一：调度中心，新建 difyWorkflowJobHandler 任务&lt;/p&gt; 
&lt;p&gt;&lt;img height="1588" src="https://oscimg.oschina.net/oscnet/up-0cdf1b5008884996f04f270572df610e207.png" width="1786" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;步骤二：任务执行，查看任务进度及日志&lt;/h4&gt; 
&lt;p&gt;&lt;img height="1868" src="https://oscimg.oschina.net/oscnet/up-21814e49cd0d65cc16c66c04bea0bfffccf.png" width="2608" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;「常规任务」接入示例&lt;/h3&gt; 
&lt;p&gt;XXL-JOB 支持多模式任务，下文以简单的「Bean 模式任务」为例介绍，三步快速开发接入。&lt;/p&gt; 
&lt;p&gt;步骤一：执行器，开发 Job 方法&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@XxlJob("demoJobHandler")
 public void demoJobHandler() throws Exception {
    XxlJobHelper.log("XXL-JOB, Hello World.");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;步骤二：调度中心，新建调度任务&lt;/h4&gt; 
&lt;p&gt;&lt;img height="1017" src="https://oscimg.oschina.net/oscnet/up-c3f2864564db9e47e49c5cdcf721e63897f.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;步骤三：任务执行，查看任务进度及日志&lt;/h4&gt; 
&lt;p&gt;&lt;img height="348" src="https://oscimg.oschina.net/oscnet/up-563cc047e76dccfbcf7c98c3f10018d9ddb.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;简介&lt;/h3&gt; 
&lt;p&gt;XXL-JOB 是一个轻量级分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展。现已开放源代码并接入多家公司线上产品线，开箱即用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xuxueli.com%2Fxxl-job%2F" target="_blank"&gt;中文文档：http://www.xuxueli.com/xxl-job/ &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xuxueli.com%2Fpage%2Fcommunity.html" target="_blank"&gt;社区交流：http://www.xuxueli.com/page/community.html &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="631" src="https://oscimg.oschina.net/oscnet/up-732014b16ae496963715102544cd923bb8d.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;1、简单：支持通过 Web 页面对任务进行 CRUD 操作，操作简单，一分钟上手；&lt;/li&gt; 
 &lt;li&gt;2、动态：支持动态修改任务状态、启动/停止任务，以及终止运行中任务，即时生效；&lt;/li&gt; 
 &lt;li&gt;3、调度中心 HA（中心式）：调度采用中心式设计，「调度中心」自研调度组件并支持集群部署，可保证调度中心 HA；&lt;/li&gt; 
 &lt;li&gt;4、执行器 HA（分布式）：任务分布式执行，任务"执行器"支持集群部署，可保证任务执行 HA；&lt;/li&gt; 
 &lt;li&gt;5、注册中心: 执行器会周期性自动注册任务, 调度中心将会自动发现注册的任务并触发执行。同时，也支持手动录入执行器地址；&lt;/li&gt; 
 &lt;li&gt;6、弹性扩容缩容：一旦有新执行器机器上线或者下线，下次调度时将会重新分配任务；&lt;/li&gt; 
 &lt;li&gt;7、触发策略：提供丰富的任务触发策略，包括：Cron 触发、固定间隔触发、固定延时触发、API（事件）触发、人工触发、父子任务触发；&lt;/li&gt; 
 &lt;li&gt;8、调度过期策略：调度中心错过调度时间的补偿处理策略，包括：忽略、立即补偿触发一次等；&lt;/li&gt; 
 &lt;li&gt;9、阻塞处理策略：调度过于密集执行器来不及处理时的处理策略，策略包括：单机串行（默认）、丢弃后续调度、覆盖之前调度；&lt;/li&gt; 
 &lt;li&gt;10、任务超时控制：支持自定义任务超时时间，任务运行超时将会主动中断任务；&lt;/li&gt; 
 &lt;li&gt;11、任务失败重试：支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；其中分片任务支持分片粒度的失败重试；&lt;/li&gt; 
 &lt;li&gt;12、任务失败告警；默认提供邮件方式失败告警，同时预留扩展接口，可方便的扩展短信、钉钉等告警方式；&lt;/li&gt; 
 &lt;li&gt;13、路由策略：执行器集群部署时提供丰富的路由策略，包括：第一个、最后一个、轮询、随机、一致性 HASH、最不经常使用、最近最久未使用、故障转移、忙碌转移等；&lt;/li&gt; 
 &lt;li&gt;14、分片广播任务：执行器集群部署时，任务路由策略选择"分片广播"情况下，一次任务调度将会广播触发集群中所有执行器执行一次任务，可根据分片参数开发分片任务；&lt;/li&gt; 
 &lt;li&gt;15、动态分片：分片广播任务以执行器为维度进行分片，支持动态扩容执行器集群从而动态增加分片数量，协同进行业务处理；在进行大数据量业务操作时可显著提升任务处理能力和速度。&lt;/li&gt; 
 &lt;li&gt;16、故障转移：任务路由策略选择"故障转移"情况下，如果执行器集群中某一台机器故障，将会自动 Failover 切换到一台正常的执行器发送调度请求。&lt;/li&gt; 
 &lt;li&gt;17、任务进度监控：支持实时监控任务进度；&lt;/li&gt; 
 &lt;li&gt;18、Rolling 实时日志：支持在线查看调度结果，并且支持以 Rolling 方式实时查看执行器输出的完整的执行日志；&lt;/li&gt; 
 &lt;li&gt;19、GLUE：提供 Web IDE，支持在线开发任务逻辑代码，动态发布，实时编译生效，省略部署上线的过程。支持 30 个版本的历史版本回溯。&lt;/li&gt; 
 &lt;li&gt;20、脚本任务：支持以 GLUE 模式开发和运行脚本任务，包括 Shell、Python、NodeJS、PHP、PowerShell 等类型脚本;&lt;/li&gt; 
 &lt;li&gt;21、命令行任务：原生提供通用命令行任务 Handler（Bean 任务，"CommandJobHandler"）；业务方只需要提供命令行即可；&lt;/li&gt; 
 &lt;li&gt;22、任务依赖：支持配置子任务依赖，当父任务执行结束且执行成功后将会主动触发一次子任务的执行, 多个子任务用逗号分隔；&lt;/li&gt; 
 &lt;li&gt;23、一致性：「调度中心」通过 DB 锁保证集群分布式调度的一致性, 一次任务调度只会触发一次执行；&lt;/li&gt; 
 &lt;li&gt;24、自定义任务参数：支持在线配置调度任务入参，即时生效；&lt;/li&gt; 
 &lt;li&gt;25、调度线程池：调度系统多线程触发调度运行，确保调度精确执行，不被堵塞；&lt;/li&gt; 
 &lt;li&gt;26、数据加密：调度中心和执行器之间的通讯进行数据加密，提升调度信息安全性；&lt;/li&gt; 
 &lt;li&gt;27、邮件报警：任务失败时支持邮件报警，支持配置多邮件地址群发报警邮件；&lt;/li&gt; 
 &lt;li&gt;28、推送 maven 中央仓库: 将会把最新稳定版推送到 maven 中央仓库, 方便用户接入和使用;&lt;/li&gt; 
 &lt;li&gt;29、运行报表：支持实时查看运行数据，如任务数量、调度次数、执行器数量等；以及调度报表，如调度日期分布图，调度成功分布图等；&lt;/li&gt; 
 &lt;li&gt;30、全异步：任务调度流程全异步化设计实现，如异步调度、异步运行、异步回调等，有效对密集调度进行流量削峰，理论上支持任意时长任务的运行；&lt;/li&gt; 
 &lt;li&gt;31、跨语言/OpenAPI：调度中心与执行器提供语言无关的 OpenApi（RESTful 格式），第三方任意语言可据此对接调度中心或者实现执行器，实现多语言支持。除此之外，还提供了 「多任务模式」和「httpJobHandler」等其他跨语言方案；&lt;/li&gt; 
 &lt;li&gt;32、国际化：调度中心支持国际化设置，提供中文、英文两种可选语言，默认为中文；&lt;/li&gt; 
 &lt;li&gt;33、容器化：提供官方 docker 镜像，并实时更新推送 dockerhub，进一步实现产品开箱即用；&lt;/li&gt; 
 &lt;li&gt;34、线程池隔离：调度线程池进行隔离拆分，慢任务自动降级进入"Slow"线程池，避免耗尽调度线程，提高系统稳定性；&lt;/li&gt; 
 &lt;li&gt;35、用户管理：支持在线管理系统用户，存在管理员、普通用户两种角色；&lt;/li&gt; 
 &lt;li&gt;36、权限控制：执行器维度进行权限控制，管理员拥有全量权限，普通用户需要分配执行器权限后才允许相关操作；&lt;/li&gt; 
 &lt;li&gt;37、AI 任务：原生提供 AI 执行器，并内置多个 AI 任务 Handler，与 spring-ai、ollama、dify 等集成打通，支持快速开发 AI 类任务。&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368158/xxl-job-3-2-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368158/xxl-job-3-2-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 08:54:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🎉Laravel + Vue3 前后端分离后端框架 CatchAdmin v4.1.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;介绍&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;CatchAdmin&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一款基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaravel.com%2F" target="_blank"&gt;Laravel&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Felement-plus.org%2F" target="_blank"&gt;Element Plus&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;二次开发而成后台管理系统。&lt;code&gt;Laravel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;社区也有许多非常优秀的后台管理系统，例如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Nova&lt;/code&gt;, 官方出品，当然是收费的，免费的有基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Livewire&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Filament&lt;/code&gt;，还有不得不说的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Laravel Admin&lt;/code&gt;。&lt;code&gt;CatchAdmin&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;还是采用传统的前后端分离策略，&lt;code&gt;Laravel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架仅仅作为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Api&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;输出。将管理系统模块之间的耦合降到了最低限度。每个模块之间都有独立的控制器，路由，模型，数据表。在开发上尽可能将模块之间的影响降到最低，降低了开发上的难度。基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CatchAdmin&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可以开发&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;CMS&lt;/code&gt;，&lt;code&gt;CRM&lt;/code&gt;，&lt;code&gt;OA&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等，等系统。也封装了很多实用的工具，提升开发体验。&lt;/p&gt; 
&lt;h2&gt;V4.1.0 日志&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 Query Log 日志格式错误&lt;/li&gt; 
 &lt;li&gt;新增 restore 方法，支持软删除数据恢复&lt;/li&gt; 
 &lt;li&gt;增强了代码生成功能&lt;/li&gt; 
 &lt;li&gt;修复使用内置缓存路由命令导致路由失效&lt;/li&gt; 
 &lt;li&gt;新增 CMS 模块&lt;/li&gt; 
 &lt;li&gt;优化了系统模块导入&lt;/li&gt; 
 &lt;li&gt;前端新增了全局加载，防止白屏&lt;/li&gt; 
 &lt;li&gt;前端修复用户退出后没有清空前一个登录用户的 tab 标签页&lt;/li&gt; 
 &lt;li&gt;前端优化了菜单栏展示方式，删除默认的策略点&lt;/li&gt; 
 &lt;li&gt;前端新增 warphost 方法，适配本地上传的文件和图片显示&lt;/li&gt; 
 &lt;li&gt;前端优化了其他组件以及新增 cms 模块&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;视频&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jP41127aW%2F" target="_blank"&gt;catchadmin 模块创建&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Qh4y1J7eB%2F" target="_blank"&gt;catchadmin 之快速开发&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;功能&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcatchadmin.com%2Fdocs%2F3.0%2Fintro%23%25E5%258A%259F%25E8%2583%25BD" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户管理，后台用户管理&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;部门管理，配置公司的部门结构，支持树形结构&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岗位管理，配置后台用户的职务&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;菜单管理，配置系统菜单，按钮等等&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;角色管理，配置用户担当的角色，分配权限&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;操作日志，后台用户操作记录&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;登录日志，后台系统用户的登录记录&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;代码生成，生成 API 端的 CURD 操作&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Schema 管理，生成表结构&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模块管理，系统模块管理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;额外模块&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcatchadmin.com%2Fdocs%2F3.0%2Fintro%23%25E9%25A2%259D%25E5%25A4%2596%25E6%25A8%25A1%25E5%259D%2597" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcatch-admin%2Fcms" target="_blank"&gt;CMS 模块&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目地址&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcatchadmin.com%2Fdocs%2F3.0%2Fintro%23%25E9%25A1%25B9%25E7%259B%25AE%25E5%259C%25B0%25E5%259D%2580" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjaguarjack%2Fcatch-admin" target="_blank"&gt;github 地址&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/jaguarjack/catchAdmin" target="_blank"&gt;gitee 地址&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;预览&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcatchadmin.com%2Fdocs%2F3.0%2Fintro%23%25E9%25A2%2584%25E8%25A7%2588" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;img alt="" height="1200" src="https://oscimg.oschina.net/oscnet/up-20bd51527a55b9d851dc657619e88a12335.png" width="2418" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1200" src="https://oscimg.oschina.net/oscnet/up-550a85e9eb29136f8ac63e2323e32362357.png" width="2556" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1200" src="https://oscimg.oschina.net/oscnet/up-67561ab2c9d6455c0d6e8bd77d020ab8258.png" width="2631" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1200" src="https://oscimg.oschina.net/oscnet/up-388ac7e9361aa37a4b9260520d16935f993.png" width="2552" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;体验地址&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcatchadmin.com%2Fdocs%2F3.0%2Fintro%23%25E4%25BD%2593%25E9%25AA%258C%25E5%259C%25B0%25E5%259D%2580" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv3.catchadmin.com%2F" target="_blank"&gt;demo 地址&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;账户:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;catch@admin.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;密码:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;catchadmin&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;感谢🙏&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcatchadmin.com%2Fdocs%2F3.0%2Fintro%23%25E6%2584%259F%25E8%25B0%25A2" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;排名不分先后&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaravel.com%2F" target="_blank"&gt;Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vuejs.org%2F" target="_blank"&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Felement-plus.org%2F" target="_blank"&gt;ElementPlus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocusaurus.com%2F" target="_blank"&gt;Docusaurus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2F" target="_blank"&gt;JetBrains&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368154</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368154</guid>
      <pubDate>Mon, 18 Aug 2025 07:39:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>不会写 SQL 也能出报表？积木报表 + AI 30 秒自动生成报表和图表</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;还在为报表写复杂 SQL 抓耳挠腮？报表制作太复杂不会用？来试试积木报表吧，通过 AI 30 秒即可生成报表和图表，真的是超简单。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;积木报表 v1.9.6 + 版本新增了 AI 助手功能，AI 助手可以帮助用户快速生成 sql 语句、快速生成报表和图表，极大的提高了报表设计的效率&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;一、效果&lt;/h2&gt; 
&lt;h3&gt;1.1 AI 根据&lt;strong&gt;业务描述&lt;/strong&gt;生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;sql 语句&lt;/strong&gt;:&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9d3a2ef3992840f13d0c8697c5e346ab25d.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;1.2 AI 根据&lt;strong&gt;业务描述&lt;/strong&gt;生成&lt;strong&gt;报表设计&lt;/strong&gt;:&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-6a8d4e8e872a19442a58081637270fddcd1.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;1.3 AI 根据&lt;strong&gt;业务描述&lt;/strong&gt;生成&lt;strong&gt;图表设计&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-45030e3d156e26c4aedbc7abf36f9791358.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;二、实现方式&lt;/h2&gt; 
&lt;h3&gt;2.1 前置条件&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;积木报表的 AI 助手功能依赖于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 大模型&lt;/code&gt;模块，所以若想使用该功能，需要运行&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统，并且在系统中配置好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 大模型&lt;/code&gt;模块的相关参数；或者将&lt;code&gt;积木报表&lt;/code&gt;集成在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统中使用。&lt;/p&gt; 
&lt;h3&gt;2.2 JeecgBoot 配置&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统中，需要配置自己的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;LLM&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模型，并且更新 AI 工作流中 LLM 节点的配置参数，具体配置步骤如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;进入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 大模型&lt;/code&gt;模块，点击左侧菜单中的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 模型配置&lt;/code&gt;，进入配置页面&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;点击左上角的&lt;code&gt;添加模型&lt;/code&gt;按钮，添加自己的模型配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b5bc4167f35e5f28de41fe9fc34b1788655.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;在弹出的对话框中，选择模型供应商（本例使用千问），下一步。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a46623fb9602a69fc6a36b732c4677060d9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;输入模型名称、选择模型类型（语言模型）、填写基础模型 (qwen-coder-plus)、模型地址、鉴权等信息，点击&lt;code&gt;保存&lt;/code&gt;按钮。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-dcbe6a67a9b80eec8b18a0de676cc031ea1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;点击左侧菜单中的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 工作流&lt;/code&gt;，进入工作流配置页面，点击内置的工作流：&lt;code&gt;JimuReport AI 引擎&lt;/code&gt;，进入编排页面。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0bf62b7d0b6d41c00547d5af7bdd52c5d2c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;在编排页面中，点击&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;LLM&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点，进入节点配置页面；&lt;/li&gt; 
 &lt;li&gt;分别点击大模型节点，将模型修改为刚刚我们创建的模型。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-75f9b2fc9880751f884a6100395d8ff1802.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
 &lt;li&gt;点击&lt;code&gt;保存&lt;/code&gt;按钮，完成工作流的配置。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;2.3 积木报表配置&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果积木报表是独立使用的，或者集成在其他系统中使用，需要在&lt;code&gt;积木报表&lt;/code&gt;的配置文件中配置 AI 助手的相关参数，具体配置步骤如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;打开积木报表的配置文件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;application.yml&lt;/code&gt;，在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;jeecg.jmreport.ai.service-url&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgAI 服务&lt;/code&gt;的地址，格式为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;http://domain/url&lt;/code&gt;，例如：&lt;code&gt;http://localhost:8080/jeecgboot/airag/flow/run&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#005cc5"&gt;jeecg&lt;/span&gt;:
  &lt;span style="color:#005cc5"&gt;jmreport&lt;/span&gt;:
    &lt;span style="color:#005cc5"&gt;ai&lt;/span&gt;:
      &lt;span style="color:#005cc5"&gt;service-url&lt;/span&gt;: &lt;span style="color:#005cc5"&gt;http&lt;/span&gt;:&lt;span style="color:#6a737d"&gt;//localhost:8080/jeecgboot/airag/flow/run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果积木报表是集成在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JeecgBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统中使用的，则不需要配置该参数。&lt;/p&gt; 
&lt;h2&gt;三、使用方式&lt;/h2&gt; 
&lt;h3&gt;3.1 AI 根据&lt;strong&gt;业务描述&lt;/strong&gt;生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;sql 语句&lt;/strong&gt;:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;进入积木报表的设计页面，点击左侧数据集新建按钮，进入 Sql 数据集新建页面。&lt;/li&gt; 
 &lt;li&gt;先选定数据源 (若不选择，则默认使用系统的数据源)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ee54af9054cfc8966d9a008be87f3ba2848.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
 &lt;li&gt;然后点击 sql 语句输入框右上的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 生成 SQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;按钮，弹出 AI 生成 SQL 语句对话框&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b166b337cbefcf1e8273a7489ccfd6d2157.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
 &lt;li&gt;在对话框中输入业务描述，例如：&lt;code&gt;查询 2018 年 1 月到 2019 年 12 月的入库记录&lt;/code&gt;，点击&lt;code&gt;生成 SQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;按钮，AI 助手会分几个步骤完成生成 SQL 语句的过程: 
  &lt;ol&gt; 
   &lt;li&gt;分析理解用户输入的业务描述&lt;/li&gt; 
   &lt;li&gt;从数据库中选择符合业务需求的数据库表&lt;/li&gt; 
   &lt;li&gt;生成 Sql 语句&lt;/li&gt; 
   &lt;li&gt;执行 Sql 语句，返回结果&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d095357604674f6a2f76ce93397c8cfdaa2.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;若对生成的 sql 语句不满意，可以修改需求描述，再次点击&lt;code&gt;生成 SQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;按钮，AI 助手会重新生成 sql 语句&lt;/li&gt; 
 &lt;li&gt;若生成的 sql 语句符合预期，点击&lt;code&gt;使用此 SQL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;按钮，完成 sql 语句的生成&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.2 AI 根据&lt;strong&gt;业务描述&lt;/strong&gt;生成&lt;strong&gt;报表设计&lt;/strong&gt;:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;进入积木报表的设计页面，确保已经维护好数据集数据。&lt;/li&gt; 
 &lt;li&gt;点击右下角的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 助手&lt;/code&gt;按钮，弹出 AI 助手对话框&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ee903e1dc34135646573e2e0c70e344d858.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
 &lt;li&gt;在对话框中输入业务描述，例如：&lt;code&gt;展示物料列表，需要展示物料的名称、分类、供应商、库存数量&lt;/code&gt;，点击&lt;code&gt;确定&lt;/code&gt;按钮，AI 助手会分几个步骤完成生成报表设计的过程: 
  &lt;ol&gt; 
   &lt;li&gt;分析理解用户输入的业务描述&lt;/li&gt; 
   &lt;li&gt;从多个数据集 (若有) 中选择一个最合适的数据集&lt;/li&gt; 
   &lt;li&gt;生成报表设计&lt;/li&gt; 
   &lt;li&gt;将报表设计渲染到页面上&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cc51f2f0779241d2e6446883a25f264c86d.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;生成完成后系统会自动将设计渲染到设计页面上&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5c112c74a0c00d9a48cdaee81bff70ec71e.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.3 AI 根据&lt;strong&gt;业务描述&lt;/strong&gt;生成&lt;strong&gt;图表设计&lt;/strong&gt;:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;进入积木报表的设计页面，确保已经维护好数据集数据。&lt;/li&gt; 
 &lt;li&gt;点击添加图表按钮，打开添加图表弹窗。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-6d766e23709b464790aded8325211812151.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
 &lt;li&gt;在弹窗左上角点击&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AI 生成&lt;/code&gt;按钮，弹出 AI 助手对话框。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-72a2f502ea58a7b7c7b701171b8828be7d9.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
 &lt;li&gt;在对话框中输入业务描述，例如：&lt;code&gt;展示物料列表库存的柱状图&lt;/code&gt;，点击&lt;code&gt;确定&lt;/code&gt;按钮，AI 助手会分几个步骤完成生成图表设计的过程: 
  &lt;ol&gt; 
   &lt;li&gt;分析理解用户输入的业务描述&lt;/li&gt; 
   &lt;li&gt;从多个数据集 (若有) 中选择一个最合适的数据集&lt;/li&gt; 
   &lt;li&gt;生成图表设计&lt;/li&gt; 
   &lt;li&gt;将图表设计渲染到页面上&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c159560b26798deff9ecc5410200136d8c4.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;生成完成后，系统会自动将设计渲染到设计页面上.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-767b278de00ca10e51f1e7eb8afd2970448.png" referrerpolicy="no-referrer"&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368143</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368143</guid>
      <pubDate>Mon, 18 Aug 2025 06:12:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>鸿蒙元应用与卡片使用 @LocalStorageProp 进行通讯的技术分享</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鸿蒙世界的敲门砖，标志着您在技术征途上的全新起点，提升就业竞争力，获得行业认可，点亮职业成长先机，快人一步抢占未来应用开发赛道！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Ftraining%2Fdev-cert-detail%2F101666948302721398%3Fha_source%3Dhmosclass-bokeyuan%26ha_sourceId%3D89000444" target="_blank"&gt;https://developer.huawei.com/consumer/cn/training/dev-cert-detail/101666948302721398?ha_source=hmosclass-bokeyuan&amp;amp;ha_sourceId=89000444&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在鸿蒙系统（HarmonyOS）的开发中，@LocalStorageProp 是一个非常有用的装饰器，用于在组件之间共享状态或数据。特别是在卡片（Card）和元服务（Meta Service）之间进行通讯时，@LocalStorageProp 可以帮助我们实现数据的持久化和同步。本文将通过一个具体的案例，详细介绍如何使用 @LocalStorageProp 进行通讯。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;1、案例背景&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;假设我们正在开发一个幸运号生成器应用，其中包含一个卡片组件 LotteryNumbersWidgetCard。这个卡片组件需要显示生成的幸运号码，并且这些号码需要在不同的卡片实例之间共享。为了实现这一功能，我们可以使用 @LocalStorageProp 来存储和同步幸运号码。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;2、案例代码分析&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;以下是我们提供的 LotteryNumbersWidgetCard.ets 文件的内容，其中展示了如何使用 @LocalStorageProp 进行通讯。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 1.png" height="341" src="https://oscimg.oschina.net/oscnet//10d19320d2d6ac4ee945812b4207bc59.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 2.png" height="339" src="https://oscimg.oschina.net/oscnet//d8050442a00398012a56a67374732431.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 3.png" height="338" src="https://oscimg.oschina.net/oscnet//9e77246d89d2a040da849aa744e9f05c.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 4.png" height="275" src="https://oscimg.oschina.net/oscnet//0787940d2b5f9d3eac74cfce8b7028e3.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3、关键点解析&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.1. 使用 @LocalStorageProp&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在上述代码中，@LocalStorageProp 装饰器用于定义需要持久化的属性。这些属性会在组件实例之间共享，并且在应用重启后仍然保留其值。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 5.png" height="30" src="https://oscimg.oschina.net/oscnet//908f460a71abd4d79f12224900c4b10c.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;lotteryType: 定义了幸运号码的类型，默认值为 「5+2」。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;lotteryNumArr: 定义了生成的幸运号码数组，默认值为 [‘11 &lt;a href="tel:12 13 14 15"&gt;12 13 14 15&lt;/a&gt; 16’, ‘21’]。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.2. 数据更新与同步&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;当用户点击「生成幸运号码」按钮时，会调用 GenerateLotteryUtil.generateLottery(this.lotteryType) 方法生成新的幸运号码，并更新 lotteryNumArr 属性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 6.png" height="83" src="https://oscimg.oschina.net/oscnet//80eddc649bada4ed668adeafbbf1d8db.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;由于 lotteryNumArr 使用了 @LocalStorageProp 装饰器，其值会被自动持久化，并在其他卡片实例中同步更新。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;3.3. 生命周期方法&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在 aboutToDisappear 生命周期方法中，通过 postCardAction 方法将当前的 lotteryType 和 lotteryNumArr 发送到卡片动作中。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 7.png" height="81" src="https://oscimg.oschina.net/oscnet//f01f3aebc2605ca343badc24c8f31208.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;这一步确保了在卡片消失时，当前的状态会被正确地传递出去。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;4、实际开发中的注意事项&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在实际开发过程中，使用 @LocalStorageProp 进行通讯时需要注意以下几点：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;数据类型：确保 @LocalStorageProp 装饰的属性是可序列化的，例如基本数据类型、数组、对象等。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;性能考虑：频繁地更新 @LocalStorageProp 属性可能会影响性能，因此应避免不必要的更新。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;·&amp;nbsp;数据一致性：在多实例共享数据时，确保数据的一致性和同步性，避免数据冲突。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;5、总结&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通过使用 @LocalStorageProp 装饰器，我们可以轻松地在鸿蒙系统的卡片组件之间共享和同步数据。这不仅简化了数据管理，还提高了应用的响应速度和用户体验。希望本文的技术分享能帮助大家更好地理解和应用 @LocalStorageProp 进行通讯。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;（转载自 51CTO，作者：魔眼天王）&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="图片 8.png" height="200" src="https://oscimg.oschina.net/oscnet//97bd40fc541c6161f85405d0257372fb.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368046</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368046</guid>
      <pubDate>Sun, 17 Aug 2025 07:33:00 GMT</pubDate>
      <author>作者: 开源科技</author>
    </item>
  </channel>
</rss>
