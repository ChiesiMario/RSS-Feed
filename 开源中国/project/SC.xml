<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Jun 2025 02:43:03 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Bun v1.2.16 发布，内存优化，兼容提升，体验增强</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;大家好，我是农村程序员，独立开发者，编程记者，前端之虎陈随易。&lt;/p&gt; 
&lt;p&gt;我会在这里分享代码技术，编程资讯，行业热点等内容，欢迎关注。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;个人网站 1️⃣：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchensuiyi.me" target="_blank"&gt;https://chensuiyi.me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;个人网站 2️⃣：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fme.yicode.tech" target="_blank"&gt;https://me.yicode.tech&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;技术群，搞钱群，闲聊群，自驾群，想入群的在我个人网站联系我。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;所有文章都是古法手打，经过了深度思考和总结，不含 AI 添加剂，请放心食用，一起灵魂交流。&lt;/p&gt; 
&lt;p&gt;一键三连 (&lt;code&gt;点赞&lt;/code&gt;、&lt;code&gt;评论&lt;/code&gt;、&lt;code&gt;转发&lt;/code&gt;)，可以给我提供曝光，带来一份早餐收入，谢谢大家~~&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;code&gt;VSCode v1.101&lt;/code&gt; 和 &lt;code&gt;Bun v1.2.16&lt;/code&gt; 的发布我看都没人其他人分享啊？看来我这个 &lt;code&gt;编程记者&lt;/code&gt; 得好好地坚守岗位才行。&lt;/p&gt; 
&lt;p&gt;我是 &lt;code&gt;All in Bun&lt;/code&gt; 玩家，截至现在不用 &lt;code&gt;Node.js&lt;/code&gt; 已经半年有余，一切感觉良好，有小伙伴测试了下性能，确实比 &lt;code&gt;Node.js&lt;/code&gt; 快了不少。&lt;/p&gt; 
&lt;p&gt;那么本次的 &lt;code&gt;v1.2.16&lt;/code&gt; 版本，同样带来一些性能的提升，内存的优化等，让我们来一起看看具体的更新内容吧。&lt;/p&gt; 
&lt;h2&gt;数据总览&lt;/h2&gt; 
&lt;p&gt;本次一共解决了 73 个 issue，新增了 119 个能成功通过的 Node.js 兼容性测试。&lt;/p&gt; 
&lt;h2&gt;在 Bun.serve 的 routes 中直接返回文件&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { serve, file } from 'bun';
server({
    routes: {
        '/package.json': file('./package.json'),
        '/README.md': new Response(file('./README.md'), {
            headers: {
                'X-Hi': 'hello'
            }
        })
    }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bun 在 &lt;code&gt;使用体验&lt;/code&gt; 和 &lt;code&gt;人性化&lt;/code&gt; 上面一直不断完善，这个功能可以非常方便地返回文件数据，不需要手动读取文件数据，也不需要管理文件的缓存，可以说是非常贴心了。&lt;/p&gt; 
&lt;h2&gt;新增 install.linkWorkspacePackages 配置&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[install]
linkWorkspacePackages = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这个选项可以控制工作区包的链接行为，这在 CI 环境中特别有用，因为从注册表安装预构建的包比从源代码构建更快。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;设置为 &lt;code&gt;false&lt;/code&gt; 时，Bun 从注册表安装工作区依赖，而不是本地链接。&lt;/li&gt; 
 &lt;li&gt;默认值为 &lt;code&gt;true&lt;/code&gt; 以保持向后兼容性。&lt;/li&gt; 
 &lt;li&gt;即使禁用此选项，&lt;code&gt;workspace:*&lt;/code&gt; 协议仍然会被遵守。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;bun outdated 支持 catelog 依赖&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;bun outdated&lt;/code&gt; 现在支持目录 (catalog) 依赖，便于在 monorepo 中检查更新。&lt;/p&gt; 
&lt;p&gt;示例配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// package.json
{
    "name": "my-monorepo",
    "workspaces": {
        "packages": ["packages/*"],
        "catalog": {
            "react": "^18.0.0",
            "react-dom": "^18.0.0",
            "typescript": "^4.0.0"
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// packages/app/package.json
{
    "name": "app",
    "dependencies": {
        "react": "catalog:",
        "react-dom": "catalog:",
        "typescript": "catalog:"
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;运行 &lt;code&gt;bun outdated&lt;/code&gt; 将显示目录依赖的可用更新。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun outdated -F app
|----------------------------------------|
| Package    | Current | Update | Latest |
|------------|---------|--------|--------|
| react      | 18.3.1  | 18.3.1 | 19.1.0 |
|------------|---------|--------|--------|
| react-dom  | 18.3.1  | 18.3.1 | 19.1.0 |
|------------|---------|--------|--------|
| typescript | 4.9.5   | 4.9.5  | 5.8.3  |
|----------------------------------------|
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;新增 Bun.hash.rapidhash 算法&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const hash = Bun.hash.rapidhash('hello world');
console.log(hash); // 6388527444622164108n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Rapidhash 在处理较大输入时表现出竞争力的性能，是非加密哈希需求的优秀选择。&lt;/p&gt; 
&lt;h2&gt;Node.js 兼容性改进&lt;/h2&gt; 
&lt;h3&gt;node:net 模块重大重构&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 43 个通过的 Node.js &lt;code&gt;node:net&lt;/code&gt; 测试&lt;/li&gt; 
 &lt;li&gt;支持 &lt;code&gt;server.maxConnections&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;改进了 socket 连接回调行为&lt;/li&gt; 
 &lt;li&gt;修复了 TLS 升级功能&lt;/li&gt; 
 &lt;li&gt;正确识别扩展 Socket 类的自定义方法&lt;/li&gt; 
 &lt;li&gt;修复了 &lt;code&gt;socket.localAddress()&lt;/code&gt; 和 &lt;code&gt;socket.remoteAddress()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;node:net&lt;/code&gt; 现在像 Node.js 一样调用 &lt;code&gt;dns.lookup&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;为 &lt;code&gt;net.Socket&lt;/code&gt; 和 &lt;code&gt;net.Server&lt;/code&gt; 提供 &lt;code&gt;net.BlockList&lt;/code&gt; 支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;vm.SyntheticModule 支持&lt;/h3&gt; 
&lt;p&gt;实现了 &lt;code&gt;vm.SyntheticModule&lt;/code&gt;，支持在 VM 上下文中创建和评估合成模块：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import vm from 'node:vm';

const module = new vm.SyntheticModule(['x'], function () {
    this.setExport('x', 42);
});

await module.link(() =&amp;gt; {});
await module.evaluate();

console.log(module.namespace.x); // 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTPParser 绑定&lt;/h3&gt; 
&lt;p&gt;添加了 &lt;code&gt;process.binding('http_parser')&lt;/code&gt;，提高了与 Node.js HTTP 内部机制的兼容性：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const { HTTPParser } = process.binding('http_parser');

const parser = new HTTPParser();
parser.initialize(HTTPParser.REQUEST, {});

const input = Buffer.from('GET / HTTP/1.1\\r\\nHost: example.com\\r\\n\\r\\n');

parser[HTTPParser.kOnHeaders] = function () {
    console.log('Headers!');
};

parser.execute(input);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;内存泄漏修复&lt;/h2&gt; 
&lt;p&gt;本版本修复了几个内存泄漏问题：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;N-API handle scopes&lt;/strong&gt;：修复了 &lt;code&gt;NapiHandleScopeImpl&lt;/code&gt; 中的罕见竞态条件和内存泄漏。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bun.spawn stdio&lt;/strong&gt;：修复了 &lt;code&gt;Bun.spawn&lt;/code&gt; 管道 stdio 未被读取时的内存泄漏。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;其他错误修复&lt;/h2&gt; 
&lt;h3&gt;运行时修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 &lt;code&gt;node:net&lt;/code&gt; 处理缓冲字符串写入时的 &lt;code&gt;bytesWritten&lt;/code&gt; 计算。&lt;/li&gt; 
 &lt;li&gt;修复了 macOS 上 process.stdin 缓冲问题。&lt;/li&gt; 
 &lt;li&gt;修复了循环中可能的退出信号挂起。&lt;/li&gt; 
 &lt;li&gt;修复了某些情况下 &lt;code&gt;node:http&lt;/code&gt; 发送重复 Transfer-Encoding 头的问题。&lt;/li&gt; 
 &lt;li&gt;修复了 SharedArrayBuffer 传输时崩溃的问题。&lt;/li&gt; 
 &lt;li&gt;修复了在正确初始化前访问 cookies 导致的崩溃。&lt;/li&gt; 
 &lt;li&gt;修复了中断 Next.js 开发服务器时的错误。&lt;/li&gt; 
 &lt;li&gt;修复了使用 Tailwind CSS 时 DevServer 崩溃的问题。&lt;/li&gt; 
 &lt;li&gt;修复了 TOML 解析器处理内联表后的表数组头的问题。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;JavaScript 解析器修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了畸形函数定义导致的崩溃&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CSS 解析器修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了嵌套计算导致的 CSS &lt;code&gt;calc()&lt;/code&gt; 表达式堆栈溢出&lt;/li&gt; 
 &lt;li&gt;修复了 CSS 转换函数中弧度错误转换为度数的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FFI 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 &lt;code&gt;bun:ffi&lt;/code&gt; 中 &lt;code&gt;new CString()&lt;/code&gt; 在未提供 byteLength 时忽略 byteOffset 参数的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;TLS 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进了 TLS 服务器身份验证&lt;/li&gt; 
 &lt;li&gt;正确处理 IP 范围规范化 (例如 「8.8.8.0/24」)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;HTTP/2 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 HTTP/2 流控制和协议处理问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Windows 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;崩溃处理程序现在使用 &lt;code&gt;abort()&lt;/code&gt; 而不是 &lt;code&gt;quick_exit(134)&lt;/code&gt; 以便更好地调试&lt;/li&gt; 
 &lt;li&gt;更新了 Windows 构建的 WebKit 和 libpas 依赖项&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;环境变量&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 &lt;code&gt;BUN_BE_BUN&lt;/code&gt; 环境变量，用于运行 Bun 二进制文件而不是单文件可执行文件的入口点&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CLI 改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进了包管理器命令的帮助文本格式和文档链接&lt;/li&gt; 
 &lt;li&gt;从 &lt;code&gt;bun pm&lt;/code&gt; 帮助中移除了 &lt;code&gt;audit&lt;/code&gt; (直接使用 &lt;code&gt;bun audit&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;TypeScript 类型&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 &lt;code&gt;RedisClient.prototype.del&lt;/code&gt; 接受一个或多个键作为参数&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;最后给大家分享一下我的主打产品，VSCode 编程神器 fnMap (函数地图)，欢迎大家体验。&lt;/p&gt; 
&lt;p&gt;安装地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourl.cn%2FzmnsPf" target="_blank"&gt;https://sourl.cn/zmnsPf&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//21eeac99c22bf045b93a707b25be0ea1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355258/bun-1-2-16-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355258/bun-1-2-16-released</guid>
      <pubDate>Sat, 10 May 2025 10:57:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>马建仓 AI 助手全流程升级：更聪明的研发搭子，更专业的协作助手</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;马建仓 AI 助手在近期迎来了一次面向真实研发流程的全链路进化，&lt;strong&gt;新增三十余项智能能力，全面覆盖需求、开发、测试、项目管理等关键研发环节&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;马建仓现在不仅能听懂业务语言，还能快速生成可落地的任务拆解，串联产品、研发、测试、项目管理等多个角色，是你团队里真正能打的 AI 研发搭子。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/172937_JNJ0_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;本次更新能力覆盖项目管理、需求管理、开发与测试、知识沉淀五大核心场景，&lt;strong&gt;不同场景中的马建仓 AI 助手都会根据具体场景推荐对应的对话选项&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;马建仓 AI 助手全流程使用实录&lt;/h2&gt; 
&lt;p&gt;以下为三个典型流程展示马建仓 AI 助手如何深度参与每一个关键节点：&lt;/p&gt; 
&lt;h3&gt;从需求到提交 PR&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;产品经理新建需求后，马建仓 AI 助手识别到该页面为「新建需求」，只能推荐「帮我写需求」功能，快速形成结构化文档。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1231" src="https://static.oschina.net/uploads/space/2025/0613/172956_bJGY_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;随后通过「预估工时」，「谁来做更合适」智能排期与分配任务。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="814" src="https://static.oschina.net/uploads/space/2025/0613/173007_898b_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173020_DwJm_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;研发/UI/测试通过「这个任务要做什么」「需求评论区在说什么」快速理解背景。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173045_96bV_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;完成任务后提交 PR，使用 AI 自动生成「PR 标题/描述」。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173058_nNzf_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;测试缺陷到代码合并&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;测试阶段发现问题，通过「帮我写缺陷」生成标准缺陷记录。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173111_s11Y_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;研发收到后，用「缺陷是什么意思」、「可能原因是什么」快速定位问题。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173126_1PQd_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修改后提交 PR，负责人可用「解读这个 PR 做了什么」「是否存在优化项」辅助代码审查，最终合并。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173138_HPUH_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;项目排期与知识协作&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目管理过程中可用「项目排期可能有什么风险」「哪个人比较空闲」「当前迭代有什么风险」优化排期与资源配置。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173208_SNxX_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;面对文档与代码，AI 可「总结内容」「分析问题」「识别使用的技术栈」，沉淀可用知识资产。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173223_uO2L_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;三个典型流程中使用到的能力也仅仅是本次三十余项能力更新的一小部分。通过本次全流程升级，&lt;strong&gt;马建仓 AI 助手真正实现了角色全覆盖、任务全覆盖、流程全闭环&lt;/strong&gt;，让 AI 参与到每一位成员、每一个任务、每一个节点的日常工作中，成为所有团队成员的最佳拍档。&lt;/p&gt; 
&lt;h2&gt;免费领 1000 次调用额度&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/173239_QYh6_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;现在开通马建仓 AI 助手，还可&lt;strong&gt;免费领取 1000 次免费调用额度&lt;/strong&gt;！&lt;/p&gt; 
&lt;p&gt;欢迎前往 Gitee 企业版，体验马建仓 AI 助手为你带来的全流程效率超进化吧！&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0411/120710_Spld_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355243</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355243</guid>
      <pubDate>Sat, 10 May 2025 09:32:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>OpenZFS 2.2.8 发布，支持更新版本的 Linux 内核</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;在 OpenZFS 2.3 系列&lt;a href="https://www.oschina.net/news/338141/openzfs-2-3-1"&gt;发布&lt;/a&gt;稳定版更新几个月后，该团队为仍然依赖 OpenZFS 2.2 系列的用户推出了新的稳定版本 2.2.8。&lt;/p&gt; 
&lt;p&gt;OpenZFS 2.2.8 支持 Linux 4.18 至 Linux 6.15 内核，比 OpenZFS 2.2.7 之前的 Linux 6.12 上限有所提升。FreeBSD 13.3 及更新版本也继续得到支持。&lt;/p&gt; 
&lt;p&gt;OpenZFS 2.2.8 还带来了测试套件的更新，例如添加了 AlmaLinux 10，各种持续集成（CI）更新，以及其他各种错误修复。&lt;/p&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenzfs%2Fzfs%2Freleases%2Ftag%2Fzfs-2.2.8" target="_blank"&gt;https://github.com/openzfs/zfs/releases/tag/zfs-2.2.8&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355205/openzfs-2-2-8</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355205/openzfs-2-2-8</guid>
      <pubDate>Sat, 10 May 2025 07:21:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Rocky Linux 10.0 正式 GA</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;我们很高兴地宣布&amp;nbsp;&lt;strong&gt;Rocky Linux 10&lt;/strong&gt;&amp;nbsp;正式发布。新版安装镜像、容器、云镜像和 Live 镜像现已可在 &lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frockylinux.org%2Fzh-CN%2Fdownload" target="_blank"&gt;Rocky Linux 下载页面&lt;/a&gt;&lt;/u&gt; 获取。关于此版本的重要信息、已知问题与详细更改，请参考 Rocky Linux 文档，中发布的，发行说明。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-511112743f319eede3302bf75800acde6e1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;重要公告&lt;/h1&gt; 
&lt;h2&gt;支持的微架构级别&lt;/h2&gt; 
&lt;p&gt;Rocky Linux 10 最重大变化是移除了对 x86-64-v2 架构的支持。现在仅支持 x86-64-v3 的 AMD 和 Intel 64 位架构。&lt;/p&gt; 
&lt;p&gt;Rocky Linux 10 支持以下处理器架构：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;64-bit AMD/Intel x86-64-v3 (x86_64)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;64-bit RISC-V (riscv64)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;64-bit ARMv8.0-A (aarch64)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IBM POWER, little endian (ppc64le)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IBM z (s390x)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：所有 32 位软件包已从 Rocky Linux 10 移除。这意味着 32 位应用程序将无法在此版本上运行。请使用包含 32 位依赖的 64 位库或容器。&lt;/p&gt; 
&lt;h2&gt;安装程序&lt;/h2&gt; 
&lt;p&gt;用户默认将拥有管理员权限，除非您取消该选项。&lt;br&gt; 图形远程访问默认采用远程桌面协议（RDP），取代了原有的 VNC。&lt;/p&gt; 
&lt;h2&gt;DHCP 客户端与服务器&lt;/h2&gt; 
&lt;p&gt;RL 10 的 DHCP 客户端作为 NetworkManager 的内部子系统实现。传统的 dhcp-client 软件包已不再获得上游支持并被移除。&lt;br&gt; ISC DHCP 服务器上游已生命周期结束，在 RL 10 中被其继任者 Kea DHCP 所取代。&lt;/p&gt; 
&lt;h2&gt;桌面环境&lt;/h2&gt; 
&lt;p&gt;RL 10 中，Wayland 取代了 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FX.Org" target="_blank"&gt;X.Org&lt;/a&gt; Server。Xwayland 可支持尚未移植到 Wayland 的大部分 X11 客户端。本次还有部分桌面应用及组件也在 RL 10 中进行了替换。&lt;/p&gt; 
&lt;h1&gt;亮点功能&lt;/h1&gt; 
&lt;h2&gt;主要新特性和变化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;动态编程语言、Web 与数据库服务器&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;PHP 8.3&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Python 3.12&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;nginx 1.26&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;PostgreSQL 16.8&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;MySQL 8.4&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Valkey 8.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;MariaDB 10.11&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;性能工具与调试器&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;GDB 14.2&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Valgrind 3.23.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;SystemTap 5.1&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Dyninst 12.3.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;elfutils 0.192&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;libabigail 2.6&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;性能监控工具&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Performance Co-pilot 6.3.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Grafana 10.2.6&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编译器工具集&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;LLVM Toolset 19.1.7&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Rust Toolset 1.84.1&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Go Toolset 1.23&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RISC-V 架构支持&lt;/h2&gt; 
&lt;p&gt;Rocky Linux 10 引入了对 RISC-V 架构的支持，进一步拓宽了 Rocky Linux 的可用硬件平台。这是 Rocky Linux 变得更加多元与普惠的重要一步。&lt;br&gt; 更多关于本次里程碑及 Rocky Linux 10 的 RISC-V 支持，请见此链接。&lt;br&gt; 如果您有兴趣让 RISC-V 硬件运行 Rocky Linux，欢迎加入 Rocky Linux Mattermost 的 ~SIG/AltArch &amp;nbsp;频道。&lt;/p&gt; 
&lt;h1&gt;测试&lt;/h1&gt; 
&lt;p&gt;每一个 Rocky Linux 发行版都经过严格的准确性和稳定性测试，Rocky Linux 10 也不例外。测试流程涵盖了多种环境与配置下的手动和自动检查。我们在正式开放下载前，对本次发布进行了为期两周的验证。测试成果、讨论与发布检查表详见 Rocky Release (v10) Playbook。&lt;br&gt; 如想参与未来发行版的测试，请加入 Rocky Linux Mattermost 的 ~Testing 频道。我们期待您的加入！&lt;/p&gt; 
&lt;h1&gt;升级与转换流程&lt;/h1&gt; 
&lt;p&gt;Rocky Linux 不支持各大主版本之间的直接升级。若需从 8.x 或 9.x 迁移到 Rocky Linux 10，建议全新安装操作系统。&lt;/p&gt; 
&lt;h1&gt;已知问题&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;SELinux 与已安装 passt 主机上的问题&lt;/strong&gt;&amp;nbsp;如果在安装了&amp;nbsp;&lt;code&gt;passt&lt;/code&gt;&amp;nbsp;后端的工作站、服务器或虚拟主机上启用了 SELinux，接口将无法启动。更多信息请参见，相关上游 Issue。&lt;/p&gt; 
&lt;h1&gt;版本工程更新&lt;/h1&gt; 
&lt;p&gt;Rocky Linux 10 带来一项重要变化：构建不再基于我们的 Peridot 构建系统，而是采用&amp;nbsp;&lt;strong&gt;Koji&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;原因如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Peridot Two 尚未准备就绪（我们也接受这一点）。&lt;/strong&gt;&amp;nbsp;在 Rocky Linux 早期，我们就曾意识到，在主要版本发布期间对未完成的系统进行内部测试风险高且效率低下。这一次，我们将构建得更智能。Peridot Two 将在 gRPC 后端之上，对 Koji 的 XML-RPC 接口进行简洁、现代化的重新实现——一旦准备就绪，现有 Koji 用户即可开箱即用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;IMA 签名优先级极高。&lt;/strong&gt;&amp;nbsp;RHEL 推出的核心特性之一——我们也打算支持的是&amp;nbsp;&lt;strong&gt;IMA（完整性度量架构）&lt;/strong&gt;。它已集成至 Rocky Linux 9 内核中，通过专用签名 CA 提供内核级文件验证。要正确实现此功能需精确集成，而 Keykeeper（Peridot 的签名工具）当前尚不支持。因此，当前 Koji 能满足我们对这一需求的控制。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;兼容性与平滑迁移。&lt;/strong&gt;&amp;nbsp;现在用 Koji 构建 Rocky 10，为后续顺利迁移到 Peridot Two 打下基础，它届时可无缝导入 Koji 实例的构建与元数据。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;总体而言，这一决策反映了我们对长期可维护性、社区透明度和安全、生产级基础设施的承诺。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;转载自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F93KEfxV8THxrHlARHLJq_g" target="_blank"&gt;https://mp.weixin.qq.com/s/93KEfxV8THxrHlARHLJq_g&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355204/rocky-linux-10-0-ga-release</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355204/rocky-linux-10-0-ga-release</guid>
      <pubDate>Sat, 10 May 2025 07:15:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Spring Framework 7.0.0-M6 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Spring Framework M6 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F06%2F12%2Fspring-framework-7-0-0-M6-available-now" target="_blank"&gt;发布&lt;/a&gt;，此版本在&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F01%2F23%2Fspring-framework-7-0-0-M1-available-now" target="_blank"&gt;7.0.0-M1、7.0.0&lt;/a&gt;&amp;nbsp;-&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F02%2F13%2Fspring-framework-7-0-0-M2-available-now" target="_blank"&gt;M2、7.0.0&lt;/a&gt;&amp;nbsp;-&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F03%2F13%2Fspring-framework-7-0-0-M3-available-now" target="_blank"&gt;M3、7.0.0&lt;/a&gt;&amp;nbsp;-&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F04%2F17%2Fspring-framework-7-0-0-M4-available-now" target="_blank"&gt;M4&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F05%2F15%2Fspring-framework-7-0-0-M5-available-now" target="_blank"&gt;7.0.0-M5&lt;/a&gt;&amp;nbsp;的基础上提供了新功能和一些改进内容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;「&lt;span style="color:#000000"&gt;我们对之前里程碑中提供的功能进行了大量改进，但我们也有一个想要分享的新功能。&lt;/span&gt;」&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Retry support in Spring Core&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;Spring 团队表示，其已经致力于&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-retry" target="_blank"&gt;Spring Retry 项目&lt;/a&gt;相当长的一段时间。他们决定精简一些不必要的功能，重新审视部分 API，并将最终成果合并到 Spring Framework 的「spring-core」模块中。目前，新的 Retry 支持已包含在&lt;code&gt;org.springframework.core.retry&lt;/code&gt;软件包中，官方将很快更新参考文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;与此同时，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-batch%2Fissues%2F4868" target="_blank"&gt;Spring Batch 等 Spring 项目已开始使用它来代替 spring-retry&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;更多详情可查看&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Freleases%2Ftag%2Fv7.0.0-M6" target="_blank"&gt;changelog&lt;/a&gt;&lt;span style="color:#000000"&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355177/spring-framework-7-0-0-m6</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355177/spring-framework-7-0-0-m6</guid>
      <pubDate>Sat, 10 May 2025 06:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Feat v1.1.0 已经发布，高性能 Java Web 服务框架</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Feat v1.1.0 已经发布，高性能 Java Web 服务框架&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h3&gt;版本特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Feat Core：&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;限制单进程内 Feat Banner 最多输出一次。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/strong&gt; 支持定义相同 URL、不同 HTTP Method 的接口服务，提升 API 设计的灵活性。&lt;/li&gt; 
   &lt;li&gt;RunLogger 自动感应日志级别变化，支持动态调整日志级别。&lt;/li&gt; 
   &lt;li&gt;日志级别环境变量由 &lt;code&gt;smarthttp.log.level&lt;/code&gt; 调整为 &lt;code&gt;feat.log.level&lt;/code&gt; 。&lt;/li&gt; 
   &lt;li&gt;将 DateUtils、GzipUtils、HttpUtils、NumberUtils、StringUtils、CollectionUtils、Constant、SHA1、WebSocketUtil 等工具类能力统一汇集至 &lt;code&gt;FeatUtils&lt;/code&gt; 中，简化使用成本。&lt;/li&gt; 
   &lt;li&gt;ByteTree 不再支持匹配期间动态 addNode，保障内存使用稳定性。&lt;/li&gt; 
   &lt;li&gt;升级 smart-socket 至 1.5.69。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feat Cloud&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新增 &lt;code&gt;feat.yaml&lt;/code&gt;/&lt;code&gt;feat.yml&lt;/code&gt; 配置文件解析，并通过&lt;code&gt;@Value&lt;/code&gt;注入 Bean 或 Controller 中。(类似 Spring 的 &lt;code&gt;application.yaml&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;支持运行时动态调整指定 &lt;code&gt;loggerName&lt;/code&gt; 的日志级别，便于灵活监控与调试。&lt;/li&gt; 
   &lt;li&gt;ApplicationContext 新增 getOptions 方法用于获 Feat Cloud 配置。&lt;/li&gt; 
   &lt;li&gt;Annotation Processor 重构，简化代码复杂度，提升扩展性。&lt;/li&gt; 
   &lt;li&gt;编译器自动将非统配 URI 注册至 ByteTree，提升解析性能。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;升级指南&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;pom 升级&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;tech.smartboot.feat: - feat-core：&lt;code&gt;1.0.0&lt;/code&gt; =&amp;gt; &lt;code&gt;1.1.0&lt;/code&gt; - feat-cloud-starter：&lt;code&gt;1.0.0&lt;/code&gt; =&amp;gt; &lt;code&gt;1.1.0&lt;/code&gt; - feat-ai：&lt;code&gt;1.0.0&lt;/code&gt; =&amp;gt; &lt;code&gt;1.1.0&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;代码升级&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;参见下述&lt;strong&gt;兼容性说明&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;兼容性说明&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CloudOptions@addExternalBean 方法重命名为 registerBean，用于注册外部 Bean。&lt;/li&gt; 
 &lt;li&gt;已废弃：DateUtils、GzipUtils、HttpUtils、NumberUtils、StringUtils、CollectionUtils、Constant、SHA1、WebSocketUtil&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/smartboot/feat/releases/v1.1.0"&gt;https://gitee.com/smartboot/feat/releases/v1.1.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355176/feat-1-1-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355176/feat-1-1-0-released</guid>
      <pubDate>Sat, 10 May 2025 05:58:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Go 1.25 新功能</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h2&gt;&lt;strong&gt;&lt;span&gt;Go 1.25 概览&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go 1.25 标志着 Go 语言向前迈出了重要一步，其核心在于提升性能、优化开发者体验以及增强云原生就绪能力。此次发布在工具链、运行时、编译器和标准库等多个方面引入了一系列增强功能，旨在使 Go 应用程序更快、更高效，并更易于开发和部署，尤其是在容器化环境中。它还凸显了对安全性的承诺以及语言规范的持续完善。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;本次发布围绕以下关键主题展开：性能优化、增强型开发者工具、云原生就绪、安全强化以及语言成熟度。以下表格概述了 Go1.25 的主要亮点，为繁忙的专业人士提供了快速参考，以便立即了解最关键的变更。&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; visibility:visible; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;类别&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;特性/变更&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;简要描述&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;影响/益处&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;性能优化&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;实验性垃圾回收器 (greenteagc)&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;标记和扫描小对象性能提升，预计减少 0-40% GC 开销&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;降低运营成本，提升应用吞吐量和降低延迟&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;工具增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go vet&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;新分析器&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升代码质量，帮助发现常见并发和网络地址构建错误&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;并发/测试&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;包&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提供测试并发代码的支持，包括伪造时钟和 goroutine 等待机制&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;编写更可靠、确定性的并发应用测试&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;云原生&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;容器感知&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;在 Linux 上自动根据 cgroup CPU 限制调整&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并动态更新&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;优化容器资源利用，减少 CPU 节流，提升云环境性能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全强化&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;TLS SHA-1 禁用&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;TLS.2 握手默认禁用 SHA-1 签名算法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强默认安全态势，符合行业最佳实践&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;语言/运行时精炼&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;DWARF v5 调试信息&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;编译器和链接器生成 DWARF v5 调试信息&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;减少调试信息大小，缩短大型二进制文件的链接时间&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;平台&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;macOS2+ 要求&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Go.25 要求 macOS2 Monterey 或更高版本&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Darwin 用户需要升级操作系统才能使用 Go.25&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;Go 1.25 简介&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 是 Go 编程语言即将发布的版本，预计于 2025 年 8 月推出。此次发布延续了 Go 的演进，在先前版本的基础上，着重于核心组件的精炼和开发者体验的提升。它表明 Go 语言已趋于成熟，并积极应对当代软件开发中的挑战，尤其是在性能敏感和云原生领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;本次发布展现了一种平衡的方法，既引入了重要的新功能（如实验性垃圾回收器和 JSON v2），又完善了现有功能（工具、运行时优化、标准库改进）。明确呼吁社区对实验性功能提供反馈，这突显了 Go 协作的开发模式。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;语言变更&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 并没有对 Go 语言本身进行任何会影响现有 Go 程序的更改。然而，语言规范中「核心类型」的概念已被&lt;/span&gt;&lt;strong&gt;&lt;span&gt;移除&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;这一变化虽然不会影响现有的 Go 程序，但它反映了对语言规范本身的微妙而重要的完善。这表明 Go 团队持续致力于澄清和简化 Go 的正式定义，使其对语言实现者和高级用户来说更加精确和不含糊。语言规范对于编译器之间的一致性以及对语言的精确理解至关重要。移除一个概念并用更清晰的散文取代它，暗示了之前的定义可能存在模糊、混淆或不够精确的问题。这关乎于「精炼语言的定义」，而非其在实践中的语法或语义。这种做法表明，即使是基础文档也在不断改进，以提高清晰度和严谨性。这确保了语言在演进过程中保持良好定义，避免了因不够精确的规范而可能出现的未来歧义或不一致性。这最终使编译器开发者、语言研究人员以及任何需要深入理解 Go 正式结构的人受益。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;工具增强&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 在其工具链中引入了多项显著增强，旨在提升开发者效率、代码质量和项目管理能力。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Go 命令更新&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令获得了多项新功能和行为调整：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go build -asan&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;内存泄漏检测：&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span&gt;go build -asan&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项现在默认在程序退出时执行内存泄漏检测。如果 C 分配的内存未被释放且未被其他 C 或 Go 分配的内存引用，它将报告错误。此功能可以通过设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;ASAN_OPTIONS=detect_leaks=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;来禁用。这对调试 Go 程序中 C/C++ 互操作性问题（特别是使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;cgo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的程序）来说是一个重要的增强。C 语言分配的内存泄漏通常难以追踪。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;减少预构建工具二进制文件：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;Go 发行版将包含更少的预构建工具二进制文件。核心工具链二进制文件（编译器、链接器）仍将包含在内，但其他工具将由&lt;/span&gt;&lt;code&gt;&lt;span&gt;go tool&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;在需要时构建和运行。此项更改旨在减小 Go 发行版的大小，可能导致更快的下载速度和更小的安装占用空间。它将不常用工具的构建负担转移到按需进行。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;指令：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;新增的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;指令允许指定&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令在匹配&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;all&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;./...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等包模式时忽略的目录。这些被忽略的文件仍将包含在模块 zip 文件中。这提供了对&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令如何解释包模式的更细粒度控制，在大型仓库或单体仓库中尤其有用，因为某些子目录可能包含非 Go 代码或不打算用于通用包模式匹配的实验性模块。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;新的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项将为请求的对象启动一个文档服务器并在浏览器中打开。这极大地提升了开发者的体验，使得无需离开终端即可更快、更方便地浏览本地 Go 文档。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go version -m -json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;此选项将打印 Go 二进制文件中嵌入的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;runtime/debug.BuildInfo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;结构的 JSON 编码。它提供了一种以编程方式从已编译二进制文件中提取构建信息（如模块版本、Go 版本、构建标志）的方法，这对于自动化、CI/CD 流水线以及审计已部署应用程序而言具有不可估量的价值。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;子目录模块根支持：&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令现在支持使用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;meta name="go-import" content="root-path vcs repo-url subdir"&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;语法解析模块路径时，将仓库的子目录作为模块根。这增强了 Go 模块托管的灵活性，允许单个仓库包含多个模块，或模块位于大型项目的特定子目录中，这与常见的单体仓库模式相符。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包模式：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;新的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包模式匹配工作模块中的所有包（模块模式下的单个工作模块，或工作区模式下的工作区模块）。这简化了跨 Go 工作区中所有模块的操作，简化了诸如&lt;/span&gt;&lt;code&gt;&lt;span&gt;go test./work...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go build./work...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等命令。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;不再添加工具链行：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;当更新&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;文件中的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;行时，&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令将不再添加指定其当前版本的工具链行。这减少了&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;文件中的噪音和不必要的修改，简化了版本控制，并可能避免在升级 Go 版本时出现虚假差异。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;下表总结了 Go1.25 中引入的新&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令选项及其典型用例：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;选项&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;用例/益处&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go build -asan&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;程序退出时默认执行内存泄漏检测&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;调试 CGo 内存泄漏，确保 C 分配内存的正确释放&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;允许指定&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令在匹配包模式时忽略的目录&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;管理大型单体仓库或包含非 Go 代码的复杂项目结构&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;启动请求对象的文档服务器并在浏览器中打开&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;快速本地文档查找，提升开发效率&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go version -m -json&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;以 JSON 格式打印 Go 二进制文件中嵌入的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;runtime/debug.BuildInfo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;结构&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;自动化构建信息提取，方便 CI/CD 流水线和部署审计&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;包模式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;匹配工作区中所有模块的包&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;简化工作区操作，如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go test./work...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go build./work...&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Vet 分析器&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;go vet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令包含了两个新的分析器，进一步提升了代码质量检查能力：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;报告对&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;sync.WaitGroup.Add&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的错误调用位置。&lt;/span&gt;&lt;code&gt;&lt;span&gt;sync.WaitGroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;是常见的并发 bug 来源，如果&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Add&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;在&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Wait&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;之后或在可能在&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Wait&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;之后启动的 goroutine 中调用，就可能导致微妙的错误。此分析器有助于及早捕获此类错误。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;报告使用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;fmt.Sprintf("%s:%d", host, port)&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;构造&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;net.Dial&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;地址（不适用于 IPv6）的情况，并建议改用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;net.JoinHostPort&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。此分析器推广网络地址构造的最佳实践，确保 IPv6 兼容性并防止处理主机和端口组合时常见的错误。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;go vet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令新功能的持续增加，例如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;模式，表明 Go 团队对开发者生产力、代码质量以及支持日益复杂的项目结构（如单体仓库、微服务）的战略性投入。这些新工具直接为开发者提供了更强大的构建、调试和管理 Go 项目的能力。例如，&lt;/span&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器直接针对常见的陷阱和最佳实践，从而带来更健壮和安全的应用程序。这反映了一种主动预防常见错误的方法。同时，&lt;/span&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go version -m -json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;简化了日常任务，减少了摩擦并提高了效率。此外，&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、子目录模块根和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;模式明确解决了大型复杂项目和单体仓库中面临的挑战。这表明 Go 作为一种适用于企业级开发的语言正在走向成熟。这些发展趋势表明，Go 不仅在语言功能上取得进展，还在提供一个更全面、更具指导性且高度集成的开发环境，引导开发者采用惯用且健壮的解决方案，尤其是在项目规模和复杂性增长时。这有助于减轻开发者的认知负担，并提高整个生态系统的整体代码质量。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;运行时改进&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 在运行时方面进行了多项关键改进，旨在优化资源管理、提升性能以及增强调试能力。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;容器感知&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的默认行为发生了变化。在 Linux 上，运行时现在会考虑包含进程的 cgroup 的 CPU 带宽限制。如果此限制低于逻辑 CPU 数量，&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;将默认为较低的限制。这与 Kubernetes 的「CPU 限制」选项相对应，而非「CPU 请求」。在所有操作系统上，如果逻辑 CPU 数量或 cgroup CPU 带宽限制发生变化，运行时将定期更新&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。如果手动设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或通过&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GODEBUG&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;设置&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;containermaxprocs=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;updatemaxprocs=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;明确禁用，这些行为将自动禁用。运行时将为 cgroup 文件保持缓存的文件描述符，以支持读取更新的限制。这是在容器化环境（尤其是 Kubernetes）中运行 Go 应用程序的关键增强。它防止 Go 运行时在超出分配的 CPU 资源的情况下过度调度 goroutine，这可能导致 CPU 节流和性能下降。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新的实验性垃圾回收器 (&lt;/span&gt;&lt;code&gt;&lt;span&gt;greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;)&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go.25 引入了一个实验性垃圾回收器，其设计目标是通过更好的局部性和 CPU 可伸缩性来提高小对象标记和扫描的性能。预计它将使实际程序中的垃圾回收开销减少 0-40%。通过在构建时设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;可以启用此实验性 GC。鼓励用户尝试并就 GitHub 问题提供反馈。这代表了 Go 应用程序潜在的显著性能飞跃，特别是对于高对象分配率的应用程序。其「实验性」标签表明在广泛采用之前需要谨慎推出，并寻求社区验证。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;未处理的 Panic 输出变更&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;对于已恢复并重新 panic 的未处理 panic，其消息将不再重复 panic 值文本。例如，&lt;/span&gt;&lt;code&gt;&lt;span&gt;panic: PANIC [recovered]\n panic: PANIC&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;现在将打印&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;panic: PANIC [recovered, repanicked]&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。这是一个虽小但有用的调试改进，使 panic 消息更清晰，减少冗余，特别是在复杂的错误恢复场景中。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Linux 上的 VMA 名称&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;在支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CONFIG_ANON_VMA_NAME&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;内核的 Linux 系统上，Go 运行时将使用上下文（例如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;[anon: Go: heap]&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）注释匿名内存映射。此功能可以通过&lt;/span&gt;&lt;code&gt;&lt;span&gt;GODEBUG=decoratemappings=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;禁用。此项功能通过在&lt;/span&gt;&lt;code&gt;&lt;span&gt;pmap&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等工具中提供更多上下文，增强了 Linux 上的调试和分析能力，从而更容易理解 Go 如何管理内存。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;运行时方面的变化，特别是容器感知的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和实验性的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，凸显了 Go 对优化现代部署环境和突破其性能极限的战略重点。这表明 Go 积极响应了云原生计算和高性能应用程序的需求。&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的变化直接承认了 Go 在 Kubernetes 等容器编排平台中的广泛使用。此前，Go 应用程序在受限容器中可能会过度利用 CPU，导致性能下降。这一变化「自动化」了最佳资源利用，减少了开发者或平台工程师手动调整&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的需求。这是 Go 应用程序向「Kubernetes 原生」迈出的重要一步。实验性垃圾回收器则展示了 Go 对其核心性能特征的持续投入。垃圾回收是影响延迟和吞吐量的关键组件。将开销减少 0-40% 是一个显著的进步，可能使 Go 对延迟敏感或高吞吐量的工作负载更具吸引力。其「实验性」性质以及呼吁反馈的做法，表明 Go 团队在引入可能具有颠覆性但极具益处的更改时采取了务实的方法，并依赖社区验证。这些运行时改进共同使 Go 在构建现代云基础设施中高性能、可伸缩和成本效益高的服务方面更具竞争力。它们解决了实际操作挑战，并为未来的性能提升铺平了道路。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;编译器创新&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 的编译器引入了多项改进，旨在提升调试体验、强制代码正确性以及优化运行时性能。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;DWARF 版本 5 调试信息&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器和链接器现在使用 DWARF 版本 5 生成调试信息。这减少了调试信息的空间占用并缩短了链接时间，尤其对于大型二进制文件而言。通过设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=nodwarf5&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;可以禁用 DWARF 5 的生成。这对开发者而言是一项技术性但影响深远的改进，特别是对于处理大型 Go 项目或调试复杂问题的开发者，它能带来更快的构建时间和更小的可调试二进制文件。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Nil 指针检查修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器修复确保了 nil 指针检查能够及时执行。以前能够成功运行但却在检查错误之前使用了&lt;/span&gt;&lt;code&gt;&lt;span&gt;os.Open&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;结果的程序，现在将会 panic。解决方案是在生成错误语句后立即检查非 nil 错误。这对于「编写不正确」的 Go 代码来说是一个破坏性变更。它强制执行了 Go 惯用的错误处理模式，通过防止因未处理错误而导致的静默失败或意外行为，使应用程序更加健壮。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;切片的栈分配&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器现在可以在更多情况下为切片在栈上分配底层存储，从而提高性能。这可能会放大不正确使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;所带来的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;bisect tool&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;配合&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;-compile=variablemake&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;可以帮助追踪这些问题，并且可以通过&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;-gcflags=all=-d=variablemakehash=n&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;关闭新的栈分配。这是一项性能优化，它利用栈分配来处理瞬时数据，从而减少堆压力和 GC 开销。然而，它也强调了不当使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;所固有的危险。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器方面的变化，特别是 nil 指针检查修复和切片栈分配的扩展，表明 Go 团队同时致力于性能优化和代码正确性/安全性，即使这意味着为非惯用代码引入潜在的破坏性变更。nil 指针修复明确表明 Go 优先考虑正确和安全的代码，而不是对「有缺陷」代码的向后兼容性。它强化了立即进行错误检查的重要性，这是 Go 错误处理理念的基石。这最终会带来更可靠的应用程序。切片的栈分配是一项激进的优化。关于&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的警告至关重要；它强调了虽然 Go 追求性能，但它不会为了「安全」的 Go 代码而损害其内存安全保证。它隐式地不鼓励随意使用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并提供了调试工具以解决必须使用它的情况。这些变化表明 Go 正在通过强化其核心和优化其执行模型而走向成熟。这些变化表明 Go 语言在自信地演进，愿意为了长期稳定性和性能而强制执行更严格的正确性，即使这要求开发者调整其（可能存在缺陷的）现有实践。为栈分配问题提供调试工具也表明了在这些过渡期间支持开发者的承诺。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;链接器更新&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;链接器现在接受一个&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;-funcalign=N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令行选项，用于指定函数入口对齐。默认值是平台相关的，并且没有改变。这是一项低级优化，主要与特定性能关键场景或平台特定要求相关，允许对二进制文件布局进行微调。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;标准库新增与修改&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go.25 对标准库进行了广泛的更新，引入了新包、增强了现有功能并改进了安全性。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包提供了测试并发代码的支持。其核心功能包括&lt;/span&gt;&lt;code&gt;&lt;span&gt;Test&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数，它在一个独立的「气泡」中运行测试，并为&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;time&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包函数提供一个伪造的时钟。此外，&lt;/span&gt;&lt;code&gt;&lt;span&gt;Wait&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数会等待当前气泡中的所有 goroutine 阻塞。这是 Go 开发者的一项重大新增功能，解决了长期以来测试并发逻辑的挑战。伪造时钟和 goroutine 等待机制使得对时间敏感和并发操作进行确定性测试成为可能，从而显著提高了并发 Go 应用程序的质量和可靠性。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新的实验性&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 引入了一个实验性 JSON 实现，通过在构建时设置&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=jsonv2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;启用。它包含了&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;（&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的主要修订版）和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/jsontext&lt;/span&gt;&lt;/code&gt;&lt;span&gt;（更底层的 JSON 语法处理）。启用后，&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;将使用新的实现，其编组/解组行为保持不变，但错误文本可能有所改变。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;encoding/json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;还获得了配置编组器/解组器的新选项。新的实现提供了显著的性能改进，尤其是在解码方面。更多细节可在 github.com/go-json-experiment/jsonbench 仓库中找到。鼓励用户使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=jsonv2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;测试其程序以检测兼容性问题，并就提案问题提供反馈。这对于 Go 中的 JSON 处理来说可能是一项变革性的改变，有望带来显著的性能提升。其实验性性质允许社区在完全集成之前提供反馈，以确保广泛的兼容性。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;库的次要变更（按包分类）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;标准库的许多现有包也得到了更新和增强。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;下表总结了标准库中按包分类的主要变更：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;包&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;变更描述&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;变更类型&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;影响/益处&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;archive/tar&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;Writer.AddFS&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;支持符号链接&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;更好地处理文件系统中的符号链接&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;引入&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;MessageSigner&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;接口和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;SignMessage&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;统一签名接口，提升加密操作的灵活性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto/ecdsa&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增低级编码函数和方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;简化 ECDSA 密钥的低级操作，减少对&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;math/big&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的依赖&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto/tls&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;SHA-1 签名算法在 TLS.2 握手默认禁用；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;ConnectionState.CurveID&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全/增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升 TLS 安全性，提供更多连接状态信息&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto/x509&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;CreateCertificate&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;等函数接受&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;crypto.MessageSigner&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；&lt;/span&gt;&lt;code&gt;&lt;span&gt;SubjectKeyId&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;默认使用 SHA-256&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全/增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升证书创建的灵活性和安全性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/ast&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;部分函数和类型被弃用；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;PreorderStack&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;弃用/新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;现代化 AST 和解析器 API，提供更强大的语法树遍历能力&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/parser&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;ParseDir&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;函数被弃用&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;弃用&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;现代化解析器 API&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/token&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;FileSet.AddExistingFiles&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;方便向&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;FileSet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;添加现有&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;File&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/types&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;Var&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Var.Kind&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;LookupSelection&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升类型检查和变量分类能力&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;hash&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;XOF&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cloner&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;接口；所有&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Hash&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;实现均支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cloner&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能/增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;支持可扩展输出函数，方便哈希状态的复制&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;io/fs&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;ReadLinkFS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;接口&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;统一文件系统接口，支持符号链接读取&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;log/slog&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;GroupAttrs&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;创建组&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Attr&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；&lt;/span&gt;&lt;code&gt;&lt;span&gt;Record&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Source&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升结构化日志的灵活性和信息丰富度&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;net/http&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CrossOriginProtection&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;实现 CSRF 保护&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;利用现代浏览器 Fetch 元数据增强 CSRF 防护&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;os&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Windows 异步 I/O 支持；&lt;/span&gt;&lt;code&gt;&lt;span&gt;Root&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;类型新增多项文件系统操作方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升 Windows 文件 I/O 性能；增强文件系统操作的灵活性和一致性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;reflect&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;TypeAssert&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;减少类型断言时的内存分配，提升性能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;runtime&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;清理函数并发执行；&lt;/span&gt;&lt;code&gt;&lt;span&gt;SetDefaultGOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；&lt;/span&gt;&lt;code&gt;&lt;span&gt;GODEBUG=checkfinalizers=1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;诊断&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强/调试&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升清理效率；更方便地设置&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；增强终结器调试能力&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;runtime/trace&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;FlightRecorder&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;调试/诊断&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提供轻量级执行跟踪能力，方便捕获近期执行情况&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;sync&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;WaitGroup.Go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;简化 goroutine 的创建和计数管理&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;testing&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;T.Attr&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等方法；&lt;/span&gt;&lt;code&gt;&lt;span&gt;Output&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法；&lt;/span&gt;&lt;code&gt;&lt;span&gt;AllocsPerRun&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;并发测试时 panic&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强/行为变更&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升测试日志的可读性；提供更受控的测试输出；避免并发测试中的不确定性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;unicode&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CategoryAliases&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cn&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;LC&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;类别&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升 Unicode 字符分类的灵活性和完整性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;unique&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;更积极、高效、并行地回收 interned 值&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;性能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;减少内存膨胀，提升内存回收效率&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;标准库的广泛更新，特别是&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和实验性的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包，以及&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;crypto/tls&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;crypto/x509&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;中的安全强化，表明 Go 团队持续致力于为常见编程任务提供一流、经过实战检验的原语，同时积极解决性能瓶颈和安全漏洞。&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;直接回应了可靠测试并发代码的难题，而这正是 Go 中常见的错误来源。这表明 Go 致力于改善其核心并发模型的「开发者体验」。&lt;/span&gt;&lt;code&gt;&lt;span&gt;json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的实验性引入表明，即使是标准库中成熟且高度优化的部分，如果能够实现显著的性能提升，也可能进行基础性的重新架构。这显示了一种务实的持续优化方法。在 TLS.2 中禁用 SHA-1 是一项主动的安全措施，符合行业最佳实践。这确保了 Go 应用程序默认是安全的，推动整个生态系统采用更强的加密衞生。无数的次要更改（例如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;io/fs.ReadLinkFS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;os.Root&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法、&lt;/span&gt;&lt;code&gt;&lt;span&gt;sync.WaitGroup.Go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;reflect.TypeAssert&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）反映了持续完善 API、添加便利函数以及适应现代范式（如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;io/fs&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;用于文件系统抽象）的过程。这确保了标准库保持最新、符合人体工程学且全面。标准库仍然是 Go 吸引力的基石。这些更新强化了其作为构建各种应用程序的健壮、高性能和安全基础的作用，并明确关注满足开发者需求和适应不断变化的技术格局。&lt;/span&gt;&lt;code&gt;&lt;span&gt;json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的实验性也突显了 Go 开放和迭代的开发过程，邀请社区参与核心组件的塑造。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;端口和平台特定性&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 在平台支持方面进行了调整，以适应不断变化的操作系统和硬件生态系统。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Darwin&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: Go1.25 要求 macOS2 Monterey 或更高版本；对先前版本的支持已停止。这对使用旧版 macOS 的开发者来说是一个破坏性变更，需要升级操作系统才能使用 Go.25。这与 Apple 快速的操作系统更新周期保持一致。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: Go1.25 是最后一个包含 32 位 windows/arm 端口（&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOOS=windows GOARCH=arm&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）的版本，该端口将在 Go1.26 中移除。这标志着一个使用较少的端口被弃用并最终移除，从而使 Go 团队能够将资源集中在更广泛采用的平台上。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;RISC-V&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: linux/riscv64 端口现在支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;构建模式。&lt;/span&gt;&lt;code&gt;&lt;span&gt;GORISCV64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;环境变量接受&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;rva23u64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;来选择 RVA23U64 用户模式应用程序配置文件。这表明 RISC-V 架构的持续成熟和更广泛的支持，特别是在动态加载场景和特定应用程序配置文件方面。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;下表总结了 Go1.25 中与平台相关的变更和弃用：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;平台&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;变更&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;影响/含义&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Darwin&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Go1.25 要求 macOS2 Monterey 或更高版本&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;macOS 用户需要升级操作系统才能使用 Go1.25&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Go1.25 是最后一个包含 32 位 windows/arm 端口的版本，Go1.26 将移除&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;使用 32 位 Windows ARM 的开发者需规划迁移&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;RISC-V&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;linux/riscv64 端口支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;构建模式；&lt;/span&gt;&lt;code&gt;&lt;span&gt;GORISCV64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;rva23u64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;配置文件&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强 RISC-V 架构支持，特别是动态加载和特定应用配置文件&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;平台特定的变化反映了 Go 对支持不断发展的硬件和操作系统生态系统的务实方法：优先支持广泛采用和现代的平台，同时战略性地淘汰使用较少或遗留的平台，并积极投资于 RISC-V 等新兴架构。macOS 的要求是软件开发中的常见模式，与操作系统供应商的支持周期保持一致。放弃 32 位 Windows ARM 是一个战略决策，旨在将开发资源从维护一个利基平台中解放出来，从而能够专注于更具影响力的领域。这表明 Go 在平台支持方面采取了精益高效的方法。对 RISC-V 的持续投入，特别是添加&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;支持（动态链接），是一个重要的信号。RISC-V 是一种新兴架构，在各个领域（嵌入式、数据中心）的应用日益增多。Go 对其早期而强大的支持使该语言在未来的硬件趋势中处于有利地位。Go 的平台策略是动态且响应迅速的。它平衡了广泛兼容性的需求与将资源集中在主要和新兴平台上的效率。这确保了 Go 在最重要的计算环境中保持相关性和高性能，同时也就支持遗留或利用较少的平台做出了务实决策。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go&amp;nbsp;1.25 是一次全面的发布，显著提升了 Go 语言在性能、工具和运行时方面的能力。它巩固了 Go 作为一种健壮、高效且对开发者友好的语言的地位，尤其适用于现代云原生应用程序和高性能服务。此次发布展现了对持续改进、安全性和社区驱动演进的明确承诺。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;对于 Go 开发者，以下是建议：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;审查代码以应对 Nil 指针修复：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;立即检查&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;os.Open&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和类似返回错误的函数，确保正确的错误处理，以避免程序 panic。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;探索实验性功能：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;在非生产环境中积极测试&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=jsonv2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并提供反馈。这些功能可能在未来带来重大变革。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;利用新工具：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;将新的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令功能（&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;模式）和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;vet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器（&lt;/span&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）集成到开发工作流程中，以提高生产力并改善代码质量。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;适应平台变更：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;注意 macOS 版本要求以及 32 位 Windows ARM 即将弃用的情况。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;利用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;对于包含并发代码的项目，采用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;来编写更可靠和确定性的测试。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;遵循安全最佳实践：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;注意 TLS.2 中默认禁用 SHA-1，并确保您的应用程序遵循现代加密标准。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go&amp;nbsp;1.25 强化了 Go 语言在更高性能、增强开发者体验以及与云基础设施更深度集成方面的发展轨迹。对实验性功能和社区反馈的重视表明，Go 将在实际使用和性能需求的驱动下继续快速发展，同时保持其简洁和高效的核心原则。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style="color:rgba(99, 87, 83, 0.6)"&gt;&lt;span&gt;[1]&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;移除:&amp;nbsp;&lt;/span&gt;&lt;em&gt;&lt;span&gt;https://tip.golang.org/blog/coretypes&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355162/go-1-25</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355162/go-1-25</guid>
      <pubDate>Sat, 10 May 2025 03:51:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Openfire 5.0.0 beta 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Openfire 是一个使用广泛采用的即时消息开放协议 XMPP（也称为 Jabber）的 RTC（Real Time Collaboration，实时协作） 服务器，它非常易于设置和管理，提供良好的安全性和性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Openfire 5.0.0 beta 现已发布。此版本中解决了大约 125 个 bug。一些重要更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;已停止对 Java 11 的支持。现在最低要求是 Java 17&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;嵌入式 Web 服务器已获得重大升级&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;应用了各种与安全相关的更新，包括由独立安全审计导致的库更新和代码更改&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.igniterealtime.org%2Ft%2Fopenfire-5-0-0-beta-release%2F95525" target="_blank"&gt;查看官方公告&lt;/a&gt;。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.igniterealtime.org%2Fdownloads%2Fbeta.jsp" target="_blank"&gt;下载页面&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355161/openfire-5-0-0-beta</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355161/openfire-5-0-0-beta</guid>
      <pubDate>Sat, 10 May 2025 03:46:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Visual Studio Code 1.101 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Visual Studio Code 1.101 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101" target="_blank"&gt;发布&lt;/a&gt;，&lt;span style="background-color:#ffffff"&gt;此版本包含多项更新。具体更新内容如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;MCP&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;通过对提示、资源和采样的支持来扩展你的代理编码流程（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-support-for-prompts" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;访问需要身份验证的 MCP 服务器（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-support-for-auth" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;使用开发模式调试 MCP 服务器（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-development-mode" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;从扩展发布 MCP 服务器（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-extension-apis" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;通过将相关工具组合到一个工具集中来进行分组和管理（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_chat-tool-sets" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="257" src="https://oscimg.oschina.net/oscnet/up-239806a51864e70636e2bf840d8545b42fe.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Source Control&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在 Source Control Graph 视图中查看文件（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_source-control-history-item-details" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;在 VS Code 内部分配和跟踪 GitHub Copilot Coding Agent 的工作（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_copilot-coding-agent-integration" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101" target="_blank"&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355157/vs-code-1-101-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355157/vs-code-1-101-released</guid>
      <pubDate>Sat, 10 May 2025 03:14:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>go-carbon v2.6.8 正式版发布，官网同步上线</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;carbon 是&lt;span style="background-color:#ffffff; color:#40485b"&gt;一个轻量级、语义化、对开发者友好的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;golang&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时间处理库，不依赖于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;任何&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;第三方库，&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;100%&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;单元测试覆盖率，已被&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fyinggaozhen%2Fawesome-go-cn%23%25E6%2597%25A5%25E6%259C%259F%25E5%2592%258C%25E6%2597%25B6%25E9%2597%25B4" target="_blank"&gt;awesome-go&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;收录，并获得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;gitee&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;2024 年最有价值项目（&lt;/span&gt;&lt;code&gt;GVP&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;）和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;gitcode&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;2024 年度开源摘星计划 (&lt;/span&gt;&lt;code&gt;G-Star&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;) 项目。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcarbon.go-pkg.com" target="_blank"&gt;官方网站&lt;/a&gt;&amp;nbsp;已正式上线，欢迎大家提出宝贵意见。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;img alt="" height="1217" src="https://oscimg.oschina.net/oscnet/up-ffcc62b638ff324c2e3dc4128f01b74565b.jpg" width="2048" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fcarbon" target="_blank"&gt;github.com/dromara/carbon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/dromara/carbon" target="_blank"&gt;gitee.com/dromara/carbon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fdromara%2Fcarbon" target="_blank"&gt;gitcode.com/dromara/carbon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;更新日志&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;解析时如果布局模板或格式模板为空时，返回错误&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tests&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gorm.io/gorm&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.21.1&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;升级到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.30.0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tests&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gorm.io/driver/mysql&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.5.7&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;升级到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.6.0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tests&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gorm.io/driver/postgres&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.5.7&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;升级到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.6.0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tests&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gorm.io/driver/sqlite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.5.7&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;升级到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1.6.0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;type_builtin.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DateTimeType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重命名为&lt;code&gt;dateTimeType&lt;/code&gt;，将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DateTimeXXXType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重命名为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dateTimeXXXType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;type_builtin.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DateType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重命名为&lt;code&gt;dateType&lt;/code&gt;，将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DateXXXType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重命名为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;dateXXXType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;type_builtin.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;TimeType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重命名为&lt;code&gt;timeType&lt;/code&gt;，将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;TimeXXXType&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;重命名为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;timeXXXType&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;简化 READEME 文件，将详细使用说明和示例用法迁移到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcarbon.go-pkg.com%2F" target="_blank"&gt;官方网站&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355137/go-carbon-2-6-8-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355137/go-carbon-2-6-8-released</guid>
      <pubDate>Sat, 10 May 2025 01:45:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>EasyGoAdmin 敏捷开发框架 Beego+EleVue 版本 v2.7.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.7.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、优化登录功能，增强使用体验；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、优化后台主页，规范页面和功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、优化个人中心模块，规范数据；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;4、更新版本和年份数据信息；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;5、优化消息面板，删除废弃代码；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;6、优化便签功能，删除废弃代码；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;7、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;一款 Go 语言基于 Beego、Vue、ElementUI、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式，同时为了敏捷快速开发，框架特地集成了代码生成器，完全自主研发了自定义 GO 后端服务模板和前端 Vue 自定义模板，可以根据已建好的表结构，可以快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发方式，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、可插拔式的敏捷开发框架。&lt;/span&gt;&lt;/p&gt; 
      &lt;h2&gt;软件信息&lt;/h2&gt; 
      &lt;ul&gt; 
       &lt;li&gt;软件名称：EasyGoAdmin 敏捷开发框架 Beego+EleVue 版本&lt;/li&gt; 
       &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.easygoadmin.vip" target="_blank"&gt;https://www.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.beego.elevue.easygoadmin.vip" target="_blank"&gt;http://docs.beego.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.beego.elevue.easygoadmin.vip" target="_blank"&gt;http://manage.beego.elevue.easygoadmin.vip&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;h2&gt;版本说明&lt;/h2&gt; 
      &lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"&gt; 
       &lt;tbody&gt; 
        &lt;tr&gt; 
         &lt;th&gt;版本名称&lt;/th&gt; 
         &lt;th&gt;版本说明&lt;/th&gt; 
         &lt;th&gt;版本地址&lt;/th&gt; 
        &lt;/tr&gt; 
       &lt;/tbody&gt; 
       &lt;tbody&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;GoFrame+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 GoFrame、Layui 等框架研发&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Beego+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Beego、Layui 等框架研发&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Gin+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Gin、Layui 等框架研发&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Iris+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Iris、Layui 等框架研发&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Echo+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Echo、Layui 等框架研发&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Revel+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Revel、Layui 等框架研发&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;GoFrame+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 GoFrame、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Beego+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Beego、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Gin+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Gin、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Iris+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Iris、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Echo+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Echo、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Revel+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Revel、Vue、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;GoFrame+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 GoFrame、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_GoFrame_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Beego+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Beego、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Beego_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Gin+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Gin、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Gin_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Iris+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Iris、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Iris_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Echo+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Echo、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Echo_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Revel+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Revel、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue"&gt;https://gitee.com/easygoadmin/EasyGoAdmin_Revel_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
       &lt;/tbody&gt; 
      &lt;/table&gt; 
      &lt;h2&gt;模块展示&lt;br&gt; &lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-617e549078819275035b5007c7a6649f210.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355126</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355126</guid>
      <pubDate>Fri, 09 May 2025 22:55:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>单 exe 截图软件：ScreenCapture 2.3.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;自上次投递新闻以来，历经 5 个版本，近期更新功能如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;优化：&lt;/span&gt;线条最小粗细值从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;变更为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;1&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，默认粗细值从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;8&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;变更为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;6&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;优化：标号默认半径从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;26.0&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;变更为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;18.0&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;优化：调整标号的半径大小后，绘制新标号时，新标号的半径为前面调整后的值。&lt;/li&gt; 
 &lt;li&gt;优化：按下&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Enter&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;键把框选的截图存入剪切板&lt;/li&gt; 
 &lt;li&gt;优化：截长图（滚动截图），增加：「已触底，自动滚动停止」 的提示&lt;/li&gt; 
 &lt;li&gt;优化：截长图（滚动截图），图像长度超过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;20000&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;个像素，自动停止，并提示：「长图过长，已自动停止」&lt;/li&gt; 
 &lt;li&gt;解决：截长图（滚动截图）相关文本支持多国语言&lt;/li&gt; 
 &lt;li&gt;优化：Qt 版本升级到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;6.9.1&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;优化：为可执行文件增加数字证书&lt;/li&gt; 
 &lt;li&gt;优化：画线线条最小粗细数值调整为 2&lt;/li&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;解决：跨屏截图的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxland%2FScreenCapture%2Fissues%2F122" target="_blank"&gt;#122&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;解决：截取窗口高亮区域图像时，左边，底边，多截取了半个像素的内容&lt;/li&gt; 
 &lt;li&gt;优化：截长图，滚动条滚动速度加快 200 毫秒&lt;/li&gt; 
 &lt;li&gt;优化：钉图窗口，点击按钮显示工具栏的逻辑。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;解决：在多屏幕环境下，长截图，拍照截图区域位置不准的问题。&lt;/li&gt; 
 &lt;li&gt;解决：在多屏幕环境下，钉图窗口位置和大小不准的问题&lt;/li&gt; 
 &lt;li&gt;优化：钉图窗口，工具栏钉图按钮，应处于禁用状态&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//022b124220ead36d2a012eb7f97857ce.png" width="1045" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;ScreenCapture 截图工具，体积小（8M 左右）、仅一个可执行文件，无需安装，不依赖任何动态链接库。&lt;/p&gt; 
&lt;p&gt;运行速度快、内存占用低、CPU 使用率低。&lt;/p&gt; 
&lt;h2&gt;开源地址：&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://gitee.com/horsejs_admin/ScreenCapture"&gt;https://gitee.com/horsejs_admin/ScreenCapture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxland%2FScreenCapture" target="_blank"&gt;https://github.com/xland/ScreenCapture&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;核心特性：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;跨屏幕截图、滚动截图（截长图）、高分屏支持、窗口区域高亮。&lt;/li&gt; 
 &lt;li&gt;取景框，支持快捷键复制 RGB 颜色（&lt;code&gt;Ctrl+R&lt;/code&gt;）、 HEX 颜色（&lt;code&gt;Ctrl+H&lt;/code&gt;）与 CMYK 颜色（&lt;code&gt;Ctrl+K&lt;/code&gt;）。&lt;/li&gt; 
 &lt;li&gt;绘制填充、非填充的椭圆、正圆（按住&lt;code&gt;Shift&lt;/code&gt;）、矩形、正方形（按住&lt;code&gt;Shift&lt;/code&gt;）、箭头、排序标号。&lt;/li&gt; 
 &lt;li&gt;绘制曲线、直线（按住&lt;code&gt;Shift&lt;/code&gt;）、半透明直线、马赛克、橡皮擦、文本。&lt;/li&gt; 
 &lt;li&gt;可以随时修改、删除已绘制的元素（鼠标移到元素上）。&lt;/li&gt; 
 &lt;li&gt;撤销（&lt;code&gt;Ctrl+Z&lt;/code&gt;）、重做（&lt;code&gt;Ctrl+Y&lt;/code&gt;）。&lt;/li&gt; 
 &lt;li&gt;在新窗口中钉住截图区域，使用鼠标滚轮放大、缩小钉图窗口大小。&lt;/li&gt; 
 &lt;li&gt;保存为文件（&lt;code&gt;Ctrl+S&lt;/code&gt;）、保存到剪贴板（&lt;code&gt;Ctrl+C&lt;/code&gt;或双击鼠标左键）。&lt;/li&gt; 
 &lt;li&gt;运行速度快、内存占用低、CPU 使用率低。&lt;/li&gt; 
 &lt;li&gt;体积小、仅一个可执行文件，无需安装，不依赖任何动态链接库。&lt;/li&gt; 
 &lt;li&gt;丰富的命令行控制参数。可以非常容易地集成到其他应用中。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;控制指令：&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;//设置本次截图的文件保存路径。
//如果路径是目录，则保存文件时会自动生成文件名。
//如果路径包含文件名，则按此文件名保存文件（文件存在则覆盖）。
//目前只支持 png 格式文件
ScreenCapture.exe --path:"D:\\doc\\test.png"
ScreenCapture.exe --path:"D:\\doc"

//截取屏幕某个区域的图像，10,10 是座标，500,600 是宽高
//截取完成后图像写入剪切板
ScreenCapture.exe --cap:area,10,10,500,600,clipboard

//截取屏幕某个区域的图像，截取完成后图像写入指定路径
ScreenCapture.exe --cap:area,10,10,500,600 --path:"D:\\doc"

//截取整个屏幕并写入剪切板
ScreenCapture.exe --cap:fullscreen,clipboard

//截取整个屏幕并把图像写入指定路径
ScreenCapture.exe --cap:fullscreen --path:"D:\\doc"

//用户拖拽鼠标确定截图区域后，马上把截图区域内的图像写入剪切板
ScreenCapture.exe --cap:custom,clipboard

//用户拖拽鼠标确定截图区域后，马上把截图区域内的图像写入指定路径
ScreenCapture.exe --cap:custom --path:"D:\\doc"

//钉住剪切板内的图像，100,100 是钉住窗口的座标
//如忽略窗口座标，则窗口默认座标为 100,100
ScreenCapture.exe --pin:clipboard,100,100

//钉住指定的图像文件，100,100 是钉住窗口的座标
ScreenCapture.exe --pin:file,"D:\\test.png",100,100

//钉住桌面某个区域的图像，(100,100,500,600) 是区域矩形，(800,10) 是钉住窗口的座标
ScreenCapture.exe --pin:area,100,100,500,600,800,10

//设置应用程序的语言，目前只支持简体中文 (zhcn) 和英文 (en)，默认中文
ScreenCapture.exe --lang:en

//保存图像时，对图像进行压缩。
//第一个参数 6 为图像质量，第二个参数 60 为缩放百分比
//图像质量取值范围为 -1 到 9 的整数
//0：最小压缩级别，文件最大
//9：最大压缩，文件最小
//-1：默认压缩级别，中等压缩
//缩放百分比取值范围为 1 到 100 的整数
//图像存入剪切板时，图像质量参数无效
ScreenCapture.exe --comp:6,60

//控制主工具栏按钮（及分割线）的顺序，位置及显隐情况。
ScreenCapture.exe --tool:"rect,ellipse,arrow,number,line,text,mosaic,eraser,|,undo,redo,|,pin,clipboard,save,close"

//截长图
//截长图窗口只有四个控制按钮`pin,clipboard,save,close`，也是支持通过`--tool`指令控制的
ScreenCapture.exe --cap:long&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;集成方式：&lt;/h2&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;示例为 Node.js 或 Electron，Python 类似&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;let spawn = require("child_process").spawn;
let child = spawn("./path/to/ScreenCapture.exe");
child.on("close", (code) =&amp;gt; {
    /// when code is:
    /// 0 undefined
    /// 1 quit by press close btn;
    /// 2 quit by press right mouse btn;
    /// 3 quit by press esc key;
    /// 4 quit when copy rgb color;
    /// 5 quit when copy hex color;
    /// 6 quit when copy cmyk color;
    /// 7 quit when copy mouse position;
    /// 8 quit when save to file;
    /// 9 quit when save to clipboard;
    console.log("the quit code is:",code)
});&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355124/screencapture-2-3-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355124/screencapture-2-3-1-released</guid>
      <pubDate>Fri, 09 May 2025 22:15:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gmanager v2.0.0-beta 发布，基于 GoFrame 的后端管理系统</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;此次 gmanger 项目进行了全面重构 Goframe 升级到 v2.9.0,前端&lt;span&gt;基于 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;更新说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;goframe 升级到 v2.9.0，按照 v2 版本项目结构全面重构&lt;/li&gt; 
 &lt;li&gt;gtoken 升级到最新 v2.0.0&lt;/li&gt; 
 &lt;li&gt;前端采用最新的 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;&lt;span style="color:#7f8c8d"&gt;历史 GoFrame V1 视频教程，欢迎大家入坑学习：&amp;nbsp;&lt;/span&gt;&lt;a href="https://my.oschina.net/flyoffox/blog/3209622"&gt;&lt;span style="color:#7f8c8d"&gt;https://my.oschina.net/flyoffox/blog/3209622&lt;/span&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;&lt;span style="color:#7f8c8d"&gt;尽情期待 GoFrame V2 教程录制&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;gmanager 后端管理系统&lt;/span&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;基于 GoFrame V2 框架的后台管理系统。支持登录、认证、组织机构、用户帐号、角色权限、菜单、配置、操作日志等模块&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;前端基于 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;登录组件使用 gtoken 完美支持集群部署&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;一、代码&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;github 地址： &lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgmanager" target="_blank"&gt;https://github.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;gitee 地址： &lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager"&gt;https://gitee.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;二、功能模块&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;部门管理：配置系统组织机构信息&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;用户管理：处理用户添加、用户配置、权限分配&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;角色管理：角色菜单权限分配，支持菜单和按钮权限设置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;菜单管理：配置系统菜单、按钮权限等&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;配置管理：支持对系统参数动态配置及数据字典配置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;日志管理：支持登录、登出、业务增删改操作记录&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;其他：登录、认证、登出、访问统计&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;gmanager 开源以来得到了大家的很多支持，本项目初衷只为互相学习交流，没有任何盈利性目的！欢迎为 gmanager 贡献代码或提供建议！&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span&gt;三、部署说明&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;以下为部署简要说明，详情参考&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/installation.md"&gt;&lt;span&gt;部署文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;3.1 后端&lt;/span&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;从 git 下载项目： git clone &lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgmanager" target="_blank"&gt;https://github.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;安装 mysql 数据库运行 resource/sql/gmanager.sql 脚本&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;复制&lt;/span&gt;&lt;span&gt;&lt;code&gt;server/manifest/config/config.example.yaml&lt;/code&gt;&lt;/span&gt;&lt;span&gt;配置文件，改名为&lt;/span&gt;&lt;span&gt;&lt;code&gt;config.yaml&lt;/code&gt;&lt;/span&gt;&lt;span&gt;,修改数据库配置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#aa5500"&gt;# 数据库配置&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#000000"&gt;database:&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style="color:#000000"&gt;default:&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color:#000000"&gt;link:&lt;/span&gt; &lt;span style="color:#000000"&gt;"mysql:root:123456@tcp(127.0.0.1:3306)/gmanager"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;启动项目&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#3300aa"&gt;cd&lt;/span&gt; server&lt;/span&gt;
&lt;span&gt;go mod tidy&lt;/span&gt;
&lt;span&gt;go run main.go&lt;/span&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;访问 &lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A8000%2Fping" target="_blank"&gt;http://localhost:8000/ping&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 后端接口，返回&lt;/span&gt;&lt;span&gt;&lt;code&gt;pong&lt;/code&gt;&lt;/span&gt;&lt;span&gt;验证部署成功&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;3.2 前端部署&lt;/span&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#3300aa"&gt;cd&lt;/span&gt; web&lt;/span&gt;
&lt;span&gt;pnpm install&lt;/span&gt;
&lt;span&gt;pnpm run dev&lt;/span&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;浏览器访问 &lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A3000" target="_blank"&gt;&lt;span&gt;http://localhost:3000&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 即可看到登录页面，默认账号/密码：admin/123456&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;四、使用文档&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/README.md"&gt;&lt;span&gt;说明文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; · &lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/installation.md"&gt;&lt;span&gt;部署文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; · &lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/ChangeLog.md"&gt;&lt;span&gt;更新说明&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;五、效果截图&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;登录：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;&lt;img alt="" height="726" src="https://oscimg.oschina.net/oscnet/up-882586e84b203a7774b2e0c7d7131051b2e.png" width="505" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;组织机构：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;img alt="" height="1076" src="https://oscimg.oschina.net/oscnet/up-cf04937135552ebfdc0a98838f201c6af14.png" width="2678" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;用户管理：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;img alt="" height="1240" src="https://oscimg.oschina.net/oscnet/up-50f73e8b72f569384378de7d1e9c29708d5.png" width="2658" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;span&gt;日志管理：&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:.5rem; margin-right:.5rem; text-align:left"&gt;&lt;img alt="" height="1090" src="https://oscimg.oschina.net/oscnet/up-bda3664d8f175edc73fded6ef43cae83861.png" width="2666" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;六、感谢&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:.5rem; margin-right:0"&gt;&lt;span&gt;gf 框架 &lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf"&gt;&lt;span&gt;https://github.com/gogf/gf&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355111/gmanager-2-0-0-beta</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355111/gmanager-2-0-0-beta</guid>
      <pubDate>Fri, 09 May 2025 15:49:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gtoken v2.0.0 正式发布，基于 GoFrame 的 token 插件</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;本次更新：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;此版本主要架构全面更新，发布 v2.X.X，不再兼容 v1.X.X，&lt;strong&gt;升级需谨慎&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;架构全面升级，版本更新到 v2.X.X，不再兼容 v1.X.X&lt;/li&gt; 
 &lt;li&gt;通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;获取最新版本，升级需谨慎&lt;/li&gt; 
 &lt;li&gt;独立 Token、Codec、Cache 接口，方便扩展&lt;/li&gt; 
 &lt;li&gt;采用 goframe 标准中间件方式认证，调用更加直观&lt;/li&gt; 
 &lt;li&gt;认证错误统一调整为 code:300，便于前端处理&lt;/li&gt; 
 &lt;li&gt;具体使用细节见项目 ReadMe 文件&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;gtoken&lt;/h1&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GoFrame&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的 token 插件，通过服务端验证方式实现 token 认证；已完全可以支撑线上 token 认证，通过 Redis 支持集群模式；使用简单，大家可以放心使用；&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GoFrame v2.X.X 全面适配&lt;/li&gt; 
 &lt;li&gt;GoFrame v1.X.X 请使用 gtoken v1.4.X 相关版本；&lt;/li&gt; 
 &lt;li&gt;Github 地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgtoken" target="_blank"&gt;https://github.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee 地址：&lt;a href="https://gitee.com/goflyfox/gtoken"&gt;https://gitee.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;gtoken 优势&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gtoken 支撑单点应用测试使用内存存储，支持个人小项目文件存储，也支持企业集群使用 redis 存储；完全适用于企业生产级使用；&lt;/li&gt; 
 &lt;li&gt;有效的避免了 jwt 服务端无法退出问题；&lt;/li&gt; 
 &lt;li&gt;解决 jwt 无法作废已颁布的令牌，只能等到令牌过期问题；&lt;/li&gt; 
 &lt;li&gt;通过用户扩展信息存储在服务端，有效规避了 jwt 携带大量用户扩展信息导致降低传输效率问题；&lt;/li&gt; 
 &lt;li&gt;有效避免 jwt 需要客户端实现续签功能，增加客户端复杂度；支持服务端自动续期，客户端不需要关心续签逻辑；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;特性说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持 token 认证，不强依赖于 session 和 cookie，适用 jwt 和 session 认证所有场景；&lt;/li&gt; 
 &lt;li&gt;支持单机 gcache 和集群 gredis 模式；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;# 缓存模式 1 gcache 2 gredis 3 fileCache&lt;/span&gt;
CacheMode = 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持服务端缓存自动续期功能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;// 注：通过 MaxRefresh，默认当用户第五天访问时，自动续期&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;// 超时时间，默认 10 天&lt;/span&gt;
Timeout &lt;span style="color:#d73a49"&gt;int&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;// 缓存刷新时间，默认为超时时间的一半&lt;/span&gt;
MaxRefresh &lt;span style="color:#d73a49"&gt;int&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;框架使用简单，只需要认证拦截器注册、登录 Token 生成、登出 Token 销毁即可；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;安装教程&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;获取最新版本:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;初始化配置 gtoken.Options {}, 并创建 gtoken 对象 (&lt;code&gt;gtoken.NewDefaultToken&lt;/code&gt;)；参数详情见《配置项说明》部分&lt;/li&gt; 
 &lt;li&gt;注册认证中间件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken.NewDefaultMiddleware(gfToken).Auth&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;登陆认证成功后，生成 Token（&lt;code&gt;gfToken.Generate&lt;/code&gt;）并返回给客户端&lt;/li&gt; 
 &lt;li&gt;登出时销毁 Token (&lt;code&gt;gfToken.Destroy&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;&lt;span style="color:#6a737d"&gt;// 创建 gtoken 对象&lt;/span&gt;&lt;/em&gt;
    gftoken := gtoken.NewDefaultToken(gtoken.Options{})
s.Group(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;"/"&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(group *ghttp.RouterGroup)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
group.Middleware(CORS)
&lt;em&gt;&lt;span style="color:#6a737d"&gt;// 注册 GfToken 中间件&lt;/span&gt;&lt;/em&gt;
group.Middleware(gtoken.NewDefaultMiddleware(gfToken).Auth)

        group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;"/system/data"&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
            &lt;em&gt;&lt;span style="color:#6a737d"&gt;// 获取登陆信息&lt;/span&gt;&lt;/em&gt;
            _, data, err := gfToken.Get(r.Context(), r.GetCtxVar(gtoken.KeyUserKey).String())
            &lt;strong&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt; {
                r.Response.WriteJson(RespError(err))
            }
            r.Response.WriteJson(RespSuccess(data))
        })
group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;"/user/logout"&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
    &lt;em&gt;&lt;span style="color:#6a737d"&gt;// 登出销毁 Token &lt;/span&gt;&lt;/em&gt;
_ = gfToken.Destroy(ctx, r.GetCtxVar(gtoken.KeyUserKey).String())
r.Response.WriteJson(RespSuccess(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;"user logout"&lt;/span&gt;&lt;/span&gt;))
})
})

s.BindHandler(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;"/login"&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
&lt;em&gt;&lt;span style="color:#6a737d"&gt;// 认证成功调用 Generate 生成 Token&lt;/span&gt;&lt;/em&gt;
token, err := gfToken.Generate(ctx, username, &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;"1"&lt;/span&gt;&lt;/span&gt;)
&lt;strong&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt; {
r.Response.WriteJson(RespError(err))
r.ExitAll()
}
r.Response.WriteJson(RespSuccess(g.Map{
gtoken.KeyUserKey: username,
gtoken.KeyToken:   token,
}))

})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;配置项说明&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;具体可参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GfToken&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;结构体，字段解释如下：&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:701.5px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;名称&lt;/th&gt; 
   &lt;th&gt;配置字段&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存模式&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CacheMode&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1 gcache 2 gredis 3 fileCache 默认 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CachePreKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认缓存前缀&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GToken:&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;超时时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Timeout&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 10 天（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存刷新时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MaxRefresh&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认为超时时间的一半（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 分隔符&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;TokenDelimiter&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;code&gt;_&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 加密 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;EncryptKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;12345678912345678912345678912345&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;是否支持多端登录&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MultiLogin&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截排除地址&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;excludePaths&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;此路径列表不进行认证&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;示例&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用示例，请先参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken/example/sample/test/backend/server.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件&lt;/p&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gf 框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf" target="_blank"&gt;https://github.com/gogf/gf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;历史文档 v1：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1115974" target="_blank"&gt;https://goframe.org/pages/viewpage.action?pageId=1115974&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355092/gtoken-2-0-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355092/gtoken-2-0-0-released</guid>
      <pubDate>Fri, 09 May 2025 12:38:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>微语 0.8.3 发布，开源智能客服系统</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;企业级多租户团队协作工具，免费开源 8 件套：企业 IM、在线客服、企业知识库/帮助文档、客户之声、工单系统、AI 对话、工作流、项目管理。&lt;/p&gt; 
&lt;h2&gt;语言&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/README.md"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/README.zh.md"&gt;中文&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="weiyu" src="https://oscimg.oschina.net/oscnet//410bced0ae34c0af96a16d135c1b711e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="chat" src="https://oscimg.oschina.net/oscnet//bc3cdfdbab5357b15b1cce6f0c8a13be.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/team/readme.zh.md"&gt;企业 IM&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;局域网即时通讯&lt;/li&gt; 
 &lt;li&gt;企业成员管理&lt;/li&gt; 
 &lt;li&gt;聊天记录监控&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/service/readme.zh.md"&gt;全渠道客服&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;多渠道接入&lt;/li&gt; 
 &lt;li&gt;人工客服&lt;/li&gt; 
 &lt;li&gt;客服 Agent 智能体，对接自有数据，自动执行操作&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/kbase/readme.zh.md"&gt;知识库&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;对接大模型&lt;/li&gt; 
 &lt;li&gt;自定义知识库&lt;/li&gt; 
 &lt;li&gt;Function Calling&lt;/li&gt; 
 &lt;li&gt;Mcp&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/ticket/readme.zh.md"&gt;工单系统&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;工单管理&lt;/li&gt; 
 &lt;li&gt;工单 SLA 管理&lt;/li&gt; 
 &lt;li&gt;工单统计和报表&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/ai/readme.zh.md"&gt;AI Agent&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ollama/DeepSeek/ZhipuAI/...&lt;/li&gt; 
 &lt;li&gt;智能体&lt;/li&gt; 
 &lt;li&gt;工作流&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;工作流&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;自定义表单&lt;/li&gt; 
 &lt;li&gt;自定义流程&lt;/li&gt; 
 &lt;li&gt;工单流程可视化&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/voc/readme.zh.md"&gt;客户之声&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;意见反馈&lt;/li&gt; 
 &lt;li&gt;服务投诉&lt;/li&gt; 
 &lt;li&gt;问卷调查&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/freeswitch/readme.zh.md"&gt;呼叫中心&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 FreeSwitch 的专业呼叫平台&lt;/li&gt; 
 &lt;li&gt;支持来电弹屏、自动分配、通话录音&lt;/li&gt; 
 &lt;li&gt;数据统计，语音与文字服务无缝集成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/webrtc/readme.zh.md"&gt;视频客服&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 WebRTC 技术的高清视频通话&lt;/li&gt; 
 &lt;li&gt;支持一键视频对话与屏幕共享&lt;/li&gt; 
 &lt;li&gt;适用于需要直观展示的服务场景&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/jitsi/readme.zh.md"&gt;视频会议&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;集成 Jitsi 的专业会议平台&lt;/li&gt; 
 &lt;li&gt;支持多人在线会议、屏幕共享&lt;/li&gt; 
 &lt;li&gt;会议录制等功能，满足远程协作需求&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/plugins/kanban/readme.zh.md"&gt;项目看板&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持任务创建、分配、进度监控&lt;/li&gt; 
 &lt;li&gt;文件共享与团队协作功能&lt;/li&gt; 
 &lt;li&gt;帮助团队高效完成项目目标&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://gitee.com/270580156/weiyu/blob/main/modules/social/readme.zh.md"&gt;社交群组&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;类似 Discord&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;多租户&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;多租户管理&lt;/li&gt; 
 &lt;li&gt;租户隔离&lt;/li&gt; 
 &lt;li&gt;租户统计&lt;/li&gt; 
 &lt;li&gt;...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docker 快速开始&lt;/h2&gt; 
&lt;h3&gt;方法一：克隆项目并启动 docker compose 容器，需要另行安装 ollama，默认使用 qwen3:0.6b 模型&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;git &lt;span style="color:#0086b3"&gt;clone&lt;/span&gt; https://gitee.com/270580156/weiyu.git &amp;amp;&amp;amp; &lt;span style="color:#0086b3"&gt;cd&lt;/span&gt; weiyu/deploy/docker &amp;amp;&amp;amp; docker compose -p weiyu -f docker-compose.yaml up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h4&gt;因项目默认使用 ollama qwen3:0.6b 模型，所以需要提前拉取模型。配置文件中可以配置其他模型，如 deepseek-r1 等&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 对话 Chat 模型&lt;/em&gt;
ollama pull qwen3:0.6b
&lt;em&gt;# 嵌入 Embedding 模型&lt;/em&gt;
ollama pull bge-m3:latest
&lt;em&gt;# 重新排序 Rerank 模型&lt;/em&gt;
ollama pull linux6200/bge-reranker-v2-m3:latest
&lt;em&gt;# 或者从 huggingface 下载模型&lt;/em&gt;
&lt;em&gt;# ollama pull hf.co/&amp;lt;username&amp;gt;/&amp;lt;model-repository&amp;gt;&lt;/em&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;方法二：使用 docker compose ollama，默认安装 ollama，默认使用 qwen3:0.6b 模型&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;git &lt;span style="color:#0086b3"&gt;clone&lt;/span&gt; https://gitee.com/270580156/weiyu.git &amp;amp;&amp;amp; &lt;span style="color:#0086b3"&gt;cd&lt;/span&gt; weiyu/deploy/docker &amp;amp;&amp;amp; docker compose -p weiyu -f docker-compose-ollama.yaml up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h4&gt;docker 拉取 ollama 模型。配置文件中可以配置其他模型，如 deepseek-r1 等&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 对话模型&lt;/em&gt;
docker &lt;span style="color:#0086b3"&gt;exec&lt;/span&gt; ollama-bytedesk ollama pull qwen3:0.6b
&lt;em&gt;# 嵌入模型&lt;/em&gt;
docker &lt;span style="color:#0086b3"&gt;exec&lt;/span&gt; ollama-bytedesk ollama pull bge-m3:latest
&lt;em&gt;# 重新排序 Rerank 模型&lt;/em&gt;
docker &lt;span style="color:#0086b3"&gt;exec&lt;/span&gt; ollama-bytedesk ollama pull linux6200/bge-reranker-v2-m3:latest
&lt;em&gt;# 或者从 huggingface 下载模型&lt;/em&gt;
&lt;em&gt;# docker exec ollama-bytedesk ollama pull hf.co/&amp;lt;username&amp;gt;/&amp;lt;model-repository&amp;gt;&lt;/em&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h4&gt;停止容器&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;docker compose -p weiyu -f docker-compose.yaml stop
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h4&gt;修改配置，否则上传图片、文件和知识库无法正常显示&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修改&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;docker-compose.yaml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件，或&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;docker-compose-ollama.yaml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件，修改以下配置项：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 请将服务器 127.0.0.1 替换为你的服务器 ip&lt;/em&gt;
BYTEDESK_UPLOAD_URL: http://127.0.0.1:9003
BYTEDESK_KBASE_API_URL: http://127.0.0.1:9003
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;方法三：宝塔面板&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.weiyuai.cn%2Fdocs%2Fzh-CN%2Fdocs%2Fdeploy%2Fbaota" target="_blank"&gt;宝塔面板部署&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;方法四：源码启动&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.weiyuai.cn%2Fdocs%2Fzh-CN%2Fdocs%2Fdeploy%2Fsource" target="_blank"&gt;源码启动&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;演示&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;本地预览&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 请将 127.0.0.1 替换为你的服务器 ip&lt;/em&gt;
http://127.0.0.1:9003/
&lt;em&gt;# 开放端口：9003, 9885&lt;/em&gt;
默认用户名: admin@email.com
默认密码: admin
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 社区版&lt;/em&gt;
bytedesk.appkey=ZjoyMDI1LTA2LTIxOkNPTU1VTklUWTo6
BYTEDESK_APPKEY: ZjoyMDI1LTA2LTIxOkNPTU1VTklUWTo6
&lt;em&gt;# 试用演示，企业版&lt;/em&gt;
到期日期: 2025-06-21
bytedesk.appkey=ZjoyMDI1LTA2LTIxOkVOVEVSUFJJU0U6Og==
BYTEDESK_APPKEY: ZjoyMDI1LTA2LTIxOkVOVEVSUFJJU0U6Og==
&lt;em&gt;# 试用演示，平台版&lt;/em&gt;
到期日期: 2025-06-21
bytedesk.appkey=ZjoyMDI1LTA2LTIxOlBMQVRGT1JNOjo=
BYTEDESK_APPKEY: ZjoyMDI1LTA2LTIxOlBMQVRGT1JNOjo=&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.weiyuai.cn%2Farchitecture.html" target="_blank"&gt;架构图&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开源客户端&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FBytedesk%2Fbytedesk-desktop" target="_blank"&gt;桌面客户端&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FBytedesk%2Fbytedesk-mobile" target="_blank"&gt;移动客户端&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355067/weiyu-im-0-8-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355067/weiyu-im-0-8-3-released</guid>
      <pubDate>Fri, 09 May 2025 09:42:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>智象未来两篇论文入选 CVPR 2025！视频生成与虚拟换装齐破局，开源赋能产业革新</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;近日，智象未来团队两项创新性技术论文被 CVPR 2025 收录，为视频生成与虚拟换装领域带来双重突破。两项技术均已开源发布。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;MotionPro：微动作精准生成&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;该技术颠覆传统视频生成模式，创新采用局部稀疏光流采样精准捕捉如眨眼、转头等微动作，结合运动掩码严格区分物体与相机运动。实验显示其视频-轨迹对齐精度提升 19%，用户满意度（自然度/动作符合性）分别领先 22% 和 18%，真正实现「所画即所动」。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;论文地址：&lt;/strong&gt;https://arxiv.org/abs/2505.20287&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;DPIDM：视频虚拟换装新标杆&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;该方案采用双分支扩散框架，结合动态姿势交互模块（DPI），有效解决了服装细节保持与视频一致性的技术难题，显著提升了虚拟试衣的真实感和时空连贯性。在 VVT 测试集上，其 VFID 分数达 0.506，较现有方法大幅提升 60.5%，为营销场景提供真实动态试穿体验。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;论文地址：&lt;/strong&gt;https://arxiv.org/abs/2505.16980&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355048</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355048</guid>
      <pubDate>Fri, 09 May 2025 08:55:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>🔥 Java Solon v3.3.2 发布（国产优秀应用开发基座）</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h2&gt;Solon 框架！&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon 是新一代，Java 企业级应用开发框架。&lt;strong&gt;从零开始构建（No Java-EE），有灵活的接口规范与开放生态&lt;/strong&gt;。采用商用友好的 Apache 2.0 开源协议，是「杭州无耳科技有限公司」开源的根级项目，是 Java 应用开发的生态基座（可替换美国博通公司的 Spring 生态）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;追求： 快速、小巧、简洁&lt;/li&gt; 
 &lt;li&gt;提倡： 克制、高效、开放&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;7 年开源时间，累计代码提交 1.6 万次 ，近半年下载量 1200 万次。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;有透明可预期的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F687" target="_blank"&gt;《版本发布与维护计划》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;有「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Fsupport" target="_blank"&gt;【社区交流】&lt;/a&gt;」和「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Fbiz" target="_blank"&gt;【商业服务】&lt;/a&gt;」双重技术支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;同时支持运行时环境（不基于 java-ee 构建，所以可以同时兼容）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;java8, java11, java17, java21, java14&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;有什么特点（相对 Java Spring 方案）？&lt;/h2&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;特点&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更高的计算性价比&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;并发高 700%；内存省 50%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更快的开发效率&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;代码少；入门简单；启动快 10 倍（调试快）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更好的生产与部署体验&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;打包小 90%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;更大的兼容范围&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;非 java-ee 架构；同时支持 java8 ～ java24，graalvm native image&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;最新的 techempower 测试数据：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techempower.com%2Fbenchmarks%2F%23hw%3Dph%26test%3Djson%25C2%25A7ion%3Ddata-r23" target="_blank"&gt;https://www.techempower.com/benchmarks/#hw=ph&amp;amp;test=json§ion=data-r23&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techempower.com%2Fbenchmarks%2F%23hw%3Dph%26test%3Dplaintext%25C2%25A7ion%3Ddata-r23" target="_blank"&gt;https://www.techempower.com/benchmarks/#hw=ph&amp;amp;test=plaintext§ion=data-r23&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目架构示意图（全场景应用开发支持）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//95814332b706fbac49a3ec444f026168.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;最近更新了什么？（每个版本都会有满满的清单）&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon 快如闪电！智也非凡！从 v3.1 起，提供完整的 AI 应用开发支持（Solon AI、Solon MCP 同时支持 java8 到 java24）。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;强化 solon-flow-designer 设计器&lt;/li&gt; 
 &lt;li&gt;强化 solon-ai-flow 插件&lt;/li&gt; 
 &lt;li&gt;添加 solon StatusException 状态码表&lt;/li&gt; 
 &lt;li&gt;添加 solon AppContext::getBeansMapOfType(TypeReference) 泛型获取方法&lt;/li&gt; 
 &lt;li&gt;添加 solon AppContext::getBeansOfType(TypeReference) 泛型获取方法&lt;/li&gt; 
 &lt;li&gt;添加 solon AppContext::getBean(TypeReference) 泛型获取方法&lt;/li&gt; 
 &lt;li&gt;添加 solon AppContext::getBean(ParameterizedType) 泛型获取方法&lt;/li&gt; 
 &lt;li&gt;添加 solon Context:status(code, message) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-mvc @Path.required 注解属性支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-net-httputils TextStreamUtil:parseLineStream,parseSseStream-&amp;gt;Publisher 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-net-httputils curl 打印支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowContext:runScript 替代 run（旧名，标为弃用）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowContext:runTask(node, description) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow link 支持 when 统一条件（替代 condition）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow activity 多分支流出时支持（逻辑与排他网关相同）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow Counter:incr(key, delta) 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatInterceptor 聊天拦截机制&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatMessage:ofUserAugment 替代 augment（后者标为弃用）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ProxyDesc 的 Serializable 接口实现&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core ChatOptions:response_format 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-core AssistantMessage:getSearchResultsRaw 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerEndpointProvider:getMessageEndpoint 方法&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpServerParameters http 参数支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp McpClientProvider 本地缓存支持（默认 30 秒）&lt;/li&gt; 
 &lt;li&gt;添加 solon-ai-mcp 原语处理异常日志&lt;/li&gt; 
 &lt;li&gt;优化 solon 属性默认值处理策略&lt;/li&gt; 
 &lt;li&gt;优化 solon BeanWrap 泛型匹配&lt;/li&gt; 
 &lt;li&gt;优化 solon-mvc mProduces 设定调到 invoke 之前（执行中产生输出，也可以产生效果）&lt;/li&gt; 
 &lt;li&gt;优化 solon-proxy ClassCodeBuilder v23 改为 v24&lt;/li&gt; 
 &lt;li&gt;优化 solon-hotplug PluginClassLoader 的代理兼容性&lt;/li&gt; 
 &lt;li&gt;优化 solon-web-sse SseRender:render 对 null 的过滤&lt;/li&gt; 
 &lt;li&gt;优化 solon-flow-luffy JtExecutorAdapter 的几个拼写错误&lt;/li&gt; 
 &lt;li&gt;优化 solon-net-httputils HttpUtilsBuilder:build 路径合并处理&lt;/li&gt; 
 &lt;li&gt;优化 nami 内部路径合并处理&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core ChatConfig.toString （增加 proxy）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core Tool:outputSchema 改为必出&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-core 添加 ToolCallException 异常类型，用于 tool call 异常传递（之前为 ChatException）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai OpenaiChatDialect 方言，tool 消息也附带所有的 tools 元信息（之前被过滤了）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp McpServerContext 同步连接时的请求参数，方便在 Tool 方法里获取&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp McpProviders 在 sse 时，支持 env 也作为 header 处理（有些服务方的配置，是用 env 的）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp 取消 RefererFunctionTool（由 FunctionToolDesc 替代）&lt;/li&gt; 
 &lt;li&gt;优化 solon-ai-mcp 基于 McpServerParameters 的构建能力&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow 取消&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;type: "@Com"&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的快捷配置模式（示例调整）&lt;/li&gt; 
 &lt;li&gt;修复 nami 使用 @Body 注解时会出现 npe 问题&lt;/li&gt; 
 &lt;li&gt;sa-token 升为 1.44.0&lt;/li&gt; 
 &lt;li&gt;wood 升为 1.3.19&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目仓库地址？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;gitee：&lt;a href="https://gitee.com/opensolon/solon"&gt;https://gitee.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitcode:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fopensolon%2Fsolon" target="_blank"&gt;https://gitcode.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopensolon%2Fsolon" target="_blank"&gt;https://github.com/opensolon/solon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;官网？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2F" target="_blank"&gt;https://solon.noear.org&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355041/solon-3-3-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355041/solon-3-3-2-released</guid>
      <pubDate>Fri, 09 May 2025 08:33:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>调问更新 6.6~6.13：配额管理+考试评分评语+4 项功能新增+6 项功能优化+3 项 BugFix</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;div style="text-align:left"&gt;
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#40485b"&gt;&lt;span&gt;&lt;span&gt;调问自开源以来一直坚持前后端所有代码 100% 开源💯，保证所有功能的稳定与可改造能力👏。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;ul&gt; 
  &lt;li style="margin-left: 0px; margin-right: 0px; text-align: left;"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#40485b"&gt;&lt;span&gt;&lt;span&gt;🔥 安装下载地址（安装包）：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.diaowen.net%2Finstall%2Fdocker"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;u&gt;&lt;span style="color:#1e6fff"&gt;&lt;span&gt;&lt;span&gt;https://www.diaowen.net/install/docker&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="margin-left: 0px; margin-right: 0px; text-align: left;"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#40485b"&gt;&lt;span&gt;&lt;span&gt;🔥 源码下载地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/wkeyuan/DWSurvey"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;u&gt;&lt;span style="color:#1e6fff"&gt;&lt;span&gt;&lt;span&gt;https://gitee.com/wkeyuan/DWSurvey&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1abc9c"&gt;&lt;strong&gt;配额管理功能&lt;/strong&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;来啦，之前&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;多个&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;小伙伴提出&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;需要针对每个选项，支持配额管理能力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;在设置了配额后，达到配额限制之后，就限制选项选择。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;这个功能在学校、报名的场景下非常常用，这两周经过设计，目前已经支持单选、多选题的配额管理能力，并且结合真实使用场景，基于 DSL 进行实现，可以支持各种逻辑组合的配额设置，例如&lt;strong&gt;多个选项交叉配额设置&lt;/strong&gt;，欢迎大家来体验：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;img height="611" src="https://static.oschina.net/uploads/space/2025/0612/161057_MzJU_4252687.png" width="948" referrerpolicy="no-referrer"&gt;&lt;img height="618" src="https://static.oschina.net/uploads/space/2025/0612/161057_WUPF_4252687.png" width="1242" referrerpolicy="no-referrer"&gt;&lt;img height="1252" src="https://static.oschina.net/uploads/space/2025/0612/161057_v4kc_4252687.png" width="3876" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;此外，在考试场景下，增加了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#1abc9c"&gt;&lt;strong&gt;自动评分功能&lt;/strong&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;，同时可以支持&lt;strong&gt;主观题的评分评语&lt;/strong&gt;，进一步丰富了考试场景下的问卷能力：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;img height="1412" src="https://static.oschina.net/uploads/space/2025/0612/161057_MUPS_4252687.png" width="2446" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;还有个小功能，会有一些特殊情况，要求答卷答过之后不能修改，针对这种需求，调问本周增加了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#1abc9c"&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;「上一页」 开关的显示与隐藏配置&lt;/strong&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;，以支持题目回答后不能修改的目的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;本周对小程序端进行了进一步完善，目前已经开始走小程序发布流程，小程序端马上就要和大家见面了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;欢迎伙伴们，在 surveyform.cn 上进行体验、试用！！！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsurveyform.cn%2F" target="_blank"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;u&gt;&lt;span style="color:#1e6fff"&gt;&lt;span&gt;&lt;span&gt;https://www.surveyform.cn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;本周更新：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#1abc9c"&gt;&lt;span&gt;&lt;span&gt;功能新增：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;增加问卷配额功能，同时支持单项与多项配额能力，同时也支持配额回答进度统计，实时查看配额完成情况；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;考试答卷在系统自动评分基础上，增加管理员自定义评分功能，同时可以设置评分评语；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;支持配置答卷上一页显示与隐藏；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;完成开发问卷管理小程序端，支持在微信小程序中完成问卷的创建、编辑等其它管理功能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#1abc9c"&gt;&lt;span&gt;&lt;span&gt;功能优化：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;优化选择题与下拉题其它选项显示，完成对应答卷提交验证逻辑功能；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;优化答题验证提示及整体显示提示风格与位置；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;对问卷答卷按钮配置进行升级，支持自定义上一页、下一页按钮文本，按钮位置、宽度配置；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;优化自定义 DSL 验证条件不满足时的错误提示语；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;优化两种问卷管理布局的功能菜单展示；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;整体更新升级系统组件库版本到更安全版本。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#1abc9c"&gt;&lt;span&gt;&lt;span&gt;BUG 修复：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;解决矩阵组合题，可能出现的数字输入长度验证失效问题；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;修复配额功能兼容旧问卷，防止已有数据加载错误的问题；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;修复一些国际化脚本错误。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355033/dwsurvey-updated</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355033/dwsurvey-updated</guid>
      <pubDate>Fri, 09 May 2025 08:08:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Audacity 3.7.4 发布，开源音频编辑器</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Audacity 是最受欢迎的免费跨平台的开源音频编辑器之一。它可以在 Windows、macOS 和 GNU/Linux 设备上下载和使用，并且长期以来维持更新，功能也十分丰富。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Audacity 3.7.4 现已发布，这是一个补丁版本。一些更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F6890" target="_blank"&gt;#6890&lt;/a&gt;&amp;nbsp;修复了关闭未保存的大型项目时发生的崩溃&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8709" target="_blank"&gt;#8709&lt;/a&gt;&amp;nbsp;修复了使用激活延迟补偿的实时效果时发生的崩溃&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8494" target="_blank"&gt;#8494&lt;/a&gt;&amp;nbsp;修复了 Studio Fade Out 在剪辑末尾应用时创建新剪辑的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8442" target="_blank"&gt;#8442&lt;/a&gt;&amp;nbsp;修复了剪辑音频上不正确的波形渲染&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F8559" target="_blank"&gt;#8559&lt;/a&gt;&amp;nbsp;修复了使用音调调整连接两个剪辑时意外删除剪辑的问题&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fissues%2F3003" target="_blank"&gt;#3003&lt;/a&gt;&amp;nbsp;当音轨静音时，效果预览现在有效&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fpull%2F8666" target="_blank"&gt;#8666&lt;/a&gt;&amp;nbsp;修复了 Hamming&amp;nbsp;window derivative&amp;nbsp;中可能出现的错误计算&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Fpull%2F8577" target="_blank"&gt;#8577&lt;/a&gt;&amp;nbsp;修复了旧版 macOS 上的编译问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faudacity%2Faudacity%2Freleases%2Ftag%2FAudacity-3.7.4" target="_blank"&gt;https://github.com/audacity/audacity/releases/tag/Audacity-3.7.4&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355028/audacity-3-7-4-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355028/audacity-3-7-4-released</guid>
      <pubDate>Fri, 09 May 2025 07:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>DBeaver 25.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;DBeaver 是一个免费开源的通用数据库工具，适用于开发人员和数据库管理员。DBeaver 25.1 已发布，更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;自 25.0.5 以来的变化如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:1.5em"&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;SQL Editor&lt;/span&gt;&lt;span style="color:#000000"&gt;：&lt;/span&gt; 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;如果 referenced table 有别名，则现在总是将其放在列名之前以实现语义补全&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;添加了新的语义补全设置来控制完全限定的列名&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;修复了大字体的绑定变量对话框布局&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Data Transfer：删除了「All but nulls」选项，并添加了「All including nulls」选项，用于 CSV 导出&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Miscellaneous：&lt;/span&gt; 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;修复了 macOS 的「Bind Parameters」对话框中编辑器窗口未对齐的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;修复了「Tip of the Day」窗口可能阻止应用程序界面加载的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;修复了测试和生产连接类型的连接颜色应用不一致的问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;修复了 CLI 模式下的应用程序启动问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;General：「All file types」选项已移至文件打开对话框的顶部，以便于访问&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Databases：&lt;/span&gt; 
  &lt;ul style="margin-left:0; margin-right:0"&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;Clickhouse：&lt;/span&gt; 
    &lt;ul style="margin-left:0; margin-right:0"&gt; 
     &lt;li&gt;&lt;span style="color:#000000"&gt;Clickhouse 驱动程序已恢复至 0.8.5 版本&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="color:#000000"&gt;修复嵌套数组值的引用&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;CUBRID：修复信息面板可见性&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;DuckDB：&lt;/span&gt; 
    &lt;ul style="margin-left:0; margin-right:0"&gt; 
     &lt;li&gt;&lt;span style="color:#000000"&gt;添加了隐藏系统对象的选项&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="color:#000000"&gt;修复了 DuckDB 版本 1.2.2+ 中的几何显示问题&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style="color:#000000"&gt;Simple structure compare wizard 已修复&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;MySQL：修复了主键列创建问题&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;PostgreSQL：在数据网格中的 ILIKE 过滤器中添加了对通配符的支持&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;SQL Server：修复了会话管理器中的「Only connections」选项，以便按预期仅显示活动连接会话&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;Teradata：native date/time formatting 现在默认禁用，可以在连接设置中启用&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明&lt;/span&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdbeaver.io%2F2025%2F06%2F01%2Fdbeaver-25-1%2F" target="_blank"&gt;https://dbeaver.io/2025/06/01/dbeaver-25-1/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355024/dbeaver-25-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355024/dbeaver-25-1-released</guid>
      <pubDate>Fri, 09 May 2025 07:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
