<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Sep 2025 12:42:29 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Kamailio v6.0.3 发布，可扩展的开源 SIP 服务器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;Kamailio SIP Server v6.0.3&amp;nbsp;稳定版现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kamailio.org%2Fw%2F2025%2F09%2Fkamailio-v6-0-3-released%2F" target="_blank"&gt;发布&lt;/a&gt;。Kamailio 是一款开源 SIP 服务器，每秒可处理数千个呼叫建立。Kamailio 可用于构建大型 VoIP 和实时通信平台，例如 presence、WebRTC、即时通讯和其他应用。此外，它还可以轻松扩展 SIP-to-PSTN 网关、PBX 系统或媒体服务器（例如 Asterisk、FreeSWITCH 或 SEMS）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;这是一个小版本，包含自 v6.0.2 以来的代码和文档修复。&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;配置文件和数据库架构兼容性保持不变，意味着用户无需更改任何内容即可进行更新。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;Kamailio v6.0.3 基于 GIT 分支 6.0 的最新源代码，是最新的稳定版本。官方建议运行 6.0.x 或更早版本的用户升级。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;Kamailio 版本 6.0.3 源码包的资源可从以下位置获取：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kamailio.org%2Fpub%2Fkamailio%2F6.0.3%2Fsrc%2F" target="_blank"&gt;https://www.kamailio.org/pub/kamailio/6.0.3/src/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#575757; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;Download via GIT:&lt;/span&gt;&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:start"&gt; # git clone https://github.com/kamailio/kamailio kamailio
 # cd kamailio
 # git checkout -b 6.0 origin/6.0&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更多详情可查看：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kamailio.org%2Fpub%2Fkamailio%2F6.0.3%2FChangeLog" target="_blank"&gt;https://www.kamailio.org/pub/kamailio/6.0.3/ChangeLog&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371370/kamailio-v6-0-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371370/kamailio-v6-0-3-released</guid>
      <pubDate>Sun, 07 Sep 2025 09:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Apache Doris 3.1 正式发布：半结构化分析全面升级，湖仓一体能力再跃新高</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;亲爱的社区小伙伴们，我们很高兴地向大家宣布，近期我们迎来了 Apache Doris 3.1 版本的正式发布，欢迎大家下载使用体验。&lt;/p&gt; 
&lt;p&gt;3.1 版本是 Apache Doris 在&lt;strong&gt;半结构化分析&lt;/strong&gt;上的一个里程碑版本。在 VARIANT 类型上，3.1 版本新增了稀疏列能力，使得 VARIANT 可以轻松应对数万子列的场景。同时，在 VARIANT 类型上引入了模板化 schema 能力，让 VARIANT 类型在关键路径上，查询更快、索引更稳、成本可控，同时不丢失灵活性。在倒排索引能力上，3.1 版本引入了 index v3 版本的索引格式，相比较于 v2 版本存储空间节省可达 20%。同时，支持了更为丰富的分词手段，提供了三种全新的分词器：ICU Tokenizer、IK Tokenizer 和 Basic Tokenizer。还进一步支持了自定义分词器，可以突破内置分词器的局限性，根据业务场景定制，显著提升搜索召回率。&lt;/p&gt; 
&lt;p&gt;3.1 版本同样在&lt;strong&gt;湖仓一体&lt;/strong&gt;上有了显著的增强。在 3.1 版本中，Apache Doris 将异步物化视图中的分区构建和透明改写分区补偿，这两项重要能力引入数据湖中，在湖和仓中间架起一座重要的桥梁。3.1 版本还扩充了对 iceberg 和 paimon 特性的支持范围。另外，通过引入动态分区裁剪和批量分片执行在特定场景下提升了数据湖查询的性能多达 40%，并显著降低了 FE 的内存占用。同时 3.1 版本还重构了各个数据源的连接属性，不仅能够以更加清晰的方式对接各类元数据服务和数据存储系统，同时还支持了更加丰富的连接能力。&lt;/p&gt; 
&lt;p&gt;3.1 版本 Apache Doris 持续打磨&lt;strong&gt;存储引擎&lt;/strong&gt;。提供了全新的数据更新方式 —— 灵活列更新。在部分列更新的基础上，进一步放开限制。在一次导入中对于每一行可以更新不同的列。另外，在存算分离场景下，优化了 MOW 表部分链路的锁获取逻辑和使用范围，提升高并发导入场景的使用体验。&lt;/p&gt; 
&lt;p&gt;在性能方面，3.1 着重优化了&lt;strong&gt;分区裁剪的能力和规划性能&lt;/strong&gt;。在数万分区和复杂分区过滤表达式的场景下，能够显著提升查询性能并降低资源消耗。同时，3.1 还在优化器中全面引入了基于数据特征的优化手段，在特定场景下可以获得超过 10 倍的性能提升。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在 3.1 版本的研发过程中，有超过 90 名贡献者为 Apache Doris 提交了 1000+ 个优化与修复。&lt;/strong&gt; 在此向所有参与版本研发、测试和需求反馈的贡献者们表示最衷心的感谢。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Freleases" target="_blank"&gt;GitHub 下载&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdownload" target="_blank"&gt;官网下载&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;一、VARIANT 半结构化查询华丽变身&lt;/h2&gt; 
&lt;h3&gt;存储能力质变：稀疏列与子列 Vertical Compaction，轻松支持数万子列&lt;/h3&gt; 
&lt;p&gt;传统 OLAP 面对「超宽表/超多列」（上千到上万）常遇到元数据膨胀、合并放大与查询退化；Doris 3.1 通过 VARIANT 的稀疏子列与子列级 Vertical Compaction，将可维护的列数上限抬升到数万级。&lt;/p&gt; 
&lt;p&gt;通过对存储层的深入优化，Variant 给用户带来以下收益：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;稳定支撑「上千 - 数万」子列（列式存储），查询/合并延迟更平滑。&lt;/li&gt; 
 &lt;li&gt;元数据与索引可控，避免指数级膨胀。&lt;/li&gt; 
 &lt;li&gt;实测可进行 10,000+ 子列提取（列式存储），Compaction 效率顺畅。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;超多列的适用场景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;车联网/IoT 遥测：设备型号多、传感器维度动态增减。&lt;/li&gt; 
 &lt;li&gt;营销自动化/CRM：事件/用户属性持续扩展（如自定义 event/property）。&lt;/li&gt; 
 &lt;li&gt;广告/埋点事件：海量可选 properties，字段稀疏且不断演进。&lt;/li&gt; 
 &lt;li&gt;安全审计/日志：不同源日志字段各异，需按模式聚合检索。&lt;/li&gt; 
 &lt;li&gt;电商商品属性：类目跨度大，商品属性高度可变。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;实现原理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;稀疏子列（Sparse Subcolumns）：按 JSON Key 频次排序，只提取 Top-N 高频子列入「真列式」；长尾保持在稀疏列存储，避免无序扩张。&lt;/li&gt; 
 &lt;li&gt;子列级 Vertical Compaction：对 VARIANT 子列应用 Vertical Compaction，分组合并、内存占用更小；合并时动态识别并固化热点路径，进一步降低合并开销。&lt;/li&gt; 
 &lt;li&gt;优化值填充默认值效率，按 batch 的方式进行批量填充（减少虚函数开销）。&lt;/li&gt; 
 &lt;li&gt;通过 LRU 机制减少内存中列存储相关元数据缓存内存开销。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;如何开启与使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;新增列级别控制 Variant 参数，列属性（Properties）：&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;variant_max_subcolumns_count&lt;/code&gt;：默认是&lt;code&gt;0&lt;/code&gt;，表明不开启稀疏列能力，设置成特定值后将会提取 Top-N 高频的 JSON key 作为列式存储，余下的列进入稀疏列存储。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- Enable sparse subcolumns and cap hot subcolumn count
CREATE TABLE IF NOT EXISTS tbl (
  k BIGINT,
  v VARIANT&amp;lt;
      properties("variant_max_subcolumns_count" = "2048") -- pick top-2048 hot keys
  &amp;gt;
) DUPLICATE KEY(k);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;模板化 Schema（Schema Template） - 变化中的不变量&lt;/h3&gt; 
&lt;p&gt;一句话总结：模板化 Schema 让「常变」的 JSON 在关键路径上「变得可预期」：查询更快、索引更稳、成本可控，同时不丢失灵活性。&lt;/p&gt; 
&lt;p&gt;使用模板化的 Schema，将会给使用 Variant 数据类型带来以下收益：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;类型稳定：关键子路径类型可在 DDL 中固定，避免类型漂移引发的查询报错、索引失效与隐式转换开销。&lt;/li&gt; 
 &lt;li&gt;检索更快更准：为不同子路径定制倒排策略（分词/非分词、解析器、短语搜索等），常用查询延迟更低、命中更稳定。&lt;/li&gt; 
 &lt;li&gt;索引与成本可控：不再「整列统一继承索引」（2.1 的做法易膨胀），而是「按子路径精细化配置」，显著降低索引数量、写放大与存储成本。&lt;/li&gt; 
 &lt;li&gt;可维护/可协作：等同给 JSON 加「数据契约」，跨团队语义一致；类型与索引状态更可观测，问题更易定位。&lt;/li&gt; 
 &lt;li&gt;演进友好：核心高频路径模板化并可选建索引，长尾字段继续保持灵活扩展，不牺牲可扩展性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;如何开启与使用&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;显式声明结构，指定类型：在&lt;code&gt;VARIANT&amp;lt;...&amp;gt;&lt;/code&gt;中预定义常用子路径与类型（含通配），例如&lt;code&gt;'a' : int, 'c.d' : text, 'array_int_*' : array&amp;lt;int&amp;gt;&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;配置索引，针对同一 VARIANT 列的不同子路径配置不同索引策略（field_pattern、解析器、分词、短语搜索等），差异化提升检索效率，可用通配符批量匹配。&lt;/li&gt; 
 &lt;li&gt;新增列级别控制 Variant 参数，列属性（Properties）:&lt;code&gt;variant_enable_typed_paths_to_sparse&lt;/code&gt;：默认是&lt;code&gt;false&lt;/code&gt;，表明预定义的列不会进入稀疏列， &lt;code&gt;true&lt;/code&gt; 开启后预定义类型路径也会进入稀疏存储（用于避免匹配过多列后导致的列数膨胀）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;示例 1：schema 定义 + 单列多索引&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- Common properties: field_pattern (target subpath), analyzer, parser, support_phrase, etc.
CREATE TABLE IF NOT EXISTS tbl (
    k BIGINT,
    v VARIANT&amp;lt;'content' : STRING&amp;gt;, -- specify concrete type for subcolumn 'content'
    INDEX idx_tokenized(v) USING INVERTED PROPERTIES("parser" = "english", "field_pattern" = "content"), -- tokenized inverted index for 'content' with english parser
    INDEX idx_v(v) USING INVERTED PROPERTIES("field_pattern" = "content") -- non-tokenized inverted index for 'content'
);

-- v.content will have both a tokenized (english) inverted index and a non-tokenized inverted index

-- Use tokenized index
SELECT * FROM tbl WHERE v['content'] MATCH 'Doris';

-- Use non-tokenized index
SELECT * FROM tbl WHERE v['content'] = 'Doris';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;示例 2：通配符批量处理符合模式的列&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- Use wildcard-typed subpaths with per-pattern indexes
CREATE TABLE IF NOT EXISTS tbl2 (
  k BIGINT,
  v VARIANT&amp;lt;
      'pattern1_*' : STRING, -- batch-typing: all subpaths matching pattern1_* are STRING
      'pattern2_*' : BIGINT, -- batch-typing: all subpaths matching pattern2_* are BIGINT
      properties("variant_max_subcolumns_count" = "2048") -- enable sparse subcolumns; keep top-2048 hot keys
  &amp;gt;,
  INDEX idx_p1 (v) USING INVERTED
    PROPERTIES("field_pattern"="pattern1_*", "parser" = "english"), -- tokenized inverted index for pattern1_* with english parser
  INDEX idx_p2 (v) USING INVERTED
    PROPERTIES("field_pattern"="pattern2_*") -- non-tokenized inverted index for pattern2_*
) DUPLICATE KEY(k);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;示例 3：允许预定义类型的列进入稀疏列&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- Allow predefined typed paths to participate in sparse extraction
CREATE TABLE IF NOT EXISTS tbl3 (
  k BIGINT,
  v VARIANT&amp;lt;
    'message*' : STRING, -- batch-typing: all subpaths matching prefix 'message*' are STRING
    properties(
      "variant_max_subcolumns_count" = "2048",              -- enable sparse subcolumns; keep top-2048 hot keys
      "variant_enable_typed_paths_to_sparse" = "true"       -- include typed (predefined) paths as sparse candidates (default: false)
    )
  &amp;gt;
) DUPLICATE KEY(k);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;二、索引架构全面进化&lt;/h2&gt; 
&lt;h3&gt;倒排索引存储格式 V3 - 性能和功能的双重提升&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;相比 V2 进一步优化存储&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;索引文件更小，减少磁盘占用和 I/O 开销，以 httplogs 与 logsbench 两个测试集测试结果来看，存储空间最大可以通过 V3 节省 20%，适合大规模文本数据、日志分析场景。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="index-optimization-1.PNG" src="https://oscimg.oschina.net/oscnet//52bd3f73925297fad698a51fb6c828cf.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;核心改进&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;引入倒排索引 ZSTD 词典压缩&lt;/strong&gt;：采用 ZSTD 压缩算法对倒排索引内的词典文件进行压缩，通过 index properties 中的 &lt;code&gt;dict_compression&lt;/code&gt; 开启。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;新增倒排索引位置信息压缩&lt;/strong&gt;：支持对倒排索引中为每个 term 即词元记录的位置信息进行编码压缩，进一步减少倒排索引空间占用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;使用方式&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- 建表时启用 V3 格式
CREATE TABLE example_table (
    content TEXT,
    INDEX content_idx (content) USING INVERTED
    PROPERTIES("parser" = "english", "dict_compression" = "true")
) ENGINE=OLAP
PROPERTIES ("inverted_index_storage_format" = "V3");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;倒排索引 - 分词器灵活多样好用易用&lt;/h3&gt; 
&lt;h4&gt;新增三种常用分词器&lt;/h4&gt; 
&lt;p&gt;进一步提升用户在不同场景下的分词需求：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ICU Tokenizer&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;实现&lt;/strong&gt;：ICU（International Components for Unicode）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：包含复杂文字系统的国际化文本，特别适合多语言混合文档。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;SELECT TOKENIZE('مرحبا بالعالم Hello 世界', '"parser"="icu"');
-- 结果：["مرحبا", "بالعالم", "Hello", "世界"]

SELECT TOKENIZE('มนไมเปนไปตามความตองการ', '"parser"="icu"');
-- 结果：["มน", "ไมเปน", "ไป", "ตาม", "ความ", "ตองการ"]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;IK Tokenizer&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;实现&lt;/strong&gt;：IK Analyzer（中文分词器），基于算法的高级中文分词，结合词典和统计模型&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：对分词质量要求较高的中文文本处理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模式&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;ik_smart&lt;/strong&gt;：智能模式，词少且更长，语义集中，适合精确搜索&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;ik_max_word&lt;/strong&gt;：最细粒度模式，更多短词，覆盖更全面，适合召回搜索&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;-- 智能模式
SELECT TOKENIZE('中华人民共和国国歌', '"parser"="ik","parser_mode"="ik_smart"');
-- 结果：["中华人民共和国", "国歌"]

-- 最细粒度模式
SELECT TOKENIZE('中华人民共和国国歌', '"parser"="ik","parser_mode"="ik_max_word"');
-- 结果：["中华人民共和国", "中华人民", "中华", "华人", "人民共和国", "人民", "共和国", "共和", "国歌"]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Basic Tokenizer&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;实现&lt;/strong&gt;：简单规则的自定义分词器，基础分词，采用字符类型识别进行分词&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;适用场景&lt;/strong&gt;：简单场景、对性能要求极高的场景&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;分词规则&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;连续的字母数字字符作为一个词（word tokens）&lt;/li&gt; 
   &lt;li&gt;中文字符单独分词（每个汉字一个 token）&lt;/li&gt; 
   &lt;li&gt;忽略标点符号、空格和特殊符号&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;-- 英文文本分词
SELECT TOKENIZE('Hello World! This is a test.', '"parser"="basic"');
-- 结果：["hello", "world", "this", "is", "a", "test"]

-- 中文文本分词
SELECT TOKENIZE('你好世界', '"parser"="basic"');
-- 结果：["你", "好", "世", "界"]

-- 混合语言分词
SELECT TOKENIZE('Hello 你好 World 世界', '"parser"="basic"');
-- 结果：["hello", "你", "好", "world", "世", "界"]

-- 包含数字和特殊字符
SELECT TOKENIZE('GET /images/hm_bg.jpg HTTP/1.0', '"parser"="basic"');
-- 结果：["get", "images", "hm", "bg", "jpg", "http", "1", "0"]

-- 处理长数字序列
SELECT TOKENIZE('12345678901234567890', '"parser"="basic"');
-- 结果：["12345678901234567890"]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;自定义分词&lt;/h4&gt; 
&lt;p&gt;推出自定义分词功能，方便用户根据自身分词需求，进行 DIY 组合，进一步提高文本检索召回率。自定义分词可以突破内置分词的局限，根据特定需求组合字符过滤器、分词器和词元过滤器，精细定义文本如何被切分成可搜索的词项，这直接决定了搜索结果的相关性与数据分析的准确性。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="index-optimization-2.PNG" src="https://oscimg.oschina.net/oscnet//dc0f51266ee161f7031d39e645c8b225.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;使用场景举例&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;问题&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;使用默认 unicode 分词器时，电话号码"13891972631"被当作完整 token，无法支持前缀搜索如"138"。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;创建分词器（tokenizer）&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;使用 Edge N-gram 自定义分词器：&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;   CREATE INVERTED INDEX TOKENIZER IF NOT EXISTS edge_ngram_phone_tokenizer
    PROPERTIES
    (
        "type" = "edge_ngram",
        "min_gram" = "3",
        "max_gram" = "10",
        "token_chars" = "digit"
    );
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;创建分析器（analyzer）&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;  CREATE INVERTED INDEX ANALYZER IF NOT EXISTS phone_prefix_analyzer
    PROPERTIES
    (
        "tokenizer" = "edge_ngram_phone_tokenizer"
    );
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;创建表指定 analyzer&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;CREATE TABLE customer_contacts (
    id bigint NOT NULL AUTO_INCREMENT(1),
    phone text NULL,
    INDEX idx_phone (phone) USING INVERTED PROPERTIES(
        "analyzer" = "phone_prefix_analyzer"
    )
) ENGINE=OLAP
DUPLICATE KEY(id)
DISTRIBUTED BY RANDOM BUCKETS 1
PROPERTIES ("replication_allocation" = "tag.location.default: 1");
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;查看分词效果&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;  SELECT tokenize('13891972631', '"analyzer"="phone_prefix_analyzer"');
  +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
  | tokenize('13891972631', '"analyzer"="phone_prefix_analyzer"')                                                                                                                                                                                                                                |
  +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
  | [{
          "token": "138"
      }, {
          "token": "1389"
      }, {
          "token": "13891"
      }, {
          "token": "138919"
      }, {
          "token": "1389197"
      }, {
          "token": "13891972"
      }, {
          "token": "138919726"
      }, {
          "token": "1389197263"
      }] |
  +----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;文本搜索效果&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-SQL"&gt;  SELECT * FROM customer_contacts_optimized WHERE phone MATCH '138';
  +------+-------------+
  | id   | phone       |
  +------+-------------+
  |    1 | 13891972631 |
  |    2 | 13812345678 |
  +------+-------------+
  SELECT * FROM customer_contacts_optimized WHERE phone MATCH '1389';
  +------+-------------+
  | id   | phone       |
  +------+-------------+
  |    1 | 13891972631 |
  |    2 | 13812345678 |
  +------+-------------+
  2 rows in set (0.043 sec)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通过 Edge N-gram 分词器，一个电话号码被拆分成多个前缀 token，实现了灵活的前缀匹配搜索。&lt;/p&gt; 
&lt;h2&gt;三、湖仓一体能力再跃新高&lt;/h2&gt; 
&lt;h3&gt;异步物化视图全面支持数据湖&lt;/h3&gt; 
&lt;p&gt;在 3.1 版本中，异步物化视图再次进化，现在可以完整支持 Paimon / Iceberg / Hudi 的分区增量构建和分区透明改写。Doris 自 2.1 版本支持异步物化视图功能开始。经过多个版本的迭代。已经支持了非常多有价值的特性。包括：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="lakehouse.PNG" src="https://oscimg.oschina.net/oscnet//8b9ea94aa4532f2abd02eb830a14ebf4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;3.1 版本则重点打磨湖仓一体方向上的功能，全面支持主流的数据湖表格式 Paimon / Iceberg / Hudi 的分区刷新，和透明改写时的外部数据源分区补偿。使其成为联通湖和仓之间的高速公路。具体支持范围详见下表：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="lakehouse-2.PNG" src="https://oscimg.oschina.net/oscnet//f186dc9cba936323728be249dd42bdc3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;Iceberg / Paimon 能力全面扩充&lt;/h3&gt; 
&lt;h4&gt;Iceberg&lt;/h4&gt; 
&lt;p&gt;3.1.0 版本针对 Iceberg 表格式上做出多项优化和能力增强，紧密推进与 Iceberg 最新特性的融合。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;支持 Branch / Tag 完整生命周期管理&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;从 3.1.0 开始，Doris 原生支持 Iceberg Branch &amp;amp; Tag 的创建、删除、读取与写入操作。该功能能够让用户像 Git 一样操作和管理 Iceberg 表数据。这一能力为 Iceberg 表格式的多版本并行管理、灰度测试、环境隔离等业务场景提供了原生的支持，无需额外引擎或自定义逻辑。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- 创建分支
ALTER TABLE iceberg_tbl CREATE BRANCH b1;
-- 写入数据到指定分支
INSERT INTO iceberg_tbl@branch(b1) values(1, 2);
-- 查询指定分支
SELECT * FROM iceberg_tbl@branch(b1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;丰富的 Iceberg 系统表支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1.0 新增对 Iceberg &lt;code&gt;$entries&lt;/code&gt;， &lt;code&gt;$files&lt;/code&gt;， &lt;code&gt;$history&lt;/code&gt;， &lt;code&gt;$manifests&lt;/code&gt;， &lt;code&gt;$refs&lt;/code&gt;， &lt;code&gt;$snapshots&lt;/code&gt; 等系统表的支持，可用 &lt;code&gt;SELECT * FROM iceberg_table$history&lt;/code&gt;、&lt;code&gt;…$refs&lt;/code&gt; 等语句直接查询 Iceberg 的底层 metadata、snapshot 列表、分支/标签信息等，从而深入了解数据文件的组织结构、快照的变更历史以及分支的映射情况。这种能力大大提升了 Iceberg 元数据的可观测性，使得问题定位、调优分析和治理决策更加直观、透明。&lt;/p&gt; 
&lt;p&gt;如通过系统表查看 delete file 数量：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;SELECT
  CASE
    WHEN content = 0 THEN 'DataFile'
    WHEN content = 1 THEN 'PositionDeleteFile'
    WHEN content = 2 THEN 'EqualityDeleteFile'
    ELSE 'Unknown'
  END AS ContentType,
  COUNT(*) AS FileNum,
  SUM(file_size_in_bytes) AS SizeInBytes,
  SUM(record_count) AS Records
FROM
  iceberg_table$files
GROUP BY
  ContentType;

+--------------------+---------+-------------+---------+
| ContentType        | FileNum | SizeInBytes | Records |
+--------------------+---------+-------------+---------+
| EqualityDeleteFile |    2787 |     1432518 |   27870 |
| DataFile           |    2787 |     4062416 |   38760 |
| PositionDeleteFile |      11 |       36608 |   10890 |
+--------------------+---------+-------------+---------+
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Iceberg 视图查询&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1.0 版本新增对 Iceberg 逻辑视图的访问和查询。该功能进一步提升了 Doris 对 Iceberg 功能的完善程度。在后续 3 位版本迭代中，我们将进一步支持 Iceberg View 的 SQL 方言转换能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;通过 ALTER 语句修改 Iceberg 表结构&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1.0 支持通过 &lt;code&gt;ALTER TABLE&lt;/code&gt; 语句对 Iceberg 表进行字段的新增、删除、重命名和重排序操作。该功能进一步完善了 Doris 对 Iceberg 表的管理能力，无需再借助 Spark 等第三方引擎进行 Iceberg 表管理。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;ALTER TABLE iceberg_table
ADD COLUMN new_col int;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;同时，在 3.1.0 版本中，Iceberg 的依赖版本升级到 1.9.2，以便更好的支持 Iceberg 的新的功能。在后续 3.1 的迭代版本中，我们将进一步增强 Iceberg 的表管理能力，包括数据合并、分支演进等能力。&lt;/p&gt; 
&lt;p&gt;详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fcatalogs%2Ficeberg-catalog" target="_blank"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Paimon&lt;/h4&gt; 
&lt;p&gt;3.1.0 版本针对 Paimon 表格式，结合用户实际场景，进行了多项功能更新和能力增强。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;支持 Paimon Batch Incremental Query&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1.0 版本支持读取 Paimon 表指定的两个快照之间的增量数据。该功能增强了用户对 Paimon 表增量数据的访问能力。尤其是在增量物化视图构建方面，基于此功能实现了 Paimon 表的增量聚合物化视图能力。详见物化视图方面的说明。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;SELECT * FROM paimon_tbl@incr('startSnapshotId'='2', 'endSnapshotId'='5');
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;支持 Branch / Tag 读取&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;从 3.1.0 开始，Doris 支持对 Paimon 表的 Branch / Tag 进行读取，帮助用户更灵活的访问多版本的 Paimon 数据。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;SELECT * FROM paimon_tbl@branch(branch1);
SELECT * FROM paimon_tbl@tag(tag1);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;丰富的 Paimon 系统表支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;同 Iceberg 一样，3.1.0 新增对 Paimon &lt;code&gt;$files&lt;/code&gt;， &lt;code&gt;$partitions&lt;/code&gt;， &lt;code&gt;$manifests&lt;/code&gt;， &lt;code&gt;$tags&lt;/code&gt;， &lt;code&gt;$snapshots&lt;/code&gt; 等系统表的支持，可用 &lt;code&gt;SELECT * FROM partition_table$files&lt;/code&gt; 等语句直接查询 Paimon 的底层元数据信息。更方便用户对 Paimon 表进行探测、调试和优化。&lt;/p&gt; 
&lt;p&gt;如我们可以通过系统表统计分区新增数据文件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;SELECT
  partition,
  COUNT(*) AS new_file_count,
  SUM(file_size_in_bytes)/1024/1024 AS new_total_size_mb
FROM my_table$files
WHERE creation_time &amp;gt;= DATE_SUB(NOW(), INTERVAL 3 DAY)
GROUP BY partition
ORDER BY new_total_size_mb DESC;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在 3.1.0 版本中，Paimon 的依赖版本升级到 1.1.1，以便更好的支持 Paimon 的新的功能。&lt;/p&gt; 
&lt;p&gt;详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fcatalogs%2Fpaimon-catalog" target="_blank"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;数据湖查询性能更上一层楼&lt;/h3&gt; 
&lt;p&gt;3.1.0 版本，针对数据湖表格式的查询性能进行了多项深度优化，旨在实际生产环境下，为用户提供更加稳定、高效的数据湖分析能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;动态分区裁剪&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;动态分区裁剪功能，能够在多表关联查询场景下，根据右表数据生成分区列谓词，并对左表数据进行运行时的分区剪枝，从而减少数据 IO，提升查询性能。在 3.0 版本中，Doris 已经支持了 Hive 表的动态分区裁剪功能。在 3.1.0 版本中，这个功能进一步扩充到了 Iceberg、Paimon 和 Hudi 表上。在测试场景下，针对选择率较高的查询，&lt;strong&gt;可以提升 30%-40% 的性能。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;批量分片执行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;当湖表的数据分片较多时，如果 FE 进行规划并将所有分片信息一次性组装完成发送给 BE，那么可能造成 FE 内存消耗过大以及处理实际过长的问题。尤其是在查询大数据量表时，会导致规划部分的资源开销大耗时长。批量分片执行功能，通过分批次生产数据分片信息，并且边生产变执行，能够有效缓解 FE 的内存开销，同时能够让分片信息的生产和执行并行执行，提升整体的执行效率。在 3.0 版本中，Doris 已经支持了 Hive 表上的该功能。在 3.1.0 版本中，进一步增加了对 Iceberg 表的批量分片执行支持。在大数据量测试场景下，可以显著降低 FE 的内存开销和查询规划时间。&lt;/p&gt; 
&lt;h3&gt;联邦分析 - 连接器更好用更多样&lt;/h3&gt; 
&lt;p&gt;3.1 版本重构了各个数据源的连接属性，不仅能够以更加清晰的方式对接各类元数据服务和数据存储系统，同时还支持了更加丰富的连接能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Iceberg Rest Catalog&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1 版本进一步增强了对 Iceberg Rest Catalog 的支持。不仅支持了包括 Unity、Polaris、Gravitino、Glue 等多种 Iceberg Rest Catalog 后端实现，同时支持了 vended credentials 功能，能够更加安全、灵活的管理访问凭证。目前支持 AWS 平台，后续小版本迭代中将陆续支持 GCP、Azure 等云平台的凭证管理。&lt;/p&gt; 
&lt;p&gt;详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fmetastores%2Ficeberg-rest" target="_blank"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;支持 Paimon Rest Catalog&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1.0 版本中支持基于阿里云 DLF 的 Paimon Rest Catalog，可以直接访问新版本 DLF 管理的 Paimon 表数据。&lt;/p&gt; 
&lt;p&gt;详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fbest-practices%2Fdoris-dlf-paimon" target="_blank"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;多 Kerberos 环境支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3.1 版本允许用户在同一个 Doris 集群内访问不同的 Kerberos 认证环境。不同的 Kerberos 环境可能采用不同的 KDC 服务、Principal 以及对应的 Keytab。新版本允许针对不同的 Catalog，配置不同的 Kerberos 认证信息，并且相互之间不受干扰。该功能极大的方便了拥有多套 Kerberos 认证环境的用户，可以使用 Doris 进行统一的访问管理。&lt;/p&gt; 
&lt;p&gt;详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fstorages%2Fhdfs%23kerberos-authentication" target="_blank"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;多 Hadoop 环境支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在之前的版本中，Doris 只允许用户在 conf 目录下放置一套 hadoop 集群的配置文件（hive-site.xml，hdfs-site.xml 等）。如果用户有多套不同的 Hadoop 环境和配置，则无法支持。新版本运行用户为不同的 Catalog 指定不同的 Hadoop 配置文件，帮助用户更灵活的管理外部数据源。&lt;/p&gt; 
&lt;p&gt;详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fstorages%2Fhdfs%23kerberos-authentication" target="_blank"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;四、存储层构持续打磨&lt;/h2&gt; 
&lt;p&gt;在 3.1 版本中，我们对存储层也进行了持续的打磨，性能和稳定性都有了显著的提升。&lt;/p&gt; 
&lt;h3&gt;灵活列更新 - 数据更新全新体验&lt;/h3&gt; 
&lt;p&gt;此前 Doris 的部分列更新功能要求一次导入中每一行必须更新相同的列。在一些场景下，源端系统输出的记录往往只包含主键和被更新的列，不同行更新的列可能不同。为了解决这种需求，Doris 引入了 &lt;strong&gt;灵活列更新&lt;/strong&gt; 功能，使用灵活列更新可以大幅简化用户侧按列攒数据的工作以及提升写入性能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;使用方式&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;创建 &lt;strong&gt;Merge-on-Write Unique 表&lt;/strong&gt; 时，在表属性中开启：&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"enable_unique_key_skip_bitmap_column" = "true"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;在导入时指定导入模式：&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unique_key_update_mode: UPDATE_FLEXIBLE_COLUMNS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Doris 会自动完成灵活列更新与数据补齐。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt; 支持在一次导入中对不同记录更新不同的列，例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;删除某行（&lt;code&gt;DORIS_DELETE_SIGN&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;更新部分列（如 &lt;code&gt;v1&lt;/code&gt;、&lt;code&gt;v2&lt;/code&gt;、&lt;code&gt;v5&lt;/code&gt; 等）&lt;/li&gt; 
 &lt;li&gt;插入新行（仅提供主键和被更新列，其他列使用默认值或补齐历史值）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;效果&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在测试环境下（1 FE + 4 BE，16C 64GB，3 亿行 101 列数据，3 副本行存表）： 
  &lt;ul&gt; 
   &lt;li&gt;每次导入 20,000 行，仅更新 1 列（需补齐 99 列）&lt;/li&gt; 
   &lt;li&gt;单并发导入性能可达 &lt;strong&gt;10.4k 行/s&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;单机资源占用：CPU ～60%，内存 ～30GB，读 IOPS ～7.5k/s，写 IOPS ～5k/s&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;存算分离 mow 锁优化&lt;/h3&gt; 
&lt;p&gt;在存算分离场景下，MOW 表更新 Delete Bitmap 需要获取分布式锁 &lt;code&gt;delete_bitmap_update_lock&lt;/code&gt;。原有实现中，导入、Compaction 和 Schema Change 会竞争该锁，容易在高并发导入场景下导致长时间等待甚至失败。&lt;/p&gt; 
&lt;p&gt;本次优化包括两方面：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;减少 Compaction 持锁时间&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;通过引入新的 &lt;code&gt;mow_tablet_compaction_key&lt;/code&gt;，避免多个 Compaction/Schema Change 任务在更新 &lt;code&gt;initiators&lt;/code&gt; 列表时产生不必要的事务冲突。&lt;/li&gt; 
 &lt;li&gt;在多 Tablet 高并发导入测试中，导入提交事务的 &lt;strong&gt;p99 平均耗时从 1.68 分钟降低到 49.4 秒&lt;/strong&gt;，大幅降低了事务提交延迟。&lt;/li&gt; 
 &lt;li&gt;新增配置项 &lt;code&gt;delete_bitmap_lock_v2_white_list&lt;/code&gt;，支持为指定仓库开启该优化。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;降低导入事务长尾延迟&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加 FE 配置 &lt;code&gt;mow_load_force_take_ms_lock_threshold_ms&lt;/code&gt;，当导入事务等待锁超过阈值时，将强制获取分布式锁，避免长时间饥饿。&lt;/li&gt; 
 &lt;li&gt;在高并发导入测试下，该优化显著减少了导入事务的长尾延迟。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;五、查询性能提升&lt;/h2&gt; 
&lt;h3&gt;分区裁剪性能和适用范围提升&lt;/h3&gt; 
&lt;p&gt;Doris 支持数据按照分区组织，这些分区可以独立存储、独立查询、独立管理。通过分区，可以提升查询性能、优化数据管理，并降低资源消耗。在查询过程中，通过使用过滤条件，提前过滤无需查询的分区，可以显著提升查询性能，降低系统资源消耗。在日志数据分析系统，风控系统等使用场景中，单表可能存在万级别甚至十万级别的分区数量，而通常单词查询，只会命中百级别以下的分区数据。对于在这类数据上的查询，能否分区裁剪，对于查询性能的影响十分显著。&lt;/p&gt; 
&lt;p&gt;在 3.1 版本中，Doris 通过引入一系列的优化，显著提升了分区裁剪的性能和适用范围，包括&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;分区裁剪二分查找。对于在时间列上的分区，通过将分区按照列值排序，将分区裁剪的计算从线性遍历，改为二分查找。在使用 DATETIME 类型作为分区字段，13.6 万分区数的场景下。实测分区裁剪的耗时，从 724ms 提升到 43ms。提升超过 16 倍。&lt;/li&gt; 
 &lt;li&gt;增加大量单调函数参与分区裁剪。在实际的使用场景中，在时间分区列上的过滤条件，通常不是简单的逻辑比较，而是在分区列上包含时间函数计算的复杂表达式。如：&lt;code&gt;to_date(time_stamp) &amp;gt; '2022-12-22&lt;/code&gt;'，&lt;code&gt;date_format(timestamp,'%Y-%m-%d %H:%i:%s') &amp;gt; '2022-12-22 11:00:00'&lt;/code&gt;等。Doris 在 3.1 版本中引入了函数单调特性描述，当函数为单调函数时，可以通过计算分区边界值是否可以被裁剪得知整个分区是否可以被裁剪。在 3.1 版本中，已经支持了 CAST 和 25 个常见的时间相关的函数。可以覆盖绝大多数常见的时间类型分区列上的过滤条件。&lt;/li&gt; 
 &lt;li&gt;此外，3.1 版本中，还对分区裁剪的全路径代码做了许多代码级别的详细优化，减少了不必要开销。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;洞察数据特征 - 获得性能 10 倍的潜力&lt;/h3&gt; 
&lt;p&gt;在 3.1 中，优化器可以更聪明的使用数据特征对查询进行优化。优化器会执行计划树种各个节点的收集唯一性（Unique）、均一性（Uniform），等值集（Equal Set）等数据特征，并推导列之间的函数依赖关系。当在特定的节点，数据符合特定特征时，可以移除不必要的连接、聚合或排序计算，显著提升查询性能。&lt;/p&gt; 
&lt;p&gt;在针对特定优化构建的测试用例下，利用数据特征可以获得超过 10 倍的性能提升，详见下表：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="query-performance.PNG" src="https://oscimg.oschina.net/oscnet//3bf8bd362c3e994af570eda7aa49c09b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;六、功能改进&lt;/h2&gt; 
&lt;h3&gt;半结构化&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;VARIANT&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 &lt;code&gt;variant_type(x)&lt;/code&gt;函数：返回 Variant 子 field 对应的「当前实际类型」。&lt;/li&gt; 
 &lt;li&gt;新增 ComputeSignature/Helper，增强函数参数/返回类型推断能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;STRUCT&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持使用 Schema Change 为 STRUCT 类型增加子列&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;湖仓一体&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持在 Catalog 级别设置元数据缓存策略，如缓存过期时间等。帮助用户根据需求灵活调整数据时效性和元数据访问性能。详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Flakehouse%2Fmeta-cache" target="_blank"&gt;文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 &lt;code&gt;FILE()&lt;/code&gt; 表函数（Table Valued Function），该表函数是原有的 &lt;code&gt;S3()&lt;/code&gt;，&lt;code&gt;HDFS()&lt;/code&gt;，&lt;code&gt;LOCAL()&lt;/code&gt;表函数的集合，方便用户使用和理解。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;聚合算子能力增强&lt;/h3&gt; 
&lt;p&gt;在 3.1 版本中，优化器重点增强了聚合算子。支持了两个使用较为广泛的能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;非标 GROUP BY 支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;对于标准的聚合查询，要求聚合输出的标量表达式，其本身或其子树必须是聚合键。但在 MySQL 中，当设置了 SQL_MODE 不包含 "ONLY_FULL_GROUP_BY" 时，则没有次限制。详见 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F8.4%2Fen%2Fsql-mode.html%23sqlmode_only_full_group_by" target="_blank"&gt;MySQL 文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;此时，此列输出的值为聚合键对应多行中的任意一行计算的值。举例如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;-- 非标 GROUP BY
SELECT c1, c2 FROM t GROUP BY c1
-- 等价于
SELECT c1, any_value(c2) FROM t GROUP BY c1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在 3.1 版本中。Doris 在 SQL_MODE 中默认开启 "ONLY_FULL_GROUP_BY" ，即和之前的行为保持一致。如果需要使用非标 GROUP BY 功能。则可以通过如下设置开启：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;set sql_mode = replace(@@sql_mode, 'ONLY_FULL_GROUP_BY', '');
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;多 distinct 聚合支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在之前的版本中，如果聚合查询中，包含多个 distinct 聚合函数，且他们的参数不一致。同时聚合函数的 distinct 语义和非 distinct 语义不一致，且不是以下之一，则 Doris 无法执行查询：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;单参数的 COUNT&lt;/li&gt; 
 &lt;li&gt;SUM&lt;/li&gt; 
 &lt;li&gt;AVG&lt;/li&gt; 
 &lt;li&gt;GROUP_CONCAT&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在 3.1 版本中，Doris 对此方面进行了加强。现在这些查询可以正常执行并获取结果。例如：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-SQL"&gt;SELECT count(DISTINCT c1,c2), count(DISTINCT c2,c3), count(DISTINCT c3) FROM t;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;连接协议增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;开启 Proxy Protocol 协议后，依然可以通过非该协议的客户端连接。该改进在负载均衡 IP 透传场景下，方便用户更灵活的连接 Doris。&lt;/li&gt; 
 &lt;li&gt;查询 VIEW 时，JDBC 的元数据接口 ResultSetMetaData#getColumnName 可以正确的返回 VIEW 中的列名&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;七、行为变更&lt;/h2&gt; 
&lt;h3&gt;VARIANT&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;variant_max_subcolumns_count&lt;/code&gt; 约束 
  &lt;ul&gt; 
   &lt;li&gt;同一张表中，所有 Variant 列的 &lt;code&gt;variant_max_subcolumns_count&lt;/code&gt; 必须「要么全为 0，要么全为 &amp;gt; 0」。混用会在建表 / Schema Change 时报错。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;新的 Variant 读写/serde 与 Compaction 路径对旧数据兼容。老版本 Variant 升级上来查询格式会产生差异（比如多一些空格、或是&lt;code&gt;。&lt;/code&gt;分隔符导致层级构建，产生额外的层级）&lt;/li&gt; 
 &lt;li&gt;创建 Variant 倒排索引，如果数据中所有字段不符合索引条件也会生成空索引文件，属预期行为&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;权限&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;show transcation 的权限需求从拥有 ADMIN_PRIV 权限，变更为拥有导入对应数据库的 LOAD_PRIV 权限&lt;/li&gt; 
 &lt;li&gt;统一了 SHOW FRONTENDS / BACKENDS 和 NODE Restful API 的权限。现在这些接口的权限需求为拥有 information_schema 库的 SELECT_PRIV 权限。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;立刻开启 3.1&lt;/h2&gt; 
&lt;p&gt;在 3.1 版本正式发布之前，半结构化和数据湖的多个能力已经经过真实线上场景的验证，并获得了符合预期的性能提升。推荐有相应能力需求的用户下载尝鲜。&lt;/p&gt; 
&lt;h2&gt;致谢&lt;/h2&gt; 
&lt;p&gt;在此，再次向所有参与版本研发、测试和需求反馈的贡献者们表示最衷心的感谢：&lt;/p&gt; 
&lt;p&gt;@924060929 @airborne12 @amorynan @BePPPower @BiteTheDDDDt @bobhan1 @CalvinKirs @cambyzju @cjj2010 @csun5285 @DarvenDuan @dataroaring @deardeng @dtkavin @dwdwqfwe @eldenmoon @englefly @feifeifeimoon @feiniaofeiafei @felixwluo @freemandealer @Gabriel39 @gavinchou @ghkang98 @gnehil @gohalo @HappenLee @heguanhui @hello-stephen @HonestManXin @htyoung @hubgeter @hust-hhb @jacktengg @jeffreys-cat @Jibing-Li @JNSimba @kaijchen @kaka11chen @KeeProMise @koarz @liaoxin01 @liujiwen-up @liutang123 @luwei16 @MoanasDaddyXu @morningman @morrySnow @mrhhsg @Mryange @mymeiyi @nsivarajan @qidaye @qzsee @Ryan19929 @seawinde @shuke987 @sollhui @starocean999 @suxiaogang223 @SWJTU-ZhangLei @TangSiyang2001 @Vallishp @vinlee19 @w41ter @wangbo @wenzhenghu @wumeibanfa @wuwenchi @wyxxxcat @xiedeyantu @xinyiZzz @XLPE @XnY-wei @XueYuhai @xy720 @yagagagaga @Yao-MR @yiguolei @yoock @yujun777 @Yukang-Lian @Yulei-Yang @yx-keith @Z-SWEI @zclllyybb @zddr @zfr9527 @zgxme @zhangm365 @zhangstar333 @zhaorongsheng @zhiqiang-hhhh @zy-kkk @zzzxl1993&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371320</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371320</guid>
      <pubDate>Sun, 07 Sep 2025 06:58:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Countly 25.03.19 发布，实时移动和 Web 分析报告平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;实时移动和 Web 分析报告平台 Countly&amp;nbsp;25.03.19 现已发布。具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Enterprise Fixes&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[home] 修复主页下载渲染问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;journeys&lt;/span&gt;&lt;span style="color:#000000"&gt;] 修复保存 &lt;/span&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;journeys&amp;nbsp;&lt;/span&gt;&lt;span style="color:#000000"&gt;时处理跳过阈值的问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;journeys&lt;/span&gt;&lt;span style="color:#000000"&gt;] 优化&amp;nbsp;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;journeys&amp;nbsp;&lt;/span&gt;&lt;span style="color:#000000"&gt;stat user list&amp;nbsp;和 UI 错误修复&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Dependencies：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 express-rate-limit 从 8.0.1 升级至 8.1.0&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 mongodb 从 6.18.0 升级到 6.19.0&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 nodemailer 从 7.0.5 升级到 7.0.6&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 puppeteer 从 24.17.0 升级到 24.19.0&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 sass 从 1.90.0 升级到 1.92.1&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCountly%2Fcountly-server%2Freleases%2Ftag%2F25.03.19" target="_blank"&gt;https://github.com/Countly/countly-server/releases/tag/25.03.19&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371315/countly-25-03-19-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371315/countly-25-03-19-released</guid>
      <pubDate>Sun, 07 Sep 2025 06:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>NativeScript 8.9.9 发布，跨平台原生应用框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;NativeScript 8.9.9 现已发布。NativeScript 使用户能够直接从 JavaScript 访问&amp;nbsp;native API。目前，该框架为丰富的移动开发提供了 iOS 和 Android 运行时，并可用于多种不同的用例。&lt;/span&gt;&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;TextField：&lt;/strong&gt;十进制键盘类型（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fpull%2F10789" target="_blank"&gt;#10789&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;iOS 26 类型改进（ActionBar、Switch）+ .ns-{platform}-{sdkVersion} css root scoping（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fpull%2F10775" target="_blank"&gt;#10775&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;修复&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;android：&lt;/strong&gt;带有 target name 的 shared element 已添加到事务中（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Fpull%2F10793" target="_blank"&gt;#10793&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNativeScript%2FNativeScript%2Freleases%2Ftag%2F8.9.9-core" target="_blank"&gt;https://github.com/NativeScript/NativeScript/releases/tag/8.9.9-core&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371285/nativescript-8-9-9-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371285/nativescript-8-9-9-released</guid>
      <pubDate>Sun, 07 Sep 2025 03:53:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Vue 低代码可视化表单设计器 FcDesigner v3.3.1 版本发布！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;FcDesigner 版是一款基于 Vue 的低代码可视化表单设计器工具，通过数据驱动表单渲染。可以通过拖拽的方式快速创建表单，提高开发者对表单的开发效率，节省开发者的时间。并广泛应用于在政务系统、OA 系统、ERP 系统、电商系统、流程管理等领域。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;源码地址:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxaboy%2Fform-create-designer" target="_blank"&gt;Github&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/xaboy/form-create-designer"&gt;Gitee&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2F" target="_blank"&gt;文档&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fform-create.com%2Fv3%2Fdesigner%2F" target="_blank"&gt;在线演示&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;核心功能🔥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;内置表单多语言体系，轻松打破语言隔阂。&lt;/li&gt; 
 &lt;li&gt;提供 30+ 常用组件，涵盖表单组件、布局组件、辅助类组件等各类实用模块。&lt;/li&gt; 
 &lt;li&gt;支持灵活扩展自定义组件，个性化开发轻松拿捏。支持二次扩展开发，深度定制不在话下。&lt;/li&gt; 
 &lt;li&gt;支持组件样式配置，动态调整组件尺寸、颜色、间距等样式属性。&lt;/li&gt; 
 &lt;li&gt;支持事件交互配置，灵活配置组件事件响应逻辑，实现复杂交互场景。&lt;/li&gt; 
 &lt;li&gt;表单大纲、操作记录、数据录入、组件生成、事件配置、表单验证、栅格布局、表格布局等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ 新增功能:&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Fupdate%2Fvue3%2F3.3.1%23%25E2%259C%25A8-%25E6%2596%25B0%25E5%25A2%259E%25E5%258A%259F%25E8%2583%25BD" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;样式配置中增加字体和位置&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="668" src="https://oscimg.oschina.net/oscnet/up-921f53b5d4ebae1a45bb81128bea5e12e2d.png" width="2130" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;config 增加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;hiddenFormConfig&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;disabledFormConfig&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置项控制表单配置项的显示和禁用状态&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;config 增加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;validateOnlyRequired&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置项, 组件的验证模块是否只显示必填&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;增加全局的菜单和拖拽规则导入方法,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;FcDesigner.addMenu&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;FcDesigner.addDragRule&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;code&gt;config&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;增加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;nameReadonly&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置项, 控制编号是否可以编辑&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 功能优化:&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Fupdate%2Fvue3%2F3.3.1%23%25F0%259F%2594%25A7-%25E5%258A%259F%25E8%2583%25BD%25E4%25BC%2598%25E5%258C%2596" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;select 组件增加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;placeholder&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置项 (vant)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;code&gt;tableOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;treeOptions&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件支持禁用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;优化内置菜单加载逻辑&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;粘贴组件时默认重置 field 和 name(不兼容的更新)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;隔离组件的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;hook&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置执行&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🐞 问题修复：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Fupdate%2Fvue3%2F3.3.1%23%25F0%259F%2590%259E-%25E9%2597%25AE%25E9%25A2%2598%25E4%25BF%25AE%25E5%25A4%258D" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;✅ 修复组件事件删除后,不能重新添加的问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;✅ 修复 html 内容保存时可能报错问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;✅ 修复 showControl 配置项失效问题&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;✅ 修复栅格中组件移动时可能报错问题 (Vue2)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Element UI 版本表单设计器&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="930" src="https://oscimg.oschina.net/oscnet/up-6810fa75de9133a0d935e8d2b4bdde2ba79.png" width="1800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;本项目采用 Vue2.7 和 Element UI 进行页面构建，内置多语言解决方案，支持二次扩展开发，支持自定义组件扩展。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.form-create.com%2Fdesigner%2F" target="_blank"&gt;演示站&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;要开始使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;@form-create/designer&lt;/strong&gt;，首先需要将其安装到您的项目中。可以通过 npm 安装：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/designer@^&lt;span&gt;1&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-ui@^&lt;span&gt;2.7&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; &lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-ui&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如已安装旧版本渲染器，请执行以下命令更新至最新版：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;&lt;span style="background-color:inherit"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt; &lt;span style="color:#d73a49"&gt;update&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;ui&lt;/span&gt;@^&lt;span style="color:#d73a49"&gt;2&lt;/span&gt;.&lt;span style="color:#d73a49"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;请检查当前 Vue 版本，若版本低于 2.7，请执行以下升级命令：&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;&lt;span style="background-color:inherit"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt; &lt;span style="color:#d73a49"&gt;update&lt;/span&gt; &lt;span style="color:#d73a49"&gt;vue&lt;/span&gt;@^&lt;span style="color:#d73a49"&gt;2&lt;/span&gt;.&lt;span style="color:#d73a49"&gt;7&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;引入&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Node.js 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;对于 Node.js 项目，您需要通过 npm 安装相关依赖，并在您的项目中引入并配置它们。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; Vue &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vue'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; FcDesigner &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'@form-create/designer'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; ELEMENT &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'element-ui'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; &lt;span style="color:#032f62"&gt;'element-ui/lib/theme-chalk/index.css'&lt;/span&gt;;
&lt;span style="color:#6a737d"&gt;// 使用 Element UI&lt;/span&gt;
Vue.use(ELEMENT);
&lt;span style="color:#6a737d"&gt;// 使用 form-create 和 designer&lt;/span&gt;
Vue.use(FcDesigner);
Vue.use(FcDesigner.formCreate);&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;CDN 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如果您希望通过 CDN 方式引入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;FcDesigner&lt;/strong&gt;，请确保先引入 Vue.js 和 Element UI。然后引入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;@form-create/element-ui&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;@form-create/designer&lt;/strong&gt;，并在 Vue 实例中进行配置&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Vue.js --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/vue@2.7.16/dist/vue.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Element UI 样式 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;link&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;rel&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"stylesheet"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;href&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/element-ui/lib/theme-chalk/index.css"&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Element UI --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/element-ui/lib/index.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 form-create 和 designer --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/element-ui/dist/form-create.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/designer/dist/index.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;div&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;id&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"app"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    Vue.use(FcDesigner);
    Vue.use(FcDesigner.formCreate);
    &lt;span style="color:#d73a49"&gt;new&lt;/span&gt; Vue().$mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;在 Vue 组件中，您可以像下面这样使用 fc-designer 组件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="background-color:inherit"&gt;&lt;span style="color:navy"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:navy"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="background-color:inherit"&gt;&lt;span style="color:navy"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:navy"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:teal"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;ref&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#dd1144"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"designer"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:teal"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#dd1144"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; /&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:navy"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Element Plus 版本表单设计器&lt;/h1&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;@form-create/designer 支持 Vue 3 环境，以下是如何在 Vue 3 项目中安装和使用该库的指南。&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.form-create.com%2Fvue3%2Fdesigner%2F" target="_blank"&gt;演示站&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;首先，安装&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;@form-create/designer&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的 Vue 3 版本&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/designer@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-ui@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; &lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-plus&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如已安装旧版本渲染器，请执行以下命令更新至最新版：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;&lt;span style="background-color:inherit"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt; &lt;span style="color:#d73a49"&gt;update&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;ui&lt;/span&gt;@^&lt;span style="color:#d73a49"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;引入&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Node.js 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;对于使用 Node.js 的项目，按照以下步骤在您的 Vue 3 项目中引入并配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; { createApp } &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vue'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; FcDesigner &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'@form-create/designer'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; ElementPlus &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'element-plus'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; &lt;span style="color:#032f62"&gt;'element-plus/dist/index.css'&lt;/span&gt;;
&lt;span style="color:#6a737d"&gt;// 创建 Vue 应用&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;const&lt;/span&gt; app = createApp(App);
&lt;span style="color:#6a737d"&gt;// 使用 Element Plus 和 FcDesigner&lt;/span&gt;
app.use(ElementPlus);
app.use(FcDesigner);
app.use(FcDesigner.formCreate);
&lt;span style="color:#6a737d"&gt;// 挂载应用&lt;/span&gt;
app.mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;CDN 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如果您选择使用 CDN，可以按照以下步骤在 HTML 文件中引入相关依赖：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Element Plus 样式 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;link&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;href&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/element-plus/dist/index.css"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;rel&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"stylesheet"&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Vue 3 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/vue"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Element Plus --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/element-plus/dist/index.full.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 form-create 和 designer --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/element-ui@next/dist/form-create.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/designer@next/dist/index.umd.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;div&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;id&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"app"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; { createApp } = Vue;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; app = createApp({});
    app.use(ElementPlus);
    app.use(FcDesigner);
    app.use(FcDesigner.formCreate);
    app.mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;在 Vue 3 组件中，您可以通过以下方式使用 fc-designer 组件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;ref&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"designer"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;setup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    &lt;span style="color:#d73a49"&gt;import&lt;/span&gt; { ref } &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vue'&lt;/span&gt;;
    &lt;span style="color:#6a737d"&gt;// 可以在此处获取设计器实例或进行其他操作&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; designer = ref(&lt;span style="color:#005cc5"&gt;null&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;AntDesignVue 版本 PC 端表单设计器&lt;/h1&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fform-create.com%2Fv3%2Fantd%2Fdesigner%2F" target="_blank"&gt;演示站&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;本项目采用 Vue3.0 和 Ant Design Vue 进行页面构建，内置多语言解决方案，支持二次扩展开发，支持自定义组件扩展。&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//ebbe75a61ba6e5f09589e76dec7c91ec.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;首先，安装&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;@form-create/antd-designer&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/antd-designer@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/ant-design-vue@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; ant-design-vue&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如已安装旧版本渲染器，请执行以下命令更新至最新版：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;&lt;span style="background-color:inherit"&gt;&lt;span style="color:#d73a49"&gt;npm&lt;/span&gt; &lt;span style="color:#d73a49"&gt;update&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;ant&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;design&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;vue&lt;/span&gt;@^&lt;span style="color:#d73a49"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;引入&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Node.js 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;对于使用 Node.js 的项目，按照以下步骤在您的 Vue 3 项目中引入并配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; FcDesigner &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'@form-create/antd-designer'&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; antd &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'ant-design-vue'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; &lt;span style="color:#032f62"&gt;'ant-design-vue/dist/reset.css'&lt;/span&gt;;
&lt;span style="color:#6a737d"&gt;// 创建 Vue 应用&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;const&lt;/span&gt; app = createApp(App);
app.use(antd)
app.use(FcDesigner)
app.use(FcDesigner.formCreate)
&lt;span style="color:#6a737d"&gt;// 挂载应用&lt;/span&gt;
app.mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;CDN 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如果您选择使用 CDN，可以按照以下步骤在 HTML 文件中引入相关依赖：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;link&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;rel&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"stylesheet"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;href&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/ant-design-vue@4/dist/reset.css"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;link&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;link&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;rel&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"stylesheet"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;href&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://fastly.jsdelivr.net/npm/vant@4/lib/index.css"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;link&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 Vue 及所需组件 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/dayjs.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/customParseFormat.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/weekday.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/localeData.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/weekOfYear.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/weekYear.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/advancedFormat.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/dayjs/plugin/quarterOfYear.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/vue"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/ant-design-vue@4/dist/antd.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://fastly.jsdelivr.net/npm/vant@4/lib/vant.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;


&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 引入 form-create 及 fcDesigner --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/ant-design-vue@^3/dist/form-create.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/vant@^3/dist/form-create.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/antd-designer@^3/dist/index.umd.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;


&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;div&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;id&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"app"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 挂载组件 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    &lt;span style="color:#6a737d"&gt;// 创建 Vue 应用实例&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; app = Vue.createApp({});
    &lt;span style="color:#6a737d"&gt;// 挂载 AntDesignVue&lt;/span&gt;
    app.use(antd);
    &lt;span style="color:#6a737d"&gt;// 挂载 fcDesignerPro 组件&lt;/span&gt;
    app.use(FcDesigner);
    &lt;span style="color:#6a737d"&gt;// 挂载 formCreate&lt;/span&gt;
    app.use(FcDesigner.formCreate);
    &lt;span style="color:#6a737d"&gt;// 挂载 Vue 应用&lt;/span&gt;
    app.mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;在 Vue 3 组件中，您可以通过以下方式使用 fc-designer 组件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;ref&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"designer"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;setup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    &lt;span style="color:#d73a49"&gt;import&lt;/span&gt; { ref } &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vue'&lt;/span&gt;;
    &lt;span style="color:#6a737d"&gt;// 可以在此处获取设计器实例或进行其他操作&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; designer = ref(&lt;span style="color:#005cc5"&gt;null&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;h1&gt;移动端表单设计器&lt;/h1&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="demo1" src="https://oscimg.oschina.net/oscnet//553df6fe6b76e08367d09a395ede86f6.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fform-create.com%2Fv3%2Fmobile%2F" target="_blank"&gt;演示站&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;本项目采用 Vue3.0 和 ElementPlus 进行移动端页面构建，移动端使用的是 vant4.0 版本，内置多语言解决方案，支持二次扩展开发，支持自定义组件扩展。&lt;/p&gt; 
&lt;h2&gt;安装&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;首先，安装&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;@form-create/vant-designer&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/vant-designer@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-ui@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/vant@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; &lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-plus
npm &lt;span style="color:#d73a49"&gt;install&lt;/span&gt; vant&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如已安装旧版本渲染器，请执行以下命令更新至最新版：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm &lt;span style="color:#d73a49"&gt;update&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/&lt;span style="color:#d73a49"&gt;element&lt;/span&gt;-ui@^&lt;span&gt;3&lt;/span&gt;
npm &lt;span style="color:#d73a49"&gt;update&lt;/span&gt; @&lt;span style="color:#d73a49"&gt;form&lt;/span&gt;-&lt;span style="color:#d73a49"&gt;create&lt;/span&gt;/vant@^&lt;span&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;引入&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Node.js 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;对于使用 Node.js 的项目，按照以下步骤在您的 Vue 3 项目中引入并配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; FcDesignerMobile &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'@form-create/vant-designer'&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; ELEMENT &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'element-plus'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; vant &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vant'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vant/lib/index.css'&lt;/span&gt;;
&lt;span style="color:#d73a49"&gt;import&lt;/span&gt; &lt;span style="color:#032f62"&gt;'element-plus/dist/index.css'&lt;/span&gt;;
&lt;span style="color:#6a737d"&gt;// 创建 Vue 应用&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;const&lt;/span&gt; app = createApp(App);
app.use(ELEMENT)
app.use(vant)
app.use(FcDesignerMobile)
app.use(FcDesignerMobile.formCreate)
&lt;span style="color:#6a737d"&gt;// 挂载应用&lt;/span&gt;
app.mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;CDN 引入&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;如果您选择使用 CDN，可以按照以下步骤在 HTML 文件中引入相关依赖：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;link&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;rel&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"stylesheet"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;href&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/element-plus/dist/index.css"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;link&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;link&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;rel&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"stylesheet"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;href&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/vant@4/lib/index.css"&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/vue"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/element-plus/dist/index.full.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/vant@4/lib/vant.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/element-ui@next/dist/form-create.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/vant@next/dist/form-create.min.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;src&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"https://unpkg.com/@form-create/vant-designer@next/dist/index.umd.js"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;div&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;id&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"app"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer-mobile&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;fc-designer-mobile&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; { createApp } = Vue;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; app = createApp({});
    app.use(ElementPlus);
    app.use(vant);
    app.use(FcDesignerMobile);
    app.use(FcDesignerMobile.formCreate);
    app.mount(&lt;span style="color:#032f62"&gt;'#app'&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;使用&lt;/h2&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;在 Vue 3 组件中，您可以通过以下方式使用 fc-designer 组件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;fc-designer-mobile&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;ref&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"designer"&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;height&lt;/span&gt;=&lt;span style="color:#032f62"&gt;"100vh"&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt; &lt;span style="color:#6f42c1"&gt;setup&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;
    &lt;span style="color:#d73a49"&gt;import&lt;/span&gt; { ref } &lt;span style="color:#d73a49"&gt;from&lt;/span&gt; &lt;span style="color:#032f62"&gt;'vue'&lt;/span&gt;;
    &lt;span style="color:#6a737d"&gt;// 可以在此处获取设计器实例或进行其他操作&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;const&lt;/span&gt; designer = ref(&lt;span style="color:#005cc5"&gt;null&lt;/span&gt;);
&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:start"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h2&gt;获取设计表单的数据&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Frender%23%25E8%258E%25B7%25E5%258F%2596%25E8%25AE%25BE%25E8%25AE%25A1%25E8%25A1%25A8%25E5%258D%2595%25E7%259A%2584%25E6%2595%25B0%25E6%258D%25AE" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;在表单设计器中，可以通过以下方法获取表单的生成规则和配置，这些数据通常会被保存到数据库中，以便后续加载和回显。&lt;/p&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//获取表单的生成规则&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;/span&gt; ruleJson = &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;this&lt;/span&gt;&lt;/span&gt;.$refs.designer.getJson();
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//获取表单的配置&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;/span&gt; optionsJson = &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;this&lt;/span&gt;&lt;/span&gt;.$refs.designer.getOptionsJson();


&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//todo 保存 JSON 数据到数据库中&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;这些数据可以用来保存到数据库中，确保表单的状态和配置可以在页面刷新或重新加载时恢复。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h2&gt;回显设计表单&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Frender%23%25E5%259B%259E%25E6%2598%25BE%25E8%25AE%25BE%25E8%25AE%25A1%25E8%25A1%25A8%25E5%258D%2595" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;当需要回显设计好的表单时，您需要加载之前保存的 JSON 规则和配置，并将其应用到设计器中。&lt;/p&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//todo 加载表单 JSON 规则&lt;/span&gt;&lt;/span&gt;


&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//回显表单&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;this&lt;/span&gt;&lt;/span&gt;.$refs.designer.setOptions(optionsJson);
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;this&lt;/span&gt;&lt;/span&gt;.$refs.designer.setRule(ruleJson);&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;通过这些方法，可以将之前保存的表单规则和配置应用到设计器中，从而恢复表单的状态。&lt;/p&gt; 
 &lt;h2&gt;表单渲染&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Frender%23%25E8%25A1%25A8%25E5%258D%2595%25E6%25B8%25B2%25E6%259F%2593-1" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;要渲染表单，您需要挂载 form-create 到 Vue 应用中，并加载表单规则和配置。&lt;/p&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//从设计器中导入 formCreate&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;/span&gt; {formCreate} &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'@form-create/designer'&lt;/span&gt;&lt;/span&gt;;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;//挂载 formCreate&lt;/span&gt;&lt;/span&gt;
app.use(formCreate);&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;表单渲染示例&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class="language-html"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;div&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"app"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
        &lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;form-create&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;v-model&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"formData"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;v-model:api&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"fApi"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;:rule&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"rule"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#6f42c1"&gt;:option&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;=&lt;/span&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#032f62"&gt;"option"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;form-create&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;div&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;template&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; {formCreate} &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#032f62"&gt;&lt;span&gt;&lt;span style="color:#032f62"&gt;'@form-create/designer'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;;
    &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;default&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; {
        data() {
            &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; {
                &lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;//实例对象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;fApi&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;: {},
                &lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;//表单数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;formData&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;: {},
                &lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;//表单生成规则&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;rule&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;: [],
                &lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;//组件参数配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;option&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;: {}
            }
        },
        beforeCreate(){
            &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; rule,option;
            &lt;/span&gt;&lt;span style="color:#6a737d"&gt;&lt;span&gt;&lt;span style="color:#6a737d"&gt;// todo 加载表单 JSON 规则&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;this&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;.rule = formCreate.parseJson(rule);
            &lt;/span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;this&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;.option = formCreate.parseJson(option);
        }
    }
&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#333333"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#22863a"&gt;&lt;span style="color:#333333"&gt;&lt;span style="color:#22863a"&gt;script&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#333333"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;h2&gt;动态加载和保存表单配置&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fview.form-create.com%2Frender%23%25E5%258A%25A8%25E6%2580%2581%25E5%258A%25A0%25E8%25BD%25BD%25E5%2592%258C%25E4%25BF%259D%25E5%25AD%2598%25E8%25A1%25A8%25E5%258D%2595%25E9%2585%258D%25E7%25BD%25AE" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;可以通过 API 请求动态加载表单规则和配置，并将表单数据保存到服务器。&lt;/p&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class="language-javascript"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;/span&gt; axios &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'axios'&lt;/span&gt;&lt;/span&gt;;


&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 加载表单配置&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;async&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;function&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;loadFormConfig&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;() &lt;/span&gt;&lt;/span&gt;{
    &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;try&lt;/span&gt;&lt;/span&gt; {
        &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;/span&gt; response = &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;await&lt;/span&gt;&lt;/span&gt; axios.get(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'/api/form-config'&lt;/span&gt;&lt;/span&gt;);
        &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;return&lt;/span&gt;&lt;/span&gt; response.data;
    } &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;catch&lt;/span&gt;&lt;/span&gt; (error) {
        &lt;span&gt;&lt;span&gt;console&lt;/span&gt;&lt;/span&gt;.error(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'加载表单配置失败'&lt;/span&gt;&lt;/span&gt;, error);
        &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;return&lt;/span&gt;&lt;/span&gt; { &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;rule&lt;/span&gt;&lt;/span&gt;: [], &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;option&lt;/span&gt;&lt;/span&gt;: {} };
    }
}


&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 保存表单配置&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;async&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;function&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;saveFormConfig&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ruleJson, optionsJson&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;) &lt;/span&gt;&lt;/span&gt;{
    &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;try&lt;/span&gt;&lt;/span&gt; {
        &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;await&lt;/span&gt;&lt;/span&gt; axios.post(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'/api/form-config'&lt;/span&gt;&lt;/span&gt;, { &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;rule&lt;/span&gt;&lt;/span&gt;: ruleJson, &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;options&lt;/span&gt;&lt;/span&gt;: optionsJson });
    } &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;catch&lt;/span&gt;&lt;/span&gt; (error) {
        &lt;span&gt;&lt;span&gt;console&lt;/span&gt;&lt;/span&gt;.error(&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;'保存表单配置失败'&lt;/span&gt;&lt;/span&gt;, error);
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371270/fcdesigner-3-3-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371270/fcdesigner-3-3-1-released</guid>
      <pubDate>Sun, 07 Sep 2025 02:57:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>React Native 0.81.2 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#333333"&gt;React Native 0.81.2 现已发布，&lt;/span&gt;&lt;span style="color:#000000"&gt;具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;为 Android 创建 debugOptimized buildType（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F5e3edafec6c69558521061dced7a6bcd046576b0" target="_blank"&gt;5e3edafec6&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;向实验频道添加&lt;code&gt;useNativeEqualsInNativeReadableArrayAndroid&lt;/code&gt;功能&lt;code&gt;useNativeTransformHelperAndroid&lt;/code&gt;标志。这应该可以缓解用户在 Android + Reanimated + NewArch 0.81 组合环境下使用 0.81 版本时遭遇的部分性能问题。（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fa346096da81fccf5fbc82d83bfc128695e6ec3a5" target="_blank"&gt;a346096da8&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复与预编译 tarball 提取相关的 Node 脚本，处理含空格的路径问题（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2F366f2ad5057ffecc1f5b211f6aae29567ae6b7e5" target="_blank"&gt;366f2ad505&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在 cocoapods 链接的第二步中使用自动链接生成的 react-native-config 输出来 generates artifacts 和 generated source（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Fcommit%2Fa2eb29e5e7aef8bbdf4c647c8467b5292b013b20" target="_blank"&gt;a2eb29e5e7&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffacebook%2Freact-native%2Freleases%2Ftag%2Fv0.81.2" target="_blank"&gt;https://github.com/facebook/react-native/releases/tag/v0.81.2&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371257/react-native-0-81-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371257/react-native-0-81-2-released</guid>
      <pubDate>Sun, 07 Sep 2025 02:34:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>SunnyUI V3.8.8 发布啦，C# WinForm 开源控件库！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="SunnyUI" src="https://oscimg.oschina.net/oscnet//e2c8a48c5600383f751a010f95f6a89e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/stargazers"&gt;&lt;img alt="star" src="https://oscimg.oschina.net/oscnet//d84417dcaae9e4ea98507a147095c455.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/members"&gt;&lt;img alt="fork" src="https://oscimg.oschina.net/oscnet//275681216d89365426d6c56c9ca3e33f.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;帮助文档:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/wikis/pages"&gt;https://gitee.com/yhuse/SunnyUI/wikis/pages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新日志:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/wikis/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"&gt;https://gitee.com/yhuse/SunnyUI/wikis/ 更新日志&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI"&gt;https://gitee.com/yhuse/SunnyUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fyhuse%2FSunnyUI" target="_blank"&gt;https://github.com/yhuse/SunnyUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Nuget:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FSunnyUI%2F" target="_blank"&gt;https://www.nuget.org/packages/SunnyUI/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cnblogs.com%2Fyhuse" target="_blank"&gt;https://www.cnblogs.com/yhuse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;因为评论没有查找，不利于解决问题，故关闭项目评论功能。如果是问题或者建议，请按照 Issues 模版添加 Issue。&lt;/li&gt; 
 &lt;li&gt;添加 Issue:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/new"&gt;https://gitee.com/yhuse/SunnyUI/issues/new&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;V3.6.8+Demo 编译可执行文件:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI.Demo"&gt;https://gitee.com/yhuse/SunnyUI.Demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;SunnyUI.Net 是基于.Net Framework 4.0~4.8、.Net8、.Net9 框架的 C# WinForm 开源控件库、工具类库、扩展类库、多页面开发框架。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="768" src="https://oscimg.oschina.net/oscnet/up-1c3c587dbd99a478ed62523f94ad0d7ccbf.png" width="1100" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;此版本更新内容为：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;+ 增加 * 修改 - 删除&lt;/p&gt; 
&lt;h4&gt;2025-09-09 V3.8.8&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;* UILineChart: 修改自定义 X 轴显示时，鼠标移上显示数据点标签&lt;br&gt; * UILineChart: 修改了 X 轴显示为文字时，鼠标移上显示数据点标签&lt;br&gt; * UILedStopwatch: 修改小时显示，可超过 24 小时显示&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/ICUFNY"&gt;#ICUFNY&lt;/a&gt;&lt;br&gt; * UIIPTextBox: 增加快捷键 CTRL+CV 复制和粘贴 IP 地址&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/ICUF80"&gt;#ICUF80&lt;/a&gt;&lt;br&gt; * UIMessageForm2: 使用 TextRenderer 绘制文本（避免削顶问题）&lt;br&gt; * UIEdit: 水印绘制方法恢复至上一版本&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/yhuse/SunnyUI/issues/ICX0O0"&gt;#ICX0O0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371228</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371228</guid>
      <pubDate>Sun, 07 Sep 2025 00:09:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Studio-Media-Player v2.1 发布，macOS 3D 视频播放器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Studio-Media-Player v2.1 已经发布，macOS 3D 视频播放器。&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;p&gt;借助&lt;code&gt;NSDocumentController&lt;/code&gt;等类支持 macOS 原生的文件打开。移除了左右眼自动反转的代码。&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/dannyniu/Studio-Media-Player/releases/v2.1"&gt;https://gitee.com/dannyniu/Studio-Media-Player/releases/v2.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371224</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371224</guid>
      <pubDate>Sat, 06 Sep 2025 23:15:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>小蚂蚁云 XiaoMaYi-Nacos-ArcoVue 微服务框架 v1.0.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v1.0.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、全新架构设计；&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、全系支持 JDK17;&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、全系支持 MySQL、PostgreSQL、SqlServer、Sqlite 等数据库；&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、TypeScript、ArcoDesign、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringCloud、SpringBoot3、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用 ArcoDesign 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;JDK17&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;基础开发环境，采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Maven&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;构建工具；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spring Cloud&lt;/code&gt;、&lt;code&gt;Spring Cloud Alibaba&lt;/code&gt;、&lt;code&gt;SpringBoot&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等微服务组件框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Spring Authorization Server&lt;/code&gt;、&lt;code&gt;SpringSecurity&lt;/code&gt;等微服务统一认证框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Nacos&lt;/code&gt;、&lt;code&gt;Seata&lt;/code&gt;、 等微服务统一认证框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;ArcoDesign&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：小蚂蚁云微服务 Nacos+ArcoDesign 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@小蚂蚁云团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xiaomayicloud.com" target="_blank"&gt;https://www.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.cloud.nacos.arcovue.xiaomayicloud.com" target="_blank"&gt;http://docs.cloud.nacos.arcovue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.cloud.nacos.arcovue.xiaomayicloud.com" target="_blank"&gt;http://manage.cloud.nacos.arcovue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:857.286px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-eb5f4d3d0dc5ed8a152699c8a3a0552d5bf.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371223</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371223</guid>
      <pubDate>Sat, 06 Sep 2025 22:58:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Apache Cloudberry 2.0 发布：1981 项变更提交，续写 Greenplum 未竟之路</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;2022 年，Cloudberry Database 项目立项。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;2023 年 6 月，Cloudberry Database 正式开源。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;2024 年 5 月，Greenplum 源码归档转向闭源开发。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;2024 年 11 月，酷克数据与国内外合作伙伴携手推动 Cloudberry Database 加入 Apache 孵化器，并在其旗下启动孵化，走向厂商中立、协作开发之路。Cloudberry Database 正式更名为 Apache Cloudberry™ (Incubating)。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#595959; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;2025 年 8 月，Apache Cloudberry 2.0.0 版本正式发布。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;近日，Apache Cloudberry (Incubating) 社区正式宣布 2.0.0 版本发布。这不仅是 Cloudberry 项目进入 Apache 孵化器后的首个 Release，更是一次具有里程碑意义的重要发布。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;作为国内最早投身云端数据仓库研发的团队之一，酷克数据的旗舰产品 HashData Enterprise 云数仓已服务 50+ 大型客户，持续支撑业务增长和数据洞察。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;酷克数据团队作为 Cloudberry 持续贡献者，在&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;过去 3 年里，凭借团队在大规模数据仓库场景中的丰富实践经验，将这些经验沉淀并回馈到社区中，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;对 Cloudberry 进行了系统性的重构与现代化演进，尤其在实时分析、数据湖仓、AI 特征数据处理等核心场景中完成了关键优化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;今天，我们想借这个发布的契机，和大家聊聊 Cloudberry 背后的初心与坚持。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;Cloudberry 从哪里来？&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;很多人关心，我们为什么要在这个时间点做一个看起来「已经过时」的 MPP 数据库项目？我们为什么不是 All in 那么多的新方向？Greenplum 已经落幕，我们为什么还要续写它的故事？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;答案是因为感情。Greenplum 是我们很多人技术生涯的一部分，我们对 Greenplum Database 怀有感情，抱有热情。团队很多人都是 Greenplum Database 原始团队核心成员，大部分人亲力推动 Greenplum Database 从闭源到开源、社区从小到大，一路走来。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;但我们也是最早意识到，Greenplum 的短板开始变得日益严重：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;新场景（实时分析、流处理、AI workload 等）支持差；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;PostgreSQL 内核版本更新缓慢，无法发挥 PostgreSQL 上游新版本带来的巨大改进优势；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;商业公司归属和维护团队始终处于动荡之中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;种种因素给社区和用户信心带来动摇，增加了不确定性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;那时，我们早已隐隐感受到危险&lt;/span&gt;&lt;span style="color:#888888"&gt;——&lt;/span&gt;&lt;span style="color:#2b2b2b"&gt;一个代码庞大、生态复杂的数据库项目，一旦失去了开源，其所承载的整个技术体系可能就此断代。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;正因如此，Cloudberry Database 的立项初衷并非「复制」 Greenplum，而是对其进行「重塑」：在兼容 Greenplum 的基础上，打造新一代 MPP 数据库，补齐十余年来的历史欠账，并为未来的实时分析、湖仓一体和 AI 应用夯实底座。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;2023 年，Cloudberry 正式开源。这是社区的一个重要决定：我们希望来自社区，回归社区，不是「闭门造车」，而是希望汇聚全球开发者的力量，构建一个真正开源、开放、透明、可持续的分布式数仓社区。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;2024 年 5 月，Greenplum 宣布闭源。一时间社区哗然，几十家公司、成百上千个项目面临「没得选」的断档尴尬。也正是这个时候，我们做了另一个重要决定：联合原有 Greenplum 开发者和生态伙伴，一起推动将 Cloudberry 托管到中立性开源基金会，真正实现开源可信，避免 Greenplum 闭源归档再次发生在 Cloudberry 之上。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;2024 年 11 月，Cloudberry 捐赠加入 Apache 软件基金会孵化器，正式开启孵化之旅。我们相信，有了 Apache 基金会的支持，Cloudberry 能为用户带来真正的长期可用性和社区信任。开源从来不是为了「做个样子」。我们希望 Cloudberry 成为一个长期可靠、稳定发展的公共资产，成为一群技术人贡献给世界的一个底层基础设施。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;Cloudberry 2.0.0 向后兼容，向前走远&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;Cloudberry 是我们对过去的致敬，也是对未来的号召。2.0.0 的发布是一个新起点，我们作为重要的社区贡献者，继续用技术兑现承诺。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;Cloudberry 2.0.0 包含了&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1981 个&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;变更提交，在查询处理、存储引擎、安全性和资源管理等方面都有显著改进。由于篇幅有限，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;我们和大家简单介绍下 Cloudberry 2.0.0 七大亮点更新：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;源码清理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#010101"&gt;&lt;span style="color:#2b2b2b"&gt;移除历史冗余文件（Concourse CI 等），简化主仓&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#010101"&gt;&lt;span style="color:#2b2b2b"&gt;库&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;结构，降低贡献门槛。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;引入 Apache RAT 开源许可审计工具，统一 License Header 和合规文件。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;清理和替换不兼容依赖（如 Pylint → Ruff）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;代码基线对齐（上游归档 Greenplum）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;与 Greenplum 存档代码完成大规模基线对齐，引入，关键 Bug 修复、性能优化、稳定性增强。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;集成 ORCA 查询优化器，支持更高效的查询计划：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;动态索引扫描（特别适合分区表）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;倒序索引扫描，优化 ORDER BY … DESC 场景。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;位图索引扫描增强，支持数组比较谓词。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;LEFT JOIN 剪枝、Hash Full Join、NOT IN 广播优化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;BRIN 索引在 AO/CO 表上重构，更节省空间、访问更高效。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;新功能与功能增强 / Bug 修复&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;存储引擎：新增 PAX 行列混合存储引擎，兼具行存写入与列存查询优势。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;动态表 (Dynamic Table)：自动刷新、自动替换，加速实时分析和湖仓架构。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;查询优化增强：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;支持中间聚合和更多 HashAggregate 策略。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;支持 GROUP BY CUBE 多维分组集。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;优化 DISTINCT、MIN/MAX 查询执行效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;事务与资源管理：改进死锁检测、并发事务恢复，增强 CPU/内存/I/O 控制能力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;重构 CI/CD 工作流&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;全新流水线体系，支持并行测试、自动化报告生成。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;所有 Release 遵循 Apache 基金会投票和合规流程，保证可追溯性。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;安全增强&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;pgcrypto 新增 FIPS 模式支持，适配金融与合规场景。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;改进权限管理，防止 SQL 注入与角色误用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;修复 PostgreSQL 上游 CVE-2025-1049 等漏洞，升级 PyYAML 等依赖。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;强化进程安全，防止子进程误访问共享内存。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;合规治理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;统一品牌命名为 Apache Cloudberry，公开第三方依赖清单并替换不兼容依赖（如以 Ruff 替代 Pylint）；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;清理 Greenplum 遗留的冗余配置与过时文件，优化仓库结构，降低贡献门槛。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;品牌刷新&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;网站与文档全面焕新，推出新版官网与直观导航设计；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;支持多版本切换、同步特性指南和变更说明。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;完善安装手册，降低开发者参与门槛。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;GitHub Wiki 提供开发文档、发布流程和贡献指南，强化社区共治。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;当然，这并不是全部的工作。如果你希望了解 Cloudberry 2.0.0 的更多新特性和技术细节，欢迎访问&amp;nbsp;&lt;/span&gt;&lt;span style="color:#888888"&gt;(https://cloudberry.apache.org/blog/whats-new-in-apache-cloudberry-2.0.0)&amp;nbsp;&lt;/span&gt;&lt;span style="color:#2b2b2b"&gt;查看完整版本变更说明。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;写在最后&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;我们一直知道，做数据库是件「长坡厚雪」的事。这并非可以一蹴而就的领域，需要时间的积累、工程的韧性，也需要一群人长久的热爱。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;Cloudberry 的每一次迭代，背后都是对开源精神的实践，以及对技术边界的执着探索。对我们来说，一个好的开源项目，不只是代码仓库的快照，更应该是一个有温度、有方向、有社区归属感的存在。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;我们也深知，在 AI 与大数据深度融合、湖仓一体化加速演进的今天，这个世界比以往任何时候都更需要开放、强大、可信赖的基础软件。而 Cloudberry，只是一份仍在不断续写的答卷。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;我们不想等到「足够强大」才开始召集朋友——我们相信，只要方向是对的，就值得有人同行。现在的 Cloudberry，已经具备了一块可靠的底座，我们希望更多的你能加入进来：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;如果你曾使用过 Greenplum，Cloudberry 是你的自然进化路径；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;如果你正在建设数据湖仓或分析型系统，Cloudberry 能为你提供坚实支撑；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;如果你是一名热爱底层技术的开发者，这里是一个值得投入的开源社区。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3a3a3a; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;万物起于微光，技术改变世界的火种，总是从一群人的坚持点燃。我们已经启程，期待与你同行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="color: rgb(58, 58, 58); margin-left: 0px; margin-right: 0px; text-align: justify;"&gt;&lt;span&gt;&lt;strong&gt;👉 GitHub:&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;&amp;nbsp;https://github.com/apache/cloudberry&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(58, 58, 58); margin-left: 0px; margin-right: 0px; text-align: justify;"&gt;&lt;span&gt;&lt;strong&gt;👉&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;What's New:&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(58, 58, 58); margin-left: 0px; margin-right: 0px; text-align: justify;"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#2b2b2b"&gt;https://cloudberry.apache.org/blog/whats-new-in-apache-cloudberry-2.0.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="color: rgb(58, 58, 58); margin-left: 0px; margin-right: 0px; text-align: justify;"&gt;&lt;span&gt;&lt;strong&gt;👉 社区主页：&lt;/strong&gt;&lt;span style="color:#2b2b2b"&gt;https://cloudberry.apache.org&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371159/cloudberry-database-2-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371159/cloudberry-database-2-0-released</guid>
      <pubDate>Sat, 06 Sep 2025 10:24:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Netty 4.2.6.Final 发布，Java 网络应用框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Netty 是一个异步事件驱动的网络应用框架，主要用于可维护的高性能协议服务器和客户端的快速开发。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Netty 4.2.6.Final 现已发布，&lt;/span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span style="color:#000000"&gt;这是一个 bug 修复版本，修复了 4.2.5.Final 版本引入的一个回归问题，如果你使用 BouncyCastle，该问题可能会对你造成影响。项目团队决定在此快速发布一个后续版本，以便依赖该版本的用户仍然可以获得 4.2.5.Final 版本中&lt;/span&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetty%2Fnetty%2Fsecurity%2Fadvisories%2FGHSA-3p8m-j85q-pgmj" target="_blank"&gt;CVE-2025-58057&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetty%2Fnetty%2Fsecurity%2Fadvisories%2FGHSA-fghv-69vj-qj49" target="_blank"&gt;CVE-2025-58056 的修复。&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;一些更新要点包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;BouncyCastleAlpnSslUtils 需要使用正确的 SSLEngine 类，否则将无法初始化静态字段。&lt;/span&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetty%2Fnetty%2Fpull%2F15630" target="_blank"&gt;#15630&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;IoUring：允许创建支持更改线程的 IoHandlerFactory，从而支持 AutoScalingEventExecutorChooserFactory。&lt;/span&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetty%2Fnetty%2Fpull%2F15608" target="_blank"&gt;#15608&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可查看发布公告：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnetty.io%2Fnews%2F2025%2F09%2F08%2F4-2-6.html" target="_blank"&gt;https://netty.io/news/2025/09/08/4-2-6.html&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371135/netty-4-2-6-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371135/netty-4-2-6-released</guid>
      <pubDate>Sat, 06 Sep 2025 08:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenHarmony 6.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenHarmony 是由开放原子开源基金会（OpenAtom Foundation）孵化及运营的开源项目，目标是面向全场景、全连接、全智能时代，基于开源的方式，搭建一个智能终端设备操作系统的框架和平台。&lt;/p&gt; 
&lt;p&gt;OpenHarmony-v6.0-Release 已经发布，此版本进一步增强 ArkUI 组件能力，提供更安全、更灵活的组件布局；进一步增强窗口能力，新增支持窗口处理文本显示的能力；进一步增强分布式数据管理能力，支持管理资产和资产组，支持应用对标准化数据进行展示；进一步增强位置服务、输入法框架的相关能力等等。&lt;/p&gt; 
&lt;p&gt;更详细的特性新增与增强的说明如下：&lt;/p&gt; 
&lt;h3&gt;应用框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增 AppServiceExtensionAbility 模块，提供后台服务相关扩展能力，包括后台服务的创建、销毁、连接、断开等生命周期回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ability-kit/js-apis-app-ability-appServiceExtensionAbility.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持应用查询自身权限授权状态信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ability-kit/js-apis-abilityAccessCtrl.md#getselfpermissionstatus20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持通过装饰器开发意图，支持将现有功能通过装饰器快速集成至系统入口。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fapplication-models%2Finsight-intent-decorator-development.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持互动卡片。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fform%2Farkts-ui-liveform-overview.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持 Kiosk 模式。Kiosk 模式是一种特殊的设备锁定模式，可以确保设备界面只服务于特定的交互场景。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2FRayShih%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-ability-kit%2Fjs-apis-app-ability-kioskManager.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;应用启动框架支持在 feature 类型的 HAP 中配置，以及支持添加任务匹配规则。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fapplication-models%2Fapp-startup.md%23%25E6%2594%25AF%25E6%258C%2581%25E7%259A%2584%25E8%258C%2583%25E5%259B%25B4"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ArkUI&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;组件布局能力增强：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;组件背景安全区默认延伸：当组件与非安全区邻接时（包括 SafeAreaPadding，AI 导航栏，状态栏），组件背景默认延伸到非安全区，提升沉浸式开发体验。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-background.md#background20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;忽略组件布局安全区边缘：当组件与非安全区邻接时（包括 SafeAreaPadding，AI 导航栏，状态栏），组件设置忽略布局安全区边缘后可布局到非安全区。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-universal-attributes-expand-safe-area.md#ignorelayoutsafearea20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;基础布局能力：宽高支持 LayoutPolicy 布局能力，包括自适应父组件 matchParent，自适应内容 wrapContent，自适应内容（忽略父组件的约束）fitAtIdealSize。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-types.md#layoutpolicy15"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持对 Navigation 双栏模式设置默认占位页。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-basic-components-xcomponent.md#lockcanvas20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;UX 视觉效果优化：菜单与拖拽过渡，菜单跟随效果优化：拖拽发起时，实时更新菜单位置；菜单整体跟随拖拽跟手图；跟手图存在缩放场景时，菜单与跟手图之间的间隔整体相对合理；控件支持 P3 色域显示。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 XComponent 组件新开的 lockCanvas 接口，开发者可获取到 Drawing Canvas 对应的 ArkTS 对象，使用该对象执行绘制指令会直接绘制到 XComponent 上，相较于基于 NDK 接口绘制，更易用。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-frameNode.md#cancelanimations20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持取消隐式动画的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/js-apis-arkui-frameNode.md#cancelanimations20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;保存控件新增支持图标和文字的自定义能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/arkui-ts/ts-security-components-savebutton.md#savebuttonattribute"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;无感监听支持全量手势事件上报，包括基础手势识别，长按、捏合、旋转和快滑。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/reference/apis-arkui/arkts-apis-uicontext-uiobserver.md#onwillclick12"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;NDK 侧新增渲染节点的能力，包括创建、挂载、渲染属性设置、自定义绘制、重绘、绘制优先级、脏区裁剪等能力，以及配套的属性动画和 FrameNode 上事件拦截转发。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/reference/apis-arkui/capi-native-render-h.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ArkWeb&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ArkWeb 使用的 Chromium 内核从 114 版本升级到 132 版本。详细说明请查看&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony-tpc%2Fchromium_src%2Fblob%2F132_trunk%2Fweb%2FReleaseNote%2FArkWeb_114_132.md"&gt;ArkWeb 版本的差异总结&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;交互能力增强：支持组合键缩放禁用、强制手势缩放、手势获焦、自定义文本菜单等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持手写笔 PointerEvent 事件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持在网络加载错误时返回自定义的错误页。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkweb%2Farkts-basic-components-web-events.md%23onoverrideerrorpage20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;窗口管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增支持窗口显示时默认不获取焦点，点击后可获取焦点。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/js-apis-window.md#showwindow20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持输入法动画开始前和结束后的回调，方便应用进行输入法弹出与收回动画的响应。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkui/js-apis-window.md#onkeyboardwillshow20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持通过 C API 卸载自定义字体以释放内存空间。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2FOpenHarmony-6.0-Release%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkgraphics2d%2Fcapi-drawing-register-font-h.md%23oh_drawing_unregisterfont"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持设置文本垂直对齐方式。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkgraphics2d%2Fjs-apis-graphics-text.md%23textverticalalign20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持拷贝段落样式、文本样式、文本阴影对象。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkgraphics2d%2Fcapi-drawing-text-typography-h.md%23oh_drawing_copytypographystyle"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持以独立文字为单位进行塑形。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkgraphics2d%2Fcapi-drawing-text-run-h.md%23oh_drawing_getrunfont"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;图形&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增支持中西文自动间距，支持排版时去除行位空格；新增支持修改文本颜色无需重新排版；新增支持不跟随系统高对比度文字开关设置。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/reference/apis-arkgraphics2d/js-apis-graphics-text.md#paragraphstyle"&gt;API 参考&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;图片编码的 ASTC 编码支持 HDR 质量的编码。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/reference/apis-image-kit/arkts-apis-image-i.md#packingoption"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持为组件内容添加 HDR 提亮效果，该能力为系统能力。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkgraphics2d%2Fjs-apis-uiEffect-sys.md%23hdrbrightnessratio20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 NativeFence 接口，实现对 fenceFd 阻塞指定时间、永久阻塞、关闭和检查 fenceFd 是否有效等操作。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fgraphics%2Fnative-fence-guidelines.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;包管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增 setShortcutVisibleForSelf 接口，支持设置当前应用的快捷方式是否显示。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/reference/apis-ability-kit/js-apis-shortcutManager.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 getAbilityInfo 接口，支持根据指定的 uri 获取应用的 ability 信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ability-kit/js-apis-bundleManager.md#bundlemanagergetabilityinfo20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;分布式数据管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增支持设置资产和资产组的相关接口。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/database/data-sync-of-distributed-data-object.md#%E8%B5%84%E4%BA%A7%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增提供基于标准化数据结构的标准卡片控件接口，支持应用对标准化数据结构进行可视化展示。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;UDMF 新增 DataHub、系统分享、picker、右键菜单这三类数据通道的生命周期管理能力，提供 ArkTS 和 C API。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkdata/js-apis-data-unifiedDataChannel.md#intention"&gt;API 参考-ArkTS&lt;/a&gt;、&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkdata/capi-udmf-h.md#%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B%E8%AF%B4%E6%98%8E"&gt;API 参考-C API&lt;/a&gt;） 其中 DataHub 仅 C API 为本次新增，ArkTS 已支持。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持监听附件传输的进度，支持接续传输。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-arkdata%2Fjs-apis-data-distributedobject.md%23onprogresschanged20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;分布式软总线&lt;/h3&gt; 
&lt;p&gt;新开放底层连接能力接口，实现连接能力提升。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/distributedservice/linnkEnhance_development-guide.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;分布式服务&lt;/h3&gt; 
&lt;p&gt;新增 C API 支持获取本地设备名称。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-distributedservice-kit/capi-devicemanager.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;分布式设备管理&lt;/h3&gt; 
&lt;p&gt;新增机械设备管理服务，主要面向云台、机械臂等智能机械体配件设备提供交互控制的能力。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Ftree%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-mechanic-kit"&gt;指南&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;事件通知&lt;/h3&gt; 
&lt;p&gt;新增支持三方应用获取通知响铃震动等设置信息。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-notification-kit/js-apis-notificationManager.md#notificationmanagergetnotificationsetting20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;语言编译器运行时&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增针对系统 JSVM 引擎 API 调用内存泄漏问题的定位能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/napi/jsvm-frequently-questions.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 FastBuffer 对象定义。FastBuffer 对象是更高效的 Buffer 容器，用于表示固定长度的字节序列，是专门存放二进制数据的缓存区。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkts/js-apis-fastbuffer.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持以动态序列化方式生成 XML 文件。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-arkts/js-apis-xml.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;基础通信&lt;/h3&gt; 
&lt;p&gt;Wi-Fi 新增支持连接候选网络时提示确认是否信任该网络，并提供确认的回调。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-connectivity-kit/js-apis-wifiManager.md#wifimanagerconnecttocandidateconfigwithuseraction20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;位置服务&lt;/h3&gt; 
&lt;p&gt;新增支持获取两个位置之间直线距离的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-location-kit/js-apis-geoLocationManager.md#geolocationmanagergetdistancebetweenlocations20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;多模输入&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增 C API 支持获取当前屏幕上鼠标的座标点。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-input-kit%2Fcapi-oh-input-manager-h.md%23oh_input_getpointerlocation"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 C API 支持查询设备支持的最大触屏报点数。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/reference/apis-input-kit/capi-oh-input-manager-h.md#oh_input_querymaxtouchpoints"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 C API 支持设置和查询鼠标事件、触屏事件在指定屏幕上的相对座标系。详情可在&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fad4d1941c726b56c89948c689ad5cd8b2391ca15%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-input-kit%2Fcapi-oh-input-manager-h.md"&gt;API 参考&lt;/a&gt;中搜索关键字「相对座标系」。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;DFX&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增使用 HiDebug 对应用主线程进行栈回溯的能力。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/dfx/hidebug-guidelines-ndk.md#%E4%BD%BF%E7%94%A8hidebug%E5%AF%B9%E5%BA%94%E7%94%A8%E4%B8%BB%E7%BA%BF%E7%A8%8B%E8%BF%9B%E8%A1%8C%E6%A0%88%E5%9B%9E%E6%BA%AF"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 sanitizer 事件对接到 HiAppEvent。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/dfx/hiappevent-watcher-address-sanitizer-events.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;CPP_CRASH 事件支持通过 SetEventConfig 接口设置参数控制日志内容。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fdfx%2Fhiappevent-watcher-crash-events.md%23%25E5%25B4%25A9%25E6%25BA%2583%25E6%2597%25A5%25E5%25BF%2597%25E8%25A7%2584%25E6%25A0%25BC%25E8%2587%25AA%25E5%25AE%259A%25E4%25B9%2589%25E5%258F%2582%25E6%2595%25B0%25E8%25AE%25BE%25E7%25BD%25AE"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;针对包含页面切换的应用，故障日志文件将包含页面切换历史轨迹。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fdfx%2Fcppcrash-guidelines.md%23%25E6%259C%2589%25E9%25A1%25B5%25E9%259D%25A2%25E5%2588%2587%25E6%258D%25A2%25E8%25BD%25A8%25E8%25BF%25B9%25E7%259A%2584%25E6%2595%2585%25E9%259A%259C%25E5%259C%25BA%25E6%2599%25AF%25E6%2597%25A5%25E5%25BF%2597%25E8%25A7%2584%25E6%25A0%25BC"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增 addProcessorFromConfig 接口，支持异步添加数据处理者和及其配置信息。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-performance-analysis-kit%2Fjs-apis-hiviewdfx-hiappevent.md%23hiappeventaddprocessorfromconfig20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;HiAppEvent 的 C API 新增 EVENT_APP_KILLED 接口，订阅应用查杀事件。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-performance-analysis-kit%2Fcapi-hiappevent-event-h.md%23event_app_killed"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;升级&lt;/h3&gt; 
&lt;p&gt;支持流式物理 AB 升级，支持边下载边升级安装，减少用户设备存储空间的占用。（&lt;a href="https://gitee.com/openharmony/update_updater/blob/master/README_zh.md"&gt;说明文档&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;媒体&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;针对直播场景新增支持高画质 ROI 编码。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/media/avcodec/video-encoding-ROI.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;图片编创支持纹理数据作为输入输出，纹理可以自定义。（&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/application-dev/media/image/image-effect-guidelines.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持查询获取网络流的媒体元信息和缩略图。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持相机白平衡功能查询和设置。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增相机压力管控接口，用于上报系统压力状态。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;音频&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;升级音频引擎 2.0，提升整体运行效率并降低播放时延。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增音频工作组管理的能力，应用可以提升自身音频线程的系统供给，从而获取更好的音频处理性能。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fmedia%2Faudio%2Faudio-workgroup.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持音频低时延耳返的能力，可将音频以更低时延的方式实时传输到有线耳机中。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Fmedia%2Faudio%2Faudio-ear-monitor-loopback.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增星闪音频设备播放和录制能力，支持应用获取当前音频的输出类型为星闪设备类型。（API 参考）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增为直播场景打造的高清 AEC 录音能力，支持应用使用新增的直播录音流类型。（API 参考）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安全&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;证书管理新增 openAuthorizeDialog 接口，支持拉起用户证书凭据授权界面，用户授权后应用可使用授权的证书凭据进行双向 TLS 认证或文档签名。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-device-certificate-kit/js-apis-certManagerDialog.md#certificatemanagerdialogopenauthorizedialog20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;加解密算法库框架提供了非对称加解密、签名、密钥协商、密钥派生、消息认证码、随机数的 C 接口；提供了 ASN1 格式和 R|S 格式的 sm2 签名数据互转能力；新增支持 DES 算法。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/security/CryptoArchitectureKit/Readme-CN.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;证书算法库支持获取 utf-8 编码的证书或证书吊销列表的颁发者名称。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-device-certificate-kit/js-apis-cert.md#tostring20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;证书链校验新增支持信任系统预置的根证书。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-device-certificate-kit%2Fjs-apis-cert.md%23certchainvalidationparameters11"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;网络管理&lt;/h3&gt; 
&lt;p&gt;新增 C API，支持网络探测（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-network-kit%2Fcapi-net-connection-h.md%23oh_netconn_queryproberesult"&gt;API 参考&lt;/a&gt;）和网络跟踪路由（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-network-kit%2Fcapi-net-connection-h.md%23oh_netconn_querytraceroute"&gt;API 参考&lt;/a&gt;）。&lt;/p&gt; 
&lt;h3&gt;测试框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增白盒性能测试框架，支持针对应用指定代码段 CPU/内存占用、应用冷启动响应时间、滑动场景帧率的度量能力。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2FOpenHarmony-6.0-Release%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-test-kit%2Fjs-apis-perftest.md"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;UI 测试框架新增支持多屏场景指定屏幕查找控件和模拟操作能力。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2FOpenHarmony-6.0-Release%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-test-kit%2Fjs-apis-uitest.md%23belongingdisplay20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;UI 测试框架新增支持文本输入场景可选追加输入能力。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2FOpenHarmony-6.0-Release%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-test-kit%2Fjs-apis-uitest.md%23inputtextmode20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;输入法框架&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;悬浮软键盘和候选词窗口新增支持 startMoving。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethodengine.md#startmoving15"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持通过 hdc 命令管理输入法。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/inputmethod/inputmethod-hdc-commands-guide.md"&gt;指南&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持编辑框放弃正在输入的文字。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethod.md#discardtypingtext20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持感知到编辑框中的占位文本和所属 Ability 的名字。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethodengine.md#editorattribute"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持短信验证码编辑框。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethod.md#textinputtype10"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增支持自动大小写模式。（&lt;a href="https://gitee.com/openharmony/docs/blob/OpenHarmony-6.0-Beta1/zh-cn/application-dev/reference/apis-ime-kit/js-apis-inputmethodengine.md#capitalizemode20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;上传下载&lt;/h3&gt; 
&lt;p&gt;支持设置任务超时、限速，支持下载数据到公共文件。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-basic-services-kit%2Fjs-apis-request.md%23minspeed20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; 
&lt;h3&gt;电源管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增系统接口，支持刷新设备活动状态（如：重设屏幕超时息屏时间等）。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-basic-services-kit%2Fjs-apis-power-sys.md%23powerrefreshactivity20"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;电源模式的枚举新增自定义省电模式。（&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgitcode.com%2Fopenharmony%2Fdocs%2Fblob%2Fmaster%2Fzh-cn%2Fapplication-dev%2Freference%2Fapis-basic-services-kit%2Fjs-apis-power.md%23devicepowermode9"&gt;API 参考&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情&amp;nbsp;&lt;em&gt;&lt;a href="https://gitee.com/openharmony/docs/blob/master/zh-cn/release-notes/OpenHarmony-v6.0-release.md" target="_blank"&gt;https://gitee.com/openharmony/docs/blob/master/zh-cn/release-notes/OpenHarmony-v6.0-release.md&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371122/openharmony-v6</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371122/openharmony-v6</guid>
      <pubDate>Sat, 06 Sep 2025 07:43:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>WCDB 2.1.14 发布，腾讯开源的移动数据库框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;WCDB 是腾讯开源的一个高效、完整、易用的移动数据库框架，基于 SQLCipher ，支持 iOS、macOS 和 Android。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;WCDB 2.1.14 版本现已发布，主要变更内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持 Android 的 16kb 页面大小&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Kotlin 2.1.0+ 版本支持使用 ksp&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复堆栈溢出崩溃&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复一些已知错误&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2Fwcdb%2Freleases%2Ftag%2Fv2.1.14" target="_blank"&gt;https://github.com/Tencent/wcdb/releases/tag/v2.1.14&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371120/wcdb-2-1-10-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371120/wcdb-2-1-10-released</guid>
      <pubDate>Sat, 06 Sep 2025 07:39:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>SunnyUI V3.8.8 发布，.NET 组件库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;SunnyUI V3.8.8 已经发布，.NET 组件库。&lt;/p&gt; 
&lt;h2&gt;更新内容&lt;/h2&gt; 
&lt;p&gt;3.8.8&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UIEdit: 水印绘制方法恢复至上一版本&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UIEdit: 修复了自定义控件时，水印文字不显示的问题&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UIMessageForm2: 使用 TextRenderer 绘制文本（避免削顶问题）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UIIPTextBox: 增加快捷键 CTRL+CV 复制和粘贴 IP 地址&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UILedStopwatch: 修改小时显示，可超过 24 小时显示&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UILineChart: 修改了 X 轴显示为文字时，鼠标移上显示数据点标签&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;UILineChart: 修改自定义 X 轴显示时，鼠标移上显示数据点标签&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/yhuse/SunnyUI/releases/V3.8.8"&gt;https://gitee.com/yhuse/SunnyUI/releases/V3.8.8&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371116</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371116</guid>
      <pubDate>Sat, 06 Sep 2025 07:21:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Syncthing 2.0.8 正式发布，连续文件同步工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Syncthing&amp;nbsp;是一个免费开源的工具，它能在你的各个网络计算机间同步文件 / 文件夹，它的同步数据是直接从一个系统中直接传输到另一个系统的，并且它是安全且私密的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#1f2328"&gt;Syncthing 2.0.8 现已发布，具体更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;修复&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix(sqlite)：降低周期性垃圾回收的影响&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10374" target="_blank"&gt;#10374&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(sqlite)：明确设置临时目录位置（修复&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fissues%2F10368" target="_blank"&gt;#10368&lt;/a&gt;）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10376" target="_blank"&gt;#10376&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;其他&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;build：仅在 syncthing repo 上触发&amp;nbsp;nightly build&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10375" target="_blank"&gt;#10375&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;chore(scanner)：当使用 hashing blocks 时，始终将值返回到池中&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10377" target="_blank"&gt;#10377&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;chore(sqlite)：当可证明无需执行时，完全跳过&amp;nbsp;database GC&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Fpull%2F10379" target="_blank"&gt;#10379&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Freleases%2Ftag%2Fv2.0.8" target="_blank"&gt;https://github.com/syncthing/syncthing/releases/tag/v2.0.8&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371090/syncthing-2-0-8-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371090/syncthing-2-0-8-released</guid>
      <pubDate>Sat, 06 Sep 2025 05:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>数据服务平台 Crabc 信创版发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;Crabc 是一款 API 接口开发平台，企业级数据服务平台、SQL2API 。支持动态数据源、动态 SQL 和标签，&amp;nbsp;支持接入（mysql、postgresql、oracle、达梦、TiDB、hive、TDengine、ClickHouse、es ）等 SQL 或 NoSQL 数据源，在线可视化编写 SQL 快速发布接口，支持一键上下线、接口管理、权限控制、代理三方接口、数据转换，结果转换、鉴权、限流、熔断和监控告警等一站式 API 数据服务，&lt;/span&gt;让开发人员专注更复杂的业务逻辑实现；助力于企业数据资产价值升级，成为企业数字化转型的重要推动力；&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-b8fb04c80d0bee8d3f7d19e56fd3c3b93a5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;信创支持：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1、加入 swagger 支持&lt;/p&gt; 
&lt;p&gt;2、业务库支持达梦、TiDB 等信创数据库&lt;/p&gt; 
&lt;p&gt;3、缓存中间件支持东方通 TongRDS 等信创中间件&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;官网地址:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrabc.cn" target="_blank"&gt;crabc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;开源地址:&amp;nbsp;&lt;a href="https://gitee.com/linebyte/crabc"&gt;crabc-api&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;体验环境就:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpingapi.cn%2F" target="_blank"&gt;PingApi&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371086</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371086</guid>
      <pubDate>Sat, 06 Sep 2025 05:25:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>MirageOS 4.10.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;MirageOS 是一个库操作系统，为各种云计算和移动平台的安全、高性能网络应用构建 unikernels。开发人员可以在传统的操作系统（如 Linux 或 macOS）上编写代码。然后，他们可以将自己的代码编译成一个完全独立的、专门的 unikernel，在 Xen、KVM 管理程序和轻量级管理程序（如 FreeBSD 的 BHyve、OpenBSD 的 VMM）下运行。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;MirageOS 4.10.0 已正式发布，更新内容如下：&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;CHANGES：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加 unikraft 目标 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1607" target="_blank"&gt;#1607&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;添加&lt;code&gt;?local_libs&lt;/code&gt;参数以允许 local dune libs（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1609" target="_blank"&gt;#1609&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;为每个 unikernel 添加一个&lt;code&gt;--name&lt;/code&gt;参数（&amp;nbsp;&lt;code&gt;Mirage_runtime.name ()&lt;/code&gt;），移除&lt;code&gt;monitor_hostname&lt;/code&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1611" target="_blank"&gt;#1611&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;使用 Git_net 代替 Git_mirage (&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1606" target="_blank"&gt;#1606)&lt;/a&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdinosaure" target="_blank"&gt;@dinosaure&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;修复 Mirage_runtime documentation headers，使用正确的 Stop special comment（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1605" target="_blank"&gt;#1605&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;从测试中排除有缺陷的 dune 版本（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1609" target="_blank"&gt;#1609&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;删除有关 ip stacks、ipv4_config、ipv6_config、socket_tcpv4v6 和 socket_udpv4v6 的未使用的导出项（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Fpull%2F1612" target="_blank"&gt;#1612&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmirage%2Fmirage%2Freleases%2Ftag%2Fv4.10.0" target="_blank"&gt;https://github.com/mirage/mirage/releases/tag/v4.10.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371067/mirageos-4-10-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371067/mirageos-4-10-0-released</guid>
      <pubDate>Sat, 06 Sep 2025 03:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>gfast cms V2.1 版发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;平台简介&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;gfast 基于全新 Go Frame 2.x+Vue3+Element Plus 开发的全栈前后端分离的管理系统&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;前端采用 Vue、Element UI。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;特征&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;高生产率：几分钟即可搭建一个后台管理系统&lt;/li&gt; 
 &lt;li&gt;模块化：单应用多系统的模式，将一个完整的应用拆分为多个系统，后续扩展更加便捷，增加代码复用性。&lt;/li&gt; 
 &lt;li&gt;插件化： 可通过插件的方式扩展系统功能，&lt;/li&gt; 
 &lt;li&gt;目前插件有：工作流引擎、自定义表单、CMS、微信公众号、在线客服、商城系统、在线考试、资产管理、活动报名、在线点餐，等&lt;/li&gt; 
 &lt;li&gt;认证机制：采用 gftoken 的用户状态认证及 casbin 的权限认证&lt;/li&gt; 
 &lt;li&gt;自主研发：&lt;span style="background-color:#f9f9f9; color:#172b4d"&gt;全部自主研发，功能完整可控&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;面向接口开发&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;本次 CMS 更新内容：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;修复文章列表分页错误的问题&lt;/li&gt; 
 &lt;li&gt;增加 jquery.simplePagination 分页插件&lt;/li&gt; 
 &lt;li&gt;模板增加了「加、减、乘、除、取模」5 个数学运行函数&lt;/li&gt; 
 &lt;li&gt;增加生成静态 Html 功能&lt;/li&gt; 
 &lt;li&gt;修复上传时 upload 缺少参数的问题,修正上传附件时检查文件是否存在&lt;/li&gt; 
 &lt;li&gt;修改 cms 路由配置&lt;/li&gt; 
 &lt;li&gt;修改文章模型字段是日期类型时修改错误&lt;/li&gt; 
 &lt;li&gt;修改 cms 搜索关键字的 xss BUG&lt;/li&gt; 
 &lt;li&gt;修改短信验证码功能&lt;/li&gt; 
 &lt;li&gt;修正自定义模型的备份功能&lt;/li&gt; 
 &lt;li&gt;修复 cms 模型 logic 注册&lt;/li&gt; 
 &lt;li&gt;修正用户 Auth 验证逻辑&lt;/li&gt; 
 &lt;li&gt;修复评论中用户信息无效时的 BUG&lt;/li&gt; 
 &lt;li&gt;修改获取上一篇下一篇功能，增加分类参数&lt;/li&gt; 
 &lt;li&gt;修正文章列表排序默认按 published_at 字段倒序排&lt;/li&gt; 
 &lt;li&gt;修正 OrderBy 的 sql 注入问题&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;element-ui admin 端&lt;/h4&gt; 
&lt;p style="color:#24292f; margin-left:0; margin-right:0; text-align:start"&gt;fix 修改文章分类是单页插入图片时的 z-index 问题&lt;br&gt; fix 修正用户中心配置界面问题&lt;br&gt; fix 增加一个权限检查函数，用于 element-ui 中下拉组件不支持 v-auth 的问题&lt;br&gt; fix 修复广告图片不正常的问题&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;演示地址：&lt;/strong&gt;http://art.g-fast.cn/sys#/&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" height="907" src="https://oscimg.oschina.net/oscnet/up-f2ce4ced5175ee2013dc408701dfc2cf5bc.png" width="1186" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-5c0bd9733be6ebc3de62318fad40be87a87.png" width="1667" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371066/gfast-2-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371066/gfast-2-1-released</guid>
      <pubDate>Sat, 06 Sep 2025 03:12:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>PaddlePaddle 3.2.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;飞桨框架 3.2 版本在大模型训练推理性能、硬件适配、主流大模型及高性能加速库的支持上进一步提升。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;大模型训练方面，飞桨框架在计算、并行策略、容错能力三方面进行了升级： 
  &lt;ul&gt; 
   &lt;li&gt;从基础计算性能层面，提出了存算重叠的稀疏掩码注意力计算 FlashMask V3，极致优化 Attention 的计算效率，同时还实现了高效的 FP8 混合精度效果无损训练技术。&lt;/li&gt; 
   &lt;li&gt;在分布式并行策略层面，提出了动态自适应的显存卸载策略，实现存算最优均衡，再结合创新设计的显存友好的流水线并行调度，进一步降低显存开销。&lt;/li&gt; 
   &lt;li&gt;增强了框架原生的容错能力，实现了大规模集群训练容错系统，可在不影响训练效率的前提下在线监测静默数据损坏等难以察觉的故障，并实现了高可用的检查点容灾方法，降低中断恢复损失。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;在硬件适配方面，面向类 CUDA 芯片，全面升级插件式适配方案。 
  &lt;ul&gt; 
   &lt;li&gt;在设备资源的管理调度和高性能集合通讯库方面，针对类 CUDA 芯片做了管理接口升级和通信能力的增强，特别增强了分布式通信能力，使 XCCL 对齐 NCCL 的各结构体和功能。&lt;/li&gt; 
   &lt;li&gt;新增了类 CUDA 算子注册机制。以沐曦适配为例，在复用 GPU 算子内核的基础上，仅需一行代码即可完成算子内核注册。经过统计计算，算子内核的复用率最高可以达到 92%，可大幅降低硬件适配成本。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;使用体验方面，重点提升了兼容能力，包括开发接口兼容业界用法、safetensors 模型格式兼容、和第三方高性能加速库的兼容。 
  &lt;ul&gt; 
   &lt;li&gt;新增和修改开发接口兼容业界用法，新增系列 API 和别名，新增参数别名，新增专有和通用的参数。&lt;/li&gt; 
   &lt;li&gt;全面兼容 Safetensors 模型格式。新增 FlexCheckpoint 机制，支持跨分布式策略、跨模型结构间自动实现参数重切分，可显著降低权重转换成本，进而提升大模型端到端的训练与推理研发效率。&lt;/li&gt; 
   &lt;li&gt;系统性增强了接口兼容与算子注册能力，实现了高性能加速库一键导入，无需修改代码直接复用于飞桨的模型训练与推理加速过程中。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;1. 用户体验&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 API：&lt;code&gt;paddle.msort&lt;/code&gt;、&lt;code&gt;paddle.ravel&lt;/code&gt;、&lt;code&gt;paddle.nn.functional.dropout1d&lt;/code&gt;、&lt;code&gt;paddle.Tensor.type_as&lt;/code&gt;、&lt;code&gt;paddle.Tensor.requires_grad&lt;/code&gt;、&lt;code&gt;paddle.view_as_complex&lt;/code&gt;、&lt;code&gt;paddle.view_as_real&lt;/code&gt;、&lt;code&gt;paddle.nn.Parameter&lt;/code&gt;、&lt;code&gt;paddle.broadcast_shapes&lt;/code&gt;、&lt;code&gt;paddle.range&lt;/code&gt;、&lt;code&gt;paddle.as_tensor&lt;/code&gt;、&lt;code&gt;paddle.scatter_reduce/scatter_reduce_&lt;/code&gt;、&lt;code&gt;paddle.scatter_add&lt;/code&gt;、&lt;code&gt;paddle.tensor&lt;/code&gt;、&lt;code&gt;paddle.softmax&lt;/code&gt;、&lt;code&gt;paddle.Tensor.softmax&lt;/code&gt;、&lt;code&gt;paddle.rand_like&lt;/code&gt;、&lt;code&gt;paddle.is_autocast_enabled&lt;/code&gt;、&lt;code&gt;paddle.get_autocast_gpu_dtype&lt;/code&gt;、&lt;code&gt;paddle.Tensor.repeat&lt;/code&gt;、&lt;code&gt;paddle.permute&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74421" target="_blank"&gt;#74421&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74439" target="_blank"&gt;#74439&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74444" target="_blank"&gt;#74444&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74454" target="_blank"&gt;#74454&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74459" target="_blank"&gt;#74459&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74491" target="_blank"&gt;#74491&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74466" target="_blank"&gt;#74466&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74438" target="_blank"&gt;#74438&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74594" target="_blank"&gt;#74594&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74542" target="_blank"&gt;#74542&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74694" target="_blank"&gt;#74694&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74564" target="_blank"&gt;#74564&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74540" target="_blank"&gt;#74540&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74586" target="_blank"&gt;#74586&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74651" target="_blank"&gt;#74651&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74807" target="_blank"&gt;#74807&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74632" target="_blank"&gt;#74632&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74834" target="_blank"&gt;#74834&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74952" target="_blank"&gt;#74952&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74772" target="_blank"&gt;#74772&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74441" target="_blank"&gt;#74441&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74561" target="_blank"&gt;#74561&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74525" target="_blank"&gt;#74525&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&lt;code&gt;paddle.compat.*&lt;/code&gt;一系列 API，支持业界的通用用法，便于迁移代码，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.compat.median&lt;/code&gt;、&lt;code&gt;paddle.compat.nanmedian&lt;/code&gt;、&lt;code&gt;paddle.compat.softmax&lt;/code&gt;、&lt;code&gt;paddle.compat.sort&lt;/code&gt;、&lt;code&gt;paddle.compat.split&lt;/code&gt;、&lt;code&gt;paddle.compat.min/max&lt;/code&gt;、&lt;code&gt;paddle.compat.Unfold&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74865" target="_blank"&gt;#74865&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74874" target="_blank"&gt;#74874&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增初始化一系列 API，支持业界通用的参数初始化方式，包括&lt;code&gt;paddle.nn.init.kaiming_uniform_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.xavier_uniform_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.uniform_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.kaiming_normal_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.xavier_normal_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.normal_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.calculate_gain&lt;/code&gt;、&lt;code&gt;paddle.nn.init.constant_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.dirac_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.eye_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.ones_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.orthogonal_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.trunc_normal_&lt;/code&gt;、&lt;code&gt;paddle.nn.init.zeros_&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74478" target="_blank"&gt;#74478&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API 新增参数别名用法，例如既可以输入&lt;code&gt;x&lt;/code&gt;，也可以输入&lt;code&gt;input&lt;/code&gt;，用法更为灵活。包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.maximum&lt;/code&gt;、&lt;code&gt;paddle.minimum&lt;/code&gt;、&lt;code&gt;paddle.sqrt&lt;/code&gt;、&lt;code&gt;paddle.topk&lt;/code&gt;、&lt;code&gt;paddle.polar&lt;/code&gt;、&lt;code&gt;paddle.stack&lt;/code&gt;、&lt;code&gt;paddle.cos&lt;/code&gt;、&lt;code&gt;paddle.floor&lt;/code&gt;、&lt;code&gt;paddle.log&lt;/code&gt;、&lt;code&gt;paddle.pow&lt;/code&gt;、&lt;code&gt;paddle.rsqrt&lt;/code&gt;、&lt;code&gt;paddle.sign&lt;/code&gt;、&lt;code&gt;paddle.sin&lt;/code&gt;、&lt;code&gt;paddle.multiply&lt;/code&gt;、&lt;code&gt;paddle.where&lt;/code&gt;等。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74683" target="_blank"&gt;#74683&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74795" target="_blank"&gt;#74795&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74887" target="_blank"&gt;#74887&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74592" target="_blank"&gt;#74592&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;paddle.Tensor&lt;/code&gt;新增支持多种初始化方式，支持灵活的创建 Tensor。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74619" target="_blank"&gt;#74619&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F75022" target="_blank"&gt;#75022&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F75065" target="_blank"&gt;#75065&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API 新增一些专有参数，增强原有功能。包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.nn.functional.gelu&lt;/code&gt;、&lt;code&gt;paddle.divide/div/div_&lt;/code&gt;、&lt;code&gt;paddle.add&lt;/code&gt;、&lt;code&gt;paddle.Tensor.copy_&lt;/code&gt;、&lt;code&gt;paddle.norm&lt;/code&gt;、&lt;code&gt;paddle.linalg.norm&lt;/code&gt;、&lt;code&gt;paddle.nn.functional.silu&lt;/code&gt;、&lt;code&gt;paddle.repeat_interleave&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74485" target="_blank"&gt;#74485&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74562" target="_blank"&gt;#74562&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74420" target="_blank"&gt;#74420&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74768" target="_blank"&gt;#74768&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74855" target="_blank"&gt;#74855&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74903" target="_blank"&gt;#74903&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74788" target="_blank"&gt;#74788&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74631" target="_blank"&gt;#74631&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74947" target="_blank"&gt;#74947&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API 新增一些通用参数：&lt;code&gt;out&lt;/code&gt;、&lt;code&gt;device&lt;/code&gt;、&lt;code&gt;dtype&lt;/code&gt;、&lt;code&gt;requires_grad&lt;/code&gt;、&lt;code&gt;pin_memory&lt;/code&gt;、&lt;code&gt;bias&lt;/code&gt;，增强原有功能。包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.zeros&lt;/code&gt;、&lt;code&gt;paddle.zeros_like&lt;/code&gt;、&lt;code&gt;paddle.ones&lt;/code&gt;、&lt;code&gt;paddle.ones_like&lt;/code&gt;、&lt;code&gt;paddle.arange&lt;/code&gt;、&lt;code&gt;paddle.eye&lt;/code&gt;、&lt;code&gt;paddle.empty&lt;/code&gt;、&lt;code&gt;paddle.empty_like&lt;/code&gt;、&lt;code&gt;paddle.full&lt;/code&gt;、&lt;code&gt;paddle.full_like&lt;/code&gt;、&lt;code&gt;paddle.randn&lt;/code&gt;、&lt;code&gt;paddle.Tensor.new_full&lt;/code&gt;、&lt;code&gt;paddle.Tensor.new_empty&lt;/code&gt;、&lt;code&gt;paddle.Tensor.new_ones&lt;/code&gt;、&lt;code&gt;paddle.Tensor.new_zeros&lt;/code&gt;、&lt;code&gt;paddle.tril/triu&lt;/code&gt;、&lt;code&gt;paddle.bmm&lt;/code&gt;、&lt;code&gt;paddle.nn.Conv1D/Conv2D/Conv3D/Embedding&lt;/code&gt;、&lt;code&gt;paddle.diff&lt;/code&gt;、&lt;code&gt;paddle.cumsum&lt;/code&gt;、&lt;code&gt;paddle.var&lt;/code&gt;、&lt;code&gt;paddle.multinomial&lt;/code&gt;、&lt;code&gt;paddle.mean&lt;/code&gt;等。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74477" target="_blank"&gt;#74477&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74526" target="_blank"&gt;#74526&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74711" target="_blank"&gt;#74711&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74582" target="_blank"&gt;#74582&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74624" target="_blank"&gt;#74624&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74849" target="_blank"&gt;#74849&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74612" target="_blank"&gt;#74612&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74875" target="_blank"&gt;#74875&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74641" target="_blank"&gt;#74641&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74949" target="_blank"&gt;#74949&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74918" target="_blank"&gt;#74918&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74914" target="_blank"&gt;#74914&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74934" target="_blank"&gt;#74934&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74920" target="_blank"&gt;#74920&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74955" target="_blank"&gt;#74955&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74226" target="_blank"&gt;#74226&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74946" target="_blank"&gt;#74946&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API 新增别名，支持更多调用方式。包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.Tensor.mul_/mul&lt;/code&gt;、&lt;code&gt;paddle.autograd.Function&lt;/code&gt;、&lt;code&gt;paddle.argwhere&lt;/code&gt;、&lt;code&gt;paddle.cat&lt;/code&gt;、&lt;code&gt;paddle.clamp&lt;/code&gt;、&lt;code&gt;paddle.ger&lt;/code&gt;、&lt;code&gt;paddle.take_along_dim&lt;/code&gt;、&lt;code&gt;paddle.linalg.matmul&lt;/code&gt;、&lt;code&gt;paddle.special.logsumexp&lt;/code&gt;、&lt;code&gt;paddle.concatenate&lt;/code&gt;、&lt;code&gt;paddle.eq/gt、&lt;/code&gt;paddle.Tensor.take_along_dim&lt;code&gt;、&lt;/code&gt;paddle.nn.Conv1d/Conv2d/Conv3d`等。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74493" target="_blank"&gt;#74493&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74569" target="_blank"&gt;#74569&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74870" target="_blank"&gt;#74870&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.nanmedian&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;精度问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74263" target="_blank"&gt;#74263&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.distributed.fleet.utils.hybrid_parallel_util.fused_allreduce_gradients&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在 0-D 下的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74957" target="_blank"&gt;#74957&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.matmul&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在分布式下的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74989" target="_blank"&gt;#74989&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;针对返回多个 Tensor 的情况，通过 paddle 数据结构来封装，优化体验。包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;paddle.topk&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74931" target="_blank"&gt;#74931&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;创建类 API 支持 size 为可变参数的用法。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74494" target="_blank"&gt;#74494&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;文档&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增或修复文档。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74453" target="_blank"&gt;#74453&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74846" target="_blank"&gt;#74846&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74982" target="_blank"&gt;#74982&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;代码风格相关的优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74654" target="_blank"&gt;#74654&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74655" target="_blank"&gt;#74655&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74665" target="_blank"&gt;#74665&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74660" target="_blank"&gt;#74660&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74667" target="_blank"&gt;#74667&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74664" target="_blank"&gt;#74664&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74662" target="_blank"&gt;#74662&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74661" target="_blank"&gt;#74661&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74658" target="_blank"&gt;#74658&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74657" target="_blank"&gt;#74657&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74666" target="_blank"&gt;#74666&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74659" target="_blank"&gt;#74659&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74663" target="_blank"&gt;#74663&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74656" target="_blank"&gt;#74656&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74673" target="_blank"&gt;#74673&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74672" target="_blank"&gt;#74672&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74671" target="_blank"&gt;#74671&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74674" target="_blank"&gt;#74674&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74675" target="_blank"&gt;#74675&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74670" target="_blank"&gt;#74670&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74669" target="_blank"&gt;#74669&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74677" target="_blank"&gt;#74677&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74709" target="_blank"&gt;#74709&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74714" target="_blank"&gt;#74714&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74712" target="_blank"&gt;#74712&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74713" target="_blank"&gt;#74713&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74704" target="_blank"&gt;#74704&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74746" target="_blank"&gt;#74746&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74748" target="_blank"&gt;#74748&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74743" target="_blank"&gt;#74743&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74742" target="_blank"&gt;#74742&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74744" target="_blank"&gt;#74744&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74745" target="_blank"&gt;#74745&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74747" target="_blank"&gt;#74747&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74794" target="_blank"&gt;#74794&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74789" target="_blank"&gt;#74789&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74793" target="_blank"&gt;#74793&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74786" target="_blank"&gt;#74786&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74791" target="_blank"&gt;#74791&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74787" target="_blank"&gt;#74787&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74827" target="_blank"&gt;#74827&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74608" target="_blank"&gt;#74608&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74288" target="_blank"&gt;#74288&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74287" target="_blank"&gt;#74287&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74385" target="_blank"&gt;#74385&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74395" target="_blank"&gt;#74395&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74475" target="_blank"&gt;#74475&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74647" target="_blank"&gt;#74647&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MKLDNN/ONEDNN 相关的优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74299" target="_blank"&gt;#74299&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74244" target="_blank"&gt;#74244&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74230" target="_blank"&gt;#74230&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74314" target="_blank"&gt;#74314&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74327" target="_blank"&gt;#74327&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74325" target="_blank"&gt;#74325&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74326" target="_blank"&gt;#74326&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74315" target="_blank"&gt;#74315&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74399" target="_blank"&gt;#74399&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74398" target="_blank"&gt;#74398&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74393" target="_blank"&gt;#74393&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74392" target="_blank"&gt;#74392&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74367" target="_blank"&gt;#74367&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74391" target="_blank"&gt;#74391&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74423" target="_blank"&gt;#74423&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74424" target="_blank"&gt;#74424&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74436" target="_blank"&gt;#74436&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74417" target="_blank"&gt;#74417&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74410" target="_blank"&gt;#74410&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74473" target="_blank"&gt;#74473&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74458" target="_blank"&gt;#74458&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74501" target="_blank"&gt;#74501&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74487" target="_blank"&gt;#74487&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74502" target="_blank"&gt;#74502&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74513" target="_blank"&gt;#74513&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74518" target="_blank"&gt;#74518&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74516" target="_blank"&gt;#74516&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74507" target="_blank"&gt;#74507&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74504" target="_blank"&gt;#74504&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74505" target="_blank"&gt;#74505&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74509" target="_blank"&gt;#74509&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74535" target="_blank"&gt;#74535&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74536" target="_blank"&gt;#74536&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74517" target="_blank"&gt;#74517&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74503" target="_blank"&gt;#74503&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74557" target="_blank"&gt;#74557&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74550" target="_blank"&gt;#74550&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74575" target="_blank"&gt;#74575&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74587" target="_blank"&gt;#74587&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74576" target="_blank"&gt;#74576&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74588" target="_blank"&gt;#74588&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74549" target="_blank"&gt;#74549&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74581" target="_blank"&gt;#74581&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74583" target="_blank"&gt;#74583&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74628" target="_blank"&gt;#74628&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74630" target="_blank"&gt;#74630&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74635" target="_blank"&gt;#74635&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74679" target="_blank"&gt;#74679&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74648" target="_blank"&gt;#74648&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74127" target="_blank"&gt;#74127&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74636" target="_blank"&gt;#74636&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74552" target="_blank"&gt;#74552&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74551" target="_blank"&gt;#74551&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74678" target="_blank"&gt;#74678&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74680" target="_blank"&gt;#74680&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74730" target="_blank"&gt;#74730&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74751" target="_blank"&gt;#74751&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74895" target="_blank"&gt;#74895&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74821" target="_blank"&gt;#74821&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74897" target="_blank"&gt;#74897&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74734" target="_blank"&gt;#74734&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;代码实现相关的优化，变量与文件重命名。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74309" target="_blank"&gt;#74309&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74597" target="_blank"&gt;#74597&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74613" target="_blank"&gt;#74613&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74376" target="_blank"&gt;#74376&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74479" target="_blank"&gt;#74479&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74960" target="_blank"&gt;#74960&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74968" target="_blank"&gt;#74968&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74977" target="_blank"&gt;#74977&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;单测相关的优化，单测问题修复。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74595" target="_blank"&gt;#74595&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;编译相关的优化，CI 问题修复。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74356" target="_blank"&gt;#74356&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74936" target="_blank"&gt;#74936&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化调试与打印信息，优化报错信息。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74765" target="_blank"&gt;#74765&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74381" target="_blank"&gt;#74381&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74384" target="_blank"&gt;#74384&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74386" target="_blank"&gt;#74386&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74387" target="_blank"&gt;#74387&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74383" target="_blank"&gt;#74383&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74519" target="_blank"&gt;#74519&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74520" target="_blank"&gt;#74520&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74468" target="_blank"&gt;#74468&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;自定义算子相关优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74402" target="_blank"&gt;#74402&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;分布式 FlexCheckpoint 支持。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74966" target="_blank"&gt;#74966&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74593" target="_blank"&gt;#74593&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74785" target="_blank"&gt;#74785&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74814" target="_blank"&gt;#74814&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;2. 基础执行架构&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;新功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;动态图支持。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74484" target="_blank"&gt;#74484&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 safetensors。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74642" target="_blank"&gt;#74642&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74609" target="_blank"&gt;#74609&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F75049" target="_blank"&gt;#75049&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加 offloader 优化计算效率。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74837" target="_blank"&gt;#74837&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;为 conv_transpose 前向计算添加 API 支持。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74431" target="_blank"&gt;#74431&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加 offloader 优化计算效率。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74837" target="_blank"&gt;#74837&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;推理部署增加了 w4afp8 量化推理，支持 w4afp8 量化权重纯排及 all2all 通信&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74270" target="_blank"&gt;#74270&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;核心框架与基础设施优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74336" target="_blank"&gt;#74336&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74554" target="_blank"&gt;#74554&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74634" target="_blank"&gt;#74634&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;计算精度与类型处理。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74278" target="_blank"&gt;#74278&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74222" target="_blank"&gt;#74222&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74830" target="_blank"&gt;#74830&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;动态维度检查逻辑优化。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74633" target="_blank"&gt;#74633&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74650" target="_blank"&gt;#74650&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;内存与非法访问修复。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74347" target="_blank"&gt;#74347&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73443" target="_blank"&gt;#73443&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74953" target="_blank"&gt;#74953&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复报错/告警信息打印。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74474" target="_blank"&gt;#74474&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74533" target="_blank"&gt;#74533&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74685" target="_blank"&gt;#74685&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74721" target="_blank"&gt;#74721&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74754" target="_blank"&gt;#74754&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;代码质量与文档修正。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74378" target="_blank"&gt;#74378&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74828" target="_blank"&gt;#74828&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 flashmask API 处理逻辑。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74928" target="_blank"&gt;#74928&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复动转静模式下切分 CudaGraph 子图未生效的问题。 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74749" target="_blank"&gt;#74749&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;C++ 扩展开发。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74338" target="_blank"&gt;#74338&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FlexCP 功能优化。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74752" target="_blank"&gt;#74752&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74981" target="_blank"&gt;#74981&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化内存分配。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74463" target="_blank"&gt;#74463&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;废弃&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;清理动转静旧 IR 相关单测。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74698" target="_blank"&gt;#74698&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74715" target="_blank"&gt;#74715&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74718" target="_blank"&gt;#74718&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74782" target="_blank"&gt;#74782&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74962" target="_blank"&gt;#74962&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;更改补丁版本。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74940" target="_blank"&gt;#74940&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;3. 分布式&amp;amp;自动并行&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;并行策略&lt;/h3&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.2 版本中，对流水线并行功能进行了多项增强，包括实现了字典参数传递的支持，并扩展了 Pipeline Layer 和 SharedLayerDesc 对非流水线并行的兼容性；同时修复了多个关键问题，包括大尺寸张量的 IPC API 异常、流水线并行中的评估批次和非计算损失问题、MoE 模型的梯度释放错误、PP 场景下 NCCL 通信重建导致的 hang 问题，以及双流水线并行的 event 管理错误；此外还进行了多项性能优化，改进了双流水线并行的计算重叠效率以提升训练性能，并升级了 clear_param_storage 方法使其支持 sharding 模式下多 color 集合的清除和重置操作。&lt;/p&gt; 
&lt;h4 style="text-align:start"&gt;功能新增&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;实现流水线并行（Pipeline Parallel）中字典参数传递的支持。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74574" target="_blank"&gt;#74574&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74867" target="_blank"&gt;#74867&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Pipeline Layer 和 SharedLayerDesc 支持非流水线并行（nonpp parallel）。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74573" target="_blank"&gt;#74573&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="text-align:start"&gt;Bug 修复&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复大尺寸张量的 IPC API 问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74472" target="_blank"&gt;#74472&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复流水线并行中的评估批次（eval batch）及非计算损失（non-compute_loss）问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74170" target="_blank"&gt;#74170&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 MoE 模型上的梯度释放问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74972" target="_blank"&gt;#74972&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复在 pp 的场景下重建 NCCL comm 存在 hang 的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73625" target="_blank"&gt;#73625&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复双流水线并行（dual pp）的 event 管理错误。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74158" target="_blank"&gt;#74158&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="text-align:start"&gt;优化改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化双流水线并行的计算重叠（overlap）效率，提升训练性能。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74527" target="_blank"&gt;#74527&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;升级 clear_param_storage 方法，支持 sharding 下多个 color 集合清除和重置。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74741" target="_blank"&gt;#74741&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;自动并行&lt;/h3&gt; 
&lt;h4 style="text-align:start"&gt;功能改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持分布式张量的同一维度被多个 mesh 维度切分时的默认切分推导规则。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74396" target="_blank"&gt;#74396&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;改进&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;reshape&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;算子的切分推导规则，以支持分布式张量的同一维度被多个 mesh 维度切分的场景。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74352" target="_blank"&gt;#74352&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74579" target="_blank"&gt;#74579&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74565" target="_blank"&gt;#74565&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持在不改变分布式张量数据的情况下改变张量的 mesh。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74248" target="_blank"&gt;#74248&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="text-align:start"&gt;Bug 修复&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复调用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ProcessMesh&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;get_group&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法时重复创建通信组的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73099" target="_blank"&gt;#73099&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 MoE 场景下&lt;code&gt;get_local_slices&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74705" target="_blank"&gt;#74705&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 MoE 场景下梯度裁剪的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74916" target="_blank"&gt;#74916&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复流水线并行场景下不同 stage 间无法传递&lt;code&gt;stop_gradient&lt;/code&gt;参数的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73459" target="_blank"&gt;#73459&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复流水线并行场景下梯度裁剪的精度 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74409" target="_blank"&gt;#74409&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复动态图流水线并行场景下产生冗余输出的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74913" target="_blank"&gt;#74913&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复算子&lt;code&gt;moe_combine&lt;/code&gt;和&lt;code&gt;moe_gate_dispatch&lt;/code&gt;在 MoE 场景下跑不通的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74645" target="_blank"&gt;#74645&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="text-align:start"&gt;其他&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 dataloader 手动并行和自动并行的精度对齐。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73941" target="_blank"&gt;#73941&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化动态图流水并行调度逻辑。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74720" target="_blank"&gt;#74720&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;通信库&lt;/h3&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.2 版本中，修复了 DeepEP 支持 sm90 编译的一个报错，同时对 DeepEP 申请的显存分配添加了预分配功能，并升级了其 intranode 和 internode 计算 kernel，进一步优化了性能和稳定性。&lt;/p&gt; 
&lt;h4 style="text-align:start"&gt;Bug 修复&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 DeepEP 支持 sm90 编译的一个报错。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74762" target="_blank"&gt;#74762&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="text-align:start"&gt;功能改进&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;对 DeepEP 申请的显存分配添加预分配功能。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74465" target="_blank"&gt;#74465&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;升级 DeepEP 的 intranode 和 internode 计算 kernel。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74284" target="_blank"&gt;#74284&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;4. 算子机制&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;API 兼容性支持。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74506" target="_blank"&gt;#74506&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74676" target="_blank"&gt;#74676&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74558" target="_blank"&gt;#74558&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74572" target="_blank"&gt;#74572&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74691" target="_blank"&gt;#74691&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74703" target="_blank"&gt;#74703&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74750" target="_blank"&gt;#74750&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74757" target="_blank"&gt;#74757&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74802" target="_blank"&gt;#74802&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74546" target="_blank"&gt;#74546&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74547" target="_blank"&gt;#74547&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74802" target="_blank"&gt;#74802&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74859" target="_blank"&gt;#74859&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74910" target="_blank"&gt;#74910&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74873" target="_blank"&gt;#74873&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74882" target="_blank"&gt;#74882&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74901" target="_blank"&gt;#74901&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74899" target="_blank"&gt;#74899&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74449" target="_blank"&gt;#74449&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 fused_partial_rope 算子。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74577" target="_blank"&gt;#74577&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;0-size Tensor 相关修复。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74295" target="_blank"&gt;#74295&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74305" target="_blank"&gt;#74305&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74323" target="_blank"&gt;#74323&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74354" target="_blank"&gt;#74354&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;大 Tensor 相关修复。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74242" target="_blank"&gt;#74242&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74293" target="_blank"&gt;#74293&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74289" target="_blank"&gt;#74289&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74279" target="_blank"&gt;#74279&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74330" target="_blank"&gt;#74330&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74329" target="_blank"&gt;#74329&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74342" target="_blank"&gt;#74342&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74369" target="_blank"&gt;#74369&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74370" target="_blank"&gt;#74370&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74404" target="_blank"&gt;#74404&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74537" target="_blank"&gt;#74537&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74451" target="_blank"&gt;#74451&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74172" target="_blank"&gt;#74172&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74324" target="_blank"&gt;#74324&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74964" target="_blank"&gt;#74964&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74360" target="_blank"&gt;#74360&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74379" target="_blank"&gt;#74379&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74377" target="_blank"&gt;#74377&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74380" target="_blank"&gt;#74380&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74362" target="_blank"&gt;#74362&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74197" target="_blank"&gt;#74197&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API 兼容性相关修复。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74764" target="_blank"&gt;#74764&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74869" target="_blank"&gt;#74869&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74935" target="_blank"&gt;#74935&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;【开源任务】Paddle CPU/GPU Kernel 精度问题推全。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74149" target="_blank"&gt;#74149&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74598" target="_blank"&gt;#74598&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74719" target="_blank"&gt;#74719&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74625" target="_blank"&gt;#74625&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74555" target="_blank"&gt;#74555&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;其他重要修复。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74282" target="_blank"&gt;#74282&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74313" target="_blank"&gt;#74313&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74303" target="_blank"&gt;#74303&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74306" target="_blank"&gt;#74306&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74298" target="_blank"&gt;#74298&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74044" target="_blank"&gt;#74044&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74290" target="_blank"&gt;#74290&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74348" target="_blank"&gt;#74348&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74364" target="_blank"&gt;#74364&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74332" target="_blank"&gt;#74332&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74224" target="_blank"&gt;#74224&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74382" target="_blank"&gt;#74382&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74406" target="_blank"&gt;#74406&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74434" target="_blank"&gt;#74434&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74448" target="_blank"&gt;#74448&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74457" target="_blank"&gt;#74457&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74322" target="_blank"&gt;#74322&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74530" target="_blank"&gt;#74530&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74716" target="_blank"&gt;#74716&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74839" target="_blank"&gt;#74839&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74842" target="_blank"&gt;#74842&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74854" target="_blank"&gt;#74854&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74919" target="_blank"&gt;#74919&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74767" target="_blank"&gt;#74767&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F75003" target="_blank"&gt;#75003&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;API 兼容能力提升。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74456" target="_blank"&gt;#74456&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74480" target="_blank"&gt;#74480&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74523" target="_blank"&gt;#74523&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74490" target="_blank"&gt;#74490&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74548" target="_blank"&gt;#74548&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74596" target="_blank"&gt;#74596&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74568" target="_blank"&gt;#74568&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74559" target="_blank"&gt;#74559&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74629" target="_blank"&gt;#74629&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74623" target="_blank"&gt;#74623&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74700" target="_blank"&gt;#74700&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74643" target="_blank"&gt;#74643&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74602" target="_blank"&gt;#74602&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74783" target="_blank"&gt;#74783&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74781" target="_blank"&gt;#74781&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74735" target="_blank"&gt;#74735&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74725" target="_blank"&gt;#74725&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74815" target="_blank"&gt;#74815&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74856" target="_blank"&gt;#74856&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74925" target="_blank"&gt;#74925&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74545" target="_blank"&gt;#74545&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74932" target="_blank"&gt;#74932&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74784" target="_blank"&gt;#74784&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;slice/stride 相关优化。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74731" target="_blank"&gt;#74731&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74740" target="_blank"&gt;#74740&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74769" target="_blank"&gt;#74769&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74810" target="_blank"&gt;#74810&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74841" target="_blank"&gt;#74841&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74954" target="_blank"&gt;#74954&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74888" target="_blank"&gt;#74888&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74944" target="_blank"&gt;#74944&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74312" target="_blank"&gt;#74312&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74291" target="_blank"&gt;#74291&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74271" target="_blank"&gt;#74271&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74320" target="_blank"&gt;#74320&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74344" target="_blank"&gt;#74344&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74727" target="_blank"&gt;#74727&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74637" target="_blank"&gt;#74637&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;算子优化与 CUDA 支持。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74693" target="_blank"&gt;#74693&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74922" target="_blank"&gt;#74922&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74967" target="_blank"&gt;#74967&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;改进调试信息、兼容性增强。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74372" target="_blank"&gt;#74372&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74622" target="_blank"&gt;#74622&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;算子功能扩展与优化。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74790" target="_blank"&gt;#74790&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74979" target="_blank"&gt;#74979&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;FP8 计算优化。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74471" target="_blank"&gt;#74471&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74684" target="_blank"&gt;#74684&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74911" target="_blank"&gt;#74911&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;基础算子性能优化。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74442" target="_blank"&gt;#74442&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74638" target="_blank"&gt;#74638&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 fa3 变长序列反向计算并优化前向 API。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73831" target="_blank"&gt;#73831&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 FlashMask V2 功能。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74729" target="_blank"&gt;#74729&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;文档&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复英文文档问题以及版权年份问题。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74737" target="_blank"&gt;#74737&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 XPU 硬件上默认开启 WITH_XPU_FFT 选项。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74699" target="_blank"&gt;#74699&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;5. 硬件适配&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;类 CUDA 硬件接入方案完善&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;类 CUDA 硬件接入方案支持 cuBlas kernel 的复用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74591" target="_blank"&gt;#74591&lt;/a&gt;,&lt;/li&gt; 
 &lt;li&gt;类 CUDA 硬件接入方案已知问题修复&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74397" target="_blank"&gt;#74397&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74411" target="_blank"&gt;#74411&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74428" target="_blank"&gt;#74428&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74877" target="_blank"&gt;#74877&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74939" target="_blank"&gt;#74939&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;主仓单测支持多硬件&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;单测支持多硬件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74349" target="_blank"&gt;#74349&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74363" target="_blank"&gt;#74363&lt;/a&gt;，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74806" target="_blank"&gt;#74806&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74868" target="_blank"&gt;#74868&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74820" target="_blank"&gt;#74820&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74927" target="_blank"&gt;#74927&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;新增 Custom Device API 支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 Custom Device API 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74308" target="_blank"&gt;#74308&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74371" target="_blank"&gt;#74371&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74539" target="_blank"&gt;#74539&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;6. 安装环境&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 flashattent 编译缓存的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74388" target="_blank"&gt;#74388&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 site.USER_SITE 为 None 的 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74373" target="_blank"&gt;#74373&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复多架构 Linux 系统下 gtest 的编译 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74723" target="_blank"&gt;#74723&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复在 WITH_GPU=ON 情况下 DEBUG 模式编译多个报错。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74401" target="_blank"&gt;#74401&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 Windows 下 CUDA12.6 编译 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74990" target="_blank"&gt;#74990&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 api-benchmark 基线流水线 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74770" target="_blank"&gt;#74770&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 api-benchmark 基线流水线 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74778" target="_blank"&gt;#74778&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 api-benchmark 基线流水线 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74779" target="_blank"&gt;#74779&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 api-benchmark 基线流水线 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74780" target="_blank"&gt;#74780&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 api-benchmark 基线流水线 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74800" target="_blank"&gt;#74800&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 api-benchmark 基线流水线 bug。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74803" target="_blank"&gt;#74803&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;禁用 test_custom_contiguous 单测。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74337" target="_blank"&gt;#74337&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持录取 slice 流水线基线任务定时触发。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74419" target="_blank"&gt;#74419&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 slice 录基线添加手动指定 pr。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74445" target="_blank"&gt;#74445&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;检查代码中是否带有中问题。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74460" target="_blank"&gt;#74460&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 CI PaddleX 在 XPU 上的任务。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74426" target="_blank"&gt;#74426&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 slice 流水线豁免机制。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74482" target="_blank"&gt;#74482&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 paddle 基础镜像。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73423" target="_blank"&gt;#73423&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;windows 固定 ninja 版本 1.11。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74590" target="_blank"&gt;#74590&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持添加关闭 pr 取消 CI。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74604" target="_blank"&gt;#74604&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持快速跳过所有 CI。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74696" target="_blank"&gt;#74696&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;增加 api-benchmark 基线流水线。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74690" target="_blank"&gt;#74690&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 nccl 版本。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74809" target="_blank"&gt;#74809&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 approve 流水线 RD 名单。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74838" target="_blank"&gt;#74838&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 approve 流水线 RD 名单。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74902" target="_blank"&gt;#74902&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 safetensor 到镜像中。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74904" target="_blank"&gt;#74904&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加 flashatten 的编译 flag。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74959" target="_blank"&gt;#74959&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;临时禁用 win-inference 流水线。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74980" target="_blank"&gt;#74980&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 windows 编译 phi 动态库。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74950" target="_blank"&gt;#74950&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Freleases%2Ftag%2Fv3.2.0" target="_blank"&gt;https://github.com/PaddlePaddle/Paddle/releases/tag/v3.2.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371061/paddlepaddle-3-2-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371061/paddlepaddle-3-2-0-released</guid>
      <pubDate>Sat, 06 Sep 2025 02:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>BFE Server v1.8.0 发布，新增 AI 网关能力</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;BFE 开源项目的数据面转发引擎 BFE Server &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fb3D-fUJqESk_dwPvBGtH7Q" target="_blank"&gt;发布&lt;/a&gt;了新版本&amp;nbsp;v1.8.0，具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;&lt;strong&gt;功能新增&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持 AI 网关的部分基础功能&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持调用第三方 WAF 服务&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持通过 HTTPS 向后端 RS 转发请求&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;对 AI 网关的功能支持&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;AI 网关是模型与业务间的流量中枢，可统一接入多种大模型，实现鉴权、流控、缓存、内容检测等多种功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="351" src="https://oscimg.oschina.net/oscnet/up-c85272abc7a6ff3cf6fa2cc4d912226c305.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;BFE 本次新增 AI 网关的部分基础能力支持，包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="margin-left: 0px; margin-right: 0px;"&gt;&lt;span style="color:#000000"&gt;在条件表达式中，增加 req_body_json_in() 原语，用于对请求 body 中的 JSON 数据做条件匹配&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="margin-left: 0px; margin-right: 0px;"&gt;&lt;span style="color:#000000"&gt;新增 mod_ai_token_auth 模块，用于支持大模型 API-key(token) 的鉴权和配额控制&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="margin-left: 0px; margin-right: 0px;"&gt;&lt;span style="color:#000000"&gt;新增 mod_body_process 模块，用于提供 body 的流式处理框架&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;调用第三方 WAF 服务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;WAF 即 Web 应用防火墙，通过过滤、监控和拦截恶意流量与攻击，保护网站免受 SQL 注入、XSS 等威胁，保障业务安全。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="345" src="https://oscimg.oschina.net/oscnet/up-4c642706d40545447d7f5529d15dd6611a3.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;BFE 本次新增 mod_unified_waf 模块，用于支持将待检测内容发送给第三方 WAF 服务，并获取检测结果。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;为了便于第三方 WAF 服务和 BFE 对接，项目团队定义了 BWI（BFE WAF Interface）。对于第三方的 WAF，只需要按照 BWI 的规范要求提供可被 BFE 调用的客户端 SDK，就可以实现和 BFE 的对接。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/371055</link>
      <guid isPermaLink="false">https://www.oschina.net/news/371055</guid>
      <pubDate>Sat, 06 Sep 2025 02:25:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
