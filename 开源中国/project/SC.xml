<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 26 Jul 2024 10:32:23 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>Zulip Server 9.0 发布，开源团队协作工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Zulip 是一个开源团队协作工具，一款专为实时和异步对话而设计的现代团队聊天应用程序，支持快速搜索、拖放文件上传、图像预览、组私人消息、可听通知、错过电子邮件消息提醒与桌面应用等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Zulip Server 9.0 现已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzulip.readthedocs.io%2Fen%2Flatest%2Foverview%2Fchangelog.html%23zulip-server-9-0&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，一些更新亮点如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加了对 Ubuntu 24.04 的支持，并放弃了对 Ubuntu 20.04 的支持。&lt;/li&gt; 
 &lt;li&gt;为了让用户更轻松地了解 Zulip 的新功能，重要的产品变更现在通过自动消息发布，这些消息随包含新功能的 Zulip server 版本一起提供。&lt;/li&gt; 
 &lt;li&gt;为了更好地匹配其他应用程序中熟悉的术语，在此版本中，「streams」已在整个应用程序中重命名为「channels」。功能保持完全相同，并且集成不需要为此转换进行更新。&lt;/li&gt; 
 &lt;li&gt;为了清晰和一致，现在将同时显示多个对话的三个关键消息视图标记为「Combined feed」（以前为「All messages」）、「Channel feed」和「Direct message feed」。&lt;/li&gt; 
 &lt;li&gt;为了使阅读更加舒适，Zulip 经过重新设计，字体大小和行距更大。由于个人喜好不同，以前的设计仍可通过 compact mode&amp;nbsp;设置使用。&lt;/li&gt; 
 &lt;li&gt;重新设计了主搜索功能，并使用搜索过滤器使其更易于使用。&lt;/li&gt; 
 &lt;li&gt;将内容粘贴到撰写框中时，Zulip 现在会尽力保留格式，包括链接、项目符号列表、粗体、斜体等。如果不需要格式，可以使用&lt;code&gt;Ctrl+Z&lt;/code&gt;撤，或粘贴为纯文本。&lt;/li&gt; 
 &lt;li&gt;为了更轻松地逐个主题阅读消息，左侧边栏中的频道链接现在可直接将用户带到该频道的最热门话题。&lt;/li&gt; 
 &lt;li&gt;要引用和回复消息的一部分，现在可以选择要引用的部分。&lt;/li&gt; 
 &lt;li&gt;右侧边栏经过重新设计，可高亮显示当前频道或私信对话中的用户。现在还可以隐藏侧栏中的频道/用户列表，以减少干扰。&lt;/li&gt; 
 &lt;li&gt;开始撰写消息时，最近编辑过的对话草稿会自动出现在撰写框中。可以随时保存草稿以供日后使用，也可以开始撰写新消息。&lt;/li&gt; 
 &lt;li&gt;添加了「Reactions」视图，以显示其他人如何用表情符号反应来回复你的信息。还可以搜索所有带有 reactions 的信息。&lt;/li&gt; 
 &lt;li&gt;如果不想在其他人输入时看到通知，现在可以禁用。&lt;/li&gt; 
 &lt;li&gt;当打开网络或桌面应用程序时，主题和消息的加载速度现在更快。&lt;/li&gt; 
 &lt;li&gt;上传的图片现在采用缩略图显示，使图片在所有客户端中的加载速度更快。信息提要中显示的新上传的动画图片现在默认只在悬停时显示动画，而不是连续显示，用户可通过设置来控制动画。(以前上传的图片和第三方链接的图片预览将继续直接使用原始图片）。&lt;/li&gt; 
 &lt;li&gt;重新设计了 onboarding experience。&lt;/li&gt; 
 &lt;li&gt;重新设计了所有弹出窗口，使其外观更简洁、图标更美观、屏幕阅读器可访问性得到改善。&lt;/li&gt; 
 &lt;li&gt;添加了一个新的&lt;code&gt;with&lt;/code&gt;narrow 参数，用于实现主题的永久链接，旨在处理重命名或标记为已解决的主题。此运算符在 9.0 中未使用，但从 9.x 维护版本开始，主题链接 Markdown 功能可能会使用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;更多详情可查看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzulip.readthedocs.io%2Fen%2Flatest%2Foverview%2Fchangelog.html%23zulip-server-9-0&quot; target=&quot;_blank&quot;&gt;https://zulip.readthedocs.io/en/latest/overview/changelog.html#zulip-server-9-0&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304026/zulip-server-9-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304026/zulip-server-9-0-released</guid>
            <pubDate>Fri, 26 Jul 2024 06:22:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Taro 4.0.3 发布，包含 4.x 以来所有改动</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Taro 4.0.3 现已发布。Taro 是一个开放式跨端跨框架解决方案，支持使用 React/Vue/Nerv 等框架来开发微信 / 京东 / 百度 / 支付宝 / 字节跳动 / QQ 小程序 / H5 等应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此版本为第一个 Tag 为 latest 的 4.x 版本，所以此发布记录包括了 4.x 以来所有的改动：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;鸿蒙端平台支持 —— Web To Harmony&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;小程序性能优化 —— CompileMode&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;React Native 适配升级 —— 支持 0.73 版本&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新的编译系统支持 —— Vite&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;基建更新改造 —— Rust&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新的 DSL 框架支持 —— Solidjs&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更新说明：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNervJS%2Ftaro%2Freleases%2Ftag%2Fv4.0.3&quot; target=&quot;_blank&quot;&gt;https://github.com/NervJS/taro/releases/tag/v4.0.3&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304020/taro-4-0-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304020/taro-4-0-3-released</guid>
            <pubDate>Fri, 26 Jul 2024 05:50:08 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>优秀国产规则引擎框架，LiteFlow 发布 v2.12.2 版本</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style=&quot;color:#353535; margin-left:0; margin-right:0; text-align:left&quot;&gt;LiteFlow 是一个开源编排式规则引擎，能够让你的系统逻辑任意编排，可选用脚本书写逻辑，支持多达 8 种脚本语言，支持丰富的第三方存储的支持，所有的逻辑和规则均可热变更。设计系统和重构系统的神器。&lt;/p&gt; 
 &lt;p style=&quot;color:#353535; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;LiteFlow 是&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;Gitee&lt;/span&gt;&lt;span&gt;的高 star 项目，截止到发此文章的时候，Gitee star 超过 6.2k，Github 则拥有 2.8Kstar。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#353535; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;同时 LiteFlow 也是国内优秀的社区驱动型开源项目，开源 3 年多，目前已经被各大一线公司应用在&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;核心系统&lt;/span&gt;&lt;span&gt;上，据不完全统计，国内将近千余家公司都在使用。特性以及支持度都非常好。社区人数超过 5000 人。测试用例 1800 多个，质量有保障。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#353535; margin-left:0; margin-right:0; text-align:left&quot;&gt;如果你是第一次知道这个项目，可以去官网或相关的主页进行了解：&lt;/p&gt; 
 &lt;p style=&quot;color:#353535; margin-left:0; margin-right:0; text-align:left&quot;&gt;项目官网:https://liteflow.cc&lt;/p&gt; 
 &lt;p style=&quot;color:#353535; margin-left:0; margin-right:0; text-align:left&quot;&gt;以下文章 LiteFlow 简称为 LF。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;LF 2.12.2.1 发布啦！&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;肯定有小伙伴会奇怪，这次怎么最后还有个点 1 呢。因为&lt;code&gt;2.12.2&lt;/code&gt;本来已经发布，但是这期间社区里有个同学用到了声明式的异常事件监听功能，发现有一个 bug 并立即上报了。我在查清楚原委之后觉得这应该被尽快修复，所以在&lt;code&gt;2.12.2&lt;/code&gt;后面又打了个补丁版本。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;但是这并不代表&lt;code&gt;2.12.2&lt;/code&gt;就不能用，如果你没有用到声明式的异常事件监听功能，那么&lt;code&gt;2.12.2&lt;/code&gt;和&lt;code&gt;2.12.2.1&lt;/code&gt;是完全一致的。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;这次的&lt;code&gt;2.12.2.1&lt;/code&gt;版本没有带来大的特性，算是常规性迭代，但是也带了很多功能的增强和一些 bug 的修复。这些 issue 都来自于社区。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;所以更加说明了我们是非常重视社区的。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;这次版本带来了 13 个 issue 的更新，包括 8 个增强和 5 个修复。接下来我会挑一些来介绍。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;决策路由支持刷新&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;决策路由自从 2.12.0 推出以来，我们一直在对决策路由做一些优化。比如 2.12.1 版本支持了数据库中使用决策路由，以及决策路由的命名空间。这次我们对决策路由的调整是：支持了决策路由的刷新。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;如果决策路由配置在数据库中，并开启了轮询，那么改变等待轮询即可刷新决策路由。如果没有开启轮询，你现在可以通过调用以下 api 来完成刷新：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FlowBus.reloadChain(&lt;span style=&quot;color:#98c379&quot;&gt;&quot;chain1&quot;&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#98c379&quot;&gt;&quot;THEN(a,&amp;nbsp;b,&amp;nbsp;c)&quot;&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#98c379&quot;&gt;&quot;AND(r1,&amp;nbsp;r2)&quot;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;是的，它是一个重载方法，它还有一个两个参数的方法，那是单独刷新规则的，现在它的重载可以连带规则和路由一起刷新了。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;SQL 插件的轮询逻辑优化&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;在这之前，一直有社区里的同学反映，在使用数据库存储规则和脚本时，单更新脚本和单更新规则，自动刷新都正常，但是同时更新了规则和脚本，刷新就会一直失效。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;我们这次修复了这个问题。现在无论你怎么更新，自动刷新都会生效。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;上下文支持超类获取&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;这也是社区一位使用者提出的建议，有些上下文的设计是有超类的。在公共组件里希望可以用超类去获取上下文。这样更利于公共组件的定义。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;这次我们支持了这一形式的获取。你的上下文既可以用本身的 Class 获取，也可以用它的超类去获取。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;EL 的构建现在支持 retry 属性的构建了&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;如果经常用动态代码构建规则特性的小伙伴应该知道，LF 里有个 ELBus 对象，是可以很方便的通过代码来构建出规则的。&lt;/p&gt; 
&lt;p style=&quot;color:#353535; margin-left:0; margin-right:0&quot;&gt;之前不支持 retry 属性，这次我们不仅支持了 retry。而且我们把 ELBus 的核心代码部分重构了一遍，更加合理，更加高效。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;全部更新列表&lt;/strong&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;增强&amp;nbsp;&lt;em&gt;#IAE5PA&amp;nbsp;FlowBus 中提供刷新 route 的 api 方法&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAE5PA

增强&amp;nbsp;&lt;em&gt;#IACEH9&amp;nbsp;SQL 插件中的轮询逻辑优化&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IACEH9

增强&amp;nbsp;&lt;em&gt;#IACEGB&amp;nbsp;上下文超类判断的获取和转换&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IACEGB

增强&amp;nbsp;&lt;em&gt;#IA9QBG&amp;nbsp;el-builder 的部分重构&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IA9QBG

增强&amp;nbsp;&lt;em&gt;#IA9NOI&amp;nbsp;ELBus 中增加对 retry 构建的 api 支持&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IA9NOI

增强&amp;nbsp;&lt;em&gt;#IA6E3Q&amp;nbsp;redis 配置的时候可以指定 Redisson 的链接数，默认的 connections 太多了&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IA6E3Q

增强&amp;nbsp;&lt;em&gt;#IA8B3T&amp;nbsp;插件&amp;nbsp;throw&amp;nbsp;Exception&amp;nbsp;会丢失堆栈&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IA8B3T

增强&amp;nbsp;&lt;em&gt;#IABK5C&amp;nbsp;校验&amp;nbsp;EL&amp;nbsp;表达式，获取校验失败原因&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IABK5C

修复&amp;nbsp;&lt;em&gt;#IA5PAK&amp;nbsp;ELBus 串行编排不支持对每个节点进行超时配置&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IA5PAK

修复&amp;nbsp;&lt;em&gt;#IAD2HH&amp;nbsp;希望支持执行节点日志与监控日志的分开管理&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAD2HH

修复&amp;nbsp;&lt;em&gt;#IACSQ8&amp;nbsp;liteflow-solon-plugin&amp;nbsp;启动报错&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IACSQ8

修复&amp;nbsp;&lt;em&gt;#IADIXE&amp;nbsp;使用迭代循环组件，下游 getCurrLoopObj() 获取为 null&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IADIXE

修复&amp;nbsp;&lt;em&gt;#IAFKQV&amp;nbsp;声明式的 onError 方法取不到 Exception&lt;/em&gt;

https://gitee.com/dromara/liteFlow/issues/IAFKQV
&lt;/code&gt;&lt;/pre&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304018/liteflow-2-12-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304018/liteflow-2-12-2-released</guid>
            <pubDate>Fri, 26 Jul 2024 05:31:08 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Rust 1.80.0 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Rust 1.80.0 稳定版现已发布，&lt;span style=&quot;color:#333333&quot;&gt;主要带来以下变化：&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;code&gt;LazyCell&lt;/code&gt;和&lt;code&gt;LazyLock&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;新的「lazy」类型将值的初始化延迟到首次访问，它们类似于&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F06%2F01%2FRust-1.70.0.html%23oncecell-and-oncelock&quot; target=&quot;_blank&quot;&gt;1.70 中稳定的&lt;/a&gt;&lt;code&gt;OnceCell&lt;/code&gt;和&lt;code&gt;OnceLock&lt;/code&gt;类型，但单元格中包含了初始化函数。这完成了从流行的和板条箱中采用到标准库中的功能的稳定化。完成了从&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrates.io%2Fcrates%2Flazy-static&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;lazy_static&lt;/code&gt;&lt;/a&gt;和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcrates.io%2Fcrates%2Fonce_cell&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;once_cell&lt;/code&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;crates&amp;nbsp;&lt;/span&gt;到标准库中所采用功能的稳定化。&lt;/p&gt; 
&lt;p&gt;LazyLock 是线程安全选项，适用于&lt;code&gt;static&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;values&amp;nbsp;&lt;/span&gt;等地方。&lt;/p&gt; 
&lt;pre style=&quot;text-align:start&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span style=&quot;color:#b854d4&quot;&gt;use&lt;/span&gt; std::sync::LazyLock;
&lt;span style=&quot;color:#b854d4&quot;&gt;use&lt;/span&gt; std::time::Instant;

&lt;span style=&quot;color:#b854d4&quot;&gt;static&lt;/span&gt; LAZY_TIME: LazyLock&amp;lt;Instant&amp;gt; = LazyLock::new(Instant::now);

&lt;span style=&quot;color:#b854d4&quot;&gt;fn&lt;/span&gt; &lt;span style=&quot;color:#6684e1&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#b854d4&quot;&gt;let&lt;/span&gt; start = Instant::now();
    std::thread::scope(|s| {
        s.spawn(|| {
            &lt;span style=&quot;color:#b65611&quot;&gt;println!&lt;/span&gt;(&lt;span style=&quot;color:#60ac39&quot;&gt;&quot;Thread lazy time is {:?}&quot;&lt;/span&gt;, LAZY_TIME.duration_since(start));
        });
        &lt;span style=&quot;color:#b65611&quot;&gt;println!&lt;/span&gt;(&lt;span style=&quot;color:#60ac39&quot;&gt;&quot;Main lazy time is {:?}&quot;&lt;/span&gt;, LAZY_TIME.duration_since(start));
    });
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;LazyCell 缺乏线程同步，因此没有实现&lt;code&gt;static&lt;/code&gt;所需的 Sync，但仍可用于&lt;code&gt;thread_local!&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;statics&lt;/span&gt;。Rust 团队表示，根据线程安全的需要，这两种类型也可用于其他数据结构，因此 lazy initialization 在任何地方都可用。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Checked&amp;nbsp;&lt;code&gt;cfg&lt;/code&gt;&amp;nbsp;names and values&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 1.79 中，&lt;code&gt;rustc&lt;/code&gt;稳定了一个&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Frustc%2Fcheck-cfg.html&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;--check-cfg&lt;/code&gt;flag&lt;/a&gt;，现在 Cargo 1.80 正在对其知道的所有&lt;code&gt;cfg&lt;/code&gt;名称和值启用这些检查（除了来自&lt;code&gt;rustc&lt;/code&gt;的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Frustc%2Fcheck-cfg.html%23well-known-names-and-values&quot; target=&quot;_blank&quot;&gt;众所周知的名称和值&lt;/a&gt;）。包括来自&lt;code&gt;Cargo.toml&lt;/code&gt;的功能名称以及来自构建脚本的新&lt;code&gt;cargo::rustc-check-cfg&lt;/code&gt;output。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;code&gt;unexpected_cfgs&lt;/code&gt;会被 warning-by-default unexpected_cfgs lint 报告，用于捕获拼写错误或其他错误配置。例如，在具有可选&lt;code&gt;rayon&lt;/code&gt;依赖项的项目中，此代码配置了错误的&lt;code&gt;feature&lt;/code&gt;值：&lt;/span&gt;&lt;/p&gt; 
&lt;pre style=&quot;text-align:start&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span style=&quot;color:#b854d4&quot;&gt;fn&lt;/span&gt; &lt;span style=&quot;color:#6684e1&quot;&gt;main&lt;/span&gt;() {
    &lt;span style=&quot;color:#b65611&quot;&gt;println!&lt;/span&gt;(&lt;span style=&quot;color:#60ac39&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;);

    &lt;span style=&quot;color:#b65611&quot;&gt;#[cfg(feature = &quot;crayon&quot;)]&lt;/span&gt;
    rayon::join(
        || &lt;span style=&quot;color:#b65611&quot;&gt;println!&lt;/span&gt;(&lt;span style=&quot;color:#60ac39&quot;&gt;&quot;Hello, Thing One!&quot;&lt;/span&gt;),
        || &lt;span style=&quot;color:#b65611&quot;&gt;println!&lt;/span&gt;(&lt;span style=&quot;color:#60ac39&quot;&gt;&quot;Hello, Thing Two!&quot;&lt;/span&gt;),
    );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre style=&quot;text-align:start&quot;&gt;&lt;code class=&quot;language-console&quot;&gt;warning: unexpected `cfg` condition value: `crayon`
 --&amp;gt; src/main.rs:4:11
  |
4 |     #[cfg(feature = &quot;crayon&quot;)]
  |           ^^^^^^^^^^--------
  |                     |
  |                     help: there is a expected value with a similar name: `&quot;rayon&quot;`
  |
  = note: expected values for `feature` are: `rayon`
  = help: consider adding `crayon` as a feature in `Cargo.toml`
  = note: see &amp;lt;https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html&amp;gt; for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;无论实际的&lt;code&gt;rayon&lt;/code&gt;功能是否启用，都会报告相同的警告。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;还可以使用&lt;code&gt;Cargo.toml&lt;/code&gt;清单中的&lt;code&gt;[lints]&lt;/code&gt;表来扩展自定义&lt;code&gt;cfg&lt;/code&gt;的已知名称和值列表。&lt;code&gt;rustc&lt;/code&gt;会自动提供警告中使用的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Frustc%2Fcheck-cfg.html%23specifying-expected-names-and-values&quot; target=&quot;_blank&quot;&gt;语法。&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre style=&quot;text-align:start&quot;&gt;&lt;code class=&quot;language-toml&quot;&gt;&lt;span style=&quot;color:#6684e1&quot;&gt;[lints.rust]&lt;/span&gt;
unexpected_cfgs = { level = &lt;span style=&quot;color:#60ac39&quot;&gt;&quot;warn&quot;&lt;/span&gt;, check-cfg = [&lt;span style=&quot;color:#60ac39&quot;&gt;&#39;cfg(foo, values(&quot;bar&quot;))&#39;&lt;/span&gt;] }&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;可以在&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2024%2F05%2F06%2Fcheck-cfg.html&quot; target=&quot;_blank&quot;&gt;之前的博客文章&lt;/a&gt;中阅读有关此功能的更多信息。&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;Exclusive ranges in patterns&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;Rust ranged 模式现在可以使用 exclusive endpoints，写成&lt;code&gt;a..b&lt;/code&gt;或&lt;code&gt;..b&lt;/code&gt;，类似于&lt;code&gt;Range&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;RangeTo&lt;/code&gt;表达式类型。例如，以下模式现在可以在一个模式的终点和下一个模式的起点使用相同的常量：&lt;/p&gt; 
&lt;pre style=&quot;text-align:start&quot;&gt;&lt;code class=&quot;language-rust&quot;&gt;&lt;span style=&quot;color:#b854d4&quot;&gt;pub&lt;/span&gt; &lt;span style=&quot;color:#b854d4&quot;&gt;fn&lt;/span&gt; &lt;span style=&quot;color:#6684e1&quot;&gt;size_prefix&lt;/span&gt;(n: &lt;span style=&quot;color:#b65611&quot;&gt;u32&lt;/span&gt;) -&amp;gt; &amp;amp;&lt;span style=&quot;color:#60ac39&quot;&gt;&#39;static&lt;/span&gt; &lt;span style=&quot;color:#b65611&quot;&gt;str&lt;/span&gt; {
    &lt;span style=&quot;color:#b854d4&quot;&gt;const&lt;/span&gt; K: &lt;span style=&quot;color:#b65611&quot;&gt;u32&lt;/span&gt; = &lt;span style=&quot;color:#b65611&quot;&gt;10u32&lt;/span&gt;.pow(&lt;span style=&quot;color:#b65611&quot;&gt;3&lt;/span&gt;);
    &lt;span style=&quot;color:#b854d4&quot;&gt;const&lt;/span&gt; M: &lt;span style=&quot;color:#b65611&quot;&gt;u32&lt;/span&gt; = &lt;span style=&quot;color:#b65611&quot;&gt;10u32&lt;/span&gt;.pow(&lt;span style=&quot;color:#b65611&quot;&gt;6&lt;/span&gt;);
    &lt;span style=&quot;color:#b854d4&quot;&gt;const&lt;/span&gt; G: &lt;span style=&quot;color:#b65611&quot;&gt;u32&lt;/span&gt; = &lt;span style=&quot;color:#b65611&quot;&gt;10u32&lt;/span&gt;.pow(&lt;span style=&quot;color:#b65611&quot;&gt;9&lt;/span&gt;);
    &lt;span style=&quot;color:#b854d4&quot;&gt;match&lt;/span&gt; n {
        ..K =&amp;gt; &lt;span style=&quot;color:#60ac39&quot;&gt;&quot;&quot;&lt;/span&gt;,
        K..M =&amp;gt; &lt;span style=&quot;color:#60ac39&quot;&gt;&quot;k&quot;&lt;/span&gt;,
        M..G =&amp;gt; &lt;span style=&quot;color:#60ac39&quot;&gt;&quot;M&quot;&lt;/span&gt;,
        G.. =&amp;gt; &lt;span style=&quot;color:#60ac39&quot;&gt;&quot;G&quot;&lt;/span&gt;,
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Exclusive ranges&amp;nbsp;&lt;/span&gt;一直以来作为一个不稳定的功能提供。Rust 团队表示，阻碍因素在于它们可能会增加混乱并增加模式中出现 off-by-one errors 的可能性。在 Rust 1.80 中，exhaustiveness checking 得到了增强，可以更好地检测模式匹配中的差距，新的 lint&lt;code&gt;non_contiguous_range_endpoints&lt;/code&gt;和&lt;code&gt;overlapping_range_endpoints&lt;/code&gt;将有助于检测在哪些情况下需要将 exclusive 模式切换为 inclusive 模式，反之亦然。&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;Rust 1.80 还稳定了许多 API，详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2024%2F07%2F25%2FRust-1.80.0.html&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/304009/rust-1-80-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/304009/rust-1-80-0-released</guid>
            <pubDate>Fri, 26 Jul 2024 03:42:23 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Linux Mint 22 「Wilma」 正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Linux Mint 22 「Wilma」 已正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.linuxmint.com%2F%3Fp%3D4731&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;，这是一个长期支持版本 (LTS)，将支持到 2029 年。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6d2478fbf48b3639d6a9af9f5a55a4b7e43.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;新版本提供了更好的语言支持。现在，当你安装 Linux Mint 22 时，只有你选择的语言和英语会在安装结束时保留下来，这为你节省了大量空间。大多数人可能没有意识到，旧版本并没有对这一点进行优化。&lt;/p&gt; 
&lt;p&gt;说到语言，安装介质现在包括英语、德语、西班牙语、法语、俄语、葡萄牙语、荷兰语和意大利语，用于离线安装。其他语言则需要互联网连接。&lt;/p&gt; 
&lt;p&gt;就新技术而言，以下是与此版本相关的内容：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Linux Mint 22 配备了现代组件和新的 Ubuntu 24.04 软件包库。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为了保证与现代硬件更好地兼容，内核版本为 6.8，Linux Mint 22.x 版本将沿用 HWE 系列。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;默认声音服务器切换为 Pipewire。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;软件源支持新的 Debian DEB822 格式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新了主题以支持 GTK4。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为 Pix 添加了 JXL 支持，并为其实施了新的缩略图编辑器。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;所有使用 libsoup2 的软件都已迁移到 libsoup3。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在启动序列、Plymouth 和 Slick-Greeter 中改进了对 HiDPI 的支持。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Linux Mint 22 的另一项重大改进是对 mintinstall 软件管理器的改进。现在，它的加载速度比以前更快，主窗口会立即出现。它还包括改进的多线程、新的偏好设置页面和横幅幻灯片。&lt;/p&gt; 
&lt;p&gt;我们之前提到过这一点，但新的软件管理器现在&lt;a href=&quot;https://www.oschina.net/news/295778/linux-mint-unverified-flatpaks&quot;&gt;默认禁用未验证的 Flatpak 软件包&lt;/a&gt;，以提高系统的安全性；已验证的 Flatpak 软件包现在会显示维护者姓名，以增加信任度。如果启用未经验证的 Flatpak 软件包，它们将被清楚地标记出来。&lt;/p&gt; 
&lt;p&gt;最后，Linux Mint 22 配备了 Cinnamon 6.2 桌面。新功能如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;减少打印机添加的通知（静音 2 小时）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 Wayland：Clutter Polkit 代理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Spices：支持按键绑定&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Polkit 代理和用户小程序更好地支持头像功能&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;工作区切换器：中间点击可移除悬停的工作区&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;按键绑定：可按绑定搜索&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;角栏小程序：添加 Shift+ 点击操作&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;小程序：提高报告 VPN 和电池状态的精确度&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果你运行的是 Linux Mint 22 Beta 版，则无需升级即可跳转到稳定版，只需打开&quot;更新管理器&quot;并应用可用的更新即可。&lt;/p&gt; 
&lt;p&gt;如果你运行的是 Linux Mint 21.3，升级说明将在未来几天内发布，不过，如果它和以前的版本一样，你会收到更新管理器的更新，然后就可以在更新管理器的菜单中找到升级选项了。&lt;/p&gt; 
&lt;p&gt;如果你想直接安装 Linux Mint 22，只需从&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxmint.com%2Fdownload.php&quot; target=&quot;_blank&quot;&gt;下载页面下载&lt;/a&gt;你喜欢的版本即可。你可以在 Cinnamon、Xfce 和 Mate 中进行选择。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303986/linux-mint-22-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303986/linux-mint-22-released</guid>
            <pubDate>Fri, 26 Jul 2024 02:41:13 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Electron v31.3.0 发布，跨平台桌面应用开发工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;Electron 是一个使用 JavaScript、HTML 和 CSS 构建跨平台的桌面应用程序。它基于 Node.js 和 Chromium，被 Atom 编辑器和许多其他应用程序使用。Electron 兼容 Mac、Windows 和 Linux，可以构建出三个平台的应用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Electron v31.3.0&amp;nbsp;&lt;span style=&quot;color:#333333&quot;&gt;更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;已添加&lt;code&gt;DownloadItem.getCurrentBytesPerSecond()&lt;/code&gt;、&lt;code&gt;DownloadItem.getPercentComplete()&lt;/code&gt;、&lt;code&gt;DownloadItem.getEndTime()&lt;/code&gt;。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42915&quot; target=&quot;_blank&quot;&gt;#42915&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;当尝试在阻塞路径中打开文件或目录时，File System Access API&amp;nbsp;中的故障路径与上游对齐。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42994&quot; target=&quot;_blank&quot;&gt;#42994&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fixes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;修复了使用&amp;nbsp;off screen&amp;nbsp;rendering&amp;nbsp;&lt;/span&gt;时可能发生的崩溃。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42941&quot; target=&quot;_blank&quot;&gt;#42941&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;修复了在 macOS 上，&lt;/span&gt;如果麦克风或摄像头权限在系统级别被拒绝时，则&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;和&lt;code&gt;navigator.getUserMedia&lt;/code&gt;应拒绝并显示&lt;code&gt;NotAllowedError&lt;/code&gt;的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42937&quot; target=&quot;_blank&quot;&gt;#42937&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了调用具有一定透明度的&lt;code&gt;BrowserWindow.setBackgroundColor&lt;/code&gt;可能导致崩溃的问题。&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42928&quot; target=&quot;_blank&quot;&gt;#42928&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;Other Changes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fix：修复了&lt;code&gt;npm run lint&lt;/code&gt;在 Windows 上不起作用的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42906&quot; target=&quot;_blank&quot;&gt;#42906&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;将 Chromium 更新至 126.0.6478.183。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42942&quot; target=&quot;_blank&quot;&gt;#42942&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;已将 Node.js 更新至 v20.15.1。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42839&quot; target=&quot;_blank&quot;&gt;#42839&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Freleases%2Ftag%2Fv31.3.0&quot; target=&quot;_blank&quot;&gt;https://github.com/electron/electron/releases/tag/v31.3.0&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303982/electron-31-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303982/electron-31-3-0-released</guid>
            <pubDate>Fri, 26 Jul 2024 02:31:13 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>openKylin 2.0 揭秘 | 开明软件包格式介绍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;为应对传统包格式存在的系统与应用无明确界限、发行版碎片化、兼容性差等问题，openKylin 社区全新推出&lt;strong&gt;开明软件包格式&lt;/strong&gt;，目标是为新发布软件提供高兼容性、高安全性的解决方案。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;410&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e1bf54127d01bf87578117f0dd9adeaa0e9.png&quot; width=&quot;940&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;1. 什么是软件包格式&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;1991 年 10 月 5 日，Linux 诞生，作为一个开放源码的系统，其开放的部分是源代码，但最终装到用户机器上运行时，是已经编译好的二进制的文件。而软件包格式就是在 Linux 系统中用来管理这些二进制可运行文件、开发库以及配置文件的一种特定格式。截至目前，比较常见的软件包格式有 DEB、RPM、Flatpak、&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;Snap&lt;/span&gt;&lt;span&gt;、AppImage 等。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;2.传统软件包格式痛点&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Linux 软件包格式多种多样，每种格式都有其特定的应用场景和优缺点。而在桌面领域，随着应用软件的发展，应用软件数量的增多，这些传统软件包格式也体现出许多问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;兼容性问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;系统和各个软件之间的依赖关系较为复杂，应用软件也会当做系统的一部分，与系统提供的各种软件库具有很强的依赖性。随着操作系统的更新迭代，每次操作系统升级都要重建或兼容运行所有应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;系统与应用无明确界限&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;应用软件与操作系统没有清晰的界限，不规范应用可能影响系统的稳定可靠运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;span&gt;&lt;strong&gt;安全性问题&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#262626&quot;&gt;应用中恶意代码访问用户隐私数据，安全性不足。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.什么是开明软件包&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;开明软件包格式，是 openKylin 社区&lt;strong&gt;Kaiming &amp;nbsp;SIG&lt;/strong&gt;为应对传统包格式存在的系统与应用无明确界限、发行版碎片化、兼容性等问题而开发的一款全新软件包格式，目标是&lt;strong&gt;为新发布软件提供高兼容性、高安全性的解决方案，支持大量存量 Linux 应用的导入和管理，逐步治理版本碎片化，并方便安装升级&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.开明的由来与含义&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;开明，取自古代中国神话传说中的昆仑山守护神&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;开明兽&lt;/span&gt;&lt;span&gt;，出处《山海经·海内西经》：「昆仑南渊深三百仞。开明兽身大类虎而九首，皆人面，东向立昆仑上。」我们希望开明软件包格式是&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;应用软件的守护者&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，可以守护每个应用的安全，隔离系统与应用、应用与应用，并融合多种常见应用格式，支持兼容运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5. 开明软件包的优势&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;与传统软件包格式相比，开明软件包具有以下优势：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;打破系统和应用的强依赖关系，让应用与系统之间隔离开来，使应用软件不依赖宿主系统基础环境而独立运行&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;隔离恶意代码访问用户隐私数据&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持权限管控，让用户可独立独立配置开明应用的资源权限管控，提高可扩展性和安全性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;总而言之，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于用户而言&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，开明软件包将&lt;strong&gt;提供更好的兼容性&lt;/strong&gt;，使得应用软件能够&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;无缝运行于各类系统之上&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，即便系统历经升级迭代，应用软件亦能稳定运行，无惧兼容难题。同时，还能保护用户隐私数据安全。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于开发者而言&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，开明软件包格式支持&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;一次打包，多处发布&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，打破传统软件包与特定平台的束缚，让您无需为不同平台重复打包，节省开发时间和成本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;看到这里，相信大家对开明软件包格式也有一定的认识和了解。在后续揭秘中，我们将对&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;开明软件包的诞生过程、技术原理以及当前成果&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;进行解读，帮助大家全面了解开明软件包，敬请期待！&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303972</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303972</guid>
            <pubDate>Fri, 26 Jul 2024 01:32:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>TigerVNC 1.14.0 发布，VNC 客户端和服务器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TigerVNC 1.14.0 现已发布。TigerVNC 是一个高级的 VNC 远程访问的实现，允许你查看运行在网络上另一台计算机上的虚拟桌面环境并与之交互；它是基于 RealVNC 4 和 X.org 代码库的高速 VNC 版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;重点更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Xvnc 现在在支持 GBM 的驱动程序上（&lt;span style=&quot;color:#1f2328&quot;&gt;FOSS 驱动程序和较新的 Nvidia 驱动程序&lt;/span&gt;）支持硬件加速 OpenGL 和 Vulkan&lt;/li&gt; 
 &lt;li&gt;viewers 和 servers 现在遵循 XDG 基本目录规范，如「~/.config」，用于将文件存储在主目录中。现有用户将继续使用旧版「~/.vnc」目录，但新用户将获得 XDG 目录。&lt;/li&gt; 
 &lt;li&gt;native viewer 现在支持 Apple 的 Diffie-Hellman 和 UltraVNC 的 MSLogonII 身份验证方法&lt;/li&gt; 
 &lt;li&gt;Java viewer 现在支持 RealVNC 的 RSA-AES 身份验证方法&lt;/li&gt; 
 &lt;li&gt;新增 Ubuntu 24.04 软件包&lt;/li&gt; 
 &lt;li&gt;Red Hat Enterprise Linux 7 和 Ubuntu 18.04 软件包已被删除，因为它们已停止使用&lt;/li&gt; 
 &lt;li&gt;native viewer 的 UI 外观进行了轻微的更新&lt;/li&gt; 
 &lt;li&gt;现在可以强制将反向连接设为&amp;nbsp;view-only&lt;/li&gt; 
 &lt;li&gt;可以为「PlainUsers」指定特殊的「％u」标记，以动态指示运行服务器的用户&lt;/li&gt; 
 &lt;li&gt;vncserver 无需 fork 即可运行，以便与更多系统服务管理器更好地兼容&lt;/li&gt; 
 &lt;li&gt;x0vncserver 现在支持 systemd socket 激活&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#24292f&quot;&gt;二进制文件可从 SourceForge 获得：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fprojects%2Ftigervnc%2Ffiles%2Fstable%2F1.14.0&quot; target=&quot;_blank&quot;&gt;https://sourceforge.net/projects/tigervnc/files/stable/1.14.0&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTigerVNC%2Ftigervnc%2Freleases%2Ftag%2Fv1.14.0&quot; target=&quot;_blank&quot;&gt;查看更新说明&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303812/tigernvc-1-14-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303812/tigernvc-1-14-0-released</guid>
            <pubDate>Thu, 25 Jul 2024 05:57:01 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>轻量 ioc/aop 框架 loveqq 1.0.3 发布，响应式缓存，更强大的条件注解推断</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h4&gt;&lt;strong&gt;本次更新：&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化： loveqq-mvc，控制器全局异常切面实现从代理改为异常处理器，减少代理调用&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-cache，新增响应式缓存支持，默认提供&amp;nbsp;ConcurrentHashMap 实现&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-cache-redis，整合 redisson 响应式缓存支持&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-boot-starter-netty，优化过滤器、拦截器均为响应式接口&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;响应式缓存示例：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;下面的示例展示了缓存注解用法，并且实现了响应式/命令式一致的操作体验&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@RestController
public class UserController {
    @Autowired
    private UserMapper userMapper;

    @GetMapping
    @Cacheable(value = &quot;anyUser&quot;, ttl = 3)
    public Mono&amp;lt;User&amp;gt; anyUser() {
        return Mono.fromSupplier(() -&amp;gt; this.userMapper.listAll().get(0));
    }

    @GetMapping
    @Cacheable(&quot;listAllUser&quot;)
    public Flux&amp;lt;User&amp;gt; listAllUser() {
        return Flux.fromStream(() -&amp;gt; this.userMapper.listAll().stream());
    }

    @GetMapping
    @CacheClear(value = &quot;listAllUser&quot;, condition = &quot;retVal&quot;, preClearTimeout = 2000)
    public Mono&amp;lt;Boolean&amp;gt; deleteAsync(Long id) {
        return Mono.just(true);
    }

    @GetMapping
    @Transactional
    @Cacheable(&quot;listAllUserWithTransactional&quot;)
    public List&amp;lt;User&amp;gt; listAllUserWithTransactional() {
        return this.userMapper.listAll();
    }

    @GetMapping(&quot;delete&quot;)
    @CacheClear(value = &quot;listAllUserWithTransactional&quot;, condition = &quot;retVal&quot;)
    public boolean update(Long id) {
        return true;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;和 spring 的联系&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;初期是以学习 spring 进行开发的，但是却并没有参考 spring 的实现，仅仅是把 spring 当做一个&lt;strong&gt;黑盒接口&lt;/strong&gt;，根据 spring 的&lt;strong&gt;外在功能表现&lt;/strong&gt;，使用自己的想法去实现功能，所以该框架，即不是模仿 spring，也不是 spring 的二开。而是一个全新的，但又高度符合 spring 开发者使用习惯的完整的 ioc/aop 框架&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;和 spring 的区别&lt;/h4&gt; 
&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 和 spring 最大的区别就是，loveqq 具有更强大的条件注解推断，因此&lt;span style=&quot;color:#e74c3c&quot;&gt;&lt;strong&gt;不需要 @&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;AutoConfigureBefore、@AutoConfigureAfter&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt; 等辅助自动配置的注解，仅仅需要正常配置 bean 即可，无需关心 bean 加载顺序的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;下面就是一个很好的例子：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@BootApplication
public class ConditionTest {
    private boolean isOverride;

    @Autowired(required = false)
    private List&amp;lt;Inter&amp;gt; cons;

    @Bean
    public BB bbOverride() {
        this.isOverride = true;
        return new BB();
    }

    @EventListener
    public void onComplete(ContextRefreshedEvent event) {
        Assert.isTrue(this.isOverride);
        Assert.isTrue(this.cons.size() == 5);
    }

    public static void main(String[] args) {
        SpringApplication.run(ConditionTest.class, args);
    }
}

interface Inter {}

@Component
@ConditionalOnBean({CC.class, BB.class})
@ConditionalOnClass(name = &quot;com.kfyty.condition.ConditionTest&quot;)
class AA implements Inter {}

@Component
@ConditionalOnMissingBean(BB.class)
class BB implements Inter {}

@Component
@ConditionalOnBean(BB.class)
class CC implements Inter {

    @Bean
    @ConditionalOnBean(AA.class)
    public EE ee() {
        return new EE();
    }
}

class DD implements Inter {}

@Component
@ConditionalOnMissingBean(DD.class)
class DDF implements FactoryBean&amp;lt;DD&amp;gt; {

    @Override
    public Class&amp;lt;?&amp;gt; getObjectType() {
        return DD.class;
    }

    @Override
    public DD getObject() {
        return new DD();
    }
}

class EE implements Inter {}&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;上述代码，首先 BB 是无条件直接定义的，所以 BB 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 CC 仅依赖 BB 存在，所以 CC 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 AA 仅依赖 BB、CC 的存在，以及主类的存在，因此 AA 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 EE 仅依赖 AA，因此 EE 一定存在；&lt;/li&gt; 
 &lt;li&gt;而我们没有直接定义 DD，因此 DDF 一定存在，而 DDF 属于 FactoryBean，它生产了 DD，所以 DD 一定存在；&lt;/li&gt; 
 &lt;li&gt;所以 AA、BB、CC、DD、EE 的条件都成立，cons.size () 应该是 5。&lt;/li&gt; 
 &lt;li&gt;而上述代码在 spring 下无法通过测试，但是在 loveqq-framework 中是可以测试通过的。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;感兴趣的可以体验体验~&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303809/loveqq-framework-1-0-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303809/loveqq-framework-1-0-3-released</guid>
            <pubDate>Thu, 25 Jul 2024 05:19:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>wlnmp 一键安装包更新 240725</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;wlnmp 一键安装包 240725 更新内容如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;（新增）OpenCloudos9.x（x86_64、AArch64）新增 MySQL8.4、faad2，目前仅针对 OpenCloudos9.x（x86_64、AArch64）发布了 MySQL8.4 版本，后续其它系统，陆续开发适配中。&lt;/li&gt; 
 &lt;li&gt;（其它）MySQL8.4 主要更新内容：删除 binlog_format，因为已被弃用；innodb_log_file_size = 32M 已被弃用，修改为 innodb_redo_log_capacity = 32M&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;关于 wlnmp&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;从 2019 年初开始维护 wlnmp 一键安装包这个项目，起初只是为了在日常运维过程中，可以快速的部署 lnmp 服务。wlnmp 已支持国产龙蜥 AnolisOS、OpenCloudOS、欧拉 OpenEuler 系统等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;wlnmp 一键安装包基于上游开源软件二次开发，可以在 x86_64、aarch64 架构的 Linux 系统上通过 wlnmp 提供的镜像源，快速部署 Nginx/Mysql/PHP 等常用软件，支持 php、MySQL 多个版本在同一系统中并存。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#72c490&quot;&gt;&lt;strong&gt;系统支持：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;Alibaba CloudLinux 2.1903/3&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;AlmaLinux 8.x/9.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;AnolisOS 7.x/8.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;CentOS 7.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;CentOS 8.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;&lt;/span&gt;OpenCloudOS 8.x/9.x&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦ OpenEuler 20.03&lt;/span&gt;(SP1~SP4)&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;OpenEuler 22.03&lt;/span&gt;(SP1~SP3)&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;OpenEuler 24.03&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;✦&amp;nbsp;RockyLinux 8.x/9.x&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;传统方式添加 wlnmp 镜像源，实现 yum 一键安装部署！&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;安装便捷，稳定更新，模块集成&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;免费使用，为爱发电&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;安装使用见：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Finstall&quot; target=&quot;_blank&quot;&gt;install&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更新日志可查看：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Fchangelog&quot; target=&quot;_blank&quot;&gt;ChangeLo&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Fchangelog&quot; target=&quot;_blank&quot;&gt;g&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303805</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303805</guid>
            <pubDate>Thu, 25 Jul 2024 04:20:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>​Rust 通用代码生成器：莲花，代码生成物登录系统讲读</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;strong&gt;Rust 通用代码生成器：莲花，代码生成物登录系统讲读&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Rust 通用代码生成器：莲花可以生成带登录系统，现在，已经发布了视频，解释了其代码生成物的登录系统。视频请见：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1kZ421T7oT%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1kZ421T7oT/&lt;/a&gt;&lt;br&gt; 莲花代码生成物中的登录系统主要包含了 LoginController，LoginService，LoginMiddleware。采用了 sha1 算法散列，jwt 登录框架。实现细节请见视频。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;Rust 通用代码生成器莲花，红莲尝鲜版二十六，此版本完善了数据库自动反射功能。完善了多对多候选功能，完善了下拉列表的空值。&lt;br&gt; Rust 通用代码生成器：莲花将强大的生产力赋能广大程序员。无论是新开发的软件还是通过遗留数据库反射以再次开发的遗留项目，您都可以使用动词算子式通用代码生成器的强大生产力大大加速研发速度。莲花永远是广大程序员的瑞士军刀，是加快开发速度和提高开发质量的利器。&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;代码生成器的项目地址：&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus&quot;&gt;https://gitee.com/jerryshensjf/Lotus&lt;/a&gt;&lt;br&gt; 二进制 war 包的下载地址:&amp;nbsp;&lt;a href=&quot;https://gitee.com/jerryshensjf/Lotus/attach_files&quot;&gt;https://gitee.com/jerryshensjf/Lotus/attach_files&lt;/a&gt; &lt;span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;Rust 通用代码生成器：莲花&lt;/h1&gt; 
&lt;h3&gt;项目介绍&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器：莲花，是 Java 写成的 Rust 通用代码生成器，目前的版本采用 openjdk 17 编译。软件为一 war 包，可以部署在 Tomcat 9 的 webapps 目录下，启动即可运行。&lt;/p&gt; 
&lt;h4&gt;项目图片&lt;/h4&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/RedLotus.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;输入图片说明&quot; src=&quot;https://oscimg.oschina.net/oscnet/pl_3.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;软件架构&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;后端代码生成物是 rust 1.69 环境。采用 Axum 0.6.20, tokio 1.32.0 , sqlx 0.7.1 数据库访问层和 MariaDB, MySQL 8，PostgreSQL 数据库。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;前端代码生成物可运行在 Nodejs 21,18 或 14 上。是 Vue ElementUI 架构。&lt;/p&gt; 
&lt;h3&gt;近期版本&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十五，此版本完善了 PostgreSQL 数据库自动反射功能。完善了编辑器，所有 Domain 可以通过下拉菜单选择。完善了多对多候选叠加时的语法检查。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十四，此版本完善了多对多候选功能，实现了多对多候选的持久化和反射功能。增强了数据库自动反射功能和模板向导的元数据与数据编辑器。改进了编译警告和编译错。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十三，此版本新增了多对多候选功能，增强了数据库自动反射功能和模板向导的编辑器。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 通用代码生成器莲花，红莲尝鲜版二十二，此版本新增了数据库自动反射功能，可以为遗留数据库配上操作软件。此版本增强了模板向导界面的编辑器功能，可以不清空数据的情况下编辑项目的元数据和数据。可以切换域对象和枚举，可以清洗登录数据。此版本彻底修复了枚举和哑数据功能。并有前端界面更新。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;通用代码生成器阵列是通过 Excel 模板来表征系统的。和市面上大多数使用数据库来表征系统的不一样。此功能可以将数据库反射成通用代码生成器的一个项目。并进一步反射成 Excel 模板和前端后端的代码生成物。此功能拥有强大的编辑器功能，可以对反射而来的元数据和数据深入编辑，生成相应的结果。同时，对编辑器的深度改进，使用户可以方便的将域对象切换为枚举，或将枚举切换为域对象，也可以清洗登录数据，使密码自动设为用户名。&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;有了数据库自动反射功能，Rust 通用代码生成器莲花成了可以在数分钟内为遗留数据库配上完整的 Rust 后端软件和 Vue 前端软件的能力。非常实用，非常强大。欢迎大家试用。&lt;/p&gt; 
&lt;h3&gt;重点组件和功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;动词算子&lt;/li&gt; 
 &lt;li&gt;域对象&lt;/li&gt; 
 &lt;li&gt;棱柱&lt;/li&gt; 
 &lt;li&gt;项目&lt;/li&gt; 
 &lt;li&gt;时空之门前端代码生成器引擎&lt;/li&gt; 
 &lt;li&gt;弹性登录模块&lt;/li&gt; 
 &lt;li&gt;Grid 页生成模块&lt;/li&gt; 
 &lt;li&gt;多对多生成模块&lt;/li&gt; 
 &lt;li&gt;数据库脚本生成模块&lt;/li&gt; 
 &lt;li&gt;动态椰子树功能群&lt;/li&gt; 
 &lt;li&gt;动词否定功能群&lt;/li&gt; 
 &lt;li&gt;字段否定功能群&lt;/li&gt; 
 &lt;li&gt;高级定制功能群&lt;/li&gt; 
 &lt;li&gt;部分生成功能群&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本功能群&lt;/li&gt; 
 &lt;li&gt;上传生成界面&lt;/li&gt; 
 &lt;li&gt;模板向导生成界面&lt;/li&gt; 
 &lt;li&gt;自动生成差异版本生成界面&lt;/li&gt; 
 &lt;li&gt;Excel 数据导出功能&lt;/li&gt; 
 &lt;li&gt;PDF 数据导出功能&lt;/li&gt; 
 &lt;li&gt;数据库后端模式&lt;/li&gt; 
 &lt;li&gt;数据库工具模式&lt;/li&gt; 
 &lt;li&gt;哑数据模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;安装教程&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;先装好 open jdk 17 和 Apache Tomcat 9，如果您从源码编译代码生成器还需要事先装好 Apache Maven&lt;/li&gt; 
 &lt;li&gt;下载编译好的 Rust 通用代码生成器莲花的 war 包，或者下载源码，解压后使用 mvn install 命令编译，得到代码生成器的 war 包&lt;/li&gt; 
 &lt;li&gt;把代码生成器的 war 包的名字改短，成为 Lotus.war，并放置在 Apache Tomcat 9 的 webapps 目录下&lt;/li&gt; 
 &lt;li&gt;启动 Apache Tomcat 9&lt;/li&gt; 
 &lt;li&gt;访问&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8080%2FLotus%2F&quot;&gt;http://localhost:8080/Lotus/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;即可使用代码生成器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;后端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将后端项目下载并解压&lt;/li&gt; 
 &lt;li&gt;根据您的数据库选项，配置好您后端的数据库，并使用后端代码生成物的 sql 文件夹下的数据库脚本完成建库建表并加载初始化数据&lt;/li&gt; 
 &lt;li&gt;您需要检查后端代码生成物内的配置文件，确认数据库和用户名密码的正确性&lt;/li&gt; 
 &lt;li&gt;您需要安装配置好 rust 1.69 或其他兼容版本的 rust 环境&lt;/li&gt; 
 &lt;li&gt;在后端代码生成物的根目录下运行 cargo run 命令启动 rust 后端项目&lt;/li&gt; 
 &lt;li&gt;启动完毕后访问后端代码生成物，&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8082&quot;&gt;http://localhost:8082&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;前端代码生成物运行&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用代码生成器生成一个示例或自己的 SGS2 模板，得到两个代码生成物，一个前端，一个后端&lt;/li&gt; 
 &lt;li&gt;将前端代码生成物解压&lt;/li&gt; 
 &lt;li&gt;确认您已经安装好和您选择的 Nodejs 版本相容的前端 Nodejs 环境&lt;/li&gt; 
 &lt;li&gt;使用 npm install -registry=&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fregistry.npm.taobao.org&quot;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;安装 Nodejs 依赖包&lt;/li&gt; 
 &lt;li&gt;如果您使用的是 Nodejs 21 和 Nodejs18，请运行命令：export NODE_OPTIONS=--openssl-legacy-provider&lt;/li&gt; 
 &lt;li&gt;运行命令：node --max-http-header-size=1000000 ./node_modules/.bin/webpack-dev-server --inline --progress --config build/webpack.dev.conf.js&lt;/li&gt; 
 &lt;li&gt;如此访问前端代码生成物，&lt;a href=&quot;https://gitee.com/link?target=http%3A%2F%2Flocalhost%3A8000%2F&quot;&gt;http://localhost:8000/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303804</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303804</guid>
            <pubDate>Thu, 25 Jul 2024 04:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Java 微服务框架 HP-SOA v1.1.2 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/HP-SOA.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;HP-SOA —— 功能完备，简单易用，高度可扩展的 Java 微服务框架。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目主页&amp;nbsp;:&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/p/hp-soa&quot; target=&quot;_blank&quot;&gt;https://www.oschina.net/p/hp-soa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;下载地址&amp;nbsp;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fldcsaa%2FHP-Socket&quot; target=&quot;_blank&quot;&gt;https://github.com/ldcsaa/&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fttps%3A%2F%2Fgithub.com%2Fldcsaa%2Fhp-soa&quot; target=&quot;_blank&quot;&gt;hp-soa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;开发文档&amp;nbsp;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/README.md&quot; target=&quot;_blank&quot;&gt;https://gitee.com/ldcsaa/hp-soa/blob/master/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;QQ Group:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjq.qq.com%2F%3F_wv%3D1027%26k%3D3UAbrhTG&quot; target=&quot;_blank&quot;&gt;44636872&lt;/a&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjq.qq.com%2F%3F_wv%3D1027%26k%3DuYBpc6bG&quot; target=&quot;_blank&quot;&gt;663903943&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;1.1.2 版本更新内容：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化应用程序打包发布方案。&lt;/li&gt; 
 &lt;li&gt;增加 Docker 环境下应用程序镜像构建和容器运行通用方案。&lt;/li&gt; 
 &lt;li&gt;补充【&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/deploy.md&quot; target=&quot;_blank&quot;&gt;应用程序打包发布&lt;/a&gt;】方案与实施文档。&lt;/li&gt; 
 &lt;li&gt;支持运行期设置应用程序只读（&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;配置参考：&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/nacos.md&quot; target=&quot;_blank&quot;&gt;Nacos 配置中心&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;支持运行期动态修改日志级别（&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;配置参考：&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/nacos.md&quot; target=&quot;_blank&quot;&gt;Nacos 配置中心&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;组件更新： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Spring-Boot -&amp;gt; 3.2.7&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Spring-Cloud -&amp;gt; 2023.0.3&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;em&gt;Dubbo -&amp;gt; 3.2.14&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;【&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/app_integration.md&quot;&gt;快速开始&lt;/a&gt;】&lt;/p&gt; 
&lt;h3&gt;技术架构&lt;/h3&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://gitee.com/ldcsaa/my-hp-soa/raw/dev/misc/doc/images/Technical-Architecture.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/Technical-Architecture.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;技术集成&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web 服务框架：spring-boot 3.x&lt;/li&gt; 
 &lt;li&gt;微服务框架：spring-cloud 4.x&lt;/li&gt; 
 &lt;li&gt;微服务框架：Dubbo 3.x&lt;/li&gt; 
 &lt;li&gt;服务注册中心：Nacos&lt;/li&gt; 
 &lt;li&gt;配置中心：Nacos&lt;/li&gt; 
 &lt;li&gt;服务治理中心：Dubbo Admin&lt;/li&gt; 
 &lt;li&gt;流量控制中心：Sentinel Dashboard + Nacos&lt;/li&gt; 
 &lt;li&gt;数据库：MySQL、Druid、mybatis-plus（支持多数据源）&lt;/li&gt; 
 &lt;li&gt;缓存：Redis + Redisson（支持多实例）&lt;/li&gt; 
 &lt;li&gt;NoSQL 数据库：MongoDB&lt;/li&gt; 
 &lt;li&gt;搜索引擎：Elasticsearch&lt;/li&gt; 
 &lt;li&gt;消息总线：RabbitMQ（支持多实例，支持可靠消息）&lt;/li&gt; 
 &lt;li&gt;消息队列：Kafka（支持可靠消息）&lt;/li&gt; 
 &lt;li&gt;MQTT 发布订阅：Eclipse PAHO mqttv5&lt;/li&gt; 
 &lt;li&gt;分布式 Job：xxl-job&lt;/li&gt; 
 &lt;li&gt;轻量级 Job：Redisson + Spring Scheduled&lt;/li&gt; 
 &lt;li&gt;分布式事务：Seata&lt;/li&gt; 
 &lt;li&gt;全局 ID：Leaf（支持 Snowflake ID 和 Segment ID）&lt;/li&gt; 
 &lt;li&gt;统一日志：Log4j + Kafka + ELK&lt;/li&gt; 
 &lt;li&gt;调用链跟踪：Skywalking&lt;/li&gt; 
 &lt;li&gt;监控告警：Prometheus + Grafana + Alert Manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;模块说明&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-dependencies&quot;&gt;hp-soa-dependencies&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;依赖管理模块，定义依赖包及其版本&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-core&quot;&gt;hp-soa-framework-core&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;基础模块，定义 HP-SOA 基础组件和工具&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-web&quot;&gt;hp-soa-framework-web&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Web 应用模块，集成 spring-boot 和 Dubbo，提供核心微服务功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-leaf&quot;&gt;hp-soa-framework-leaf&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Leaf 全局 ID 模块，基于 Leaf，提供分布式全局 ID 功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-framework/hp-soa-framework-gelf&quot;&gt;hp-soa-framework-gelf&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;GELF 日志模块，提供 TCP、UDP、HTTP、Redis、Kafka 等远程日志传输功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-framework/hp-soa-framework-util&quot;&gt;hp-soa-framework-util&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;扩展工具包模块，提供文件处理、邮件、远程访问等组件和工具&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-web&quot;&gt;hp-soa-starter-web&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Web 应用启动器，配置并启动应用服务，所有 HP-SOA 项目都必须引入该启动器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-web-cloud&quot;&gt;hp-soa-starter-web-cloud&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Spring Cloud 启动器，开启 Spring Cloud 微服务功能，所有 Spring Cloud 微服务项目都必须引入该启动器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-web-dubbo&quot;&gt;hp-soa-starter-web-dubbo&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Dubbo 启动器，开启 Dubbo 微服务功能，所有 Dubbo 微服务项目都必须引入该启动器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-task&quot;&gt;hp-soa-starter-task&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Task 启动器，开启 Spring Task 功能，并为 Spring Task 提供日志关联和调用链跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-nacos&quot;&gt;hp-soa-starter-nacos&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Nacos 配置中心启动器，开启配置中心功能，应用程序可以从远程配置中心加载配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-data-mysql&quot;&gt;hp-soa-starter-data-mysql&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MySQL 启动器，开启 MySQL 数据库访问功能，并提供动态数据源、数据源监控和全局事务管理等能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-data-redis&quot;&gt;hp-soa-starter-data-redis&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Redis 启动器，开启 Redis 访问功能，支持多 Redis 实例，支持 Spring Cache&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-data-mongodb&quot;&gt;hp-soa-starter-data-mongodb&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MongoDB 启动器，开启 MongoDB 访问功能，支持通过 Spring Data 接口方式访问 MongoDB&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-data-elasticsearch&quot;&gt;hp-soa-starter-data-elasticsearch&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Elasticsearch 启动器，开启 Elasticsearch 访问功能，支持通过 Spring Data 接口方式访问 Elasticsearch&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-rabbitmq&quot;&gt;hp-soa-starter-rabbitmq&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Rabbitmq 启动器，开启 Rabbitmq 访问功能，支持多 Rabbitmq 实例，提供可靠消息实施方案以及消息跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-kafka&quot;&gt;hp-soa-starter-kafka&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Kafka 启动器，开启 Kafka 访问功能，提供可靠消息实施方案以及消息跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-starter/hp-soa-starter-mqtt&quot;&gt;hp-soa-starter-mqtt&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;MQTT 启动器，开启 MQTT 发布订阅功能，全面支持 mqttv5 协议&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-job-exclusive&quot;&gt;hp-soa-starter-job-exclusive&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;轻量级 Job 启动器，开启轻量级排他 Job 功能，提供 Job 执行日志关联和调用链跟踪能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-job-xxljob&quot;&gt;hp-soa-starter-job-xxljob&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Xxl-Job 启动器，开启 Xxl-Job 功能，结合 xxl-job-admin 提供分布式 Job 能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-leaf&quot;&gt;hp-soa-starter-leaf&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Leaf 全局 ID 启动器，开启 Leaf 全局 ID 功能，支持通过 Snowflake 算法和 Segment 算法生成全局 ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-seata&quot;&gt;hp-soa-starter-seata&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Seata 启动器，开启 Seata 分布式事务功能，结合 Seata TC 提供分布式事务能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-sentinel&quot;&gt;hp-soa-starter-sentinel&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Sentinel 启动器，开启 Sentinel 流量控制功能，结合 Sentinel Dashboard 和 Nacos 提供流量控制和流控规则持久化能力&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-soa-starter/hp-soa-starter-skywalking&quot;&gt;hp-soa-starter-skywalking&lt;/a&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Skywalking 启动器，开启 Skywalking 调用链跟踪功能，结合 Skywalking Agent 和 Skywalking Server 提供调用链跟踪能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;应用接入（参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-demo&quot;&gt;hp-demo&lt;/a&gt;）&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;pom.xml 中添加 HP-SOA 依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;em&gt;&amp;lt;!-- 添加 hp-soa 依赖管理 --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.hpsocket&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hp-soa-dependencies&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${hp-soa.version}&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;            &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- 普通项目引用 hp-soa-starter-web --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.hpsocket&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hp-soa-starter-web&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- Spring Cloud 项目引用 hp-soa-starter-web-cloud --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!--&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;groupId&amp;gt;io.github.hpsocket&amp;lt;/groupId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;artifactId&amp;gt;hp-soa-starter-web-cloud&amp;lt;/artifactId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;/dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- Dubbo 项目引用 hp-soa-starter-web-dubbo --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!--&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;groupId&amp;gt;io.github.hpsocket&amp;lt;/groupId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;        &amp;lt;artifactId&amp;gt;hp-soa-starter-web-dubbo&amp;lt;/artifactId&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    &amp;lt;/dependency&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;&lt;em&gt;    --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;em&gt;&amp;lt;!-- 根据项目需要，引用其它 hp-soa starter --&amp;gt;&lt;/em&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.github.hpsocket&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;        &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;hp-soa-starter-xxx&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;    &lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style=&quot;color:#ffcc55&quot;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;修改应用配置&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;（参考 Demo&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-demo/hp-demo-bff-basic&quot;&gt;hp-demo-bff-basic&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/hp-demo/hp-demo-bff-basic/src/main/resources/bootstrap.yml&quot;&gt;本地配置文件&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，配置中心的&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/misc/nacos/config/namespace-DEV/GLOBAL_GROUP&quot;&gt;远程配置文件&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;），主要配置项：&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;hp.soa.web&lt;/li&gt; 
   &lt;li&gt;spring.cloud (Spring Cloud 项目)&lt;/li&gt; 
   &lt;li&gt;dubbo (Dubbo 项目)&lt;/li&gt; 
   &lt;li&gt;server&lt;/li&gt; 
   &lt;li&gt;spring&lt;/li&gt; 
   &lt;li&gt;management&lt;/li&gt; 
   &lt;li&gt;springdoc&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;修改全局配置（可选） 
  &lt;ul&gt; 
   &lt;li&gt;系统配置文件，用于设置系统属性，默认配置文件：&lt;code&gt;/opt/hp-soa/config/system-config.properties&lt;/code&gt;参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/opt/hp-soa/config/system-config.properties&quot;&gt;system-config.properties&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;扩展配置文件，用于配置注册中心地址、配置中心地址等公共属性，默认配置文件：&lt;code&gt;/opt/hp-soa/config/extended-config.properties&lt;/code&gt;参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/opt/hp-soa/config/extended-config.properties&quot;&gt;extended-config.properties&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;实现 HTTP 鉴权接口（可选） 
  &lt;ul&gt; 
   &lt;li&gt;如果是 Gateway/BFF 应用，并且应用属性&lt;code&gt;hp.soa.web.access-verification.enabled = true&lt;/code&gt;，则需要实现&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-framework/hp-soa-framework-web/src/main/java/io/github/hpsocket/soa/framework/web/service/AccessVerificationService.java&quot;&gt;AccessVerificationService&lt;/a&gt;接口，用于 HTTP 请求鉴权。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;启动应用 
  &lt;ul&gt; 
   &lt;li&gt;以&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/hp-soa-framework/hp-soa-framework-web/src/main/java/io/github/hpsocket/soa/framework/web/server/main/AppStarter.java&quot;&gt;io.github.hpsocket.soa.framework.web.server.main.AppStarter&lt;/a&gt;作为启动类，启动应用程序。&lt;/li&gt; 
   &lt;li&gt;JVM 启动参数参考：&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/tree/master/misc/jvm/java-opts.txt&quot;&gt;JVM 启动参数示例&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;[&lt;/span&gt;&lt;a href=&quot;https://gitee.com/ldcsaa/hp-soa/blob/master/misc/doc/user_guide.md&quot;&gt;用户指南&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;]&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303798/hp-soa-1-1-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303798/hp-soa-1-1-2-released</guid>
            <pubDate>Thu, 25 Jul 2024 03:29:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>openKylin 社区塞拉利昂用户组首场活动圆满举行！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;524&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6467d0f4b89cd3e19a3caa3383042ad9d88.png&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;openKylin 用户组&lt;/strong&gt;是为方便全球各国家及地区开源爱好者交流 openKylin 系统版本及用户体验、推广 openKylin 操作系统而成立的开源爱好者组织，其目的在于将开源社区的相关合作拓展至全球范围，吸引更多国际开发者贡献代码、想法和经验，提升 openKylin 社区的国际品牌影响力，并获得持续发展的创新动力。&lt;strong&gt;截至目前，openKylin 社区已累计成立 11 个国际用户组。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;810&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f91b854fde30b0d26466ec8d72184208d1.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;近日，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;openKylin 社区国际用户组活动在西非国家&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;塞拉利昂&lt;/span&gt;&lt;span&gt;成功举行&lt;/span&gt;&lt;/strong&gt;。这次活动是由不久前成立的塞拉利昂 openKylin 用户组组织的首次小型活动，标志着 openKylin 在非洲大陆的推广工作迈出了重要一步。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;活动主持人 Moses Kargbo 是 openKylin 社区国际推广大使，也是塞拉利昂用户组的创始人&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;。他在深入参与 openKylin 国际交流后，回国着手组建起本地用户组，并积极筹划了这次推广活动。活动于当地时间下午举行，吸引了&lt;strong&gt;20 名&lt;/strong&gt;热情的参与者。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;活动期间，Moses Kargbo 为各位参与者详细介绍了 openKylin 的发展历程和社区成果，引导参与者深入了解 openKylin 社区，展示 openKylin 系统的功能和优势。同时，通过实际操作，让参与者深刻感受到 openKylin 系统的流畅性和易用性。在两小时的活动中，参与者对 openKylin&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;开源操作系统&lt;/span&gt;&lt;span&gt;的功能和特点表现出浓厚的兴趣，并积极参与互动。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次活动的成功举办，不仅为 openKylin 在塞拉利昂乃至整个西非地区的普及与推广奠定了坚实的基础，更激发了当地民众对于开源技术的浓厚兴趣与探索欲望。Moses Kargbo 表示，这仅仅是一个开始，他期待未来能有更多类似的活动在塞拉利昂乃至整个非洲大陆举办，让 openKylin 的光芒照亮更多角落，促进技术与文化的交流互鉴。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区对塞拉利昂用户组的发展给予了高度关注和支持。社区计划在未来继续支持类似的国际交流活动，以进一步扩大其全球影响力，携手全球伙伴共同推动开源技术的普及与发展，为构建更加开放、协同、创新的数字世界贡献力量。这一系列举措不仅彰显了中国开源力量的崛起与自信，也为中非乃至全球技术合作与交流搭建了重要舞台。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303793</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303793</guid>
            <pubDate>Thu, 25 Jul 2024 03:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Apache Doris 2.1.5 版本正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;亲爱的社区小伙伴们，&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Apache Doris 2.1.5 版本已于 2024 年 7 月 24 日正式发布。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;2.1.5 版本在湖仓一体、多表物化视图、半结构化数据分析等方面进行了全面更新及改进，同时在倒排索引、查询优化器、查询引擎、存储管理等 10 余方向上完成了若干问题修复，欢迎大家下载使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;官网下载：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2FbGSQmU&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://doris.apache.org/&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;GitHub 下载：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.d4t.cn%2FfB7Wu8&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;https://github.com/apache/doris/releases/tag/2.1.5-rc02&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;行为变更&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;JDBC Catalog 的默认连接池大小从 10 调整为 30。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37023&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37023&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;创建 JDBC Catalog 时，参数 &lt;/span&gt;&lt;span&gt;&lt;code&gt;connection_pool_max_size&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 的默认值改为 30，以避免高并发场景下连接池耗尽的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;将系统的保留内存的最小值，即 &lt;/span&gt;&lt;span&gt;&lt;code&gt;low water mark&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 调整为 min （6.4G， MemTotal * 5%），以更好地防止 BE 出现 OOM 问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修改了单请求多个语句的处理逻辑，当客户端未设置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;CLIENT_MULTI_STATEMENTS&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 标志位时，将仅返回最后一个语句的结果，而非所有语句结果。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;不再允许直接更改异步物化视图的数据。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37129&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37129&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加会话变量 &lt;/span&gt;&lt;span&gt;&lt;code&gt;use_max_length_of_varchar_in_ctas&lt;/code&gt;&lt;/span&gt;&lt;span&gt;，用于控制 CTAS 时 VARCHAR 和 CHAR 类型长度的生成行为。默认值是 true。当设置为 false 时，使用推导出的 VARCHAR 长度，而不是使用最大长度。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37284&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37284&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;统计信息收集，默认开启了通过文件大小预估 Hive 表行数的功能。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37694&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37694&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;默认开启异步物化视图透明改写机制。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35897&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35897&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;透明改写利用分区物化视图，如果分物物化视图部分分区失效，默认行为是将所有基础表与物化视图联合，以保证查询数据的正确性。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35897&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35897&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;湖仓一体&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;会话变量 &lt;/span&gt;&lt;span&gt;&lt;code&gt;read_csv_empty_line_as_null&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 用于控制在读取 CSV 格式文件时，是否忽略空行。默认情况下忽略空行，当设置为 true 时，空行将被读取为所有列均为 Null 的行。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37153&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37153&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;新增兼容 Presto 的复杂类型输出格式。通过设置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;set serde_dialect=&quot;presto&quot;&lt;/code&gt;&lt;/span&gt;&lt;span&gt;，可以控制复杂类型的输出格式，与 Presto 一致，用于平滑迁移 Presto 业务。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37253&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37253&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;多表物化视图&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持在构建物化视图中使用非确定性函数。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持原子替换异步物化视图定义。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37147&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37147&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持通过 &lt;/span&gt;&lt;span&gt;&lt;code&gt;show create materialized view&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 查看异步物化视图创建语句。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37125&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37125&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对多维聚合查询的透明改写。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37436&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37436&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对非聚合物化视图的聚合查询进行透明改写。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37497&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37497&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持使用 Key 列，对查询中的 DISTINCT 聚合做透明改写。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对物化视图进行分区，通过使用 &lt;/span&gt;&lt;span&gt;&lt;code&gt;date_trunc&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 对分区进行汇总。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F31812&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#31812&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35562&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35562&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持分区表值函数（TVF） &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36479&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36479&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;半结构化数据分析&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;使用 VARIANT 类型的表支持部分列更新。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F34925&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#34925&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持默认开启 PreparedStatement。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36581&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36581&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;VARIANT 类型支持导出为 CSV 格式。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37857&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37857&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持 &lt;/span&gt;&lt;span&gt;&lt;code&gt;explode_json_object&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 函数，用于将 JSON Object 行转列。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36887&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36887&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;ES Catalog 将 ES 的 NESTED 或者 OBJECT 类型映射成 Doris JSON 类型。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37101&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37101&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;默认情况下，对于具有指定分词器的倒排索引，默认开启 &lt;/span&gt;&lt;span&gt;&lt;code&gt;support_phrase&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 以提升 &lt;/span&gt;&lt;span&gt;&lt;code&gt;match_phrase&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 系列查询性能。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37949&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37949&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持 &lt;/span&gt;&lt;span&gt;&lt;code&gt;explain DELETE FROM&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 语句。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37100&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37100&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持常量表达式参数的 Hint 形式。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37988&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37988&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;内存管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加了 HTTP API 以清除缓存。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36599&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36599&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;权限管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持对表值函数（TVF）中的资源进行鉴权。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37132&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37132&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;改进提升&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;湖仓一体&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;将 Paimon 升级至 0.8.1 版本。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复在部分情况下，查询 Paimon 表时导致 &lt;/span&gt;&lt;span&gt;&lt;code&gt;org.apache.commons.lang.StringUtils&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37512&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37512&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持腾讯云 LakeFS。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36891&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36891&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了外部表查询时获取文件列表的超时时间。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36842&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36842&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;可通过会话变量 &lt;/span&gt;&lt;span&gt;&lt;code&gt;fetch_splits_max_wait_time_ms&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 进行设置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;改进了 SQLServer JDBC Catalog 的默认连接逻辑。默认情况下，不干预连接加密设置。仅当 &lt;/span&gt;&lt;span&gt;&lt;code&gt;force_sqlserver_jdbc_encrypt_false&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 设置为 true 时，才会强制在 JDBC URL 中添加 &lt;/span&gt;&lt;span&gt;&lt;code&gt;encrypt=false&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 以减少认证错误，从而提供更灵活的控制加密行为的能力。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36971&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36971&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Hive 表的 &lt;/span&gt;&lt;span&gt;&lt;code&gt;show create table&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 语句增加序列化/反序列化。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37096&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37096&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;FE 端 Hive 表列表默认缓存时间由 1 天改为 4 小时&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;数据导出（Export/Outfile）支持指定 Parquet 和 ORC 的压缩格式。参考&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Fsql-manual%2Fsql-statements%2FData-Manipulation-Statements%2FManipulation%2FEXPORT%2F%3F_highlight%3Dcompress_type&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;：&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fdocs%2Fsql-manual%2Fsql-statements%2FData-Manipulation-Statements%2FManipulation%2FEXPORT%2F%3F_highlight%3Dcompress_type&quot; target=&quot;_blank&quot;&gt;https://doris.apache.org/docs/sql-manual/sql-statements/Data-Manipulation-Statements/Manipulation/EXPORT/?_highlight=compress_type&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当使用 CTAS+TVF 创建表时，TVF 中的分区列将被自动映射为 Varchar（65533） 而非 String，以便该分区列能够作为内表的分区列使用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37161&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37161&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Hive 写入操作元数据的访问次数。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37127&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37127&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;ES Catalog 支持将 NESTED/OBJECT 类型映射到 Doris 的 JSON 类型。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37182&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37182&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化使用低版本 OBJECT 驱动连接 Oracle 时的报错信息。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37634&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37634&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当 Hudi 表 Incremental Read 返回空集时，Doris 同样返回空集而非报错。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37634&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37636&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下内外表关联查询可能导致 FE 超时的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37757&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37757&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在从旧版本升级到新版本时，如果开启了 Hive Metastore Even Listener 情况下，可能出现 FE 元数据回放错误的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37757&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37757&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;多表物化视图&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;创建异步物化视图时，支持自动选择 Key 列。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36601&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36601&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;异步物化视图分区刷新支持定义中使用 &lt;/span&gt;&lt;span&gt;&lt;code&gt;date_trunc&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 函数。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35562&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35562&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;嵌套物化视图中，当下层命中聚合上卷改写后，上层现在依然可以继续进行透明改写。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当 Schema Change 不影响异步物化视图数据正确性时，异步物化视图保持可用状态。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37122&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37122&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;提升了透明改写的规划速度。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37935&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37935&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;计算异步物化视图可用性时，不再考虑当前的刷新状态。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36617&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36617&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;半结构化数据管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;通过采样优化 DESC 查看 VARIANT 子列的性能。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37217&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37217&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;行存 &lt;/span&gt;&lt;span&gt;&lt;code&gt;page_size&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 默认从 4K 调到 16K 压缩率提升 30%，而且支持表级别可配置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;JSON 类型支持 Key 为空的特殊 JSON 数据。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36762&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36762&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;倒排索引&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;减少倒排索引 Exists 调用避免对象存储访问延迟。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36945&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36945&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化倒排索引查询流程额外开销。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35357&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35357&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;在物化视图中不创建倒排索引。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36869&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36869&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;当比较表达式两侧都是 Literal 时，String Literal 会尝试向另一侧的类型转换。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36921&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36921&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;重构了 VARIANT 类型的子路径下推功能，现在可以更好地支持复杂的下推场景。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36923&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36923&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了物化视图代价计算的逻辑，能够更准确的选择代价更低的物化视图。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37098&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37098&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;提升了 SQL 中使用用户变量时的 SQL 缓存规划速度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37119&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37119&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了 NOT NULL 表达式的估行逻辑，当查询中存在 NOT NULL 时可以获得更好的性能。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37498&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37498&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了 LIKE 表达式的 NULL 拒绝推导逻辑。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37864&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37864&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化查询指定分区失败时的报错信息，可以更清楚看到是哪个表导致的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37280&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37280&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询引擎&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;将某些场景下 BITMAP_UNION 算子的性能提升了 3 倍。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;提升 Arrow Flight 在 ARM 环境下的读取性能。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化了 &lt;/span&gt;&lt;span&gt;&lt;code&gt;explode&lt;/code&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;code&gt;explode_map&lt;/code&gt;&lt;/span&gt;&lt;span&gt;、&lt;/span&gt;&lt;span&gt;&lt;code&gt;explode_json&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 函数的执行性能。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;数据导入&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持为 &lt;/span&gt;&lt;span&gt;&lt;code&gt;INSERT INTO ... FROM TABLE VALUE FUNCTION&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 语句设置 &lt;/span&gt;&lt;span&gt;&lt;code&gt;max_filter_ratio&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 参数。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;Bug 修复&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;湖仓一体&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下查询 Parquet 格式导致 BE 宕机的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37086&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37086&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复查询 Parquet 格式，BE 端打印大量日志的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37012&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37012&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下 FE 端重复创建大量 FileSystem 对象的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37142&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37142&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，写入 Hive 后的事务信息未清理的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37172&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37172&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，Hive 表写入操作导致线程泄露的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37247&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37247&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，无法正确获取 Hive Text 格式行列分隔符的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37188&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37188&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，读取 lz4 压缩块时的并发问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37187&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37187&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，Iceberg 表 &lt;/span&gt;&lt;span&gt;&lt;code&gt;count(*)&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 返回错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37810&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37810&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，创建基于 MinIO 的 Paimon Catalog 导致 FE 元数据回放错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37249&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37249&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下使用 Ranger 创建 Catalog 客户端卡死的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37551&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37551&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;多表物化视图&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当基表增加新的分区时，可能导致的分区聚合上卷改写后结果错误的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37651&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37651&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复关联的基表分区删除后，物化视图分区状态没有被置为不同步的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36602&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36602&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复异步物化视图构建偶现的死锁问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37133&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37133&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复异步物化视图单次刷新大量分区时偶现的，报错 &lt;/span&gt;&lt;span&gt;&lt;code&gt;nereids cost too much time&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37589&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37589&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复创建异步物化视图时，如果最终的 Select List 中存在 Null Literal，则无法创建的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37281&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37281&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复单表物化视图，如果构建了聚合的物化视图，虽然改写成功，但是 CBO 没有选择的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35721&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35721&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36058&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36058&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Join 输入都是聚合的情况下，构建分区物化视图，分区推导失败的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F34781&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#34781&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;半结构化数据管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 VARIANT 在并发/异常数据等特殊情况下的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37976&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37976&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37839&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37839&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37794&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37794&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37674&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37674&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36997&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36997&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 VARIANT 用在不支持的 SQL 中 Coredump 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37640&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37640&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 1.x 版本升级到 2.x 或者更高版本时因为 MAP 数据类型 Coredump 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36937&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36937&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 ES Catalog 对 Array 的支持。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36936&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36936&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;倒排索引&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复倒排索引 v2 DROP INDEX 元数据没有删除的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37646&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37646&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复字符串长度超过 「ignore above」 时查询准确性问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37679&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37679&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复索引大小统计的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37232&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37232&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37564&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37564&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询优化器&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分因为保留关键字而导致导入无法执行的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35938&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35938&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在创建表时 CHAR（255） 类型错误的记录为 CHAR（1） 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37671&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37671&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在相关子查询中的连接表达式为复杂表达式时返回错误结果的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37683&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37683&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了 DECIMAL 类型分桶裁剪有可能错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38013&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38013&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了部分场景下开启 Pipeline Local Shuffle 后，聚合算子计算结果错误的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38016&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38061&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当聚合算子中存在相等的表达式时，可能出现的规划报错问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36622&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36622&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当聚合算子中存在 Lambda 表达式时，可能出现的规划报错问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37285&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37285&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了由窗口函数生成的字面量在优化为字面量时类型错误导致无法执行的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37283&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37283&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了聚合函数 &lt;/span&gt;&lt;span&gt;&lt;code&gt;foreach combinator&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 错误输出 Null 属性问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37980&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37980&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了 acos 函数在参数为超越范围值的字面量时不能规划的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37996&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37996&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复当查询指定的同步物化视图时，显示指定查询分区导致规划报错的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36982&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36982&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复了在规划过程中偶尔出现 NPE 的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38024&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38024&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;查询引擎&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 DELETE WHERE 语句中，在 DECIMAL 数据类型作为条件报错的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37801&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37801&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复查询执行结束，但是 BE 内存不释放的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37792&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37792&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37297&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37297&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复在千级别 QPS 场景下，Audit Log 占用 FE 内存太多的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37786&quot; target=&quot;_blank&quot;&gt;https://github.com/apache/doris/pull/37786&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 sleep 函数在输入非法值时 BE Core 的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37681&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37681&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复执行过程中 &lt;/span&gt;&lt;span&gt;&lt;code&gt;sync filter size meet error&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37103&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37103&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复执行过程中，使用时区时结果不对的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37062&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37062&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 &lt;/span&gt;&lt;span&gt;&lt;code&gt;cast string&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 到 &lt;/span&gt;&lt;span&gt;&lt;code&gt;int&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 时结果不对的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36788&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36788&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Arrow Flight 协议在开启 Pipelinex 时查询报错的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35804&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35804&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 &lt;/span&gt;&lt;span&gt;&lt;code&gt;cast string to date/datetime&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 报错的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F35637&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#35637&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复使用 &lt;/span&gt;&lt;span&gt;&lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 做大表关联查询时 BE Core 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36263&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36263&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;存储管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复列更新写入时遇到 DELETE SIGN 数据不可见问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36755&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36755&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Schema Change 期间 FE 的内存占用。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36756&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36756&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 BE 重启时事务没有 Abort 导致的 BE 下线卡住问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36437&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36437&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 NOT-NULL 到 NULL 类型变更的偶发报错问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36389&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36389&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 BE 宕机时的副本修复调度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36897&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36897&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;单个 BE 创建 Tablet 时支持 round-robin 选择磁盘。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36900&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36900&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Publish 慢导致的查询 -230 错误。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36222&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36222&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Partition Balance 的速度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36976&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36976&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;使用 FD 数目和内存控制 Segment Cache 避免 FD 不足。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37035&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37035&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Clone 和 Alter 并发可能导致的副本丢失问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36858&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36858&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复不能调整列顺序问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37226&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37226&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;禁止自增列的部分 Schema Change 操作。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37331&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37331&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Delete 操作报错不准确。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37374&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37374&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;BE 侧 Trash 过期时间调整为一天。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37409&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37409&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Compaction 内存占用和调度。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37491&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37491&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;检查潜在的过大 Backup 导致 FE 重启的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37466&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37466&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;恢复动态分区删除策略以及交叉分区的行为到 2.1.3。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37570&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37570&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37506&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37506&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 DELETE 谓词重部分 DECIMAL 报错问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37710&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37710&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;数据导入&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复导入时错误处理竞争导致的数据不可见问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36744&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36744&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Stream Load 导入支持 &lt;/span&gt;&lt;span&gt;&lt;code&gt;hhl_from_base64&lt;/code&gt;&lt;/span&gt;&lt;span&gt;。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36819&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36819&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复潜在的单表非常多 Tablet 导入失败时可能导致 FE OOM 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36944&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36944&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 FE 主从切换时自增列可能重复的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36961&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36961&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 INSERT INTO SELECT 自增列报错问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37029&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37029&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;降低数据下刷线程数，优化内存占用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37092&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37092&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Routine Load 任务自动恢复和错误信息。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37371&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37371&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;增加 Routine Load 默认攒批大小。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37388&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37388&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Routine Load 在 Kafka EOF 过期的任务停止问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37983&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37983&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复一流多表 Coredump 。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37370&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37370&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Group Commit 内存估计不准导致的提前反压问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37379&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37379&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;优化 Group Commit BE 侧线程占用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37380&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37380&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复数据没有分区时没有错误 URL 的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37401&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37401&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复导入时潜在的内存误操作问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F38021&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#38021&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;主键模型&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;降低主键表 Compaction 的内存占用。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36968&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36968&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复主键副本 Clone 失败时可能的重复数据问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37229&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37229&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;内存管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Jemalloc Cache 统计不准的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37464&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37464&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复在 K8s / CGroup 中不能正确获取内存大小的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36966&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36966&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;权限管理&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Table Valued Function 引用 Resource 时没有鉴权的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37132&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37132&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 Show Role 语句中没有 Workload Group 权限的问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F36032&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#36032&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复创建 Row Policy 时，同时执行两条语句，导致 FE 重启失败的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37342&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37342&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复部分情况下，老版本升级后，因为 Row Policy 导致 FE 元数据回放失败的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37342&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37342&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;其他&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复计算节点参与内部表创建的问题。&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37961&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37961&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;修复 &lt;/span&gt;&lt;span&gt;&lt;code&gt;enable_strong_read_consistency = true&lt;/code&gt;&lt;/span&gt;&lt;span&gt; 时从延迟问题。 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fdoris%2Fpull%2F37641&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;#37641&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303789/apache-doris-2-1-5-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303789/apache-doris-2-1-5-released</guid>
            <pubDate>Thu, 25 Jul 2024 03:03:12 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>sra-admin 近期更新事项（v2.0.5）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p&gt;SRA-ADMIN 是一个前后端分离的后台管理系统，引入了市面上常用的工具包以及核心框架，实现了用户、字典、角色、权限等常见功能， 能够快速搭建一个 web 项目。 &amp;nbsp; 后端技术栈：springboot3+sqltoy+satoken+hutool &amp;nbsp; 前端技术栈：vue3+vue-router+typescript+elementui&lt;/p&gt; 
&lt;h2&gt;更新日志&lt;/h2&gt; 
&lt;h4&gt;v2.0.5&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：系统日志添加‘接口路径’保存字段&lt;/li&gt; 
 &lt;li&gt;新增：系统日志添加@LogPersistence 注解拦截存储&lt;/li&gt; 
 &lt;li&gt;优化：系统日志查询列表默认根据 id 倒敍&lt;/li&gt; 
 &lt;li&gt;优化：创建 Logger 实例增加 static 关键词&lt;/li&gt; 
 &lt;li&gt;变更：初始化脚本变成 ddl+data 两个文件（PS：table_ddl.sql 是表结构）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;v2.0.4&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化：前端界面优化（sra-admin-vue 仓库）&lt;/li&gt; 
 &lt;li&gt;修复：私钥缓存失效问题&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;v2.0.3&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化：验证码缓存键从 ip 改成用 UUID 标识&lt;/li&gt; 
 &lt;li&gt;优化：登陆成功删除验证码缓存&lt;/li&gt; 
 &lt;li&gt;变更：验证码接口方法 post 改成 get&lt;/li&gt; 
 &lt;li&gt;新增：密码参数使用 sm2 加密传输&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;v2.0.2&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;优化：接口访问限制如果不配置或者小于零表示不开启&lt;/li&gt; 
 &lt;li&gt;修复：使用@PathVariable 增加别名，避免「Name for argument of type」异常&lt;/li&gt; 
 &lt;li&gt;sqltoy-orm 和 sqltoy-plus 升级到 5.6.9&lt;/li&gt; 
 &lt;li&gt;删除 MultiWrapper 写法&lt;/li&gt; 
 &lt;li&gt;修复系统日志列表「日志编号」查询条件类型转换异常问题&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;v2.0.1&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;修复 validation 引入异常问题&lt;/li&gt; 
 &lt;li&gt;优化异常日志打印&lt;/li&gt; 
 &lt;li&gt;路由放行测试接口&lt;/li&gt; 
 &lt;li&gt;增加 MethodArgumentNotValidException 异常拦截&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;拓展&lt;/h2&gt; 
&lt;p&gt;sra-admin-solon 版本也同步更新功能点&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303780/sra-admin-2-0-5</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303780/sra-admin-2-0-5</guid>
            <pubDate>Thu, 25 Jul 2024 02:20:12 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Firefox 128.0.2 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Firefox 128.0.2 现已发布，具体更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了特定条件下 macOS 上视频通话中的音频回声问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1908539&quot; target=&quot;_blank&quot;&gt;错误 1908539&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Adguard 扩展弹出窗口未显示的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1906132&quot; target=&quot;_blank&quot;&gt;错误 1906132&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了在富文本编辑器中按字符导航时导致某些屏幕阅读器无法读取的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1905021&quot; target=&quot;_blank&quot;&gt;错误 1905021&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了在 Windows ARM 设备中启用暗模式时出现的视觉故障。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1897444&quot; target=&quot;_blank&quot;&gt;错误 1897444&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了导致 NTLM 身份验证失败的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1908115&quot; target=&quot;_blank&quot;&gt;错误 1908115&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了鼠标悬停时显示的内容未被屏幕截图捕获的问题。（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1905468&quot; target=&quot;_blank&quot;&gt;错误 1905468&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;各种稳定性修复。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F128.0.2%2Freleasenotes%2F&quot; target=&quot;_blank&quot;&gt;https://www.mozilla.org/en-US/firefox/128.0.2/releasenotes/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303779/firefox-128-0-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303779/firefox-128-0-2-released</guid>
            <pubDate>Thu, 25 Jul 2024 02:06:40 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>数据备份工具 BackupSerenity V2.1 新增 CSV 导入工具集</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;数据备份工具 BackupSerenity V2.1 新增 CSV 导入工具集&lt;/h1&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;CSV 导入工具集&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;作用：将&lt;span style=&quot;background-color:rgba(212, 222, 231, 0.098)&quot;&gt;将包含表头的 CSV 文件批量导入至 MYSQL&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:rgba(212, 222, 231, 0.098)&quot;&gt;使用方式：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;启动脚本&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;nohup python3 csv_input_mysql.py &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; csv_input_mysql.log &amp;amp;
&lt;/span&gt;&lt;span&gt;生成的文件名称 csv_input_mysql.log 可以根据情况修改&lt;/span&gt;&lt;span style=&quot;color:#f75464&quot;&gt;，&lt;/span&gt;&lt;span&gt;如果想保留全部日志可以将 &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 替换为 &lt;/span&gt;&lt;span style=&quot;color:#bcbec4&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span&gt; 即可&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;导出错误日志&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;cat csv_input_mysql.log | grep &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;创建失败&#39;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; csv_input_mysql.log.ERR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;获取全部 CSV 文件名称&lt;span&gt;&amp;nbsp;&lt;/span&gt;[成功]&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;cat csv_input_mysql.log | grep &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;正在疯狂处理&#39;&lt;/span&gt;&lt;span&gt; | awk &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;{print $2}&#39;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; csv_files.list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;获取全部表名称&lt;/span&gt;&lt;span style=&quot;background-color:#1e1f22; color:#bcbec4&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;[成功]&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;cat csv_input_mysql.log | grep &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;创建成功&#39;&lt;/span&gt;&lt;span&gt; | awk &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;{print $2}&#39;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style=&quot;color:#cf8e6d&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span&gt; table_names.list&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;数据验证&lt;/h2&gt; 
&lt;p style=&quot;color:#bcbec4; text-align:start&quot;&gt;&lt;span style=&quot;color:#e74c3c&quot;&gt;源数据无法预估质量，会出现源数据换行等情况，此时可以使用清洗工具进行清洗，清洗后即可进行验证&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span&gt;通过数据导入程序进行导入程序后&lt;/span&gt;&lt;span style=&quot;color:#f75464&quot;&gt;，&lt;/span&gt;&lt;span&gt;对原始 csv 进行清洗
&lt;/span&gt;&lt;span&gt;编辑 cleaned_data.py 文件修改
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span style=&quot;color:#7a7e85&quot;&gt;# 清洗前源数据&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;input_file = &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;you_file.csv&#39;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span style=&quot;color:#7a7e85&quot;&gt;# 清洗后数据&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;output_file = &lt;/span&gt;&lt;span style=&quot;color:#6aab73&quot;&gt;&#39;cleaned_you_file.csv&#39;&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;修改完成后进行执行
&lt;/span&gt;&lt;span&gt;python3 cleaned_data.py
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;执行成功后通过 wc 命令进行行数获取
&lt;/span&gt;&lt;span&gt;wc -l cleaned_you_file.csv
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;数据库通过
&lt;/span&gt;&lt;span&gt;SELECT COUNT&lt;/span&gt;&lt;span style=&quot;color:#bcbec4&quot;&gt;(&lt;/span&gt;&lt;span style=&quot;color:#2aacb8&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color:#bcbec4&quot;&gt;)&lt;/span&gt;&lt;span&gt; FROM you_file
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;得出的数差值为 1
&lt;/span&gt;&lt;span&gt;
&lt;/span&gt;&lt;span&gt;数据验证成功&lt;/span&gt;&lt;span style=&quot;color:#f75464&quot;&gt;！&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;具体点击原文链接查看，或直接访问 &lt;a href=&quot;https://gitee.com/heike07code/Backup-tools/blob/main/data_tools/csv/csv_input_mysql.md&quot;&gt;此链接&lt;/a&gt; 查看&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303777/backupserenity-2-1-updated</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303777/backupserenity-2-1-updated</guid>
            <pubDate>Thu, 25 Jul 2024 01:47:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>ICEPOS 开源收银系统 x64 位+Framework 4.6 更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;ICEPOS 开源收银系统 C#客户端 x64 位 + 支持 Framework4.6&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;64 位版本，更新 Lib 文件夹下面的 System.Data.SQLite.dll 为 x64 位版本+支持 Framework4.6&lt;/p&gt; 
&lt;p&gt;ICE.POS 文件夹下，增加 SQLite.Interop.dll，是 System.Data.SQLite.dll 的支持库， 必须添加到 release 的文件夹下面（已添加自动引用，生成时候回自带），即输出目录下，与 ICE POS.exe 目录同级&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;ICE.POS.Transfer ICE.POS.Common ICE.Utility ... 等类库生成目标请选择 x64&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;490&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-52551cb89ff3a0348424e0e3209458b07e8.jpg&quot; width=&quot;800&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303743</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303743</guid>
            <pubDate>Wed, 24 Jul 2024 12:44:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>wangmarketCMS v7.0，增加 AI 全自动 SEO 优化推广能力</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div class=&quot;ckeditor-html5-video&quot;&gt; 
 &lt;video controlslist=&quot;nodownload&quot; poster=&quot;https://video.zvo.cn/aiseo/info.jpg&quot; width=&quot;650&quot;&gt;
  &amp;nbsp;
 &lt;/video&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;ai 自动帮你根据关键词写文章并且每天不重样，你也可以自己采集通过我们系统开放 API 将文章导入。全面解决了随着日积月累文章逐渐增多的情况下服务器因数据量大而响应缓慢的问题，彻底解决亿级大数据情况下网站的高速访问及超低成本投入。&lt;/p&gt; 
&lt;h2&gt;更新说明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;增加全新的混合云架构的 AI-SEO 版本，私有云计算，公有云访问，拥有政务级安全能力，自动化搜索引擎提交，自动生成多个语种的 html 页面支持多语种收录、全自动化的增量备份保障数据安全，支持亿级文章数据，公有云服务器只需要买个 1 核 1G 服务器即可承载，全面降低大规模文章的行业站运营及维护成本。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;增加混合云架构 AI-SEO 版本的一键部署脚本&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;增加跟网站 html 页面翻译生成小语种的 tcdn.admin 的对接，并增加单次翻译的 url 上限到十万次。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;siteapi 插件中，获取文章列表，增加根据栏目代码获取文章列表的能力&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化 site.keywords 字段有 38 字改为 200 字，以适配 seo 版本&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;修复网站转移插件，文章内容转移后换行符会丢失的问题。如果是默认的富文本编辑器不会产生任何影响，但是如果自定义改为了 markdown 方式则会受到换行符丢失影响&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;fileupload-framework-ueditor 增加对 ueditor 上传保存模板的单独自定义&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;将网站中图片上传接口从 sitecontroller 剥离出来&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/83aed2f737bd08e8ebdd3b3f939ed08bd87ea9b7&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;模板导入优化，避免模板名字异常导致找不到本地私有的模板&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/f15c24585fbbf863d15c4cb5162515148e756b0f&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化 Template.replaceAll 以避免某些极端情况下生成整站时出现特殊字符异常导致无法生成整站的问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/1a313bb4a4b9c85631ad2541e8984089d4512e97&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;模板开发时，对定义模板名字优化，避免字符转全角会导致访问异常问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/9a82d1df9087eb9c655719b3398d4d9a3208034c&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化项目启动时，windows 一件运行包默认域名有时不加载的问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/06fa895c4fd06b478f5fae7abaca6c9716937d85&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;调整模板开发，允许对第三方开发好的模板进行再次改动&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/f2173548f7a21b69fcda9d709d9c25b321d8c5c7&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化栏目管理-子栏目列表，有时通过模板导入的值会变为隐藏的问题&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/ec62296fab4bbca151e72996bd540a2ed0819ba4&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;优化静态 html 生成类的参数改为公有&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://gitee.com/mail_osc/wangmarket/commit/83d0186f00b3eb4dd99bf004d87cfbc3f805105d&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;news 文章表增加 column_code 字段作为栏目代码关联的预留字段&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下载使用&lt;/h2&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fcms.zvo.cn%2F40828.html&quot; target=&quot;_blank&quot;&gt;Linux 一键安装命令&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fcms.zvo.cn%2F40829.html&quot; target=&quot;_blank&quot;&gt;windows 一键运行包&lt;/a&gt;&amp;nbsp; | &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcms.zvo.cn%2F43911.html&quot; target=&quot;_blank&quot;&gt;AI-SEO 版本一键安装命令&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303707/wangmarketcms-7-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303707/wangmarketcms-7-0-released</guid>
            <pubDate>Wed, 24 Jul 2024 09:10:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Codes 重新定义 SaaS 模式的研发项目管理平台开源版 4.5.6 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h2&gt;一：简介&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;strong&gt; &amp;nbsp;Codes 重新定义 SaaS 模式 =&amp;nbsp;云端认证 + 程序及数据本地安装 + 不限功能 + 30 人免费&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Codes&amp;nbsp; 是一个&amp;nbsp;高效、简洁、轻量的一站式研发项目管理平台。包含需求管理，任务管理，测试管理，缺陷管理，自动化测试，cicd&amp;nbsp;等功能； Codes 帮助企业加速融合研发、测试、运维一体化进程。商业版不限功能，本地安装只限用户数，30 个用户免费&amp;nbsp;; 社区版当前只开放了测试跟踪管理 (主要功能用例管理，缺陷管理)，后续接着分离其他功能代码出来。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;官网&lt;/strong&gt;&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ficodes.work%2F&quot; target=&quot;_blank&quot;&gt;https://icodes.work/&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;gitee 代码仓库&lt;/strong&gt;&amp;nbsp; https://gitee.com/xiaoming1q/icodes&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;本次发布 4.5.6&amp;nbsp; 一共 11 个更新 ，8 个优化更新，3 个 Bug&amp;nbsp; Fixed&amp;nbsp;详见&amp;nbsp;第三部分&lt;/strong&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;二：图文简说 Codes&amp;nbsp;&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;Codes&amp;nbsp;的产品理念：让老板感知数据，让中层管理者感受先进，让基层员工感到舒心&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;理念在产品中的落地就是：以便捷的方式给管理人员抓手，使管理抓得住，抓得好；以不增加负担的方式让执行人员专注本职工作和高效协同。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;好的工具，即要易用，又要方便管理：易用解决执行层面的协同问题，方便管理才能促进高效的执行，也就是说：协同仅是解决执行层面的问题，管理才是高效协同的抓手&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;功能架构&lt;/strong&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/da912e35-b58a-4ec8-9f14-185a40699f50.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、一&amp;nbsp; &amp;nbsp;&amp;nbsp;让老板感知数据&lt;/h2&gt; 
&lt;h3&gt;先来看 Codes 管理的抓手」&amp;nbsp;抓 「什么&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;1、做什么&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; 作为管理者，最关心的是在特定的前一时段内团队做了什么，特定的当前时段内正在做什么，接下来特定时段内要做什么&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;2、做得怎样&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;然后是各时段都有什么问题或是风险，比如：计划内的事情完成得咋样，解决的历史工作债务，又增加多少新的工作债务，当前累积了多少工作债务&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;3、瓶颈在哪里&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;就像找到了堵点才能解决交通拥堵一样，要先识别出哪里才生了积压，积压是人的问题，还是其他问题&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp;再来举例说明，Codes 如何通过数据感知的方式轻松的」 抓 「管理&lt;/p&gt; 
&lt;h3&gt;（1）宏观微观兼顾：迭代数据与阶段数据并存、粗细兼有&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/3f6708ad-414d-4598-b065-6f5d177d00a0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（2）负载分析以日历和甘特图的形式显示，洞察工作饱和度&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/449be79d-9a22-44b7-90b6-0f5556f22c97.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（3）待办排名，了解全局 「堵点」&amp;nbsp;，一目了然当前进度瓶颈&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/df58dbb5-7b56-44a9-ae9b-d31616aeb362.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（4）迭代人员分工，了解局部 「堵点」&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1fbb6d7-391e-4c50-9f17-9c1f4254fb7a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（5）任务覆盘，覆盘做什么、做得如何（排期，延期，债务解决及累积）&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;减少不必要的例会，比如解决的历史债务，新增债务，当前累积的债务等。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/086dd4e6-f6d8-4bfc-956a-ac3b3e104142.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（6）各职位人员产出及工时&amp;nbsp;一目了然&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/28bf78a2-5aa3-4d4d-984e-efb91f272a21.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（7）人员产出：工时、事项&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c8be6dd8-9dcb-4448-a43a-9b4e6b517333.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（8）工时趋势&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c02d5112-fa75-4c4f-b42d-2461122f1bec.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（9）全局看板，一目了然项目情况&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/aeefe606-915f-4f04-8335-8f977023ec9b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/cd8baab5-d4d0-44c6-adba-434bfa9fee79.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（10）工时，日报，进度，全局事项总览全局&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/aab18584-2d2e-4c44-aa6d-3e90f22e9a86.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/6f5f1ff7-8d55-4b1d-b045-4285b571034d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（11）风险拓扑，以直观的方式显示风险根因&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/50cbb235-285d-4892-8ee0-abb1b8485401.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（12）项目周报、部门周报、项目月报，全司项目月报&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; 解放 PM，让他们专注于过程跟进，汇报内容弹指生成&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/17794713-0654-4a24-a827-d988810c0b4d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、二&amp;nbsp; &amp;nbsp; Codes 让中层管理者感受先进&lt;/h2&gt; 
&lt;h3&gt;（1）首创的事件驱动 + 信息流实时推送的管理模式&lt;/h3&gt; 
&lt;h3&gt;事找人，实时推流。&lt;/h3&gt; 
&lt;h3&gt;&lt;strong&gt;为后续事件编排 + 工作流编排打下基础，同时一个页面搞定一切工作&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/7471a058-2d48-4113-9d3d-b27ca4454d84.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;时间轴视图&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/469d3f2b-2f94-4f01-9fdd-df675ffabc44.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（2）首创的事件驱动 +&amp;nbsp;事件订阅&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp;订阅事件时，还可以带上细粒度的条件，当然也可以只订阅事件&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/cef1492e-75ab-4c93-8553-ad8a678aa266.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（3）敏捷、瀑布、看板润物细无声方式融合&amp;nbsp;&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;底层一套数据，可以随意切换。瀑布以阶段为主，敏捷以迭代为主&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/0ac13752-1c79-45e2-bd51-ae0f3d07a8a4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/0328a820-9561-4951-b7d0-6a67bc193041.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;瀑布与敏捷隔合：瀑布各阶段或里程碑下以迭代来规化阶段内的工作事项，可以有多个迭代；如前期以敏捷为主，后续可批量把迭代分配到阶段中，然后 Coodes 自动推导阶段进度&lt;/p&gt; 
&lt;h3&gt;（4）生成式全局看板，再也不需手动创建看板&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;以逆向的方式，也就是通过定义查询条件的方式，来生成看板。所有人共用一个全局看板，定制各自的看板&lt;br&gt; 需求、任务、需求评审、用例、缺陷把它们各自的不同状态，泛化为：规划中、进行中，已完成，终止｜暂停这几种状态， 并显示在对应的看板泳道中。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c68497fc-f2d7-485e-a709-72b50945f3fa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;看板分组，可按人员、项目、迭代分组，以便分组后再显示各分组数据的看板&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/e9bd8a32-5c0e-4ae0-8ea7-1826901e2e6c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（5）多事项闭环迭代 ， 过程管理更通透和全面&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp;一个迭代是一个完整研发周期闭环：从需求--&amp;gt;到研发任务--&amp;gt;到测试--&amp;gt;到上线 &amp;nbsp;&lt;br&gt; 包含了从需求、到任务、到用例、到测试、到缺陷、到自动化测试到上线，并自动生成迭代总结并存档&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/2391eacd-15e3-49c6-87b3-3941e9cf5829.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/89f1718b-a616-4b9b-9444-bd605d3de205.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; 需求、任务、用例、缺陷都可分组显示，方便从不同维度来查看相关工作项&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/73d49bef-b8f3-482d-9a53-5705f3905e6b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（6）日报工时融合，让日报无操作空间&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;如果日报上罗列的事项和实际工作安排就没有紧密关联，「混子」 对日报就有 「操作空间」；管的人越多，越难记住每个人的具体工作。如果混子瞎编日报，也难以察觉，一看满满当当，以为产出还不错，干的事项不少嘛。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;填写日报时，要自动列出当日事项。加待处理事项和其他事项让日报更全面，且和实际工作安排关联，日报还可发往第三方平台&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/b476a767-fbb7-4b8a-a280-7ae2ad150966.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（7）日报工时融合，自动生成项目日报、项目周报&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/24a67bdb-28c0-492f-bbdb-7247a7aa0ba5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（8）落地敏捷测试&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;传统的测试计划只定义了工作项，且只是用例相关，最关键，只有工作项，没有分工， 不便于团队协作，也不便于跟踪各自的进度。在同一个迭代下分配工作即有全局又有，个体的分工及任务跟踪。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/26aab9be-88e3-4f43-a891-b291ff145340.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/5b239b9e-acc3-4ced-bbbe-70eb5c05dcbb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（9）流程驱动缺陷管理&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;流程驱动测试，告别一刀切。因地制宜」，可按需实时调整测试流程， 以反应不同管控目的； 不同流程对应不同的 bug 状态 , 更能反应项目实况， 并根据流程推动 bug 状态的演化。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/bfea4769-fb9c-4773-9911-bbdc1fc690a3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（10）任务批量排期，省事省事&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;批量排期（粗加工），再拉会（精加工）调整，月初或月底排期工作省事快捷，可顺排也可倒排&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/de8a5e63-5bfb-42f1-acec-2f2fa60c4908.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（11）自动层层推算进度&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;需求下有用任务，或子需求&amp;nbsp;用任务或子需求的工时来推算父需求的工时，如需注多有也是层层推算。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/6de90f90-557b-443f-b99a-56f55537c713.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、三&amp;nbsp; &amp;nbsp;让基层员工感到舒心&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;Codes 以不增加负担的方式，让专注本职工作和高效协同，以低代码提升个人工作效率&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;执行过程事找人、透明化、可追溯；围绕需求拉通所有研发活动，全场景业务数据惯通不割裂。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;对于具体干活的人员，主要是两件事，我的工作有什么如何汇报我的工作，团队的工作如何组织实施&lt;/p&gt; 
&lt;h3&gt;（1）我的事项&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&amp;nbsp; &lt;strong&gt;事找我&lt;/strong&gt;，在我的待办事项中处理一切事务，实时推流的方式推给我，然后在工作区办理一切事项&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/5b3ad4fd-d2f2-4352-929c-e0929de36948.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（2）我关注的事项&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;可以通过订阅的方式，订阅事件，然后按订阅关系推流，订阅时除了可订阅事件，还支持各种复杂的条件，如下图所示&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/af68ae64-cc46-4c2e-b839-6aafb07884c4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;时间轴视图&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/b3c7eee2-f186-46e8-9e2c-272c8f228689.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（3）工时日报融合，集工是填报工时，方便快捷&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;以批量的形式分分钟填好工时，让烦人的工时，不再烦人！，并自动生成项目日报方便 PM 查阅，工时可以配置无审批，或 PM 审批，部门负责人审批&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;自动生成项目日报&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;自动列出当日事项，在其后填写工时，缺陷及用例都计算了工时，可以完整统计迭代进度，项目进度，以及部门工时。按支持层层下钻到人，如项目下钻到迭代，再从迭代下钻到人，或是从部门下钻到人&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/fe7bf7e1-12b5-45c2-95e1-68a9a6ad3d25.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;还会贴心的提重醒写日报，对于大老粗很友好&lt;/h3&gt; 
&lt;h3&gt;（4）各功能中心可分多维度分组显示，如任务中心，需求中心等&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/5fe4a5cd-f0c4-4c32-9f9e-cef6bd250dc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/0e97f1e2-6c59-408a-a43b-102bb4a6ee19.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（5）以迭代为中心来组织，且多事项迭代，从需求到测试到上线&amp;nbsp;形成闭环。&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;需求评审后，规化到迭代中，然后开发人员拆分需求为任务，同时测试可写测试用例，过程中间的产出放到迭代的交付物中，自动和项目文档关联，在发布中定义上线事项及执行人&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/daceb033-3f26-49ed-a678-970faa318a11.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&amp;nbsp;（6）围绕需求拉通所有研发活动&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;多种视图模式，满足不同需要，围绕需求拉通所有研发活动，确保干系人信息对齐，一个页面实现主要研发活动的联动。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;再也不会在需求下不能直观看到任务和用例了，产品视图让产品专注于需求，全景视图让研发人员一目了然&amp;nbsp;需求拆解，看板和甘特图视图。&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/18ff14b3-fb40-44e9-b945-98c281b86b17.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;（7）通过低代码降低 CI CD , 接口测试技术门槛&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;零代码拖拽式实现代码的编译和部署&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/cc807880-db70-4bcd-8d69-08e1b24765cb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;零代码拖拽式进行接口自动化编排&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/025f800b-3b83-4b44-ba84-468e71906f12.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;自动推导接口依赖拓补关系图，让接口关系不再是黑匣子，便捷的接口调用链&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/e53686a0-d191-4fed-b50d-2477eadccba6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;拖拽生成断言和拖拽提取参数，让接口测试傻瓜化； 创新式接口混沌测试，瞬间完成接口健壮性测试。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/99746f91-663b-49e5-ac44-ae2ffe2741bc.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/c4e818ad-64f4-4860-b23f-14bff46db97a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;三：4.5.6&amp;nbsp; 更新说明&lt;/h2&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;本次发布一共 11 个更新 ，8 个优化更新，3 个 Bug&amp;nbsp;&amp;nbsp;fixed&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;8 个更新&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;1、BUG 属加一个非必填属性，当需求引起的问题时，可以选择对应的产品人员，以便后续的处理如统计。&lt;br&gt; 2、安全增加，删除了不用的包，以及升级 app scan 扫描出来的有漏洞的 jar。&lt;br&gt; 3、迭代中加上限制，一个接口测试场景，只能加入到一个迭代中。&lt;br&gt; 4、在迭代明细界面，地删除加了限制，不能删除当前迭代。&lt;br&gt; 5、 BUG 查询中增加产品人员查询条件。&lt;br&gt; 6、BUG 处理历史中，处理说明，显示不全时，增加光标指上时，悬浮显示所有。&lt;br&gt; 7、增加一个产品人员简报的 BUG 分析。&lt;br&gt; 8、迭代下用例包中，增加二次分配用例功能，以前要是需要二次分配用例，需要在测试包管理中去处理，不方便。&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;&lt;strong&gt;3 个 BUG 修复&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#404040; text-align:left&quot;&gt;1、迭代中如果有多个迭代，一个用例包，可能分到多个迭代，现在修改为一个测试包只能加一个迭代中。&lt;br&gt; 2、在测试流程设置中，取消某个流程后，停留在此流程的 BUG，有的点修改时，页面没内容。&lt;br&gt; 3、用例转 BUG，有时候上传不了附件，一直在 loading。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/303695/codes-4-5-6-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/303695/codes-4-5-6-released</guid>
            <pubDate>Wed, 24 Jul 2024 08:31:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>