<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-软件更新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news/project" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-软件更新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Thu, 11 Jul 2024 14:02:17 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>一款超级强大的 ORM 框架 mybatis-mp 1.5.9 正式发布！！！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;&lt;strong&gt;官方文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;https://mybatis-mp.cn&lt;/a&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;1.5.9 正式发布&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;1：增加 json 字段，对应的 typeHandler&lt;/li&gt; 
 &lt;li&gt;2：优化了 maven 依赖&lt;/li&gt; 
 &lt;li&gt;3：@TableField 增加 insert 开关&lt;/li&gt; 
 &lt;li&gt;4：新增 saveOrUpdate&lt;/li&gt; 
 &lt;li&gt;5：优化 DaoImpl，让继承者更容易扩展&lt;/li&gt; 
 &lt;li&gt;6：Methods 增加 count1()/countAll() 方法&lt;/li&gt; 
 &lt;li&gt;7：Methods count 方法增加 distinct 功能&lt;/li&gt; 
 &lt;li&gt;8：消除 idea 警告&lt;/li&gt; 
 &lt;li&gt;9：加强参数 typehandler 结合&lt;/li&gt; 
 &lt;li&gt;10：修复修改默认值失效问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;10 大与众不同的亮点：&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;1：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点一：可自定义动态默认值&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点二：支持不同数据库 ID 自增配置&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;3：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点三：逻辑删除，可自动填充删除时间&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;4：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点四：可自定义 sql（sql 模板）&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;5：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点五：mapWithKey（把查询转成一个&amp;nbsp;map）&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;6：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点&amp;nbsp;六：部分字段&amp;nbsp;新增&amp;nbsp;和&amp;nbsp;修改&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;7：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点七：枚举的良好支持&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;8：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点八：mybatis-xml&amp;nbsp;returnType&amp;nbsp;的&amp;nbsp;ORM&amp;nbsp;映射&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;9：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点九：优雅的&amp;nbsp;XML 和&amp;nbsp;@Select 查询&amp;nbsp;自动分页&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;10：mybatis-mp&amp;nbsp;-&amp;nbsp;亮点十：支持多层嵌套 VO，自动映射以及自动 select&amp;nbsp;所需列&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;mybatis-mp 包含丰富的 api：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;1：基于注解，映射数据库；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2：支持多表 join 和返回；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;3：api 采用 lambda 和 stream 流式设计；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;4：select 自动化以及结果 1 对 1,1 对多，超级方便快捷；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;5：内置分页以及超强的 sql 优化功能；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;6：稳定且性能极优；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;7：轻量级封装 mybatis，几乎没有侵入；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;8：api 丰富，支持数据库函数、多表、乐观锁、多租户、逻辑删除、默认值（可动态值） 等众多功能；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;9：零学习成本，和写 sql 一样方便。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;10：支持复杂的返回关系映射：例如一对一 ，一对多，多对多；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;11：支持自定义 sql 模板，再也不用担心框架支持不足；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;12：内置代码生成器，通过配置，可定制自身规范；&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;13：全新的框架，全新的设计理念，新的就是好！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301588/mybatis-mp-1-5-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301588/mybatis-mp-1-5-9-released</guid>
            <pubDate>Thu, 11 Jul 2024 09:42:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>weops-lite v1.0 正式发布，轻量化运维平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h2&gt;一、项目概述&lt;/h2&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;随着信息技术的飞速发展，企业的 IT 基础设施日益复杂，运维管理变得更加重要和具有挑战性。为了帮助企业高效地管理其 IT 资产与运维流程。本项目旨在通过全面的资产管理、强大的凭据管理和快速的全文检索功能，协助运维人员提升工作的效率和准确性。&lt;/p&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;项目地址：&lt;/strong&gt;&lt;a href=&quot;https://gitee.com/weops-lab/weops_lite&quot;&gt;https://gitee.com/weops-lab/weops_lite&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;二、主要功能&lt;/h2&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;本运维平台项目提供以下主要功能：&lt;/p&gt; 
&lt;h3&gt;1. 资产管理&lt;/h3&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;资产管理是本平台的核心功能之一，运维人员可以对企业的各类 IT 资产进行全面的管理。包括但不限于：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;资产创建与管理&lt;/strong&gt;：支持增删改查操作，实现对物理服务器、虚拟化资源、存储设备等的全面管理。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模型创建&lt;/strong&gt;：支持根据不同资产类型自定义模型，灵活适应多种企业资产管理需求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;1257&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a8afa6911751f96bdb6a025acb1d460522f.png&quot; width=&quot;2148&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;微信截图_20240711170440.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/9124b03cb5cd4f25b70d7649f9e9e5f9.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;2. 凭据管理&lt;/h3&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;凭据管理功能旨在帮助运维人员安全地管理各类凭证和认证信息。其主要特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;凭据存储&lt;/strong&gt;：支持各类凭据的加密存储，确保凭证安全。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;凭据共享&lt;/strong&gt;：支持将凭据在团队内部安全共享，提升团队协同工作效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;凭据.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/324da44b4160441daef1cb1aeedd0d24.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3. 全文检索&lt;/h3&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;平台集成了强大的全文检索功能，允许用户快速查找所需信息。特性如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;快速检索&lt;/strong&gt;：支持关键字检索，运维人员可以快速找到相关的资产信息。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高效索引&lt;/strong&gt;：采用高效的索引机制，保证大数据量下的检索速度。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;搜索 1.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/c2e44fe0f5af4e928979b7399d0add14.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;4. 系统管理&lt;/h3&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;系统管理模块为平台的稳定运行提供了保障，主要包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;系统配置&lt;/strong&gt;：支持对平台各项配置参数进行灵活设置。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;日志管理&lt;/strong&gt;：详细记录系统运行日志，方便排查故障。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;权限分配&lt;/strong&gt;：为不同角色分配不同权限，确保用户只能访问其所需的功能模块。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用户创建与管理&lt;/strong&gt;：支持用户增删改查操作。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;用户组管理&lt;/strong&gt;：支持将用户分组管理，便于权限统一设置。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;微信截图_20240711170533.png&quot; src=&quot;https://oscimg.oschina.net/oscnet/7719e62d204c488495d2a27afe7c8562.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/%E7%BB%84%E7%BB%87%E7%AE%A1%E7%90%863.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;三、技术架构&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#393939&quot;&gt;本开源运维平台项目基于 Python 语言开发，主要采用 Django 和 Django REST Framework（DRF）进行开发和维护。为了确保项目结构的清晰和模块化，采用了一种分层设计思想，将不同的功能和逻辑分散在不同的模块中。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;四、安装与使用&lt;/h2&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;详见网址：&lt;a href=&quot;https://gitee.com/weops-lab/weops_lite&quot;&gt;https://gitee.com/weops-lab/weops_lite&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;五、总结&lt;/h2&gt; 
&lt;p style=&quot;color:#393939; margin-left:0; margin-right:0; text-align:start&quot;&gt;本开源运维平台项目通过完善的资产管理、强大的凭据管理和高效的全文检索功能，助力企业提升 IT 运维管理效率。项目基于 Python 开发，具备良好的稳定性和可扩展性，适合各类企业的运维需求。希望本项目能对各位运维人员有所帮助，欢迎大家参与贡献和交流。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301574/weops-lite-1-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301574/weops-lite-1-0-released</guid>
            <pubDate>Thu, 11 Jul 2024 09:08:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>blazork8s 发布新版，正式支持 K8S Gateway API</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweibaohui%2Fblazork8s&quot; target=&quot;_blank&quot;&gt;blazork8s&lt;/a&gt;是使用 c# blazor + AntDesign 技术编写的开源 k8s 管理工具。融合了 AI 能力，支持&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.siliconflow.cn%3Freferrer%3Dclxu0d8a9004flu5etv0qs8po&quot; target=&quot;_blank&quot;&gt;硅基流动免费模型&lt;/a&gt;，墙裂建议国内小伙伴们配置硅基流动的服务进行体验。&lt;/p&gt; 
&lt;p&gt;本次发版在支持 Ingress 管理的基础上，新增对 GatewayAPI 的支持，并在示例 yaml 中新增了 HttpRoute 的各种用法。&lt;/p&gt; 
&lt;h2&gt;本次主要更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增对 Gateway API 的支持，包括 GatewayClass、Gateway、HttpRoute、GrpcRoute、TcpRoute、UdpRoute、TlsRoute、ReferenceGrant 等资源类型&lt;/li&gt; 
 &lt;li&gt;新增 Gateway 拓扑图展示。形成 Gateway-&amp;gt;HttpRoute、GrpcRoute、TcpRoute、UdpRoute-&amp;gt;Service-&amp;gt;Pod 的关联展示&lt;/li&gt; 
 &lt;li&gt;新增拓扑图动画展示，更形象直观&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1174&quot; src=&quot;https://oscimg.oschina.net/oscnet/diagram.gif&quot; width=&quot;2308&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1198&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a9bea0eddc05ec56bf980853d38168fa178.png&quot; width=&quot;2299&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Github 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweibaohui%2Fblazork8s&quot; target=&quot;_blank&quot;&gt;https://github.com/weibaohui/blazork8s&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gitee 地址：&lt;a href=&quot;https://gitee.com/weibaohui/blazork8s&quot;&gt;https://gitee.com/weibaohui/blazork8s&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301561/blazork8s-updated</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301561/blazork8s-updated</guid>
            <pubDate>Thu, 11 Jul 2024 07:56:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>jsoup 1.18.1 发布，Java HTML 解析器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;jsoup 1.18.1 现已发布，新的流解析器提供了混合 DOM + SAX 事件驱动的解析接口、请求进度跟踪和许多其他改进。jsoup 是一个用于处理 real-world&amp;nbsp;HTML 的 Java 库。它使用最好的 HTML5 DOM 方法和 CSS 选择器提供了一个非常方便的 API 用于提取和操作数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;下载地址：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fdownload&quot; target=&quot;_blank&quot;&gt;https://jsoup.org/download&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;具体更新内容包括：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#192943&quot;&gt;改进&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;Stream Parser&lt;/strong&gt;：&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FStreamParser.html&quot; target=&quot;_blank&quot;&gt;StreamParser&lt;/a&gt;&lt;/code&gt;对输入进行渐进式解析。对于 URL 请求，可通过&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23streamParser%28%29&quot; target=&quot;_blank&quot;&gt;Connection.Response.streamParser()&lt;/a&gt;&lt;/code&gt;获得。每个&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html&quot; target=&quot;_blank&quot;&gt;Element&lt;/a&gt;&lt;/code&gt;完成时，都会通过&lt;code&gt;Stream&lt;/code&gt;或&lt;code&gt;Iterator&lt;/code&gt;interface 输出。返回的元素将包括其所有子元素以及（空的）下一个同级元素（如果适用）。元素（或其子元素）可能会在解析过程中从 DOM 中删除，例如为了节省内存，提供一种机制来解析输入文档，否则该文档会过于庞大而无法容纳在内存中，但仍然为文档及其元素提供 DOM 接口。此外，解析器还提供了一个&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FStreamParser.html%23selectFirst%28java.lang.String%29&quot; target=&quot;_blank&quot;&gt;selectFirst(String query)&lt;/a&gt;&lt;/code&gt;/&amp;nbsp;&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FStreamParser.html%23selectNext%28java.lang.String%29&quot; target=&quot;_blank&quot;&gt;selectNext(String query)&lt;/a&gt;&lt;/code&gt;，它将运行解析器直到找到匹配项，此时解析将暂停。可以通过另一个&lt;code&gt;select()&lt;/code&gt;调用或通过&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FStreamParser.html%23stream%28%29&quot; target=&quot;_blank&quot;&gt;stream()&lt;/a&gt;&lt;/code&gt;或&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FStreamParser.html%23iterator%28%29&quot; target=&quot;_blank&quot;&gt;iterator()&lt;/a&gt;&lt;/code&gt;方法恢复解析。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2096&quot; target=&quot;_blank&quot;&gt;#2096&lt;/a&gt;（附示例）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Download Progress&lt;/strong&gt;：添加了一个 Response&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FProgress.html&quot; target=&quot;_blank&quot;&gt;Progress&lt;/a&gt;&lt;/code&gt;事件接口，用于报告下载进度和 URL（并解析）。通过&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23onResponseProgress%28org.jsoup.Progress%29&quot; target=&quot;_blank&quot;&gt;Connection.onResponseProgress()&lt;/a&gt;&lt;/code&gt;设置。会话和单个连接级别均受支持。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2164&quot; target=&quot;_blank&quot;&gt;#2164&lt;/a&gt;、&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F656&quot; target=&quot;_blank&quot;&gt;#656&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加了&lt;code&gt;Path&lt;/code&gt;&lt;span style=&quot;color:#192943&quot;&gt;&amp;nbsp;accepting parse&amp;nbsp;&lt;/span&gt;方法：&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FJsoup.html%23parse%28java.nio.file.Path%29&quot; target=&quot;_blank&quot;&gt;Jsoup.parse(Path)&lt;/a&gt;&lt;/code&gt;，&lt;code&gt;Jsoup.parse(path, charsetName, baseUri, parser)&lt;/code&gt;等。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2055&quot; target=&quot;_blank&quot;&gt;#2055&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新了&lt;code&gt;button&lt;/code&gt;标签配置，在&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23text%28%29&quot; target=&quot;_blank&quot;&gt;Element.text()&lt;/a&gt;&lt;/code&gt;方法中的多个按钮元素之间加入了空格。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2105&quot; target=&quot;_blank&quot;&gt;#2105&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在 namespace Selector 中增加了对&lt;code&gt;ns|*&lt;/code&gt; all 元素的支持。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F1811&quot; target=&quot;_blank&quot;&gt;#1811&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在序列化过程中规范化属性名称时，无效字符现在将被替换为&lt;code&gt;_&lt;/code&gt;, 而不是被删除。这将使处理过程更清晰，并且通常可以防止无效属性名称被意外强制转换。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2143&quot; target=&quot;_blank&quot;&gt;#2143&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#192943&quot;&gt;变化&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;删除了之前废弃的内部类和方法。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2094&quot; target=&quot;_blank&quot;&gt;#2094&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Build change：已构建 jar 的 OSGi 清单不再 imports itself。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2158&quot; target=&quot;_blank&quot;&gt;#2158&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#192943&quot;&gt;Bug 修复&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;跟踪源位置时，如果第一个节点是 TextNode，则其位置被错误设置为&lt;code&gt;-1.&lt;/code&gt;&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2106&quot; target=&quot;_blank&quot;&gt;#2106&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;当连接（或重定向）到路径中包含诸如&amp;nbsp;&lt;code&gt;{&lt;/code&gt;&lt;span style=&quot;color:#192943&quot;&gt;,&amp;nbsp;&lt;/span&gt;&lt;code&gt;}&lt;/code&gt;之类的字符的 URL 时&lt;span&gt;，&lt;/span&gt;将引发格式错误的 URL 异常（如果在开发中），或者 URL 可能无法正确转义（如果在生产中）。URL 编码过程已得到改进，可以正确处理这些字符。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2142&quot; target=&quot;_blank&quot;&gt;#2142&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在使用带有自定义输出文档的&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fhelper%2FW3CDom.html&quot; target=&quot;_blank&quot;&gt;W3CDom&lt;/a&gt;&lt;/code&gt;时，会引发空指针异常。&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2114&quot; target=&quot;_blank&quot;&gt;#2114&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;使用同级组合器（例如：&lt;code&gt;h1:has(+h2)&lt;/code&gt;）时，&lt;code&gt;:has()&lt;/code&gt;选择器无法正确匹配。#&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2137&quot; target=&quot;_blank&quot;&gt;2137&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;由于错误的短路，&lt;code&gt;:empty&lt;/code&gt;选择器错误地匹配了以空白文本节点开头、后跟非空节点的元素。#&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2130&quot; target=&quot;_blank&quot;&gt;2130&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23cssSelector%28%29&quot; target=&quot;_blank&quot;&gt;Element.cssSelector()&lt;/a&gt;&lt;/code&gt;在为类名中包含&lt;code&gt;(&lt;/code&gt;或&lt;code&gt;[&lt;/code&gt;的元素构建选择器时，会失败并显示「Did not find balanced marker」&amp;nbsp;。并且带有这些字符转义的选择器不会按预期匹配。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2146&quot; target=&quot;_blank&quot;&gt;#2146&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新了&lt;code&gt;Entities.escape(string)&lt;/code&gt;，使转义文本适用于文本节点和属性（以前仅适用于文本节点）。这不会影响&lt;code&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23html%28%29&quot; target=&quot;_blank&quot;&gt;Element.html()&lt;/a&gt;&lt;/code&gt;输出，它会根据是用于文本数据还是引用属性正确应用最小转义。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F1278&quot; target=&quot;_blank&quot;&gt;#1278&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fuzz：在规范化&amp;nbsp;regex&amp;nbsp;中解析精心设计的&lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt;URL 时可能会发生 Stack Overflow 异常。&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2165&quot; target=&quot;_blank&quot;&gt;#2165&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新公告：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fnews%2Frelease-1.18.1&quot; target=&quot;_blank&quot;&gt;https://jsoup.org/news/release-1.18.1&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301543/jsoup-1-18-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301543/jsoup-1-18-1-released</guid>
            <pubDate>Thu, 11 Jul 2024 06:09:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>loveqq-framewoek 1.0.2 发布，比 Spring 更强大的条件注解推断</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;strong&gt;本次更新：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增： loveqq-boot-starter-mail，整合 java mail&lt;/li&gt; 
 &lt;li&gt;新增：loveqq-boot-starter-logback，整合 logback&lt;/li&gt; 
 &lt;li&gt;新增：loveqq-cache，支持注解式缓存配置，默认提供&amp;nbsp;ConcurrentHashMap 实现&lt;/li&gt; 
 &lt;li&gt;新增：loveqq-cache-redis，整合 redisson 缓存支持&lt;/li&gt; 
 &lt;li&gt;新增：loveqq-boot-starter-netty，整合 reactor-netty 作为 web 服务器，同时支持过滤器、拦截器配置；同时兼容命令式、响应式编程规范&lt;/li&gt; 
 &lt;li&gt;优化：loveqq-boot-starter-datasource，新增动态数据源支持，druid 监控自动配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;loveqq-framework 的前世今生&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;loveqq-framework 前身是 kfyty-framework 
  &lt;ul&gt; 
   &lt;li&gt;而 kfyty-framework 前身是 kfyty-utils&lt;/li&gt; 
   &lt;li&gt;而 kfyty-utils 前身是 mybatis-demo&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;是的，刚开始仅仅是因为某个需求，是一张超级大宽表，要编写一个展示页面，由于字段实在太多，并且不只一个大宽表，因此就编写了一款代码生成器来辅助。并且这款代码生成器应该支持 java 编程式模板生成。但是又不想引入 mybatis 这种相对重量级的框架，而直接使用 jdbc 又比较繁琐，所以又编写了简单的可以基于注解执行 SQL 的简易版 mybatis，这便是 mybatis-demo。&lt;/p&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;后来，闲来无事，又想实现简易版 springmvc，并嵌入嵌入式 tomcat，以加深对 springmvc 的理解。此时对项目更名为了 kfyty-utils，作为自己的工具集。&lt;/p&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;再后来，闲来无事，又想实现简易版 spring 及 springboot，以加深对 spring 的理解。此后便一直深耕，有时间就加入新功能。有读者可能发现，loveqq 框架的类命名和 spring 的基本上完全一致，这是就是原因。&lt;/p&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;初期是以学习 spring 进行开发的，但是却并没有参考 spring 的实现，仅仅是把 spring 当做一个黑盒接口，根据 spring 的外在功能表现，使用自己的想法去实现功能，所以该框架，即不是模仿 spring，也不是 spring 的二开。&lt;/p&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;比如：BeanDefinition 接口，在最初的版本实现中，并没有 bean 定义的概念，并且不支持构造方法注入，不支持普通方法注入，bean 必须有一个无参构造器。这么实现的目的是，避免复杂的循环依赖，所以此时仅有一级 bean 容器缓存。并且是扫描规则很粗暴，是扫描到带 @Component 或 @Bean 的组件，直接实例化并放入容器。后来想为 @Bean 方法增加参数，也就是为普通方法增加注入功能，但此时发现，几乎很难实现。因为我不知道此时要注入的 bean 存不存在，特别是循环依赖的场景下。因此必须引入 bean 定义的概念，先扫描 bean 定义，然后再实例化 bean。&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;再比如：loveqq 框架的自动配置，不需要 AutoConfigureBefore/AutoConfigureAfter 之类的辅助注解。因为 loveqq 框架在校验有条件的 bean 定义时，不仅会校验本身的条件，还会去校验该 bean 所依赖的 bean 的条件。还引入了 bean 条件引用概念，即使某些 bean 定义还未加载，也可以找到该 bean 所依赖的 bean 的条件。因此无需关心 bean 加载顺序的问题。下面就是一个很好的例子：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;```java
@BootApplication
public class ConditionTest {
&amp;nbsp; &amp;nbsp; private boolean isOverride;

&amp;nbsp; &amp;nbsp; @Autowired(required = false)
&amp;nbsp; &amp;nbsp; private List&amp;lt;Inter&amp;gt; cons;

&amp;nbsp; &amp;nbsp; @Bean
&amp;nbsp; &amp;nbsp; public BB bbOverride() {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; this.isOverride = true;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new BB();
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; @EventListener
&amp;nbsp; &amp;nbsp; public void onComplete(ContextRefreshedEvent event) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Assert.isTrue(this.isOverride);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Assert.isTrue(this.cons.size() == 5);
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; public static void main(String[] args) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; SpringApplication.run(ConditionTest.class, args);
&amp;nbsp; &amp;nbsp; }
}

interface Inter {}

@Component
@ConditionalOnBean({CC.class, BB.class})
@ConditionalOnClass(name = &quot;com.kfyty.condition.ConditionTest&quot;)
class AA implements Inter {}

@Component
@ConditionalOnMissingBean(BB.class)
class BB implements Inter {}

@Component
@ConditionalOnBean(BB.class)
class CC implements Inter {

&amp;nbsp; &amp;nbsp; @Bean
&amp;nbsp; &amp;nbsp; @ConditionalOnBean(AA.class)
&amp;nbsp; &amp;nbsp; public EE ee() {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new EE();
&amp;nbsp; &amp;nbsp; }
}

class DD implements Inter {}

@Component
@ConditionalOnMissingBean(DD.class)
class DDF implements FactoryBean&amp;lt;DD&amp;gt; {

&amp;nbsp; &amp;nbsp; @Override
&amp;nbsp; &amp;nbsp; public Class&amp;lt;?&amp;gt; getObjectType() {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return DD.class;
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; @Override
&amp;nbsp; &amp;nbsp; public DD getObject() {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return new DD();
&amp;nbsp; &amp;nbsp; }
}

class EE implements Inter {}
```&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;上述代码，首先 BB 是无条件直接定义的，所以 BB 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 CC 仅依赖 BB 存在，所以 CC 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 AA 仅依赖 BB、CC 的存在，以及主类的存在，因此 AA 一定存在；&lt;/li&gt; 
 &lt;li&gt;而 EE 仅依赖 AA，因此 EE 一定存在；&lt;/li&gt; 
 &lt;li&gt;而我们没有直接定义 DD，因此 DDF 一定存在，而 DDF 属于 FactoryBean，它生产了 DD，所以 DD 一定存在；&lt;/li&gt; 
 &lt;li&gt;所以 AA、BB、CC、DD、EE 的条件都成立，cons.size() 应该是 5。&lt;/li&gt; 
 &lt;li&gt;而上述代码在 spring 下无法通过测试，但是在 loveqq-framework 中是可以测试通过的。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;后来不断完善，准备正式发布，就更名为了 kfyty-framework，并发布了 kfyty-framework 1.0.0 版本。&lt;/p&gt; 
&lt;p&gt;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;&amp;amp;ensp;再后来，有读者建议取个正式一点的名字，因为正式更名为 loveqq-framework，并发布了 1.0.1 版本。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301536/loveqq-framewoek-1-0-2-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301536/loveqq-framewoek-1-0-2-released</guid>
            <pubDate>Thu, 11 Jul 2024 05:04:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>通用代码生成器模板体系，域对象，枚举和动词算子</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通用代码生成器模板体系，域对象，枚举和动词算子&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通用代码生成器或者叫动词算子式通用目的代码生成器是一组使用 Java 编写的通用代码生成器。它们的原理基于动词算子和域对象的笛卡尔积。它们没有使用 FreeMarker 和或者 Velocity 等现成的文件式模板引擎。而是使用 java 语言开发了一套专门为动词算子式代码生成器使用的模板 API。&lt;/p&gt; 
&lt;p&gt;组成通用代码生成器模板的概念核心是域对象，枚举和枚举动词算子。域对象和动词算子的组合形成数据库驱动的常规的功能组。而枚举和动词算子成两的组合形成硬编码的常量的功能组，即只有&lt;br&gt; &amp;nbsp;只读功能的代码生成物。&lt;/p&gt; 
&lt;p&gt;动词算子有分为单域动词，双域动词，域对象字段动词和非全栈动词，各有功能不同。&lt;/p&gt; 
&lt;p&gt;详细的介绍视频请见：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Bx4y1t7kD%2F&quot; target=&quot;_blank&quot;&gt;https://www.bilibili.com/video/BV1Bx4y1t7kD/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;常见的通用代码生成器请见：&lt;/p&gt; 
&lt;p&gt;无垠式 Java 通用代码生成器 JEEEU 版：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/d47e9137326244f0bc38203aa594763e.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;218&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3bff4a6a872b8aaf44a3be475f9e188b0a0.jpg&quot; width=&quot;310&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/jerryshensjf/InfinityJEEEU&quot;&gt;https://gitee.com/jerryshensjf/InfinityJEEEU&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301531</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301531</guid>
            <pubDate>Thu, 11 Jul 2024 04:38:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Electron v31.2.0 发布，跨平台桌面应用开发工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;Electron 是一个使用 JavaScript、HTML 和 CSS 构建跨平台的桌面应用程序。它基于 Node.js 和 Chromium，被 Atom 编辑器和许多其他应用程序使用。Electron 兼容 Mac、Windows 和 Linux，可以构建出三个平台的应用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Electron v31.&lt;span style=&quot;color:#333333&quot;&gt;2&lt;/span&gt;.0&amp;nbsp;&lt;span style=&quot;color:#333333&quot;&gt;更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Features&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 Linux 上启用了 Windows Control Overlay API。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42682&quot; target=&quot;_blank&quot;&gt;#42682&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fixes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了调用&lt;code&gt;BrowserWindow.setTopBrowserView&lt;/code&gt;时的 focus 问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42734&quot; target=&quot;_blank&quot;&gt;#42734&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了 Chromium 可能因多个 webRequest 函数之一中的悬空未保留指针而崩溃的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42751&quot; target=&quot;_blank&quot;&gt;#42751&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了调用&lt;code&gt;session.setPermissionCheckHandler&lt;/code&gt;后，&lt;code&gt;navigator.mediaDevices.enumerateDevices&lt;/code&gt;在某些情况下可能返回错误结果的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42809&quot; target=&quot;_blank&quot;&gt;#42809&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;修复了在 Linux 上使用 showOpenDialogSync&amp;nbsp;&lt;/span&gt;保存对话框后控件无法正确返回的问题。&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42677&quot; target=&quot;_blank&quot;&gt;#&lt;/a&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42678&quot; target=&quot;_blank&quot;&gt;&amp;nbsp;42678&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复了使用 Linux 对话框时用户指定的默认路径在某些情况下不起作用的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42685&quot; target=&quot;_blank&quot;&gt;#42685&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Other Changes&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了在 Windows 上通过&lt;code&gt;input&lt;/code&gt;标签打开多个文件选择器可能导致崩溃的问题。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42825&quot; target=&quot;_blank&quot;&gt;#42825&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;将 Chromium 更新至 126.0.6478.127。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42646&quot; target=&quot;_blank&quot;&gt;#42646&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;已将 Node.js 更新至 v20.15.0。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Fpull%2F42614&quot; target=&quot;_blank&quot;&gt;#42614&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectron%2Felectron%2Freleases%2Ftag%2Fv31.2.0&quot; target=&quot;_blank&quot;&gt;https://github.com/electron/electron/releases/tag/v31.2.0&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301509/electron-31-2-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301509/electron-31-2-0-released</guid>
            <pubDate>Thu, 11 Jul 2024 03:00:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>MyBatis JPA Extra 3.3.0 发布，重大更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;MyBatis JPA Extra&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;MyBatis JPA Extra&lt;/strong&gt;对 MyBatis 扩展 JPA 功能 &amp;nbsp; &amp;nbsp; 1.Jakarta JPA 3 注释&lt;strong&gt;简化 CUID 操作&lt;/strong&gt;; &amp;nbsp; &amp;nbsp;&amp;nbsp; 2.增强&lt;strong&gt;SELECT 分页&lt;/strong&gt;查询; &amp;nbsp; &amp;nbsp;&amp;nbsp; 3.&lt;strong&gt;链式&lt;/strong&gt;Query 查询条件构造器；支持 Lambda 形式调用，方便编写各类查询条件&lt;/p&gt; 
&lt;p&gt;4.@Encrypted 注解轻松实现字段数据加密和解密;&lt;/p&gt; 
&lt;p&gt;5.字段数据自动填充功能;&lt;/p&gt; 
&lt;p&gt;6.数据库支持&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| &amp;nbsp;数据库 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp;支持 |&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| --- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | --- &amp;nbsp; |&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| &amp;nbsp;MySQL &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| ✅ &amp;nbsp; &amp;nbsp;|&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| &amp;nbsp;PostgreSQL &amp;nbsp; | ✅ &amp;nbsp; &amp;nbsp;|&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| &amp;nbsp;Oracle &amp;nbsp; &amp;nbsp; &amp;nbsp; | ✅ &amp;nbsp; &amp;nbsp;|&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| &amp;nbsp;SqlServer &amp;nbsp; &amp;nbsp;| ✅ &amp;nbsp; &amp;nbsp;|&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| &amp;nbsp;DB2 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| ✅ &amp;nbsp; &amp;nbsp;|&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;1、JPA 3 注释&lt;/h2&gt; 
&lt;h2&gt;1.1、注释&lt;/h2&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Entity&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Table&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Column&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @ColumnDefault&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Id&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @GeneratedValue&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Encrypted&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Transient&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @Temporal&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @PartitionKey&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;* @SoftDelete&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;1.2、主键策略&lt;/h2&gt; 
&lt;p&gt;支持 3 种主键策略&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| 序号 &amp;nbsp; &amp;nbsp;| 策略 &amp;nbsp; &amp;nbsp; &amp;nbsp;| &amp;nbsp; 支持 &amp;nbsp;|&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| --------| :----- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| :---- &amp;nbsp; |&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| 1 &amp;nbsp; &amp;nbsp; | AUTO &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| 主键自动填充策略 &amp;lt;br&amp;gt;snowflakeid (雪花 ID - 默认)&amp;lt;br&amp;gt;uuid (UUID) |&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| 2 &amp;nbsp; &amp;nbsp; | SEQUENCE &amp;nbsp; &amp;nbsp; &amp;nbsp;| 数据库序列生成，generator 值为数据库序列名 |&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;| 3 &amp;nbsp; &amp;nbsp; | IDENTITY &amp;nbsp; &amp;nbsp; &amp;nbsp;| 数据库表自增主键 &amp;nbsp;|&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;1.3、Java Bean 注释&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Entity
@Table(name = &quot;STUDENTS&quot;) &amp;nbsp;
public class Students extends JpaEntity implements Serializable{
&amp;nbsp; &amp;nbsp; @Id
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; @GeneratedValue
&amp;nbsp; &amp;nbsp; private String id;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; private String stdNo;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; @Encrypted
&amp;nbsp;&amp;nbsp; &amp;nbsp;private String password;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; private String stdName;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; @ColumnDefault(&quot;&#39;M&#39;&quot;)
&amp;nbsp; &amp;nbsp; private String stdGender;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; private int stdAge;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; private String stdMajor;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; private String stdClass;
&amp;nbsp; &amp;nbsp; @Column
&amp;nbsp; &amp;nbsp; private byte[] images;
&amp;nbsp; &amp;nbsp; @Column(insertable = false)
&amp;nbsp; &amp;nbsp; @GeneratedValue
&amp;nbsp; &amp;nbsp; @Temporal(TemporalType.TIMESTAMP)
&amp;nbsp; &amp;nbsp; private LocalDateTime modifyDate;
&amp;nbsp; &amp;nbsp; @SoftDelete
&amp;nbsp; &amp;nbsp; @Column(name =&quot;is_deleted&quot;)
&amp;nbsp; &amp;nbsp; private int isDeleted;
&amp;nbsp; &amp;nbsp; //getter setter
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2、基本操作&lt;/h2&gt; 
&lt;h2&gt;2.1、CURD&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&amp;nbsp; &amp;nbsp; //新增数据
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void insert() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Students student = new Students();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdNo(&quot;10024&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdGender(&quot;M&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdName(&quot;司马昭&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdAge(20);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdMajor(&quot;政治&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdClass(&quot;4&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service.insert(student);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //查询数据实体并更新
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void update() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Students student = service.get(&quot;317d5eda-927c-4871-a916-472a8062df23&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdMajor(&quot;政治&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service.update(student);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据实体查询并更新
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void merge() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Students student = new Students();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdMajor(&quot;政治&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdClass(&quot;4&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service.merge(student);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据 ID 查询
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void get() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Students student = service.get(&quot;317d5eda-927c-4871-a916-472a8062df23&quot;);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据实体查询
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void query() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Students student = new Students();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; student.setStdGender(&quot;M&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;Students&amp;gt; listStudents = service.query(student);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //查询所有记录
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void findAll() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;Students&amp;gt; listStudents = service.findAll();
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据 ID 删除
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void delete() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service.delete(&quot;921d3377-937a-4578-b1e2-92fb23b5e512&quot;);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据 ID 集合批量删除
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void batchDelete() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;String&amp;gt; idList = new ArrayList&amp;lt;String&amp;gt;();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; idList.add(&quot;8584804d-b5ac-45d2-9f91-4dd8e7a090a7&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; idList.add(&quot;ab7422e9-a91a-4840-9e59-9d911257c918&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service.deleteBatch(idList);
&amp;nbsp; &amp;nbsp; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.2、逻辑删除&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&amp;nbsp; &amp;nbsp; //根据 IDS 批量逻辑删除
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void logicBatchDelete() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;String&amp;gt; idList=new ArrayList&amp;lt;String&amp;gt;();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; idList.add(&quot;8584804d-b5ac-45d2-9f91-4dd8e7a090a7&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; idList.add(&quot;ab7422e9-a91a-4840-9e59-9d911257c918&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; //...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; service.logicDelete(idList);
&amp;nbsp; &amp;nbsp; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.3、Find 查询和 Qruey 构造器&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&amp;nbsp; &amp;nbsp; //SpringJDBC 的查询方式 where StdNo = &#39;10024&#39; or StdNo = &#39;10004&#39;
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void find() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;Students&amp;gt; listStudents = service.find(&quot; StdNo = ? or StdNo = ? &amp;nbsp;&quot;,
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Object[]{&quot;10024&quot;,&quot;10004&quot;},
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new int[]{Types.VARCHAR,Types.INTEGER}
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; );
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据链式条件构造器查询
&amp;nbsp; &amp;nbsp; //WHERE (stdMajor = &#39;政治&#39; and STDAGE &amp;gt; 30 and stdMajor in ( &#39;政治&#39; , &#39;化学&#39; ) &amp;nbsp;or &amp;nbsp;( stdname = &#39;周瑜&#39; or stdname = &#39;吕蒙&#39; ) )
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void queryByCondition() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;Students&amp;gt; listStudents = service.query(
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new Query().eq(&quot;stdMajor&quot;, &quot;政治&quot;).and().gt(&quot;STDAGE&quot;, 30).and().in(&quot;stdMajor&quot;, new Object[]{&quot;政治&quot;,&quot;化学&quot;})
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .or(new Query().eq(&quot;stdname&quot;, &quot;周瑜&quot;).or().eq(&quot;stdname&quot;, &quot;吕蒙&quot;)));
&amp;nbsp; &amp;nbsp; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.4、单表分页查询&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&amp;nbsp; &amp;nbsp; //根据实体分页查询
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void fetch() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;JpaPage page = new JpaPage(1);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Students student = new Students();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;student.setStdGender(&quot;M&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;JpaPageResults&amp;lt;Students&amp;gt; &amp;nbsp;results = service.fetch(page,student);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据 Query 条件分页查询 where stdMajor = &#39;政治&#39; and STDAGE &amp;gt; 30
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void fetchByCondition() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;JpaPage page = new JpaPage(1,20);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Query condition = new Query().eq(&quot;stdMajor&quot;, &quot;政治&quot;).and().gt(&quot;STDAGE&quot;, 30);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;JpaPageResults&amp;lt;Students&amp;gt; &amp;nbsp;results = service.fetch(page,condition);
&amp;nbsp; &amp;nbsp; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.5、根据 mapper 的 xml 分页查询&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&amp;nbsp; &amp;nbsp; //根据 Mapper xml 配置 fetchPageResults 分页查询
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void fetchPageResults() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Students student=new Students();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;student.setStdGender(&quot;M&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;student.setPageNumber(1);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;JpaPageResults&amp;lt;Students&amp;gt; &amp;nbsp;results = service.fetchPageResults(student);
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; //根据 Mapper xml id 分页查询,fetchPageResults1 在 mapper 的 xml 中配置
&amp;nbsp; &amp;nbsp; @Test
&amp;nbsp; &amp;nbsp; void fetchPageResultsByMapperId() throws Exception{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Students student=new Students();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;student.setStdGender(&quot;M&quot;);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;student.setPageNumber(1);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;JpaPageResults&amp;lt;Students&amp;gt; results = service.fetchPageResults(&quot;fetchPageResults1&quot;,student);
&amp;nbsp; &amp;nbsp; }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.6、 Lambda 查询&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
&amp;nbsp; &amp;nbsp; //根据 Lambda 链式条件构造器查询
&amp;nbsp; &amp;nbsp; //WHERE (stdMajor = &#39;政治&#39; and STDAGE &amp;gt; 30 and stdMajor in ( &#39;政治&#39; , &#39;化学&#39; ) &amp;nbsp;or &amp;nbsp;( stdname = &#39;周瑜&#39; or stdname = &#39;吕蒙&#39; ) )
&amp;nbsp; &amp;nbsp; service.query(
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;new LambdaQuery&amp;lt;Students&amp;gt;().eq(Students::getStdMajor, &quot;政治&quot;)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.and().gt(Students::getStdAge, Integer.valueOf(30))
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.and().in(Students::getStdMajor, new Object[]{&quot;政治&quot;,&quot;化学&quot;})
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .or(
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; new LambdaQuery&amp;lt;Students&amp;gt;().eq(Students::getStdName, &quot;周瑜&quot;)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .or().eq(Students::getStdName, &quot;吕蒙&quot;)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; )
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; );

&amp;nbsp; &amp;nbsp; //根据 Lambda 链式条件构造器分页查询
&amp;nbsp; &amp;nbsp; //where stdMajor = &#39;政治&#39; and stdAge &amp;gt; 30
&amp;nbsp;&amp;nbsp; &amp;nbsp;JpaPage page = new JpaPage();
&amp;nbsp;&amp;nbsp; &amp;nbsp;page.setPageSize(20);
&amp;nbsp; &amp;nbsp; page.setPageable(true);
&amp;nbsp;&amp;nbsp; &amp;nbsp;LambdaQuery&amp;lt;Students&amp;gt; lambdaQuery =new LambdaQuery&amp;lt;&amp;gt;();
&amp;nbsp;&amp;nbsp; &amp;nbsp;lambdaQuery.eq(Students::getStdMajor, &quot;政治&quot;).and().gt(Students::getStdAge, Integer.valueOf(30));
&amp;nbsp;&amp;nbsp; &amp;nbsp;JpaPageResults&amp;lt;Students&amp;gt; &amp;nbsp;results = service.fetch(page,lambdaQuery);

&amp;nbsp; &amp;nbsp; ...

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.7、FindBy 查询&lt;/h2&gt; 
&lt;p&gt;实现 spring data jpa 的 findBy 功能&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&amp;nbsp; &amp;nbsp; //Mapper 接口定义
&amp;nbsp; &amp;nbsp; //where x.stdNo = ?1
&amp;nbsp; &amp;nbsp; @Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNo(String stdNo);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdNo = ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNoIs(String stdNo);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdNo = ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNoEquals(String stdNo);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdAge between ?1 and ?2
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdAgeBetween(int ageStart,int ageEnd);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdAge &amp;lt; ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdAgeLessThan(int ageLessThan);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdAge &amp;lt;= ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdAgeLessThanEqual(int ageLessThanEqual);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdAge &amp;gt; ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdAgeAfter(int ageAfter);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdAge &amp;lt; ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdAgeBefore(int ageBefore);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.images is null
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByImagesNull();
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.images is null
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByImagesIsNull();
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.images is not null
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByImagesIsNotNull();
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.images is not null
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByImagesNotNull();
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdName like ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNameLike(String stdName);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdName not like ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNameNotLike(String stdName);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdName like ?1 (parameter bound with appended %)
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNameStartingWith(String stdName);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdName like ?1 (parameter bound with prepended %)
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNameEndingWith(String stdName);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdName like ?1 (parameter bound wrapped in %)
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNameContaining(String stdName);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdGender = ?1 order by x.stdAge desc
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdGenderOrderByStdAge(String stdGender);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdGender = ?1 order by x.stdAge desc
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdGenderIsOrderByStdAge(String stdGender);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdMajors in ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdMajorIn(String... stdMajors) ;
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdMajors not in ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdMajorNotIn(List&amp;lt;String&amp;gt; stdMajors);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.deleted = true
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByDeletedTrue();
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.deleted = false
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByDeletedFalse();
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where UPPER(x.stdGender) = UPPER(?1)
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdGenderIgnoreCase(String stdGender);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.stdNo &amp;lt;&amp;gt; ?1
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdNoNot(String stdNo);
&amp;nbsp;&amp;nbsp; &amp;nbsp;//where x.lastname = ?1 and x.firstname = ?2
&amp;nbsp;&amp;nbsp; &amp;nbsp;@Select({})
&amp;nbsp;&amp;nbsp; &amp;nbsp;public List&amp;lt;Students&amp;gt; findByStdMajorAndStdClass(String stdMajor,String stdClass);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2.8、默认数据自动填充&lt;/h2&gt; 
&lt;p&gt;继承 FieldAutoFillHandler，实现 insertFill 和 updateFill 函数，可以完成租户字段，创建人、创建时间、修改人、修改时间等默认字段的填充&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
import org.apache.ibatis.reflection.MetaObject;
import org.dromara.mybatis.jpa.handler.FieldAutoFillHandler;

public class MxkFieldAutoFillHandler &amp;nbsp;extends FieldAutoFillHandler{

&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override
&amp;nbsp;&amp;nbsp; &amp;nbsp;public void insertFill(MetaObject metaObject) {
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.setFieldValue(metaObject , &quot;stdNo&quot;, &quot;AutoFill_Insert&quot;);
&amp;nbsp;&amp;nbsp; &amp;nbsp;}

&amp;nbsp;&amp;nbsp; &amp;nbsp;@Override
&amp;nbsp;&amp;nbsp; &amp;nbsp;public void updateFill(MetaObject metaObject) {
&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;this.setFieldValue(metaObject , &quot;stdNo&quot;, &quot;AutoFill_Update&quot;);
&amp;nbsp;&amp;nbsp; &amp;nbsp;}
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3、版本更新&lt;/h2&gt; 
&lt;p&gt;1、新增注解 &amp;nbsp; &amp;nbsp; &amp;nbsp;@SoftDelete(新逻辑删除) &amp;nbsp; &amp;nbsp; &amp;nbsp;@Encrypted&lt;/p&gt; 
&lt;p&gt;2、@Encrypted 注解轻松实现字段数据加密和解密;&lt;/p&gt; 
&lt;p&gt;3、字段数据自动填充功能;继承 FieldAutoFillHandler，实现 insertFill 和 updateFill 函数，可以完成租户字段，创建人、创建时间、修改人、修改时间等默认字段的填充&lt;/p&gt; 
&lt;p&gt;4、支持 Lambda 形式调用，方便编写各类查询条件&lt;/p&gt; 
&lt;p&gt;5、实现 spring data jpa 的 findBy 功能&lt;/p&gt; 
&lt;p&gt;6、代码调整和优化&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301502/mybatis-jpa-extra-3-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301502/mybatis-jpa-extra-3-3-0-released</guid>
            <pubDate>Thu, 11 Jul 2024 02:50:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>deepin V23 成功适配奕斯伟计算 EIC7700X，RISC-V 桌面生态发展再提速</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;内容来源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fen%2Fdeepin-v23-adapted-to-eic7700x%2F&quot; target=&quot;_blank&quot;&gt;deepin（深度）社区&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;近期，deepin（深度）社区宣布成功适配奕斯伟计算 EIC7700X，实现了 RISC-V 版本 deepin V23 的稳定运行。这一举措再次印证了 deepin 对 RISC-V 生态的承诺和实力，也为开发者和用户打开了通往全新桌面体验的大门。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;奕斯伟计算 EIC7700X&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;951&quot; src=&quot;https://oscimg.oschina.net/oscnet/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240711101140.jpg&quot; width=&quot;1268&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;奕斯伟计算 EIC7700X 是一款功能强大的 RISC-V 智能计算 SoC，搭载了 64 位乱序执行 RISC-V 处理器和自研高能效 NPU，最高算力 19.95TOPS，双 Die 版本可达 39.9TOPS，支持全栈浮点计算，全面加速生成式大模型。支持 H.264、H.265 视频编解码标准，具备强大的音视频处理能力和丰富的外设接口，为 AI PC、工业视觉等行业提供高效能智能计算解决方案。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;deepin V23 运行于 EIC7700X&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;此次适配奕斯伟计算 EIC7700X 的 deepin 镜像基于最新的 deepin V23 RC2 主线打造，采用了 ESWIN 开源的、针对 EIC7700X 优化的 6.6 内核，为用户提供最佳的性能和体验。经过 deepin-ports SIG 团队的全面测试，deepin V23 在 EIC7700X 上运行稳定，网络连接、USB 设备访问、HDMI 视频输出等功能均表现出色。DDE 桌面环境和预装的应用程序也运行稳定，并可跟随主线版本同步更新，确保用户始终享有最新功能和安全补丁，为用户带来与其它架构 (amd64/arm64/loong64) 一致的使用体验。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;◉ 演示截图：一睹为快，体验 deepin V23 的魅力&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;719&quot; src=&quot;https://oscimg.oschina.net/oscnet/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240711101204.jpg&quot; width=&quot;1268&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;deepin 桌面环境&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;713&quot; src=&quot;https://oscimg.oschina.net/oscnet/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240711101209.jpg&quot; width=&quot;1268&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;Firefox 浏览器，deepin 启动器&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;713&quot; src=&quot;https://oscimg.oschina.net/oscnet/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240711101213.jpg&quot; width=&quot;1268&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;deepin 内置小游戏连连看，mpv 视频播放器，LibreOffice，系统监视器&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;◉ &lt;/strong&gt;&lt;strong&gt;预装软件列表：开箱即用，常用软件一应俱全&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;为了方便用户快速上手，体验 deepin V23 的完整功能，镜像中预装了以下软件：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;内核与驱动：来自奕斯伟计算、由 deepin 构建的 6.6.18 内核，集成了 EIC7700X 所需的常用硬件驱动，保证系统开箱即用。&lt;/li&gt; 
 &lt;li&gt;系统基础：包含 sudo、networkmanager 等基础工具，方便用户进行系统管理和网络配置。&lt;/li&gt; 
 &lt;li&gt;桌面体验：完整的 deepin 桌面环境 (DDE)，为用户提供舒适的操作体验。DDE 是 deepin 自主研发的桌面环境，以其美观、易用和高效著称，深受广大 Linux 用户的喜爱。&lt;/li&gt; 
 &lt;li&gt;实用工具：预装了 fastfetch、vim、bash-completion 等常用工具，方便开发者和高级用户使用。&lt;/li&gt; 
 &lt;li&gt;办公软件：预装 LibreOffice，提供开箱即用的办公环境。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;注：为减小镜像体积，方便用户下载和烧录，镜像中仅包含了必要的应用程序。用户可使用预装的应用商店或 apt 命令在线安装其他应用。deepin 拥有丰富的软件仓库，用户可以轻松找到自己需要的软件。&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;&lt;strong&gt;deepin-ports SIG&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;deepin（深度）社区已将基于 EIC7700X 的设备正式列入 deepin V23 RISC-V 支持设备列表，并将持续为其提供软件更新和性能优化，确保用户获得最佳体验。deepin-ports SIG 一直致力于将 deepin 操作系统移植到更多的硬件平台和架构上，并提供持续维护和更新，为用户打造更丰富的 deepin 生态体验。&lt;/p&gt; 
&lt;p&gt;在适配过程中，deepin-ports 还为 EIC7700X 等 RISC-V 设备构建了额外的软件仓库，用于提供部分定制功能，例如 deepin 定制内核等，进一步提升用户体验。&lt;/p&gt; 
&lt;p&gt;近期，deepin 成功适配了 SpacemiT MUSE™ Box 和 MilkV Mars，后续将继续坚定地支持 RISC-V 生态的发展，并持续扩展对更多 RISC-V 设备的支持，加速推进 RISC-V 架构桌面生态的完善。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;版本发布计划&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;由于 RISC-V 版本与 amd64/arm64 等架构版本在使用体验和稳定度上还存在差距，deepin V23 将按照以下表格的方式发布 RISC-V 镜像。&lt;/p&gt; 
&lt;table cellspacing=&quot;0&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;&lt;strong&gt;版本类型&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;&lt;strong&gt;适用对象&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;Testing&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;用于软硬件适配和初步测试的版本，功能尚未完善，可能存在已知问题。&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;主要面向开发者和对 deepin 系统感兴趣的早期用户。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;Preview&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;ports 架构 (riscv64/loong64) 适配的尝鲜版本，已经完成了主要功能的开发和测试，具有一定的稳定性。&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;面向更广泛的开发者和希望抢先体验新版本的用户。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;Stable&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;正式架构 (amd64/arm64) 适配的稳定版本，经过了全面的测试，具有高度的稳定性和可靠性。&lt;/td&gt; 
   &lt;td style=&quot;vertical-align:center&quot;&gt;适用于日常使用的用户。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;此次发布的版本为预览 (Preview) 版本，后续的预览（Preview）镜像将基于正式版本和对应设备支持状况进行更新，并不定期发布采用最新不稳定更新、用作测试（Testing）镜像。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;附录：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;（1）deepin 历史版本镜像（含 deepin V15）：&lt;/strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;https://distrowatch.com/index.php?distribution=deepin&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;（2）deepin-EIC7700X 预览镜像下载：&lt;/strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;https://www.deepin.org/zh/download/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;（3）deepin 多架构适配机型清单：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.deepin.org%2Fzh%2F02_%25E7%25A1%25AC%25E4%25BB%25B6wiki%2F01_%25E8%25AE%25BE%25E5%25A4%2587%25E9%2580%2582%25E9%2585%258D%25E5%2588%2597%25E8%25A1%25A8%2Fdeepin%25E5%25A4%259A%25E6%259E%25B6%25E6%259E%2584%25E9%2580%2582%25E9%2585%258D%25E6%259C%25BA%25E5%259E%258B%25E6%25B8%2585%25E5%258D%2595&quot; target=&quot;_blank&quot;&gt;https://wiki.deepin.org/zh/02_%E7%A1%AC%E4%BB%B6wiki/01_%E8%AE%BE%E5%A4%87%E9%80%82%E9%85%8D%E5%88%97%E8%A1%A8/deepin%E5%A4%9A%E6%9E%B6%E6%9E%84%E9%80%82%E9%85%8D%E6%9C%BA%E5%9E%8B%E6%B8%85%E5%8D%95&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301496</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301496</guid>
            <pubDate>Thu, 11 Jul 2024 02:43:38 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>禅道 20.2.stable 发布，新增业务需求概念、列表拖拽调整列宽和表头右键设置</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;大家好！&lt;strong&gt;禅道 20.2.stable 发布啦！&lt;/strong&gt;在此次发布中，&lt;strong&gt;我们新增了业务需求功能&lt;/strong&gt;，支持业务需求、用户需求、研发需求三层需求逻辑的逐步细分。您可以从高层次的业务需求出发，逐步分解为具体的用户需求和研发需求，最终分解至任务，确保每个需求都能得到精确的定义和管理。&lt;strong&gt;需求概念支持自定义配置，&lt;/strong&gt;例如您可根据公司需要修改为 Epic、Feature、Story。&lt;strong&gt;项目中支持关联业务需求、用户需求、研发需求，&lt;/strong&gt;支持在统一的列表中查看，并提供树状和平铺两种视图，方便您从上至下查看到需求的追溯关系。同时，我们还&lt;strong&gt;优化了需求阶段的计算逻辑&lt;/strong&gt;，新增了设计中、设计完成、验收失败等逻辑，帮助您更好的跟踪需求的研发流程。另外，我们还&lt;strong&gt;新增列表表头右键设置&lt;/strong&gt;功能，支持字段的隐藏和分组。列表还支持&lt;strong&gt;拖拽排序和拖拽改变列宽&lt;/strong&gt;的功能，可自由调整字段位置和宽度，提升数据查看和管理体验。同时，禅道&lt;strong&gt;集成 DuckDB 数据库管理系统&lt;/strong&gt;，利用缓存数据显著提升图表、透视表查询速度。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;我们相信新版本将为用户带来更好的使用体验和更高的工作效率。感谢大家一直以来的支持和反馈，我们将继续努力提供更优秀的产品和服务！&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;262&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101102_WKOH_4252687.png&quot; width=&quot;1006&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_6c20a12b609a1776b467b258df29d811&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_3e16d6327204f2fdc5ff1b637e18a858&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;新增功能点&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;产品：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增业务需求层级&lt;/li&gt; 
 &lt;li&gt;支持业务需求-用户需求-研发需求的三层需求逻辑，逐步向下细分&lt;/li&gt; 
 &lt;li&gt;仅最后一级的研发需求支持拆解任务、关联 Bug 和用例&lt;/li&gt; 
 &lt;li&gt;需求列表支持树状和平铺两种视图&lt;/li&gt; 
 &lt;li&gt;业务需求、用户需求、研发需求列表支持展示子项完成情况&lt;/li&gt; 
 &lt;li&gt;计划允许关联业务需求、用户需求、所有研发需求&lt;/li&gt; 
 &lt;li&gt;需求阶段计算逻辑优化&lt;/li&gt; 
 &lt;li&gt;关联需求功能优化&lt;/li&gt; 
 &lt;li&gt;发布中增加发布动作&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;项目：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目支持关联业务需求、用户需求、研发需求&lt;/li&gt; 
 &lt;li&gt;创建和编辑项目时，增加开关限制项目能关联的需求概念&lt;/li&gt; 
 &lt;li&gt;项目中业务需求、用户需求、研发需求列表合并为一个需求列表&lt;/li&gt; 
 &lt;li&gt;瀑布项目中，需求类型的阶段增加需求菜单&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;瀑布项目中，&lt;/span&gt;&lt;span&gt;综合类、需求类、设计类的阶段支持管理业务需求、用户需求、研发需求&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;除瀑布项目三类阶段外，其余迭代、阶段、看板仅关联研发需求&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;后台：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;功能开关增加业务需求&lt;/li&gt; 
 &lt;li&gt;后台通知设置增加用户需求和业务需求&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;业务需求支持独立设置状态、关闭原因、来源、优先级、类型、必填字段、评审设置&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;用户需求支持独立设置状态、关闭原因、来源、优先级、类型、必填字段、评审设置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;体验：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;列表支持&lt;span&gt;拖拽排序&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;列表支持拖拽改变列宽&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;列表支持表头右键设置&lt;span&gt;字段的隐藏&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;列表支持表头右键设置字段的&lt;/span&gt;分组&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;strong&gt;禅道本次发布数据如下：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;207&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101136_Mh6z_4252687.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;本期优化的全部需求和 Bug：&lt;span&gt;请点击查看&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼新增业务需求层级。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_22ee1e64fd7e8f17eadc855b8ca4352c&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;span style=&quot;color:#333333&quot;&gt;▼支持业务需求-用户需求-研发需求的三层需求逻辑，逐步向下细分。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;337&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101204_ng34_4252687.png&quot; width=&quot;1000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼仅最后一级的研发需求支持拆解任务、关联 Bug 和用例。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_41cdff96e2f305ba4999ca8f008191aa&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼需求列表支持树状和平铺两种视图。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/file.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼业务需求、用户需求、研发需求列表支持展示子项完成情况。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;239&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101229_m4s9_4252687.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼计划允许关联业务需求、用户需求、所有研发需求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;400&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101250_yP0b_4252687.png&quot; width=&quot;1006&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼需求阶段计算逻辑优化，叶子层级的研发需求增加设计中、设计完毕、验收失败。业务需求、用户需求及父研发需求根据子级需求进行计算。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_9e71fbfd17cf1186788abeae3a96f40c&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼关联需求功能优化，原系统内用户需求和研发需求间升级为父子关系，另增加需求关联关系功能，支持任意关联系统内需求，帮助您建立相关性。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;508&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101322_afiW_4252687.png&quot; width=&quot;1018&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼项目支持关联业务需求、用户需求、研发需求，合并为一个需求列表。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;357&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101342_Bh7r_4252687.png&quot; width=&quot;1014&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼创建和编辑项目时，增加开关限制项目能关联的需求概念。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;420&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101357_cUMF_4252687.png&quot; width=&quot;931&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼瀑布项目中，需求类型的阶段增加需求菜单。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_f1fe85bb0db5e8562ee4989c01d90003&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼瀑布项目中，综合类、需求类、设计类的阶段支持管理业务需求、用户需求、研发需求，其余迭代、阶段、看板仅关联研发需求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;408&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101422_ydSx_4252687.png&quot; width=&quot;1012&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼功能开关增加业务需求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_2e6a247c586ff717241da2f8e1450b22&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼后台通知设置增加用户需求和业务需求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_607337574d70d8c4ea7f85a67dcd2334&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼业务需求、用户需求支持独立设置状态、关闭原因、来源、优先级、类型、必填字段、评审设置。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_c29d53c6e576850739724373eef4a8e7&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼发布中增加发布动作，您可创建一个未开始的发布，待发布完成后，点击发布动作，更新发布状态为「已发布」。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;183&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101456_HPUV_4252687.png&quot; width=&quot;1014&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼列表支持拖拽排序和拖拽改变列宽的功能，可自由调整字段位置和宽度。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://www.zentao.net/file.php?f=easycorp/202407/f_49c0cecdf7d46f74ac55ffeda6672da9&amp;amp;t=png&amp;amp;o=&amp;amp;s=&amp;amp;v=1720089736&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;▼列表表头支持右键设置功能，可以对列表字段进行灵活分组和列表字段的隐藏，提升数据查看和管理体验。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;238&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0711/101520_Eu0i_4252687.png&quot; width=&quot;1009&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/file.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;下载链接&lt;/strong&gt;&lt;/h2&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;-webkit-text-stroke-width:0px; background-color:transparent; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; font-family:&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Tahoma,Arial,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Source Han Sans CN&amp;quot;,&amp;quot;Source Han Sans&amp;quot;,&amp;quot;Source Han Serif&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;WenQuanYi Micro Hei&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,sans-serif; font-size:inherit; letter-spacing:normal; margin-bottom:20px; max-width:100%; orphans:2; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; widows:2; width:1725.6px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;Windows 一键安装包&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-zbox.win64.exe&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;64 位&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;Linux 一键安装包&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-zbox_amd64.tar.gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;amd64 位&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-zbox_arm64.tar.gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;arm64 位&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:middle&quot;&gt;&lt;span style=&quot;color:#e53333&quot;&gt;注：Linux 一键安装包必须直接解压到 /opt 目录下。&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;源码包下载（tar.xz）： 可以通过 tar 命令或者解压工具解压&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.0.tar.xz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.1.tar.xz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.2_7.4.tar.xz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php8.1.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;源码包下载（zip）&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.0.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.1.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.2_7.4.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php8.1.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;DEB 包下载：可以通过 dpkg 包管理器在 Ubuntu 和 Debian 系统下安装&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS_20.2.0-php7.0-1_all.deb&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS_20.2.0-php7.1-1_all.deb&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS_20.2.0-php7.2_7.4-1_all.deb&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS_20.2.0-php8.1-1_all.deb&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;RPM 包下载：可以通过 rpm 包管理器在 Centos 系统下安装&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.0-1.noarch.rpm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.1-1.noarch.rpm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php7.2_7.4-1.noarch.rpm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.2%2FZenTaoPMS-20.2.0-php8.1-1.noarch.rpm&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:middle&quot;&gt;&lt;span&gt;最新版禅道客户端下载链接&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.win64.setup.exe&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;安装包&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.win64.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;压缩包&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.linux64.deb&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;安装包&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.linux64.tar.gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;压缩包 (.tar.gz)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.linux64.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;压缩包 (.zip)&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;macOS&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top; width:360px&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.mac.dmg&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;安装包 (Intel)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.mac.m1.dmg&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;安装包 (Apple Silicon)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.2%2Fzentaoclient.mac64.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;压缩包&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;最新版禅道客户端服务器下载链接&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fxuanxuan%2F8.2%2Fxxd.8.2.win64.zip&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fxuanxuan%2F8.2%2Fxxd.8.2.linux.x64.tar.gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fxuanxuan%2F8.2%2Fxxd.8.2.mac.tar.gz&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;macOS&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;span&gt;禅道 Gogs 安装包下载链接&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:top&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_darwin_amd64&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;macOS amd64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_linux_amd64&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Linux amd64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_windows_amd64.exe&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Windows amd64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_darwin_arm64&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;macOS arm64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_linux_arm64&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Linux arm64&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Docker 镜像:&lt;span style=&quot;color:#337fe5&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2Fr%2Feasysoft%2Fzentao%2Ftags&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#337fe5&quot;&gt;点击这里&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;h2&gt;&lt;strong&gt;帮助手册&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;安装文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fbook%2Fzentaopms%2F455.html&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#337fe5&quot;&gt;https://www.zentao.net/book/zentaopms/455.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;升级文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fbook%2Fzentaopms%2F460.html&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#337fe5&quot;&gt;https://www.zentao.net/book/zentaopms/460.html&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;持续优化，定期更新，禅道一直在路上。&lt;/strong&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301473/zentaopms-20-2-stable</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301473/zentaopms-20-2-stable</guid>
            <pubDate>Thu, 11 Jul 2024 01:16:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>简传 1.2.1 版本发布，简捷使用，传送方便</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;div&gt; 
 &lt;p&gt;日前，简传更新到了 1.2.1 版本&lt;/p&gt; 
 &lt;p&gt;简传是一款不需要在接收端安装就可在局域网环境内共享文本及文件的小工具，仅需一台主机电脑启动，需要获取共享的电脑或手机无需安装只需使用浏览器访问即可，支持 windows、linux、mac，支持国产操作系统 arm、loongarch 多平台&lt;/p&gt; 
 &lt;p&gt;更新内容如下：&lt;/p&gt; 
 &lt;h2&gt;1.2.1（2024-07-7）&lt;/h2&gt; 
 &lt;p&gt;1、增加文本消息快捷复制，直接右键文本消息即会自动选中&lt;/p&gt; 
 &lt;p&gt;2、调整图片消息中直接复制图片功能为需在浏览器端点击图片预览后再右键复制&lt;/p&gt; 
 &lt;h2&gt;1.2.0（2024-07-4）&lt;/h2&gt; 
 &lt;p&gt;1、消息增加图片预览展示及右键复制&lt;/p&gt; 
 &lt;p&gt;2、优化下载时的隐藏问题&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img alt=&quot;&quot; height=&quot;917&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-146829b49137b7fbde44262fc1d9c719e73.png&quot; width=&quot;1915&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301385/easy-send-1-2-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301385/easy-send-1-2-1-released</guid>
            <pubDate>Wed, 10 Jul 2024 09:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>crabc-spring-starter 1.1.0 发布，CRUD 接口开发脚手架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#40485b&quot;&gt;&lt;a href=&quot;https://gitee.com/linebyte/crabc&quot;&gt;crabc-api&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;是一款接口开发集成工具，深度整合 SpringBoot 和 Mybatis 特性实现动态数据源、动态 SQL 和标签，通过可视化编写 SQL 快速发布成接口，为前端页面或第三方平台提供 API 调用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;586&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-03747e3dcfa71cc0b531dd56954cdf472dc.png&quot; width=&quot;1912&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;功能特性&lt;/h1&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;操作简单&lt;/strong&gt;：可视化编写、动态 SQL、在线配置和预览、一键发布、上下线管理等&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;功能丰富&lt;/strong&gt;：支持路由转发，条件标签，多数据源、数据脱敏、版本控制、权限认证、限流熔断、监控报表等&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;扩展灵活&lt;/strong&gt;：&lt;span style=&quot;color:#000000&quot;&gt;采用动态加载机制可自定义扩展数据源、脚本查询和数据转换等&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;maven 集成&lt;/h1&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在业务项目引入&lt;strong&gt;crabc&lt;/strong&gt;的 maven 依赖包即可页面直接快速开发日常通用的 API 接口，大大缩减了 CRUD 接口的开发时间，提升企业系统开发效率。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;cn.crabc&lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;/&lt;span&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;crabc-spring-boot-starter&lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;/&lt;span&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;3.0.1&lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;/&lt;span&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style=&quot;color:#114ba6&quot;&gt;&amp;lt;/&lt;span&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/linebyte/crabc&quot;&gt;开源地址&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301371/crabc-spring-starter-1-1-0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301371/crabc-spring-starter-1-1-0</guid>
            <pubDate>Wed, 10 Jul 2024 09:03:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>云原生 Kafka AutoMQ 1.1.1-rc0 正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;h2&gt;AutoMQ 介绍&lt;/h2&gt; 
 &lt;div&gt;
  Apache Kafka 自诞生之日起，就以其卓越的设计和强大的功能，很快成为了流系统领域的事实标准。它不仅定义了现代流系统的架构，更以其独特的分布式日志抽象，为实时数据流的处理和分析提供了前所未有的能力。Kafka 的成功，在于它能够满足各种规模企业对于高吞吐量、低延迟数据处理的需求，经过多年的发展铸就了极其丰富的 Kafka 生态并被广泛应用于各种生产场景。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  然而，随着云计算和云原生技术的飞速发展，Kafka 面临的挑战也日益严峻。传统的存储架构已难以适应云环境下用户对更优成本、弹性的诉求，这引发了大家对 Kafka 存储模型的重新思考。分层存储（Tiered Storage）一度被视为可能的解决方案，它试图通过将数据分层存储在不同的介质上，来降低成本并延长数据的生命周期。但实践表明，这种方法并没有彻底解决 Kafka 的痛点，反而增加了系统的复杂性和运维难度。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq&quot; target=&quot;_blank&quot;&gt;AutoMQ&lt;/a&gt; 是一个源代码开放的 Kafka 分叉项目，通过存算分离的方式将 Kafka 的存储层替换成了基于 S3 和 EBS 的共享存储架构，并且复用了 Kafka 100% 的计算层代码，保证了对 Kafka API 协议和生态的完全兼容。如下图所示，通过这种创新的共享存储架构，不仅获得了共享存储带来的技术和成本优势，彻底解决了原有 Kafka 在成本、弹性等方面的弊病，同时不会牺牲延迟。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h2&gt;与其他流系统的对比&lt;/h2&gt; 
 &lt;div&gt; 
  &lt;table cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border:none; table-layout:fixed; width:500px&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       特性
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       AutoMQ
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Apache Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Confluent
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Apache Pulsar
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Redpanda
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Warpstream
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Apache Kafka 兼容性[1]
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       原生 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       原生 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       原生 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       非 Kafka
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Kafka 协议兼容
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Kafka 协议兼容
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是否开源
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       无状态 Broker
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       P99 延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       单位数毫秒延迟
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.warpstream.com%2Fblog%2Fwarpstream-benchmarks-and-tco&quot; target=&quot;_blank&quot;&gt;&amp;gt; 1200 毫秒&lt;/a&gt;
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       持续自平衡
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       扩展/缩减效率
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时/天计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计 (缩减);
      &lt;/div&gt; 
      &lt;div&gt;
       以秒计 (扩展)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; 
      &lt;div&gt;
       以秒计 (仅限企业版)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       Spot 实例支持
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       分区重新分配
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时/天计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以小时计
      &lt;/div&gt; 
      &lt;div&gt;
       以秒计 (仅限企业版)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       以秒计
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       组件
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       ZooKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       (非 KRaft)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       ZooKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       (非 KRaft)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       ZooKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       BookKeeper
      &lt;/div&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; 
      &lt;div&gt;
       (可选)
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       代理元数据服务器
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       持久性
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 S3/EBS 保证[2]
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 ISR 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 ISR 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 BookKeeper 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 Raft 保证
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       由 S3 保证
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       跨可用区网络费用
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       是
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
       否
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
   [1] Apache Kafka 兼容性的定义来自这篇 
   &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kai-waehner.de%2Fblog%2F2021%2F05%2F09%2Fkafka-api-de-facto-standard-event-streaming-like-amazon-s3-object-storage%2F&quot; target=&quot;_blank&quot;&gt;博客&lt;/a&gt;。
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
   [2] EBS 持久性：在 Azure、GCP 和阿里云上，区域 EBS 副本跨多个可用区。在 AWS 上，通过在不同可用区的 EBS 和 S3 Express One Zone 进行双写来确保持久性。
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;h2&gt;创新的存储架构&lt;/h2&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://oscimg.oschina.net/oscnet/.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;h2&gt;更新内容&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(auto_balancer)：修复版本 V0 的指标兼容性
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh&quot; target=&quot;_blank&quot;&gt;，作者@SCNieh&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1431&quot; target=&quot;_blank&quot;&gt;1431&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(config)：修复自动平衡器监听器名称的默认配置
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh&quot; target=&quot;_blank&quot;&gt;，作者@SCNieh&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1436&quot; target=&quot;_blank&quot;&gt;1436&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(metadata)：修复标记销毁对象队列不会被后续清理的问题
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx&quot; target=&quot;_blank&quot;&gt;，作者@superhx&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1473&quot; target=&quot;_blank&quot;&gt;1473&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    feat(metadata): 清理对象等待最后一轮清理记录重播…
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx&quot; target=&quot;_blank&quot;&gt;，作者@superhx&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1475&quot; target=&quot;_blank&quot;&gt;1475&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(auto_balancer）：修复代理状态
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh&quot; target=&quot;_blank&quot;&gt;，作者@SCNieh&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1479&quot; target=&quot;_blank&quot;&gt;1479&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(auto_balancer)：当没有分区时，从集群模型中删除分区……
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh&quot; target=&quot;_blank&quot;&gt;，作者@SCNieh&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1483&quot; target=&quot;_blank&quot;&gt;1483&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(auto_balancer)：修复从集群中删除分区时出现 npe 的问题
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSCNieh&quot; target=&quot;_blank&quot;&gt;，作者@SCNieh&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1485&quot; target=&quot;_blank&quot;&gt;1485&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(api): 修复当遇到 NOT_CONTROLLER 时频道无法切换的问题
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsuperhx&quot; target=&quot;_blank&quot;&gt;，作者@superhx&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1490&quot; target=&quot;_blank&quot;&gt;1490&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    fix(s3shell): 修复对象清理
    &lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShadowySpirits&quot; target=&quot;_blank&quot;&gt;，作者@ShadowySpirits&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;，PR #
    &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ%2Fautomq%2Fpull%2F1492&quot; target=&quot;_blank&quot;&gt;1492&lt;/a&gt;&lt;/u&gt;
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;h3&gt;关于我们&lt;/h3&gt; 
 &lt;div&gt;
  AutoMQ 是来自 Apache RocketMQ 和 Linux LVS 项目的核心团队，曾经见证并应对过消息队列基础设施在大型互联网公司和云计算公司的挑战。现在我们基于对象存储优先、存算分离、多云原生等技术理念，重新设计并实现了 Apache Kafka 和 Apache RocketMQ，带来高达 10 倍的成本优势和百倍的弹性效率提升。
 &lt;/div&gt; 
 &lt;div&gt;
  🌟 GitHub 地址： 
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAutoMQ&quot;&gt;https://github.com/AutoMQ&lt;/a&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  💻 官网： 
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.automq.com&quot;&gt;https://www.automq.com&lt;/a&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  👀 B 站： 
  &lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546572478482870&quot;&gt;AutoMQ 官方账号&lt;/a&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  🔍 视频号：AutoMQ
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301329/automq-1-1-1-rc0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301329/automq-1-1-1-rc0</guid>
            <pubDate>Wed, 10 Jul 2024 06:38:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>.NET 9 第 6 个预览版发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;微软发布了 .NET 9 的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevtoys.io%2F2024%2F07%2F09%2Fwhats-new-in-net-9-preview-6-comprehensive-overview%2F&quot; target=&quot;_blank&quot;&gt;第 6 个预览版&lt;/a&gt;，此版本包括对运行时、SDK、.NET MAUI、ASP.NET Core 和 C# 的更新。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;运行时更新&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;ARM64 代码生成：改进了加载和存储数据的指令，增强了执行时间和性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;代码布局：增强基本块排序，以最大化 fallthrough 行为和热代码密度，减少分支指令的数量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;循环优化：识别翻转循环计数器变量的时机以提高性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;减少地址暴露：更好地跟踪局部变量地址以释放更多的优化机会。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;AVX10v1 支持：新的 SIMD 指令集支持，允许在支持 AVX10 的硬件上进行矢量化操作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;硬件内部代码生成：改进硬件内部函数中常量的处理，以生成加速代码。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;常量折叠：增强浮点和 SIMD 运算的常量折叠功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;SDK 更新&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;NuGetAudit：现在会对传递依赖项中的漏洞发出警告，有助于维护项目安全。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;dotnet nuget why：一个新命令，用于查明你的项目为什么使用传递包。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;MSBuild BuildChecks：引入它来在构建期间强制执行规则和不变量，类似于 Roslyn Analyzers，并针对共享输出路径和双写检测制定了新规则。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;.NET MAUI 更新&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;质量改进：扩大测试覆盖范围、端到端场景测试和大量错误修复。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;适用于 Android 和 iOS 的 .NET：注重质量的更新，确保两个平台的应用程序开发稳健可靠。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;ASP.NET Core 更新&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;静态 Web 资产的指纹识别：自动生成静态资产的指纹版本，以改善缓存并加快加载时间。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;改进了 SignalR 的分布式跟踪：增强了 SignalR 集线器方法调用的跟踪功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Microsoft.AspNetCore.OpenAPI 的增强：改进了完成提供程序并支持 [Required] 和 [DefaultValue] 属性以及模式转换器。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;[Authorize] 和 [AllowAnonymous] 分析器：当 [Authorize] 被 [AllowAnonymous] 覆盖时，新的分析器会发出警告。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;ComponentPlatform 重命名为 RendererInfo：匹配新的命名约定。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;跨帧拆分大型 HTTP/2 标头：确保更好地处理大型标头。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;C# 更新&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:auto !important; margin-right:auto !important; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;C# 13 是 .NET 9 Preview 6 的一部分，它引入了局部属性（partial properties），扩展了局部方法的功能：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;局部属性：旨在支持源生成器，使 API 更加直观、自然。&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;使用示例：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-cs&quot;&gt;  [GeneratedRegex(&quot;abc|def&quot;)]
  private static partial Regex AbcOrDefProperty { get; };

  if (AbcOrDefProperty.IsMatch(text))
  {
      // Take action with matching text
  }&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;下载：&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdotnet.microsoft.com%2Fen-us%2Fdownload%2Fdotnet%2F9.0&quot; target=&quot;_blank&quot;&gt;https://dotnet.microsoft.com/en-us/download/dotnet/9.0&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/news/278672/dotnet-9-preview1&quot; target=&quot;_blank&quot;&gt;.NET 9 首个预览版发布 —— 打造面向云原生 &amp;amp; AI 的开发平台&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://my.oschina.net/u/5407571/blog/11048017&quot; target=&quot;_blank&quot;&gt;.NET9 PreView2+.AOT ILC 的重大变化&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301322/dotnet-9-pre-6</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301322/dotnet-9-pre-6</guid>
            <pubDate>Wed, 10 Jul 2024 06:09:35 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>DDei 在线设计器 v1.2.39 版发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;1.2.39 版本更新内容：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一、BUG 修复：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.修复了 readonly 时无法全选,可以修改图层的 bug；readonly 时可以创建、复制重命名 sheet 的 bug&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. QuickCtronl 插件&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; 2.1 多图层情况下，quickcontrol 创建连线的 bug，应该锁定到一个图层中&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; 2.2 修复了缩放后 QuickControl 的四个箭头位置不正确问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&amp;nbsp; &amp;nbsp; 2.3 修复了 QuickControl 插件的座标问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3 修复了 Search 插件的样式问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.修复没有纸张时无法刷新页面大小 BUG&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5.修复缩放后调用 notifyChange 方法刷新时会强制缩放，造成页面混乱 bug&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6.修复视窗被控件完全包围时，控件不显示 bug&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7.修复了打开本地文件失败的 bug&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;8.修复了容器在序列化时的引用错误&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;二、API&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.提供整个画布导出图片的 API&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.通过 API 创建控件（addControls、addControlsToLayer）、连线 (addLines) 时,可以传入参数来控制大小和座标采用当前的缩放值&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三、功能特性&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.复制图片功能当未选中控件时，复制整个画布的图片&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.新增插件扩展点以及回调函数&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.编辑器失去焦点和获取焦点时，通过状态控制，部分后台调度的任务只有当编辑器未 ACTIVE_EDITOR 时才会执行，以提升性能&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.可以通过参数 jumpline:1/0 开启/关闭全局跳线&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5.控件镜像显示&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;521&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dc3c4b3a214134850b5d18061f87614c2e7.png&quot; width=&quot;704&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;四、htmlviewer 插件&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Htmlviewer 插件让使用者可以自定义 HTML 来显示图形控件，从而获得更强的扩展性，更便于和业务应用整合。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;692&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-35fc6052070ef08c3a3dcd4d9dacda3eca8.png&quot; width=&quot;1050&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301321/ddei-1-2-39-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301321/ddei-1-2-39-released</guid>
            <pubDate>Wed, 10 Jul 2024 05:56:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Subtitle Edit 4.0.7 发布，字幕编辑工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Subtitle Edit&amp;nbsp;是一款针对文本格式类字幕的编辑工具，支持多种字符编码和字幕格式（Sub Station Alpha、Advanced Sub Station Alpha、SubRip、MicroDVD、MPL2、MPsub (MPlayer subtitle)、SubViewer 2.0、Plain-Text、Adobe Encore DVD）。&lt;/p&gt; 
&lt;p&gt;目前，Subtitle Edit 4.0.7 已发布，该版本更新内容如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加&quot;Generate transparent video with subtitles&quot;&lt;/li&gt; 
 &lt;li&gt;添加&amp;nbsp;Edit - Modify selection - Line length&lt;/li&gt; 
 &lt;li&gt;添加对 Faster-Whisper-XXL 的支持&lt;/li&gt; 
 &lt;li&gt;为 TTS final video file 添加音频设置&lt;/li&gt; 
 &lt;li&gt;添加字幕格式&quot;PodcastIndexer json&quot;&lt;/li&gt; 
 &lt;li&gt;添加新的字幕格式&lt;/li&gt; 
 &lt;li&gt;添加新的 Anthropic Claude 3.5 Sonnet 模型&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;IMPROVED&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新葡萄牙语翻译&lt;/li&gt; 
 &lt;li&gt;更新巴西葡萄牙语翻译&lt;/li&gt; 
 &lt;li&gt;更新法语翻译&lt;/li&gt; 
 &lt;li&gt;更新中文翻译&lt;/li&gt; 
 &lt;li&gt;更新芬兰语翻译&lt;/li&gt; 
 &lt;li&gt;更新意大利语翻译&lt;/li&gt; 
 &lt;li&gt;更新俄语翻译&lt;/li&gt; 
 &lt;li&gt;更新 mpv 至 2024-06-09&lt;/li&gt; 
 &lt;li&gt;更新 yt-dlp 至 2024-07-02&lt;/li&gt; 
 &lt;li&gt;为统计中的几个平均数添加小数点&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;FIXED&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复自动翻译崩溃&lt;/li&gt; 
 &lt;li&gt;修复 Vosk 音频转为选定行文本时的崩溃问题&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;在&quot;Multiple replace&quot;输出中提示&amp;nbsp;overwrite&lt;/li&gt; 
 &lt;li&gt;修复 TTS Azure/ElevenLabs 的&quot;abort&quot;问题&lt;/li&gt; 
 &lt;li&gt;修复视频播放器中音量文本 UI&lt;/li&gt; 
 &lt;li&gt;修复法语 &quot;L&#39;&quot;后的错误大小写问题&lt;/li&gt; 
 &lt;li&gt;修复在 TTS review 窗口中双击&quot;Play&quot;时崩溃的问题&lt;/li&gt; 
 &lt;li&gt;修复 DCinema 颜色&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;更多详情可查看&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSubtitleEdit%2Fsubtitleedit%2Fblob%2Fmain%2FChangelog.txt&quot; target=&quot;_blank&quot;&gt;&amp;nbsp;Changelog&lt;/a&gt;&lt;span style=&quot;color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301320/subtitle-edit-4-0-7-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301320/subtitle-edit-4-0-7-released</guid>
            <pubDate>Wed, 10 Jul 2024 05:42:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>❤️‍🔥FlyFlow：新增异步子流程节点</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;FlyFlow 介绍&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;官网地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.flyflow.cc&quot; target=&quot;_blank&quot;&gt;www.flyflow.cc&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;演示网址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fpro.flyflow.cc&quot; target=&quot;_blank&quot;&gt;pro.flyflow.cc&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;FlyFlow 借鉴了钉钉与飞书的界面设计理念，致力于打造一款用户友好、快速上手的工作流程工具。相较于传统的基于 BPMN.js 的工作流引擎，我们提供的解决方案显著简化了操作逻辑，使得用户能够在极短的时间内构建定制化的业务流程，即便是不具备深厚技术背景的普通用户也能迅速掌握，实现零门槛的高效工作流配置。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;840&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0515/094006_LzXg_3820517.png&quot; width=&quot;600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;本次更新：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;新增：异步子流程节点&lt;/li&gt; 
 &lt;li&gt;新增：人员关联业务，并支持审批人设置（HR 人员负责其他部门人员业务）&lt;/li&gt; 
 &lt;li&gt;新增：远程级联表单&lt;/li&gt; 
 &lt;li&gt;新增：字典类型支持树形字典，并支持在级联表单使用&lt;/li&gt; 
 &lt;li&gt;新增：报表数据对接 ElasticSearch&lt;/li&gt; 
 &lt;li&gt;优化：异步线程发送消息&lt;/li&gt; 
 &lt;li&gt;修复：清理流程报错&lt;/li&gt; 
 &lt;li&gt;修复：审批人节点校验失败&lt;/li&gt; 
&lt;/ol&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301290/flyflow-updated</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301290/flyflow-updated</guid>
            <pubDate>Wed, 10 Jul 2024 02:46:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Firefox 128.0 正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Firefox 128.0 现已发布，具体更新内容如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;New&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Firefox 现在可以从上下文菜单将选定的文本和超链接文本翻译成其他语言。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;199&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f54c95beec5961aa9fe206a0aec2e32e119.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;美国和加拿大的用户在打开地址栏时，Firefox 现在会显示用户最近的搜索或当前流行的搜索，以便用户返回上一个搜索会话或启发下一个搜索。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1993dff6f4c94e6982463d919532becff56.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Firefox 现在拥有更简洁、更统一的清除用户数据对话框。除了精简数据类别外，新对话框还提供与所选时间范围对应的站点数据大小的洞察。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;189&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7e2679e6684c382b8a712039ab902d83da5.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Firefox 现在支持在隐私浏览模式下播放来自 Netflix 等流媒体网站的受保护内容。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Firefox 现在支持实验性的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Fprivacy-preserving-attribution&quot; target=&quot;_blank&quot;&gt;Privacy Preserving Attribution API&lt;/a&gt;，它为 ad attribution 提供了用户跟踪的替代方案。此实验性功能仅通过&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.mozilla.org%2FOrigin_Trials&quot; target=&quot;_blank&quot;&gt;origin trial&lt;/a&gt;&amp;nbsp;启用，可在隐私和安全设置中的新网站广告偏好设置部分中禁用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 macOS 上，通过 getUserMedia 进行的麦克风捕获现在将在适用时使用系统提供的语音处理，从而提高音频质量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Firefox 现已支持 Saraiki (skr) 语言。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Fixed&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;现在，Firefox 使用 SOCKS v5 时默认代理 DNS，避免使用 SOCKS v5 代理时将 DNS 查询泄露到网络。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;各种&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2024-29%2F&quot; target=&quot;_blank&quot;&gt;安全&lt;/a&gt;修复。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;Changed&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Firefox 现在支持以内联方式呈现更多&lt;code&gt;text/*&lt;/code&gt;&lt;span style=&quot;background-color:#ffffff; color:#42425a&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;file&amp;nbsp;&lt;/span&gt;类型，而不需要下载才能查看。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;用于验证附加组件和签名内容的根证书已更新，以避免即将过期。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Developer&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 Inspector Rules&amp;nbsp;视图中将鼠标悬停在 CSS rule selector&amp;nbsp;上时，工具提示中会显示&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2FSpecificity&quot; target=&quot;_blank&quot;&gt;CSS rules specificity&lt;/a&gt;。这可以帮助 Web 开发人员了解为什么先应用某条规则，然后再应用另一条规则。&lt;/li&gt; 
 &lt;li&gt;现在，当值与已注册的自定义属性定义不匹配时，检查器面板会将自定义属性声明标记为无效。如下截图所示，自定义属性&lt;code&gt;--b&lt;/code&gt;的声明预期使用&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;值语法（例如&lt;code&gt;10px&lt;/code&gt;），但实际使用了指定的颜色。旁边会出现一个感叹号图标，并带有解释错误的工具提示。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;202&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-644b877a0c87015df86f0c65bec92dab0f7.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;已对&amp;nbsp;Inactive CSS 进行改进。现在，当在多列容器之外的元素上使用&lt;code&gt;column-span&lt;/code&gt;时，以及在 non-replaced elements 上使用仅适用于 replaced elements 的属性时，现在都会显示警告。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;Web Platform&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArrayBuffer%2Fresize&quot; target=&quot;_blank&quot;&gt;SpiderMonkey 现在支持&amp;nbsp;Resizeable ArrayBuffer&lt;/a&gt;&amp;nbsp;和&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FSharedArrayBuffer%2Fgrow&quot; target=&quot;_blank&quot;&gt;Growable&amp;nbsp;SharedArrayBuffer&lt;/a&gt;。这样就可以更改 ArrayBuffer 的大小，而无需分配新缓冲区并将数据复制到其中。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.w3.org%2FTR%2Fwebrtc%2F%23dom-rtcrtptransceiver-setcodecpreferences&quot; target=&quot;_blank&quot;&gt;setCodecPreferences&lt;/a&gt;&amp;nbsp;方法允许应用程序禁用特定编解码器（包括 RTX/RED/FEC）的 negotiation。它还允许应用程序使远程对等端优先选择列表中最先出现的编解码器进行发送。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;图像和文档的 Accept header 已被&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTTP%2FContent_negotiation%2FList_of_default_Accept_values&quot; target=&quot;_blank&quot;&gt;更改&lt;/a&gt;，以便更好地与 Fetch 标准和其他浏览器保持一致。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;添加了对&lt;code&gt;@property&lt;/code&gt;&lt;span style=&quot;background-color:#ffffff; color:#42425a&quot;&gt;&lt;span&gt;和&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FCSS_Properties_and_Values_API&quot; target=&quot;_blank&quot;&gt;CSS properties-and-values API&lt;/a&gt;&amp;nbsp;的支持。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;许多对象（例如 Request/Response 和 Blob）都提供了一种新&lt;code&gt;bytes()&lt;/code&gt;方法，该方法提供了&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fw3ctag%2Fdesign-principles%2Fissues%2F463&quot; target=&quot;_blank&quot;&gt;获取 Uint8Array typed array&lt;/a&gt;&amp;nbsp;的便捷方式。&lt;/p&gt; 
  &lt;/div&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F128.0%2Freleasenotes%2F&quot; target=&quot;_blank&quot;&gt;https://www.mozilla.org/en-US/firefox/128.0/releasenotes/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301282/firefox-128-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301282/firefox-128-0-released</guid>
            <pubDate>Wed, 10 Jul 2024 02:23:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Vitest 2.0 正式发布：Vue 团队打造的下一代测试框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;7 月 8 日，由 Vue 团队打造的下一代测试框架 Vitest 正式推出 2.0 版本！&lt;/p&gt; 
&lt;p&gt;Vitest 于 2021 年 12 月推出，至今已经过去了两年多的时间，其发展速度可谓是非常迅速，目前在 npm 下载量已经达到了每周&lt;strong&gt;500w&lt;/strong&gt;，并且还在呈现快速增长的趋势。&lt;/p&gt; 
&lt;p&gt;Vitest 是一个原生支持 Vite 的测试框架。Vitest 以其快速、简洁的测试解决方案而爆火，只需要很少的配置即可上手。由于 Vitest 和 Vite 使用相同的配置文件，因此将 Vitest 集成到 Vue 应用中很简单。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-87f706d01d69c3fdc70069303e414ef24a4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Vitest 主要功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;与 Vite 通用的配置、转换器、解析器和插件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用与你的应用程序相同的设置来运行测试！&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;智能文件监听模式，就像是测试的 HMR！&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持对 Vue、React、Svelte、Lit 等框架进行组件测试。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;开箱即用的 TypeScript / JSX 支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ESM 优先，支持模块顶级 await&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 Tinypool 使用 Worker 线程尽可能多地并发运行&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 Tinybench 来支持基准测试&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;套件和测试的过滤、超时、并发配置&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 Workspace&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Jest 的快照功能&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;内置 Chai 进行断言 + 与 Jest expect 语法兼容的 API&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;内置用于对象模拟 (Mock) 的 Tinyspy&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 jsdom 或 happy-dom 用于 DOM 模拟&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 v8 或 istanbul 来输出代码测试覆盖率&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;类似于 Rust 语言的源码内联测试&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 expect-type 进行类型测试&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vitest 2.0 更新内容&lt;/h2&gt; 
&lt;p&gt;Vitest 2.0 迁移指南：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vitest.dev%2Fguide%2Fmigration&quot; target=&quot;_blank&quot;&gt;https://cn.vitest.dev/guide/migration&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;重要变更&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;简化模拟函数泛型类型并与 Jest 对齐&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;移除 --segfault-retry 选项&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;以栈的形式运行套件钩子&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;默认启用 coverage.ignoreEmptyLines&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 JSON 报告中添加正确的位置和快照字段&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新依赖 chai 至版本 5&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;移除 watchExclude 选项&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更改默认池为 &#39;forks&#39;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;添加 --merge-reports 以支持覆盖率&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;添加基于 Promise 的返回断言，不自动解析返回的 Promise&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果全局设置失败，不要退出进程&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果配置失败，不要退出进程&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 JSON 输出中添加元数据&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在浏览器配置中将 indexScripts 重命名为 orchestratorScripts&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;添加 &quot;vitest list&quot; API 以打印收集的测试而不运行它们&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;从运行器中移除空套件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持并发套件&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;新增功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;美化差异输出&lt;/strong&gt;：来自原因的 diff 输出现在更易读&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;改进 IDE 支持&lt;/strong&gt;：现在允许将导入语句作为 vi.mock 路径&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;移除弃用选项&lt;/strong&gt;：清理了不再使用的选项&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;添加 blob 报告器&lt;/strong&gt;：增加了新的报告器选项&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;添加 expect.poll 实用程序&lt;/strong&gt;：提供了一个工具来手动重试断言&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;添加 browser.ui 选项&lt;/strong&gt;：允许用户配置浏览器界面的选项&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;在 --output-json 中添加中位数&lt;/strong&gt;：增强了 JSON 输出功能&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;允许增强 config.test.env&lt;/strong&gt;：现在可以在配置中增强测试环境变量&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;在浏览器模式中实现模块模拟&lt;/strong&gt;：浏览器模式现在支持模块模拟&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;允许在配置中配置 expect 选项&lt;/strong&gt;：可以更灵活地配置期望行为&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;添加打印控制枱堆栈跟踪的选项&lt;/strong&gt;：增加了一个选项来打印控制枱的堆栈跟踪&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;向 UI 添加浏览器框架&lt;/strong&gt;：改进了用户界面，添加了浏览器框架视图&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;图像类型添加 bmp 支持&lt;/strong&gt;：现在支持 .bmp 图像类型&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;添加从 page.screenshot 返回 base64 的选项&lt;/strong&gt;：现在可以选择以 base64 格式返回截屏&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;公开来自 Vite 的 parseAst、parseAstAsync&lt;/strong&gt;：将这些函数公开以供外部使用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;浏览器模式：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;为 Vitest 浏览器模式的下一次迭代奠定基础&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;添加服务器和浏览器之间通信的命令&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在监视模式下不重新加载页面&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持更改视口&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;添加浏览器 iframe 鼠标交互&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持点击事件&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;将 none 提供程序重命名为 preview 并设为默认值&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在无头模式下并行运行测试，添加 page.screenshot 方法&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;实现多个 userEvent 方法，添加填充和拖放事件&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;引入 expect.dom 方法，并将 jest-dom 匹配器与 @vitest/browser 打包&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在浏览器中公开 CDP&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;为浏览器测试添加 &quot;init&quot; 命令&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;添加如果浏览器测试失败则拍摄屏幕截图的选项&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;向交互式 API 添加三击 (tripleClick)&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Playwright 提供程序不允许调整浏览器视口大小&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Release Notes：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvitest-dev%2Fvitest%2Freleases%2Ftag%2Fv2.0.0&quot; target=&quot;_blank&quot;&gt;https://github.com/vitest-dev/vitest/releases/tag/v2.0.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;来源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FCFiy_iNnvNbfhoCwoKPUtQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/CFiy_iNnvNbfhoCwoKPUtQ&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301281/vitest-2-0-0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301281/vitest-2-0-0</guid>
            <pubDate>Wed, 10 Jul 2024 02:18:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>橙单代码生成工具 3.0 正式版，启程迎接挑战</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h3&gt;橙单 3.0&lt;/h3&gt; 
&lt;p&gt;首先感谢开源中国的平台，也感谢大家的阅读与关注。橙单赠人玫瑰，手有余香，希望我们的免费代码生成工具可以为更多的开发者带来更多的学习和休息时间。&lt;/p&gt; 
&lt;p&gt;创业维艰，在过去的一年中，我们团队在大家的帮助下和明确目标的指引下，非常艰难的走过来了。没有足够的资源，只有足够的热情和开发最好快开平台的动力，让我们从去年的今天 2.9 发布的时候，用了足足一年才迎来换代版本 3.0 的升级。这一执念来自于很早之前一次与朋友的交流，3.0 版本才是一款产品的真正第一版。&lt;/p&gt; 
&lt;h3&gt;最新开源&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;参考我们的文档确保开箱即用和极少的 BUG。&lt;/li&gt; 
 &lt;li&gt;全新技术栈 Boot3 + Vue3 + Flowable7 +&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;Sa-Token + Mybatis-Flex / Mybatis-Plus。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;在线表单和工作流的主体功能全部开源。&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;前端提供「高颜值」的表单编辑器和流程编辑器。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;全新橙单&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;免费的代码生成，本质都是 CURD，但橙单可以支持&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;「跨服务多表关联」级联增删改查的一键生成。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;全新的网站设计，希望可以让更多的同行第一眼就能记住我们。&lt;/li&gt; 
 &lt;li&gt;全新的文档设计，高颜值和极优质的阅读体验，授人以鱼不如授人以渔的文档内容。&lt;/li&gt; 
 &lt;li&gt;全优的代码质量，每次修改代码都用 SonarLint 扫描，发布之前 SonarQube 再次扫描，确保代码 0 警告。&lt;/li&gt; 
 &lt;li&gt;卓越的架构设计，流程表单中心，报表中心，权限中心，业务服务正交组合，这些我们完全做到了收放自如并一键生成。&lt;/li&gt; 
 &lt;li&gt;完整的演示工程，线上演示工程，以及多租户的演示环境，可以很好的展示我们代码生成的能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;最新功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;移动端，在线表单同时支持 Vant 和 Uniapp。&lt;/li&gt; 
 &lt;li&gt;移动端，工作流审批同时支持 Vant 和 Uniapp。&lt;/li&gt; 
 &lt;li&gt;移动端，统计表单同时支持 Vant 和 Uniapp。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;移动端，路由表单代码生成同时支持 Vant (H5) 和 Uniapp (小程序)。&lt;/li&gt; 
 &lt;li&gt;移动端，路由表单工作流代码生成同时支持 Vant (H5) 和 Uniapp (小程序)。&lt;/li&gt; 
 &lt;li&gt;移动端，路由统计表单代码生成同时支持 Vant (H5) 和 Uniapp (小程序)。&lt;/li&gt; 
 &lt;li&gt;工作流，支持流程复活，既已经完成的流程还能再次回到审批状态。&lt;/li&gt; 
 &lt;li&gt;工作流，支持任务超时提醒，已支持「消息提醒和自动审批」。&lt;/li&gt; 
 &lt;li&gt;工作流，支持流程任务空审批人的处理机制，目前已实现「自动审批、自动拒绝和指定转派」。&lt;/li&gt; 
 &lt;li&gt;工作流，支持对已存在业务数据的多次审批。&lt;/li&gt; 
 &lt;li&gt;工作流，支持服务启动时指定流程表所在数据源。&lt;/li&gt; 
 &lt;li&gt;工作流，Spring Boot 3 版本升级至 Flowable 7。&lt;/li&gt; 
 &lt;li&gt;工作流，Spring Boot 2 版本升级至 Flowable 6.8。&lt;/li&gt; 
 &lt;li&gt;工作流，原有自动跳过的执行监听器改为任务监听器，以支持更多自动跳过条件。&lt;/li&gt; 
 &lt;li&gt;在线表单，支持批量导入，导入过程支持字典数据的反向翻译。&lt;/li&gt; 
 &lt;li&gt;在线表单，根据配置项可以切换，业务表和在线表单表之间是同库还是跨库。之前就支持跨库，因此会有多次事务的副作用。&lt;/li&gt; 
 &lt;li&gt;报表模块，集成 GoView 支持可视化大屏。&lt;/li&gt; 
 &lt;li&gt;报表模块，打印支持 API 数据集。&lt;/li&gt; 
 &lt;li&gt;报表模块，用 x-spreadsheet 替换掉 luckysheet，作为打印编辑器的电子表单组件。&lt;/li&gt; 
 &lt;li&gt;报表模块，打印预览改为 x-spreadsheet 预览，可以直接下载 Excel 数据文件。&lt;/li&gt; 
 &lt;li&gt;报表模块，新增支持 Doris 分析数据库。&lt;/li&gt; 
 &lt;li&gt;基础框架，单体工程支持 Sa-Token。&lt;/li&gt; 
 &lt;li&gt;基础框架，微服务工程支持 Sa-Token。&lt;/li&gt; 
 &lt;li&gt;基础框架，多租户工程支持 Sa-Token。&lt;/li&gt; 
 &lt;li&gt;基础架构，全局编码字典支持独立数据源配置。&lt;/li&gt; 
 &lt;li&gt;基础架构，支持华为云 OSS。&lt;/li&gt; 
 &lt;li&gt;基础架构，全模块支持华为 OpenGauss。&lt;/li&gt; 
 &lt;li&gt;基础架构，升级到 Knife4j 4.5.0，全面支持 OpenAPI3 规范。&lt;/li&gt; 
 &lt;li&gt;基础架构，升级支持 Spring Boot 3.1.6。从当前版本开始，橙单将同时支持 Spring Boot 3.x 和 Spring Boot 2.7.x。&lt;/li&gt; 
 &lt;li&gt;基础架构，升级支持 Mybatis Flex。从当前版本开始，橙单将同时支持 Mybatis Flex 和 Mybatis Plus。&lt;/li&gt; 
 &lt;li&gt;多租户，完整集成移动端。&lt;/li&gt; 
 &lt;li&gt;多租户，完整集成在线表单，租户可自行配置个性化在线表单。&lt;/li&gt; 
 &lt;li&gt;多租户，完整集成工作流，租户可自行配置流程。&lt;/li&gt; 
 &lt;li&gt;多租户，完整集成统计表单，租户可自行设计自己的统计图表表单。&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/301280/orange-admin-3-0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/301280/orange-admin-3-0</guid>
            <pubDate>Wed, 10 Jul 2024 02:03:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>