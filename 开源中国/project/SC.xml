<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 18 Jun 2025 16:46:22 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>agentman v1.0.0 发布，基于 Java SpringBoot 生态的多智能体应用开发框架</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;agentman 是一个基于 Java SpringBoot 生态的多智能体应用开发框架。agentman v1.0.0 发布，本次发布主要功能：&lt;/p&gt; 
&lt;p&gt;1、多智能体协作，通过消息机制，模拟人类对话的方式达到 AI 智能体之间的通信&lt;/p&gt; 
&lt;p&gt;2、基于框架完善诈金花扑克小游戏&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356009/agentman-1-0-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356009/agentman-1-0-0-released</guid>
      <pubDate>Sat, 10 May 2025 09:35:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Xinference v1.7.0 重磅发布：Qwen3 全家桶 + 图生视频黑科技，7 大更新</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Xorbits Inference（Xinference）是一个，性能强大且功能全面的，分布式，推理框架。可用于大语言模型（LLM），语音识别模型，多模态模型等各种模型的推理。通过 Xorbits Inference，你可以轻松地，一键部署你自己的模型或内置的前沿开源模型 - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxorbitsai%2Finference%25E3%2580%2582%25E6%2597%25A0%25E8%25AE%25BA%25E4%25BD%25A0%25E6%2598%25AF%25E7%25A0%2594%25E7%25A9%25B6%25E8%2580%2585%25EF%25BC%258C%25E5%25BC%2580%25E5%258F%2591%25E8%2580%2585%25EF%25BC%258C%25E6%2588%2596%25E6%2598%25AF%25E6%2595%25B0%25E6%258D%25AE%25E7%25A7%2591%25E5%25AD%25A6%25E5%25AE%25B6%25EF%25BC%258C%25E9%2583%25BD%25E5%258F%25AF%25E4%25BB%25A5%25E9%2580%259A%25E8%25BF%2587" target="_blank"&gt;https://github.com/xorbitsai/inference&lt;/a&gt;。无论你是研究者，开发者，或是数据科学家，都可以通过 Xorbits Inference 与最前沿的 AI 模型，发掘更多可能。&lt;/p&gt; 
&lt;p&gt;Xinference 的功能和亮点有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌟 模型推理，轻而易举：大语言模型，语音识别模型，多模态模型的部署流程被大大简化。一个命令即可完成模型的部署工作。&lt;/li&gt; 
 &lt;li&gt;⚡️ 前沿模型，应有尽有：框架内置众多中英文的前沿大语言模型，包括 baichuan，chatglm2 等，一键即可体验！内置模型列表还在快速更新中！&lt;/li&gt; 
 &lt;li&gt;🖥 异构硬件，快如闪电：通过 ggml，同时使用你的 GPU 与 CPU 进行推理，降低延迟，提高吞吐！&lt;/li&gt; 
 &lt;li&gt;⚙️ 接口调用，灵活多样：提供多种使用模型的接口，包括 OpenAI 兼容的 RESTful API（包括 Function Calling），RPC，命令行，web UI 等等。方便模型的管理与交互。&lt;/li&gt; 
 &lt;li&gt;🌐 集群计算，分布协同：支持分布式部署，通过内置的资源调度器，让不同大小的模型按需调度到不同机器，充分使用集群资源。&lt;/li&gt; 
 &lt;li&gt;🔌 开放生态，无缝对接：与流行的三方库无缝对接，包括 LangChain， LlamaIndex， Dify，以及 Chatbox。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🚀 Xinference v1.7.0 更新日志&lt;/p&gt; 
&lt;p&gt;✅ 本次亮点&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧠 Qwen3 模型新增 Embedding 与 Reranker 支持&lt;/li&gt; 
 &lt;li&gt;🔍 Embedding 支持多引擎切换机制新增 vLLM 后端支持，统一调用方式，灵活适配不同部署需求。&lt;/li&gt; 
 &lt;li&gt;🎞️ 首尾帧生成视频能力上线图生视频模块支持传入首帧与尾帧，自动补全过程动画。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌐 社区版更新&lt;/p&gt; 
&lt;p&gt;📦 安装方式&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;pip 安装：pip install 'xinference==1.7.0'&lt;/li&gt; 
 &lt;li&gt;Docker 使用：拉取最新版镜像，或在容器中使用 pip 更新&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🆕 新模型支持&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CogView4（图像生成模型）&lt;/li&gt; 
 &lt;li&gt;Deepseek-R1-0528 混合量化版&lt;/li&gt; 
 &lt;li&gt;Qwen3 Embedding&lt;/li&gt; 
 &lt;li&gt;Qwen3-Reranker&lt;/li&gt; 
 &lt;li&gt;MiniCPM4 系列&lt;/li&gt; 
 &lt;li&gt;SeACoParaformer（语音识别）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ 新特性&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;图像生成：新增 CogView4 模型支持&lt;/li&gt; 
 &lt;li&gt;Embedding 模型支持指定运行引擎（如 vLLM）&lt;/li&gt; 
 &lt;li&gt;Qwen3 Embedding 模型支持&lt;/li&gt; 
 &lt;li&gt;Qwen3 Reranker 模型支持&lt;/li&gt; 
 &lt;li&gt;图生视频新增，首帧-尾帧生成，能力&lt;/li&gt; 
 &lt;li&gt;FunASR 系列语音模型支持 verbose_json 输出格式&lt;/li&gt; 
 &lt;li&gt;Embedding 模型新增 model_engine 参数（UI 支持）&lt;/li&gt; 
 &lt;li&gt;transcripts API 支持透传 kwargs&lt;/li&gt; 
 &lt;li&gt;Web UI 支持日语与韩语界面语言&lt;/li&gt; 
 &lt;li&gt;运行中模型页面加载时自动切换至活动标签页&lt;/li&gt; 
 &lt;li&gt;UI 支持 image / video 模型筛选（基于 model_ability）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🛠 功能增强&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 PCM 音频响应格式（response_format=pcm）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🐞 Bug 修复&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 Qwen 与 Spring AI function call 配合使用时报错问题&lt;/li&gt; 
 &lt;li&gt;修复 sglang 潜在卡死问题&lt;/li&gt; 
 &lt;li&gt;修复移动端语言切换异常问题（UI）&lt;/li&gt; 
 &lt;li&gt;修复命令行参数 bug&lt;/li&gt; 
 &lt;li&gt;修复依赖安装问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📚 文档更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CosyVoice 文档更新&lt;/li&gt; 
 &lt;li&gt;模型列表文档更新&lt;/li&gt; 
 &lt;li&gt;链接整理与修复&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🏢 企业版更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🧠 支持 vLLM v1 引擎自动选择与分布式部署默认启用 v1 引擎，自动适配多机多卡，显著提升模型推理吞吐与稳定性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🖥️ UI 显示优化：异构集群信息更清晰可见&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我们感谢每一位参与的社区伙伴对 Xinference 的帮助和支持，也欢迎更多使用者和开发者参与体验和使用 Xinference。 &amp;nbsp; 欢迎您在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxorbitsai%2Finference" target="_blank"&gt;https://github.com/xorbitsai/inference&lt;/a&gt; 给我们一个，星标，这样你就可以在 GitHub 上及时收到每个新版本的通知。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356008/xinference-1-7-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356008/xinference-1-7-0-released</guid>
      <pubDate>Sat, 10 May 2025 09:31:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>🔥ioGame 21.28 全新文档上线</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;ioGame 源码完全开放、最新文档阅读完全开放；使用完全自由、免费（遵守开源协议）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;ioGame 是一个&lt;/span&gt;&lt;span style="color:#262626"&gt;轻量级的&lt;/span&gt;&lt;span style="color:#333333"&gt;网络编程框架，适用于&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;及各种需要长连接的场景。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;文档与日志&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fversion_log" target="_blank"&gt;框架版本更新日志&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2F" target="_blank"&gt;ioGame 真轻量级网络编程框架 - 在线文档&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;ioGame 每月会发 1 ~ 2 个版本，通常在大版本内升级总是兼容的，如 21.1 升级到任意 21.x 的高版本。&lt;/span&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr&gt;
 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Freleases%2Ftag%2F21.28" target="_blank"&gt;https://github.com/iohao/ioGame/releases/tag/21.28&lt;/a&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;span&gt;版本更新汇总&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;ol&gt; 
   &lt;li&gt;feat(room): The room supports convenient operations. 房间支持便捷操作。&lt;/li&gt; 
   &lt;li&gt;Deprecated RoomStatusEnum. 废弃 RoomStatusEnum。&lt;/li&gt; 
   &lt;li&gt;feat(room): The room supports convenient broadcastRange. 房间支持便捷广播。&lt;/li&gt; 
   &lt;li&gt;docs(all): Update documentation link (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame" target="_blank"&gt;https://iohao.github.io/game&lt;/a&gt;). 更新代码中的使用文档链接。&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F451" target="_blank"&gt;#451&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Refactor the usage documentation to use the new access address:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2F" target="_blank"&gt;https://iohao.github.io/game/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;. 重构使用文档，并使用新地址。&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/blockquote&gt; 
 &lt;hr&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;[other updates]&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span style="color:#393a34"&gt;&lt;span style="color:#393a34"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#00009f"&gt;netty.version&lt;/span&gt;&lt;span style="color:#393a34"&gt;&amp;gt;&lt;/span&gt;&lt;span&gt;4.1.122.Final&lt;/span&gt;&lt;span style="color:#393a34"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#00009f"&gt;netty.version&lt;/span&gt;&lt;span style="color:#393a34"&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;h3&gt;&lt;span style="color:#40485b"&gt;ioGame 使用趋势数据&lt;/span&gt;&lt;/h3&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;关注 ioGame 的游戏服务器开发者持续增多，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;2022-09 ~ 至今&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;各月&lt;/span&gt;&lt;span&gt;的统计数据；&lt;/span&gt;&lt;/p&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;这里的统计信息是关于开发者关注 ioGame 框架相关的，从统计数据中可以看出，由于 ioGame 上手简单，功能强大等优点，得到了众多开发者的关注。如果你想知道 ioGame 有没有人在使用，可以先到这里看下统计数据、开发者的评价与讨论。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8" target="_blank"&gt;&lt;span&gt;https://www.yuque.com/iohao/game/gpxk93#TwVa8&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;这里展示了每月的统计数据，统计数据来源于语雀后台，这些数据都是&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;真实的、客观存在的、活的&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
   &lt;div&gt; 
    &lt;blockquote&gt; 
     &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;因为成本的原因，某宝某多还没有出现能提供这种服务的商家，所以这样的统计数据也更具真实性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;/blockquote&gt; 
    &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;通过统计数据，我们可以看到每天会有很多开发者在访问 ioGame 的在线文档，并且这些统计数据不是来源于口嗨的，也不是主观创造的。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;所以，还在犹豫要不要使用 ioGame 的开发者们，更应该讨论的是 「为什么这些开发者会选择使用 ioGame」，而不是 ioGame 有没有人在使用的问题。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao" target="_blank"&gt;&lt;span&gt;点击我，到语雀后台查看 ioGame 的数据&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
    &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1594" src="https://oscimg.oschina.net/oscnet//35418654e38a44fceab45e34e90da0d8.png" width="1566" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
    &lt;div&gt; 
     &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="background-color:#fff8e6; color:#4d3800"&gt;由于文档已经迁出语雀，所以后续将不会使用语雀的统计数据。&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;hr&gt; 
    &lt;h2&gt;ioGame 网络游戏服务器框架简介&lt;/h2&gt; 
   &lt;/div&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;你是否想要开发一个&lt;strong&gt;高性能、稳定、易用、自带负载均衡、避免类爆炸设计、可跨进程跨机器通信、集群无中心节点、集群自动化、有状态多进程的分布式的&lt;/strong&gt;网络编程服务器呢？ 如果是的话，这里向你推荐一个由 java 语言编写的网络编程框架 ioGame。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 是一个轻量级的网络编程框架，适用于&lt;strong&gt;网络游戏服务器、物联网、内部系统&lt;/strong&gt;及各种需要长连接的场景。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;ioGame 有以下特点：&lt;/strong&gt;&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;ol&gt; 
     &lt;li&gt;真轻量级、无锁异步化、事件驱动的架构设计。&lt;/li&gt; 
     &lt;li&gt;包体小、内存占用少、启动速度快。&lt;/li&gt; 
     &lt;li&gt;ioGame 是纯 javaSE 的，使得 ioGame 能与其他框架方便的进行集成、融合，如 Spring ...等。&lt;/li&gt; 
     &lt;li&gt;在学习成本方面，ioGame 的学习成本非常低，可以说是&lt;strong&gt;零学习成本&lt;/strong&gt;，即使没有游戏编程经验，也能轻松上手。开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能用框架开发业务。&lt;/li&gt; 
     &lt;li&gt;ioGame 在架构上解决了传统框架所产生的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;N*N 问题&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;在轻量级方面，ioGame&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;不依赖任何第三方&lt;/strong&gt;中间件或数据库&lt;strong&gt;就能支持集群、分布式&lt;/strong&gt;，只需要 java 环境就可以运行。&lt;/li&gt; 
     &lt;li&gt;在架构灵活性方面，ioGame 的架构由三部分组成：1.游戏对外服、2.Broker（游戏网关）、3.游戏逻辑服。三者既可相互独立，又可相互融合，这意味着使用 ioGame 可以&lt;strong&gt;适应任何类型的游戏&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;架构是可以动态扩缩的，游戏对外服、游戏逻辑服、Broker（游戏网关）都&lt;strong&gt;支持动态增加和减少&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;在分布式开发体验方面，ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分布式系统时更加简单。&lt;/li&gt; 
     &lt;li&gt;在生态规划方面，游戏逻辑服是支持独立运行，&lt;strong&gt;从而实现功能模块化的可能性&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;具备全链路调用日志跟踪特性。&lt;/li&gt; 
     &lt;li&gt;在通讯方式方面，提供多种通讯方式，且逻辑服之间可以相互跨机器通信。&lt;/li&gt; 
     &lt;li&gt;在编码风格上，提供了类 MVC 的编码风格（无入侵的 Java Bean ），这种设计方式很好的&lt;strong&gt;避免了类爆炸&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;在线程安全方面，框架为开发者解决了单个玩家的&lt;strong&gt;并发问题&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;在连接方式方面，允许开发者&lt;strong&gt;使用一套业务代码&lt;/strong&gt;，同时支持 TCP、WebSocket、UDP 等多种连接方式，无需进行任何修改，并且可扩展。&lt;/li&gt; 
     &lt;li&gt;在数据协议方面，ioGame 让开发者&lt;strong&gt;用一套业务代码&lt;/strong&gt;，就能轻松切换不同的数据协议，如 Protobuf、JSON 等，并且可扩展。&lt;/li&gt; 
     &lt;li&gt;在增减协议方面，ioGame 可以让你在&lt;strong&gt;新增或减少协议&lt;/strong&gt;时，&lt;strong&gt;无需重启&lt;/strong&gt;游戏对外服与 Broker（游戏网关）。这样既能避免玩家断线，又能避免因新增、减少协议而重启所有机器的痛点。&lt;/li&gt; 
     &lt;li&gt;action 支持自动装箱、拆箱基础类型，用于解决&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fprotocol_fragment" target="_blank"&gt;协议碎片&lt;/a&gt;的问题。&lt;/li&gt; 
     &lt;li&gt;业务框架提供了插件机制，插件是可插拨、可扩展的。&lt;/li&gt; 
     &lt;li&gt;在部署方面，ioGame 支持&lt;strong&gt;多服单进程&lt;/strong&gt;的方式部署，也支持&lt;strong&gt;多服多进程&lt;/strong&gt;多机器的方式部署，在部署方式上可以随意的切换而不需要更改代码。&lt;/li&gt; 
     &lt;li&gt;在安全方面，所有的游戏逻辑服不需要开放端口，&lt;strong&gt;天然地避免了扫描攻击&lt;/strong&gt;。&lt;/li&gt; 
     &lt;li&gt;在模拟客户端测试方面，ioGame 提供了压测&amp;amp;模拟客户端请求模块。该模块&lt;strong&gt;可以模拟真实的网络环境&lt;/strong&gt;，并且在模拟测试的过程中与服务器的交互是可持续的、可互动的，同时也是支持自动化的。&lt;/li&gt; 
     &lt;li&gt;框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问。&lt;/li&gt; 
     &lt;li&gt;分布式事件总线支持（类似 MQ、Redis 发布订阅机制，可跨多个机器通信、可跨多个进程通信）。&lt;/li&gt; 
     &lt;li&gt;提供优雅的路由访问权限控制。&lt;/li&gt; 
     &lt;li&gt;具备智能的同进程亲和性。&lt;/li&gt; 
     &lt;li&gt;JSR380 验证、断言 + 异常机制 = 更少的维护成本。&lt;/li&gt; 
     &lt;li&gt;一次编写到处对接，提升巨大的生产力，能为各客户端生成可交互的代码。你只需要编写一次 java 代码，就能为 Godot、UE、Unity、CocosCreator、Laya、React、Vue、Angular ...等项目生成统一的交互接口。&lt;/li&gt; 
    &lt;/ol&gt; 
   &lt;/blockquote&gt; &amp;nbsp; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 在打包、内存占用、启动速度等方面也是优秀的。 打 jar 包后大约&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;15MB&lt;/strong&gt;，应用通常会在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;0.x 秒&lt;/strong&gt;内完成启动，内存占用小。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在生态融合方面，ioGame 可以很方便的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fintegration_spring" target="_blank"&gt;与 Spring 集成&lt;/a&gt;（4 行代码）。 除了 Spring 外，还能与任何其他的框架做&lt;strong&gt;融合&lt;/strong&gt;，如 Vert.x、Quarkus、Solon ...等，从而使用其他框架的相关生态。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在学习成本方面，ioGame 的学习成本非常低，可以说是&lt;strong&gt;零学习成本&lt;/strong&gt;，即使没有游戏编程经验也能轻松上手。 开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能使用框架开发业务。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在编码风格上，ioGame 为开发者提供了类 MVC 的编码风格（无入侵的 Java Bean ），这种设计方式很好的&lt;strong&gt;避免了类爆炸&lt;/strong&gt;。 同时，框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问。 这使得开发者所编写的代码会非常的优雅，并且具备全链路调用日志跟踪。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;与客户端对接方面，ioGame 具备&lt;strong&gt;一次编写到处对接&lt;/strong&gt;的能力，为客户端提供了代码生成的辅助功能，能够帮助客户端开发者减少巨大的工作量。 这将意味着，你只需要编写一次 java 代码，就能为 Godot、UE、Unity、CocosCreator、Laya、React、Vue、Angular ...等项目生成统一的交互接口。 ioGame 提供了多种语言的 SDK 支持及相关语言的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fexamples%2Fcode_generate" target="_blank"&gt;代码生成&lt;/a&gt;，分别是 C#、TypeScript、GDScript、C++，并支持扩展。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 在架构上解决了传统框架所产生的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;N*N 问题&lt;/strong&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Flegacy_system" target="_blank"&gt;与传统架构对比&lt;/a&gt;）。 传统架构在扩展机器时，需要借助很多第三方中间件，如：Redis、MQ、ZooKeeper ...等，才能满足整体架构的运作。 通常，只要引入了需要安装的中间件才能做到扩展的，那么你的架构或者说框架，基本上与轻量级无缘了。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在轻量级方面，ioGame&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;不依赖任何第三方&lt;/strong&gt;中间件或数据库&lt;strong&gt;就能支持集群、分布式&lt;/strong&gt;，只需要 java 环境就可以运行。 这意味着在使用上简单了，在部署上也为企业减少了部署成本、维护难度。使用 ioGame 时，只需一个依赖即可获得整个框架， 而无需安装其他服务，如： Nginx、Redis、MQ、Mysql、ZooKeeper、Protobuf 协议编译工具 ...等。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Fdeploy_flexible" target="_blank"&gt;架构灵活性&lt;/a&gt;方面，ioGame 的架构由三部分组成：1.游戏对外服、2.Broker（游戏网关）、3.游戏逻辑服。 三者既可相互独立，又可相互融合。 这意味着使用 ioGame 可以&lt;strong&gt;适应任何类型的游戏&lt;/strong&gt;，因为只需通过调整部署方式，就可以满足不同类型的游戏需求。 在 ioGame 中进行这些调整工作非常简单，而且不会对现有代码产生不良影响。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;架构是可以动态扩缩的，游戏对外服、游戏逻辑服、Broker（游戏网关）都&lt;strong&gt;支持动态增加和减少&lt;/strong&gt;。 无论未来玩家数量增加或减少，我们都能够轻松应对。 同时，架构是&lt;strong&gt;支持玩家无感知更新&lt;/strong&gt;的，这得益于分布式设计。 举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器， 然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在集群方面，ioGame 的 Broker （游戏网关）采用无中心节点、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fexamples%2Fserver%2Fexample_broker_cluster" target="_blank"&gt;自动化的集群设计&lt;/a&gt;，所有节点平等且自治，不存在单点故障。 集群能够&lt;strong&gt;自动管理和弹性扩缩&lt;/strong&gt;，节点加入或退出时，能够自动保证负载均衡和数据一致性，不影响服务可用性。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在分布式方面，ioGame 的逻辑服使用了分布式设计思想，将服务器分为&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Fexternal_intro" target="_blank"&gt;游戏对外服&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Flogic_intro" target="_blank"&gt;游戏逻辑服&lt;/a&gt;等不同层次， 并且每一层都有明确的职责和接口。这样可以提高代码可读性和可维护性，并且方便进行&lt;strong&gt;水平扩展&lt;/strong&gt;。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在分布式开发体验方面，通常在开发分布式应用时是需要启动多个进程的。 这会让调试与排查问题变得非常困难，从而降低开发者的效率、增加工作量等，这也是很多框架都&lt;strong&gt;解决不了的问题&lt;/strong&gt;，但 ioGame 做到了！ ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分布式系统时更加简单。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual_high%2Fyour_ecology" target="_blank"&gt;生态规划&lt;/a&gt;方面，我们的游戏逻辑服是支持独立运行的，只需接入 Broker（游戏网关）上， 就可以为玩家和其他游戏逻辑服提供功能上的扩展与增强。 我们可以将一些&lt;strong&gt;游戏逻辑服组件化&lt;/strong&gt;，并制作成相对通用的组件，&lt;strong&gt;从而实现功能模块化的可能性&lt;/strong&gt;。这么做有几个优点&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;避免一些重复开发的工作量。&lt;/li&gt; 
    &lt;li&gt;减少各功能模块的耦合。&lt;/li&gt; 
    &lt;li&gt;更符合单一职责的设计，将相对通用的功能扩展成一个个的&lt;strong&gt;功能逻辑服&lt;/strong&gt;。如，公会逻辑服、好友逻辑服、登录逻辑服、抽奖逻辑服、公告逻辑服、排行榜逻辑服...等。&lt;/li&gt; 
    &lt;li&gt;由于模块功能是独立，那么将来可以对任意的功能逻辑服进行扩容，且不需要改动任何代码。&lt;/li&gt; 
    &lt;li&gt;这些组件化后的功能逻辑服就好比一件件武器，积累得足够多时就形成了自己的生态武器库，可以更好的帮助公司与同行竞争。&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;代码泄漏机率更小&lt;/strong&gt;。传统的游戏项目通常采用单机结构，把所有的代码放在一个目录中。这样做有很大的风险，因为如果代码泄漏了，就会泄漏整个项目的内容。当功能模块化后，可以让不同的开发人员只负责自己的游戏逻辑服模块，从而避免代码泄漏的风险和影响。&lt;/li&gt; 
    &lt;li&gt;团队管理员只需要在内网服务器上部署一个游戏网关和游戏对外服，而开发人员就可以在本机上编码和测试自己的游戏逻辑服模块。这样还有以下好处 
     &lt;ul&gt; 
      &lt;li&gt;游戏客户端不会因为游戏逻辑服的变更或重启而断开连接。&lt;/li&gt; 
      &lt;li&gt;开发人员不需要启动其他人的游戏逻辑服模块。&lt;/li&gt; 
      &lt;li&gt;开发人员可以通过 ioGame 自动生成的文档来进行模块间的对接。&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 具备&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Ftrace" target="_blank"&gt;全链路调用日志跟踪&lt;/a&gt;特性，这在分布式下非常的实用。 该特性为每个请求分配一个唯一标识，并记录在日志中，通过唯一标识可以快速的在日志中过滤出指定请求的信息。 ioGame 提供的全链路调用日志跟踪特性更是强大，&lt;strong&gt;支持跨机器、跨进程&lt;/strong&gt;。 简单的说，从玩家的请求进来到结束，无论该请求经过了多少个游戏逻辑服，都能精准记录。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在通讯方式方面，大部分框架只能支持推送（广播）这一类型的通讯方式。 ioGame 则提供了多种&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fcommunication_model" target="_blank"&gt;通讯模型&lt;/a&gt;， 通过对各种通讯方式的组合使用，可以简单完成以往难以完成的工作， 并且这些通讯方式都支持跨进程、跨机器通信，且具备全链路调用日志跟踪。&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;strong&gt;在客户端的角度，提供了如下的通讯模型&lt;/strong&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Frequest_response" target="_blank"&gt;request/response&lt;/a&gt;，请求/响应&lt;/li&gt; 
      &lt;li&gt;request/void，请求/无响应&lt;/li&gt; 
      &lt;li&gt;request/broadcast，请求/广播响应&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A3000%2Fdocs%2Fcommunication%2Fbroadcast" target="_blank"&gt;broadcast&lt;/a&gt;，广播&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;内部通讯主要用于服务器内部之间的通信，跨服、跨进程通信。提供了如下的通讯模型&lt;/strong&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Frequest_response" target="_blank"&gt;request/response&lt;/a&gt;，请求/响应&lt;/li&gt; 
      &lt;li&gt;request/void，请求/无响应&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Frequest_multiple_response" target="_blank"&gt;request/multiple_response&lt;/a&gt;，同时请求同类型多个游戏逻辑服&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Fevent_bus" target="_blank"&gt;EventBus&lt;/a&gt;，分布式事件总线&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Fexternal_biz_region" target="_blank"&gt;ExternalRegion&lt;/a&gt;，访问游戏对外服&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;从 ioGame21 开始，框架添加了虚拟线程的相关支持。 各逻辑服之间通信阻塞部分使用虚拟线程，这样可以很好的避免阻塞业务线程，并大幅提高了框架的吞吐量。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在线程安全方面，框架为开发者解决了单个玩家的&lt;strong&gt;并发问题&lt;/strong&gt;。 即使玩家重新登录后，也会使用相同的线程来消费业务，并推荐使用&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fextension_module%2Fdomain_event" target="_blank"&gt;领域事件&lt;/a&gt;来解决同一房间或业务内多个玩家的并发问题。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Fthread_executor" target="_blank"&gt;框架在线程的扩展性&lt;/a&gt;上提供了友好的支持，开发者可以很容易的编写出无锁并发代码，这得益于 ioGame 独有的线程执行器设计与扩展。 换句话说，你不会因为并发问题烦恼。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在无锁并发方面，ioGame 提供了优雅、独特的线程执行器设计。通过该特性，开发者能轻易的编写出无锁高并发的代码。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在连接方式方面，ioGame 允许开发者&lt;strong&gt;使用一套业务代码&lt;/strong&gt;，&lt;strong&gt;同时支持&lt;/strong&gt;多种连接方式，无需进行任何修改。 ioGame 已经支持了 TCP、WebSocket 和 UDP 连接方式，并且也支持在这几种连接方式之间进行灵活切换。 连接方式是可扩展的，并且扩展操作也很简单，这意味着之后如果支持了 KCP、QUIC， 无论你当前项目使用的是 TCP、WebSocket、UDP，都可以切换成 KCP、QUIC。 即使切换到 KCP、QUIC 的连接方式，现有的业务代码也无需改变。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在通信协议方面，ioGame 让开发者&lt;strong&gt;用一套业务代码&lt;/strong&gt;，就能轻松&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fdata_protocol" target="_blank"&gt;切换和扩展不同的数据协议&lt;/a&gt;， 如 Protobuf、JSON 等。只需一行代码，就可以从 Protobuf 切换到 JSON，无需改变业务方法。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在增减协议方面，ioGame 可以让你在&lt;strong&gt;新增或减少协议&lt;/strong&gt;时，&lt;strong&gt;无需重启&lt;/strong&gt;游戏对外服与 Broker（游戏网关）。 这样既能避免玩家断线，又能避免因新增、减少协议而重启所有机器的痛点。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在协议碎片方面，action 支持自动装箱、拆箱基础类型特性，用于解决&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fprotocol_fragment" target="_blank"&gt;协议碎片&lt;/a&gt;的问题。 同时该特性除了能使你的业务代码更加清晰以外，还能大幅提高开发者在该环节的生产力。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual_high%2Fsame_process" target="_blank"&gt;同进程亲和性&lt;/a&gt;方面，在同一进程内， 不同 Netty 实例之间的通信，是通过内存进行传输的，不需要经过网络传输，数据传输速度极快。 同进程亲和性指的是，优先访问同进程内的游戏逻辑服，当同进程内没有能处理请求的游戏逻辑服时， 才会去其他进程或机器中查找能处理请求的游戏逻辑服。 简单点说，框架对于请求的处理很智能，会优先将请求给同进程内的逻辑服消费。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在开发体验方面，ioGame 非常注重开发者的开发体验。 框架提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcore%2Fjsr380" target="_blank"&gt;JSR380 验证&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fassert_game_code" target="_blank"&gt;断言 + 异常机制&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcore_plugin%2Faction_debug" target="_blank"&gt;业务代码定位&lt;/a&gt;， action 支持自动装箱、拆箱基础类型，用于解决协议碎片的问题 ...等。 诸多丰富的功能，使得开发者的业务代码更加的清晰、简洁。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;业务框架提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fplugin_intro" target="_blank"&gt;插件&lt;/a&gt;机制，插件是可插拨、可扩展的。 框架内置提供了 DebugInOut、action 调用统计、业务线程监控插件、各时间段调用统计插件...等插件。 不同的插件提供了不同的关注点，比如我们可以使用调用、监控等插件相互配合，可以让我们在开发阶段就知道&lt;strong&gt;是否存在性能问题&lt;/strong&gt;。 合理利用好各个插件，可以让我们在开发阶段就能知道问题所在，提前发现问题，提前预防问题。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在部署方面，ioGame 支持&lt;strong&gt;多服单进程&lt;/strong&gt;的方式部署，也支持&lt;strong&gt;多服多进程&lt;/strong&gt;多机器的方式部署，在部署方式上可以随意的切换而不需要更改代码。 日常中我们可以按照单体思维开发，到了生产可以选择性的使用多进程的方式部署。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在安全方面，所有的游戏逻辑服&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Flegacy_system%23Usage-Management" target="_blank"&gt;不需要开放端口，天然地避免了扫描攻击&lt;/a&gt;。 由于不需要为每个逻辑服分配独立的端口，那么我们在使用诸如云服务器之类的服务时，就不需要担心端口开放权限的问题了。 别小看这一个环节，通常这些小细节最浪费开发者的时间。 由于我们不需要管理这些 IP:Port，&lt;strong&gt;这部分的工作量就自然地消失了&lt;/strong&gt;。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在模拟客户端测试方面，ioGame 提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fextension_module%2Fsimulation_client" target="_blank"&gt;压测&amp;amp;模拟客户端请求&lt;/a&gt;模块。 此模块是用于模拟客户端，简化模拟工作量，只需要编写对应请求与回调。 除了可以模拟简单的请求外，通常还可以做一些复杂的请求编排，并支持复杂业务的压测。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;与单元测试不同的是，该模块可以模拟真实的网络环境，并且在模拟测试的过程中与服务器的交互是可持续的、可互动的，同时也是支持自动化的&lt;/strong&gt;。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;使用 ioGame，可以显著的帮助企业减少巨额成本。 文档中，&lt;strong&gt;成本&lt;/strong&gt;关键字提到了很多次，各个阶段均有关联，包括了学习、研发、测试、部署、扩展、投入 ...等各阶段。 在同等资源的竞争下，使用 ioGame 能为公司节省更多的资源，从而提高了自身的生存率。 更重要的是避免了为其他公司做嫁衣的可能性，具体可阅读&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fservices%2Fcost_analysis" target="_blank"&gt;成本分析案例&lt;/a&gt;。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;开发者基于 ioGame 编写的项目模块，通常是条理清晰的，得益于框架对&lt;strong&gt;路由的合理设计&lt;/strong&gt;，同时也为路由提供了优雅的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fexternal%2Faccess_authentication" target="_blank"&gt;访问权限控制&lt;/a&gt;。 当我们整理好这些模块后，对于其他开发者接管项目或后续的维护中，会是一个不错的帮助（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual_high%2Fcode_organization" target="_blank"&gt;代码组织与约定&lt;/a&gt;）。 或许现阶段你感受不到这块的威力，随着你深入地使用实践就能体会到这么设计的诸多好处与优势。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;开发者基于 ioGame 编写的项目，通常是语法简洁的、高性能的、低延迟的。 框架最低要求使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;JDK21&lt;/strong&gt;，这样即可以让项目享受到&lt;strong&gt;分代 ZGC&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;带来的改进，还能享受语法上的简洁。 分代 ZGC 远低于其&lt;strong&gt;亚毫秒级&lt;/strong&gt;暂停时间的目标，可以在不影响游戏速度的情况下，清理掉多余的内存。 这样就不会出现卡顿或者崩溃的问题了，相当于在项目中变相的引入了一位 JVM 调优大师。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;综上所述，ioGame 是一个非常适合网络游戏开发的框架。可以让你轻松地创建高性能、低延迟、易扩展的游戏服务器，并且节省时间和资源。 如果你想要快速地开发出令人惊艳的网络游戏，请不要犹豫，立即选择 ioGame 吧！ 框架屏蔽了很多复杂且重复性的工作，并可为项目中的功能模块结构、开发流程等进行&lt;strong&gt;清晰的组织定义&lt;/strong&gt;，减少了后续的项目维护成本。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;框架在开发、部署、压测&amp;amp;模拟测试 ...等，各个阶段都提供了很好的支持。 相信你已经对 ioGame 有了一个初步的了解，虽然还有很多丰富的功能与特性没有介绍到，但你可以通过后续的实践过程中来深入了解。 感谢你的阅读，并期待你使用 ioGame 来打造自己的游戏服务器。&lt;/p&gt; 
   &lt;hr&gt; 
   &lt;h2&gt;一次编写到处对接，提升巨大的生产力&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fintro%23WriteOnce-IntegrateAnywhere" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 是非常注重开发体验的，代码注释即文档、方法即交互接口的原则。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 具备一次编写到处对接的能力，从而让你们团队提升巨大的生产力。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;一次编写&lt;/strong&gt;指的是编写一次 java 业务代码，而&lt;strong&gt;到处对接&lt;/strong&gt;则是指为不同的前端项目生成与服务器交互的代码。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;你只需要编写一次 java 代码，就能为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2F" target="_blank"&gt;Godot&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.unrealengine.com%2F" target="_blank"&gt;UE&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Funity.com%2F" target="_blank"&gt;Unity&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cocos.com%2F" target="_blank"&gt;CocosCreator&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayaair.layabox.com%2F%23%2F" target="_blank"&gt;Laya&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freact.dev%2F" target="_blank"&gt;React&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvuejs.org%2F" target="_blank"&gt;Vue&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fangular.dev%2F" target="_blank"&gt;Angular&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;...等项目生成统一的交互接口&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 能为各种前端项目生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;action、广播、错误码&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;相关接口代码。 这将意味着，你只需要编写一次业务代码，就可以同时与这些游戏引擎或现代化的前端框架交互。&lt;/p&gt; 
   &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;前端代码生成的几个优势&lt;/p&gt; 
   &lt;ol&gt; 
    &lt;li&gt;帮助客户端开发者减少巨大的工作量，&lt;strong&gt;不需要编写大量的模板代码&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;&lt;strong&gt;语义明确，清晰&lt;/strong&gt;。生成的交互代码即能明确所需要的参数类型，又能明确服务器是否会有返回值。这些会在生成接口时就提前明确好。&lt;/li&gt; 
    &lt;li&gt;由于我们可以做到明确交互接口，进而可以明确参数类型。这使得&lt;strong&gt;接口方法参数类型安全、明确&lt;/strong&gt;，从而有效避免安全隐患，从而&lt;strong&gt;减少联调时的低级错误&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;减少服务器与客户端双方对接时的沟通成本，代码即文档。生成的联调代码中有文档与使用示例，方法上的示例会教你如何使用，即使是新手也能做到&lt;strong&gt;零学习成本&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;帮助客户端开发者屏蔽与服务器交互部分，&lt;strong&gt;将更多的精力放在真正的业务上&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;为双方联调减少心智负担。联调代码使用简单，&lt;strong&gt;与本地方法调用一般丝滑&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;抛弃传统面向协议对接的方式，转而&lt;strong&gt;使用面向接口方法的对接方式&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;当我们的 java 代码编写完成后，我们的文档及交互接口可做到同步更新，&lt;strong&gt;不需要额外花时间去维护对接文档及其内容&lt;/strong&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fintro%23Architecture-Overview-Diagram" target="_blank"&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;hr&gt; 
   &lt;h2&gt;&lt;span&gt;架构简图&lt;/span&gt;&lt;/h2&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="387" src="https://oscimg.oschina.net/oscnet/12963674_5475.jpeg" width="621" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;span style="color:#e8323c"&gt;通过 ioGame 你可以很容易的搭建出一个集群无中心节点、集群自动化、分布式的网络游戏服务器！&lt;/span&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;从图中可以看出，游戏网关支持以集群方式启动多个实例。这个设计选择了集群的方式，因为游戏网关通常是无状态的，主要作用是解耦各逻辑服之间的关系、负载均衡、调度和转发任务。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;而游戏对外服、游戏逻辑服使用分布式设计，支持启动多个相同类型的服务。这意味着，当玩家数量增加时，我们可以轻松增加相应类型的游戏逻辑服以处理更多请求。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;以游戏逻辑服为例，假设我们启动了两个 A 类型的游戏逻辑服，分别为 A-1 和 A-2。当玩家向 A 类型的游戏逻辑服发起多次请求时，游戏网关会使用默认的随机负载策略将请求分配给 A-1 和 A-2 来处理。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;现在我们明白，游戏对外服和游戏逻辑服都支持动态增加和减少。无论未来玩家数量增加或减少，我们都能够轻松应对。架构是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;支持玩家无感知更新&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的，这得益于分布式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;此外，框架还支持玩家&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fidl1wm" target="_blank"&gt;&lt;span&gt;动态绑定游戏逻辑服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;；玩家与游戏逻辑服绑定后，之后的请求都由该游戏逻辑服来处理。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;除了游戏之外，ioGame 也适用于物联网相关项目。只需将图中的玩家视为具体的设备，即使存在数亿个设备，ioGame 的架构也可以轻松支持。从 2022 年开始，已经有一些物联网公司开始采用这一解决方案，并得到了很好的体验。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;ioGame 适用于&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景；&lt;/span&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;无锁异步化与事件驱动的架构设计、集群无中心节点、自带负载均衡、分布式支持、可动态增减机器、避免类爆炸的设计；&lt;/span&gt;&lt;/p&gt; 
 &lt;table border="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:1px solid #d9d9d9; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; table-layout:fixed; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:583px; word-break:keep-all; word-spacing:0px"&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td style="background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;名称&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;扩展方式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;职责&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;与玩家连接、交互&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;游戏逻辑服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;处理具体业务逻辑&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;Broker（游戏网关）&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;集群&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;调度和转发任务；&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;通过 ioGame 可以使得游戏编程变得简单，下面是一个业务示例&lt;/h2&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;数据协议&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;现在，我们定义两个数据协议，用于客户端与服务器的数据交互。 这是一个 jprotobuf 的 pb 对象，jprotobuf 是对 google protobuf 的简化使用，性能同等。&lt;/p&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;可以把这理解成 DTO、POJO、业务数据载体等，其主要目的是用于业务数据的传输。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-java"&gt;@ProtobufClass
public class LoginVerifyMessage {
    public String jwt;
}

@ProtobufClass
public class UserMessage {
    public String name;
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;游戏服务器的编程，游戏服务器接收业务数据后，对业务数据进行处理。 下面这段代码可以同时支持 TCP、WebSocket、UDP 通信方式。&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-java"&gt;@ActionController(1)
public class DemoAction {
    @ActionMethod(0)
    public UserMessage here(LoginVerifyMessage message) {
        var userMessage = new UserMessage();
        userMessage.name = "Michael Jackson, " + message.jwt;
        return userMessage;
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;一个方法（here）在业务框架中表示一个&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsqcevl" target="_blank"&gt;&lt;span&gt;Action&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（一个业务动作）。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;方法声明的参数是用于接收前端传入的业务数据，在方法 return 时，数据就可以被游戏前端接收到。程序员可以不需要关心业务框架的内部细节。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;从上面的示例可以看出，这和普通的 java 类并无区别，同时这种设计方式&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#fa8c16"&gt;避免了类爆炸&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。如果&lt;/span&gt;&lt;span style="color:#e8323c"&gt;只负责编写游戏业务&lt;/span&gt;&lt;span&gt;，那么对于业务框架的学习可以&lt;/span&gt;&lt;span style="color:#e8323c"&gt;到此为止&lt;/span&gt;&lt;span&gt;了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#f5222d"&gt;游戏编程就是如此简单&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;问：我可以开始游戏服务&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;器&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;的编程了吗？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;是的，你已经可以开始游戏服务&lt;/span&gt;&lt;span style="color:#333333"&gt;器&lt;/span&gt;&lt;span&gt;的编程了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;访问示例（控制枱）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;当我们访问&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#e8323c"&gt;here&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;方法时（通常由游戏前端来请求），控制枱将会打印&lt;/span&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;┏━━━━━ &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;Debug&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[(DemoAction.java:4).hello]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[cmd:1-0 65536]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[逻辑服 [xxx 逻辑服]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[76526c134cc88232379167be83e4ddfc]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]
┣ &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;userId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
┣ 参数: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;active&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(id=&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;101&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, name=塔姆)
┣ 响应: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(name=塔姆, I'm here )
┣ 时间: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (业务方法总耗时)
┗━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[ioGameVersion]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[线程:User-8-2]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[traceId:956230991452569600]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;控制枱打印说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e8323c"&gt;Debug. [(DemoAction.java:4).here]&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;表示执行业务的是&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;DemoAction&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;类下的&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;here&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;方法，&lt;/span&gt;&lt;span style="color:#f5222d"&gt;4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;表示业务方法所在的代码行数。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;在工具中点击控制枱的&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;DemoAction.java:4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;这条信息，就可以跳转到对应的代码中（&lt;/span&gt;&lt;span style="color:#52c41a"&gt;快速导航到对应的代码&lt;/span&gt;&lt;span&gt;），这是一个开发良好体验的开始！&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;userId&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: 当前发起请求的，用户 id。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;参数&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: 通常是游戏前端传入的值。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;响应&lt;/span&gt;&lt;span&gt;：通常是业务方法返回的值 ，业务框架会把这个返回值推送到游戏前端。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;时间&lt;/span&gt;&lt;span&gt;：执行业务方法总耗时，我们可根据业务方法总耗时的时长来优化业务。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;路由信息&lt;/span&gt;&lt;span&gt;：[cmd - subCmd]&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsoxp4u" target="_blank"&gt;&lt;span&gt;路由&lt;/span&gt;&lt;/a&gt;&lt;span&gt;是唯一的访问地址。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;ioGameVersion&lt;/span&gt;&lt;span&gt;：表示当前所使用的 ioGame 版本。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;线程&lt;/span&gt;&lt;span&gt;：当前执行 action 所使用的线程。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;traceId&lt;/span&gt;&lt;span&gt;：全链路调用日志跟踪 id，每个请求唯一。（该特性在分布式下非常实用）&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;逻辑服&lt;/span&gt;&lt;span&gt;：当前游戏逻辑服与其 id&lt;/span&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;有了以上信息，游戏开发者可以很快的定位问题。如果没有可视化的信息，开发中会浪费很多时间在前后端的沟通上。问题包括：&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span&gt;是否传参问题 （游戏前端说传了）&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;是否响应问题（游戏后端说返回了）&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;业务执行时长问题 （游戏前端说没收到响应， 游戏后端说早就响应了）&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;其中&lt;/span&gt;&lt;span style="color:#f5222d"&gt;代码导航&lt;/span&gt;&lt;span&gt;可以让开发者快速的跳转到业务类对应代码中，在多人合作的项目中，可以快速的知道业务经过了哪些方法的执行，使得我们可以快速的进行阅读或修改；&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;h2&gt;&lt;span&gt;适合人群？&lt;/span&gt;&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span style="color:#333333"&gt;长期从事 web 内部系统开发人员， 想了解游戏的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style="color:#333333"&gt;刚从事游戏开发的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style="color:#333333"&gt;未从事过游戏开发，但却对其感兴趣的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;对设计模式在实践中的应用和 sofa-bolt 有兴趣的学习者&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;可以接受新鲜事物的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style="color:#40485b"&gt;想放弃祖传代码的&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;推荐实际编程经验一年以上的人员。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;ioGame&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;提供了丰富的在线高质量使用文档，为你的团队助力，带上你们的小伙伴一起，这样就不用手把手的教了。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355976/iogame-21-28-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355976/iogame-21-28-released</guid>
      <pubDate>Sat, 10 May 2025 07:17:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>OrientDB 3.2.41 发布，多模 NoSQL 数据库</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#333333"&gt;OrientDB 是兼具文档数据库的灵活性和图形数据库管理链接能力的可深层次扩展的文档 - 图形数据库管理系统。可选无模式、全模式或混合模式。支持许多高级特性，诸如 ACID 事务、快速索引、原生和 SQL 查询功能。可以导入 JSON 格式、导出文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#333333"&gt;OrientDB 3.2.41 现已发布，&lt;/span&gt;&lt;span style="color:#1f2328"&gt;此版本主要修复了推送请求，以减少发生错误时的会话保留&lt;/span&gt;。具体更新内容包括：&lt;/p&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Changes&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Core&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复&amp;nbsp;legacy listener API&amp;nbsp;的注册和取消注册的同步问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Server&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;推送管理器并发订阅和取消订阅的小修复&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Client&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加响应处理中的日志记录&lt;/li&gt; 
 &lt;li&gt;确保在连接失败时终止推送订阅连接&lt;/li&gt; 
 &lt;li&gt;简化了推送客户端的连接返回&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Distributed&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;确保取消失败的 DDL 的承诺&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Distributed&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Forientechnologies%2Forientdb-community%2F3.2.41%2Forientdb-community-3.2.41.tar.gz" target="_blank"&gt;orientdb-community-3.2.41.tar.gz&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Forientechnologies%2Forientdb-community%2F3.2.41%2Forientdb-community-3.2.41.zip" target="_blank"&gt;orientdb-community-3.2.41.zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Forientechnologies%2Forientdb-tp3%2F3.2.41%2Forientdb-tp3-3.2.41.tar.gz" target="_blank"&gt;orientdb-tp3-3.2.41.tar.gz&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Forientechnologies%2Forientdb-tp3%2F3.2.41%2Forientdb-tp3-3.2.41.zip" target="_blank"&gt;orientdb-tp3-3.2.41.zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Forientechnologies%2Fagent%2F3.2.41%2Fagent-3.2.41.jar" target="_blank"&gt;agent-3.2.41.jar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forientechnologies%2Forientdb%2Freleases%2Ftag%2F3.2.41" target="_blank"&gt;https://github.com/orientechnologies/orientdb/releases/tag/3.2.41&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355967/orientdb-3-2-41-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355967/orientdb-3-2-41-released</guid>
      <pubDate>Sat, 10 May 2025 06:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Bootstrap 5.3.7 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Bootstrap 5.3.7 现已发布，具体更新内容如下：&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Documentation&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复损坏的&lt;strong&gt;「View on GitHub」&lt;/strong&gt;URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更正了「Download examples」&lt;/strong&gt;按钮生成的 HTML&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;内容&lt;/li&gt; 
 &lt;li&gt;完善 sanitizer 文档，使其更加清晰完整&lt;/li&gt; 
 &lt;li&gt;改进了&lt;strong&gt;「On this page」&lt;/strong&gt;目录和章节标题锚链接的可访问性&lt;/li&gt; 
 &lt;li&gt;将广告移至右侧边栏，以最大限度地减少内容回流&lt;/li&gt; 
 &lt;li&gt;在&lt;strong&gt;下载&lt;/strong&gt;页面上为 Intelissence 扩展添加了一个新部分&lt;/li&gt; 
 &lt;li&gt;阐明了&lt;strong&gt;「Via JavaScript」&lt;/strong&gt;使用 Accordion Collapse 的示例&lt;/li&gt; 
 &lt;li&gt;改进内部文档以支持未来的维护（对用户无明显影响）&lt;/li&gt; 
 &lt;li&gt;在介绍页面中提及 CDN&lt;code&gt;integrity&lt;/code&gt;和&lt;code&gt;crossorigin&lt;/code&gt;属性&lt;/li&gt; 
 &lt;li&gt;增强&amp;nbsp;floating labels&lt;code&gt;placeholder&lt;/code&gt;的使用说明&lt;/li&gt; 
 &lt;li&gt;添加显示动态范围值与输出的示例&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Sass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;合并了 box-shadow Sass mixin 中的多个&lt;code&gt;'none'&lt;/code&gt;值，使输出更整洁&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;通过&lt;code&gt;trigger: "hover click"&lt;/code&gt;配置修复弹出窗口和工具提示行为&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Contributions&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;向存储库添加了推荐的&amp;nbsp;&lt;strong&gt;VSCode 扩展和设置配置&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftwbs%2Fbootstrap%2Freleases%2Ftag%2Fv5.3.7" target="_blank"&gt;https://github.com/twbs/bootstrap/releases/tag/v5.3.7&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355959/bootstrap-5-3-7-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355959/bootstrap-5-3-7-released</guid>
      <pubDate>Sat, 10 May 2025 05:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ThingsPanel 发布 AI 小智开源支持，免费商用，打通全行业 IoT 场景</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;div&gt;
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 发布 AI 小智开源支持&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;，并免费商用。给行业带来诸多独特价值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/div&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 是一个开源的物联网平台，支持广泛的协议和设备接入能力，具备场景联动能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;AI 小智是一个基于 ESP32 的语音设备，自带 AI 语音交互、大模型意图判断，可通过 MCP 调用大模型。是一个 AI 的设备入口。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;1. 功能介绍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 实现了和小智 AI 语音助手双向数据互通，支持通过小智查询系统概况、操控设备、下发指令、查询遥测、处理告警、复杂查询，综合性复杂指令执行等功能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智通过语音与 ThingsPanel 的 MCP（大模型上下文协议）交互，实现对 ThingsPanel 所管理的所有设备实现监测控制能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;体现到应用场景，可进一步为用户带来更生动、个性化的体验。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;2. 代码库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
  &lt;table border="1" cellspacing="0" style="border-collapse:collapse; border:1px solid #cbcdd1; table-layout:fixed"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:101.26666666666667px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;组件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:154.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;作用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:297.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;代码库&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:101.26666666666667px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智连接器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:154.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智设备注册管理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:297.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://gitee.com/ThingsPanel/service-plugin-esp32"&gt;https://gitee.com/ThingsPanel/service-plugin-esp32&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:101.26666666666667px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智 Server&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:154.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;语音识别意图判断&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:297.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://gitee.com/ThingsPanel/xiaozhi-esp32-server"&gt;https://gitee.com/ThingsPanel/xiaozhi-esp32-server&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:101.26666666666667px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;MCP Server&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:154.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;AI 操作 ThingsPanel&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:297.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://gitee.com/ThingsPanel/thingspanel-mcp"&gt;https://gitee.com/ThingsPanel/thingspanel-mcp&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:101.26666666666667px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ESP32 固件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:154.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;设备固件，入口&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
     &lt;td style="border-bottom:1px solid #cbcdd1; border-left:1px solid #cbcdd1; border-right:1px solid #cbcdd1; border-top:1px solid #cbcdd1; height:27px; vertical-align:middle; width:297.4px"&gt; &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://gitee.com/ThingsPanel/xiaozhi-esp32"&gt;https://gitee.com/ThingsPanel/xiaozhi-esp32&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
  &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;3. ThingsPanel 整合小智带来的独特作用和特殊价值&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;3.1 给小智带来了一个坚实的物联网平台底座&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;AI 小智发展很快，从虾哥的固件开始，快速出现了支持后台，响应了社区的各种需求，功能多方面发展。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;但是在物联网平台层面，并非小智重点&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;，如果要支持智能家居，就需要整合 HomeAssistant，如果要支持其他，得自己想办法。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;现在 ThingsPanel 整合了小智之后，底座的事情不用考虑了，ThingsPanel 物联网平台已经迭代了多年，结合了广泛的需求和用户验证。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;3.2 快速赋能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;行业与产业&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;AI 小智现在能操作的设备有限，目前支持 HomeAssistant、具备固定的一些功能调用指令，如果想支持到行业产业，扩展到交通、电力、能源等其他产业，道路还很长。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;而 ThingsPanel 是全行业全场景的物联网平台。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;现在 ThingsPanel 发布小智支持，直接使得小智可以应用在全行业，立即，马上。只要你接入设备，即可实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;场景举例 1：进入电梯间&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智：我是小智，你去几楼，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;用户：我去 28 楼&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智：黄灯闪亮的电梯去 28 楼，我已经帮你按了 28 楼的按键，请直接进入。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;【免除了寻找高区和地区电梯，进入之后手动操作按键】&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;场景举例 2: 操作灯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;用户：没有人的房间的灯帮我都关了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智：我发现房间 1 3 8 没有人，这些屋子的灯我都关闭了，如果你需要的话，我可以帮你设置一个规则，只要屋子没有人，就自动开灯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;用户：好的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;小智：已经设置好规则，只要人离开房间，灯会自动熄灭。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;【能从多个传感器的数据进行判断，形成复杂的总结，也能判断人的意图，询问意见】&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;3.3 立即赋予&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;多协议多设备接入能力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 物联网平台支持 MQTT、HTTP、Modbus、LoRa、OPC-UA、GB28181 视频等各种协议，支持从中国移动 OneNet、中国电信物联网平台、海康安防平台等多种平台的接入，兼容全行业各种物联网网关。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 与小智整合后，小智如果要监测控制其他协议设备，很简单，只需要使用 ThingsPanel。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;3.4 大规模接入能力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 物联网平台，经过测试，如果使用树莓派 4，采用 SSD，1 分钟的发送频率，可实现 20 万个设备数据接入点。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 整合小智后，一方面可以支持各种 AI 硬件的产业化，另外使小智直接可以与规模化物联网设备交互，大大强化了小智的能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span&gt;&lt;span&gt;4. 总结&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;ThingsPanel 对 AI 小智的整合，意味着一个真正具备 AI 语音能力的「物联网入口」诞生了。小智的 AI 能力不再局限于个体功能演示，而是通&lt;strong&gt;过 ThingsPanel 这个成熟的平台，获得了广泛协议支持、强大的设备管理能力、以及行业级的扩展可能性&lt;/strong&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;不论是智能家居、工业自动化、智慧城市，还是交通能源等复杂应用场景，AI 小智+ThingsPanel 都可以提供「开箱即用」的 AI 物联网能力。这不仅是一次平台级融合，更是一次生态级的跨越。未来，AI 语音与物联网的结合将更深入、更智能、更普及，而这一切，从现在的整合开始。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355958</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355958</guid>
      <pubDate>Sat, 10 May 2025 05:55:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Linux 桌面环境 KDE Plasma 6.4 发布，带来多项出色改进</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;KDE Plasma 6.4 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkde.org%2Fzh-cn%2Fannouncements%2Fplasma%2F6%2F6.4.0%2F" target="_blank"&gt;已发布&lt;/a&gt;，为这款开源桌面带来了诸多精彩的改进。KDE Plasma 6.4 持续增强了对 Wayland 的支持，分离了 KWin X11 代码，以便更好地与日益增长的 Wayland 优先理念相分离。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-13c517526201b297f34a6dcaf329d9b315d.png" referrerpolicy="no-referrer"&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3a7a8490ff36dd30ab5e4346cf264c1f437.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;主要变化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;允许为每一个虚拟桌面选择不同的磁贴布局；&lt;/li&gt; 
 &lt;li&gt;支持用数字键盘键移动指针，触控板手势放大或缩小；&lt;/li&gt; 
 &lt;li&gt;增加前景和背景元素之间的对比度；&lt;/li&gt; 
 &lt;li&gt;改进了 Info Center 和 KMenuEdit 的外观；&lt;/li&gt; 
 &lt;li&gt;文件传输通知会显示直观的进度图；&lt;/li&gt; 
 &lt;li&gt;可直接通过可用更新通知安装更新；&lt;/li&gt; 
 &lt;li&gt;应用全屏模式下将进入「请勿打扰」模式，将只会显示紧急通知；&lt;/li&gt; 
 &lt;li&gt;当应用尝试访问麦克风发现麦克风静音时会弹出通知；等等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plasma&amp;nbsp;6.4 还带来了多项性能提升、更强大的绘图板支持、更强大的 HDR / 色彩管理、更佳的通知体验、更流畅的系统监视器应用，以及诸多其他桌面优化和错误修复，其中还有大量新功能和其他改进，旨在进一步优化 Plasma 6 桌面体验。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkde.org%2Fannouncements%2Fplasma%2F6%2F6.4.0%2F" target="_blank"&gt;通过 KDE.org&lt;/a&gt;&amp;nbsp;可以查看有关 Plasma 6.4 的更多详细信息和屏幕截图。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355943/kde-plasma-6-4</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355943/kde-plasma-6-4</guid>
      <pubDate>Sat, 10 May 2025 03:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>全新轻量 ioc/aop 框架 loveqq，新增 @Await 新特性，支持异步调用自动转同步调用</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;strong&gt;介绍&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;@Async&lt;/strong&gt;：支持自动将普通方法转为异步调用&lt;/p&gt; 
&lt;p&gt;但是该功能有一个小问题，就是某些业务又需要同步调用时难以实现，特别是返回值为 void 时，这时候只能修改代码兼容两种逻辑&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;@Async.Await&lt;/strong&gt;：该注解支持将异步调用自动转为同步调用&lt;/p&gt; 
&lt;p&gt;直接注解在方法上，那么该方法体的整个调用链路的异步调用都将自动转为同步调用，不仅仅是 @Async 注解的方法，返回值为 Future/CompletionStage 的方法也将自动转为同步调用&lt;br&gt; &amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;br&gt; 下面是代码示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;package com.kfyty.demo;

import com.kfyty.loveqq.framework.boot.K;
import com.kfyty.loveqq.framework.core.autoconfig.CommandLineRunner;
import com.kfyty.loveqq.framework.core.autoconfig.annotation.Async;
import com.kfyty.loveqq.framework.core.autoconfig.annotation.Autowired;
import com.kfyty.loveqq.framework.core.autoconfig.annotation.BootApplication;
import com.kfyty.loveqq.framework.core.autoconfig.annotation.Component;
import com.kfyty.loveqq.framework.core.utils.CommonUtil;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Async
@BootApplication
public class Main implements CommandLineRunner {
    @Autowired
    private Main main;

    @Autowired
    private AsyncService asyncService;

    @Override
    public void run(String... args) throws Exception {
//        main.test();
        main.testAwait();
    }

    /**
     * 结果输出 0，因为内部调用的是异步方法
     */
    public void test() {
        asyncService.asyncProcess();
        System.out.println(asyncService.getState());
    }

    /**
     * 结果输出 1，因为内部调用异步方法自动转为了同步
     */
    @Async.Await
    public void testAwait() {
        asyncService.asyncProcess();
        System.out.println(asyncService.getState());
    }

    public static void main(String[] args) throws Exception {
        K.run(Main.class, args);
    }

    @Async
    @Component
    public static class AsyncService {
        @Getter
        private int state = 0;

        @Async
        public void asyncProcess() {
            // 模拟业务耗时
            CommonUtil.sleep(500);

            // 修改状态
            this.state = 1;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;新特性注解源码：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;package com.kfyty.loveqq.framework.core.autoconfig.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * 描述: 用以支持异步任务
 * &amp;lt;b&amp;gt;
 * 仅在类上同时注释时，方法注释才有效
 * &amp;lt;/b&amp;gt;
 *
 * @author kfyty725
 * @date 2021/6/26 11:03
 * @email kfyty725@hotmail.com
 * @see com.kfyty.loveqq.framework.boot.proxy.AsyncMethodInterceptorProxy
 */
@Documented
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.TYPE, ElementType.METHOD})
public @interface Async {
    /**
     * 执行该任务的线程池的 bean name，必须是 {@link java.util.concurrent.ExecutorService} 的子类
     */
    String value() default "";

    /**
     * 用于支持异步方法转同步
     * 被注解的方法中，当在该方法体中 (该方法的整个调用链路中) 调用其他异步方法时，其他异步方法自动转为同步调用，而无需显示手动等待
     * &amp;lt;p&amp;gt;
     * 其他异步方法包含 {@link Async} 注解的方法，以及返回值为 {@link java.util.concurrent.Future}/{@link java.util.concurrent.CompletionStage} 的可代理方法
     * &amp;lt;b&amp;gt;
     * 仅在类上同时注释 {@link Async} 时，方法注释才有效
     * &amp;lt;/b&amp;gt;
     * &amp;lt;/p&amp;gt;
     */
    @Documented
    @Retention(RetentionPolicy.RUNTIME)
    @Target(ElementType.METHOD)
    @interface Await {
        /**
         * 由于整个调用链路有效，因此如果有某个异步方法必须异步，则可以再次注解该方法，并设置为 false，则可以覆盖之前的设置
         *
         * @return true/false
         */
        boolean value() default true;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;感兴趣的同学可以看一下&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355942</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355942</guid>
      <pubDate>Sat, 10 May 2025 03:29:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Grafana 12.0.2 发布，系统指标监控与分析平台</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Grafana 是一个用于监控和可观察性的开源平台，可视化来自 Prometheus、Loki、Elasticsearch、InfluxDB、Postgres 等多个来源的指标、日志等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Grafana 12.0.1 正式发布，主要更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Features and enhancements&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;strong&gt;Dependencies：&lt;/strong&gt;将 Go 升级到 v1.24.4&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F106565" target="_blank"&gt;#106565&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dependencies：&lt;/strong&gt;将 github.com/openfga/openfga 升级到 v1.8.13 以解决&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fadvisories%2FGHSA-c72g-53hw-82q7" target="_blank"&gt;CVE-2025-48371&amp;nbsp;&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F106116" target="_blank"&gt;#106116&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage：&lt;/strong&gt;考虑&lt;code&gt;migration_locking&lt;/code&gt;设置&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F105951" target="_blank"&gt;#105951&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4 style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#1f2328"&gt;Bug fixes&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Alerting：&lt;/strong&gt;修复查询单个数据源时 $value 类型&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F106101" target="_blank"&gt;#106101&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerting：&lt;/strong&gt;修复导入 API 中的组级标签和 query_offset&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F106392" target="_blank"&gt;#106392&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Azure：&lt;/strong&gt;修复 Application Insights 元数据请求&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F105838" target="_blank"&gt;#105838&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;组织：&lt;/strong&gt;修复 org deletion 问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Fpull%2F106461" target="_blank"&gt;#106461&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;安全性：&lt;/strong&gt;修复 CVE-2025-3415&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgrafana%2Fgrafana%2Freleases%2Ftag%2Fv12.0.2" target="_blank"&gt;https://github.com/grafana/grafana/releases/tag/v12.0.2&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355935/grafana-12-0-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355935/grafana-12-0-2-released</guid>
      <pubDate>Sat, 10 May 2025 02:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Redisson 3.50.0 发布，官方推荐的 Redis 客户端</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Redisson 3.50.0&amp;nbsp;现已发布，这是一个 Java 编写的 Redis 客户端，具备驻内存数据网格（In-Memory Data Grid）功能，并获得了 Redis 的官方推荐。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此版本更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;strong style="color:#000000"&gt;Feature&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;Apache Tomcat SSO 集成&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;Valkey 和 Redis url 可能只包含密码&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong style="color:#333333"&gt;Fixed&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Redisson 无法连接到 Azure Managed Redis Cluster&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;commons-codec 和 json-smart 库已更新&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;抛出 IllegalArgumentException: tickDuration : 0 (expected: &amp;gt; 0) 错误&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson%2Freleases%2Ftag%2Fredisson-3.50.0" target="_blank"&gt;https://github.com/redisson/redisson/releases/tag/redisson-3.50.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355923/redisson-3-50-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355923/redisson-3-50-0-released</guid>
      <pubDate>Sat, 10 May 2025 02:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>PulsarRPA v3.0.10 发布，分布式机器人流程自动化（RPA）框架</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;PulsarRPA v3.0.10 已经发布，分布式机器人流程自动化（RPA）框架。&lt;/p&gt; 
&lt;h2&gt;Release &lt;code&gt;3.0.10&lt;/code&gt;&lt;/h2&gt; 
&lt;h3&gt;Artifacts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JAR File&lt;/strong&gt;: "PulsarRPA.jar"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;: 325MB&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Java Version&lt;/strong&gt;: 17+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Changes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Merge branch 'master' into 3.0.x (98d346cad)&lt;/li&gt; 
 &lt;li&gt;fix: update download links in README files to version v3.0.10 (5ab0852d0)&lt;/li&gt; 
 &lt;li&gt;fix: update release.yml to use separate Docker username and image name for improved clarity (c52058a8e)&lt;/li&gt; 
 &lt;li&gt;feat: add integration tests action and update workflows to utilize it (ba96bc76d)&lt;/li&gt; 
 &lt;li&gt;fix: update release.yml and documentation scripts for improved version handling and validation (ed4fc718c)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;# LLM features enabled
java -DEEPSEEK_API_KEY= -jar PulsarRPA.jar
# No LLM features
java -jar PulsarRPA.jar
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;Built on 2025-06-18 02:10:39 UTC&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/platonai_galaxyeye/PulsarRPA/releases/v3.0.10"&gt;https://gitee.com/platonai_galaxyeye/PulsarRPA/releases/v3.0.10&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355921</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355921</guid>
      <pubDate>Sat, 10 May 2025 02:11:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>smart-mqtt v1.2.0 已经发布，MQTT Broker 服务</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;smart-mqtt v1.2.0 已经发布，MQTT Broker 服务&lt;/p&gt;
&lt;p&gt;此版本更新内容包括：&lt;/p&gt;
&lt;h1&gt;smart-mqtt v1.2.0 正式发布&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;经过持续打磨与优化，我们很高兴地宣布 &lt;strong&gt;smart-mqtt v1.2.0&lt;/strong&gt; 正式发布！作为 Java 生态中最轻量级的 MQTT Broker 解决方案，本次版本聚焦于&lt;strong&gt;性能优化与资源管理增强&lt;/strong&gt;，进一步提升了系统在高并发场景下的稳定性与效率。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;核心更新亮点&lt;/h2&gt; 
&lt;h3&gt;✅ 性能与稳定性提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;strong&gt;异步 + 批处理机制&lt;/strong&gt;：优化指标数据入库流程，降低数据库写入压力。&lt;/li&gt; 
 &lt;li&gt; &lt;strong&gt;智能资源回收&lt;/strong&gt;：自动识别闲置 Topic 并释放内存资源；h2 数据库默认启用文件持久化模式，避免长期运行内存过高。&lt;/li&gt; 
 &lt;li&gt; &lt;strong&gt;订阅结构重构&lt;/strong&gt;：优化大规模 Topic 订阅场景下的处理效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✅ 功能优化与修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 MqttClient 在特定情况下丢失 version 字段的问题&lt;/li&gt; 
 &lt;li&gt;规范 retain 消息实现逻辑&lt;/li&gt; 
 &lt;li&gt;改进启动日志输出体验&lt;/li&gt; 
 &lt;li&gt;增强新版本检测与压测工具重连功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✅ 依赖精简&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除 &lt;code&gt;commons-lang&lt;/code&gt; 和 &lt;code&gt;slf4j&lt;/code&gt; 等第三方依赖包，减少潜在冲突，进一步减小发行包体积。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;组件升级&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;组件&lt;/th&gt; 
   &lt;th&gt;升级至版本&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;feat&lt;/td&gt; 
   &lt;td&gt;1.1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;smart-socket&lt;/td&gt; 
   &lt;td&gt;1.5.69&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;获取方式&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub 镜像地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fsmartboot%2Fsmart-mqtt" target="_blank" rel="nofollow"&gt;https://github.com/smartboot/smart-mqtt&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt;Gitee 主仓库：&lt;a href="https://gitee.com/smartboot/smart-mqtt" target="_blank" rel="nofollow"&gt;https://gitee.com/smartboot/smart-mqtt&lt;/a&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速部署（Docker）&lt;/h2&gt; 
&lt;div class="markdown-code-block"&gt; 
 &lt;pre class="bash"&gt;&lt;code&gt;docker run --name smart-mqtt \
  -p 18083:18083 \
  -p 1883:1883 \
  -d smartboot/smart-mqtt:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div class="markdown-code-block-copy-btn"&gt;&lt;/div&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web 控制枱访问地址：&lt;code&gt;http://localhost:18083&lt;/code&gt; &lt;/li&gt; 
 &lt;li&gt;MQTT 通信端口：&lt;code&gt;1883&lt;/code&gt; &lt;/li&gt; 
&lt;/ul&gt;
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/smartboot/smart-mqtt/releases/v1.2.0" rel="nofollow"&gt;https://gitee.com/smartboot/smart-mqtt/releases/v1.2.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355918</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355918</guid>
      <pubDate>Sat, 10 May 2025 02:06:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>小蚂蚁云 XiaoMaYi-EleVue 单体敏捷开发框架 v1.0.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;v1.0.0 更新内容：&lt;br&gt; 1、全新架构设计；&amp;nbsp;&lt;br&gt; 2、全系支持 JDK17;&amp;nbsp;&lt;br&gt; 3、全系支持 MySQL、PostgreSQL、SqlServer、Sqlite 等数据库；&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、TypeScript、Vite、ElementPlus、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringBoot3、SpringSecurity、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用 ElementPlus 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;ElementPlus&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：小蚂蚁云单体 Vue3+ElementPlus 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@小蚂蚁团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xiaomayicloud.com" target="_blank"&gt;https://www.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.elevue.xiaomayicloud.com" target="_blank"&gt;http://docs.elevue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.elevue.xiaomayicloud.com" target="_blank"&gt;http://manage.elevue.xiaomayicloud.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;在线用户：主要用于在线用户的维护以及强制退出登录；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;缓存监控：主要对系统缓存信息进行统计和监控查阅；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;小蚂蚁云微服务 Consul+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Consul、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue"&gt;https://gitee.com/xiaomayicloud/XiaoMaYi-Consul-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p&gt;&lt;br&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8322330914b7e3d447ddf043e2396087e4b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;开源协议&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;开源软件遵循&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html" target="_blank"&gt;Apache 2.0 协议&lt;/a&gt;。 允许商业使用，但务必保留包括但不限于开源团队、软件作者、版权说明等信息。&lt;/p&gt; 
&lt;h4&gt;版权信息&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件产品版权和最终解释权归【小蚂蚁开源团队】所有，商业版使用需授权，禁止恶意传播和用于商业用途，否则将追究相关人的法律责任。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;版权所有 Copyright © 2020~2025&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxiaomayicloud.com" target="_blank"&gt;xiaomayicloud.com&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;All rights reserved。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355910</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355910</guid>
      <pubDate>Sat, 10 May 2025 01:11:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>蓝鲸云 LanJing-ArcoVue 单体敏捷开发框架 v1.0.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v1.0.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、全新升级 JDK17；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、全新设计软件架构；&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;项目介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、TypeScript、Vite、ArcoDesign、MySQL 等技术栈实现的单体前后端分离后台管理系统；后端基于 Java 语言采用 SpringBoot3、SpringSecurity、MybatisPlus、MySQL 等主流技术栈，前端基于 Vue3、TypeScript、Vite 等技术栈实现，采用&amp;nbsp;ArcoDesign 前端 UI 框架，基于目前 Vue 前后端分离主流设计思想，为了实现精细化分工，模块化、组件化开发模式，目前采用完全前后端分离架构实现，前端应用通过 API 调用后端服务的方式实现数据交互；整套系统拥有完善的 RBAC 权限架构体系，权限颗粒度精细至按钮级别，支持多主题切换模式，多端兼容手机客户端、PAD 平板、PC 电脑等终端设备，提升了用户使用体验；同时为了简化开发，本身集成了基础模块，如用户模块、角色模块、菜单模块、部门模块、岗位模块、职级模块、日志模块、租户模块、字典模块、配置模块、行政区划、任务调度等基础功能模块； 为了支持个别企业和开发者多租户功能需求，在设计之初已重点设计并支持多租户功能；为了实现项目快速开发，官方自定义研发了整套代码生成器功能，可以根据单个规范的数据表结构一键生成模块的后端文件代码和前端模块代码；为了高度适配企业、政府和开发者定制化项目的需求，目前单体前后端分离架构发行了多个版本，根据实际需求按需选择即可，软件框架本身已集成了权限架构体系和基础功能模块，极大的提高了开发效率，降低了项目研发成本以及节省了人力。&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模块化&lt;/code&gt;、&lt;code&gt;插件化&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;设计，实现核心类库按需引入；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue3&lt;/code&gt;、&lt;code&gt;TypeScript&lt;/code&gt;、&lt;code&gt;ArcoDesign&lt;/code&gt;、&lt;code&gt;Vite&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等技术实现完全前后端分离；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;、&lt;code&gt;hutool&lt;/code&gt;、&lt;code&gt;fastjson2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Json Web Token&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;、&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术等令牌生成机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;AOP&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;切面技术实现日志及权限访问控制，颗粒度至按钮节点级别；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;验证器，实现&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DTO&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;参数严格校验；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SpringDoc&lt;/code&gt;、&lt;code&gt;knife4j&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现在线文档查看；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;redis&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;缓存技术记录登录信息，实现在线强制退出机制；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mybatis-plus-generator&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现代码生成器，一键生成模块文件；&lt;/li&gt; 
 &lt;li&gt;采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;MybatisPlus&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实现多租户数据隔离策略；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;阿里短信&lt;/code&gt;、&lt;code&gt;邮件&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等核心功能，实现业务解耦；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;在线监控&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;技术，实现应用健康度、性能在线监控；&lt;/li&gt; 
 &lt;li&gt;集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Druid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数据库连接池，用于管理数据库连接；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;软件信息&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;软件名称：蓝鲸云单体 Vue3+ArcoDesign 版&lt;/li&gt; 
 &lt;li&gt;软件作者：@蓝鲸云团队&lt;/li&gt; 
 &lt;li&gt;软件协议：Apache-2.0&lt;/li&gt; 
 &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lanjingcloud.vip" target="_blank"&gt;https://www.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.arcovue.lanjingcloud.vip" target="_blank"&gt;http://docs.arcovue.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.arcovue.lanjingcloud.vip" target="_blank"&gt;http://manage.arcovue.lanjingcloud.vip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;功能模块&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;主控制枱：纯静态页面，提供给有需要的企业、开发者做定制化使用；&lt;/li&gt; 
 &lt;li&gt;用户管理：实现用户数据录入于管理，增强了账户安全；&lt;/li&gt; 
 &lt;li&gt;角色管理：基于 RBAC 权限架构体系，实现角色权限的管理；&lt;/li&gt; 
 &lt;li&gt;菜单管理：用于权限菜单数据管理以及菜单节点权限数据管理；&lt;/li&gt; 
 &lt;li&gt;部门管理：用于管理系统架构体系中的部门数据；&lt;/li&gt; 
 &lt;li&gt;岗位管理：针对用户岗位属性的数据进行统一维护管理；&lt;/li&gt; 
 &lt;li&gt;租户管理：主要对租户入住数据进行管理和租户账号开通管理；&lt;/li&gt; 
 &lt;li&gt;日志管理：用于登录日志、操作日志管理和维护；&lt;/li&gt; 
 &lt;li&gt;参数管理：用于对系统核心参数的定义和管理；&lt;/li&gt; 
 &lt;li&gt;配置管理：用于对动态配置参数的统一管理和设置；&lt;/li&gt; 
 &lt;li&gt;字典管理：用于对字典数据、字典项数据的管理为维护；&lt;/li&gt; 
 &lt;li&gt;通知公告：主要对通知、公告等站外、站内数据进行管理；&lt;/li&gt; 
 &lt;li&gt;行政区划：针对全国行政区划分数据进行管理和维护；&lt;/li&gt; 
 &lt;li&gt;消息管理：对系统消息模块进行查阅和管理；&lt;/li&gt; 
 &lt;li&gt;短信日志：主要用于记录发送短信的日志信息进行管理；&lt;/li&gt; 
 &lt;li&gt;邮件日志：主要用于记录邮件发送记录和数据维护管理；&lt;/li&gt; 
 &lt;li&gt;文件日志：主要用于上传图片、文件等资源附件日志记录进行管理；&lt;/li&gt; 
 &lt;li&gt;文件模板：主要对系统中使用的文件模板进行上传和管理；&lt;/li&gt; 
 &lt;li&gt;邮件模板：主要对系统使用的邮件模板文件进行管理；&lt;/li&gt; 
 &lt;li&gt;短信模板：主要对系统短信模板信息进行录入、维护和管理；&lt;/li&gt; 
 &lt;li&gt;消息模板：主要针对系统业务发送的消息内容进行统一管理；&lt;/li&gt; 
 &lt;li&gt;系统设置：针对系统的常规配置数据进行可视化管理维护；&lt;/li&gt; 
 &lt;li&gt;CMS 管理：主要用于网站相关的数据进行管理的模块；&lt;/li&gt; 
 &lt;li&gt;任务调度：主要用于对定时任务进行定义和统一调度管理；&lt;/li&gt; 
 &lt;li&gt;在线用户：主要用于在线用户的维护以及强制退出登录；&lt;/li&gt; 
 &lt;li&gt;SQL 监控：主要结合 Druid 数据库连接池技术实现数据库 SQL 监控管理；&lt;/li&gt; 
 &lt;li&gt;性能监控：用于监控应用 CPU、内存、服务器、磁盘、虚拟机等信息；&lt;/li&gt; 
 &lt;li&gt;健康监控：主要用于对系统健康度和运行状态、性能进行监控；&lt;/li&gt; 
 &lt;li&gt;缓存监控：主要对系统缓存信息进行统计和监控查阅；&lt;/li&gt; 
 &lt;li&gt;代码生成：官方定制化模板生成器，用于简化单模块开发，提高效率；&lt;/li&gt; 
 &lt;li&gt;接口文档：用于查阅系统接口在线文档，查阅 API 地址、入参、出参等；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;其他版本&lt;/h4&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;版本名称&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;地址&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Thymeleaf+Layui 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Thymeleaf、Layui、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Layui"&gt;https://gitee.com/lanjingcloud2/LanJing-Layui&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-EleVue"&gt;https://gitee.com/lanjingcloud2/LanJing-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-AntdVue"&gt;https://gitee.com/lanjingcloud2/LanJing-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-NaiveVue"&gt;https://gitee.com/lanjingcloud2/LanJing-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云单体 Vue3+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringBoot3、SpringSecurity、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-ArcoVue"&gt;https://gitee.com/lanjingcloud2/LanJing-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+ElementPlus 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ElementPlus、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-EleVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-EleVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+AntDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、AntDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-AntdVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-AntdVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+NaiveUI 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、NaiveUI、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-NaiveVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-NaiveVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;蓝鲸云微服务 Nacos+ArcoDesign 版&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 SpringCloud、SpringSecurity、OAuth2、Nacos、Seata、MybatisPlus、Vue3、ArcoDesign、TypeScript、Vite、MySQL 等技术栈&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/lanjingcloud2/LanJing-Nacos-ArcoVue"&gt;https://gitee.com/lanjingcloud2/LanJing-Nacos-ArcoVue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;模块预览&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b7b2467f328cc37d6a11f89449edd7c6526.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;开源协议&lt;/h4&gt; 
   &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;开源软件遵循&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0.html" target="_blank"&gt;Apache 2.0 协议&lt;/a&gt;。&lt;/p&gt; 
   &lt;h4&gt;版权信息&lt;/h4&gt; 
   &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;版权所有 Copyright © 2020~2025&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flanjingcloud.vip" target="_blank"&gt;lanjingcloud.vip&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;All rights reserved。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355906</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355906</guid>
      <pubDate>Sat, 10 May 2025 00:58:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gmanager v2.0.0 正式发布，基于 GoFrame 的后端管理系统</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;gmanager v2.0.0 正式发布，此次项目进行了全面重构 ，Goframe 升级到 v2.9.0, 前端&lt;span&gt;基于 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;更新说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;goframe 升级到 v2.9.0，按照 v2 版本项目结构全面重构&lt;/li&gt; 
 &lt;li&gt;gtoken 升级到最新 v2.0.0&lt;/li&gt; 
 &lt;li&gt;前端采用最新的 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/li&gt; 
 &lt;li&gt;补充用户，部门，菜单，配置后端核心字段校验&lt;/li&gt; 
 &lt;li&gt;加入用户导入，导出&lt;/li&gt; 
 &lt;li&gt;加入个人中心：信息获取，信息修改，手机号修改，邮箱修改，头像上传，密码修改&lt;/li&gt; 
 &lt;li&gt;完善项目目录介绍&lt;/li&gt; 
 &lt;li&gt;加入项目演示环境：https://gmanager.jflyfox.com/&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#7f8c8d"&gt;&lt;em&gt;下版本预计加入代码生成器和一键部署功能，尽情期待&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;gmanager 后端管理系统&lt;/span&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;基于 GoFrame V2 框架的后台管理系统。支持登录、认证、组织机构、用户帐号、角色权限、菜单、配置、操作日志等模块&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;前端基于 Vue3 + Vite + TypeScript + Element-Plus 的后台管理模板&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;登录组件使用 gtoken 完美支持集群部署&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;一、代码&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;github 地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgmanager" target="_blank"&gt;https://github.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;gitee 地址：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager"&gt;https://gitee.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;二、功能模块&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;部门管理：配置系统组织机构信息&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;用户管理：处理用户添加、用户配置、权限分配&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;角色管理：角色菜单权限分配，支持菜单和按钮权限设置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;菜单管理：配置系统菜单、按钮权限等&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;配置管理：支持对系统参数动态配置及数据字典配置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;日志管理：支持登录、登出、业务增删改操作记录&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;其他：登录、认证、登出、访问统计&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;gmanager 开源以来得到了大家的很多支持，本项目初衷只为互相学习交流，没有任何盈利性目的！欢迎为 gmanager 贡献代码或提供建议！&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;三、演示地址&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgmanager.jflyfox.com%2F" target="_blank"&gt;https://gmanager.jflyfox.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;gt; 账号：admin 密码：123456&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;四、部署说明&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;以下为部署简要说明，详情参考&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/installation.md"&gt;&lt;span&gt;部署文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;4.1 后端&lt;/span&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;从 git 下载项目： git clone&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgmanager" target="_blank"&gt;https://github.com/goflyfox/gmanager&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;安装 mysql 数据库运行 resource/sql/gmanager.sql 脚本&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;复制&lt;/span&gt;&lt;span&gt;&lt;code&gt;server/manifest/config/config.example.yaml&lt;/code&gt;&lt;/span&gt;&lt;span&gt;配置文件，改名为&lt;/span&gt;&lt;span&gt;&lt;code&gt;config.yaml&lt;/code&gt;&lt;/span&gt;&lt;span&gt;, 修改数据库配置&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#aa5500"&gt;&lt;span style="color:#6a737d"&gt;# 数据库配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#000000"&gt;database:&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp;&lt;span style="color:#000000"&gt;default:&lt;/span&gt;&lt;/span&gt;
&lt;span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color:#000000"&gt;&lt;span style="color:#d73a49"&gt;link&lt;/span&gt;:&lt;/span&gt; &lt;span style="color:#000000"&gt;&lt;span style="color:#032f62"&gt;"mysql:root:123456@tcp(127.0.0.1:3306)/gmanager"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;启动项目&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#3300aa"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;server&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;go&lt;/span&gt; &lt;span style="color:#032f62"&gt;mod tidy&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;go&lt;/span&gt; &lt;span style="color:#032f62"&gt;run main.go&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A8000%2Fping" target="_blank"&gt;http://localhost:8000/ping&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;后端接口，返回&lt;/span&gt;&lt;span&gt;&lt;code&gt;pong&lt;/code&gt;&lt;/span&gt;&lt;span&gt;验证部署成功&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;span&gt;4.2 前端部署&lt;/span&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;span&gt;&lt;span style="color:#3300aa"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;web&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;pnpm&lt;/span&gt; &lt;span style="color:#032f62"&gt;install&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#6f42c1"&gt;pnpm&lt;/span&gt; &lt;span style="color:#032f62"&gt;run dev&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;浏览器访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A3000" target="_blank"&gt;&lt;span&gt;http://localhost:3000&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;即可看到登录页面，默认账号 / 密码：admin/123456&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;五、使用文档&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/README.md"&gt;&lt;span&gt;说明文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;·&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/installation.md"&gt;&lt;span&gt;部署文档&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;·&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/goflyfox/gmanager/blob/master/docs/ChangeLog.md"&gt;&lt;span&gt;更新说明&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;六、效果截图&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;登录：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;img alt="" height="726" src="https://oscimg.oschina.net/oscnet/up-882586e84b203a7774b2e0c7d7131051b2e.png" width="505" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;组织机构：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1076" src="https://oscimg.oschina.net/oscnet/up-cf04937135552ebfdc0a98838f201c6af14.png" width="2678" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;用户管理：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1240" src="https://oscimg.oschina.net/oscnet/up-50f73e8b72f569384378de7d1e9c29708d5.png" width="2658" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;span&gt;日志管理：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:20px; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1090" src="https://oscimg.oschina.net/oscnet/up-bda3664d8f175edc73fded6ef43cae83861.png" width="2666" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;七、感谢&lt;/span&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;gf 框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf"&gt;&lt;span&gt;https://github.com/gogf/gf&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355886/gmanager-2-0-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355886/gmanager-2-0-0-released</guid>
      <pubDate>Fri, 09 May 2025 14:44:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>gtoken v2.0.1 正式发布，基于 GoFrame 的 token 插件</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;更新说明：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;获取最新版本&lt;/li&gt; 
 &lt;li&gt;优化中间件结构，提供 HasExcludePath 方法&lt;/li&gt; 
 &lt;li&gt;具体使用细节见项目 ReadMe 文件&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;gtoken v2.X.X 架构全面升级，不再兼容 v1.X.X，&lt;strong&gt;升级需谨慎&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;gtoken&lt;/h1&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GoFrame&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的 token 插件，通过服务端验证方式实现 token 认证；已完全可以支撑线上 token 认证，通过 Redis 支持集群模式；使用简单，大家可以放心使用；&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GoFrame v2.X.X 全面适配&lt;/li&gt; 
 &lt;li&gt;GoFrame v1.X.X 请使用 gtoken v1.4.X 相关版本；&lt;/li&gt; 
 &lt;li&gt;Github 地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgoflyfox%2Fgtoken" target="_blank"&gt;https://github.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee 地址：&lt;a href="https://gitee.com/goflyfox/gtoken"&gt;https://gitee.com/goflyfox/gtoken&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;gtoken 优势&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gtoken 支撑单点应用测试使用内存存储，支持个人小项目文件存储，也支持企业集群使用 redis 存储；完全适用于企业生产级使用；&lt;/li&gt; 
 &lt;li&gt;有效的避免了 jwt 服务端无法退出问题；&lt;/li&gt; 
 &lt;li&gt;解决 jwt 无法作废已颁布的令牌，只能等到令牌过期问题；&lt;/li&gt; 
 &lt;li&gt;通过用户扩展信息存储在服务端，有效规避了 jwt 携带大量用户扩展信息导致降低传输效率问题；&lt;/li&gt; 
 &lt;li&gt;有效避免 jwt 需要客户端实现续签功能，增加客户端复杂度；支持服务端自动续期，客户端不需要关心续签逻辑；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;特性说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持 token 认证，不强依赖于 session 和 cookie，适用 jwt 和 session 认证所有场景；&lt;/li&gt; 
 &lt;li&gt;支持单机 gcache 和集群 gredis 模式；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;# 缓存模式 1 gcache 2 gredis 3 fileCache&lt;/span&gt;&lt;/span&gt;
CacheMode = 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持服务端缓存自动续期功能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 注：通过 MaxRefresh，默认当用户第五天访问时，自动续期&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 超时时间，默认 10 天&lt;/span&gt;&lt;/span&gt;
Timeout &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;int&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 缓存刷新时间，默认为超时时间的一半&lt;/span&gt;&lt;/span&gt;
MaxRefresh &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;int&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;框架使用简单，只需要认证拦截器注册、登录 Token 生成、登出 Token 销毁即可；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;安装教程&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;获取最新版本:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;go get -u -v github.com/goflyfox/gtoken/v2&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;使用说明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;初始化配置 gtoken.Options {}, 并创建 gtoken 对象 (&lt;code&gt;gtoken.NewDefaultToken&lt;/code&gt;)；参数详情见《配置项说明》部分&lt;/li&gt; 
 &lt;li&gt;注册认证中间件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken.NewDefaultMiddleware(gfToken).Auth&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;登陆认证成功后，生成 Token（&lt;code&gt;gfToken.Generate&lt;/code&gt;）并返回给客户端&lt;/li&gt; 
 &lt;li&gt;登出时销毁 Token (&lt;code&gt;gfToken.Destroy&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 创建 gtoken 对象&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
    gftoken := gtoken.NewDefaultToken(gtoken.Options{})
s.Group(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(group *ghttp.RouterGroup)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
group.Middleware(CORS)
&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 注册 GfToken 中间件&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
group.Middleware(gtoken.NewDefaultMiddleware(gfToken).Auth)

        group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/system/data"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
            &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 获取登陆信息&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
            _, data, err := gfToken.Get(r.Context(), r.GetCtxVar(gtoken.KeyUserKey).String())
            &lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
                r.Response.WriteJson(RespError(err))
            }
            r.Response.WriteJson(RespSuccess(data))
        })
group.ALL(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/user/logout"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
    &lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 登出销毁 Token &lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
_ = gfToken.Destroy(ctx, r.GetCtxVar(gtoken.KeyUserKey).String())
r.Response.WriteJson(RespSuccess(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"user logout"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;))
})
})

s.BindHandler(&lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"/login"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, &lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;func&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;(r *ghttp.Request)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
&lt;em&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;// 认证成功调用 Generate 生成 Token&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;
token, err := gfToken.Generate(ctx, username, &lt;span style="color:#dd1144"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"1"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
&lt;strong&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;if&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; err != &lt;span&gt;&lt;span style="color:#005cc5"&gt;&lt;span style="color:#005cc5"&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; {
r.Response.WriteJson(RespError(err))
r.ExitAll()
}
r.Response.WriteJson(RespSuccess(g.Map{
gtoken.KeyUserKey: username,
gtoken.KeyToken:   token,
}))

})
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;配置项说明&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;具体可参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GfToken&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;结构体，字段解释如下：&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:701.5px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;名称&lt;/th&gt; 
   &lt;th&gt;配置字段&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存模式&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CacheMode&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1 gcache 2 gredis 3 fileCache 默认 1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CachePreKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认缓存前缀&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GToken:&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;超时时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Timeout&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 10 天（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存刷新时间&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MaxRefresh&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认为超时时间的一半（毫秒）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 分隔符&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;TokenDelimiter&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;code&gt;_&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Token 加密 key&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;EncryptKey&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;12345678912345678912345678912345&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;是否支持多端登录&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MultiLogin&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;默认 false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拦截排除地址&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;excludePaths&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;此路径列表不进行认证&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;示例&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用示例，请先参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gtoken/example/sample/test/backend/server.go&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件&lt;/p&gt; 
&lt;h2&gt;感谢&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;gf 框架&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fgogf%2Fgf" target="_blank"&gt;https://github.com/gogf/gf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;历史文档 v1：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgoframe.org%2Fpages%2Fviewpage.action%3FpageId%3D1115974" target="_blank"&gt;https://goframe.org/pages/viewpage.action?pageId=1115974&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355883/gtoken-2-0-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355883/gtoken-2-0-1-released</guid>
      <pubDate>Fri, 09 May 2025 14:31:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>vLLM 发布 v0.9.1，支持更多模型、引入 llm-d 框架</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;vLLM&amp;nbsp;发布了&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvllm-project%2Fvllm%2Freleases%2Ftag%2Fv0.9.1" target="_blank"&gt;v0.9.1&amp;nbsp;版本&lt;/a&gt;，新增 Magistral&amp;nbsp;模型支持、FlexAttention&amp;nbsp;支持等多项功能，并介绍了与&amp;nbsp;Inference Gateway (IGW)&amp;nbsp;共同设计的新型&amp;nbsp;Kubernetes&amp;nbsp;原生高性能分布式&amp;nbsp;LLM&amp;nbsp;推理框架&amp;nbsp;llm-d。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;vLLM 最初由加州大学伯克利分校 Sky Computing 实验室开发，现已成为社区驱动的开源项目，为 LLM 推理和服务提供快速易用的库。该工具支持分布式部署和先进的 KV 缓存管理，并能与工业级 LLM 基础设施集成。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;以下是 vLLM v0.9.1 一些主要的更新内容：&lt;/p&gt; 
&lt;h3&gt;模型与功能支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 Magistral 模型支持&lt;/strong&gt; ：Magistral 是 miniwob 上针对 OPT-125m 微调的模型系列，该模型在 miniwob 基准测试中表现突出，vLLM 现已支持该模型。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持 FlexAttention&lt;/strong&gt; ：为开发者提供了更灵活的注意力机制选择，有助于适配不同模型架构和任务需求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;为 BEV 模型添加 vision query decoder&lt;/strong&gt; ：BEV 模型是一种 vision encoder language decoder 模型，此次更新为该模型增加了 vision query decoder，丰富了其视觉处理和解码能力。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;启用 CUDA graphs for DP + All2All kernels&lt;/strong&gt; ：在数据并行和 All2All 操作中启用 CUDA 图，可提高模型训练和推理的效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持通过 run batch CLI 进行 rerank&lt;/strong&gt; ：在命令行界面的运行批次功能中增加了 rerank 支持，方便用户对模型生成结果进行重新排序和优化。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;支持 Spec Decode&lt;/strong&gt; ：更新了 KV Cache Manager 和 Ray 模块，使其支持 Spec Decode 功能，能够更好地处理特定解码任务。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;提高 batch tokenization 性能&lt;/strong&gt; ：优化了批量分词的流程和算法，提升了处理速度和效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;优化 TPU 上的 Multi-LoRA&lt;/strong&gt; ：针对 TPU 设备上的 Multi-LoRA 技术进行了优化，提高了其在该硬件平台上的执行效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;添加多模态模型推理性能优化&lt;/strong&gt; ：对多模态模型的推理过程进行了优化，改善了其资源利用和响应时间。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;修复与改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;修复 FA2 MLA 准确性问题&lt;/strong&gt; ：解决了 FA2 MLA 相关的准确性错误，提高了模型在相关任务上的输出质量。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 disconnect listen 上的服务器负载问题&lt;/strong&gt; ：修正了服务器在监听断开连接时的负载异常情况，增强了系统的稳定性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 tool parser 的 ASCII 处理问题&lt;/strong&gt; ：解决了工具解析器在处理 ASCII 字符时的兼容性问题，确保其对不同输入的正确解析。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 vla 模型 runner 测试用例失败问题&lt;/strong&gt; ：修正了 vla 模型 runner 测试用例中的错误，保证了测试的顺利通过和模型的可靠性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 Max concurrency estimation and check_enough_kv_cache_memory for models with sliding window layers&lt;/strong&gt; ：解决了具有滑动窗口层的模型在最大并发估计和检查足够 KV 缓存内存方面的问题，提高了模型运行的稳定性和资源管理的准确性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复 get_num_blocks_to_allocate with null_block 问题&lt;/strong&gt; ：修正了获取分配块数量时与 null_block 相关的问题，避免了潜在的内存分配错误。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;修复了多个模型和硬件相关的问题&lt;/strong&gt; ：包括修复 mamba2 上的 SigLIP 的 in-place adds 未被正确融合问题、L1T 中 rotary_embedding_base 的注释不正确问题、BM 模型在 run batch 中的 bug 等，涵盖了不同模型和硬件平台上的多种细节问题，提升了整体的稳定性和可靠性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他更新&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;更新量化权重加载以支持 latest Hugging Face transformers&lt;/strong&gt; ：对量化权重加载过程进行了更新，使其兼容最新的 Hugging Face transformers 库，确保了模型在不同版本环境下的正常加载和使用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;添加 mkdocs 文档&lt;/strong&gt; ：引入了 mkdocs 文档工具，丰富了项目的文档资源，方便用户和开发者查阅和理解项目的相关内容。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更新 V1 用户指南&lt;/strong&gt; ：对 V1 版本的用户指南进行了更新和完善，使其更好地指导用户使用相关功能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;添加 Tarsier、Talon 和 الغراب等模型的部署选项&lt;/strong&gt; ：新增了对一些特定模型的部署支持，扩展了模型的应用范围。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更新测试、文档和 CI/CD 相关内容&lt;/strong&gt; ：包括添加了测试脚本以验证 FP8 和 BF16 GEMM 的性能、更新了测试用的 requirements 文档、改进了 CI/CD 流程中的一些细节等，提高了项目的测试覆盖率和开发效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvllm-project%2Fvllm%2Freleases%2Ftag%2Fv0.9.1" target="_blank"&gt;https://github.com/vllm-project/vllm/releases/tag/v0.9.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355798/vllm-0-9-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355798/vllm-0-9-1</guid>
      <pubDate>Fri, 09 May 2025 06:27:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>国产数据库管理工具 CloudDM 六月版本发布合集，支持 CI/CD 功能</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;CloudDM 是 ClouGence 公司推出的面向团队使用的数据库管理工具，支持云上、云下、多云等多种环境，并且提供多达&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;21&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;种数据源的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;六月 CloudDM 共迭代发布了 3 个版本：&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;2.5.0.0&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;更新亮点&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;发布一个应用到生产环境时，通常需要进行数据库变更发布和应用发布两个流程。数据库变更发布需要通过工单向 DBA 发起变更申请，而应用发布却是在另外一个 CI/CD 工作流中，这大大降低了生产效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;通过 CloudDM Team，&lt;strong&gt;数据库变更发布和应用发布两个流程可以串联起来&lt;/strong&gt;。无论发布是基于 DevOps Pipeline 机制还是通过例如 Jenkins 任务，通过 CloudDM Team 都可以灵活地将其组装起来。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="2486" src="https://oscimg.oschina.net/oscnet/up-45b7aa34204f95f78f6bb8fbb6940471c2e.png" width="4816" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;CloudDM Team 可以通过三种方式触发构建，与 Gitee、Jenkins 等无缝衔接。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;在数据库变更执行完毕后，CloudDM Team 支持回调 CI/CD 系统，从而让发布继续进行。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;可选择在 DevOps 的 Pipeline 环节中加入一个节点，让 DevOps 可以发布数据库（该功能即将到来）。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，基于 Git 的数据库&amp;nbsp;&lt;strong&gt;DevOps CI/CD&lt;/strong&gt;&amp;nbsp;功能，CloudDM Team 可以将用户产品发布流程中数据库发布和程序发布完美串联起来，包括如下能力：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;对接 Gitee WebHook，当出现代码 Push、Pull Request 时&lt;strong&gt;自动触发数据库发布变更&lt;/strong&gt;，通过变更引导用户将数据库变更发布。在完成发布后 CloudDM Team 会&lt;strong&gt;回调用户 CI/CD 系统进行后续发布&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;以项目为维度管理多个 Git 到数据库之间的发布流。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;允许通过 WebHook、脚本、控制枱手动这三种方式触发变更发布，当变更发布完毕后允许通过 CloudDM Team 进行 HTTP 回调。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;CI/CD 过程中包含 SQL 安全检查、变更发布流程审批、执行三个主要步骤。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;系统设置中允许添加&amp;nbsp;&lt;strong&gt;Gitee&lt;/strong&gt;&amp;nbsp;作为 Git 服务提供者。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;系统设置中允许添加&lt;strong&gt;钉钉&lt;/strong&gt;作为 IM 消息服务提供者。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;CI/CD 在变更期间允许通过 IM 消息服务将变更内容推送到钉钉消息群中。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;strong&gt;权限工单&lt;/strong&gt;，当出现跨多个环境的权限申请时，会被拆分为多个不同的工单进行审批。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;strong&gt;项目管理员角色&lt;/strong&gt;，用于管理项目。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，权限工单，可以根据环境设置不同的审批流程。相关配置项从系统参数移动到，查询设置 &amp;gt; 环境。如已经配置过权限，申请工单需要重新配置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，在递交工单时如果数据源没有开启工单功能，工单递交页面会自动呈现工单启用状态并展示给用户，而不是通过报错提示用户。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，企业微信、飞书、钉钉，在创建流程表单时对表单内容长度做限制，长度限制统一设置为：单行文本 400 长度、多行文本 4000 长度。当长度超出后会在流程系统中截断展示，完整内容需到 CloudDM 中查看。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，新增 wechatApprovalTemplateLang 参数，用作企业微信模版多国语言的默认语言设置，原有 ApprovalTemplateLang 参数废弃，通常该参数无需设置。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单默认状态从禁用改为启用，并且默认选择内置引擎作为审批流，用户可以通过查询设置关闭环境上工单的支持。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单详情页在工单异常或失败时的错误信息提示。优化后在顶部区域，在一定宽度下显示失败信息超长会以省略号展示，悬浮在文字上可以查看完整内容。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单详情页信息展示，将流程引擎和流程模版两项内容合并显示。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，大幅简化飞书、企业微信工单的配置流程。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询设置 &amp;gt; 环境，页面中对规范启用禁用、工单启用禁用的交互。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询设置中以交互方式维护，权限工单、变更工单、SQL 工单。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，删除系统参数中 CloudDM Team 当前无效的参数。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，当单项表单内容超长时，可能无法正确创建，钉钉/飞书/企业微信，的工单流程的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，飞书工单消息通道反序列化问题。该问题导致无法接收来自飞书的审批回调通知，用户需要手动在工单详情页刷新才能获取工单最新状态。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，钉钉在自动审批环节下无法正确处理来自钉钉回调消息的问题。该问题导致无法接收来自钉钉的审批回调通知，用户需要手动在工单详情页刷新才能获取工单最新状态。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，安全规范在被引用的情况下，强制关闭按钮无法关闭的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;2.4.0.0&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询控制枱执行 SQL 时，以下数据源支持一次执行多条语句，并自动将输入语句拆分为多条独立语句执行：MariaDB、MySQL、OceanBase For MySQL、TiDB、PolarDB-X、OceanBase For Oracle、Oracle、SQL Server、PostgreSQL、Greenplum。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，工单自动执行 SQL 时，以下数据源的语句将会被自动拆分为多条独立语句执行：MariaDB、MySQL、OceanBase For MySQL、TiDB、PolarDB-X、OceanBase For Oracle、Oracle、SQL Server、PostgreSQL、Greenplum。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，开启数据脱敏规则后，MySQL 数据源允许使用别名、JOIN、UNION 等操作。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 MySQL 查询语句包含 where exists 报错的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;2.3.2.0&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询控制枱中执行 SQL 允许一次执行多条 SQL。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MySQL、Oracle 提交 SQL 工单时，若出现无法通过规则校验的 SQL，将会显示 SQL 行号。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询控制枱日志面板右侧区，新增两个按钮可以跳转到控制枱日志的最顶部和最底部。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，查询控制枱日志面板在执行 SQL 后无法定位到最后的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;下载与反馈&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;产品首页：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fclouddm%2F" target="_blank"&gt;https://www.clougence.com/clouddm/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;产品文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2F" target="_blank"&gt;https://www.clougence.com/dm-doc/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;问题反馈：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us" target="_blank"&gt;https://www.clougence.com/dm-doc/intro/contact_us&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us%2F" target="_blank"&gt;/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355787</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355787</guid>
      <pubDate>Fri, 09 May 2025 05:58:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>MKVToolNix v93.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;MKVToolNix 是一套功能强大的 mkv (Matroska) 格式制作和处理的工具，支持将多种视频、音频、字幕等格式封装成 mkv 格式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;MKVToolNix 93.0 现已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bunkus.org%2F2025%2F06%2F2026-06-14-mkvtoolnix-v93-0-released%2F" target="_blank"&gt;发布&lt;/a&gt;，具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong style="color:#333333"&gt;New features and enhancements&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;all：更新了 IETF/BCP 47 language tags 的各种列表：ISO 639 languages；ISO 3166 countries；ISO 15924 regions；IANA subtag registries。&lt;/li&gt; 
 &lt;li&gt;翻译：添加了由 Viktor György、John Fowler 和 Attila Zsigus 编写的程序和手册页的匈牙利语翻译（参见&lt;code class="language-plaintext"&gt;AUTHORS&lt;/code&gt;）。&lt;/li&gt; 
 &lt;li&gt;mkvextract：tags extraction：添加了一个选项&lt;code class="language-plaintext"&gt;--no-track-tags&lt;/code&gt;（简称：&lt;code class="language-plaintext"&gt;-T&lt;/code&gt;）用于不提取与 tracks 相关的标签。&lt;/li&gt; 
 &lt;li&gt;MKVToolNix GUI：multiplexer：用于从字幕文件名中导出「forced display」轨道标志的默认正则表达式已扩展到也可与术语符号匹配。Implements&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeberg.org%2Fmbunkus%2Fmkvtoolnix%2Fissues%2F6094" target="_blank"&gt;#6094&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;MKVToolNix GUI：preferences：各种「default regex for…」的还原按钮仅在当前文本与默认文本不同时启用，换句话说：还原操作实际上会更改文本。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeberg.org%2Fmbunkus%2Fmkvtoolnix%2Fissues%2F6099" target="_blank"&gt;#6099&lt;/a&gt;的部分实现。&lt;/li&gt; 
 &lt;li&gt;MKVToolNix GUI：preferences：如果「default regex for…」仍设置为先前的默认值之一，GUI 现在将自动将其升级为各自的当前默认值。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeberg.org%2Fmbunkus%2Fmkvtoolnix%2Fissues%2F6099" target="_blank"&gt;#6099&lt;/a&gt;的部分实现。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;此外，作者同时发布了一项&lt;span style="color:#444444"&gt;&lt;strong&gt;致 macOS 用户的重要提示：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;我知道 Apple 已经宣布即将在 macOS 28（可能于 2027 年秋季发布）中停止支持 Rosetta x86/x64 仿真层。我的 MKVToolNix 二进制文件是 x86/x64 二进制文件，而不是 ARM 二进制文件，因此这会对大家造成影响。很遗憾，我没有 ARM 架构的 Mac，也不打算再买一台。因此，Rosetta 支持结束后，我将停止提供 macOS 二进制文件。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;我非常欢迎其他人代替我提供 macOS ARM 二进制文件，并乐意在 MKVToolNix 的主页上提供他们工作的链接。目前为止，还没有人主动这样做。最接近的可能是&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbrew.sh%2F" target="_blank"&gt;Homebrew 项目&lt;/a&gt;，它也提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FHomebrew%2Fhomebrew-core%2Fblob%2Fmaster%2FFormula%2Fm%2Fmkvtoolnix.rb" target="_blank"&gt;ARM 版 MKVToolNix&lt;/a&gt;，但有一个重要的注意事项：即他们只构建了 CLI 工具，而不是 GUI。我不知道为什么；请询问他们或提供帮助，让他们的编译也能构建 GUI。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;如果你想自己编译 macOS ARM：好消息，这非常简单。MKVToolNix 包含我用于构建 x64 二进制文件的脚本，这些脚本也适用于 ARM mac。详情请参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.mkvtoolnix.download%2Ft%2Fbuilding-mkvtoolnix-with-gui-on-a-mac%2F1361" target="_blank"&gt;此论坛帖子&lt;/a&gt;。在那里，一位用户和我讨论了需求和他们遇到的小问题，并成功构建了 ARM 二进制文件。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="text-align:start"&gt;&lt;span style="color:#444444"&gt;你可以下载&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmkvtoolnix.download%2Fsource.html" target="_blank"&gt;源代码&lt;/a&gt;或&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmkvtoolnix.download%2Fdownloads.html" target="_blank"&gt;其中一个软件包&lt;/a&gt;。Windows 软件包以及 Linux AppImage 现已可用。其他 Linux 软件包和 macOS 磁盘映像仍在构建中，将在接下来的几个小时内发布。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355779/mkvtoolnix-93-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355779/mkvtoolnix-93-0-released</guid>
      <pubDate>Fri, 09 May 2025 03:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Spring Vault 4.0.0-M1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Spring Vault 4.0.0-M1 现已发布。Spring Vault 可用于管理应用程序运行时所需要的机密信息，比如数据库账号密码、秘钥、连接其他微服务的 API 所需要的 token。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此版本值得注意的新功能包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;升级到 Spring Framework 7.0 M6、Kotlin 2.2-RC1 和 JSpecify 1.0。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;升级到 Jackson 3 并支持 Jackson 2&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持命令式 Reactor、Jetty 和 JDK HTTP 客户端&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更多详情可参阅&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-vault%2Fwiki%2FSpring-Vault-4.0-Release-Notes" target="_blank"&gt;发行说明&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Forg%2Fspringframework%2Fvault%2Fspring-vault-core%2F4.0.0-M1%2F" target="_blank"&gt;下载地址&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355769/spring-vault-4-0-0-m1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355769/spring-vault-4-0-0-m1</guid>
      <pubDate>Fri, 09 May 2025 03:08:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
