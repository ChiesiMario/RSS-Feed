<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 11 Aug 2025 02:41:08 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Apache bRPC 1.14.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Apache bRPC 1.14.1 版本已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FU-Z1fRp8UsK-9cFxHxVtgA" target="_blank"&gt;发布&lt;/a&gt;，包含许多新功能和问题修复。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;新功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;多维度 bvar 支持泛型 key&amp;nbsp;(#3026)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持对 RPC 协议包进行 checksum 校验&amp;nbsp;(#2967)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持&amp;nbsp;RDMA polling&amp;nbsp;模式&amp;nbsp;(#2920)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持优先调度&amp;nbsp;epoll bthread (#2819)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持 redis 协议的 inline 命令 (#3024)&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Bug 修复&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复运行时动态扩展&amp;nbsp;block pool&amp;nbsp;的 bug&amp;nbsp;(#2965)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复&amp;nbsp;bthread_worker_usage&amp;nbsp;统计超过&amp;nbsp;bthread_worker_count&amp;nbsp;的 bug(#3009)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复&amp;nbsp;SignalTrace&amp;nbsp;模式的内存与死锁问题&amp;nbsp;(#3019)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复 Butex 回收到对象池时触发&amp;nbsp;use-after-poison&amp;nbsp;的问题&amp;nbsp;(#3012)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复&amp;nbsp;save_series&amp;nbsp;选项为 false 时，LatencyRecorder::expose CHECK&amp;nbsp;失败的问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复 grpc 协议不兼容鉴权的 bug&amp;nbsp;(#3002)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复不带健康检查的 Socket 被异常回收的 bug&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复&amp;nbsp;bind&amp;nbsp;和&amp;nbsp;connect 函数不带全局命名空间引发的编译问题&amp;nbsp;(#3007)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复导致 TimerThread 在退出时挂起的并发冲突&amp;nbsp;(#2986)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复 StringSplitter 中潜在的无效内存访问&amp;nbsp;(#2996)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复&amp;nbsp;bthread task tracer&amp;nbsp;死锁的&amp;nbsp;bug (#2988)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复 thrift 消息不正确的序列 id&amp;nbsp;(#2984)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复 include 缺失导致 GCC 13 下的单元测试错误&amp;nbsp;(#2979)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复失效的 thrift 下载 URL&amp;nbsp;(#2975)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复在 x86_64 上 bazel 编译默认链接 libunwind 的问题&amp;nbsp;(#2973)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复调用 IB verbs API 时的错误码检查逻辑 (#3034)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;修复 SignalTrace 模式的内存访问问题 (#3032)&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;功能增强&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;优化加载 libibverbs 时的容错代码&amp;nbsp;(#3008)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;增加 redis 协议分配内存限制&amp;nbsp;(#3035)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;优化日志函数名称&amp;nbsp;(#3017)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;实现单元测试在 macOS 下可运行&amp;nbsp;(#3018)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;为 rwlock.h 增加 include guard (#3005)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;一致性 hash 策略支持 server tag&amp;nbsp;(#2994)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;添加禁用 move 特性的宏&amp;nbsp;(#2989)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;优化 DoublyBufferedData 中的智能指针赋值逻辑&amp;nbsp;(#2981)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;增加设置 worker 线程名的选项&amp;nbsp;(#3037)&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;用 int64_t 代替 replace google::protobuf::int64&amp;nbsp;(#3045)&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;文档优化&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fbrpc%2Freleases%2Ftag%2F1.14.1" target="_blank"&gt;https://github.com/apache/brpc/releases/tag/1.14.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365420/brpc-1-14-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365420/brpc-1-14-1-released</guid>
      <pubDate>Mon, 11 Aug 2025 02:31:05 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>JimuReport 积木报表 v2.1.2 版本发布，免费开源的可视化报表和大屏</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h3&gt;项目介绍&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;积木报表，是一款免费的数据可视化报表，含报表、打印、大屏和仪表盘，像搭建积木一样完全在线设计！功能涵盖：复杂报表、打印设计、图表报表、门户设计、大屏设计等！ 分两大模块：JimuReport 侧重传统复杂报表和打印、 JimuBI 侧重数据大屏和仪表盘可视化设计！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;JimuReport 采用 Web 版报表设计器，类 Excel 操作风格，通过拖拽完成报表设计，所见即所得。&lt;/li&gt; 
 &lt;li&gt;领先的企业级 Web 报表，支持各种复杂报表，专注于解决企业报表难题。&lt;/li&gt; 
 &lt;li&gt;JimuBI 是专注于数字孪生和数据可视化的工具，旨在通过直观、动态且视觉吸引力强的形式呈现实时业务数据，尤其擅长打造，交互式大屏和仪表盘&lt;/li&gt; 
 &lt;li&gt;JimuBI 业内唯一实现全场景覆盖：同时支持大屏（炫酷动态）、仪表盘（专业分析）、门户（交互式业务看板）、移动端（随时随地查看），真正实现 "一次开发，多端适配"。&lt;/li&gt; 
 &lt;li&gt;大屏采用类 word 风格，可以随意拖动组件，想怎么设计怎么设计，可以像百度和阿里一样，设计出炫酷大屏！&lt;/li&gt; 
 &lt;li&gt;秉承 "简单、易用、专业" 的产品理念，极大的降低报表开发难度、缩短开发周期、节省成本.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;当前版本&lt;/strong&gt;：v2.1.2 | 2025-08-11&lt;/p&gt; 
&lt;h4&gt;升级日志&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;小版本升级，进行功能优化，可以直接升级版本号，无数据库变更！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;集成 Maven 依赖&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;数据报表和打印&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-spring-boot-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.2&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- mongo、redis 和文件数据集支持包，按需引入 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-nosql-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.0.0&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#6a737d"&gt;&amp;lt;!-- 后台导出接口 Echart 图表支持包，按需引入 --&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimureport-echarts-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.1&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;BI 大屏和仪表盘&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.jeecgframework.jimureport&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;jimubi-spring-boot-starter&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span style="color:#333333"&gt;&amp;lt;&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;2.1.2&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color:#333333"&gt;&amp;lt;/&lt;span style="color:#22863a"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;升级日志&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;springboot 项目采用 lazy-initialization 启动，解决兼容问题&lt;/li&gt; 
 &lt;li&gt;token 解析问题・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3971" target="_blank"&gt;Issue #3971&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;分享报表时 /jmreport/query/multiple/initValue 报错【 Token 校验失败，无权限访问！】・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3983" target="_blank"&gt;Issue #3983&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;查询控件下拉树自定义的 token header 未生效・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F2193" target="_blank"&gt;Issue #2193&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;customApiHeader，自定义请求头无效・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3717" target="_blank"&gt;Issue #3717&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;下拉树是否支持传递 token・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3974" target="_blank"&gt;Issue #3974&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;横向分组不显示数据・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3935" target="_blank"&gt;Issue #3935&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;公式计算错误・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3976" target="_blank"&gt;Issue #3976&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;图表显示位置错乱・&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3995" target="_blank"&gt;Issue #3995&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;【H5 移动渲染】个人仪表盘，图表不展示&lt;/li&gt; 
 &lt;li&gt;token 解析问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2Fjimureport%2Fissues%2F3971" target="_blank"&gt;#3971&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;颜色块支持取整 issues/3693&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;代码下载&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjeecgboot%2FJimuReport" target="_blank"&gt;https://github.com/jeecgboot/JimuReport&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;技术文档&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;快速集成 ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.jimureport.com%2Fquick.html" target="_blank"&gt;https://help.jimureport.com/quick.html&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官方网站：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com" target="_blank"&gt;http://jimureport.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;报表示例：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2FreportDemo" target="_blank"&gt;http://jimureport.com/reportDemo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在线体验：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2Flogin" target="_blank"&gt;http://jimureport.com/login&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;为什么选择 JimuReport?&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;永久免费，支持各种复杂报表，并且傻瓜式在线设计，非常的智能，低代码时代，这个是你的首选！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;采用 SpringBoot 的脚手架项目，都可以快速集成&lt;/li&gt; 
 &lt;li&gt;Web 版设计器，类似于 excel 操作风格，通过拖拽完成报表设计&lt;/li&gt; 
 &lt;li&gt;通过 SQL、API 等方式，将数据源与模板绑定。同时支持表达式，自动计算合计等功能，使计算工作量降低&lt;/li&gt; 
 &lt;li&gt;开发效率很高，傻瓜式在线报表设计，一分钟设计一个报表，又简单又强大&lt;/li&gt; 
 &lt;li&gt;支持 ECharts，目前支持 28 种图表，在线拖拽设计，支持 SQL 和 API 两种数据源&lt;/li&gt; 
 &lt;li&gt;支持分组、交叉，合计、表达式等复杂报表&lt;/li&gt; 
 &lt;li&gt;支持打印设计（支持套打、背景打印等）可设置打印边距、方向、页眉页脚等参数，一键快速打印，同时可实现套打，不动产证等精准、无缝打印&lt;/li&gt; 
 &lt;li&gt;可设计各种类型的单据、大屏，如出入库单、销售单、财务报表、合同、监控大屏、旅游数据大屏等&lt;/li&gt; 
 &lt;li&gt;大屏设计器支持几十种图表样式，可自由拼接、组合，设计炫酷大屏&lt;/li&gt; 
 &lt;li&gt;数据可视化，DataV、帆软的开源替代方案，比帆软拥有更好的体验和更简单的使用方式&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjimureport.com%2Flogin" target="_blank"&gt;积木报表官网&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可以在线免费制作报表和大屏，手机号一键注册，便可永久使用。大屏采用类 word 风格，可以随意拖动组件，想怎么设计怎么设计，可以像百度和阿里一样，设计出炫酷的可视化大屏！重要的是：免费！免费！免费！&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;报表设计效果&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20240401133921.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222441.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222444.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimue8a083fbd6622d4.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222828.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222434.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222831.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/jimu20231031222824.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0139eb90f2d255152aa69d3b37fcc85e4a2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ded4831b7e25638f9ba6033a1f4ba87474f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f7c1a3a4cd6673038727ba49c3ee97e216b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;积木 BI 工作台&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cf33c432856d377b5211ab96f86cef1e1e9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-259b12f9049aa8d46a750d73345b85155dc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//22cfcaa884924a7c93f14f4df74c9a96.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//9371e85231c0c28d669b0cf6e21b8cb0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//fd57c521baa9f7385f215b718de44629.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2bc8ad4c873b7994ffb0e2927a42aff3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fad98d42b2cf92f92a903c9cff7579f18ec.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-1bbc177c8397400c3e79bd90fd03b04e615.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;大屏设计效果&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-402a6034124474bfef8dfc5b4b2bac1ce5c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-6f7ba2e2ebbeea0d203db8d69fd87644c9f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ee8d34f318da466b8a6070a6e3111d12ce7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-826f13c88f23c24ff218687f57f03d802a8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-61dfc52c383f86a4055e20d030503bef93c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3aabd991c6c5af43f35b204d3ec94caf468.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3b75fde569ab528d8607596e147b8bb7d5e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3b8d034341d0190156d63484ce09a863c9c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365409/jimureport-2-1-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365409/jimureport-2-1-2-released</guid>
      <pubDate>Mon, 11 Aug 2025 01:46:05 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>【Skyeye 云 V2.5.8 重磅更新】10 大模块全面升级！效率倍增新体验</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;Skyeye 云低代码智能制造，&lt;/span&gt;智能制造一体化，采用 SpringBoot+ UNI-APP + Ant Design Vue 的低代码平台开发模式。包含 50 多种电子流程，CRM、PM、ERP、MES、ADM、OA、EHR、AI、项目、商城、财务、多班次考勤、薪资、招聘、云售后、论坛、问卷、报表设计、工作流、Saas 等功能。打造全网首套低代码、功能最全的智能制造行业供应链一体化管理软件&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fip.makerview.cn%3A30003%2FskyPortal" target="_blank"&gt;官方网站&lt;/a&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Farticles.zsxq.com%2Fid_xi3xhacte72g.html" target="_blank"&gt;开发文档&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fspace.bilibili.com%2F87396008%2Fchannel%2Fseries" target="_blank"&gt;视频教程&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkdocs.cn%2Fl%2Fcbf2cgCLrUyz" target="_blank"&gt;功能点&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Skyeye&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;云【源代码】针对 {星球用户} 开源。拿到源码后可进行学习、毕设、企业等使用&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;🚀 版本发布说明&lt;/h1&gt; 
&lt;h2&gt;🌟 一、核心功能更新&lt;/h2&gt; 
&lt;h3&gt;🔹 1. 多租户功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 新增多租户架构支持，实现数据隔离与权限控制&lt;/li&gt; 
 &lt;li&gt;✅ 支持租户个性化配置与独立管理界面&lt;/li&gt; 
 &lt;li&gt;✅ 优化租户资源分配与性能监控机制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 2. 打印模板系统&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 新增自定义打印模板设计器&lt;/li&gt; 
 &lt;li&gt;✅ 支持多种格式导出（PDF/Excel/Word）&lt;/li&gt; 
 &lt;li&gt;✅ 模板权限精细化管理与版本控制&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 3. VUE100% 全覆盖&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 前端框架全面升级至 Vue 最新版本&lt;/li&gt; 
 &lt;li&gt;✅ 实现所有业务模块的 Vue 组件化重构&lt;/li&gt; 
 &lt;li&gt;✅ 提升页面加载速度与交互响应性能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 4. 生产管理模块&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 新增生产计划排程与进度跟踪功能&lt;/li&gt; 
 &lt;li&gt;✅ 优化物料需求计算与库存预警机制&lt;/li&gt; 
 &lt;li&gt;✅ 生产质量追溯与异常处理流程优化&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 5. 排班管理系统&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 智能排班算法优化，支持多维度规则配置&lt;/li&gt; 
 &lt;li&gt;✅ 员工考勤与排班冲突自动检测&lt;/li&gt; 
 &lt;li&gt;✅ 移动端排班查看与一键换班功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 二、其他优化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ 系统性能整体优化，平均响应速度提升 30%&lt;/li&gt; 
 &lt;li&gt;🔒 安全防护机制增强，修复已知漏洞&lt;/li&gt; 
 &lt;li&gt;🎨 用户体验细节优化，操作流程简化&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 6. 排班管理系统（新增子功能）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;工位管理&lt;/strong&gt;：实现工位可视化分配与实时状态监控&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;班次管理&lt;/strong&gt;：自定义班次模板与轮班规则配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;排班管理&lt;/strong&gt;：智能排班算法优化，支持多维度规则适配&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;临时工请假申请&lt;/strong&gt;：移动端快捷请假流程与审批管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;临时工月薪明细&lt;/strong&gt;：工时自动核算与薪资明细生成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 7. ERP 模块升级&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;销售换货&lt;/strong&gt;：完整换货流程跟踪与库存联动&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;销售退货&lt;/strong&gt;：退货原因分类统计与退款时效优化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;借出管理&lt;/strong&gt;：资产借出登记与到期提醒&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;归还管理&lt;/strong&gt;：归还验收流程与状态变更记录&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 8. 智慧门店系统&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;门店订单管理&lt;/strong&gt;：线上线下订单一体化处理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;运费模板计费配置&lt;/strong&gt;：多维度运费规则自定义与智能计算&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;商城美化&lt;/strong&gt;：店铺装修模板库更新，支持可视化编辑&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 9. 财务系统增强&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能模块&lt;/th&gt; 
   &lt;th&gt;核心优化&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;收支管理&lt;/td&gt; 
   &lt;td&gt;全流程资金流向跟踪与分类统计&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;财务账号&lt;/td&gt; 
   &lt;td&gt;多账户体系管理与权限隔离&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;账套管理&lt;/td&gt; 
   &lt;td&gt;支持多会计主体独立核算&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;会计科目&lt;/td&gt; 
   &lt;td&gt;自定义科目体系与智能映射&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;凭证管理&lt;/td&gt; 
   &lt;td&gt;电子凭证生成与自动化审核&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;收付款管理&lt;/td&gt; 
   &lt;td&gt;多渠道支付集成与自动对账&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;资金统计&lt;/td&gt; 
   &lt;td&gt;实时资金看板与趋势分析&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;应收账款&lt;/strong&gt;：账龄分析与自动催款提醒&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;应付账款&lt;/strong&gt;：付款计划排程与供应商对账&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开具发票&lt;/strong&gt;：电子发票开具与批量导出&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;发票收取&lt;/strong&gt;：进项发票管理与认证提醒&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;发票统计&lt;/strong&gt;：全量发票数据可视化分析&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;费用申请&lt;/strong&gt;：事前申请与预算控制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;费用报销&lt;/strong&gt;：智能审核与电子归档&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;费用分析&lt;/strong&gt;：部门 / 项目费用占比与趋势监控&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;借款管理&lt;/strong&gt;：员工借款流程与额度控制&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;还款管理&lt;/strong&gt;：借款核销与逾期提醒&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;借还统计&lt;/strong&gt;：全周期借款数据汇总分析&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔹 10. 招聘模块&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;招聘分析&lt;/strong&gt;：多维度招聘数据看板，包含渠道效能、简历转化率、招聘周期分析&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;strong&gt;项目地址：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Gitee：&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;https://gitee.com/dromara/skyeye&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;GitCode：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://gitcode.com/doc_wei/erp-pro&lt;/li&gt; 
 &lt;li&gt;https://gitcode.com/doc_wei/skyeye-oa&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;PC 端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-35a653b1c873ab9501f7187b0901a27cc64.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a8f7c658a21594b2787c667fc1214c673b1.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-50138b38c37d750b93db5b37493f71bf4ca.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-00fd5dbd8a44f8d815ecf77d93d37062616.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-6499d74ddcfe9a99997d8c797aae7b7f0b0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-e97af4a2caccb199b76d906ecbb339a7575.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a58e6cb3e687de2a468cb095516951f077c.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-9eb76f53a99358fdf1ce532dc711baec41a.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ce7c58e9fe940d58b2cb9cec441176b3481.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ca685ab278a861067f5850e12470e155e59.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-270d853e879bc14cf6632d67e0168c656c0.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-0bebb255d3c79c13a69bfa0fbb7fcd80836.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-90cde5042c0effeea9e85761ff8dc7283d5.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-47ccf76ab671effc6142727caf066d67071.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;移动端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-6850576a0a01188e6b2a9d1ecce58ed7455.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-770416ac656e0b41097dc917b2b404e62f2.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-754034f48dd04fd9ee1e6618db0e37f6ecb.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-d7707ebc67ddf3842adbb54fdc0c062a2a1.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365407/win10-skyeye-2-5-8-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365407/win10-skyeye-2-5-8-released</guid>
      <pubDate>Mon, 11 Aug 2025 01:42:05 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🔥ioGame 21.30，java 分布式网络游戏服务器框架（轻量级）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;ioGame 是 java、netty 轻量级分布式网络游戏服务器框架。框架&lt;span style="color:#1c1e21"&gt;具备&lt;/span&gt;&lt;strong&gt;一次编写到处对接&lt;/strong&gt;&lt;span style="color:#1c1e21"&gt;的能力，为客户端提供了代码生成的辅助功能，能够帮助客户端开发者减少巨大的工作量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#1c1e21"&gt;你只需要编写一次 java 代码，就能为 Godot、UE、Unity、CocosCreator、Laya、React、Vue、Angular ... 等项目&lt;/span&gt;&lt;strong&gt;生成统一的交互接口&lt;/strong&gt;&lt;span style="color:#1c1e21"&gt;。 交互接口确保了方法的参数类型安全且明确，使我们&lt;/span&gt;&lt;strong&gt;在编译阶段&lt;/strong&gt;&lt;span style="color:#1c1e21"&gt;就能发现潜在问题。 这种做法有效避免了安全隐患，并减少了联调时可能出现的低级错误。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#1c1e21"&gt;支持语言:&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;strong&gt;C#、TypeScript、GDScript、C++、Lua&lt;/strong&gt;&lt;span style="color:#1c1e21"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;ioGame 源码完全开放、最新文档阅读完全开放；使用完全自由、免费（遵守开源协议）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;ioGame 是一个&lt;/span&gt;&lt;span style="color:#262626"&gt;轻量级的&lt;/span&gt;&lt;span style="color:#333333"&gt;网络编程框架，适用于&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;及各种需要长连接的场景。&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;文档与日志&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fversion_log" target="_blank"&gt;框架版本更新日志&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2F" target="_blank"&gt;ioGame 真轻量级网络编程框架 - 在线文档&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;ioGame 每月会发 1 ~ 2 个版本，通常在大版本内升级总是兼容的，如 21.1 升级到任意 21.x 的高版本。&lt;/span&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;hr&gt;
 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Freleases%2Ftag%2F21.30" target="_blank"&gt;https://github.com/iohao/ioGame/releases/tag/21.30&lt;/a&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span&gt;版本更新汇总&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;blockquote&gt;
  1.&amp;nbsp;
  &lt;span&gt;fix(generate-code): &lt;/span&gt;
  &lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fiohao%2FioGame%2Fissues%2F490" target="_blank"&gt;#490&lt;/a&gt;&lt;/span&gt;
  &lt;span&gt; Fixed the escaping of special characters in the Listener exampleCode for the code generation module. 修复 C# 代码生成时的转义字符&lt;/span&gt;
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;h3&gt;&lt;span style="color:#40485b"&gt;ioGame 使用趋势数据&lt;/span&gt;&lt;/h3&gt; 
  &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;关注 ioGame 的游戏服务器开发者持续增多，&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;2022-09 ~ 至今&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;各月&lt;/span&gt;&lt;span&gt;的统计数据；&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;这里的统计信息是关于开发者关注 ioGame 框架相关的，从统计数据中可以看出，由于 ioGame 上手简单，功能强大等优点，得到了众多开发者的关注。如果你想知道 ioGame 有没有人在使用，可以先到这里看下统计数据、开发者的评价与讨论。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8" target="_blank"&gt;&lt;span&gt;https://www.yuque.com/iohao/game/gpxk93#TwVa8&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;这里展示了每月的统计数据，统计数据来源于语雀后台，这些数据都是&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;真实的、客观存在的、活的&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;blockquote&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;因为成本的原因，某宝某多还没有出现能提供这种服务的商家，所以这样的统计数据也更具真实性。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;/blockquote&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;通过统计数据，我们可以看到每天会有很多开发者在访问 ioGame 的在线文档，并且这些统计数据不是来源于口嗨的，也不是主观创造的。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;所以，还在犹豫要不要使用 ioGame 的开发者们，更应该讨论的是 「为什么这些开发者会选择使用 ioGame」，而不是 ioGame 有没有人在使用的问题。&lt;/span&gt;&lt;/p&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao" target="_blank"&gt;&lt;span&gt;点击我，到语雀后台查看 ioGame 的数据&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
   &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1594" src="https://oscimg.oschina.net/oscnet//35418654e38a44fceab45e34e90da0d8.png" width="1566" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
   &lt;div&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="background-color:#fff8e6; color:#4d3800"&gt;由于文档已经迁出语雀，所以后续将不会使用语雀的统计数据。&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;hr&gt; 
   &lt;h2&gt;ioGame 网络游戏服务器框架简介&lt;/h2&gt; 
  &lt;/div&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;你是否想要开发一个&lt;strong&gt;高性能、稳定、易用、自带负载均衡、避免类爆炸设计、可跨进程跨机器通信、集群无中心节点、集群自动化、有状态多进程的分布式的&lt;/strong&gt;网络编程服务器呢？ 如果是的话，这里向你推荐一个由 java 语言编写的网络编程框架 ioGame。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 是一个轻量级的网络编程框架，适用于&lt;strong&gt;网络游戏服务器、物联网、内部系统&lt;/strong&gt;及各种需要长连接的场景。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;ioGame 有以下特点：&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;ol&gt; 
    &lt;li&gt;真轻量级、无锁异步化、事件驱动的架构设计。&lt;/li&gt; 
    &lt;li&gt;包体小、内存占用少、启动速度快。&lt;/li&gt; 
    &lt;li&gt;ioGame 是纯 javaSE 的，使得 ioGame 能与其他框架方便的进行集成、融合，如 Spring ... 等。&lt;/li&gt; 
    &lt;li&gt;在学习成本方面，ioGame 的学习成本非常低，可以说是&lt;strong&gt;零学习成本&lt;/strong&gt;，即使没有游戏编程经验，也能轻松上手。开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能用框架开发业务。&lt;/li&gt; 
    &lt;li&gt;ioGame 在架构上解决了传统框架所产生的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;N*N 问题&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;在轻量级方面，ioGame&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;不依赖任何第三方&lt;/strong&gt;中间件或数据库&lt;strong&gt;就能支持集群、分布式&lt;/strong&gt;，只需要 java 环境就可以运行。&lt;/li&gt; 
    &lt;li&gt;在架构灵活性方面，ioGame 的架构由三部分组成：1. 游戏对外服、2.Broker（游戏网关）、3. 游戏逻辑服。三者既可相互独立，又可相互融合，这意味着使用 ioGame 可以&lt;strong&gt;适应任何类型的游戏&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;架构是可以动态扩缩的，游戏对外服、游戏逻辑服、Broker（游戏网关）都&lt;strong&gt;支持动态增加和减少&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;在分布式开发体验方面，ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分布式系统时更加简单。&lt;/li&gt; 
    &lt;li&gt;在生态规划方面，游戏逻辑服是支持独立运行，&lt;strong&gt;从而实现功能模块化的可能性&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;具备全链路调用日志跟踪特性。&lt;/li&gt; 
    &lt;li&gt;在通讯方式方面，提供多种通讯方式，且逻辑服之间可以相互跨机器通信。&lt;/li&gt; 
    &lt;li&gt;在编码风格上，提供了类 MVC 的编码风格（无入侵的 Java Bean ），这种设计方式很好的&lt;strong&gt;避免了类爆炸&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;在线程安全方面，框架为开发者解决了单个玩家的&lt;strong&gt;并发问题&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;在连接方式方面，允许开发者&lt;strong&gt;使用一套业务代码&lt;/strong&gt;，同时支持 TCP、WebSocket、UDP 等多种连接方式，无需进行任何修改，并且可扩展。&lt;/li&gt; 
    &lt;li&gt;在数据协议方面，ioGame 让开发者&lt;strong&gt;用一套业务代码&lt;/strong&gt;，就能轻松切换不同的数据协议，如 Protobuf、JSON 等，并且可扩展。&lt;/li&gt; 
    &lt;li&gt;在增减协议方面，ioGame 可以让你在&lt;strong&gt;新增或减少协议&lt;/strong&gt;时，&lt;strong&gt;无需重启&lt;/strong&gt;游戏对外服与 Broker（游戏网关）。这样既能避免玩家断线，又能避免因新增、减少协议而重启所有机器的痛点。&lt;/li&gt; 
    &lt;li&gt;action 支持自动装箱、拆箱基础类型，用于解决&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fprotocol_fragment" target="_blank"&gt;协议碎片&lt;/a&gt;的问题。&lt;/li&gt; 
    &lt;li&gt;业务框架提供了插件机制，插件是可插拨、可扩展的。&lt;/li&gt; 
    &lt;li&gt;在部署方面，ioGame 支持&lt;strong&gt;多服单进程&lt;/strong&gt;的方式部署，也支持&lt;strong&gt;多服多进程&lt;/strong&gt;多机器的方式部署，在部署方式上可以随意的切换而不需要更改代码。&lt;/li&gt; 
    &lt;li&gt;在安全方面，所有的游戏逻辑服不需要开放端口，&lt;strong&gt;天然地避免了扫描攻击&lt;/strong&gt;。&lt;/li&gt; 
    &lt;li&gt;在模拟客户端测试方面，ioGame 提供了压测 &amp;amp; 模拟客户端请求模块。该模块&lt;strong&gt;可以模拟真实的网络环境&lt;/strong&gt;，并且在模拟测试的过程中与服务器的交互是可持续的、可互动的，同时也是支持自动化的。&lt;/li&gt; 
    &lt;li&gt;框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问。&lt;/li&gt; 
    &lt;li&gt;分布式事件总线支持（类似 MQ、Redis 发布订阅机制，可跨多个机器通信、可跨多个进程通信）。&lt;/li&gt; 
    &lt;li&gt;提供优雅的路由访问权限控制。&lt;/li&gt; 
    &lt;li&gt;具备智能的同进程亲和性。&lt;/li&gt; 
    &lt;li&gt;JSR380 验证、断言 + 异常机制 = 更少的维护成本。&lt;/li&gt; 
    &lt;li&gt;一次编写到处对接，提升巨大的生产力，能为各客户端生成可交互的代码。你只需要编写一次 java 代码，就能为 Godot、UE、Unity、CocosCreator、Laya、React、Vue、Angular ... 等项目生成统一的交互接口。&lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/blockquote&gt; &amp;nbsp; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 在打包、内存占用、启动速度等方面也是优秀的。 打 jar 包后大约&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;15MB&lt;/strong&gt;，应用通常会在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;0.x 秒&lt;/strong&gt;内完成启动，内存占用小。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在生态融合方面，ioGame 可以很方便的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fintegration_spring" target="_blank"&gt;与 Spring 集成&lt;/a&gt;（4 行代码）。 除了 Spring 外，还能与任何其他的框架做&lt;strong&gt;融合&lt;/strong&gt;，如 Vert.x、Quarkus、Solon ... 等，从而使用其他框架的相关生态。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在学习成本方面，ioGame 的学习成本非常低，可以说是&lt;strong&gt;零学习成本&lt;/strong&gt;，即使没有游戏编程经验也能轻松上手。 开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能使用框架开发业务。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在编码风格上，ioGame 为开发者提供了类 MVC 的编码风格（无入侵的 Java Bean ），这种设计方式很好的&lt;strong&gt;避免了类爆炸&lt;/strong&gt;。 同时，框架为开发者提供了同步、异步、异步回调的方法，用于逻辑服之间的相互访问。 这使得开发者所编写的代码会非常的优雅，并且具备全链路调用日志跟踪。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;与客户端对接方面，ioGame 具备&lt;strong&gt;一次编写到处对接&lt;/strong&gt;的能力，为客户端提供了代码生成的辅助功能，能够帮助客户端开发者减少巨大的工作量。 这将意味着，你只需要编写一次 java 代码，就能为 Godot、UE、Unity、CocosCreator、Laya、React、Vue、Angular ... 等项目生成统一的交互接口。 ioGame 提供了多种语言的 SDK 支持及相关语言的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fexamples%2Fcode_generate" target="_blank"&gt;代码生成&lt;/a&gt;，分别是 C#、TypeScript、GDScript、C++，并支持扩展。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 在架构上解决了传统框架所产生的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;N*N 问题&lt;/strong&gt;（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Flegacy_system" target="_blank"&gt;与传统架构对比&lt;/a&gt;）。 传统架构在扩展机器时，需要借助很多第三方中间件，如：Redis、MQ、ZooKeeper ... 等，才能满足整体架构的运作。 通常，只要引入了需要安装的中间件才能做到扩展的，那么你的架构或者说框架，基本上与轻量级无缘了。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在轻量级方面，ioGame&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;不依赖任何第三方&lt;/strong&gt;中间件或数据库&lt;strong&gt;就能支持集群、分布式&lt;/strong&gt;，只需要 java 环境就可以运行。 这意味着在使用上简单了，在部署上也为企业减少了部署成本、维护难度。使用 ioGame 时，只需一个依赖即可获得整个框架， 而无需安装其他服务，如： Nginx、Redis、MQ、Mysql、ZooKeeper、Protobuf 协议编译工具 ... 等。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Fdeploy_flexible" target="_blank"&gt;架构灵活性&lt;/a&gt;方面，ioGame 的架构由三部分组成：1. 游戏对外服、2.Broker（游戏网关）、3. 游戏逻辑服。 三者既可相互独立，又可相互融合。 这意味着使用 ioGame 可以&lt;strong&gt;适应任何类型的游戏&lt;/strong&gt;，因为只需通过调整部署方式，就可以满足不同类型的游戏需求。 在 ioGame 中进行这些调整工作非常简单，而且不会对现有代码产生不良影响。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;架构是可以动态扩缩的，游戏对外服、游戏逻辑服、Broker（游戏网关）都&lt;strong&gt;支持动态增加和减少&lt;/strong&gt;。 无论未来玩家数量增加或减少，我们都能够轻松应对。 同时，架构是&lt;strong&gt;支持玩家无感知更新&lt;/strong&gt;的，这得益于分布式设计。 举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器， 然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在集群方面，ioGame 的 Broker （游戏网关）采用无中心节点、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fexamples%2Fserver%2Fexample_broker_cluster" target="_blank"&gt;自动化的集群设计&lt;/a&gt;，所有节点平等且自治，不存在单点故障。 集群能够&lt;strong&gt;自动管理和弹性扩缩&lt;/strong&gt;，节点加入或退出时，能够自动保证负载均衡和数据一致性，不影响服务可用性。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在分布式方面，ioGame 的逻辑服使用了分布式设计思想，将服务器分为&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Fexternal_intro" target="_blank"&gt;游戏对外服&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Flogic_intro" target="_blank"&gt;游戏逻辑服&lt;/a&gt;等不同层次， 并且每一层都有明确的职责和接口。这样可以提高代码可读性和可维护性，并且方便进行&lt;strong&gt;水平扩展&lt;/strong&gt;。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在分布式开发体验方面，通常在开发分布式应用时是需要启动多个进程的。 这会让调试与排查问题变得非常困难，从而降低开发者的效率、增加工作量等，这也是很多框架都&lt;strong&gt;解决不了的问题&lt;/strong&gt;，但 ioGame 做到了！ ioGame 支持多服单进程的启动方式，这使得开发者在开发和调试分布式系统时更加简单。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual_high%2Fyour_ecology" target="_blank"&gt;生态规划&lt;/a&gt;方面，我们的游戏逻辑服是支持独立运行的，只需接入 Broker（游戏网关）上， 就可以为玩家和其他游戏逻辑服提供功能上的扩展与增强。 我们可以将一些&lt;strong&gt;游戏逻辑服组件化&lt;/strong&gt;，并制作成相对通用的组件，&lt;strong&gt;从而实现功能模块化的可能性&lt;/strong&gt;。这么做有几个优点&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;避免一些重复开发的工作量。&lt;/li&gt; 
   &lt;li&gt;减少各功能模块的耦合。&lt;/li&gt; 
   &lt;li&gt;更符合单一职责的设计，将相对通用的功能扩展成一个个的&lt;strong&gt;功能逻辑服&lt;/strong&gt;。如，公会逻辑服、好友逻辑服、登录逻辑服、抽奖逻辑服、公告逻辑服、排行榜逻辑服... 等。&lt;/li&gt; 
   &lt;li&gt;由于模块功能是独立，那么将来可以对任意的功能逻辑服进行扩容，且不需要改动任何代码。&lt;/li&gt; 
   &lt;li&gt;这些组件化后的功能逻辑服就好比一件件武器，积累得足够多时就形成了自己的生态武器库，可以更好的帮助公司与同行竞争。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;代码泄漏机率更小&lt;/strong&gt;。传统的游戏项目通常采用单机结构，把所有的代码放在一个目录中。这样做有很大的风险，因为如果代码泄漏了，就会泄漏整个项目的内容。当功能模块化后，可以让不同的开发人员只负责自己的游戏逻辑服模块，从而避免代码泄漏的风险和影响。&lt;/li&gt; 
   &lt;li&gt;团队管理员只需要在内网服务器上部署一个游戏网关和游戏对外服，而开发人员就可以在本机上编码和测试自己的游戏逻辑服模块。这样还有以下好处 
    &lt;ul&gt; 
     &lt;li&gt;游戏客户端不会因为游戏逻辑服的变更或重启而断开连接。&lt;/li&gt; 
     &lt;li&gt;开发人员不需要启动其他人的游戏逻辑服模块。&lt;/li&gt; 
     &lt;li&gt;开发人员可以通过 ioGame 自动生成的文档来进行模块间的对接。&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 具备&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Ftrace" target="_blank"&gt;全链路调用日志跟踪&lt;/a&gt;特性，这在分布式下非常的实用。 该特性为每个请求分配一个唯一标识，并记录在日志中，通过唯一标识可以快速的在日志中过滤出指定请求的信息。 ioGame 提供的全链路调用日志跟踪特性更是强大，&lt;strong&gt;支持跨机器、跨进程&lt;/strong&gt;。 简单的说，从玩家的请求进来到结束，无论该请求经过了多少个游戏逻辑服，都能精准记录。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在通讯方式方面，大部分框架只能支持推送（广播）这一类型的通讯方式。 ioGame 则提供了多种&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fcommunication_model" target="_blank"&gt;通讯模型&lt;/a&gt;， 通过对各种通讯方式的组合使用，可以简单完成以往难以完成的工作， 并且这些通讯方式都支持跨进程、跨机器通信，且具备全链路调用日志跟踪。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;在客户端的角度，提供了如下的通讯模型&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Frequest_response" target="_blank"&gt;request/response&lt;/a&gt;，请求 / 响应&lt;/li&gt; 
     &lt;li&gt;request/void，请求 / 无响应&lt;/li&gt; 
     &lt;li&gt;request/broadcast，请求 / 广播响应&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A3000%2Fdocs%2Fcommunication%2Fbroadcast" target="_blank"&gt;broadcast&lt;/a&gt;，广播&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;内部通讯主要用于服务器内部之间的通信，跨服、跨进程通信。提供了如下的通讯模型&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Frequest_response" target="_blank"&gt;request/response&lt;/a&gt;，请求 / 响应&lt;/li&gt; 
     &lt;li&gt;request/void，请求 / 无响应&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Frequest_multiple_response" target="_blank"&gt;request/multiple_response&lt;/a&gt;，同时请求同类型多个游戏逻辑服&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Fevent_bus" target="_blank"&gt;EventBus&lt;/a&gt;，分布式事件总线&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcommunication%2Fexternal_biz_region" target="_blank"&gt;ExternalRegion&lt;/a&gt;，访问游戏对外服&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;从 ioGame21 开始，框架添加了虚拟线程的相关支持。 各逻辑服之间通信阻塞部分使用虚拟线程，这样可以很好的避免阻塞业务线程，并大幅提高了框架的吞吐量。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在线程安全方面，框架为开发者解决了单个玩家的&lt;strong&gt;并发问题&lt;/strong&gt;。 即使玩家重新登录后，也会使用相同的线程来消费业务，并推荐使用&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fextension_module%2Fdomain_event" target="_blank"&gt;领域事件&lt;/a&gt;来解决同一房间或业务内多个玩家的并发问题。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Fthread_executor" target="_blank"&gt;框架在线程的扩展性&lt;/a&gt;上提供了友好的支持，开发者可以很容易的编写出无锁并发代码，这得益于 ioGame 独有的线程执行器设计与扩展。 换句话说，你不会因为并发问题烦恼。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在无锁并发方面，ioGame 提供了优雅、独特的线程执行器设计。通过该特性，开发者能轻易的编写出无锁高并发的代码。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在连接方式方面，ioGame 允许开发者&lt;strong&gt;使用一套业务代码&lt;/strong&gt;，&lt;strong&gt;同时支持&lt;/strong&gt;多种连接方式，无需进行任何修改。 ioGame 已经支持了 TCP、WebSocket 和 UDP 连接方式，并且也支持在这几种连接方式之间进行灵活切换。 连接方式是可扩展的，并且扩展操作也很简单，这意味着之后如果支持了 KCP、QUIC， 无论你当前项目使用的是 TCP、WebSocket、UDP，都可以切换成 KCP、QUIC。 即使切换到 KCP、QUIC 的连接方式，现有的业务代码也无需改变。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在通信协议方面，ioGame 让开发者&lt;strong&gt;用一套业务代码&lt;/strong&gt;，就能轻松&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fdata_protocol" target="_blank"&gt;切换和扩展不同的数据协议&lt;/a&gt;， 如 Protobuf、JSON 等。只需一行代码，就可以从 Protobuf 切换到 JSON，无需改变业务方法。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在增减协议方面，ioGame 可以让你在&lt;strong&gt;新增或减少协议&lt;/strong&gt;时，&lt;strong&gt;无需重启&lt;/strong&gt;游戏对外服与 Broker（游戏网关）。 这样既能避免玩家断线，又能避免因新增、减少协议而重启所有机器的痛点。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在协议碎片方面，action 支持自动装箱、拆箱基础类型特性，用于解决&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fprotocol_fragment" target="_blank"&gt;协议碎片&lt;/a&gt;的问题。 同时该特性除了能使你的业务代码更加清晰以外，还能大幅提高开发者在该环节的生产力。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual_high%2Fsame_process" target="_blank"&gt;同进程亲和性&lt;/a&gt;方面，在同一进程内， 不同 Netty 实例之间的通信，是通过内存进行传输的，不需要经过网络传输，数据传输速度极快。 同进程亲和性指的是，优先访问同进程内的游戏逻辑服，当同进程内没有能处理请求的游戏逻辑服时， 才会去其他进程或机器中查找能处理请求的游戏逻辑服。 简单点说，框架对于请求的处理很智能，会优先将请求给同进程内的逻辑服消费。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在开发体验方面，ioGame 非常注重开发者的开发体验。 框架提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcore%2Fjsr380" target="_blank"&gt;JSR380 验证&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fassert_game_code" target="_blank"&gt;断言 + 异常机制&lt;/a&gt;、&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fcore_plugin%2Faction_debug" target="_blank"&gt;业务代码定位&lt;/a&gt;， action 支持自动装箱、拆箱基础类型，用于解决协议碎片的问题 ... 等。 诸多丰富的功能，使得开发者的业务代码更加的清晰、简洁。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;业务框架提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual%2Fplugin_intro" target="_blank"&gt;插件&lt;/a&gt;机制，插件是可插拨、可扩展的。 框架内置提供了 DebugInOut、action 调用统计、业务线程监控插件、各时间段调用统计插件... 等插件。 不同的插件提供了不同的关注点，比如我们可以使用调用、监控等插件相互配合，可以让我们在开发阶段就知道&lt;strong&gt;是否存在性能问题&lt;/strong&gt;。 合理利用好各个插件，可以让我们在开发阶段就能知道问题所在，提前发现问题，提前预防问题。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在部署方面，ioGame 支持&lt;strong&gt;多服单进程&lt;/strong&gt;的方式部署，也支持&lt;strong&gt;多服多进程&lt;/strong&gt;多机器的方式部署，在部署方式上可以随意的切换而不需要更改代码。 日常中我们可以按照单体思维开发，到了生产可以选择性的使用多进程的方式部署。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在安全方面，所有的游戏逻辑服&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Foverall%2Flegacy_system%23Usage-Management" target="_blank"&gt;不需要开放端口，天然地避免了扫描攻击&lt;/a&gt;。 由于不需要为每个逻辑服分配独立的端口，那么我们在使用诸如云服务器之类的服务时，就不需要担心端口开放权限的问题了。 别小看这一个环节，通常这些小细节最浪费开发者的时间。 由于我们不需要管理这些 IP:Port，&lt;strong&gt;这部分的工作量就自然地消失了&lt;/strong&gt;。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;在模拟客户端测试方面，ioGame 提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fextension_module%2Fsimulation_client" target="_blank"&gt;压测 &amp;amp; 模拟客户端请求&lt;/a&gt;模块。 此模块是用于模拟客户端，简化模拟工作量，只需要编写对应请求与回调。 除了可以模拟简单的请求外，通常还可以做一些复杂的请求编排，并支持复杂业务的压测。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;与单元测试不同的是，该模块可以模拟真实的网络环境，并且在模拟测试的过程中与服务器的交互是可持续的、可互动的，同时也是支持自动化的&lt;/strong&gt;。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;使用 ioGame，可以显著的帮助企业减少巨额成本。 文档中，&lt;strong&gt;成本&lt;/strong&gt;关键字提到了很多次，各个阶段均有关联，包括了学习、研发、测试、部署、扩展、投入 ... 等各阶段。 在同等资源的竞争下，使用 ioGame 能为公司节省更多的资源，从而提高了自身的生存率。 更重要的是避免了为其他公司做嫁衣的可能性，具体可阅读&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fservices%2Fcost_analysis" target="_blank"&gt;成本分析案例&lt;/a&gt;。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;开发者基于 ioGame 编写的项目模块，通常是条理清晰的，得益于框架对&lt;strong&gt;路由的合理设计&lt;/strong&gt;，同时也为路由提供了优雅的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fexternal%2Faccess_authentication" target="_blank"&gt;访问权限控制&lt;/a&gt;。 当我们整理好这些模块后，对于其他开发者接管项目或后续的维护中，会是一个不错的帮助（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fmanual_high%2Fcode_organization" target="_blank"&gt;代码组织与约定&lt;/a&gt;）。 或许现阶段你感受不到这块的威力，随着你深入地使用实践就能体会到这么设计的诸多好处与优势。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;开发者基于 ioGame 编写的项目，通常是语法简洁的、高性能的、低延迟的。 框架最低要求使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;JDK21&lt;/strong&gt;，这样即可以让项目享受到&lt;strong&gt;分代 ZGC&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;带来的改进，还能享受语法上的简洁。 分代 ZGC 远低于其&lt;strong&gt;亚毫秒级&lt;/strong&gt;暂停时间的目标，可以在不影响游戏速度的情况下，清理掉多余的内存。 这样就不会出现卡顿或者崩溃的问题了，相当于在项目中变相的引入了一位 JVM 调优大师。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;综上所述，ioGame 是一个非常适合网络游戏开发的框架。可以让你轻松地创建高性能、低延迟、易扩展的游戏服务器，并且节省时间和资源。 如果你想要快速地开发出令人惊艳的网络游戏，请不要犹豫，立即选择 ioGame 吧！ 框架屏蔽了很多复杂且重复性的工作，并可为项目中的功能模块结构、开发流程等进行&lt;strong&gt;清晰的组织定义&lt;/strong&gt;，减少了后续的项目维护成本。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;框架在开发、部署、压测 &amp;amp; 模拟测试 ... 等，各个阶段都提供了很好的支持。 相信你已经对 ioGame 有了一个初步的了解，虽然还有很多丰富的功能与特性没有介绍到，但你可以通过后续的实践过程中来深入了解。 感谢你的阅读，并期待你使用 ioGame 来打造自己的游戏服务器。&lt;/p&gt; 
  &lt;hr&gt; 
  &lt;h2&gt;一次编写到处对接，提升巨大的生产力&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fintro%23WriteOnce-IntegrateAnywhere" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 是非常注重开发体验的，代码注释即文档、方法即交互接口的原则。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 具备一次编写到处对接的能力，从而让你们团队提升巨大的生产力。&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;一次编写&lt;/strong&gt;指的是编写一次 java 业务代码，而&lt;strong&gt;到处对接&lt;/strong&gt;则是指为不同的前端项目生成与服务器交互的代码。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;你只需要编写一次 java 代码，就能为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgodotengine.org%2F" target="_blank"&gt;Godot&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.unrealengine.com%2F" target="_blank"&gt;UE&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Funity.com%2F" target="_blank"&gt;Unity&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cocos.com%2F" target="_blank"&gt;CocosCreator&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayaair.layabox.com%2F%23%2F" target="_blank"&gt;Laya&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freact.dev%2F" target="_blank"&gt;React&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvuejs.org%2F" target="_blank"&gt;Vue&lt;/a&gt;、&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fangular.dev%2F" target="_blank"&gt;Angular&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;... 等项目生成统一的交互接口&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;ioGame 能为各种前端项目生成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;action、广播、错误码&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;相关接口代码。 这将意味着，你只需要编写一次业务代码，就可以同时与这些游戏引擎或现代化的前端框架交互。&lt;/p&gt; 
  &lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;前端代码生成的几个优势&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;帮助客户端开发者减少巨大的工作量，&lt;strong&gt;不需要编写大量的模板代码&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;语义明确，清晰&lt;/strong&gt;。生成的交互代码即能明确所需要的参数类型，又能明确服务器是否会有返回值。这些会在生成接口时就提前明确好。&lt;/li&gt; 
   &lt;li&gt;由于我们可以做到明确交互接口，进而可以明确参数类型。这使得&lt;strong&gt;接口方法参数类型安全、明确&lt;/strong&gt;，从而有效避免安全隐患，从而&lt;strong&gt;减少联调时的低级错误&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;减少服务器与客户端双方对接时的沟通成本，代码即文档。生成的联调代码中有文档与使用示例，方法上的示例会教你如何使用，即使是新手也能做到&lt;strong&gt;零学习成本&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;帮助客户端开发者屏蔽与服务器交互部分，&lt;strong&gt;将更多的精力放在真正的业务上&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;为双方联调减少心智负担。联调代码使用简单，&lt;strong&gt;与本地方法调用一般丝滑&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;抛弃传统面向协议对接的方式，转而&lt;strong&gt;使用面向接口方法的对接方式&lt;/strong&gt;。&lt;/li&gt; 
   &lt;li&gt;当我们的 java 代码编写完成后，我们的文档及交互接口可做到同步更新，&lt;strong&gt;不需要额外花时间去维护对接文档及其内容&lt;/strong&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fiohao.github.io%2Fgame%2Fdocs%2Fintro%23Architecture-Overview-Diagram" target="_blank"&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;hr&gt; 
  &lt;h2&gt;&lt;span&gt;架构简图&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="387" src="https://oscimg.oschina.net/oscnet/12963674_5475.jpeg" width="621" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;span style="color:#e8323c"&gt;通过 ioGame 你可以很容易的搭建出一个集群无中心节点、集群自动化、分布式的网络游戏服务器！&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;从图中可以看出，游戏网关支持以集群方式启动多个实例。这个设计选择了集群的方式，因为游戏网关通常是无状态的，主要作用是解耦各逻辑服之间的关系、负载均衡、调度和转发任务。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;而游戏对外服、游戏逻辑服使用分布式设计，支持启动多个相同类型的服务。这意味着，当玩家数量增加时，我们可以轻松增加相应类型的游戏逻辑服以处理更多请求。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;以游戏逻辑服为例，假设我们启动了两个 A 类型的游戏逻辑服，分别为 A-1 和 A-2。当玩家向 A 类型的游戏逻辑服发起多次请求时，游戏网关会使用默认的随机负载策略将请求分配给 A-1 和 A-2 来处理。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;现在我们明白，游戏对外服和游戏逻辑服都支持动态增加和减少。无论未来玩家数量增加或减少，我们都能够轻松应对。架构是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;支持玩家无感知更新&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;的，这得益于分布式设计。举例来说，如果 A 类型的游戏逻辑服需要增加一些新功能，我们可以启动 A-3、A-4 等已经支持了新功能的服务器，然后逐步将之前的 A-1 和 A-2 下线，从而实现了无感知的更新。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;此外，框架还支持玩家&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fidl1wm" target="_blank"&gt;&lt;span&gt;动态绑定游戏逻辑服&lt;/span&gt;&lt;/a&gt;&lt;span&gt;；玩家与游戏逻辑服绑定后，之后的请求都由该游戏逻辑服来处理。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;除了游戏之外，ioGame 也适用于物联网相关项目。只需将图中的玩家视为具体的设备，即使存在数亿个设备，ioGame 的架构也可以轻松支持。从 2022 年开始，已经有一些物联网公司开始采用这一解决方案，并得到了很好的体验。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;ioGame 适用于&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#df2a3f"&gt;网络游戏服务器、物联网、内部系统&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;及各种需要长连接的场景；&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;无锁异步化与事件驱动的架构设计、集群无中心节点、自带负载均衡、分布式支持、可动态增减机器、避免类爆炸的设计；&lt;/span&gt;&lt;/p&gt; 
&lt;table border="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:1px solid #d9d9d9; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; table-layout:fixed; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:583px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;名称&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;扩展方式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="background-color:#f4f5f5; border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;职责&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;游戏对外服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;与玩家连接、交互&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;游戏逻辑服&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;分布式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;处理具体业务逻辑&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;Broker（游戏网关）&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;集群&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#d9d9d9; border-style:solid; border-width:1px; height:33px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;调度和转发任务；&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr&gt; 
&lt;h2&gt;通过 ioGame 可以使得游戏编程变得简单，下面是一个业务示例&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;数据协议&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;现在，我们定义两个数据协议，用于客户端与服务器的数据交互。 这是一个 jprotobuf 的 pb 对象，jprotobuf 是对 google protobuf 的简化使用，性能同等。&lt;/p&gt; 
&lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;可以把这理解成 DTO、POJO、业务数据载体等，其主要目的是用于业务数据的传输。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@ProtobufClass&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;LoginVerifyMessage&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;{
    &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt; String jwt;
}

&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@ProtobufClass&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;UserMessage&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;{
    &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt; String name;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Action&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#1c1e21; margin-left:0; margin-right:0; text-align:start"&gt;游戏服务器的编程，游戏服务器接收业务数据后，对业务数据进行处理。 下面这段代码可以同时支持 TCP、WebSocket、UDP 通信方式。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@ActionController(1)&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style="color:#d73a49"&gt;&lt;span&gt;&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;&lt;span&gt;&lt;span style="color:#6f42c1"&gt;DemoAction&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;{
    &lt;span style="color:#6a737d"&gt;&lt;span style="color:#6a737d"&gt;@ActionMethod(0)&lt;/span&gt;&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;public&lt;/span&gt;&lt;/span&gt; UserMessage here(LoginVerifyMessage message) {
        &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;var&lt;/span&gt;&lt;/span&gt; userMessage = new UserMessage();
        userMessage.name = &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;"Michael Jackson, "&lt;/span&gt;&lt;/span&gt; + message.jwt;
        &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;return&lt;/span&gt;&lt;/span&gt; userMessage;
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;一个方法（here）在业务框架中表示一个&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsqcevl" target="_blank"&gt;&lt;span&gt;Action&lt;/span&gt;&lt;/a&gt;&lt;span&gt;（一个业务动作）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;方法声明的参数是用于接收前端传入的业务数据，在方法 return 时，数据就可以被游戏前端接收到。程序员可以不需要关心业务框架的内部细节。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;从上面的示例可以看出，这和普通的 java 类并无区别，同时这种设计方式&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#fa8c16"&gt;避免了类爆炸&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。如果&lt;/span&gt;&lt;span style="color:#e8323c"&gt;只负责编写游戏业务&lt;/span&gt;&lt;span&gt;，那么对于业务框架的学习可以&lt;/span&gt;&lt;span style="color:#e8323c"&gt;到此为止&lt;/span&gt;&lt;span&gt;了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#f5222d"&gt;游戏编程就是如此简单&lt;/span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;问：我可以开始游戏服务&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;器&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;的编程了吗？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;是的，你已经可以开始游戏服务&lt;/span&gt;&lt;span style="color:#333333"&gt;器&lt;/span&gt;&lt;span&gt;的编程了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;访问示例（控制枱）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;当我们访问&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#e8323c"&gt;here&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;方法时（通常由游戏前端来请求），控制枱将会打印&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;┏━━━━━ &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;Debug&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[(DemoAction.java:4).hello]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[cmd:1-0 65536]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[逻辑服 [xxx 逻辑服]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;-&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[76526c134cc88232379167be83e4ddfc]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;]
┣ &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;userId&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
┣ 参数: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;active&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; : &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(id=&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;101&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, name=塔姆)
┣ 响应: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;HelloReq&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(name=塔姆, I'm here )
┣ 时间: &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;&lt;span style="color:#d73a49"&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (业务方法总耗时)
┗━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[ioGameVersion]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[线程:User-8-2]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━ &lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;[traceId:956230991452569600]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;控制枱打印说明&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e8323c"&gt;Debug. [(DemoAction.java:4).here]&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;:&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;表示执行业务的是&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;DemoAction&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;类下的&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;here&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;方法，&lt;/span&gt;&lt;span style="color:#f5222d"&gt;4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;表示业务方法所在的代码行数。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;在工具中点击控制枱的&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;DemoAction.java:4&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;这条信息，就可以跳转到对应的代码中（&lt;/span&gt;&lt;span style="color:#52c41a"&gt;快速导航到对应的代码&lt;/span&gt;&lt;span&gt;），这是一个开发良好体验的开始！&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;userId&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: 当前发起请求的，用户 id。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;参数&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: 通常是游戏前端传入的值。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;响应&lt;/span&gt;&lt;span&gt;：通常是业务方法返回的值 ，业务框架会把这个返回值推送到游戏前端。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;时间&lt;/span&gt;&lt;span&gt;：执行业务方法总耗时，我们可根据业务方法总耗时的时长来优化业务。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#f5222d"&gt;路由信息&lt;/span&gt;&lt;span&gt;：[cmd - subCmd]&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fsoxp4u" target="_blank"&gt;&lt;span&gt;路由&lt;/span&gt;&lt;/a&gt;&lt;span&gt;是唯一的访问地址。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;ioGameVersion&lt;/span&gt;&lt;span&gt;：表示当前所使用的 ioGame 版本。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;线程&lt;/span&gt;&lt;span&gt;：当前执行 action 所使用的线程。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;traceId&lt;/span&gt;&lt;span&gt;：全链路调用日志跟踪 id，每个请求唯一。（该特性在分布式下非常实用）&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#df2a3f"&gt;逻辑服&lt;/span&gt;&lt;span&gt;：当前游戏逻辑服与其 id&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;有了以上信息，游戏开发者可以很快的定位问题。如果没有可视化的信息，开发中会浪费很多时间在前后端的沟通上。问题包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;是否传参问题 （游戏前端说传了）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;是否响应问题（游戏后端说返回了）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;业务执行时长问题 （游戏前端说没收到响应， 游戏后端说早就响应了）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;其中&lt;/span&gt;&lt;span style="color:#f5222d"&gt;代码导航&lt;/span&gt;&lt;span&gt;可以让开发者快速的跳转到业务类对应代码中，在多人合作的项目中，可以快速的知道业务经过了哪些方法的执行，使得我们可以快速的进行阅读或修改；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;适合人群？&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;长期从事 web 内部系统开发人员， 想了解游戏的&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;刚从事游戏开发的&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#333333"&gt;未从事过游戏开发，但却对其感兴趣的&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;对设计模式在实践中的应用和 sofa-bolt 有兴趣的学习者&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;可以接受新鲜事物的&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#40485b"&gt;想放弃祖传代码的&lt;/span&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#333333"&gt;推荐实际编程经验一年以上的人员。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;ioGame&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;提供了丰富的在线高质量使用文档，为你的团队助力，带上你们的小伙伴一起，这样就不用手把手的教了。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365402/iogame-21-30-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365402/iogame-21-30-released</guid>
      <pubDate>Sun, 10 Aug 2025 01:23:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🚀 全面革新！VTJ.PRO 正式接入 GPT‑5 — AI 低代码迈入「思考时代」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;「设计即代码，代码即设计」 早已不是梦想。&lt;br&gt; 现在，加上 GPT‑5 的大脑，低代码的速度与自由正在被彻底改写。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e810d9b3d465b3036d167a3f405585d1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;🧨 过去的低代码，有速度没自由？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;拖拽组件固然很快，但遇到复杂业务逻辑时，调整和维护依旧费力&lt;/li&gt; 
 &lt;li&gt;自动生成的代码质量参差不齐，往往需要人工大量「擦屁股」才能投入生产&lt;/li&gt; 
 &lt;li&gt;AI 辅助生成在过去受限于理解与推理能力，经常出现「牛头不对马嘴」的生成结果&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//87c9fea3757ba6183d5f7caffbf38726.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;💡 这一切，从今天开始结束。&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🤖 新时代来了：GPT‑5 × VTJ.PRO 完整融合&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;2025 年 8 月，OpenAI 发布的 GPT‑5 被誉为「首个通用超智 AI」—— 它不仅理解视觉、语言、代码，还能在跨领域任务中进行深度推理，现在，VTJ.PRO 已在第一时间&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;全量接入 GPT‑5 核心能力&lt;/strong&gt;，并在编辑器、设计器、代码生成、调试等所有环节实现深度融合：&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//534e484360b5921f09b2a3a60c6708b4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;自然语言到可运行全栈组件&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;开发者只需输入一句业务描述，如：「做一个企业审批流页面，PC + 移动双端适配」&lt;/li&gt; 
   &lt;li&gt;💥 几秒内，系统即可自动生成完整 Vue3 源码、响应式样式、接口数据绑定及相关测试用例，直接可部署运行。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e9e71ed1c4530492599700a04674ea21.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;实时双向同步设计与代码&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;当你在可视化画布中拖放一个按钮或调整布局时，GPT‑5 会即时在代码中补齐相关逻辑与事件绑定；&lt;/li&gt; 
   &lt;li&gt;当你在代码中新增方法、组件或数据结构时，设计视图会根据改动自动更新界面并保持绑定一致。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;跨领域智能分析与优化&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在接入 API 时自动调用 GPT‑5 的推理能力，解析并推断接口数据结构，生成类型定义和样例数据&lt;/li&gt; 
   &lt;li&gt;针对性能瓶颈提出针对性优化建议（如 Lazy load、骨架屏、虚拟列表等），并可一键应用优化方案&lt;/li&gt; 
   &lt;li&gt;对项目进行可访问性（a11y）检测，直接提供修复方案，并可自动应用无障碍增强&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;从「辅助开发」升级到「主动开发」&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;GPT‑5 不只是回答，而是会&lt;strong&gt;主动提醒风险、提出更优解&lt;/strong&gt;，像一个「全栈架构师 + 高速打字员」驻场陪你写代码。&lt;/li&gt; 
  &lt;/ul&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2dff897ba90b4ae3bc7f5dc9eb498590.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🎯 你的生产力，会发生怎样的质变？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;单人团队的全能升级&lt;/strong&gt;：一个人，即可完成过去需要前端、UI、测试多角色协作的工作量&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;需求沟通零损耗&lt;/strong&gt;：产品经理直接在 VTJ.PRO 中用自然语言编辑界面，GPT‑5 生成可运行代码，开发无需二次翻译，直接部署到生产&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;原型到生产一步到位&lt;/strong&gt;：过去原型仅作为参考展示，如今它就是可直接运行并带有真实业务逻辑的成品&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//d330daa511c698b2f36e88b163221efe.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;🔥 完全开源！狂揽 9.3K Star 的神器，开发者都在抢！&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;VTJ.PRO 是一款&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;AI 驱动的革命性低代码开发平台&lt;/strong&gt;，专注于提升前端开发效率，尤其深度适配 Vue3 技术栈。它通过融合可视化设计、AI 智能引擎与源码级自由编辑能力，重新定义了高效开发的工作流。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;项目已在 Gitee 完全开源，无商业版与社区版的功能区隔，社区版即包含全部能力，永久免费，绝无功能锁定或额外收费的「商业套路」。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;Gitee 上斩获 9.3K Star&lt;/strong&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;源码仓库：&lt;/strong&gt;&lt;a href="https://gitee.com/newgateway/vtj" target="_blank"&gt;https://gitee.com/newgateway/vtj&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//6ac539bab3ddf588e3c59da97022a086.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;📦 官方限时开放抢先体验&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;从即日起，注册&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flcdp.vtj.pro%2F" target="_blank"&gt;VTJ.PRO&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;即可解锁 GPT‑5 极速构建模式&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;让 AI 写代码已是昨天的故事，&lt;br&gt; 今天，AI 和你一起构思、设计、开发、优化、部署——&lt;br&gt; &lt;strong&gt;这才是 2025 真正的低代码&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//83c8a129d3dac2cec7b2a1d9e2217d1a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;立即试用&lt;/strong&gt;:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2F" target="_blank"&gt;https://vtj.pro&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365398</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365398</guid>
      <pubDate>Sun, 10 Aug 2025 01:16:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>三伏热浪挡不住！1.0.0 余温未散，AntFlow 1.1.0 已携「单库多租户」激情上线</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;单库多租户 + 代码重构 + RuoYi-Mate 正式版，一次到位&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;距离 1.0.0 发布仅两周，团队再次交出硬核答卷。AntFlow 1.1.0 不仅补全了「单数据库多租户」的最后一块拼图，还对核心架构做了手术级重构，并奉上 &lt;strong&gt;RuoYi-Mate&lt;/strong&gt; 正式集成版。一句话：&lt;strong&gt;复杂企业场景，现在可以「一键多租」了！&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 1.1.0 核心亮点&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;维度&lt;/th&gt; 
   &lt;th&gt;新能力&lt;/th&gt; 
   &lt;th&gt;一句话解释&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🏢&lt;strong&gt;租户模型&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;单库多租户&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;一张表、一条 &lt;code&gt;tenant_id&lt;/code&gt; 字段，即可支撑 N 家企业数据隔离；非严格模式还能跨租户审批！&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🏗️&lt;strong&gt;架构升级&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Service 拆分&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BizService&lt;/code&gt; 管业务，&lt;code&gt;Repository&lt;/code&gt; 管数据库，循环依赖清零，二次开发不再踩坑，为后面支持 spring&amp;nbsp;boot 4.x 打下基础&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🧩&lt;strong&gt;生态集成&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;RuoYi-Mate GA&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;官方孵化项目正式可用，3 分钟把 AntFlow 嵌入 RuoYi 体系，用户/角色/菜单零改造。真正做到开箱即用（不使用 ruoyi 的用户仍然可以将 antflow 集成到自己已有项目里）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🎨&lt;strong&gt;体验打磨&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;审批页改版&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;去掉多余返回键，审批按钮沉底；消息通知样式统一。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📸 单库多租户：一张图看懂&lt;/h2&gt; 
&lt;p&gt;&lt;img height="258" src="https://oscimg.oschina.net/oscnet/up-d6a0a266cf81b44074b357e7f79e18546c5.png" width="872" referrerpolicy="no-referrer"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;antflow 一直非常注重系统在复杂场景下的使用支持。其实 antflow 在 0.20.0 版本已支持多数据源多租户，此模式对大企业应用水平扩展提供了强力支持。但是在此模式下不同租户数据物理上严格隔离，运维成本指数级增长，对中小企业来说是不小的挑战。本次单库多租户支持即传统上的靠 tenantId 字段来区分不同租户，同时结合用户反馈，支持非严格模式。在非严格模式下，总管理员设计的流程对子公司可见，实现跨租户审批！此模式非常适合一个总公司下面多个子公司，不同租户子间即有数据隔离又有协同办公需求的场景。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;严格模式&lt;/strong&gt; ：数据 100 % 隔离，租户间零可见。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;非严格模式&lt;/strong&gt; ：总部可跨租户审批、查看全局流程，适合集团型组织。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ 升级注意：旧库请在每张业务表补加 &lt;code&gt;tenant_id&lt;/code&gt; 字段，或直接跑新版脚本（Activiti 原表无需改动）。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🛠️ 升级 &amp;amp; 迁移指南（3 步走）&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;拉最新代码&lt;/strong&gt; &lt;code&gt;git pull origin master&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;执行增量 SQL&lt;/strong&gt; 重新执行 sql 脚本，或者手动加上 tenant_id 字段（几乎涉及了所有表，线上需要升级的用户注意做好测试）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;配置租户开关&lt;/strong&gt; &lt;code&gt;application.properties&lt;/code&gt; 中打开 &lt;code&gt;antflow.multitenant.strict=true&lt;/code&gt;，非严格模式即生效（如果用户不使用多租户，不需要管）&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🖱一键开启多租户&lt;/h2&gt; 
&lt;p&gt;如果用户不使用多租户，不用关心上面的配置。如果想要使用，也是非常简单的，只需要在请求 header 中添加 tenantId 即可！&lt;/p&gt; 
&lt;h2&gt;🎁 若依灵犀 RuoYi-Mate：来啦!集成版开箱即用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;地址&lt;/strong&gt; ：&lt;a href="https://gitee.com/ruoyimate/ruoyimate"&gt;https://gitee.com/ruoyimate/ruoyimate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;特性&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;RuoYi vue3+ AntFlow 后端&lt;/li&gt; 
   &lt;li&gt;Ruoyi-Mate 不是简单的集成。后期会围绕企业级开发增加更灵动的代码生成+大屏+报表+其它成熟的企业级开箱即用模块。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🧩 其它贴心更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;体验增强 ：审批人不存在时不再抛 500，而是按「不允许发起」-&amp;gt;[跳过]-&amp;gt;[转交管理员]多种策略降级，主动权交给用户。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;集成&lt;/strong&gt; ：开放 AntFlowOperationListener ，处理 antflow 在流转过程中的接近三十个事件（需要时看具体方法描述即可，没有复杂的定制需要暂时忽略即可）&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365378/antflow-1-1-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365378/antflow-1-1-0-released</guid>
      <pubDate>Sat, 09 Aug 2025 23:32:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>RXThinkCMF 敏捷开发框架 Laravel10+AntdVue 版本 v2.3.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.3.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、优化核心类库功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、优化代码编码规范；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;一款 PHP 语言基于 Laravel10、Vue3、AntDesign、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可用于快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，目前框架已集成了完整的 RBAC 权限架构和常规基础模块，前端 Vue 端支持多主题切换，可以根据自己喜欢的风格选择想一个的主题，实现了个性化呈现的需求；为了敏捷快速开发，提升研发效率，框架内置了一键 CRUD 代码生成器，自定义了模块生成模板，包括后端 PHP 文件模块和前端 Vue 端个性化模板，可以根据已建好的表结构 (字段注释需规范) 快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、低代码敏捷开发框架。&lt;/p&gt; 
      &lt;h2&gt;内置模块&lt;/h2&gt; 
      &lt;ul&gt; 
       &lt;li&gt;用户管理：用于维护管理系统的用户，常规信息的维护与账号设置。&lt;/li&gt; 
       &lt;li&gt;角色管理：角色菜单管理与权限分配、设置角色所拥有的菜单权限。&lt;/li&gt; 
       &lt;li&gt;菜单管理：配置系统菜单，操作权限，按钮权限标识等。&lt;/li&gt; 
       &lt;li&gt;职级管理：主要管理用户担任的职级。&lt;/li&gt; 
       &lt;li&gt;岗位管理：主要管理用户担任的岗位。&lt;/li&gt; 
       &lt;li&gt;部门管理：主要管理系统组织架构，对组织架构进行统一管理维护。&lt;/li&gt; 
       &lt;li&gt;操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。&lt;/li&gt; 
       &lt;li&gt;登录日志：系统登录日志记录查询包含登录异常。&lt;/li&gt; 
       &lt;li&gt;字典管理：对系统中常用的较为固定的数据进行统一维护。&lt;/li&gt; 
       &lt;li&gt;配置管理：对系统的常规配置信息进行维护，网站配置管理功能进行统一维护。&lt;/li&gt; 
       &lt;li&gt;城市管理：统一对全国行政区划进行维护，对其他模块提供行政区划数据支撑。&lt;/li&gt; 
       &lt;li&gt;友链管理：对系统友情链接、合作伙伴等相关外链进行集成维护管理的模块。&lt;/li&gt; 
       &lt;li&gt;个人中心：主要是对当前登录用户的个人信息进行便捷修改的功能。&lt;/li&gt; 
       &lt;li&gt;广告管理：主要对各终端的广告数据进行管理维护。&lt;/li&gt; 
       &lt;li&gt;站点栏目：主要对大型系统网站等栏目进行划分和维护的模块。&lt;/li&gt; 
       &lt;li&gt;会员管理：对各终端注册的会员进行统一的查询与管理的模块。&lt;/li&gt; 
       &lt;li&gt;网站配置：对配置管理模块的数据源动态解析与统一维护管理的模块。&lt;/li&gt; 
       &lt;li&gt;通知公告：系统通知公告信息发布维护。&lt;/li&gt; 
       &lt;li&gt;代码生成：一键生成模块 CRUD 的功能，包括后端和前端 Vue 等相关代码。&lt;/li&gt; 
       &lt;li&gt;案例演示：常规代码生成器一键生成后的演示案例。&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;h2&gt;软件信息&lt;/h2&gt; 
      &lt;ul&gt; 
       &lt;li&gt;软件名称：RXThinkCMF 敏捷开发框架 Laravel10+AntdVue 版本&lt;/li&gt; 
       &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank"&gt;https://www.rxthink.cn&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.laravel10.antdvue.rxthink.cn" target="_blank"&gt;http://docs.laravel10.antdvue.rxthink.cn&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.laravel10.antdvue.rxthink.cn" target="_blank"&gt;http://manage.laravel10.antdvue.rxthink.cn&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; 
      &lt;h2&gt;版本说明&lt;/h2&gt; 
      &lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"&gt; 
       &lt;tbody&gt; 
        &lt;tr&gt; 
         &lt;th&gt;版本名称&lt;/th&gt; 
         &lt;th&gt;版本说明&lt;/th&gt; 
         &lt;th&gt;版本地址&lt;/th&gt; 
        &lt;/tr&gt; 
       &lt;/tbody&gt; 
       &lt;tbody&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp3.2+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp3.2、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp5.1+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp5.1、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp6.x+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp6、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp8.x+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp8、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel8.x+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel8、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel9.x+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel9、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel10.x+Layui 混编版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel10、Layui、MySQL 等框架研发的混编专业版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp3.2+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp3.2、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp3.2+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp3.2、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp5.1+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp5.1、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp5.1+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp5.1、Vue2.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp6.x+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp6、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp6.x+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp6、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp8.x+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp8、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;ThinkPhp8.x+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 ThinkPhp8、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel8.x+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel8、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel8.x+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel8、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel9.x+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel9、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel9.x+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel9、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel10.x+EleVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel10、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
        &lt;tr&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Laravel10.x+AntdVue 前后端分离版&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Laravel10、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
         &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue"&gt;https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue&lt;/a&gt;&lt;/td&gt; 
        &lt;/tr&gt; 
       &lt;/tbody&gt; 
      &lt;/table&gt; 
      &lt;h2&gt;模块展示&lt;/h2&gt; 
      &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cec2758f3c0d4b559fb1ab8f2461c9a8132.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365377</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365377</guid>
      <pubDate>Sat, 09 Aug 2025 22:31:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Dante Cloud 3.5.4.2 发布，「一套代码、两种架构」的企业级云原生微服务</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;[一] 项目简介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 国内首个支持阻塞式和响应式服务并行的微服务平台。是采用&lt;strong&gt;领域驱动模型 (DDD)&lt;strong&gt;设计思想，以「&lt;strong&gt;高质量代码、低安全漏洞&lt;/strong&gt;」为核心，基于 Spring 生态全域开源技术，高度&lt;/strong&gt;模块化和组件化设计&lt;/strong&gt;，支持&lt;strong&gt;智能电视、IoT 等物联网设备&lt;/strong&gt;认证，满足&lt;strong&gt;国家三级等保要求&lt;/strong&gt;，支持&lt;strong&gt;接口国密数字信封加解密&lt;/strong&gt;等一系列安全体系的多租户微服务解决方案。独创的可以「&lt;strong&gt;一套代码实现微服务和单体两种架构灵活切换&lt;/strong&gt;」的企业级应用系统。&lt;/p&gt; 
&lt;h2&gt;[二] 项目理念&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 一直秉承着「简洁、高效、包容、务实」的理念，使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，不断地深耕细作、去粗取精、用心打造。目标是构建一款&lt;code&gt;代码质量高、维护投入低、安全防护强&lt;/code&gt;的，可以帮助用户快速跨越架构技术选型、技术研究探索阶段，降低传统项目中因安全漏洞、技术负债、低质代码等潜在隐患所产生的高维护投入，期望像项目名字寓意一样，在行业变革的时期承上启下，助力企业信息化建设和变革的产品。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 核心关注点是：&lt;strong&gt;「高质量的系统代码」&lt;/strong&gt;、&lt;strong&gt;「合理的系统架构」&lt;/strong&gt;、&lt;strong&gt;「低耦合的模块划分」&lt;/strong&gt;、&lt;strong&gt;「高安全性系统实现」&lt;/strong&gt;、&lt;strong&gt;「灵活的功能扩展能力」&lt;/strong&gt;，&lt;strong&gt;「优质的微服务实现」&lt;/strong&gt;。不会像其它一些系统一样，追求 &lt;strong&gt;业务功能&lt;/strong&gt; 的 &lt;strong&gt;丰富&lt;/strong&gt; 性。堆叠大量无法做到真正通用的功能，反倒会成为负担和干扰，不如由用户自己按照需求灵活设计和实现。&lt;/p&gt; 
&lt;h2&gt;[三] 架构设计&lt;/h2&gt; 
&lt;p&gt;Dante Cloud 除了提供一套完整的微服务架构以外，还支持以单体架构运行。这里的微服务架构和单体架构并不是分离的两套代码，也不是分离的两个项目。而是完全融合的一整套代码，使用时可以根据需要选择是以微服务模式或者单体模式运行。这是 Dante Cloud 微服务最大的特色之一：&lt;strong&gt;「一套代码、两种架构」&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;基于 &lt;code&gt;Spring Boot&lt;/code&gt; 和 &lt;code&gt;Spring Cloud&lt;/code&gt; 的微服务架构，已经成为企业级应用建设的主流方案。但不可否认的是，搭建一套微服务架构所需的基础设施越来越多，也越来越复杂。仅仅是在开发电脑上搭建一套运行开发调试环境，其复杂度和所需的资源也不容小觑。而很多应用特别是小型应用，在早期开发中或者用户量不大的前期，很多情况下一套单体的，前后端分离的后台就足以满足。完全没有必要上一整套微服务，额外增加复杂度。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud &lt;strong&gt;「一套代码、两种架构」&lt;/strong&gt; 的特点，可以帮助企业在项目早期以单体架构快速建设项目、方便开发人员在本地进行开发以及新技术研究。在项目后期随着用户规模增大以及并发需求提升时，可以快速无缝迁移至微服务架构。&lt;/p&gt; 
&lt;h2&gt;[四] 核心组件&lt;/h2&gt; 
&lt;p&gt;本项目所涉及和使用的核心关键组件中，&lt;strong&gt;其中近 80% 均为 Spring 生态原生或其相关或其默认的组件。使用方法以及代码风格一直也在极尽努力尽量与 Spring 生态的标准规范用法保持一致。&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;听过不等于知道&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;知道不等于了解&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;了解不等于会用&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;会用不等于精通&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;因此，如果你觉得本项目学习曲线高、掌握难度大，不像其它同类开源项目那样「&lt;strong&gt;简单&lt;/strong&gt;」，那么很有可能是你尚未 &lt;strong&gt;真正&lt;/strong&gt; 的了解或者掌握 Spring 生态的相关组件。当然，换个角度，本项目也可以是 &lt;strong&gt;深入学习掌握 Spring 生态各组件的优秀案例。&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本项目提供了《Dante Cloud 及相关知识学习方法和学习路径的建议》，欢迎感兴趣的朋友阅读，&lt;a href="https://my.oschina.net/pointerv/blog/18630283"&gt;【在线阅读】&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud 所使用的核心组件如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;序号&lt;/th&gt; 
   &lt;th&gt;Spring 生态组件&lt;/th&gt; 
   &lt;th&gt;国内开源组件&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Spring Boot&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Alibaba&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Spring Security&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Tencent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;Spring Security OAuth2&lt;/td&gt; 
   &lt;td&gt;JetCache&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Spring Authorization Server&lt;/td&gt; 
   &lt;td&gt;Mybatis Plus&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;Spring Data JPA&lt;/td&gt; 
   &lt;td&gt;JustAuth&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;Spring Data MongoDB&lt;/td&gt; 
   &lt;td&gt;WxJava&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;Spring Data Redis&lt;/td&gt; 
   &lt;td&gt;Hutool&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;Spring Data Envers&lt;/td&gt; 
   &lt;td&gt;sms-spring-boot-starter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;Spring Cloud&lt;/td&gt; 
   &lt;td&gt;grpc-spring-boot-starter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Bus&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Stream&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Gateway&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Loadbalancer&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;Spring Cloud OpenFegin&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Zookeeper&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;Spring Session&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;Spring Integration&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;Spring Kafka&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;Spring WebSocket&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;Spring RSocket&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;Spring Webflux&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;Micrometer&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;SpringDoc&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;Spring Boot Admin&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;[五] 特性介绍&lt;/h2&gt; 
&lt;p&gt;Dante Cloud 演示系统已发布，目前包括在线版、单体离线版 (Docker) 和微服务镜像版, 欢迎体验使用！&lt;/p&gt; 
&lt;p&gt;体验地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.vip%2Fget-started%2Fpreview%2Fonline.html" target="_blank"&gt;https://www.herodotus.vip/get-started/preview/online.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;有任何意见和建议，可以&lt;a href="https://gitee.com/dromara/dante-cloud/issues"&gt;【发 ISSUE】&lt;/a&gt;留言。&lt;/p&gt; 
&lt;h2&gt;[六] 更新内容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;主要更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 前端框架 OAuth2 客户端授权模式及设备授权模式通用操作 API 大幅优化&lt;/li&gt; 
   &lt;li&gt;[优化] 去除早期版本中为了消除 CVE 而增加的 xnio 依赖版本控制配置，改为使用依赖组件传递版本&lt;/li&gt; 
   &lt;li&gt;[优化] 优化 ip2region 数据查询代码，更新 IP 地址库&lt;/li&gt; 
   &lt;li&gt;[优化] 系统以支持 Redis 8.2.0 版本，&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其它更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 前端框架模块新增 OAuth2 客户端授权模式及设备授权模式通用操作 API&lt;/li&gt; 
   &lt;li&gt;[新增] 前端框架模块新增设备码授权模式获取 Access Token 轮询验证 API&lt;/li&gt; 
   &lt;li&gt;[新增] 前端新增 OAuth2 协议内置 Scope 枚举定义&lt;/li&gt; 
   &lt;li&gt;[新增] 前端框架模块新增 OIDC 客户端动态注册 API&lt;/li&gt; 
   &lt;li&gt;[重构] 重构前端 OAuth2 各认证模式 API，提取通用代码方便代码维护&lt;/li&gt; 
   &lt;li&gt;[重构] 重构前端 Axios 自定义封装 API 定义，方便更好的理解及使用代码&lt;/li&gt; 
   &lt;li&gt;[重构] 迁移前端 useApplicationStore 相关内容代码至模块 @herodotus-cloud/framework-kernel&lt;/li&gt; 
   &lt;li&gt;[修复] 调整 lettuce 配置参数，修复 lettuce 链接 redis 偶发 io.lettuce.core.RedisCommandTimeoutException: Command timed out after 200 millisecond(s) 错误问题。&lt;/li&gt; 
   &lt;li&gt;[修复] 修复动态开启认证时，OAuth2 客户端信息密码丢失问题。&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端 OAuth2 各认证模式 API，调整参数顺序和默认值，提升 API 合理性&lt;/li&gt; 
   &lt;li&gt;[优化] 优化动态开启和关闭认证日志，增加统一标识方便代码跟踪和日志分析&lt;/li&gt; 
   &lt;li&gt;[升级] grafana docker 镜像版本升级至 12.2.0-16636675413&lt;/li&gt; 
   &lt;li&gt;[升级] loki docker 镜像版本升级至 3.5.3&lt;/li&gt; 
   &lt;li&gt;[升级] promtail docker 镜像版本升级至 3.5.3&lt;/li&gt; 
   &lt;li&gt;[升级] node-red docker 镜像版本升级至 3.5.3&lt;/li&gt; 
   &lt;li&gt;[升级] clickhouse docker 镜像版本升级至 25.6.6&lt;/li&gt; 
   &lt;li&gt;[升级] kestra docker 镜像版本升级至 v0.23.9&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] alipay-sdk-java 版本升级至 4.40.382.ALL&lt;/li&gt; 
   &lt;li&gt;[升级] mysql 版本升级至 9.4.0&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk 版本升级至 2.32.18&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk.crt 版本升级至 0.38.8&lt;/li&gt; 
   &lt;li&gt;[升级] sweetalert2 webjars 版本升级至 11.22.3&lt;/li&gt; 
   &lt;li&gt;[升级] wxjava 版本升级至 4.7.7-20250808.182223&lt;/li&gt; 
   &lt;li&gt;[升级] webauthn4j 版本升级至 0.29.5.RELEASE&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;如果本项目对你有所帮助，欢迎 Star 一波来支持我们！&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Gitee&lt;/strong&gt;：&lt;a href="https://gitee.com/dromara/dante-cloud"&gt;https://gitee.com/dromara/dante-cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Github&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://github.com/dromara/dante-cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gitcode&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://gitcode.com/dromara/dante-cloud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365367/dante-cloud-3-5-4-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365367/dante-cloud-3-5-4-2-released</guid>
      <pubDate>Sat, 09 Aug 2025 16:26:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🔥🔥🔥高质量代码 SmartAdmin 重磅更新 V3.26</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff"&gt;&lt;strong&gt;SmartAdmin&lt;/strong&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#000000"&gt;「高质量代码、简洁、高效、安全」的快速开发平台&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;v3.26 版本，重磅更新，发布，&lt;/strong&gt;更新如下：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;【优化】分页请求 2 次&lt;/li&gt; 
  &lt;li&gt;【优化】菜单展开单个代码优化&lt;/li&gt; 
  &lt;li&gt;【优化】操作记录返回结果&lt;/li&gt; 
  &lt;li&gt;【优化】json viewer 升级&lt;/li&gt; 
  &lt;li&gt;【优化】文件 S3 上传&lt;/li&gt; 
  &lt;li&gt;【优化】代码生成字典优化&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;hr&gt; 
   &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;SmartAdmin&lt;/strong&gt;&amp;nbsp;由&amp;nbsp;&lt;strong&gt;中国・洛阳&lt;/strong&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.1024lab.net%2F" target="_blank"&gt;1024 创新实验室&lt;/a&gt;&amp;nbsp;基于 SpringBoot2/3+Sa-Token+Mybatis-Plus 和 Vue3+Ant Design Vue+Uni-App+Uni-UI，并以&amp;nbsp;&lt;span style="color:#dc143c"&gt;&lt;strong&gt;「高质量代码」为核心，「简洁、高效、安全」&lt;/strong&gt;&lt;/span&gt;的快速开发平台。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;国内首个满足《网络安全 - 三级等保》、《数据安全》&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;功能要求，支持登录限制、接口国产加解密、数据脱敏等一系列安全要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前端提供&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;JavaScript 和 TypeScript 双版本&lt;/span&gt;&lt;/strong&gt;，后端提供&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;Java8+SpringBoot2.X 和 Java17+SpringBoot3.X 双版本&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3c3c43"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同时&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;重磅开源&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;开源六年来&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;千余家企业验证过且正在使用&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;的代码规范:&amp;nbsp;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;《高质量代码思想》、《Vue3 规范》、《Java 规范》&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;，让大家在这浮躁的世界里感受到一股把代码写好的清流！同时又能节省大量时间，减少加班，快乐工作，保持谦逊，保持学习，&lt;strong&gt;&lt;span style="color:#dc143c"&gt;热爱代码，更热爱生活&lt;/span&gt;&lt;/strong&gt;&amp;nbsp;！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;技术体系&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;前端：Vue3 + Vite5 + Vue-Router + Pinia + Ant Design Vue 4.X&lt;/li&gt; 
 &lt;li&gt;移动端：uniapp (vue3 版本) + uni-ui + （同时支持 APP、小程序、H5）&lt;/li&gt; 
 &lt;li&gt;后端：SpringBoot2/3 + Sa Token + Mybatis-plus + 主流数据库 / 国产数据库&lt;/li&gt; 
 &lt;li&gt;电脑在线预览：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpreview.smartadmin.vip" target="_blank"&gt;https://preview.smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官方文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;https://smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;移动端在线预览：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.smartadmin.vip%2F%23%2Fpages%2Flogin%2Flogin" target="_blank"&gt;https://app.smartadmin.vip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;理念与思想&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;我们分享的不是徒劳无功的各种功能，而是必须有的功能，如：网络安全、数据变动记录、系统说明文档、版本更新记录、意见反馈、日志、心跳、单号生成器等等。&lt;/li&gt; 
 &lt;li&gt;我们分享的还有经过上百家公司验证过的前端、后端、vue3 等代码规范，好的规范能让我们敲下的每行代码更铿锵有力！&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;我们推崇高质量的代码，身为开发，代码即利剑，键盘上一套行云流水，宛如侠客，事了拂衣去，深藏身与名。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;我们推崇团队的高度配合默契、互相帮助，从不加班，而不是一看到别人的代码就头皮发麻，留其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaike.baidu.com%2Fitem%2F996.ICU" target="_blank"&gt;996.ICU&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;加班。&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;功能亮点图&lt;/strong&gt;&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b1071e517f1d71298d012c71e6f98a7c.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//15cfa4d262087c2b83dd40411f05a230.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//c9d856ba2697b9e39c3616f6de2c58e2.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//12eb4611701abae810e3331ae3e560a2.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e87bc020c32c09f8c19f870d00ca01ff.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//deb88775a4b1a4e2d65e7812e2932bbc.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e0ea9cf13fb5029642c57ea603f65d01.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//81df44014813a2fce9447aecb33ac119.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//25c33dbfcf930dbf2ab060e453f146dc.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//feedbc7cec172f3a14c21998a0d9b361.png" referrerpolicy="no-referrer"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;功能亮点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;安全体系&lt;/span&gt;&lt;/strong&gt;：&lt;span style="background-color:#ffffff; color:#3c3c43"&gt;满足国家三级等保要求，如双因子登录、密码加密、密码复杂度要求、登录错误次数锁定、登录超时退出、数据脱敏等网络安全和数据安全功能&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span style="color:#dc143c"&gt;接口加解密&lt;/span&gt;&lt;/strong&gt;：支持请求参数和返回内容进行加解密操作，支持国产加密算法和其他国外加密算法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;表格自定义列&lt;/strong&gt;：支持用户自定义列，并能将用户自定义列持久化到数据库&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;数据变更记录&lt;/strong&gt;：支持基于 git diff 插件的数据变更记录，查看数据变化更直观方便&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;在线文档&lt;/strong&gt;：支持右侧帮助文档（类似阿里云控制枱右侧帮助文档效果）、支持意见反馈、版本记录，等功能&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OA 办公&lt;/strong&gt;：公司信息（发票、银行、员工等）、通知公告（阅读记录、次数等）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;日志、监控&lt;/strong&gt;：服务器心跳日志、登录日志、操作日志（IP、浏览器、操作系统等设备信息）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;系统功能&lt;/strong&gt;：员工、部门、角色、权限、菜单、水印、文件管理、系统参数、数据字典、单号生成，等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代码生成&lt;/strong&gt;： 基于每个表的配置、在线预览代码、下载，等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;以上只是一些举例，更多灿若繁星的惊喜和细节，等待着你的发现！&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;SmartAdmin 业内独有功能亮点&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;代码亮点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 双版本】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供 js 和 ts 双版本，目录结构及其清晰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 常量维护】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;vue-enum，拒绝出现魔法数字，常量枚举不可维护的现象&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 命名】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内最好的 api、常量等命名和写法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - 多环境支持】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;独有的本地、开发、测试、预发布、生产 5 个 env 环境配置文件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - layout 代码】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内代码最清晰的 layout 布局写法，小白都能看懂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【前端 - main.js】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内可能只有我们把 main.js 中的 router 加载方式写对了&lt;/li&gt; 
 &lt;li&gt;---- 华丽前后端分割线 ----&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 独有目录结构】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独有的高质量的 Java 代码分包结构，适合大、中、小型项目，结构非常清晰&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 公共配置文件】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独有的共用配置文件维护，简化共同配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 返回码维护】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;业内独创的请求返回码维护，非常值得一看&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 四层架构】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;四层架构（controller, service, manager, dao），为什么要有四层&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 多环境】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;maven 多环境：开发、测试、预发布、生产，环境配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;【后端 - 系统钩子】：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;smart-reload，为系统预留钩子，动态加载，在不重启程序前提下执行一些代码&lt;/li&gt; 
 &lt;li&gt;以上只是沧海一粟，更多的细节等待你的发现！&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsmartadmin.vip" target="_blank"&gt;去查看&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365315</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365315</guid>
      <pubDate>Sat, 09 Aug 2025 10:55:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>酷瓜云课堂（企业版）v1.3.7 发布，在线教育解决方案</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img alt="酷瓜云课堂-企业版" src="https://oscimg.oschina.net/oscnet//84b692217b9f19a46b25a92a46b97bd8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;更新内容&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化统计菜单子项数量&lt;/li&gt; 
 &lt;li&gt;优化获取直播信息弹窗&lt;/li&gt; 
 &lt;li&gt;优化视频点播播放器 PlayMask&lt;/li&gt; 
 &lt;li&gt;优化 course-card 相关 UI&lt;/li&gt; 
 &lt;li&gt;优化 layer.volt 基础模板&lt;/li&gt; 
 &lt;li&gt;优化教师直播通知发送任务&lt;/li&gt; 
 &lt;li&gt;密码相关输入框增加可视切换&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;系统介绍&lt;/h3&gt; 
&lt;p&gt;酷瓜云课堂，依托腾讯云基础服务架构，采用 C 扩展框架 Phalcon 开发，致力互联网课程点播，互联网课程直播，局域网课程点播，局域网课程直播，垂直于在线教育解决方案。&lt;/p&gt; 
&lt;h3&gt;系统功能&lt;/h3&gt; 
&lt;p&gt;实现了点播、直播、考试、专栏、面授、问答、会员、积分、秒杀、拼团、分销等。&lt;/p&gt; 
&lt;h3&gt;友情提示&lt;/h3&gt; 
&lt;p&gt;请使用干净的系统执行安装，如有安装过 nginx，apache 之类的占用 80 和 443 端口的 web 服务会造成端口冲突。&lt;/p&gt; 
&lt;h3&gt;配置要求&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;操作系统：Ubuntu | Debain | Centos&lt;/li&gt; 
 &lt;li&gt;系统内存：2G+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;桌面端演示&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2F" target="_blank"&gt;前台演示&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Fadmin" target="_blank"&gt;后台演示&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;演示帐号：100015@163.com / 123456 （前后台通用）&lt;/p&gt; 
&lt;h3&gt;H5 端演示&lt;/h3&gt; 
&lt;p&gt;&lt;img alt="H5 二维码" src="https://oscimg.oschina.net/oscnet//d4b99dd7b7d74628fb72199ab168a458.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;演示帐号：13507083515 / 123456&lt;/p&gt; 
&lt;h3&gt;微信公众号演示&lt;/h3&gt; 
&lt;p&gt;&lt;img alt="公众号二维码" src="https://oscimg.oschina.net/oscnet//64874ed4b5ff3b5301bb6889b39759f3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;演示帐号：13507083515 / 123456&lt;/p&gt; 
&lt;h3&gt;微信小程序演示&lt;/h3&gt; 
&lt;p&gt;&lt;img alt="微信小程序码" src="https://oscimg.oschina.net/oscnet//6c32719edfa1154a85ffb07e5693a0bf.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;演示帐号：13507083515 / 123456&lt;/p&gt; 
&lt;h3&gt;支付流程演示&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D1390%26item_type%3D1" target="_blank"&gt;MySQL 提升全面讲解 MySQL 架构设计（0.01 元）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D1286%26item_type%3D1" target="_blank"&gt;Nginx 入门到实践 Nginx 中间件（0.01 元）&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Forder%2Fconfirm%3Fitem_id%3D80%26item_type%3D2" target="_blank"&gt;数据库与中间件的基础必修课（0.02 元）&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Tips：测试支付请用手机号注册一个新账户，以便接收订单通知，以及避免课程无法购买&lt;/p&gt; 
&lt;h3&gt;视频加密演示&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fctc-pro.koogua.com%2Fchapter%2F2" target="_blank"&gt;CSS3 实现按钮特效，课程简介&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;微信推送演示&lt;/h3&gt; 
&lt;p&gt;Tips：请用手机注册一个新账号，用户中心 -&amp;gt; 关注订阅，扫码关注公众号。之后的登录、购买、退款、直播、咨询等会有消息推送。&lt;/p&gt; 
&lt;h3&gt;项目组件&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;后台框架：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphalcon.io" target="_blank"&gt;phalcon3.4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;前端框架：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flayui.dev" target="_blank"&gt;layui 2.9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;全文检索：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xunsearch.com" target="_blank"&gt;xunsearch 1.4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;基础依赖：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fphp.net" target="_blank"&gt;php 7.3&lt;/a&gt;， &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmysql.com" target="_blank"&gt;mysql 5.7&lt;/a&gt;， &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredis.io" target="_blank"&gt;redis 5.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;项目文档&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank"&gt;运行环境搭建&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank"&gt;系统服务配置&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Fwiki" target="_blank"&gt;客户终端配置&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;产品试用&lt;/h3&gt; 
&lt;p&gt;申请地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.koogua.com%2Fpage%2Ftrial" target="_blank"&gt;https://www.koogua.com/page/trial&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365301</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365301</guid>
      <pubDate>Sat, 09 Aug 2025 09:47:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Go-Spring 发布 v1.2.2 版本，支持异步启动模式</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;很高兴宣布 Go-Spring v1.2.2 版本正式发布！此次版本带来了一些重要的更新和改进，旨在提升开发体验和框架的可扩展性。以下是本次版本的更新内容：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;更新 assert 库： 引入了更加现代化的断言方式，简化了测试代码的编写，提升了断言的灵活性和易用性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新 log 库： 支持更完整的日志配置，包括日志级别、输出格式等自定义选项，让日志输出更加灵活，便于开发者根据项目需求进行调整。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新 mock 库： 进一步优化了 mock 体验，使得模拟对象的创建和行为定义更加简洁方便，提升了测试的效率和可读性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持异步启动模式： 新增异步启动模式，方便开发者对旧项目进行改造和升级。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增更多实例： 为了让开发者更便捷地上手和使用，增加了 Gin、GRPC、Thrift 和 ChatAI 等实例，提供了更多的应用场景参考。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;版本下载： &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgo-spring%2Fspring-core%40v1.2.2" target="_blank"&gt;https://github.com/go-spring/spring-core@v1.2.2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;感谢大家对 Go-Spring 的支持与关注，我将继续努力为大家提供更高效、更灵活的开发框架！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365285/go-spring-1-2-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365285/go-spring-1-2-2-released</guid>
      <pubDate>Sat, 09 Aug 2025 08:20:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>StreamSQL V0.10.2 正式发布：国产轻量级流式计算引擎新选择</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;StreamSQL 是一个专为物联网边缘场景设计的轻量级流处理引擎。它使用熟悉的 SQL 语法来处理无界数据流，让开发者能够用简单的 SQL 语句实现复杂的实时数据分析。它也可以作为 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc" target="_blank"&gt;RuleGo&lt;/a&gt; 组件融入 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc" target="_blank"&gt;RuleGo&lt;/a&gt; 生态，利用其提供丰富的输入输出以及数据处理组件库和规则引擎功能。&lt;/p&gt; 
&lt;h2&gt;流式计算的新选择&lt;/h2&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;span&gt;在传统的流式数据处理场景中，开发者通常面临两个极端的选择：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;时序数据库方案&lt;/strong&gt;：如 InfluxDB、TimescaleDB 等，虽然存储能力强，但实时计算能力有限，复杂聚合运算性能不佳&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;重型分布式框架&lt;/strong&gt;：如 Apache Flink、Apache Storm 等，功能强大但部署复杂，资源消耗巨大，不适合边缘环境&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;StreamSQL 提供了第三种选择&lt;/strong&gt;&lt;span&gt;：一个专为边缘端设计的轻量级流处理引擎，能够在资源受限的环境中对海量数据进行实时聚合运算，填补了轻量级与高性能之间的空白。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;典型应用场景&lt;/h3&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;边缘 - 云协同架构&lt;/strong&gt;&lt;span&gt;：在物联网和工业 4.0 场景中，大量传感器和设备产生海量原始数据，如果直接上传云端会造成：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;网络带宽压力巨大&lt;/li&gt; 
 &lt;li&gt;云端计算成本高昂&lt;/li&gt; 
 &lt;li&gt;实时性要求无法满足&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;StreamSQL 的解决方案&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;海量原始数据 → 边缘端&lt;span&gt;StreamSQL&lt;/span&gt;处理 → 聚合结果 → 云端存储/分析&lt;/span&gt;
&lt;span&gt;   (TB 级)         (实时过滤/聚合)      (MB 级)     (长期存储)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;具体场景示例&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;智能工厂&lt;/strong&gt;：1000 台设备每秒产生 10 万条数据，边缘端实时聚合为每分钟 100 条关键指标&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智慧城市&lt;/strong&gt;：数千个传感器的环境数据，边缘端预处理后只上传异常事件和统计摘要&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;车联网&lt;/strong&gt;：车队实时数据在边缘网关聚合，只向云端发送驾驶行为分析和异常告警&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;StreamSQL 是什么&lt;/h2&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;span&gt;StreamSQL&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;是一个专为物联网边缘场景设计的轻量级流处理引擎。它使用熟悉的 SQL 语法来处理无界数据流，让开发者能够用简单的 SQL 语句实现复杂的实时数据分析。它也可以作为 &lt;/span&gt;&lt;a href="https://gitee.com/rulego/rulego"&gt;RuleGo&lt;/a&gt;&lt;span&gt; 组件融入 RuleGo 生态，利用其提供丰富的输入输出以及数据处理组件库和规则引擎功能。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;核心架构&lt;/h1&gt; 
&lt;p&gt;&lt;img height="619" src="https://oscimg.oschina.net/oscnet/up-c1acf035ea874f0a7e9593681db72650a97.png" width="1355" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;核心组件&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;SQL 解析器 (rsql)：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;解析标准 SQL 语句，生成抽象语法树 (AST)，配置流处理管道&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;流处理器 (stream)：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实时数据处理，过滤和转换，聚合计算&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;窗口管理器 (window)：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时间窗口：滚动、滑动、会话，计数窗口，窗口生命周期管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;函数系统 (functions)：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;60+ 内置函数，插件式自定义函数，8 种函数类型支持&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;表达式引擎 (expr)：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;算术表达式计算，逻辑表达式处理，字段引用解析&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;设计理念&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;轻量级优先&lt;/strong&gt;&lt;span&gt;：纯 Go 实现，零外部依赖，内存高效，秒级启动。专为边缘设备和资源受限环境设计。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQL 优先&lt;/strong&gt;&lt;span&gt;：使用标准 SQL 语法，声明式编程，业务逻辑直观表达，学习成本极低。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;扩展优先&lt;/strong&gt;&lt;span&gt;：插件化架构，支持热插拔函数，与 RuleGo 深度集成，利用其丰富的输入输出组件生态，并支持热更新。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;技术特点&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;高性能&lt;/strong&gt;：流式处理，内存计算，并发设计，充分利用多核性能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;易于使用&lt;/strong&gt;：SQL 语法，简单 API，几行代码即可启动，丰富示例覆盖常见场景。&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;纯内存计算&lt;/strong&gt;：&lt;span style="background-color:#ffffff; color:#080808"&gt;无磁盘存储，所有计算都在内存中进行，处理速度极快。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#080808"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;基础库设计&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#080808"&gt;：可作为基础库集成到其他项目中，仅依赖 Go 标准库和 expr 表达式引擎，无第三方依赖。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;RuleGo 集成&lt;/strong&gt;：与 RuleGo 深度集成，利用其丰富的组件生态： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;数据输入&lt;/strong&gt;：MQTT、HTTP、WebSocket、TCP/UDP、消息队列、文件等&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;数据输出&lt;/strong&gt;：数据库、消息队列、REST API、邮件、短信等&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;数据处理&lt;/strong&gt;：过滤、转换、路由、聚合等 60 + 组件&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;扩展能力&lt;/strong&gt;：自定义组件、热插拔、动态配置&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;低代码&lt;/strong&gt;：无需编写代码，仅需配置规则链即可实现复杂的数据处理逻辑。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;适用场景&lt;/h2&gt; 
&lt;h3&gt;适合场景&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;边缘计算&lt;/strong&gt;：物联网设备、工业网关、边缘服务器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实时分析&lt;/strong&gt;：设备监控、异常检测、实时告警&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;快速部署&lt;/strong&gt;：单机部署、容器化、嵌入式应用&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;原型验证&lt;/strong&gt;：快速验证流处理逻辑和业务规则&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RuleGo 增强&lt;/strong&gt;：为 RuleGo 规则链添加 SQL 流处理能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;不适合场景&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;大规模集群&lt;/strong&gt;：需要水平扩展的分布式系统&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;复杂状态&lt;/strong&gt;：需要持久化状态管理的应用&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;高并发写入&lt;/strong&gt;：超出单机处理能力的数据量&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;事务处理&lt;/strong&gt;：需要 ACID 特性的复杂事务场景&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;核心应用场景&lt;/h2&gt; 
&lt;h3&gt;工业物联网 - 海量设备数据实时处理&lt;/h3&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;设备监控与预测性维护&lt;/strong&gt;&lt;span&gt;：实时监控设备状态，异常检测，预测性维护&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;场景描述&lt;/strong&gt;&lt;span&gt;：某制造工厂有 1000 + 设备，每秒产生 10,000 + 数据点，需要实时监控和异常检测&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;&lt;span&gt;&lt;span style="color:#8c8c8c"&gt;&lt;span&gt;-- 设备异常检测示例 - 处理百级 TPS 数据流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;SELECT&lt;/span&gt;&lt;/span&gt; device_id,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;COUNT&lt;/span&gt;&lt;/span&gt;(*) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; data_points,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;AVG&lt;/span&gt;&lt;/span&gt;(temperature) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; avg_temp,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;MAX&lt;/span&gt;&lt;/span&gt;(temperature) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; max_temp,&lt;/span&gt;
&lt;span&gt;       &lt;span&gt;STDDEV&lt;/span&gt;(vibration) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; vibration_variance,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;CASE&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;WHEN&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;AVG&lt;/span&gt;&lt;/span&gt;(temperature) &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;80&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;OR&lt;/span&gt;&lt;/span&gt; &lt;span&gt;STDDEV&lt;/span&gt;(vibration) &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;
&lt;span&gt;            &lt;span style="color:#0033b3"&gt;&lt;span&gt;THEN&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#067d17"&gt;&lt;span&gt;'ALERT'&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;ELSE&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#067d17"&gt;&lt;span&gt;'NORMAL'&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;END&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; &lt;span&gt;status&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;FROM&lt;/span&gt;&lt;/span&gt; stream&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;GROUP&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;BY&lt;/span&gt;&lt;/span&gt; device_id, TumblingWindow(&lt;span style="color:#067d17"&gt;&lt;span&gt;'5m'&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;HAVING&lt;/span&gt;&lt;/span&gt; &lt;span&gt;status&lt;/span&gt; = &lt;span style="color:#067d17"&gt;&lt;span&gt;'ALERT'&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;智慧城市&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;交通流量优化&lt;/strong&gt;&lt;span&gt;：实时分析交通流量，拥堵检测，信号灯优化&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;环境监测&lt;/strong&gt;&lt;span&gt;：空气质量监测，污染预警，环境数据分析&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;车联网 - 大规模车队实时监控&lt;/h3&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;车辆状态监控&lt;/strong&gt;&lt;span&gt;：实时监控车辆运行状态，故障诊断，驾驶行为分析&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;场景描述&lt;/strong&gt;&lt;span&gt;：某物流公司拥有 5000 + 车辆，每辆车每秒上报 20 + 数据点，总计 100,000+&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;events/sec&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;&lt;span&gt;&lt;span style="color:#8c8c8c"&gt;&lt;span&gt;-- 车辆异常检测 - 处理百万级数据流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;SELECT&lt;/span&gt;&lt;/span&gt; vehicle_id,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;COUNT&lt;/span&gt;&lt;/span&gt;(*) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; total_events,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;AVG&lt;/span&gt;&lt;/span&gt;(engine_temp) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; avg_engine_temp,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;MAX&lt;/span&gt;&lt;/span&gt;(engine_temp) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; max_engine_temp,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;AVG&lt;/span&gt;&lt;/span&gt;(fuel_consumption) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; avg_fuel,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;COUNT&lt;/span&gt;&lt;/span&gt;(&lt;span style="color:#0033b3"&gt;&lt;span&gt;CASE&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;WHEN&lt;/span&gt;&lt;/span&gt; brake_pressure &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;80&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;THEN&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;END&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; hard_brake_count,&lt;/span&gt;
&lt;span&gt;       &lt;span style="color:#0033b3"&gt;&lt;span&gt;COUNT&lt;/span&gt;&lt;/span&gt;(&lt;span style="color:#0033b3"&gt;&lt;span&gt;CASE&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;WHEN&lt;/span&gt;&lt;/span&gt; speed &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;120&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;THEN&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;END&lt;/span&gt;&lt;/span&gt;) &lt;span style="color:#0033b3"&gt;&lt;span&gt;as&lt;/span&gt;&lt;/span&gt; speeding_count&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;FROM&lt;/span&gt;&lt;/span&gt; stream&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;GROUP&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;BY&lt;/span&gt;&lt;/span&gt; vehicle_id, TumblingWindow(&lt;span style="color:#067d17"&gt;&lt;span&gt;'10m'&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span&gt;&lt;span style="color:#0033b3"&gt;&lt;span&gt;HAVING&lt;/span&gt;&lt;/span&gt; avg_engine_temp &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;90&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;OR&lt;/span&gt;&lt;/span&gt; hard_brake_count &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#0033b3"&gt;&lt;span&gt;OR&lt;/span&gt;&lt;/span&gt; speeding_count &amp;gt; &lt;span style="color:#1750eb"&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#080808; text-align:start"&gt;&lt;strong&gt;边缘部署优势&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多个边缘节点分布式部署，每个节点处理 1000 + 车辆&lt;/li&gt; 
 &lt;li&gt;本地实时处理，减少网络传输压力&lt;/li&gt; 
 &lt;li&gt;故障隔离，单点故障不影响整体系统&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;本次更新重点：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;perf:重构表达式引擎模块&lt;/li&gt; 
 &lt;li&gt;perf:重构 stream 模块&lt;/li&gt; 
 &lt;li&gt;perf:移除持久化策略&lt;/li&gt; 
 &lt;li&gt;feat:函数支持别名&lt;/li&gt; 
 &lt;li&gt;feat:完善 Case 语法&lt;/li&gt; 
 &lt;li&gt;feat:HAVING 语句支持 Case&lt;/li&gt; 
 &lt;li&gt;feat:完善负数支持&lt;/li&gt; 
 &lt;li&gt;feat:select 字段结果按原顺序排序&lt;/li&gt; 
 &lt;li&gt;feat:select 支持字符串常量字段&lt;/li&gt; 
 &lt;li&gt;feat:AddSkink 回调类型改成确定的类型&lt;/li&gt; 
 &lt;li&gt;feat:非聚合模式支持同步获得处理数据&lt;/li&gt; 
 &lt;li&gt;test:增加大量的测试用例（代码覆盖率 80%）&lt;/li&gt; 
 &lt;li&gt;chore:完善注释和文档&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;其他&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;StreamSQL 文档：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fstreamsql-overview%2F" target="_blank"&gt;https://rulego.cc/pages/streamsql-overview/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fstreamsql-overview%2F" target="_blank"&gt;Ru&lt;/a&gt;leGo 集成&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc%2Fpages%2Fstreamsql-rulego%2F" target="_blank"&gt;集成文档&lt;/a&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F8.134.32.225%3A9090%2Feditor%2F%23pd2X2tvKgnWI" target="_blank"&gt;规则链示例&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RuleGo 文档：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frulego.cc" target="_blank"&gt;https://rulego.cc&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365082/streamsql-0-10-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365082/streamsql-0-10-2-released</guid>
      <pubDate>Fri, 08 Aug 2025 10:37:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>kisso 3.9.4 发布，优化插件处理机制</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h4&gt;kisso = cookie sso 基于 Cookie 的 SSO 中间件，它是一把快速开发 java Web 登录系统（SSO）的瑞士军刀。&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;前后分离可选：请求 Header 票据模式，请求 Cookie 模式&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.aizuda.com%2Fdocs%2Fsso.html" target="_blank"&gt;官方文档&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;主要涉及更新内容&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化减少服务类及插件获取机制&lt;/li&gt; 
 &lt;li&gt;优化插件 token 验证&lt;/li&gt; 
 &lt;li&gt;拦截处理器新增 Token 预处理拦截方法 preToken&lt;/li&gt; 
 &lt;li&gt;SSOToken 票据新增 timeExpired 判断时间是否过期方法&lt;/li&gt; 
 &lt;li&gt;其它优化&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365197/kisso-3-9-4-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365197/kisso-3-9-4-released</guid>
      <pubDate>Fri, 08 Aug 2025 10:20:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>ng-zorro-antd 20.1.2 发布，基于 Angular 的 UI 组件</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;ng-zorro-antd 是 Ant Design 的 Angular 实现，主要用于研发企业级中后台产品。全部代码开源并遵循 MIT 协议，任何企业、组织及个人均可免费使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;ng-zorro-antd 20.1.2 正式发布，更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;h4 style="text-align:start"&gt;&lt;strong&gt;Bug Fixes&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;input-number:&lt;/strong&gt;&amp;nbsp;修复展示值不正确的问题 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Fissues%2F9312" target="_blank"&gt;#9312&lt;/a&gt;) (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Fcommit%2F7a2d3b6f97bf80f2f517626f5e02625c4488be80" target="_blank"&gt;7a2d3b6&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;select,tree-select,cascader:&lt;/strong&gt;&amp;nbsp;已选项文本超出时展示省略号 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Fissues%2F9316" target="_blank"&gt;#9316&lt;/a&gt;) (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Fcommit%2F30672d7978f0ca4b24ec04c196c967b69e614525" target="_blank"&gt;30672d7&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;table:&lt;/strong&gt;&amp;nbsp;内部滚动元素增加&amp;nbsp;&lt;code&gt;cdkScrollable&lt;/code&gt;&amp;nbsp;指令 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Fissues%2F9308" target="_blank"&gt;#9308&lt;/a&gt;) (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Fcommit%2F8cb411332b90b55bab3ec742c455e3aaaf4618d7" target="_blank"&gt;8cb4113&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNG-ZORRO%2Fng-zorro-antd%2Freleases%2Ftag%2F20.1.2" target="_blank"&gt;https://github.com/NG-ZORRO/ng-zorro-antd/releases/tag/20.1.2&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365070/ng-zorro-antd-20-1-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365070/ng-zorro-antd-20-1-2-released</guid>
      <pubDate>Fri, 08 Aug 2025 10:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>RustDesk 1.4.1, 支持远程终端+UDP 打洞+IPv6 直连</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h1&gt;新增功能&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;终端&lt;/li&gt; 
 &lt;li&gt;UDP 和 IPv6 打洞&lt;/li&gt; 
 &lt;li&gt;手写笔&lt;/li&gt; 
 &lt;li&gt;数字一次性密码选项&lt;/li&gt; 
 &lt;li&gt;在地址簿和可访问设备中启用强制总是中继选项&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;变更&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;强制登录会话使用安全 tcp，而不是忽略超时&lt;/li&gt; 
 &lt;li&gt;当检索可访问设备被禁用时清空可访问设备标签页&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F11913" target="_blank"&gt;#11913&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;改进 sas&lt;/li&gt; 
 &lt;li&gt;缩短集合中介器中某些网络错误的重试时间（从 18 秒缩短到 3 秒），以加快重启连接速度&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;修复&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS Retina 显示器的分辨率列表，解决断开连接后意外分辨率变化的问题&lt;/li&gt; 
 &lt;li&gt;在 macOS 上通过 RustDesk 锁屏时无法输入密码&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F11802" target="_blank"&gt;#11802&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;macOS 上的按键输入延迟&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Frustdesk%2Fcomments%2F1kn1w5x%2Ftyping_lags_when_connecting_to_macos_clients%2F" target="_blank"&gt;https://www.reddit.com/r/rustdesk/comments/1kn1w5x/typing_lags_when_connecting_to_macos_clients/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Windows X64 上 32 位摄像头连接崩溃&lt;/li&gt; 
 &lt;li&gt;"没有活动的控制枱用户登录"时 len(uid) &amp;lt; 4 的情况&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F11943" target="_blank"&gt;#11943&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rustdesk appimage 没有图标&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F11927" target="_blank"&gt;#11927&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;为仅出站客户端测试 NAT 类型&lt;/li&gt; 
 &lt;li&gt;未标记的标签在辅助或附加地址簿中不工作&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F12061" target="_blank"&gt;#12061&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;恢复 allow-https-21114&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk-server-pro%2Fdiscussions%2F570%23discussioncomment-13449526" target="_blank"&gt;rustdesk/rustdesk-server-pro#570 (reply in thread)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;linux, nokhwa, 摄像头索引&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F12045" target="_blank"&gt;#12045&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;win, 上传系统信息&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F11849" target="_blank"&gt;#11849&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;移动端通过 URL scheme 传递密码时永远无法连接&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F11797" target="_blank"&gt;#11797&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;自 1.3.9 版本后在 Windows Server Core 上不工作&lt;/li&gt; 
 &lt;li&gt;Windows7 x86 &amp;gt;= 1.3.8 rustdesk 无法打开&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F12097" target="_blank"&gt;#12097&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;隐私模式 2 失败 ChangeDisplaySettingsEx, ret: -1, last error....&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F10540" target="_blank"&gt;#10540&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在 Android 7.1 上交互时崩溃（在 1.3.8 中引入）&lt;/li&gt; 
 &lt;li&gt;Web 客户端 - 点击任何地方都会出现粘贴选项&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F12121" target="_blank"&gt;#12121&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;自定义客户端的记录目录&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F12171" target="_blank"&gt;#12171&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;win, 仅在安装 exe 时启动托盘&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F11737" target="_blank"&gt;#11737&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MacOS 上服务停止时 CPU 使用率高&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F12233" target="_blank"&gt;#12233&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;空闲时 rustdesk.service 导致 CPU 使用率高&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F11157" target="_blank"&gt;#11157&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;打印输出在底部和右侧被截断&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F11410" target="_blank"&gt;#11410&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Freleases%2Ftag%2F1.4.1" target="_blank"&gt;https://github.com/rustdesk/rustdesk/releases/tag/1.4.1&lt;/a&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style="margin-left:0; margin-right:0"&gt;顶级 Rust 开源项目期待你的加入，请发送简历到&amp;nbsp;emhvdUBydXN0ZGVzay5jb20gICA=&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365031/rustdesk-1-4-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365031/rustdesk-1-4-1-released</guid>
      <pubDate>Fri, 08 Aug 2025 08:19:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🔥 VTJ.PRO v0.13.0 重磅发布：企业级应用配置能力全面升级，解锁低代码开发新范式！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;开源低代码引擎&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;VTJ.PRO&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;正式推出&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;v0.13.0&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;版本。本次更新聚焦 「&lt;strong&gt;应用级工程化闭环&lt;/strong&gt;」，新增全局状态管理、权限控制、请求拦截器等五大核心能力，标志着平台从 「&lt;strong&gt;页面搭建工具&lt;/strong&gt;」 正式升级为 「&lt;strong&gt;应用开发平台&lt;/strong&gt;」，为金融、电商、中后台系统提供开箱即用的企业级解决方案！&lt;/p&gt; 
&lt;h2&gt;核心更新亮点&lt;/h2&gt; 
&lt;h3&gt;🔧 1. 全局 CSS + 主题配置：统一视觉规范&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;痛点破解&lt;/strong&gt;：解决多页面样式碎片化问题，避免重复编写基础样式。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;能力升级&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;支持全局 CSS 注入（字体、色阶、间距变量）；&lt;/li&gt; 
   &lt;li&gt;内置主题配置器，一键切换明暗模式/品牌色系；&lt;/li&gt; 
   &lt;li&gt;样式隔离机制确保组件库与业务代码互不污染。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 2. 集成 Pinia 全局状态管理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;技术栈统一&lt;/strong&gt;：深度对接 Vue3 官方推荐状态库 Pinia，告别状态管理碎片化。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;可视化赋能&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;设计器中直接绑定 Pinia Store 状态与方法；&lt;/li&gt; 
   &lt;li&gt;自动生成 TypeScript 类型推导代码，减少手写复杂度 70%。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔐 3. 权限控制 + 路由守衞：安全防线零编码&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;企业级场景覆盖&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;可视化配置路由访问权限（角色/用户组维度）；&lt;/li&gt; 
   &lt;li&gt;动态路由自动挂载/销毁，内存占用降低 40%；&lt;/li&gt; 
   &lt;li&gt;内置登录态拦截、操作鉴权等 8 类守衞模板。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代码生成优化&lt;/strong&gt;：生成带权限校验的 router.ts 文件，无缝对接主流权限框架。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚡ 4. 请求引擎标准化（Axios 深度集成）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;开箱即用能力&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;预置 BaseURL、超时阈值、Content-Type 等全局配置；&lt;/li&gt; 
   &lt;li&gt;支持请求/响应拦截器（自动 Token 注入、错误兜底）；&lt;/li&gt; 
   &lt;li&gt;自动生成 API Service 层 TypeScript 接口声明。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;调试效率提升&lt;/strong&gt;：设计器内模拟 Mock 数据，联调时间缩短 90%。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;结语&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;「v0.13.0 是 VTJ.PRO 走向‘全栈低代码’的关键一步」，VTJ.PRO 技术负责人表示，「我们将持续聚焦 ‘降低复杂度，不降低自由度’ 的理念，让开发者既能享受可视化效率，又能掌控每一行代码！」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;立即探索：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Gitee 仓库&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;：&lt;a href="https://gitee.com/newgateway/vtj" target="_blank"&gt;https://gitee.com/newgateway/vtj&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;官网直达&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2F" target="_blank"&gt;https://vtj.pro/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365027/vtj-pro-0-13-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365027/vtj-pro-0-13-0-released</guid>
      <pubDate>Fri, 08 Aug 2025 08:06:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Rust 1.89.0 稳定版发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Rust 1.89.0 稳定版&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F%C2%A0https%3A%2F%2Fblog.rust-lang.org%2F2025%2F08%2F07%2FRust-1.89.0" target="_blank"&gt;已发布&lt;/a&gt;&lt;/u&gt;。主要变化包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 x86 特性&lt;/strong&gt;：新增了更多 AVX-512 intrinsics，并扩展了 &lt;code&gt;target_feature&lt;/code&gt; 属性支持一系列新的 x86/x86_64 指令集扩展，包括 SHA512、SM3、SM4、KL 和 WIDEKL 等 。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;语法和语言改进&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;支持对常量泛型参数的显式推导（&lt;code&gt;generic_arg_infer&lt;/code&gt;）正式稳定。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;引入一个默认启用的 lint：&lt;code&gt;mismatched_lifetime_syntaxes&lt;/code&gt;，用于提醒函数签名中不同生命周期语法之间可能引起混淆的情况，取代了之前的 &lt;code&gt;elided_named_lifetimes&lt;/code&gt; lint。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;以下内容转载自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8bdp0wCVj5narHSoMf4-hQ" target="_blank"&gt;https://mp.weixin.qq.com/s/8bdp0wCVj5narHSoMf4-hQ&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;1.89.0 稳定版的新特性&lt;/h3&gt; 
&lt;h4&gt;显式推断的常量泛型参数&lt;/h4&gt; 
&lt;p&gt;Rust 现在支持将&amp;nbsp;&lt;code&gt;_&lt;/code&gt;&amp;nbsp;用作常量泛型参数的一个参数，编译器会从周围的上下文推断该值：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pub fn all_false&amp;lt;const LEN: usize&amp;gt;() -&amp;gt; [bool; LEN] {
&amp;nbsp; [false; _]
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;类似于&amp;nbsp;&lt;code&gt;_&lt;/code&gt;&amp;nbsp;作为类型参数的使用规则，当在函数签名中使用&amp;nbsp;&lt;code&gt;_&lt;/code&gt;&amp;nbsp;作为常量泛型的参数时，编译器会拒绝：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// 这是不允许的
pub const fn all_false&amp;lt;const LEN: usize&amp;gt;() -&amp;gt; [bool; _] {
&amp;nbsp; [false; LEN]
}

// 这个也不允许
pub const ALL_FALSE: [bool; _] = all_false::&amp;lt;10&amp;gt;();

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;不匹配的生命周期语法警告&lt;/h4&gt; 
&lt;p&gt;函数签名中的生命周期省略是 Rust 的一种便捷特性，但它也可能是新手和专家的绊脚石，尤其当生命周期被推断到类型时，如果没有明显的语法指示，可能会令人困惑：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// 返回类型 `std::slice::Iter` 有生命周期，
// 但代码中没有视觉指示
//
// 生命周期省略会将返回类型的生命周期推断为与 `scores` 的生命周期相同
fn items(scores: &amp;amp;[u8]) -&amp;gt; std::slice::Iter&amp;lt;u8&amp;gt; {
&amp;nbsp; &amp;nbsp;scores.iter()
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;像上面的代码现在会默认生成警告：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;warning: hiding a lifetime that's elided elsewhere is confusing
&amp;nbsp;--&amp;gt; src/lib.rs:1:18
&amp;nbsp; |
1 | fn items(scores: &amp;amp;[u8]) -&amp;gt; std::slice::Iter&amp;lt;u8&amp;gt; {
&amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;^^^^^ &amp;nbsp; &amp;nbsp; -------------------- the same lifetime is hidden here
&amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|
&amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;the lifetime is elided here
&amp;nbsp; |
&amp;nbsp; = help: the same lifetime is referred to in inconsistent ways, making the signature confusing
&amp;nbsp; = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default
help: use `'_` for type paths
&amp;nbsp; |
1 | fn items(scores: &amp;amp;[u8]) -&amp;gt; std::slice::Iter&amp;lt;'_, u8&amp;gt; {
&amp;nbsp; | &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; +++

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;我们第一次尝试通过 2018 年的&amp;nbsp;&lt;code&gt;rust_2018_idioms&lt;/code&gt;&amp;nbsp;lint 组来改善这个问题，但对于&amp;nbsp;&lt;code&gt;elided_lifetimes_in_paths&lt;/code&gt;&amp;nbsp;lint 的强烈反馈表明，这个 lint 过于笨拙，因为它会警告一些对于理解函数没有实际意义的生命周期：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;use std::fmt;

struct Greeting;

impl fmt::Display for Greeting {
&amp;nbsp; &amp;nbsp; fn fmt(&amp;amp;self, f: &amp;amp;mut fmt::Formatter) -&amp;gt; fmt::Result {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;-----^^^^^^^^^ expected lifetime parameter
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 知道 `Formatter` 有生命周期对程序员没有帮助
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; "howdy".fmt(f)
&amp;nbsp; &amp;nbsp; }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;我们意识到，造成困惑的情况出现在以下两种情况下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;生命周期省略推断规则将输入生命周期与输出生命周期连接在一起&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;没有语法上明显的生命周期存在&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Rust 语法中有两种标志生命周期存在的方式：&lt;code&gt;&amp;amp;&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;'&lt;/code&gt;，其中&amp;nbsp;&lt;code&gt;'&lt;/code&gt;&amp;nbsp;又分为推断生命周期&amp;nbsp;&lt;code&gt;'_&lt;/code&gt;&amp;nbsp;和命名生命周期&amp;nbsp;&lt;code&gt;'a&lt;/code&gt;。当类型使用命名生命周期时，生命周期省略将不会为该类型推断生命周期。通过这些标准，我们可以构建出三组：&lt;/p&gt; 
&lt;table border="1" cellspacing="0" style="-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border:1px solid #f6f6f6; box-sizing:border-box; color:#252933; display:inline-block !important; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;; font-size:12px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; overflow:auto; padding:0px; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; word-spacing:0px"&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th style="border-color:#bbbbbb #dddddd #dddddd"&gt; &lt;p&gt;&lt;span&gt;自显生命周期&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="border-color:#bbbbbb #dddddd #dddddd"&gt; &lt;p&gt;&lt;span&gt;允许省略生命周期推断&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="border-color:#bbbbbb #dddddd #dddddd"&gt; &lt;p&gt;&lt;span&gt;示例&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;否&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;是&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;ContainsLifetime&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;是&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;是&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;code&gt;&lt;span&gt;&amp;amp;T&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;，&lt;/span&gt;&lt;code&gt;&lt;span&gt;&amp;amp;'_ T&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，&lt;/span&gt;&lt;code&gt;&lt;span&gt;ContainsLifetime&amp;lt;'_&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;是&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p&gt;&lt;span&gt;否&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;code&gt;&lt;span&gt;&amp;amp;'a T&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;，&lt;/span&gt;&lt;code&gt;&lt;span&gt;ContainsLifetime&amp;lt;'a&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#252933; margin-left:0; margin-right:0; text-align:start"&gt;&lt;code&gt;mismatched_lifetime_syntaxes&lt;/code&gt;&amp;nbsp;lint 检查函数的输入和输出是否属于同一组。上述初始示例中，&lt;code&gt;&amp;amp;[u8]&lt;/code&gt;&amp;nbsp;属于第二组，而&amp;nbsp;&lt;code&gt;std::slice::Iter&amp;lt;u8&amp;gt;&lt;/code&gt;&amp;nbsp;属于第一组，因此它们的生命周期是「隐藏的」。由于输入和输出的生命周期属于不同的组，lint 会发出警告，减少对生命周期存在但视觉上不明显的困惑。&lt;/p&gt; 
&lt;h4&gt;更多 x86 目标特性&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;target_feature&lt;/code&gt;&amp;nbsp;属性现在支持&amp;nbsp;&lt;code&gt;sha512&lt;/code&gt;、&lt;code&gt;sm3&lt;/code&gt;、&lt;code&gt;sm4&lt;/code&gt;、&lt;code&gt;kl&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;widekl&lt;/code&gt;&amp;nbsp;等 x86 目标特性。此外，x86 上还支持一些 AVX512 内在特性和目标特性：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;#[target_feature(enable = "avx512bw")]
pub fn cool_simd_code(/* .. */) -&amp;gt; /* ... */ {
&amp;nbsp; &amp;nbsp; /* ... */
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;跨编译文档测试&lt;/h4&gt; 
&lt;p&gt;当运行&amp;nbsp;&lt;code&gt;cargo test --doc --target other_target&lt;/code&gt;&amp;nbsp;时，文档测试现在将被测试。这可能会导致一些断裂，因为本来会失败的文档测试现在会被测试到。&lt;/p&gt; 
&lt;p&gt;失败的测试可以通过在文档测试中使用&amp;nbsp;&lt;code&gt;ignore-&amp;lt;target&amp;gt;&lt;/code&gt;&amp;nbsp;注解来禁用：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/// ```ignore-x86_64
/// panic!("something")
/// ```
pub fn my_function() { }

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;i128 和 u128 在 extern "C" 函数中的使用&lt;/h4&gt; 
&lt;p&gt;i128 和 u128 不再触发&amp;nbsp;&lt;code&gt;improper_ctypes_definitions&lt;/code&gt;&amp;nbsp;lint，这意味着这些类型可以在 extern "C" 函数中使用而不会产生警告。需要注意的是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;当类型可用时，Rust 类型与 C 中的（无符号）&lt;code&gt;__int128&lt;/code&gt;&amp;nbsp;在 ABI 和布局上兼容。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在没有&amp;nbsp;&lt;code&gt;__int128&lt;/code&gt;&amp;nbsp;可用的平台上，i128 和 u128 不一定与任何 C 类型对齐。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在任何平台上，i128 不一定与&amp;nbsp;&lt;code&gt;_BitInt(128)&lt;/code&gt;&amp;nbsp;兼容，因为&amp;nbsp;&lt;code&gt;_BitInt(128)&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;__int128&lt;/code&gt;&amp;nbsp;可能没有相同的 ABI（例如，在 x86-64 平台上）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这是去年布局更改的最后一步：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2024%2F03%2F30%2Fi128-layout-update%25E3%2580%2582" target="_blank"&gt;https://blog.rust-lang.org/2024/03/30/i128-layout-update。&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;将 x86_64-apple-darwin 降级为 Tier 2&lt;/h4&gt; 
&lt;p&gt;GitHub 将很快停止为公共仓库提供免费的 macOS x86_64 运行器。Apple 也宣布将停止对 x86_64 架构的支持。&lt;/p&gt; 
&lt;p&gt;根据这些变化，Rust 项目正在将 x86_64-apple-darwin 目标从带有主机工具的 Tier 1 降级为带有主机工具的 Tier 2。这意味着该目标，包括 rustc 和 cargo 等工具，将保证能够构建，但不保证通过我们的自动化测试套件。&lt;/p&gt; 
&lt;p&gt;预计 RFC 将在 Rust 1.89 和 1.90 发布之间接受，这意味着 Rust 1.89 将是最后一个将 x86_64-apple-darwin 视为 Tier 1 目标的版本。&lt;/p&gt; 
&lt;p&gt;对于用户来说，这个变化不会立即产生影响。在目标仍处于 Tier 2 时，Rust 项目将继续分发标准库和编译器的构建，供 rustup 或其他安装方法使用。随着时间推移，目标的测试覆盖率减少可能会导致某些功能不再兼容或出现问题，且没有进一步的公告。&lt;/p&gt; 
&lt;h4&gt;wasm32-unknown-unknown 目标的标准 C ABI 支持&lt;/h4&gt; 
&lt;p&gt;wasm32-unknown-unknown 目标上的&amp;nbsp;&lt;code&gt;extern "C"&lt;/code&gt;&amp;nbsp;函数现在具有符合标准的 ABI。有关更多信息，请参阅此博客文章：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2025%2F04%2F04%2Fc-abi-changes-for-wasm32-unknown-unknown%25E3%2580%2582" target="_blank"&gt;https://blog.rust-lang.org/2025/04/04/c-abi-changes-for-wasm32-unknown-unknown。&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;平台支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;x86_64-apple-darwin 正在被降级为带有主机工具的 Tier 2&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增了 Tier-3 目标&amp;nbsp;&lt;code&gt;loongarch32-unknown-none&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;loongarch32-unknown-none-softfloat&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;有关 Rust 的平台支持，请参阅 Rust 的平台支持页面。&lt;/p&gt; 
&lt;h3&gt;稳定的 API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NonZero&amp;lt;char&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;x86 的许多内在特性（未列出）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AVX512 内在特性&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;SHA512, SM3 和 SM4 内在特性&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;File::lock&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;File::lock_shared&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;File::try_lock&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;File::try_lock_shared&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;File::unlock&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NonNull::from_ref&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NonNull::from_mut&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NonNull::without_provenance&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;`NonNull&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;::with_exposed_provenance`&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NonNull::expose_provenance&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OsString::leak&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PathBuf::leak&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Result::flatten&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;std::os::linux::net::TcpStreamExt::quickack&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;std::os::linux::net::TcpStreamExt::set_quickack&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这些之前稳定的 API 现在也在常量上下文中变为稳定：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;[T; N]&amp;gt;::as_mut_slice&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;[u8]&amp;gt;::eq_ignore_ascii_case&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;str::eq_ignore_ascii_case&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;其他更改&lt;/h3&gt; 
&lt;p&gt;请查看 Rust、Cargo 和 Clippy 中的所有更改。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365023/rust-1-89-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365023/rust-1-89-0</guid>
      <pubDate>Fri, 08 Aug 2025 07:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>开源机器学习框架 PyTorch 2.8 正式发布，提升量化 LLM 推理性能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;PyTorch 2.8 已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpytorch.org%2Fblog%2Fpytorch-2-8%2F" target="_blank"&gt;发布&lt;/a&gt;，重点在 Intel CPU 上大幅提升量化 LLM 推理性能，并实验性支持 Intel GPU 分布式后端。 此外，还引入稳定的 libtorch ABI、实验性 wheel 变体机制、SYCL 与 XPU 优化、ROCm 与 CUTLASS 后端增强，以及更多控制流算子支持。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-20962b842720616a8bfd331c0ba5864ac65.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Intel CPU 上的量化 LLM 推理性能显著提升&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PyTorch 2.8 强调在原生 PyTorch 框架下实现高性能的量化大语言模型（LLM）推理（支持 A16W8、DA8W8、A16W4 等模式）。据称其性能可达或超越 vLLM 等热门 LLM 服务框架在单 x86_64 CPU 离线模式下的表现。&lt;/p&gt; 
&lt;p&gt;此外，Intel 工程师还引入了 FP8 QCONV、FP8 QLINEAR，以及更广泛使用 AMX 微内核等优化，大幅提升性能。例如，在第 6 代 Intel Xeon 平台上，以 M＝8、K 和 32 核心为条件下运行 Llama-3.1-8B 模型时，端到端延迟最高可缩短 20% 以上。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;对 Intel GPU 的 XCCL 分布式后端的实验支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本次更新加入了 Intel 离散 GPU 的 XCCL 分布式后端的实验性支持，可用于不同训练范式。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;其他重要变化&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;将 SYCL 支持引入 PyTorch C++ 扩展 API。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 XPU 设备上加入 A16W4 模式支持。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;实验性轮子（wheel）变体机制支持，方便平台依赖的包安装。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;限定稳定的 libtorch ABI&lt;/strong&gt;：为第三方 C++/CUDA 扩展提供了更稳定的接口，减少兼容性问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;轮子变体机制（Wheel Variants）&lt;/strong&gt;：允许针对硬件特性发布多个轮子版本，通过检测选择最佳匹配，实验性功能，目前可自动识别并安装最适合的 CUDA 平台包。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ROCm 支持增强&lt;/strong&gt;：增加对 gfx950 架构的支持，结合 TorchInductor 和 AOTInductor 提供 matmul、addmm、conv2d、bmm、_scaled_mm 等内核的 max-autotune 模板。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;控制流算子支持&lt;/strong&gt;：新增 cond、while_loop、scan、associative_scan、map 等控制流操作，以加速模型编译和导出。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Inductor CUTLASS 后端支持&lt;/strong&gt;：为 torch.compile 和 AOTInductor 提供 CUTLASS 后端支持，覆盖 GEMM、fp8 mm、addmm 和 bmm 操作。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;PyTorch 2.8 下载地址：&lt;em&gt;https://github.com/pytorch/pytorch/releases/tag/v2.8.0&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365017/pytorch-2-8</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365017/pytorch-2-8</guid>
      <pubDate>Fri, 08 Aug 2025 07:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Ubuntu 24.04.3 LTS 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Ubuntu 24.04 这一长期支持版本发布了第三个点版本升级：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.ubuntu.com%2Farchives%2Fubuntu-announce%2F2025-August%2F000315.html" target="_blank"&gt;Ubuntu 24.04.3 LTS&lt;/a&gt;，涵盖桌面、服务器与云等版本，主要是将过去数月发布的安全更新、错误修复和稳定性改进整合入最新的安装镜像，使新安装者无需在初次安装后立即下载大量更新包。&lt;/p&gt; 
&lt;p&gt;&lt;img height="788" src="https://static.oschina.net/uploads/space/2025/0808/152225_WymN_2720166.png" width="1156" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;em&gt;https://releases.ubuntu.com/noble/&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;HWE 更新&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本次 24.04.3 带来了新的&amp;nbsp;&lt;strong&gt;HWE&lt;/strong&gt;，即后移植自 Ubuntu 25.04 (「Plucky Puffin」) 的 &lt;strong&gt;Linux 6.14 内核&lt;/strong&gt; 和 &lt;strong&gt;Mesa 25 图形驱动&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Mesa–Amber 包支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;引入了 &lt;code&gt;mesa-amber&lt;/code&gt; 包，以支持已不属于主 Mesa 包的新旧显卡驱动，增强对老旧硬件的兼容性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Bug 修复&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;修复了多个用户反馈的问题，如软件更新器中消失的「安装」按钮、缺失的桌面缩略图、触摸屏输入问题、蓝牙音频连接问题等，同时还包含了针对笔记本等设备的能源警示功能，以符合欧盟的能源使用规范。&lt;/p&gt; 
&lt;p&gt;如果你已经在使用 Ubuntu 24.04 LTS 并且保持系统更新，则无需下载新镜像或重装系统。通过软件更新器或 apt 安装 &lt;code&gt;base-files&lt;/code&gt; 即可升级至 24.04.3。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365014/ubuntu-24-04-3-lts-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365014/ubuntu-24-04-3-lts-released</guid>
      <pubDate>Fri, 08 Aug 2025 07:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Calibre 8.8 发布，功能强大的开源电子书工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Calibre 开源项目是 Calibre 官方出的电子书管理工具。它可以查看，转换，编辑和分类所有主流格式的电子书。Calibre 是个跨平台软件，可以在 Linux、Windows 和 macOS 上运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Calibre 8.8 现已正式发布，此次更新内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;新功能&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;E-book viewer：改进 Google 查找结果的显示&lt;/li&gt; 
 &lt;li&gt;Kobo driver：添加对最新 Tolino 固件的支持&lt;/li&gt; 
 &lt;li&gt;Conversion：处理某些日语 EPUB 图书中使用的 -epub-text-premain 属性&lt;/li&gt; 
 &lt;li&gt;Piper Neural text to spehing engine：重写用于运行 Piper 语音模型的后端，不再需要外部二进制文件，以提高性能和稳健性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style="color:#000000"&gt;错误修复&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Edit book：Reports：修复按 CSS 规则名称排序的问题&lt;/li&gt; 
 &lt;li&gt;修复基于模板的标签类型自定义列在用于相似性搜索时未被视为多值的问题&lt;/li&gt; 
 &lt;li&gt;递归地添加书籍时，不要尝试导入名称带有电子书文件扩展名的文件夹。&lt;/li&gt; 
 &lt;li&gt;EPUB3 Output：&amp;nbsp;修复处理导航文件时出现的各种问题，这些文件不仅包含目录，还不包括在书脊中。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcalibre-ebook.com%2Fwhats-new" target="_blank"&gt;https://calibre-ebook.com/whats-new&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/365004/calibre-8-8-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/365004/calibre-8-8-released</guid>
      <pubDate>Fri, 08 Aug 2025 06:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
