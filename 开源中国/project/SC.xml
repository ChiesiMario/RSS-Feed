<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - project - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/project" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 21 Aug 2025 21:41:44 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>BootstrapBlazor v9.9.3 已经发布，Bootstrap 样式的 Blazor UI 组件库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;BootstrapBlazor v9.9.3 已经发布，Bootstrap 样式的 Blazor UI 组件库&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h2&gt;Release 2025-8-21 V9.9.3&lt;/h2&gt; 
&lt;h3&gt;Break changes&lt;/h3&gt; 
&lt;h3&gt;Bugs&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;fix(hasCode): 修复算法错误问题 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6650" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6650&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;fix(SelectTree): 优化多次触发 &lt;code&gt;SelectedItemChanged&lt;/code&gt; 回调问题 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6654" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6654&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;feat(Table): 支持设置 &lt;code&gt;TItem&lt;/code&gt; 为接口 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6619" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6619&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(BootstrapLabel): 支持原生 &lt;code&gt;style&lt;/code&gt; 标签 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6632" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6632&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Task): 新增 &lt;code&gt;Dashboard&lt;/code&gt; 组件 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6634" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6634&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Layout): 增加 &lt;code&gt;SkipAuthenticate&lt;/code&gt; 参数 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6640" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6640&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(CodeEditor): 更新底层依赖 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6642" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6642&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;refactor(Upload): remove async keyword by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6644" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6644&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Editor): 增加 &lt;code&gt;OnFileUpload&lt;/code&gt; 参数 by &lt;a href="https://gitee.com/j4587698" target="_blank"&gt;@j4587698&lt;/a&gt; in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6638" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6638&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IPRegion): 使用异步加载方法提供加载速度 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6652" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6652&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Editor): 更新返回值为可为空对象 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6658" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6658&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(IDom2ImageService): 新增 &lt;code&gt;IDom2ImageService&lt;/code&gt; 服务 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6661" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6661&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(Tooltip): 支持 &lt;code&gt;manual&lt;/code&gt; 触发方式提供 &lt;code&gt;Show&lt;/code&gt; &lt;code&gt;Hide&lt;/code&gt; &lt;code&gt;Toggle&lt;/code&gt; 实例方法 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6663" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6663&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;feat(EnsureInitialized): 增加 &lt;code&gt;CanWrite&lt;/code&gt; 过滤提高效率 by @ArgoZhang in &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fpull%2F6665" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/pull/6665&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;New Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Full Changelog&lt;/strong&gt;: &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FBootstrapBlazor%2Fcompare%2Fv9.9.2...v9.9.3" target="_blank"&gt;https://github.com/dotnetcore/BootstrapBlazor/compare/v9.9.2...v9.9.3&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v9.9.3"&gt;https://gitee.com/LongbowEnterprise/BootstrapBlazor/releases/v9.9.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367680/bootstrapblazor-9-9-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367680/bootstrapblazor-9-9-3-released</guid>
      <pubDate>Mon, 18 Aug 2025 09:41:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>性能飞跃与重大变革：Zig 0.15.1 释放编译速度革命</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;系统编程语言 Zig 刚刚发布了 0.15.1 版本，这不仅仅是一次常规更新，更是一场深刻的技术变革。经过 162 名贡献者历时 5 个月的辛勤工作，这个版本在 647 次提交中实现了多项突破性改进，最引人注目的是调试模式下编译速度的惊人提升——整整快了 5 倍。&lt;/p&gt; 
&lt;h2&gt;编译速度革命：告别漫长等待&lt;/h2&gt; 
&lt;p&gt;对于任何程序员来说，编译等待时间都是开发过程中的噩梦。Zig 0.15.1 版本通过默认启用自研的 x86 后端，彻底改变了这一现状。在调试模式下，相比之前依赖 LLVM 后端的版本，新版本的编译速度提升了约 5 倍，这意味着原本需要 1-2 分钟的编译过程现在只需要几秒钟就能完成。&lt;/p&gt; 
&lt;p&gt;这种提升并非偶然。Zig 团队多年来一直在默默投入资源开发自主的代码生成后端，现在这些努力开始显现成效。更令人兴奋的是，这个自研后端天然支持增量编译技术，预示着未来还将带来更加极致的编译速度体验。&lt;/p&gt; 
&lt;p&gt;值得一提的是，新的自研后端不仅速度更快，在语言特性支持上也更加完整。它通过了 1984 项行为测试中的全部测试，而 LLVM 后端仅通过了 1977 项。这表明 Zig 正在摆脱对外部工具的依赖，向着更加独立自主的技术路线迈进。&lt;/p&gt; 
&lt;h2&gt;语言特性的大刀阔斧改革&lt;/h2&gt; 
&lt;h3&gt;usingnamespace 关键字的彻底移除&lt;/h3&gt; 
&lt;p&gt;在这个版本中，Zig 做出了一个大胆的决定：完全移除 &lt;code&gt;usingnamespace&lt;/code&gt; 关键字。这个看似激进的改动背后有着深思熟虑的考量。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;usingnamespace&lt;/code&gt; 虽然提供了便利，但它破坏了代码的可追溯性。当开发者试图找到某个标识符的定义时，可能需要在不同的文件和类型之间跳转，这不仅影响了人类读者的体验，也给自动化工具造成了困难。Zig 的自动文档生成工具就无法很好地处理复杂的 &lt;code&gt;usingnamespace&lt;/code&gt; 用法。&lt;/p&gt; 
&lt;p&gt;为了帮助开发者迁移，Zig 提供了多种替代方案。对于条件包含的需求，可以使用条件编译或编译期错误；对于实现切换的场景，可以使用条件表达式；对于 mixin 模式，则推荐使用零位字段配合 &lt;code&gt;@fieldParentPtr&lt;/code&gt; 来实现更好的命名空间管理。&lt;/p&gt; 
&lt;h3&gt;async/await 的暂时离场&lt;/h3&gt; 
&lt;p&gt;另一个重大变化是移除了 &lt;code&gt;async&lt;/code&gt; 和 &lt;code&gt;await&lt;/code&gt; 关键字。这并不意味着 Zig 放弃了异步编程，而是为了给即将到来的全新异步 I/O 接口让路。未来的异步功能将不再以语言关键字的形式存在，而是作为标准库的一部分，提供更加灵活和强大的异步编程能力。&lt;/p&gt; 
&lt;h3&gt;类型系统的细化调整&lt;/h3&gt; 
&lt;p&gt;版本 0.15.1 还对类型系统进行了多项优化。现在可以对布尔向量使用更多运算符，内联汇编支持了类型化的寄存器损坏声明，并且增强了指针转换的能力。最值得注意的是，编译器现在会在整数到浮点数的有损转换时报错，这有助于开发者写出更加安全可靠的代码。&lt;/p&gt; 
&lt;h2&gt;标准库的"写入门事件"&lt;/h2&gt; 
&lt;p&gt;如果说语言特性的变化是温和的改进，那么标准库的变化则可以称得上是一场"地震"。Zig 团队将这次重大重构戏称为"Writergate"（写入门事件），呼应了之前版本中的"Allocgate"（分配门事件）。&lt;/p&gt; 
&lt;h3&gt;全新的 I/O 接口设计&lt;/h3&gt; 
&lt;p&gt;新版本废弃了所有现有的读写器接口，推出了全新的 &lt;code&gt;std.Io.Reader&lt;/code&gt; 和 &lt;code&gt;std.Io.Writer&lt;/code&gt;。这些新接口最大的特点是非泛型设计，将缓冲区放在了接口层而非实现层。&lt;/p&gt; 
&lt;p&gt;这种设计带来了多重好处：消除了泛型代码污染，定义了精确的错误集合，提供了对矢量化和直接文件传输等高级概念的支持，并且对编译器优化更加友好。新接口还支持"窥视"功能，为用户提供了更方便的 API，同时简化了实现。&lt;/p&gt; 
&lt;h3&gt;格式化打印的重要变化&lt;/h3&gt; 
&lt;p&gt;格式化打印系统也经历了重大调整。现在调用 &lt;code&gt;format&lt;/code&gt; 方法必须明确使用 &lt;code&gt;{f}&lt;/code&gt; 格式说明符，而不能再使用通用的 &lt;code&gt;{}&lt;/code&gt;。这个变化虽然会导致一些编译错误，但能够避免引入或移除 &lt;code&gt;format&lt;/code&gt; 方法时产生的隐藏 bug。&lt;/p&gt; 
&lt;p&gt;此外，&lt;code&gt;format&lt;/code&gt; 方法的签名也得到了简化，不再接受格式字符串和选项参数，只需要一个 writer 参数即可。这种简化使得自定义格式化变得更加直观。&lt;/p&gt; 
&lt;h2&gt;HTTP 和 TLS 的全面重构&lt;/h2&gt; 
&lt;p&gt;网络编程是现代软件开发的重要组成部分，Zig 0.15.1 对 HTTP 客户端和服务器 API 进行了彻底重写。新的实现不再依赖 &lt;code&gt;std.net&lt;/code&gt;，而是只依赖 &lt;code&gt;std.Io.Reader&lt;/code&gt; 和 &lt;code&gt;std.Io.Writer&lt;/code&gt; 接口，这使得代码更加模块化和可测试。&lt;/p&gt; 
&lt;p&gt;TLS 客户端也遵循了同样的设计原则，移除了对文件系统和网络模块的直接依赖，使得整个加密通信栈变得更加轻量和灵活。&lt;/p&gt; 
&lt;h2&gt;构建系统的持续改进&lt;/h2&gt; 
&lt;p&gt;构建系统方面，Zig 0.15.1 移除了已被废弃的隐式根模块支持，强制要求使用新的模块定义方式。在 macOS 上，文件系统监控功能得到了重写，现在使用系统原生的文件系统事件 API，为 &lt;code&gt;--watch&lt;/code&gt; 功能提供了更快速可靠的文件变化检测。&lt;/p&gt; 
&lt;p&gt;一个令人兴奋的新增功能是 Web 界面，通过 &lt;code&gt;--webui&lt;/code&gt; 参数可以启用。这个界面不仅显示构建步骤的进度，还能配合 &lt;code&gt;--time-report&lt;/code&gt; 参数提供详细的性能分析信息，帮助开发者识别编译过程中的性能瓶颈。&lt;/p&gt; 
&lt;h2&gt;工具链的全面升级&lt;/h2&gt; 
&lt;p&gt;底层工具链也得到了显著增强。Zig 现在使用 LLVM 20.1.8，为 FreeBSD 和 NetBSD 添加了交叉编译支持，glibc 版本升级到了 2.42。特别值得一提的是，现在可以静态链接原生 glibc，为某些特殊用例提供了更多选择。&lt;/p&gt; 
&lt;p&gt;新版本还开始了一个雄心勃勃的项目：用 Zig 代码重新实现 libc 的通用函数。这个被称为"zig libc"的项目旨在最终完全摆脱对上游 C 实现代码的依赖，只保留头文件。虽然这是一个长期目标，但已经开始显现效果。&lt;/p&gt; 
&lt;h2&gt;性能优化的新突破&lt;/h2&gt; 
&lt;p&gt;编译器内部也进行了重要的性能优化。通过引入线程化代码生成，语义分析、代码生成和链接现在可以并行执行。这种并行化在使用自研后端时带来了显著的性能提升，某些情况下可以将编译时间再缩短 50%。&lt;/p&gt; 
&lt;p&gt;增量编译功能虽然仍在实验阶段，但已经稳定到可以在结合 &lt;code&gt;-fno-emit-bin&lt;/code&gt; 参数使用时可靠运行。对于大型项目，使用 &lt;code&gt;--watch -fincremental -Dno-bin&lt;/code&gt; 可以获得几乎瞬时的编译错误检查体验。&lt;/p&gt; 
&lt;h2&gt;面向未来的技术路线&lt;/h2&gt; 
&lt;p&gt;展望未来，Zig 0.16.0 版本将聚焦于异步 I/O 和 aarch64 后端两大主题。异步 I/O 将引入全新的接口设计，使得所有阻塞操作都需要通过 &lt;code&gt;Io&lt;/code&gt; 实例进行，这将为编写高性能的异步代码提供更好的支持。&lt;/p&gt; 
&lt;p&gt;aarch64 后端的开发也在快速推进中，目前已经通过了 84% 的行为测试。这个后端采用了从 x86 后端经验中学到的全新设计理念，有望在保持编译速度优势的同时，生成质量更高的机器代码。&lt;/p&gt; 
&lt;h2&gt;挑战与机遇并存&lt;/h2&gt; 
&lt;p&gt;当然，如此大规模的变更也带来了挑战。Zig 团队坦诚地承认，这个版本包含了大量破坏性变化，可能会给现有项目的迁移带来困难。但他们相信这些痛苦是值得的，因为这些变化为 Zig 的长远发展奠定了坚实基础。&lt;/p&gt; 
&lt;p&gt;目前 Zig 仍然存在一些已知的 bug 和回归问题，团队正在积极解决。对于使用 Zig 进行非平凡项目开发的用户，可能仍需要参与到开发过程中来。&lt;/p&gt; 
&lt;h2&gt;结语：编程语言的未来样貌&lt;/h2&gt; 
&lt;p&gt;Zig 0.15.1 的发布不仅仅是一个版本更新，更代表了系统编程语言发展的一个重要方向。通过自研编译后端实现的编译速度提升，展示了摆脱传统工具链依赖的巨大潜力。标准库的重构虽然带来了短期的适配成本，但为长期的 API 稳定性和性能优化打下了基础。&lt;/p&gt; 
&lt;p&gt;在当前软件开发追求快速迭代的大环境下，Zig 对编译速度的极致追求显得尤为珍贵。5 倍的编译速度提升不仅仅是数字上的改善，更是对开发者生产力的根本性解放。当其他语言还在为编译时间苦恼时，Zig 已经在探索让编译变得近乎瞬时的可能性。&lt;/p&gt; 
&lt;p&gt;对于关注系统编程语言发展的开发者来说，Zig 0.15.1 无疑是值得深入了解和尝试的版本。虽然距离 1.0 正式版本还有一段路要走，但从这个版本展现的技术实力和发展方向来看，Zig 正在成为系统编程领域一个不容忽视的重要选择。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367672/zig-0-15-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367672/zig-0-15-1-released</guid>
      <pubDate>Mon, 18 Aug 2025 09:27:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>PaddlePaddle 3.1.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;PaddlePaddle 3.1.1 现已发布。3.1.1 版本围绕大模型训练全流程进行了系统性强化，通过体系化修复大模型场景下算子数值精度和功能等底层稳定性问题，结合 API 的日志系统规范化与单元测试全覆盖，显著提升大模型训练的正确性和稳定性；性能层面，在提高部分关键框架 API 和 FP8 场景下的量化计算效率的同时增强分布式训练场景下 FP8 量化和流水线并行效率，大幅提升训练吞吐。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;扩展自动并行架构的切分推导覆盖范围；推理部署提高兼容性的同时进一步增强 EP 并行推理能力；整体上在保持 API 兼容性的基础上构建出更稳健、高效的大模型研发技术底座。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;算子与执行体系正确性、稳定性增强&lt;/strong&gt;：系统化修复 0-size、大 shape Tensor、CPU/GPU 精度一致性问题，保障大模型训练正确性、稳定性。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;FP8 相关算子优化&lt;/strong&gt;: 进一步提升 FP8 相关量化和计算融合算子的性能，并调整了部分算子的 sm 使用量，提升 FP8 混合精度训练效率&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;大模型训练更稳更快&lt;/strong&gt;：系统性优化了 Slice 相关场景的执行效率，大幅提升 Slice 相关操作性能；修复流水线场景下的参数同步问题、新增 Sharding 场景的 FP8 参数量化能力和 DualPipe 下的极致通信计算重叠能力，保障并行训练稳定高效。同时增强自动并行架构下的切分推导能力增强自动并行切分效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;推理部署&lt;/strong&gt;：新增支持 safetensors 加载功能，EP 并行方面对 internode_ll_two_stage 进行了功能增强助力进一步提升推理效率。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;1. 用户体验升级&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.1 版本中，主要对大模型场景下常用的的多个 API 进行了补充，并且系统化修复了 API 日志以及部分代码实现问题。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.device.device_guard&lt;/code&gt;，动态图的设备切换上下文管理器。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73964" target="_blank"&gt;#73964&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.Tensor.bool&lt;/code&gt;、&lt;code&gt;paddle.Tensor.float16&lt;/code&gt;、&lt;code&gt;paddle.Tensor.half&lt;/code&gt;、&lt;code&gt;paddle.Tensor.bfloat16&lt;/code&gt;、&lt;code&gt;paddle.Tensor.float32&lt;/code&gt;、&lt;code&gt;paddle.Tensor.float&lt;/code&gt;、&lt;code&gt;paddle.Tensor.float64&lt;/code&gt;、&lt;code&gt;paddle.Tensor.double&lt;/code&gt;、&lt;code&gt;paddle.Tensor.int8&lt;/code&gt;、&lt;code&gt;paddle.Tensor.char&lt;/code&gt;、&lt;code&gt;paddle.Tensor.uint8&lt;/code&gt;、&lt;code&gt;paddle.Tensor.byte&lt;/code&gt;、&lt;code&gt;paddle.Tensor.int16&lt;/code&gt;、&lt;code&gt;paddle.Tensor.short&lt;/code&gt;、&lt;code&gt;paddle.Tensor.int32&lt;/code&gt;、&lt;code&gt;paddle.Tensor.int&lt;/code&gt;、&lt;code&gt;paddle.Tensor.int64&lt;/code&gt;、&lt;code&gt;paddle.Tensor.long&lt;/code&gt;、&lt;code&gt;paddle.Tensor.complex64&lt;/code&gt;、&lt;code&gt;paddle.Tensor.complex128&lt;/code&gt;、&lt;code&gt;paddle.Tensor.cfloat&lt;/code&gt;、&lt;code&gt;paddle.Tensor.cdouble&lt;/code&gt;，支持灵活的数据类型切换。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74416" target="_blank"&gt;#74416&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.msort&lt;/code&gt;，支持多维数组的排序。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74421" target="_blank"&gt;#74421&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.ravel&lt;/code&gt;、&lt;code&gt;paddle.Tensor.ravel&lt;/code&gt;，支持对 Tensor 进行拉平。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74439" target="_blank"&gt;#74439&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74454" target="_blank"&gt;#74454&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;F.dropout1d&lt;/code&gt;，支持对 Tensor 沿指定维度进行随机丢弃。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74444" target="_blank"&gt;#74444&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.Tensor.type_as&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74459" target="_blank"&gt;#74459&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.Tensor.mul_&lt;/code&gt;、&lt;code&gt;paddle.autograd.Function&lt;/code&gt;、&lt;code&gt;paddle.argwhere&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74493" target="_blank"&gt;#74493&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.nn.MultiLabelMarginLoss&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73538" target="_blank"&gt;#73538&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 API&amp;nbsp;&lt;code&gt;paddle.is_autocast_enabled&lt;/code&gt;、&lt;code&gt;paddle.get_autocast_gpu_dtype&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74441" target="_blank"&gt;#74441&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增 Tensor 属性&amp;nbsp;&lt;code&gt;paddle.Tensor.requires_grad&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74491" target="_blank"&gt;#74491&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;Tensor.place&lt;/code&gt;&amp;nbsp;之间比较的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73532" target="_blank"&gt;#73532&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;F.adaptive_log_softmax_with_loss&lt;/code&gt;&amp;nbsp;的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73554" target="_blank"&gt;#73554&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;Tensor.__radd__&lt;/code&gt;、&lt;code&gt;Tensor.__rmul__&lt;/code&gt;&amp;nbsp;相关问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73833" target="_blank"&gt;#73833&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 API 的 0-size 相关问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73874" target="_blank"&gt;#73874&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;_DataLoaderIterMultiProcess&lt;/code&gt;、&lt;code&gt;_DataLoaderIterSingleProcess&lt;/code&gt;的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73931" target="_blank"&gt;#73931&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;paddle.nanmedian&lt;/code&gt;&amp;nbsp;的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74263" target="_blank"&gt;#74263&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;paddle.eigh&lt;/code&gt;&amp;nbsp;的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73349" target="_blank"&gt;#73349&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;paddle.arange&lt;/code&gt;&amp;nbsp;的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74159" target="_blank"&gt;#74159&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;paddle.cumprod&lt;/code&gt;&amp;nbsp;支持设置 dim 为 None。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74106" target="_blank"&gt;#74106&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;paddle.zeros/zeros_like/ones/ones_like/eye/empty/empty_like/full/full_like&lt;/code&gt;&amp;nbsp;支持 device、dtype、requires_grad 等更多参数。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74477" target="_blank"&gt;#74477&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;paddle.ones&lt;/code&gt;&amp;nbsp;支持 shape 为可变参数的用法。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74494" target="_blank"&gt;#74494&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;F.gelu&lt;/code&gt;&amp;nbsp;的 approximate 参数支持字符串格式。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74485" target="_blank"&gt;#74485&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;F.scaled_dot_product_attention&lt;/code&gt;&amp;nbsp;支持输入为 3D。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73804" target="_blank"&gt;#73804&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;文档&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复文档相关的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73640" target="_blank"&gt;#73640&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74356" target="_blank"&gt;#74356&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;代码风格相关的优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73659" target="_blank"&gt;#73659&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73661" target="_blank"&gt;#73661&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73660" target="_blank"&gt;#73660&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74001" target="_blank"&gt;#74001&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74145" target="_blank"&gt;#74145&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73863" target="_blank"&gt;#73863&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73655" target="_blank"&gt;#73655&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73724" target="_blank"&gt;#73724&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73764" target="_blank"&gt;#73764&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73849" target="_blank"&gt;#73849&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;代码实现相关的优化，文件命名优化，typo 修复，MKLDNN 相关的优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74132" target="_blank"&gt;#74132&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73626" target="_blank"&gt;#73626&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73641" target="_blank"&gt;#73641&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73587" target="_blank"&gt;#73587&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73801" target="_blank"&gt;#73801&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73812" target="_blank"&gt;#73812&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73827" target="_blank"&gt;#73827&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73845" target="_blank"&gt;#73845&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73841" target="_blank"&gt;#73841&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73859" target="_blank"&gt;#73859&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73858" target="_blank"&gt;#73858&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73840" target="_blank"&gt;#73840&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73826" target="_blank"&gt;#73826&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73825" target="_blank"&gt;#73825&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73824" target="_blank"&gt;#73824&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73887" target="_blank"&gt;#73887&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73949" target="_blank"&gt;#73949&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73823" target="_blank"&gt;#73823&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73218" target="_blank"&gt;#73218&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73948" target="_blank"&gt;#73948&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74479" target="_blank"&gt;#74479&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74233" target="_blank"&gt;#74233&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74513" target="_blank"&gt;#74513&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74518" target="_blank"&gt;#74518&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74516" target="_blank"&gt;#74516&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74178" target="_blank"&gt;#74178&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74166" target="_blank"&gt;#74166&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74165" target="_blank"&gt;#74165&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74163" target="_blank"&gt;#74163&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74174" target="_blank"&gt;#74174&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74164" target="_blank"&gt;#74164&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74162" target="_blank"&gt;#74162&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74208" target="_blank"&gt;#74208&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74180" target="_blank"&gt;#74180&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74205" target="_blank"&gt;#74205&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74288" target="_blank"&gt;#74288&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74232" target="_blank"&gt;#74232&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74299" target="_blank"&gt;#74299&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74244" target="_blank"&gt;#74244&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74230" target="_blank"&gt;#74230&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74314" target="_blank"&gt;#74314&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74392" target="_blank"&gt;#74392&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74424" target="_blank"&gt;#74424&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74417" target="_blank"&gt;#74417&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74536" target="_blank"&gt;#74536&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74473" target="_blank"&gt;#74473&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74135" target="_blank"&gt;#74135&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74245" target="_blank"&gt;#74245&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74327" target="_blank"&gt;#74327&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74325" target="_blank"&gt;#74325&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74326" target="_blank"&gt;#74326&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74315" target="_blank"&gt;#74315&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74385" target="_blank"&gt;#74385&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74395" target="_blank"&gt;#74395&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74398" target="_blank"&gt;#74398&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74393" target="_blank"&gt;#74393&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74367" target="_blank"&gt;#74367&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74391" target="_blank"&gt;#74391&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74436" target="_blank"&gt;#74436&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74410" target="_blank"&gt;#74410&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74475" target="_blank"&gt;#74475&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74517" target="_blank"&gt;#74517&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;单测相关的优化，单测问题修复。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73664" target="_blank"&gt;#73664&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73723" target="_blank"&gt;#73723&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73725" target="_blank"&gt;#73725&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73728" target="_blank"&gt;#73728&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73731" target="_blank"&gt;#73731&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73726" target="_blank"&gt;#73726&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73786" target="_blank"&gt;#73786&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73727" target="_blank"&gt;#73727&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73721" target="_blank"&gt;#73721&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73798" target="_blank"&gt;#73798&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73791" target="_blank"&gt;#73791&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73784" target="_blank"&gt;#73784&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73788" target="_blank"&gt;#73788&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73794" target="_blank"&gt;#73794&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73822" target="_blank"&gt;#73822&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73839" target="_blank"&gt;#73839&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73843" target="_blank"&gt;#73843&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73790" target="_blank"&gt;#73790&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73905" target="_blank"&gt;#73905&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73903" target="_blank"&gt;#73903&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73902" target="_blank"&gt;#73902&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73900" target="_blank"&gt;#73900&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73909" target="_blank"&gt;#73909&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73917" target="_blank"&gt;#73917&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73906" target="_blank"&gt;#73906&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73904" target="_blank"&gt;#73904&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73947" target="_blank"&gt;#73947&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73944" target="_blank"&gt;#73944&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73945" target="_blank"&gt;#73945&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73969" target="_blank"&gt;#73969&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74068" target="_blank"&gt;#74068&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74082" target="_blank"&gt;#74082&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74399" target="_blank"&gt;#74399&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74423" target="_blank"&gt;#74423&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74458" target="_blank"&gt;#74458&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74501" target="_blank"&gt;#74501&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74487" target="_blank"&gt;#74487&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74502" target="_blank"&gt;#74502&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74507" target="_blank"&gt;#74507&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74504" target="_blank"&gt;#74504&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74505" target="_blank"&gt;#74505&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74509" target="_blank"&gt;#74509&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74535" target="_blank"&gt;#74535&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74503" target="_blank"&gt;#74503&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74142" target="_blank"&gt;#74142&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74287" target="_blank"&gt;#74287&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编译与 CI 问题修复，编译 warning 优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73581" target="_blank"&gt;#73581&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73984" target="_blank"&gt;#73984&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74104" target="_blank"&gt;#74104&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74376" target="_blank"&gt;#74376&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74468" target="_blank"&gt;#74468&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;优化调试与打印信息，优化报错信息。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73783" target="_blank"&gt;#73783&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73886" target="_blank"&gt;#73886&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74188" target="_blank"&gt;#74188&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73720" target="_blank"&gt;#73720&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73857" target="_blank"&gt;#73857&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74519" target="_blank"&gt;#74519&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74520" target="_blank"&gt;#74520&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74384" target="_blank"&gt;#74384&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74386" target="_blank"&gt;#74386&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74387" target="_blank"&gt;#74387&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74383" target="_blank"&gt;#74383&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74381" target="_blank"&gt;#74381&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73830" target="_blank"&gt;#73830&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74128" target="_blank"&gt;#74128&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74203" target="_blank"&gt;#74203&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;增加 pybind 层的接口&lt;code&gt;get_event_handle_from_custom_stream&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73918" target="_blank"&gt;#73918&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;执行机制相关。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74015" target="_blank"&gt;#74015&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;2. 并行策略优化&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.1 版本中，对并行策略进行了多项优化，包括新增 VPP 流水线的前向状态标注和空泡 hook 支持，修复了流水线并行的共享参数未同步问题、Sharding 通信的维度冲突导致的训练 hang 问题以及 DualPipe 的 event 管理错误，同时提升了 Sharding 策略下的 FP8 量化支持和 DualPipe 的通信计算 overlap 能力，显著提升了并行训练的稳定性和性能。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;功能新增&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持在 VPP 流水线调度下，标注当前是否为前向状态。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74187" target="_blank"&gt;#74187&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持在 VPP 均衡显存下的空泡 hook。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74100" target="_blank"&gt;#74100&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复流水线并行下，共享参数的无法同步的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74047" target="_blank"&gt;#74047&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74087" target="_blank"&gt;#74087&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73913" target="_blank"&gt;#73913&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 sharding 通信下，ep 维度和 sharding 维度相同时，训练 hang 的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74268" target="_blank"&gt;#74268&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 dual pipeline 调度下，event 管理的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74158" target="_blank"&gt;#74158&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;性能提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 sharding 策略下，支持 fp8 量化参数。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73690" target="_blank"&gt;#73690&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 dual pipeline 调度下，通信计算 overlap。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73690" target="_blank"&gt;#73690&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74527" target="_blank"&gt;#74527&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;3. 通信库&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.1 版本中，我们对通信库进行了功能增强和性能优化，新增了 stream 接口支持，修复了初始化后额外 comm context 导致的显存浪费问题，并通过新增通信库初始化配置开关、为 DeepEP 算子支持 multicast=2 功能以及实现 TMA 优化的 internode 能力，显著提升了通信效率和计算性能。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;功能新增&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加通信库 stream 接口。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74016" target="_blank"&gt;#74016&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;去除初始化后额外的 comm context，节约显存。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73297" target="_blank"&gt;#73297&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;性能提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增通信库初始化配置开关。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73297" target="_blank"&gt;#73297&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;对于 DeepEP 算子，支持 multicast=2 功能。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74144" target="_blank"&gt;#74144&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;DeepEP 支持 TMA 优化的 internode。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74284" target="_blank"&gt;#74284&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;4. 推理部署&lt;/h2&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.1 版本中，推理新增支持 safetensors 加载功能，修复了一些算子问题，对 internode_ll_two_stage 实现了一些功能增强，支持通过环境变量启动 stream_k，支持使用 wint8 算法加载 int8 权重等。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;功能新增&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 MmapStorage 加速 safetensors 格式模型文件加载。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73820" target="_blank"&gt;#73820&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复当输入数据类型大小小于输出数据类型大小时的 view 算子问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73769" target="_blank"&gt;#73769&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 dynamic_loader.cc 文件&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73577" target="_blank"&gt;#73577&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复非截断 top_p_sampling 问题&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73852" target="_blank"&gt;#73852&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 moe_gemm 中的 stream_k 问题&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74351" target="_blank"&gt;#74351&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复使用.json 模型时的 GetInputTypes() 和 GetOutputTypes() 问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74358" target="_blank"&gt;#74358&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修改 Layout 断言&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74415" target="_blank"&gt;#74415&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复编译问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74492" target="_blank"&gt;#74492&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 deep_ep st_release 问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73578" target="_blank"&gt;#73578&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;删除 hidden_size 的冗余缓冲区和循环&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74167" target="_blank"&gt;#74167&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在 internode_ll_two_stage 中实现缓冲区间插&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74276" target="_blank"&gt;#74276&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;使 internode_ll_two_stage 支持异步和 hook 模式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74405" target="_blank"&gt;#74405&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;性能提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持通过环境变量启用 stream_k 功能&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74317" target="_blank"&gt;#74317&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持使用 wint8 算法加载 int8 权重&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73689" target="_blank"&gt;#73689&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加 num_experts 和 num_rdma_ranks 的调度&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74078" target="_blank"&gt;#74078&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;5. 基础执行架构&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;3.1 版本中，我们主要针对 Slice 相关的算子和操作进行了系统化的升级，大幅提升了 Slice 操作的效率。同时针对一些大模型训练中遇到的问题进行了修复。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复大 tensor 相关 api。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73283" target="_blank"&gt;#73283&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74120" target="_blank"&gt;#74120&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73657" target="_blank"&gt;#73657&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73654" target="_blank"&gt;#73654&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73559" target="_blank"&gt;#73559&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复动转静遗留问题。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F71520" target="_blank"&gt;#71520&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复 cuda 多流问题。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74011" target="_blank"&gt;#74011&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他重要修复。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74378" target="_blank"&gt;#74378&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 slice 相关功能。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74038" target="_blank"&gt;#74038&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74147" target="_blank"&gt;#74147&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74344" target="_blank"&gt;#74344&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;6. 自动并行架构&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.1 版本中，我们主要针对自动并行架构的切分推导规则进一步进行了完善，增强了自动并行的切分推导效率，同时修复了之前功能中一些易用性和正确性问题。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;功能改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化&amp;nbsp;&lt;code&gt;reshape&lt;/code&gt;&amp;nbsp;算子的切分推导规则，以支持分布式张量的同一纬度被多个 mesh 维度切分的场景。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74352" target="_blank"&gt;#74352&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持分布式张量的同一维度被多个 mesh 维度切分时的默认切分推导规则。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74396" target="_blank"&gt;#74396&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;新增以下算子的切分推导规则&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;take_along_axis&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F72063" target="_blank"&gt;#72063&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;index_put&lt;/code&gt;,&amp;nbsp;&lt;code&gt;index_put_grad&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73486" target="_blank"&gt;#73486&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;conv3d&lt;/code&gt;,&amp;nbsp;&lt;code&gt;conv3d_grad&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F72882" target="_blank"&gt;#72882&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;depthwise_conv2d&lt;/code&gt;,&amp;nbsp;&lt;code&gt;depthwise_conv2d_grad&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73134" target="_blank"&gt;#73134&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;conv2d_transpose&lt;/code&gt;,&amp;nbsp;&lt;code&gt;conv2d_transpose_grad&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73188" target="_blank"&gt;#73188&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;einsum&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73753" target="_blank"&gt;#73753&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;moe_combine&lt;/code&gt;,&amp;nbsp;&lt;code&gt;moe_combine_grad&lt;/code&gt;,&amp;nbsp;&lt;code&gt;moe_gate_dispatch&lt;/code&gt;,&amp;nbsp;&lt;code&gt;moe_gate_dispatch_grad&lt;/code&gt;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74215" target="_blank"&gt;#74215&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复长文并行策略的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73735" target="_blank"&gt;#73735&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 save/load 在开启流水线并行策略下的 bug。(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73749" target="_blank"&gt;#73749&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;修复分组切片并行的 overlap 优化策略的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73717" target="_blank"&gt;#73717&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 reshape 算子在 inplace 机制下的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73836" target="_blank"&gt;#73836&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 MoE 场景下 all2all 的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73894" target="_blank"&gt;#73894&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复分组切片并行场景下通信融合的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73997" target="_blank"&gt;#73997&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复动态图模式下重计算策略的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74075" target="_blank"&gt;#74075&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复&lt;code&gt;group_norm&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;layer_norm&lt;/code&gt;&amp;nbsp;算子切分推导 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74139" target="_blank"&gt;#74139&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复调用&amp;nbsp;&lt;code&gt;ProcessMesh&lt;/code&gt;&amp;nbsp;的&amp;nbsp;&lt;code&gt;get_group&lt;/code&gt;&amp;nbsp;方法时重复创建通信组的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73099" target="_blank"&gt;#73099&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复流水线并行场景下梯度裁剪的精度 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74409" target="_blank"&gt;#74409&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复流水线并行策略的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73615" target="_blank"&gt;#73615&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复流水线并行场景下不同 stage 间无法传递 stop_grad=True 参数的 bug。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73459" target="_blank"&gt;#73459&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持流水线并行场景下的参数共享及通信优化。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73733" target="_blank"&gt;#73733&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;清理废弃代码,以便于维护代码。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73967" target="_blank"&gt;#73967&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73744" target="_blank"&gt;#73744&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;支持 dataloader 手动并行和自动并行的精度对齐。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73941" target="_blank"&gt;#73941&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;7. 算子机制&lt;/h2&gt; 
&lt;hr&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;在 3.1 版本中，我们重点针对大模型训练中遇到的大 shape tensor、0 size tensor、以及一些关键 kernel 的精度问题进行了系统化修复，为大模型训练的稳定性和正确性提供了更好的保障。&lt;/p&gt; 
&lt;h3 style="text-align:start"&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;MoE（混合专家系统）优化。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73592" target="_blank"&gt;#73592&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73763" target="_blank"&gt;#73763&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;复数运算支持。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73674" target="_blank"&gt;#73674&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;动态图与自动微分增强。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73622" target="_blank"&gt;#73622&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73601" target="_blank"&gt;#73601&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73737" target="_blank"&gt;#73737&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73747" target="_blank"&gt;#73747&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73761" target="_blank"&gt;#73761&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74137" target="_blank"&gt;#74137&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;组合算子优化。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73923" target="_blank"&gt;#73923&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API 兼容性提升。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74449" target="_blank"&gt;#74449&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;增加 pd.rint 算子。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74012" target="_blank"&gt;#74012&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复算子 0-size 相关问题。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73680" target="_blank"&gt;#73680&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73715" target="_blank"&gt;#73715&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73702" target="_blank"&gt;#73702&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73550" target="_blank"&gt;#73550&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73736" target="_blank"&gt;#73736&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F72986" target="_blank"&gt;#72986&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73740" target="_blank"&gt;#73740&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73821" target="_blank"&gt;#73821&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73889" target="_blank"&gt;#73889&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73882" target="_blank"&gt;#73882&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73962" target="_blank"&gt;#73962&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73998" target="_blank"&gt;#73998&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73040" target="_blank"&gt;#73040&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73853" target="_blank"&gt;#73853&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74046" target="_blank"&gt;#74046&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74006" target="_blank"&gt;#74006&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73848" target="_blank"&gt;#73848&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73806" target="_blank"&gt;#73806&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74022" target="_blank"&gt;#74022&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73933" target="_blank"&gt;#73933&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74057" target="_blank"&gt;#74057&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74042" target="_blank"&gt;#74042&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73832" target="_blank"&gt;#73832&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73844" target="_blank"&gt;#73844&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73854" target="_blank"&gt;#73854&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74153" target="_blank"&gt;#74153&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74131" target="_blank"&gt;#74131&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74129" target="_blank"&gt;#74129&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74119" target="_blank"&gt;#74119&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74143" target="_blank"&gt;#74143&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74152" target="_blank"&gt;#74152&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74175" target="_blank"&gt;#74175&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74112" target="_blank"&gt;#74112&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74185" target="_blank"&gt;#74185&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74184" target="_blank"&gt;#74184&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74200" target="_blank"&gt;#74200&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74150" target="_blank"&gt;#74150&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74157" target="_blank"&gt;#74157&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74229" target="_blank"&gt;#74229&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73986" target="_blank"&gt;#73986&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74261" target="_blank"&gt;#74261&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74259" target="_blank"&gt;#74259&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74295" target="_blank"&gt;#74295&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74305" target="_blank"&gt;#74305&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74323" target="_blank"&gt;#74323&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74354" target="_blank"&gt;#74354&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复算子大 tensor 相关问题。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73380" target="_blank"&gt;#73380&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73635" target="_blank"&gt;#73635&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73706" target="_blank"&gt;#73706&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73712" target="_blank"&gt;#73712&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73745" target="_blank"&gt;#73745&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73738" target="_blank"&gt;#73738&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73802" target="_blank"&gt;#73802&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73899" target="_blank"&gt;#73899&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73895" target="_blank"&gt;#73895&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74019" target="_blank"&gt;#74019&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73996" target="_blank"&gt;#73996&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73979" target="_blank"&gt;#73979&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74063" target="_blank"&gt;#74063&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74213" target="_blank"&gt;#74213&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74061" target="_blank"&gt;#74061&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74070" target="_blank"&gt;#74070&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74155" target="_blank"&gt;#74155&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74062" target="_blank"&gt;#74062&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74089" target="_blank"&gt;#74089&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74134" target="_blank"&gt;#74134&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74058" target="_blank"&gt;#74058&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74183" target="_blank"&gt;#74183&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74196" target="_blank"&gt;#74196&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74223" target="_blank"&gt;#74223&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74252" target="_blank"&gt;#74252&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74060" target="_blank"&gt;#74060&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74273" target="_blank"&gt;#74273&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74211" target="_blank"&gt;#74211&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74055" target="_blank"&gt;#74055&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74242" target="_blank"&gt;#74242&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74058" target="_blank"&gt;#74058&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74293" target="_blank"&gt;#74293&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74289" target="_blank"&gt;#74289&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74172" target="_blank"&gt;#74172&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74330" target="_blank"&gt;#74330&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74329" target="_blank"&gt;#74329&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74342" target="_blank"&gt;#74342&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74369" target="_blank"&gt;#74369&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74279" target="_blank"&gt;#74279&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74370" target="_blank"&gt;#74370&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74404" target="_blank"&gt;#74404&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74451" target="_blank"&gt;#74451&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74537" target="_blank"&gt;#74537&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74324" target="_blank"&gt;#74324&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74254" target="_blank"&gt;#74254&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74360" target="_blank"&gt;#74360&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paddle CPU/GPU Kernel 精度问题推全。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73562" target="_blank"&gt;#73562&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73739" target="_blank"&gt;#73739&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74009" target="_blank"&gt;#74009&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74081" target="_blank"&gt;#74081&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74160" target="_blank"&gt;#74160&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74077" target="_blank"&gt;#74077&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74102" target="_blank"&gt;#74102&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74219" target="_blank"&gt;#74219&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74257" target="_blank"&gt;#74257&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74198" target="_blank"&gt;#74198&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74182" target="_blank"&gt;#74182&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他重要修复。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73670" target="_blank"&gt;#73670&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73774" target="_blank"&gt;#73774&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73877" target="_blank"&gt;#73877&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73993" target="_blank"&gt;#73993&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74032" target="_blank"&gt;#74032&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74034" target="_blank"&gt;#74034&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74073" target="_blank"&gt;#74073&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74096" target="_blank"&gt;#74096&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74065" target="_blank"&gt;#74065&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74002" target="_blank"&gt;#74002&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74282" target="_blank"&gt;#74282&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74313" target="_blank"&gt;#74313&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74303" target="_blank"&gt;#74303&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74306" target="_blank"&gt;#74306&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74298" target="_blank"&gt;#74298&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74044" target="_blank"&gt;#74044&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74149" target="_blank"&gt;#74149&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74290" target="_blank"&gt;#74290&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74348" target="_blank"&gt;#74348&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74364" target="_blank"&gt;#74364&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74332" target="_blank"&gt;#74332&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74224" target="_blank"&gt;#74224&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74382" target="_blank"&gt;#74382&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74406" target="_blank"&gt;#74406&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74434" target="_blank"&gt;#74434&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74448" target="_blank"&gt;#74448&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74457" target="_blank"&gt;#74457&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74322" target="_blank"&gt;#74322&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74530" target="_blank"&gt;#74530&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74442" target="_blank"&gt;#74442&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74123" target="_blank"&gt;#74123&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73892" target="_blank"&gt;#73892&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74025" target="_blank"&gt;#74025&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;fp8 运算相关算子性能优化。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73564" target="_blank"&gt;#73564&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73370" target="_blank"&gt;#73370&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73881" target="_blank"&gt;#73881&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73644" target="_blank"&gt;#73644&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73639" target="_blank"&gt;#73639&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73777" target="_blank"&gt;#73777&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74173" target="_blank"&gt;#74173&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74471" target="_blank"&gt;#74471&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;linalg.lu 算子功能支持。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73885" target="_blank"&gt;#73885&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74130" target="_blank"&gt;#74130&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74258" target="_blank"&gt;#74258&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74456" target="_blank"&gt;#74456&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paddle API 兼容性提升。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74480" target="_blank"&gt;#74480&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74523" target="_blank"&gt;#74523&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74490" target="_blank"&gt;#74490&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74548" target="_blank"&gt;#74548&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他重要优化。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73815" target="_blank"&gt;#73815&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74372" target="_blank"&gt;#74372&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;性能优化&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;显存优化。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73803" target="_blank"&gt;#73803&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;算子 CPU 支持。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73872" target="_blank"&gt;#73872&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;8. 框架性能优化&lt;/h2&gt; 
&lt;hr&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;提升 slice 性能。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73247" target="_blank"&gt;#73247&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73628" target="_blank"&gt;#73628&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73834" target="_blank"&gt;#73834&lt;/a&gt;,&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73971" target="_blank"&gt;#73971&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加 slice 相关检查。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74103" target="_blank"&gt;#74103&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;9. 编译器&lt;/h2&gt; 
&lt;h3 style="text-align:start"&gt;功能增强&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持 float8e4m3 数据类型（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74111" target="_blank"&gt;#74111&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;新增支持 rint 算子，优化 arange 算子性能 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74013" target="_blank"&gt;#74013&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74209" target="_blank"&gt;#74209&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;增强表达式化简能力 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74292" target="_blank"&gt;#74292&lt;/a&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3 style="text-align:start"&gt;Bug 修复&lt;/h3&gt; 
&lt;p style="color:#1f2328; text-align:start"&gt;修复各类场景下的一些处理逻辑 Bug。 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73940" target="_blank"&gt;#73940&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74050" target="_blank"&gt;#74050&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73929" target="_blank"&gt;#73929&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74040" target="_blank"&gt;#74040&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74240" target="_blank"&gt;#74240&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74316" target="_blank"&gt;#74316&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74328" target="_blank"&gt;#74328&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74412" target="_blank"&gt;#74412&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74432" target="_blank"&gt;#74432&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74450" target="_blank"&gt;#74450&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74461" target="_blank"&gt;#74461&lt;/a&gt;,&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74462" target="_blank"&gt;#74462&lt;/a&gt;)&lt;/p&gt; 
&lt;h2 style="text-align:start"&gt;10. 硬件适配&lt;/h2&gt; 
&lt;hr&gt; 
&lt;h3 style="text-align:start"&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;XPU 上 concat_grad OP 增加 zero dim 支持&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73808" target="_blank"&gt;#73808&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;XPU 上 weight_only_linear 支持 fp16 weight_scale&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73963" target="_blank"&gt;#73963&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;XPU 上 python memory api 升级&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73189" target="_blank"&gt;#73189&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;XPU 上 python streams api 升级&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73924" target="_blank"&gt;#73924&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 XPU 上 FFT 算子&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73785" target="_blank"&gt;#73785&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复 XPU strided_copy data_size param&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74225" target="_blank"&gt;#74225&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3 style="text-align:start"&gt;其他&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;升级 XHPC 版本到 20250722。&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F74277" target="_blank"&gt;#74277&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="text-align:start"&gt;11. 安装环境&lt;/h2&gt; 
&lt;hr&gt; 
&lt;h3 style="text-align:start"&gt;问题修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 macOS-x64 在使用-DONNXRUNTIME=ON 时编译失败的问题。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73631" target="_blank"&gt;#73631&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新昆仑镜像。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Fpull%2F73669" target="_blank"&gt;#73669&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddle%2Freleases%2Ftag%2Fv3.1.1" target="_blank"&gt;https://github.com/PaddlePaddle/Paddle/releases/tag/v3.1.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367653/paddlepaddle-3-1-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367653/paddlepaddle-3-1-1-released</guid>
      <pubDate>Mon, 18 Aug 2025 08:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Mindolph V1.11 发布，生成式 AI 流式输出和摘要功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h4&gt;Mindolph 是一个支持多种桌面平台的开源个人知识库管理软件&lt;/h4&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph" target="_blank"&gt;https://github.com/mindolph/Mindolph&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;img alt="" height="769" src="https://oscimg.oschina.net/oscnet/up-8fb153f2f210d25c10abd5338ad402e93ca.jpg" width="1024" referrerpolicy="no-referrer"&gt;&lt;/h4&gt; 
&lt;p&gt;V1.11 版本主要改进了生成式 AI 功能的使用体验，包括实现 AI 的流式输出，提供了 AI 摘要功能等，并且优化了 UI 。&lt;/p&gt; 
&lt;h3&gt;新功能&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;生成式 AI&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;支持流式输出文本内容（支持 Markdown，PlantUML，文本文件）&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e95b69858b99b084605ee031f9b62c448ce.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新的摘要功能，对选中的文本进行摘要（支持思维导图，Markdown，PlantUML, 文本文件）&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2145c2506086c0b713e413b5807a3f6e401.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;增加对 DeepSeek API 的支持。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;允许用户设置输出语言，并提供选项使生成内容的语言与用户输入的文本语言一致。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;重新设计弹出面板，让用户在开始生成之前选择模型和输出语言。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;添加新选项 UI font size 和 UI icon size 用以设置全局界面字体大小和图标大小，图标大小分三个级别： 小 (16)，中 (20)，大 (24)，这两个设置需要重启应用才能生效。&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a24ab2d58e3843c22810b91770668bc900c.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;PlantUML 编辑器新增对 Regex 和 EBNF 的支持。&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img alt="" height="491" src="https://oscimg.oschina.net/oscnet/up-b019f5a6565fd5ec41abb0efbfbaf0340a1.jpg" width="607" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ec550740152ff1491154bac732bb0e8d929.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;改进&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;生成式 AI&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;优化用户在 AI 输出过程中主动停止的情形的处理。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;为了避免出现不可预料的情况，在 AI 生成过程中临时性禁用编辑器。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;记住最新的用户输入提示，用于初始化 AI 输入面板的提示词。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;允许用户自定义多个模型。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;为 AI 模型（预知或自定义）增加最大输出 token 的参数，最大限度利用模型的能力。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;更新 Qwen，OpenAI 和 Google Gemini 模型。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;添加为打开的文件创建新集合的通知，并且在保存集合而发出的消息通知里增加文件数。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对于应用代码片段，如果您选中了文本且选择的代码片段需要的话，则会自动包裹所选文本。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;优化思维导图编辑器中主题树对话框的退出和搜索栏的退出。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他 UI 上的微小改进。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复了从 XMind 或 Novamind 文件导入时潜在的文件句柄泄漏 (&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Fissues%2F13" target="_blank"&gt;https://github.com/mindolph/Mindolph/issues/13&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Markdown 工具栏限制了编辑器分割栏的位置调节。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;当用鼠标拖动缩小左侧边栏宽度时，Snippet 视图的滚动条会被遮挡。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;选定的默认集合未在应用程序启动时恢复选择状态。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;过滤片段应该不区分大小写。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PlantUML 模板的小问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PlantUML 的 group 代码片段在活动图中无效。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;依赖升级&lt;/h3&gt; 
&lt;p&gt;升级 PlantUML, commons-csv 等其他依赖至最新版本。&lt;/p&gt; 
&lt;h3&gt;下载链接&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;系统&lt;/th&gt; 
   &lt;th&gt;类型&lt;/th&gt; 
   &lt;th&gt;稳定版&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;.dmg&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Freleases%2Fdownload%2Fv1.11.9%2FMindolph-1.11.9-x64.dmg" target="_blank"&gt;v1.11.9&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;.dmg&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Freleases%2Fdownload%2Fv1.11.9%2FMindolph-1.11.9-aarch64.dmg" target="_blank"&gt;v1.11.9&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;.msi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Freleases%2Fdownload%2Fv1.11.9%2FMindolph-1.11.9.msi" target="_blank"&gt;v1.11.9&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Debian&lt;/td&gt; 
   &lt;td&gt;.deb&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Freleases%2Fdownload%2Fv1.11.9%2FMindolph-1.11.9.deb" target="_blank"&gt;v1.11.9&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Fedora&lt;/td&gt; 
   &lt;td&gt;.rpm&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Freleases%2Fdownload%2Fv1.11.9%2FMindolph-1.11.9.rpm" target="_blank"&gt;v1.11.9&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java Executable&lt;/td&gt; 
   &lt;td&gt;.jar&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmindolph%2FMindolph%2Freleases%2Fdownload%2Fv1.11.9%2FMindolph-1.11.9.jar" target="_blank"&gt;v1.11.9&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367650/mindolph-1-11-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367650/mindolph-1-11-released</guid>
      <pubDate>Mon, 18 Aug 2025 08:09:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>开放签电子签章参考文档第二版上线啦</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0.0001pt; margin-right:0px"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;这份文档里都有啥？&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="266" src="https://oscimg.oschina.net/oscnet/up-a8c64276581ae5fa2ce788c7b27223524d4.png" width="830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们的文档写得很详细，不管你是新手还是老手，都能在这里找到需要的内容：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;文档地址：docs.kaifangqian.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;产品介绍&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;告诉你开放签是干啥的，有什么好处。简单来说就是：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;安全可靠：合同签署过程符合法律要求&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开源免费：代码公开透明，谁都能下载使用&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，使用 ca 证书签署需付费。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;灵活部署：可以放在自己服务器上，也可以用云端服务&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;怎么用&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;从注册账号到签署合同，一步步教你怎么操作，就像使用微信一样简单。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;技术对接&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你是程序员，想把电子签功能加到自己的网站或 APP 里，这里有详细的接口说明和示例代码。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;自己搭建服务&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;想把开放签部署到自己的服务器？文档里有详细的安装教程，包括用 Docker 容器部署和&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;原生&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;安装两种方式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;安全和法律问题&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;详细介绍我们的安全措施，比如数据加密、身份验证等，还有如何确保电子合同具有法律效力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;这些内容适合谁看？&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="458" src="https://oscimg.oschina.net/oscnet/up-05a7328532f65613bba7f663d682ff19ad6.png" width="830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;企业老板和管理者&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你的企业需要经常签合同，这份文档能帮你了解如何用更低的成本、更安全的方式管理员工合同、客户协议等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;普通员工&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你需要在工作中使用电子签功能，文档里有详细的操作指南，一看就会。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;程序员和 IT 人员&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;想要在自己的系统里集成电子签功能，或者需要自己搭建电子签服务，技术文档一应俱全。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;对开源感兴趣的朋友&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你喜欢研究开源项目，或者想学习电子签技术，我们的代码完全公开，文档也很详细。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;能帮你解决什么问题？&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;安心&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我们严格按照国家法律法规设计，确保每份电子合同都具有法律效力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;自主&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可以部署在自己的服务器上，数据完全由自己掌控，不用担心服务商跑路或者限制使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;灵活&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不管你是个人用户、小企业还是大公司，都能找到适合自己的使用方式。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;写在最后&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开放签的目标很简单：让电子签变得更简单、更透明、更安全。我们相信，技术应该是开放的，服务应该是普惠的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这份文档就是我们实现这个目标的第一步。无论你是完全不懂技术的小白，还是经验丰富的开发者，都能在这里找到有价值的内容。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367614</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367614</guid>
      <pubDate>Mon, 18 Aug 2025 06:35:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>LibreOffice 25.8 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;LibreOffice 25.8 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.documentfoundation.org%2Fblog%2F2025%2F08%2F20%2Flibreoffice-25-8%2F" target="_blank"&gt;发布&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="280" src="https://oscimg.oschina.net/oscnet/up-375708152ce90ef115c5a76b708a33d467e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;一些更新亮点如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;用户界面&lt;/strong&gt;：Welcome/What’s New 对话框现在提供对用户界面选择器和外观选项的访问，允许新用户利用 LibreOffice 灵活的 UI 并根据他们的喜好个性化外观。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;性能&lt;/strong&gt;：从启动到滚动浏览大型文档，一切操作均更快完成 - 尤其在性能较弱的设备上，速度提升显著。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在基准测试中，Writer 和 Calc 打开文件的速度提高了 30%。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;优化的内存管理使 virtual desktops 和 thin clients 的运行更加流畅。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;与 Microsoft Office 文件的互操作性更好&lt;/strong&gt;，可以更准确地处理 DOCX、XLSX 和 PPTX 文件，并且格式问题更少，这得益于以下变化：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;对单词连字符和空格的全面优化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Impress 中的字体管理与 PowerPoint 文件兼容&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Calc 中添加了新 functions：CHOOSECOLS、CHOOSEROWS、DROP、EXPAND、HSTACK、TAKE、TEXTAFTER、TEXTBEFORE、TEXTSPLIT、TOCOL、TOROW、VSTACK、WRAPCOLS 和 WRAPROWS。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;其他重要的新功能包括支持导出为 PDF 2.0 格式，以及一些新的 ScriptForge 库服务。完整列表可在此处查看：&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#555555"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.documentfoundation.org%2FReleaseNotes%2F25.8" target="_blank"&gt;wiki.documentfoundation.org/ReleaseNotes/25.8&lt;/a&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;在操作系统支持变化方面，LibreOffice 25.8 将不再在 Windows 7、8/8.1 或 x86（32 位）版本上运行。它也是最后一个在 macOS 10.15 上运行的版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;LibreOffice 25.8 将获得总共 7 个维护更新的支持，有效期至 2026 年 6 月 12 日。首个维护版本 LibreOffice 25.8.1 计划于 9 月初或中旬发布，其中包含更多错误修复。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367613/libreoffice-25-8-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367613/libreoffice-25-8-released</guid>
      <pubDate>Mon, 18 Aug 2025 06:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 Solon AI &amp; MCP v3.5.0 发布（智能体应用开发框架）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;Solon AI &amp;amp; MCP&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon AI &amp;amp; MCP ，是 Solon 官方推出的 Java 智能体应用开发框架。旨在为 Java 开发者提供统一的接口抽象层，简化与 OpenAI、DeepSeek、QWen 等主流 AI 模型的集成流程，以及简化 Mcp 的开发体验。特点：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;同时支持 Java 8 到 Java 24&lt;/li&gt; 
 &lt;li&gt;一套接口支持不同提供者、不同大模型调用（通过方言适配）&lt;/li&gt; 
 &lt;li&gt;支持图片生成模型（ImageModel）&lt;/li&gt; 
 &lt;li&gt;支持聊天生成模型（ChatModel） 
  &lt;ul&gt; 
   &lt;li&gt;支持 Prompt 和 PromptTemplate&lt;/li&gt; 
   &lt;li&gt;支持会话记忆（ChatSession）&lt;/li&gt; 
   &lt;li&gt;支持 Function Call（或 Tool Call）&lt;/li&gt; 
   &lt;li&gt;支持同步接口（call）与流式接口（stream）&lt;/li&gt; 
   &lt;li&gt;多态模型等&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;支持 RAG 
  &lt;ul&gt; 
   &lt;li&gt;文档加载、分割（excel, html, markdown, pdf, ppt, word...）&lt;/li&gt; 
   &lt;li&gt;矢量知识库（chroma、dashvector、elasticsearch、milvus、opensearch、qdrant、redis、tcvectordb...）&lt;/li&gt; 
   &lt;li&gt;嵌入模型（EmbeddingModel） 、排序模型（RankingModel）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;支持 MCP（McpServer、McpClient、McpProxy），支持 MCP_2025-03-26 版本协议&lt;/li&gt; 
 &lt;li&gt;支持 AI-Flow&lt;/li&gt; 
 &lt;li&gt;支持 Spring、jFinal、Vert.x 等 Solon 以外的框架&lt;/li&gt; 
 &lt;li&gt;等......更多内容，参考官网介绍&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;最近更新了什么？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 solon-ai-mcp mcp-java-sdk v0.11.0 适配（支持 MCP_2025-03-26 版本协议）&lt;/li&gt; 
 &lt;li&gt;调整 solon-ai-mcp channel 取消默认值（之前为 sse），且为必填（利于协议升级过度，有明确的开发时、启动时提醒） 
  &lt;ul&gt; 
   &lt;li&gt;如果默认值仍为 sse ，升级后可能忘了修改了升级&lt;/li&gt; 
   &lt;li&gt;如果默认值改为 streamable，升级后会造成不兼容&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;技术预览&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;构建聊天模型（统一方式，支持不同的模型构建）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#986801"&gt;ChatModel&lt;/span&gt; &lt;span style="color:#986801"&gt;chatModel&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; ChatModel.of(apiUrl).provider(provider).model(model);

&lt;em&gt;//同步请求&lt;/em&gt;
chatModel.prompt(&lt;span style="color:#50a14f"&gt;"hello"&lt;/span&gt;).call();

&lt;em&gt;//流式请求&lt;/em&gt;
chatModel.prompt(&lt;span style="color:#50a14f"&gt;"hello"&lt;/span&gt;).stream();
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;//MCP 服务端&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;@McpServerEndpoint(channel = McpChannel.STREAMABLE, mcpEndpoint = "/mcp")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;McpServerTool&lt;/span&gt; {
    &lt;em&gt;//工具&lt;/em&gt;
    &lt;span style="color:#4078f2"&gt;@ToolMapping(description = "查询天气预报")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;getWeather&lt;/span&gt;&lt;span&gt;(&lt;span style="color:#4078f2"&gt;@Param(description = "城市位置")&lt;/span&gt; String location)&lt;/span&gt; {
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"晴，14 度"&lt;/span&gt;;
    }
    
    &lt;em&gt;//资源&lt;/em&gt;
    &lt;span style="color:#4078f2"&gt;@ResourceMapping(uri = "config://app-version", description = "获取应用版本号", mimeType = "text/config")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;getAppVersion&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"v3.2.0"&lt;/span&gt;;
    }
    
    &lt;em&gt;//提示语&lt;/em&gt;
    &lt;span style="color:#4078f2"&gt;@PromptMapping(description = "生成关于某个主题的提问")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; Collection&amp;lt;ChatMessage&amp;gt; &lt;span style="color:#4078f2"&gt;askQuestion&lt;/span&gt;&lt;span&gt;(&lt;span style="color:#4078f2"&gt;@Param(description = "主题")&lt;/span&gt; String topic)&lt;/span&gt; {
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; Arrays.asList(
                ChatMessage.ofUser(&lt;span style="color:#50a14f"&gt;"请解释一下'"&lt;/span&gt; + topic + &lt;span style="color:#50a14f"&gt;"'的概念？"&lt;/span&gt;)
        );
    }
}


&lt;em&gt;//MCP 客户端&lt;/em&gt;
&lt;span style="color:#986801"&gt;McpClientProvider&lt;/span&gt; &lt;span style="color:#986801"&gt;clientProvider&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; McpClientProvider.builder()
                .channel(McpChannel.STREAMABLE)
                .apiUrl(&lt;span style="color:#50a14f"&gt;"http://localhost:8080/mcp"&lt;/span&gt;)
                .build();

&lt;em&gt;//客户端与聊天模型集成&lt;/em&gt;

&lt;em&gt;//::构建时集成（全局）&lt;/em&gt;
&lt;span style="color:#986801"&gt;ChatModel&lt;/span&gt; &lt;span style="color:#986801"&gt;chatModel&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; ChatModel.of(apiUrl).provider(provider) .model(model)
                .defaultToolsAdd(clientProvider); 
                
&lt;em&gt;//::聊天时集成（单次）&lt;/em&gt;
chatModel.prompt(&lt;span style="color:#50a14f"&gt;"hello"&lt;/span&gt;).options(o -&amp;gt; o.toolsAdd(clientProvider)).call();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;项目仓库地址？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;gitee：&lt;a href="https://gitee.com/opensolon/solon-ai"&gt;https://gitee.com/opensolon/solon-ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gitcode:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fopensolon%2Fsolon-ai" target="_blank"&gt;https://gitcode.com/opensolon/solon-ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopensolon%2Fsolon-ai" target="_blank"&gt;https://github.com/opensolon/solon-ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;官网？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2Flearn-solon-ai" target="_blank"&gt;https://solon.noear.org/article/learn-solon-ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367610/solon-ai-3-5-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367610/solon-ai-3-5-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 06:28:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Simple Admin v1.7.0 发布，分布式后台管理系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Simple Admin v1.7.0 已经发布，分布式后台管理系统。&lt;/p&gt; 
&lt;h1&gt;Simple Admin Core/Common v1.7.0 更新&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新：go zero 版本升级至 v1.9.0&lt;/li&gt; 
 &lt;li&gt;优化: 重新生成所有模块的 ent 文件，适配 v0.14.5 版本&lt;/li&gt; 
 &lt;li&gt;修复: 修复间接依赖导致的编译问题&lt;/li&gt; 
 &lt;li&gt;更新：更新依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Goctls v1.12.0 更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化: 优化 sse 生成支持&lt;/li&gt; 
 &lt;li&gt;优化：优化依赖更新策略&lt;/li&gt; 
 &lt;li&gt;适配: go zero v1.9.0 相关函数更新&lt;/li&gt; 
 &lt;li&gt;更新: 更新依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Simple Admin Backend UI Vben5 v1.7.0 更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新：同步 Vben 代码版本至最新&lt;/li&gt; 
 &lt;li&gt;优化：优化 tree 构建相关依赖，增强 ts 支持&lt;/li&gt; 
 &lt;li&gt;修复：修复多个已知问题&lt;/li&gt; 
 &lt;li&gt;更新：更新依赖&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/hopefire/simple-admin-core/releases/v1.7.0"&gt;https://gitee.com/hopefire/simple-admin-core/releases/v1.7.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367586</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367586</guid>
      <pubDate>Mon, 18 Aug 2025 03:58:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Spring Batch 6.0.0-M2 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Spring Batch 6.0.0-M2 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2025%2F08%2F20%2Fspring-batch-6" target="_blank"&gt;发布&lt;/a&gt;，&lt;span style="color:#000000"&gt;提供了以下功能和改进：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;依赖项升级&lt;/li&gt; 
 &lt;li&gt;chunk-oriented 处理模型的新实现&lt;/li&gt; 
 &lt;li&gt;能够恢复突然失败的作业执行&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;有关完整的更改列表，可查看&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-batch%2Freleases%2Ftag%2Fv6.0.0-M2" target="_blank"&gt;发行说明&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;Dependencies upgrade&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;在此里程碑版本中，Spring 依赖项升级到以下版本：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Spring Framework: 7.0.0-M8&lt;/li&gt; 
 &lt;li&gt;Spring Integration: 7.0.0-M2&lt;/li&gt; 
 &lt;li&gt;Spring AMQP: 4.0.0-M4&lt;/li&gt; 
 &lt;li&gt;Spring Kafka: 4.0.0-M4&lt;/li&gt; 
 &lt;li&gt;Spring Data: 4.0.0-M5&lt;/li&gt; 
 &lt;li&gt;Spring Ldap: 4.0.0-M2&lt;/li&gt; 
 &lt;li&gt;Micrometer: 1.16.0-M2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;注意，此版本与 Java 17+ 兼容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;chunk-oriented&amp;nbsp;&lt;span style="color:#000000"&gt;处理模型的新实现&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;这并非新功能，而是对 chunk-oriented&amp;nbsp;处理模型的全新增强实现。此新实现最初在 5.1 版本中作为实验性新增功能引入，现已在 6.0 版本中作为稳定版本提供。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;code&gt;ChunkOrientedStep&lt;/code&gt;类中提供了新的实现，它是&lt;code&gt;ChunkOrientedTasklet&lt;/code&gt;/&lt;code&gt;TaskletStep&lt;/code&gt;类的替代品。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;下面是如何使用其构建器定义&lt;code&gt;ChunkOrientedStep&lt;/code&gt;的示例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#4a4a4a"&gt;&lt;code class="language-java"&gt;&lt;span style="color:#969896"&gt;@Bean&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;public&lt;/span&gt; Step &lt;span style="color:#6f42c1"&gt;chunkOrientedStep&lt;/span&gt;(JobRepository jobRepository, JdbcTransactionManager transactionManager,
    ItemReader&amp;lt;Person&amp;gt; itemReader, ItemProcessor&amp;lt;Person, Person&amp;gt; itemProcessor, ItemWriter&amp;lt;Person&amp;gt; itemWriter) {
    
    &lt;span style="color:#d73a49"&gt;int&lt;/span&gt; chunkSize = &lt;span style="color:#005cc5"&gt;100&lt;/span&gt;;
    &lt;span style="color:#d73a49"&gt;return&lt;/span&gt; &lt;span style="color:#d73a49"&gt;new&lt;/span&gt; ChunkOrientedStepBuilder&amp;lt;Person, Person&amp;gt;(jobRepository, transactionManager, chunkSize)
        .reader(itemReader)
        .processor(itemProcessor)
        .writer(itemWriter)
        .build();
}
&lt;/code&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此外，&lt;/span&gt;&lt;span style="color:#000000"&gt;fault-tolerance&amp;nbsp;功能进行了如下调整：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;重试功能现在基于&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring%2Freference%2F7.0%2Fcore%2Fresilience.html" target="_blank"&gt;Spring Framework 7&lt;/a&gt;&amp;nbsp;中引入的重试功能，而不是以前的 Spring Retry 库&lt;/li&gt; 
 &lt;li&gt;跳过功能已根据新实现略作调整，现在完全基于&lt;code&gt;SkipPolicy&lt;/code&gt;interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;以下是使用&lt;code&gt;ChunkOrientedStep&lt;/code&gt;实现新功能的重试和跳过功能的简单示例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#4a4a4a"&gt;&lt;code class="language-java"&gt;&lt;span style="color:#969896"&gt;@Bean&lt;/span&gt;
&lt;span style="color:#d73a49"&gt;public&lt;/span&gt; Step &lt;span style="color:#6f42c1"&gt;faulTolerantChunkOrientedStep&lt;/span&gt;(JobRepository jobRepository, JdbcTransactionManager transactionManager,
    ItemReader&amp;lt;Person&amp;gt; itemReader, ItemProcessor&amp;lt;Person, Person&amp;gt; itemProcessor, ItemWriter&amp;lt;Person&amp;gt; itemWriter) {

    &lt;span style="color:#969896"&gt;// retry policy configuration&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;int&lt;/span&gt; maxAttempts = &lt;span style="color:#005cc5"&gt;10&lt;/span&gt;;
    &lt;span style="color:#d73a49"&gt;var&lt;/span&gt; retrybaleExceptions = Set.of(TransientException.&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;);
    RetryPolicy retryPolicy = RetryPolicy.builder()
        .maxAttempts(maxAttempts)
        .includes(retrybaleExceptions)
        .build();

    &lt;span style="color:#969896"&gt;// skip policy configuration&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;int&lt;/span&gt; skipLimit = &lt;span style="color:#005cc5"&gt;50&lt;/span&gt;;
    &lt;span style="color:#d73a49"&gt;var&lt;/span&gt; skippableExceptions = Set.of(FlatFileParseException.&lt;span style="color:#d73a49"&gt;class&lt;/span&gt;);
    SkipPolicy skipPolicy = &lt;span style="color:#d73a49"&gt;new&lt;/span&gt; LimitCheckingItemSkipPolicy(skipLimit, skippableExceptions);

    &lt;span style="color:#969896"&gt;// step configuration&lt;/span&gt;
    &lt;span style="color:#d73a49"&gt;int&lt;/span&gt; chunkSize = &lt;span style="color:#005cc5"&gt;100&lt;/span&gt;;
    &lt;span style="color:#d73a49"&gt;return&lt;/span&gt; &lt;span style="color:#d73a49"&gt;new&lt;/span&gt; ChunkOrientedStepBuilder&amp;lt;Person, Person&amp;gt;(jobRepository, transactionManager, chunkSize)
        .reader(itemReader)
        .processor(itemProcessor)
        .writer(itemWriter)
        .faultTolerant()
        .retryPolicy(retryPolicy)
        .skipPolicy(skipPolicy)
        .build();
}
&lt;/code&gt;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;有关如何从以前的实现迁移到新的实现的更多详细信息，可参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-batch%2Fwiki%2FSpring-Batch-6.0-Migration-Guide" target="_blank"&gt;迁移指南。&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;恢复失败的作业执行的能力&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;在 v6 之前，如果作业执行突然失败，除非手动更新数据库，否则无法恢复。这很容易出错，并且在不同的作业存储库之间不一致（因为对于 JDBC 数据库，它需要一些 SQL 语句，而对于 NoSQL 存储，则需要一些自定义语句）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;此里程碑版本引入了&lt;code&gt;JobOperator&lt;/code&gt;interface 中的一个新方法&lt;code&gt;recover&lt;/code&gt;，允许用户在所有作业存储库中一致地恢复失败的作业执行。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367583/spring-batch-6-0-0-m2</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367583/spring-batch-6-0-0-m2</guid>
      <pubDate>Mon, 18 Aug 2025 03:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>InfiniEdge AI 2.0 发布：将 AI 扩展至边缘</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;LF Edge InfiniEdge AI 项目提供了一个模块化平台，可在云端、边缘端和设备上运行 AI 智能体。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgtZ5gZxBrO4EWG06seVX1g" target="_blank"&gt;2.0 版本&lt;/a&gt;标志着向完全无服务器、注重隐私的 AI 边缘生态系统迈出了重要一步。本文结合各工作流更新和技术文档，总结了新版本的重点内容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;2.0 版本引入了用于边缘推理的无服务器模型上下文协议（MCP），新增了智能体数据工具，优化了 AI 智能体的流式传输功能，完成了 EdgeLake 平台上的联邦学习全生命周期，并修复了整个技术栈中的多个漏洞。版本计划中的代码实验室涵盖 YoMo 2.0、边缘数据智能体（Edge Data Agent）、SPEAR、基于 EdgeLake 的联邦学习、物理 AI / 机器人技术、AIOps 以及 2.0 环境的实操编码等主题。&lt;/span&gt;&lt;/p&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作流 1：YoMo 2.0—— 无服务器多组件处理&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;YoMo 是 InfiniEdge 用于无服务器 AI 推理的低延迟运行时，采用 QUIC 传输协议实现更快通信，并通过 TLS 1.3 对传输中的数据进行加密。2.0 版本新增无服务器模型上下文协议（MCP），使开发者能够通过强类型函数调用接口编排分布式 AI 工作负载。YoMo 的 TriggerServerless API 可自动生成部署的无服务器组件：开发者将函数推送到版本控制仓库后，YoMo 会在地理分布式架构中自动完成构建、打包和部署。这种架构能让推理在靠近用户的位置运行（减少延迟和带宽消耗），并通过仅扩展所需微服务提高能源效率。&lt;/span&gt;&lt;/p&gt; 
&lt;h3 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;亮点&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;强类型函数：YoMo 运行时支持 TypeScript 和 Go 语言，开发者可在编译时确保输入和输出匹配，减少运行时错误。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;加密低延迟传输：QUIC 和 TLS 1.3 确保跨设备通信的安全性和快速性。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;无缝 DevOps：借助无服务器 MCP，YoMo 消除了手动部署步骤，代码推送后函数会自动构建部署。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;地理分布式架构：YoMo 基础设施将 AI 函数部署在靠近边缘的位置，提升性能和可靠性。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作流 2：边缘数据智能体（EDA）—— 隐私保护分析&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;边缘数据智能体（EDA）是一种隐私保护分析框架，利用大型语言模型（LLMs）实时生成代码。用户可查询本地数据的洞察，智能体会自动生成必要的数据处理代码，无需将原始数据上传至云端。这种方式让组织能从敏感数据中获取价值，同时保持对数据位置的控制。2.0 版本扩展了沙箱数据集并引入多步骤智能体工作流，使智能体可串联多个操作完成更复杂的分析。&lt;/span&gt;&lt;/p&gt; 
&lt;h3 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;核心功能&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;自动代码生成：LLMs 根据用户请求创建数据处理脚本，无需编码知识。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;本地隐私保护：数据保留在本地基础设施中，仅执行生成的代码，确保机密性。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;多步骤工作流提案：2.0 版本原型化多步骤流水线，支持智能体执行顺序操作并提供更丰富的洞察。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作流 3：SPEAR——AI 智能体的统一运行时&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;SPEAR 项目提供统一运行时，用于在云端和边缘端部署和扩展 AI 智能体。其设计通过自动扩展和精心设计的 API 实现高可扩展性和高性能。SPEAR 的工作流包括离线阶段（开发者选择最佳智能体实例并自动生成代码）和在线阶段（处理云 - 边缘 - 终端卸载及面向智能体的自动扩展）。2.0 版本修复了漏洞，并新增对 WebSocket 和流式传输通信的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;h3 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;2.0 版本改进&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;漏洞修复：团队解决了影响运行时稳定性的问题。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;WebSocket 与流式传输：新增流式传输支持，实现从传感器到智能体的持续数据流，对实时推理至关重要。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;多运行时支持：目前支持 「进程」 和 「Docker」 运行时，计划后续支持 WebAssembly 和 Kubernetes。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;运行模式：可在本地或集群模式下运行；集群模式中调度器自动分配任务以优化资源使用。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作流 4：EdgeLake—— 完善联邦学习生命周期&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;InfiniEdge 的联邦学习技术栈 EdgeLake 支持在多个边缘节点上训练和评估 AI 模型，无需集中数据。2.0 版本中，团队完成了从训练到部署的完整联邦学习生命周期。该工作流的文档包括架构图、安装指南和发布说明，展示如何在本地设备上训练模型并在云端聚合。&lt;/span&gt;&lt;/p&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作流 5：边缘网关（Shifu）—— 跨平台自修复网关&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;边缘网关（代号 Shifu）充当物联网设备与 InfiniEdge AI 平台之间的桥梁，设计强调部署便捷性、即插即用的设备集成、轻量运行和高可用性。运维人员可通过单条命令部署网关，添加新物联网设备无需修改源代码。2.0 版本重点修复漏洞并更新依赖项。&lt;/span&gt;&lt;/p&gt; 
&lt;h3 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;亮点&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;协议无关设计：Shifu 可通过任何协议连接设备 / 机器人 / 机械，并将其功能转化为 API。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;原生支持 Kubernetes：Shifu 定义 Kubernetes 自定义资源（CRD），直接在 Kubernetes 集群中管理物联网设备及所有应用。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;跨平台轻量特性：可在多种架构（x86、ARM）上运行，资源消耗极低。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作流 6：AI 智能体与机器人技术&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;InfiniEdge 生态系统还整合了 AI 智能体和机器人技术能力，是构建 AI 聊天智能体的平台。2.0 版本中，该工作流确认新增功能和贡献，包括发布文档中提及的 「神经多样性助手」 智能体。尽管机器人工作流在 2.0 版本中未新增功能，但项目仍维护 Akraino 蓝图和边缘 - 机器人集成的相关文档。未来版本计划扩展物理 AI 和机器人技术能力。&lt;/span&gt;&lt;/p&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;工作组：AIOps 与未来方向&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;2.0 版本还重点关注 AIOps—— 应用 AI 管理边缘基础设施、工作负载及分布式环境。凭借无服务器 MCP、多步骤智能体工作流、联邦学习和增强的流式传输支持，InfiniEdge AI 2.0 版本彰显了项目成为分布式边缘 AI 标准平台的愿景。团队计划持续改进跨运行时支持（如 WebAssembly 和 Kubernetes）、扩展机器人集成并优化 AIOps 工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;未来迭代还将探索 「驻留证明」 和 「地理围栏证明」，以及 「可信主机身份」，实现位置可验证的 AI 部署和基于策略的工作负载放置。这些能力将在受监管环境中支持合规对齐的编排，并为物理边缘智能增加新的保障层。除部署外，它们还将增强数据收集和遥测工作流的可信度，确保推理和传感器数据由经过验证的设备在已认证区域内捕获 —— 这是迈向 「主权感知 AI」 的关键一步。应用场景包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;HIPAA 区域：确保数据摄入和推理均在认证医疗区域内进行。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;出口管制制度：将模型执行和数据捕获限制在授权辖区内。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="list-style-type:disc"&gt;&lt;span&gt;ESG 和可持续发展披露：通过验证地理绑定的决策流水线和遥测收集，支持碳定位和能源核算。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;这些机制共同提升了 InfiniEdge AI 的信任架构 —— 从模型部署延伸至边缘智能的全生命周期，从数据摄入到智能体行动。&lt;/span&gt;&lt;/p&gt; 
&lt;h2 style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;span&gt;结束语&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;InfiniEdge AI 2.0 版本是一个里程碑，融合了低延迟边缘计算、隐私保护分析、统一 AI 智能体运行时和强大的边缘网关。通过完善联邦学习生命周期和引入多组件处理，该版本使项目能够满足边缘 AI 应用不断增长的需求。开发者和企业如今可在异构环境中构建和部署复杂 AI 智能体，无需担忧数据隐私或部署复杂性。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367566</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367566</guid>
      <pubDate>Mon, 18 Aug 2025 03:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>国产数据库管理工具 CloudDM 2.7.1.0 发布，TiDB 等支持复杂 SQL 脱敏数据</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#030303"&gt;CloudDM 是 ClouGence 公司推出的面向团队使用的数据库管理工具，支持云上、云下、多云等多种环境，并且提供多达&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;23&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#030303"&gt;&amp;nbsp;种数据源的支持。CloudDM 还支持数据库&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fdevops%2Fdevops_about" target="_blank"&gt;DevOps CI/CD&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#030303"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fdevops%2Fdevops_about" target="_blank"&gt;&amp;nbsp;&lt;/a&gt;功能，将用户产品发布流程中数据库发布和程序发布无缝串联起来。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;更新亮点&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;MariaDB、PolarDB-X、OceanBase for MySQL、AnalyticDB for MySQL、TiDB 数据脱敏可使用复杂 SQL。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1728" src="https://oscimg.oschina.net/oscnet/up-478d4cf0a2dfbd3f2ca2d6040cf4557b537.png" width="2844" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;新增&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增 CI/CD 列表操作栏中增加，测试，按钮，可以测试当前配置是否有效。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增 IM 消息服务提供者列表操作栏中增加，测试，按钮，可以测试当前配置是否有效。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MySQL、MariaDB、PolarDB-X、OceanBase for MySQL、AnalyticDB for MySQL、TiDB 解析器使用 ANTLR 实现，具备更强的可控性。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MariaDB、PolarDB-X、OceanBase for MySQL、AnalyticDB for MySQL、TiDB 开启脱敏后允许使用复杂 SQL。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MariaDB、PolarDB-X、OceanBase for MySQL、AnalyticDB for MySQL、TiDB 支持可执行注释。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 CI/CD 和 IM 消息服务在已经被使用的情况下，允许通过编辑配置修改名称/配置信息。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，导出的 Excel 每个单元格最大写入 1048576 个字符，如遇到超长数据采用批注方式提示用户有截断。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，查询结果中如果遇到类型不支持将会提示 Unsupported，并且在导出的 Excel 中会以批注形式提示。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，子账号查询数据结果集中，导出脱敏数据后，将会以批注形式提示数据被脱敏。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，子账户有 MySQL 某个 schema DDL 权限时，可以通过 rename 把该 schema 的表移到另一个无权限的 schema 下。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，子账户有 MySQL 某个 schema DDL 权限时，可以通过类似&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CREATE unique INDEX test_index ON db2.test (c1, c2 ASC) comment 'sss';&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;ALTER TABLE her.test ADD KEY www (c1(33),c2(33)) comment 'sss';&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的语句删除其他无权限 schema 中的索引。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，子账户有 MySQL 某个 schema DDL 权限时，可以通过类似&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;drop index aa from db2.test&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的语句删除其他无权限 schema 下的索引。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，子账户有 MySQL 某个 schema DDL 权限时，可以通过类似&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;ALTER TABLE db2.employee rename index old1 to new1;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的语句修改其他无权限 schema 下的索引名称。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，子账户有 MySQL 某个 schema DDL 权限时，可以通过类似&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;drop table db2.tablename&lt;/span&gt;&lt;/code&gt;&lt;span&gt;的语句删除其他无权限 schema 表。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，开启脱敏后子账户查询视图、物化视图出错的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，子账号权限配置过程中，在有未提交的情况下切换资源类型，提示对话框中按钮本应显示取消，但显示为确定的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，结果集中如果包含 Bytes、Date 类型时无法下载的问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;下载与反馈&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;产品首页：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fclouddm%2F" target="_blank"&gt;https://www.clougence.com/clouddm/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;产品文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2F" target="_blank"&gt;https://www.clougence.com/dm-doc/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;问题反馈：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us" target="_blank"&gt;https://www.clougence.com/dm-doc/intro/contact_us&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us%2F" target="_blank"&gt;/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;更多内容，欢迎关注公主号：CloudDM&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367556/clouddm-2-7-1-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367556/clouddm-2-7-1-0-released</guid>
      <pubDate>Mon, 18 Aug 2025 02:22:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>OpenSearch 3.2 发布：增强 AI 能力的下一代搜索和分析</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenSearch 3.2 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FglqBlloPuHeVAidzI5bx5A" target="_blank"&gt;发布&lt;/a&gt;，带来众多功能，提升和拓展搜索、可观测性及生成式 AI 应用场景。&lt;/p&gt; 
&lt;p&gt;本次版本重点延续 3.x 系列的新创新，包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;扩展 GPU 支持&lt;/li&gt; 
 &lt;li&gt;近似框架重大改进&lt;/li&gt; 
 &lt;li&gt;OpenSearch 中 Protobuf 正式发布（GA）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="332" src="https://oscimg.oschina.net/oscnet/up-8384e3d1bc249e0a383aab5423b087ff3e8.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;许多改进旨在帮助更高效地扩展工作负载，提升索引和查询能力。一些重点更新内容如下：&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;搜索&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;搜索在性能、可扩展性和功能扩展上都有多项改进。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;近似框架重大升级&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;OpenSearch 3.2 在两个方面增强了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensearch.org%2Fblog%2Fopensearch-approximation-framework%2F" target="_blank"&gt;近似框架&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;首先，3.2 支持了 search_after 查询，解决了此前此类查询退化为默认 Lucene 遍历的性能瓶颈。改进后，search_after 参数转为合理的范围查询边界——ASC 排序时作为下界，DESC 排序时作为上界，从而持续利用 ApproximatePointRange 优化的 BKD 遍历，避免回退到 Lucene。该优化大幅提升时间序列和数值型分页查询性能。基准测试中，Big5 数据集 p90 延迟从 185ms 降至 8ms，http_logs 数据集 DESC 排序延迟从 397ms 降至 7ms。提升了分页搜索、实时仪表盘及深度分页应用的响应速度。&lt;/p&gt; 
&lt;p&gt;其次，3.2 扩展了近似查询支持的数值字段类型，覆盖 HALF_FLOAT、FLOAT、DOUBLE、INTEGER、BYTE、SHORT、UNSIGNED_LONG，不再限于 LONG。基准测试表明，http_logs 和 nyc_taxis 数据集的 p90 延迟最高下降 80%。这一优化对分析任务、时间序列分析及多样数值字段的快速过滤排序尤为有效。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;体验更高性能的 gRPC/Protobuf API&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;3.2 版本中，gRPC 传输层正式发布（GA），支持高性能的批量文档导入和 k-NN 查询。相比传统 REST API，gRPC 使用 Protocol Buffers（Protobuf）——一种紧凑、结构化且强类型的二进制格式，自动从 OpenSearch API 规范生成。此格式减小负载体积，提升整体性能，尤其适合高吞吐量操作和向量搜索等原始数据类型。GA 版本还扩展了搜索 API 功能和传输加密。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;新增 skip_list 功能提升查询性能&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;3.2 引入了 skip_list 参数，适用于频繁用于范围查询或聚合的字段。skip_list 使查询引擎跳过不匹配的文档区间，从而提升查询效率。详情参考&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.opensearch.org%2Flatest%2Ffield-types%2Fsupported-field-types%2Findex%2F" target="_blank"&gt;字段类型文档&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;star-tree 搜索新增功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;star-tree 支持基于 IP 字段的聚合查询。同时，star-tree 相关的基本查询指标已纳入索引/节点/分片统计，包含使用 star-tree 解析的查询总数、当前运行查询数和累计耗时。详见相关&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensearch.org%2Fblog%2Fthe-power-of-star-tree-indexes-supercharging-opensearch-aggregations%2F" target="_blank"&gt;博客&lt;/a&gt;介绍。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;流式聚合优化资源分配&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;3.2 试验性引入基于流式传输的聚合功能，支持分段级别的部分聚合结果流式返回给协调节点，避免每个分片返回单一响应。此架构让协调节点成为扩展关键点，内存密集的 reduce 逻辑从数据节点迁移至协调节点，更好支持高基数聚合。通过 stream=true 参数可选择启用此功能。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;向量数据库与生成式 AI&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;OpenSearch 3.2 在性能和扩展性上多项提升，包括支持更多向量类型的 GPU 支持、向量搜索质量改进及 Neural Search 插件更新。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;新向量类型扩展 GPU 支持&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;GPU 索引支持 FP16、byte 和 binary 向量类型，除了之前的 FP32。新类型占用更少内存，减少 GPU 和 CPU 之间的数据传输，提高资源利用率和扩展能力，助力更多 GPU 加速索引应用。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;提升磁盘向量搜索召回率&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;3.2 推出两种提升二进制量化索引搜索质量的技术。非对称距离计算（ADC）保持查询向量全精度，对压缩文档向量进行比对，保留关键信息。随机旋转（RR）重新分配向量维度方差，防止 32 倍压缩中信息丢失。ADC 支持 1-bit 量化，RR 支持 1、2、4-bit 配置。两者结合可在复杂数据集（如 SIFT）上召回率提升最高达 80%，延迟适中，使二进制量化适用于对精度要求高的场景。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;优化语义搜索，满足多样需求&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Neural Search 插件的语义字段参数更灵活，支持调节密集嵌入字段（engine、mode、compression_level、method）、自定义文本分块算法及稀疏嵌入生成的剪枝策略和比例。新增批量大小选项提升索引吞吐，嵌入复用减少重复计算。提升语义搜索的灵活性、效率和适配性，针对不同数据、性能及相关性需求优化。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Plan-execute-reflect 代理正式发布&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;该代理可自主规划和反思，解决复杂任务，3.2 达到 GA 级别，新增提示词优化性能、消息历史参数控制、支持日期时间输入。通过 ML Commons 插件提供，能将复杂问题拆解为步骤，选择合适工具执行，并不断反思改进策略。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;可观测性、日志分析与安全分析&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;OpenSearch 3.2 在查询性能、Trace Analytics 插件分析能力等方面持续提升。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;支持 OpenTelemetry 和服务图控制&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Trace Analytics 插件支持 OpenTelemetry（OTel）追踪分析，从 Data Prepper 2.11 的数据接收，到 OpenSearch 3.2 的可视化。配置 OTel 源时，设置 output_format: otel，可保留标准字段和元数据，助力与 OTel 工具链集成。服务图新增最大节点和边数配置，方便大规模环境下调整视觉复杂度。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;PPL Calcite 更新提升性能和易用性&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;3.2 对 Piped Processing Language（PPL）带来性能和查询灵活性提升。新增基于 Calcite 行表达式的脚本引擎，支持聚合函数、过滤函数下推、跨度下推、相关性查询下推、排序合并连接下推及 IP 比较下推。增加参数强制转换、新增日期处理及 QUERY_SIZE_LIMIT 强制执行等功能。整体提升复杂查询的性能、正确性和易用性。&lt;/p&gt; 
&lt;p&gt;&lt;img height="268" src="https://oscimg.oschina.net/oscnet/up-1209318cdde40a0788039ab8abee23e77f6.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;OpenSearch Prometheus Exporter&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Prometheus exporter 插件已归入 OpenSearch 项目，与 3.2 同步发布。该插件不随核心包内置，需单独安装。发布节奏和版本管理已同步 OpenSearch，现有 Prometheus 抓取流程保持兼容，指标继续暴露在 /_prometheus/metrics。&lt;/p&gt; 
&lt;p&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopensearch-project%2Fopensearch-build%2Fblob%2Fmain%2Frelease-notes%2Fopensearch-release-notes-3.2.0.md" target="_blank"&gt;查看发行说明&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367552/opensearch-3-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367552/opensearch-3-2-released</guid>
      <pubDate>Mon, 18 Aug 2025 02:15:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🚨 企业数字化工具新范式：从代码到 AI 生成引擎</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;🚨震惊程序圈：这款国产低代码新品，居然能「读懂代码、生成系统、智能拆页」？！&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;没错，你没有看错，这不是套壳 GPT 的 IDE 插件，也不是一堆组件拖拽的玩具系统。今天我们来聊一聊：&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;👉 VTJ.PRO——一个真正能为开发者减负、为团队提效、为 CTO 降本的国产 AI 开发平台&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//24048a5adf68f73d7319acb678c7652c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;🧩 为什么 VTJ.PRO 爆了？&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;说到底，现在前端界的焦虑有三种：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;业务复杂度爆炸：一边是前后端业务混乱耦合，一边还要做运营端、管理端、移动端。&lt;/li&gt; 
 &lt;li&gt;人力紧张：不会 Vue3 的招不到，会 Vue3 的又不懂业务。&lt;/li&gt; 
 &lt;li&gt;协作低效：一个页面多个接口、多个版本、文档没有、测试补漏洞……&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;而 VTJ.PRO，像是一个无声出现的妙手回春者，把这些问题一个个治了。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//ad4ca718b891a94b6f9657d8e4452774.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;🤖 它，不止是低代码。&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;很多人一听「低代码」就摇头：「这东西，实战能用吗？」&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;VTJ.PRO 的回答是：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;✅ 能手搓代码，也能 AI 生成页面&lt;br&gt; ✅ 既能导入旧项目，也能一键全局生成后台系统界面&lt;br&gt; ✅ 所有源码开源透明，不黑箱、可维护、可拆分&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;它本质其实是一个：&lt;strong&gt;支持前端工程师深度嵌入、可以 AI 合作开发的超级生产引擎&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//39a2981b71e44c14560c1b553ec1e9de.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;⚙️ 到底有哪些核心功能？&lt;/h2&gt; 
&lt;table cellspacing="0" style="--vp-code-copy-copied-text-content:&amp;quot;已复制&amp;quot;; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:#3c3c43; display:table !important; font-family:&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:20px 0px; orphans:2; overflow-x:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:720px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;功能模块&lt;/th&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;描述&lt;/th&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;爆点&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;🔧 拖拽可视化配置&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;Vue3 组件级封装 + 拖拽搭建逻辑&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;所见即所得，支持响应式布局&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;✨ AI 原子能力生成&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;输入自然语言，就能生成页面、表格、接口绑定&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;真·无门槛上手编程&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;🧱 智能组件识别导入&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;旧项目页面一键读取、重构、维护&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;极大减少维护旧代码代价&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;🔁 代码双向可视&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;可视化生成 ⇄ 源码自由切换&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;无缝协作，不受平台束缚&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;🔒 集成企业权限系统&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;对标若依，多菜单、多角色、数据权限控制内置&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;直接落地「企业级后台」&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;🧪 可自定义 Mock + 流程模拟&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;内建数据模拟、本地测试、多人测试调试机制&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;解决前后端联调痛点&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💥真实开发场景中的神操作&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;【场景 ①：老板突然要 5 套管理系统后天上线】&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;平时团队要 2 周，现在只需：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;拖拽生成主骨架&lt;/li&gt; 
 &lt;li&gt;AI 生成 CRUD 表格代码&lt;/li&gt; 
 &lt;li&gt;自动扫描后端接口并匹配字段&lt;/li&gt; 
 &lt;li&gt;快速完成登陆、权限、路由、角色系统搭建&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;🎉1 小时产出 MVP 系统，代码可读可维护！&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;【场景②：引入新员工，老项目一言难尽】&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;用旧 Vue2 写的项目，还套着各式混乱的 UI 框架。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;VTJ.PRO 的「智能导入」模块可：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;🧠 自动识别视图树&lt;br&gt; 🧠 匹配旧页面组件结构&lt;br&gt; 🧠 转为 Vue3 格式供重新拖拽 &amp;amp; 修改&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;📈 无需重写，快速上手继续维护，团队知识沉淀不流失！&lt;/p&gt; 
&lt;h2&gt;🔍 市面唯一做到这些的国产平台：&lt;/h2&gt; 
&lt;table cellspacing="0" style="--vp-code-copy-copied-text-content:&amp;quot;已复制&amp;quot;; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box; color:#3c3c43; display:table !important; font-family:&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin:20px 0px; orphans:2; overflow-x:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:720px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;对比项&lt;/th&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;VTJ.PRO&lt;/th&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;某搭建平台 A&lt;/th&gt; 
   &lt;th style="background-color:#f6f6f7; border-color:#e2e2e3; text-align:left"&gt;某数据平台 B&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;是否开源&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;✅ 完全开源&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;可插拔部署&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;✅ 支持私有 + 嵌入&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌ 只能托管&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;是否 AI 原生&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;✅ AI 助力+识别+生成&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;可维护性&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;✅ 支持手写代码自由切换&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;⚠️ 有限&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;是否支持拆分打包&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;✅ 可拆分组件、按需打包&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
   &lt;td style="border-color:#e2e2e3; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:1px"&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🎓 技术栈支持全景解析：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;全面基于 Vue3 + Vite + TypeScript&lt;/li&gt; 
 &lt;li&gt;框架驱动逻辑明确：Router + Store + API 模块分层清晰&lt;/li&gt; 
 &lt;li&gt;所有页面可导出为 IDE 工程结构（src/views、components、utils…）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💬 开发者说：&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;「用了很多平台，要么玩具，要么封闭。VTJ.PRO 是第一个让我觉得舒服到能长期替代自己写代码的。」 — 来自某中台开发 leader&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;「我们用它，直接让 3 人团队扛下了原来 7-8 人的系统开发，全靠 AI + 可视切换的那套。」 — 某远程创业 CTO&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🧪 想用？现在就可以开撸！&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 立即体验官方项目：&lt;a href="https://gitee.com/newgateway/vtj" target="_blank"&gt;https://gitee.com/newgateway/vtj&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📦 安装方式简单易懂：&lt;code&gt;npm create vtj@latest -- -t app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;🛠 可私有化部署 / 嵌入现有项目，零迁移！&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ 结语&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;别让「低代码」只停留在「好像效率高」，也不要等到「要死命维护老代码」时才后悔没有工具。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;让 AI 成为你开发的一部分，而不是你工作的对立面。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;👉 现在，是时候试试真正为开发者设计的 VTJ.PRO 了！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367544</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367544</guid>
      <pubDate>Mon, 18 Aug 2025 01:14:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>DjangoAdmin 敏捷开发框架 Flask+AntdVue 版本 v2.6.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;v2.6.0 更新内容：&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;1、新增全局参数配置；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;2、新增到出 Excel 功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;3、新增导入 Excel 功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;4、新增上传导入功能组件；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;5、新增导出下载功能组件；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;6、新增上传文件功能；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;7、新增读取 env 配置文件扩展；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;8、优化角色权限节点参数设置；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;9、优化非超管用户权限设置问题；&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#333333"&gt;10、修复近期用户反馈的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;一款 Python 语言基于 Flask、Vue3、AntDesign、MySQL 等框架精心打造的一款模块化、高性能、企业级的敏捷开发框架，本着简化开发、提升开发效率的初衷触发，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架。&lt;/span&gt;&lt;/p&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;div&gt; 
            &lt;h2&gt;软件信息&lt;/h2&gt; 
            &lt;ul&gt; 
             &lt;li&gt;软件名称：DjangoAdmin 敏捷开发框架 Flask+AntdVue 版本&lt;/li&gt; 
             &lt;li&gt;官网网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoadmin.cn" target="_blank"&gt;https://www.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;文档网址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.flask.antdvue.djangoadmin.cn" target="_blank"&gt;http://docs.flask.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
             &lt;li&gt;演示地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.flask.antdvue.djangoadmin.cn" target="_blank"&gt;http://manage.flask.antdvue.djangoadmin.cn&lt;/a&gt;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;h2&gt;版本说明&lt;/h2&gt; 
            &lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;th&gt;版本名称&lt;/th&gt; 
               &lt;th&gt;版本说明&lt;/th&gt; 
               &lt;th&gt;版本地址&lt;/th&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
             &lt;tbody&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+Layui 混编版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Layui 等框架研发&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_Layui&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+EleVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Vue2.x、ElementUI 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_EleVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Django+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Django、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Django_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Flask+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Flask、Vue3.x、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Flask_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
              &lt;tr&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tornado+AntdVue 前后端分离版&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;采用 Tornado、Vue、AntDesign 等框架研发前后端分离版本&lt;/td&gt; 
               &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue"&gt;https://gitee.com/djangoadmin/DjangoAdmin_Tornado_AntdVue&lt;/a&gt;&lt;/td&gt; 
              &lt;/tr&gt; 
             &lt;/tbody&gt; 
            &lt;/table&gt; 
            &lt;h2&gt;模块展示&lt;/h2&gt; 
            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-f7a24a73c67162c2b25bebd865d613d3025.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367540</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367540</guid>
      <pubDate>Mon, 18 Aug 2025 00:11:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🚀 Xinference 1.9.0 炸裂更新！图像、OSS 与推理深度优化一次到位！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Xorbits Inference（Xinference）是一个，性能强大且功能全面的，分布式，推理框架。可用于大语言模型（LLM），语音识别模型，多模态模型等各种模型的推理。通过 Xorbits Inference，你可以轻松地，一键部署你自己的模型或内置的前沿开源模型 - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxorbitsai%2Finference%25E3%2580%2582%25E6%2597%25A0%25E8%25AE%25BA%25E4%25BD%25A0%25E6%2598%25AF%25E7%25A0%2594%25E7%25A9%25B6%25E8%2580%2585%25EF%25BC%258C%25E5%25BC%2580%25E5%258F%2591%25E8%2580%2585%25EF%25BC%258C%25E6%2588%2596%25E6%2598%25AF%25E6%2595%25B0%25E6%258D%25AE%25E7%25A7%2591%25E5%25AD%25A6%25E5%25AE%25B6%25EF%25BC%258C%25E9%2583%25BD%25E5%258F%25AF%25E4%25BB%25A5%25E9%2580%259A%25E8%25BF%2587" target="_blank"&gt;https://github.com/xorbitsai/inference。&lt;/a&gt;无论你是研究者，开发者，或是数据科学家，都可以通过 Xorbits Inference 与最前沿的 AI 模型，发掘更多可能。&lt;/p&gt; 
&lt;p&gt;Xinference 的功能和亮点有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌟 模型推理，轻而易举：大语言模型，语音识别模型，多模态模型的部署流程被大大简化。一个命令即可完成模型的部署工作。&lt;/li&gt; 
 &lt;li&gt;⚡️ 前沿模型，应有尽有：框架内置众多中英文的前沿大语言模型，包括 baichuan，chatglm2 等，一键即可体验！内置模型列表还在快速更新中！&lt;/li&gt; 
 &lt;li&gt;🖥 异构硬件，快如闪电：通过 ggml，同时使用你的 GPU 与 CPU 进行推理，降低延迟，提高吞吐！&lt;/li&gt; 
 &lt;li&gt;⚙️ 接口调用，灵活多样：提供多种使用模型的接口，包括 OpenAI 兼容的 RESTful API（包括 Function Calling），RPC，命令行，web UI 等等。方便模型的管理与交互。&lt;/li&gt; 
 &lt;li&gt;🌐 集群计算，分布协同：支持分布式部署，通过内置的资源调度器，让不同大小的模型按需调度到不同机器，充分使用集群资源。&lt;/li&gt; 
 &lt;li&gt;🔌 开放生态，无缝对接：与流行的三方库无缝对接，包括 LangChain， LlamaIndex， Dify，以及 Chatbox。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;————————————————————————&amp;nbsp; ————————————————————————&lt;/p&gt; 
&lt;p&gt;🚀 Xinference v1.9.0 更新日志&lt;/p&gt; 
&lt;p&gt;✅ 本次亮点&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐍 gpt-oss 模型支持&lt;/li&gt; 
 &lt;li&gt;🖼️ Qwen-Image 模型支持&lt;/li&gt; 
 &lt;li&gt;⚙️ Rerank 模型支持自由切换后端（含 vLLM 引擎）&lt;/li&gt; 
 &lt;li&gt;🔧 Deepseek-R1-0528 支持 Function Calling&lt;/li&gt; 
 &lt;li&gt;🔄 sglang 支持流式 Function Call&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌐 社区版更新&lt;/p&gt; 
&lt;p&gt;📦 安装方式&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;pip 安装：pip install 'xinference==1.9.0'&lt;/li&gt; 
 &lt;li&gt;Docker 使用：拉取最新版镜像，或在容器中使用 pip 更新&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🆕 新模型支持&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qwen-Image&lt;/li&gt; 
 &lt;li&gt;gpt-oss&lt;/li&gt; 
 &lt;li&gt;GLM-4.5 quantized 模型&lt;/li&gt; 
 &lt;li&gt;GLM-4.5v&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ 新特性&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;rerank 模型支持自由切换引擎，支持 vLLM 引擎推理&lt;/li&gt; 
 &lt;li&gt;Deepseek-R1-0528 支持 Function Calling&lt;/li&gt; 
 &lt;li&gt;sglang 支持流式 FunctionCall&lt;/li&gt; 
 &lt;li&gt;gpt-oss 支持 Harmony 格式解析&lt;/li&gt; 
 &lt;li&gt;UI：运行中的模型页新增 Replica 显示列&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🛠 功能增强&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qwen3 新模型加入工具调用模型列表&lt;/li&gt; 
 &lt;li&gt;更新 Qwen3-Coder chat_template&lt;/li&gt; 
 &lt;li&gt;支持 qwen-image gguf 格式&lt;/li&gt; 
 &lt;li&gt;新增 flash_attention 控制参数 attn_implementation&lt;/li&gt; 
 &lt;li&gt;使用 vLLM 引擎时清理 embedding 缓存&lt;/li&gt; 
 &lt;li&gt;降级 flash-attn 为 2.7.4 保证兼容&lt;/li&gt; 
 &lt;li&gt;新增 OpenFst 源以便构建 ASR 模型&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🐞 Bug 修复&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;限定 datasets 版本避免冲突&lt;/li&gt; 
 &lt;li&gt;修复 Qwen3 Reranker GPU 异常问题&lt;/li&gt; 
 &lt;li&gt;修复旧版 vLLM 与 0.10.0 兼容性问题&lt;/li&gt; 
 &lt;li&gt;修复 enable_thinking 导致 reasoning_content 错误&lt;/li&gt; 
 &lt;li&gt;修复 async_client 删除错误&lt;/li&gt; 
 &lt;li&gt;其他诸多稳定性修复&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📚 文档更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加 CUDA 12.8 Docker 文档&lt;/li&gt; 
 &lt;li&gt;更新 xllamacpp 使用说明&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🏢 企业版更新（v0.2.1 发布）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;本版本为大量 Bug Fix 与稳定性提升版本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我们感谢每一位参与的社区伙伴对 Xinference 的帮助和支持，也欢迎更多使用者和开发者参与体验和使用 Xinference。&lt;/p&gt; 
&lt;p&gt;欢迎您在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxorbitsai%2Finference" target="_blank"&gt;https://github.com/xorbitsai/inference&lt;/a&gt; 给我们一个，星标，这样你就可以在 GitHub 上及时收到每个新版本的通知。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367521/xinference-1-9-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367521/xinference-1-9-0-released</guid>
      <pubDate>Sun, 17 Aug 2025 15:48:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>流程编排框架，Solon Flow v3.5.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; text-align:start"&gt;Solon Flow 是一个轻量级流程编排框架（采用 yaml 或 json 偏平式编排格式）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持无状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于计算（或任务）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于业务规则和决策处理型的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;支持有状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于办公审批型（有状态、可中断，人员参与）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于长时间流程（结合自动前进，等待介入）的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;有可视化的设计器：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Fflow%2Fdesigner%2F" target="_blank"&gt;https://solon.noear.org/flow/designer/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;同时兼容 java8 ~ java24。也可嵌入到 SpringBoot、jFinal、Vert.x 等框架中使用。嵌入第三方框架的示例：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitee.com/solonlab/solon-flow-embedded-examples"&gt;https://gitee.com/solonlab/solon-flow-embedded-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fsolonlab%2Fsolon-flow-embedded-examples" target="_blank"&gt;https://gitcode.com/solonlab/solon-flow-embedded-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsolonlab%2Fsolon-flow-embedded-examples" target="_blank"&gt;https://github.com/solonlab/solon-flow-embedded-examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;一、最近更新了什么？&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;本次更新，统一了「无状态」、「有状态」流程的基础：引擎、驱动。通过上下文来识别是否为有状态及相关支持。&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;FlowContext 改为接口，增加了两个重要的方法：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#986801"&gt;boolean&lt;/span&gt; &lt;span style="color:#4078f2"&gt;isStateful&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
StatefulSupporter &lt;span style="color:#4078f2"&gt;statefulSupporter&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;且，FlowContext 做了分离。解决了，之前在实例范围内不可复用的问题。&lt;/p&gt; 
&lt;h4&gt;兼容说明&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;stateful 相关概念与接口有调整&lt;/li&gt; 
 &lt;li&gt;FlowContext 改为接口，并移除 result 字段（所有数据基于 model 交换）&lt;/li&gt; 
 &lt;li&gt;FlowContext 内置实现分为：StatelessFlowContext 和 StatefulFlowContext。通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;FlowContext.of(...)&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;实例化。（也可按需定制）&lt;/li&gt; 
 &lt;li&gt;StateRepository 接口的方法命名调整，与 StatefulSupporter 保持一致性&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;升级请做好调整与测试。&lt;/p&gt; 
&lt;h4&gt;具体更新&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 solon-flow iterator 循环网关（&lt;code&gt;$for&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;$in&lt;/code&gt;）&lt;/li&gt; 
 &lt;li&gt;新增 solon-flow activity 节点流入流出模式（&lt;code&gt;$imode&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;$omode&lt;/code&gt;），用于二次定制开发&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow ChainInterceptor:onNodeStart, onNodeEnd 方法（扩展拦截的能力）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow 操作：Operation.BACK_JUMP, FORWARD_JUMP&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowContext:incrGet, incrAdd&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow aot 配置&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow StatefulSupporter 接口，方便 FlowContext 对有状态流程提供支持&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowDriver:postHandleTask 方法（允许两段式提交任务执行，利于有状态与无状态的驱动定制）&lt;/li&gt; 
 &lt;li&gt;添加 solon-flow FlowContext:exchanger 方法（可获取 FlowExchanger 实例）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowContext 拆分为：FlowContext（对外，可复用） 和 FlowExchanger（对内）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowContext 移除 result 字段（所有数据基于 model 交换）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowContext get 改为返回 Object（之前为 T），新增 getAs 返回 T（解决 get 不能直接打印的问题）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow 移除 StatefulSimpleFlowDriver 功能合并到 SimpleFlowDriver（简化为一个驱动，同时支持有状态与无状态流程）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow 新增 stateless 包，明确 「有状态」 与 「无状态」 两个概念（StatelessFlowContext 和 StatefulFlowContext）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow FlowStatefulService 接口，每个方法的 context 参数移到最后位（保持一致性）&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow StateRepository 接口的方法命名，与 StatefulSupporter 保持一致性&lt;/li&gt; 
 &lt;li&gt;调整 solon-flow Chain 拆分为：Chain 和 ChainDecl&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;两对拆分类的定位：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;FlowContext 侧重对外，可复用（用于传参、策略，状态）。有 StatelessFlowContext 和 StatefulFlowContext 两种内置实现。&lt;/li&gt; 
 &lt;li&gt;FlowExchanger 侧重对内，不可复用（用于控制、中间临时状态或变量）&lt;/li&gt; 
 &lt;li&gt;Chain 为运行态（不可修改）&lt;/li&gt; 
 &lt;li&gt;ChainDecl 为声明或配置态（可以随时修改）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;应用示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;//FlowContext 构建&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(); &lt;em&gt;//无状态的&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"1"&lt;/span&gt;); &lt;em&gt;//无状态的&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"1"&lt;/span&gt;, stateController); &lt;em&gt;//有状态控制的&lt;/em&gt;
&lt;span style="color:#986801"&gt;FlowContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"1"&lt;/span&gt;, stateController, stateRepository); &lt;em&gt;//有状态控制的和状态持久化的&lt;/em&gt;


&lt;em&gt;//Chain 手动声明&lt;/em&gt;
&lt;span style="color:#986801"&gt;Chain&lt;/span&gt; &lt;span style="color:#986801"&gt;chain&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;ChainDecl&lt;/span&gt;(&lt;span style="color:#50a14f"&gt;"d3"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"风控计算"&lt;/span&gt;).create(decl -&amp;gt; {
            decl.addNode(NodeDecl.startOf(&lt;span style="color:#50a14f"&gt;"s"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;));
            decl.addNode(NodeDecl.activityOf(&lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"基本信息评分"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"g1"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"@base_score"&lt;/span&gt;));
            decl.addNode(NodeDecl.exclusiveOf(&lt;span style="color:#50a14f"&gt;"g1"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"分流"&lt;/span&gt;)
                    .linkAdd(&lt;span style="color:#50a14f"&gt;"e"&lt;/span&gt;, l -&amp;gt; l.title(&lt;span style="color:#50a14f"&gt;"优质用户（评分 90 以上）"&lt;/span&gt;).condition(&lt;span style="color:#50a14f"&gt;"score &amp;gt; 90"&lt;/span&gt;))
                    .linkAdd(&lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, l -&amp;gt; l.title(&lt;span style="color:#50a14f"&gt;"普通用户"&lt;/span&gt;)) &lt;em&gt;//没条件时，做为默认&lt;/em&gt;
            );
            decl.addNode(NodeDecl.activityOf(&lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"电商消费评分"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"@ec_score"&lt;/span&gt;));
            decl.addNode(NodeDecl.activityOf(&lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;).title(&lt;span style="color:#50a14f"&gt;"黑名单检测"&lt;/span&gt;).linkAdd(&lt;span style="color:#50a14f"&gt;"e"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"@bl_score"&lt;/span&gt;));
            decl.addNode(NodeDecl.endOf(&lt;span style="color:#50a14f"&gt;"e"&lt;/span&gt;).task(&lt;span style="color:#50a14f"&gt;"."&lt;/span&gt;));
        });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;二、特色展示&lt;/h2&gt; 
&lt;h3&gt;1、采用 yaml 或 json 偏平式编排格式&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;偏平式编排，没有深度结构（所有节点平铺，使用 link 描述连接关系）。配置简洁，关系清晰&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c1.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"activity"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;还支持简化模式（能自动推断的，都会自动处理），具体参考相关说明&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c1.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;""&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2、表达式与脚本自由&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c2.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c2"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;when:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.getAmount() &amp;gt;= 100"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.setScore(0);"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;when:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.getAmount() &amp;gt; 100 &amp;amp;&amp;amp; order.getAmount() &amp;lt;= 500"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.setScore(100);"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;when:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.getAmount() &amp;gt; 500 &amp;amp;&amp;amp; order.getAmount() &amp;lt;= 1000"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"order.setScore(500);"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3、元数据配置，为扩展提供了无限空间&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;元数据主要有两个作用：（1）为任务运行提供配置支持（2）为视图编辑提供配置支持&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;em&gt;# c3.yml&lt;/em&gt;
&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c3"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"activity"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"demo@noear.org"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@MetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;通过组件方式，实现元数据的抄送配置效果&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#4078f2"&gt;@Component("MetaProcessCom")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;MetaProcessCom&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;TaskComponent&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;run&lt;/span&gt;&lt;span&gt;(FlowContext context, Node node)&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; Throwable {
       &lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;cc&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; node.getMeta(&lt;span style="color:#50a14f"&gt;"cc"&lt;/span&gt;);
       &lt;span style="color:#a626a4"&gt;if&lt;/span&gt;(Utils.isNotEmpty(cc)){
           &lt;em&gt;//发送邮件...&lt;/em&gt;
       }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4、事件广播与回调支持&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;广播（即只需要发送），回调（即发送后要求给答复）&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;f4&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt;
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;|
      //只发送
      context.&amp;lt;String,String&amp;gt;eventBus().send("demo.topic", "hello");  //支持泛型（类型按需指定，不指定时为 object）
&lt;/span&gt;  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;|
      //发送并要求响应（就是要给答复）
      String rst = context.&amp;lt;String,String&amp;gt;eventBus().sendAndRequest("demo.topic.get", "hello");
      System.out.println(rst);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5、支持无状态、有状态两种应用&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;支持丰富的应用场景：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;无状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于计算（或任务）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于业务规则和决策处理型的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;有状态流程 
  &lt;ul&gt; 
   &lt;li&gt;可用于办公审批型（有状态、可中断，人员参与）的编排场景&lt;/li&gt; 
   &lt;li&gt;可用于长时间流程（结合自动前进，等待介入）的编排场景&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;自身也相当于一个低代码的运行引擎（单个配置文件，也可满足所有的执行需求）。&lt;/p&gt; 
&lt;h3&gt;6、驱动定制（是像 JDBC 有 MySql, PostgreSQL，还可能有 Elasticsearch）&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;这是一个定制后的，支持基于状态驱动的流引擎效果。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;DemoFlowDriver&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;FlowDriver&lt;/span&gt; {
    ...
}

&lt;span style="color:#986801"&gt;FlowEngine&lt;/span&gt; &lt;span style="color:#986801"&gt;flowEngine&lt;/span&gt; &lt;span&gt;=&lt;/span&gt;FlowEngine.newInstance(&lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;DemoFlowDriver&lt;/span&gt;());

&lt;span style="color:#986801"&gt;StateController&lt;/span&gt; &lt;span style="color:#986801"&gt;stateController&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;ActorStateController&lt;/span&gt;(&lt;span style="color:#50a14f"&gt;"actor"&lt;/span&gt;);
&lt;span style="color:#986801"&gt;StateRepository&lt;/span&gt; &lt;span style="color:#986801"&gt;stateRepository&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;InMemoryStateRepository&lt;/span&gt;();
                
&lt;span style="color:#986801"&gt;var&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowContext.of(&lt;span style="color:#50a14f"&gt;"i1"&lt;/span&gt;, stateController, stateRepository).put(&lt;span style="color:#50a14f"&gt;"actor"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"陈鑫"&lt;/span&gt;);

&lt;em&gt;//获取上下文用户的活动节点&lt;/em&gt;
&lt;span style="color:#986801"&gt;var&lt;/span&gt; &lt;span style="color:#986801"&gt;task&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; flowEngine.statefulService().getTask(&lt;span style="color:#50a14f"&gt;"f1"&lt;/span&gt;, context);

&lt;span style="color:#a626a4"&gt;assert&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"step2"&lt;/span&gt;.equals(task.getNode().getId());
&lt;span style="color:#a626a4"&gt;assert&lt;/span&gt; StateType.UNKNOWN == task.getState(); &lt;em&gt;//没有权限启动任务（因为没有配置操作员）&lt;/em&gt;

&lt;em&gt;//提交操作&lt;/em&gt;
flowEngine.statefulService().postOperation(context, &lt;span style="color:#50a14f"&gt;"f1"&lt;/span&gt;, task.getNode().getId(), Operation.FORWARD);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;流程配置样例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;f1&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt;
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step1&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"发起审批"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step2&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"抄送"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@OaMetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step3&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"审批"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;actor:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"陈鑫"&lt;/span&gt;, &lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@OaMetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"审批"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"parallel"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; [&lt;span style="color:#50a14f"&gt;step4_1&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;step4_2&lt;/span&gt;]}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_1&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;actor:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"陈宇"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_end&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_2&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;actor:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_end&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step4_end&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"parallel"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step5&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"抄送"&lt;/span&gt;, &lt;span style="color:#986801"&gt;meta:&lt;/span&gt; {&lt;span style="color:#986801"&gt;cc:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"吕方"&lt;/span&gt;}, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"@OaMetaProcessCom"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; {&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;step6&lt;/span&gt;, &lt;span style="color:#986801"&gt;title:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"结束"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;对于驱动器的定制，我们还可以：定制（或选择）不同的脚本执行器、组件容器实现等。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367483/solon-flow-3-5-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367483/solon-flow-3-5-0-released</guid>
      <pubDate>Sun, 17 Aug 2025 12:18:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>下拉组件 Tag 支持自定义背景颜色，DataEase 开源 BI 工具 v2.10.12 LTS 版本发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:start"&gt;2025 年 8 月 19 日，人人可用的开源 BI 工具 DataEase 正式发布 v2.10.12 LTS 版本。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;这一版本的功能变动包括：&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;图表&lt;/span&gt;&lt;/strong&gt;方面，图表提示框的背景颜色支持配置透明度，桑基图提示信息中支持配置总数占比显示项，线面图的纵轴轴值自动分档时可以根据实际使用的数据自动计算最小刻度，堆叠条形图/柱状图可以设置图例排序，基础条形图/柱状图支持点击阴影部分执行下钻、联动、跳转操作；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;查询组件&lt;/span&gt;&lt;/strong&gt;方面，下拉组件 Tag 支持自定义背景颜色；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;仪表板/数据大屏&lt;/span&gt;&lt;/strong&gt;方面，图片组支持设置刷新频率；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;数据源&lt;/span&gt;&lt;/strong&gt;方面，API 数据源接口参数可以调用已创建的接口参数。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;X-Pack 增强包&lt;/span&gt;&lt;/strong&gt;的功能变动包括：&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;同步管理&lt;/span&gt;&lt;/strong&gt;方面，增量同步设置支持指定正负偏移量，新增支持 CTE（Common Table Expression，通用表表达式）查询；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;数据填报&lt;/span&gt;&lt;/strong&gt;方面，批量上传的内容增加单条记录的提交信息；&lt;strong&gt;&lt;span style="color:#0a7be0"&gt;外观设置&lt;/span&gt;&lt;/strong&gt;方面，增加是否显示 Slogan 的配置项。&lt;/p&gt; 
&lt;h1&gt;新增功能&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：图表提示的背景颜色支持配置透明度；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：桑基图的提示信息中，支持配置总数占比显示项（#16476）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：线面图的纵轴轴值自动分档时，可以根据实际使用的数据自动计算最小刻度值；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：堆叠条形图/柱状图可以设置图例排序（#16424）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（图表）：基础条形图/柱状图支持点击阴影部分执行下钻、联动、跳转操作（#16489）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（查询组件）：下拉组件 Tag 支持自定义背景颜色；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（仪表板、数据大屏）：图片组支持设置刷新频率（#16584）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（数据源）：API 数据源接口参数可以调用已创建的接口参数（#16470）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，同步管理）：增量同步设置支持指定正负偏移量；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，同步管理）：新增支持 CTE（Common Table Expression，通用表表达式）查询（#16281）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，数据填报）：批量上传增加单条记录的提交信息；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;feature（X-Pack，外观设置）：增加是否显示 Slogan 的配置项（#16437）。&lt;/p&gt; 
&lt;h1&gt;功能优化&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：跳转配置时不生效的指标字段将不再显示（#16525）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：气泡地图、符号地图的动效支持小数设置；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：表格分组名称长度限制增加到 50 个字符（#16552）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（图表）：透视表汇总行列的字体默认加粗（#16436）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（仪表板、数据大屏）：调整查询组件的文字大小范围（#16517）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（仪表板、数据大屏）：空值不参与联动；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（移动端）：修改未开启移动端访问时的错误提示（#16514）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（数据大屏）：SVG（Scalable Vector Graphics，可缩放矢量图形）性能优化；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack，阈值告警）：阈值告警功能的标题优化为三级标题（#16482）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack，阈值告警）：告警内容包含多个指标值的消息模版（#16480）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack）：调整外部用户名字符串的长度限制（#16578）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（X-Pack，认证对接）：在认证失败的情况下，禁止注销 SSO 信息（#16615）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;refactor（嵌入式）：滚动条 CSS 样式添加类名标记，避免在 DIV 嵌入时冲突（#16455）；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;build：修复依赖错误导致的打包失败问题（#16520）。&lt;/p&gt; 
&lt;h1&gt;Bug 修复&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复仪表盘和水波图值为 0 时显示异常的问题（#16419）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复热力图颜色字段为计算字段时，图表报错的问题（#16471）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复线面图开启缩略轴时，纵轴最小值不立即自动计算的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复透视表设置数值格式之后，带格式导出单元格为非数值类型的问题（#16431）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复公共链接携带参数，刷新图表数据导致参数丢失，没有传入富文本中的问题（#16579）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复明细表下载表头缺失的问题（#16497）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复地图配色存在相同颜色时图例显示异常的问题（#16203）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复最值在部分浏览器（Safari）中不显示的问题（#16479）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复多个 Tab 页中，Tab2 的提示显示在 Tab1 中的问题（#16271）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复明细表合并单元格之后，导出的表格没有合并单元格的问题（#16589）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（图表）：修复移动端表格第二层无法下钻的问题（#16633、#16485）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板）：修复移动端部分查询组件悬浮移位的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复图层名称长度未校验的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（查询组件）：修复升级后文本下拉多选的 UI 发生异常变化的问题（#16443）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（查询组件）：修复数字下拉组件无法设置默认值的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（查询组件）：查询组件的背景色匹配仪表板深色模式；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复跑马灯组件预览字体和编辑字体大小不一致的问题（#16323）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复地图类图表隐藏再显示，会导致图表变形的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据大屏）：修复部分场景放大、缩小按钮无效的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：优化空资源提示（#16567）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复历史数据中出现重复 ID 的组件无法删除的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复图表、数据集、外置参数配置等文本标题超出边界的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复富文本双击出现悬浮设置，导致页面出现滚动条的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复模板更换数据集时，提示框偏移的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复调用浏览器打印功能时，出现部分页码空白的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复看板的外部参数使用默认值向自定义 SQL 传参时，拼接的 SQL 存在问题导致数据无法正常显示的问题（#16577）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复外部参数关联数据集参数时，参数类型显示不正确的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复导出应用模板时不会将筛选器使用的数据集也一起导出的问题（#16362）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复部分 Tab 组件可能在控制枱打印异常的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复部分富文本下拉选项不显示的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复双击富文本进入编辑模式时，画布可能出现滚动条的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复从告警管理的告警入口进入仪表板后，无法保存告警设置的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（仪表板、数据大屏）：修复跳转时可能出现控制枱异常信息打印的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据集）：修复 SQL Server 数据集导出按日期过滤时无法导出数据的问题（#16519）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据集）：修复 Doris、SQL Server 数据源中，数据库原始数据不存在重复数据，但数据集导出时存在重复数据的问题（#16452）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（数据源）：修复复制数据源会丢失数据信息的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据填报）：修复字符串类型的主键会强制校验为数值类型的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复阈值告警以 DIV 方式嵌入时，告警表单无法弹出的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复定时报告选项卡组件中的视图无法导出数据的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复阈值告警中动态时间小时粒度格式错误的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复调用定时报告导出接口设置额外等待时间无效的问题（#16528）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复绑定 MFA 导致&lt;/span&gt;&lt;em&gt;&lt;span&gt;MFA_KEY&lt;/span&gt;&lt;/em&gt;&lt;span&gt;重复的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 Oracle 的 Schemas 是 C##前缀时，无法同步的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 Oracle 查询 SQL 语句末尾添加分号后查询失败的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 DB2 查询语句不支持反引号，导致增量同步失败的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack，数据同步）：修复 DB2 首次同步数据时，增量字段为空，导致第二次同步失败的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复账号校验规则错误（#16569）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（X-Pack）：修复组织管理中可以操作无权限组织的问题；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（漏洞）：修复 DataEase H2 JDBC RCE 绕过漏洞；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix（漏洞）：修复桌面版 Aspectjweaver 反序列化任意文件写入漏洞；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#0a7be0"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;fix：关闭 FileOutputStream 以防止 downloadFile 中的资源泄漏。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367447/dataease-2-10-12-lts</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367447/dataease-2-10-12-lts</guid>
      <pubDate>Sun, 17 Aug 2025 09:41:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Jarboot 3.3.0 发布，Java 启动器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Jarboot 3.3.0 已经发布，Java 启动器。&lt;/p&gt; 
&lt;h2&gt;3.3.0（8，2025）&lt;/h2&gt; 
&lt;p&gt;修复已知的 bug，修复已知的 bug，推出 docker compose 部署策略，文件上传 websocket 服务（/jarboot/upload/ws）传入参数格式修改（json 字符串 base64 url 编码）&lt;/p&gt; 
&lt;h3&gt;新特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;启动时支持通过环境变量初始化账号（JARBOOT_USER）和密码（JARBOOT_DEFAULT_PWD）&lt;/li&gt; 
 &lt;li&gt;服务配置新增是否自动启动配置项，配置自启动时在 jarboot 启动后会自动启动该服务&lt;/li&gt; 
 &lt;li&gt;可通过-Dstart.wait.time=30000 指定最大的启动等待时间&lt;/li&gt; 
 &lt;li&gt;client-cli 支持通过 token 登录，可通过环境变量或-token 参数传入&lt;/li&gt; 
 &lt;li&gt;新增 docker compose 集群及单节点的配置文件示例&lt;/li&gt; 
 &lt;li&gt;新增软件升级脚本，可通过脚本一键升级 jarboot，执行&lt;code&gt;bin/upgrade.sh&lt;/code&gt;或&lt;code&gt;bin/windows/upgrade.bat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;新增软件升级功能，可在界面上点击升级，选择安装包或安装包下载连接，可一键升级&lt;/li&gt; 
 &lt;li&gt;新增定时重启服务配置，可使用 CRON 表达式配置重启计划&lt;/li&gt; 
 &lt;li&gt;.env 文件支持，可通过工作目录下的.env 文件配置环境变量&lt;/li&gt; 
 &lt;li&gt;服务配置界面增加提示信息，鼠标移到提示信息图标上可查看更多帮助信息&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;bug 修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;打印日志太多时异常掉线问题，The remote endpoint was in state [BINARY_FULL_WRITING] which is an invalid state for called method&lt;/li&gt; 
 &lt;li&gt;集群模式下文件上传到另一节点时，服务名为中文时上传文件失败问题&lt;/li&gt; 
 &lt;li&gt;修复使用 docker compose 集群模式下节点认证失败问题&lt;/li&gt; 
 &lt;li&gt;断开重连时新增 cookie 校验功能，校验失败则退出登录&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/majz0908/jarboot/releases/3.3.0"&gt;https://gitee.com/majz0908/jarboot/releases/3.3.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367399</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367399</guid>
      <pubDate>Sun, 17 Aug 2025 07:55:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Countly 25.03.16 发布，实时移动和 Web 分析报告平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;实时移动和 Web 分析报告平台 Countly&amp;nbsp;25.03.14&amp;nbsp;现已发布。具体更新内容包括：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Enterprise Fixes：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[journeys] 修复并发请求中跳过阈值检查的问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;[journeys] 防止在查看 journeys 列表页面时显示&amp;nbsp;journey builder&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:start"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Dependencies：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 get-random-values 从 3.0.0 升级至 4.0.0&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;将 puppeteer 从 24.16.1 升级至 24.16.2&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更新说明：&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCountly%2Fcountly-server%2Freleases%2Ftag%2F25.03.16" target="_blank"&gt;https://github.com/Countly/countly-server/releases/tag/25.03.16&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367367/countly-25-03-16-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367367/countly-25-03-16-released</guid>
      <pubDate>Sun, 17 Aug 2025 05:45:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Fluentd v1.19.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Fluentd v1.19.0 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKgDlq4AZU2YM9aaYcqg6rw" target="_blank"&gt;发布&lt;/a&gt;，包含许多新功能和修复，重点是降低运维和运行成本，提升整体稳定性。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;关于依赖冲突说明：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;本次版本对依赖做了部分限制，执行如 bundle update 时可能出现冲突。遇到这种情况，请手动调整依赖或重新生成 Gemfile.lock，例如：&lt;/span&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span&gt;$ rm Gemfile.lock&lt;/span&gt;
&lt;span&gt;$ bundle&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;更多详情请参考 fluentd#5048。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;主要新功能和改进：&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;添加重试超限时转移 chunk 文件功能&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;本次版本为 buf_file 和 buf_file_single 插件新增了缓冲区转移功能，简化故障恢复。之前版本中，当输出插件因网络问题无法发送数据，且重试次数超限且未配置二级输出时，数据会被丢弃。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;现在，重试超限时缓冲文件会被自动转移。问题解决后，可将转移的文件恢复到原缓冲目录，重启 Fluentd 继续发送数据。配合零停机重启功能，甚至可以无中断重启输入插件（如 in_udp）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;转移文件存放路径为：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#008080"&gt;&lt;span&gt;${root_dir}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;/buffer/&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span&gt;${plugin_id}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;注意：启用二级输出或 retry_forever 时此功能默认关闭。要启用缓冲转移，请移除这些设置。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;改进缓冲区损坏检测&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;缓冲文件可能因系统崩溃或断电导致损坏。之前版本启动时会因损坏文件报错，需手动定位删除。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;本版本改进了损坏检测，发现损坏文件后自动移至备份目录，启动错误将被抑制。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;增强指标功能&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;提升了 Fluentd 的可观测性：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;输入插件指标默认开启&lt;/span&gt;&lt;br&gt; &lt;span&gt;之前需显式设置 enable_input_metrics=true。现在默认开启，关闭请设为 false。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增 in_tail 指标：tracked_file_count（当前跟踪的文件数）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增输出插件指标：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;write_secondary_count：写入二级输出的累计记录数&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;drop_oldest_chunk_count：overflow_action 使用 drop_oldest_chunk 时丢弃的 chunk 数&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;性能提升：改用 json gem 替代 yajl-ruby&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;之前使用 yajl-ruby 处理 JSON（如写缓冲和 parser_json 解析）以提升性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;现在 Ruby 标准 json 库性能大幅提升，改用 json gem 作为默认 JSON 处理器。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;支持 Zstandard (zstd) 压缩&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;新增对 Zstandard (zstd) 压缩格式的支持，比 gzip 压缩率高且处理速度更快。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;以下插件支持 compress zstd：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;buffer&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;out_file&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;out_forward&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;注意：out_forward 使用 zstd 时，目标服务器需支持；Fluent Bit 或早于 v1.19.0 的 Fluentd 不支持此功能。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;支持 TLS 1.3&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;out_http 插件支持 TLS 1.3，增强安全性。默认使用 TLS 1.2，启用方法：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style="color:#000080"&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#000080"&gt;&lt;span&gt;match&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#008080"&gt;&lt;span&gt;tag&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&amp;nbsp; @type http&lt;/span&gt;
&lt;span&gt;&amp;nbsp; ...&lt;/span&gt;
&lt;span&gt;&amp;nbsp; tls_version TLSv1_3&lt;/span&gt;
&lt;span&gt;&amp;nbsp; ...&lt;/span&gt;
&lt;span style="color:#000080"&gt;&lt;span&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color:#000080"&gt;&lt;span&gt;match&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;其他实用改进&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;in_forward 插件：&lt;/span&gt;&lt;br&gt; &lt;span&gt;skip_invalid_event 默认开启，跳过损坏记录。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;out_stdout 插件：&lt;/span&gt;&lt;br&gt; &lt;span&gt;新增 use_logger 参数，设置为 false 时强制输出到 STDOUT，忽略 Fluentd 的日志配置，适合 Kubernetes 等容器环境。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;out_file 插件：&lt;/span&gt;&lt;br&gt; &lt;span&gt;新增 symlink_path_use_relative，支持 symlink_path 使用相对路径。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;系统配置：&lt;/span&gt;&lt;br&gt; &lt;span&gt;新增 forced_stacktrace_level，用于控制堆栈跟踪的日志级别。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367340/fluentd-1-19-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367340/fluentd-1-19-0-released</guid>
      <pubDate>Sun, 17 Aug 2025 03:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
