<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 22 Jul 2025 07:47:44 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>字节新视频模型 Waver 1.0 在 Video Arena 排行榜位列第三</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;来自字节跳动（ByteDance）的神秘新视频模型 Waver 1.0 已现身 Video Arena 排行榜，并在榜单上进入了第三名的位置。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-242dd11de888eb1d095d14c965d9adf0af7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a3ba8d4a4abe6c07a6970e52c0a5d3f129b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;值得关注的是，这款模型在文生视频和图生视频榜单上都是排名第三。文生视频仅次于字节之前发布的 Seedance 1.0 和谷歌的 Veo3，图生视频仅次于 Seedance 1.0 和 MiniMax 的 Hailuo 02 模型。&lt;/p&gt; 
&lt;p&gt;字节上个月发布了 Seedance 1.0。在评测中，Seedance1.0 在多个维度上超过了 Veo3。在与电影导演合作开发的 SeedVideoBench 基准测试中，该模型在遵循提示和动作真实感方面取得了更高的分数。在图像到视频的任务中，Seedance 保持了输入帧的视觉一致性，而 Veo3 则在某些情况下出现了光照和纹理的变化。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-3b8266677daa9731bb02990119d48c53102.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361698</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361698</guid>
      <pubDate>Tue, 22 Jul 2025 07:46:43 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>字节跳动发布通用机器人模型 GR-3</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        ********************************************************************************************************************
    ********************************************************************************************************************
    ********************************************************************************************************************
    ********************************************************************************************************************
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361697</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361697</guid>
      <pubDate>Tue, 22 Jul 2025 07:42:29 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>给 Javaer 看的大模型开发指南</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;h1&gt;一、概述&lt;/h1&gt; 
&lt;p&gt;伴随着大模型的性能提升、成本下降，在 Web 在线对话场景以外，大模型也越来越多的被集成到传统业务场景。&lt;/p&gt; 
&lt;p&gt;在大模型 API 交互模式、业务集成模式经百家争鸣现已趋于稳定的背景下，Spring 作为 Java 生态里的 OSS 巨头也下场为 LLM 提供生态支持，于近期释出 spring-ai 正式版。&lt;/p&gt; 
&lt;p&gt;需要说明的是，Spring-AI 所提供的能力并不神秘，业务上也并非必须用 Spring-AI 不可。但是，就像过去 Spring 对新的数据库、新的中间件提供生态支持一样，Spring-AI 提供了一套和 Spring 全家桶兼容并且语义一致、良好设计、易拓展的大模型交互的 Java API，可以极大的降低 LLM 集成和开发的成本。&lt;/p&gt; 
&lt;p&gt;从大模型的工程化、实用化角度来说，当你厘清 Spring-AI 这一套 API 设施的逻辑后，事情最后还是会回归到业务开发人最熟悉的 CRUD 领域。就像使用 Mybatis 操作 MySQL 一样，我们会用 spring-ai 来操作大模型。&lt;/p&gt; 
&lt;p&gt;那我们开始今天的讨论吧！&lt;/p&gt; 
&lt;h1&gt;二、什么是大模型&lt;/h1&gt; 
&lt;p&gt;大模型的舞台上，从来不缺新面孔。自 ChatGPT 开启 AI 新纪元后，各类大模型层出不穷。&lt;/p&gt; 
&lt;p&gt;但是我们不去考虑大模型的训练原理、推理/运算架构、参数调优等较为复杂的数学范畴的东西，就像我们很少关心 MySQL 是怎么用代码来实现效果的一样。&lt;/p&gt; 
&lt;p&gt;此处类比我们熟悉的知识，对大模型有一个盲人摸象式的基础且能够自洽的认识即可。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;从某种意义上来说，模型训练就是通过分析海量文本（如维基百科、图书、网页等）寻找到人类语言的规律，再将这个规律固化成一个包含数十亿【参数】的超级【数学公式】。就像简单公式 y = 5x + 8 中的 5 和 8 ，这两个【参数】决定了将输入 X 如何转化为输出 Y。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;训练好的【数学公式】就像代码，需要部署在算力平台上，借助【显卡】的并行运算能力来实现高效运算。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;用户的输入作为这个【数学公式】的入参，经公式运算后，得到相关的【输出】。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-4f220f78af04d95180d8fa240fb782a41c6.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;假设大模型是上述的数学公式，不同的大模型「ChatGPT/DeepSeek」是不同的架构、不同的公式，那么模型训练就是通过对海量文本的分析、学习，找到合适的参数值。&lt;/p&gt; 
&lt;h1&gt;三、大模型的特点&lt;/h1&gt; 
&lt;p&gt;接下来我们关注在工程应用场景下，需要开发人关注的大模型特点。&lt;/p&gt; 
&lt;p&gt;就像 MySQL，我们集成时也需要关注不同的存储引擎（InnoDB/MyISAM）的特点。&lt;/p&gt; 
&lt;h2&gt;无状态&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-955439c305797e44d9a606d734224e79816.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;大模型是没有记忆、没有状态的，它是一个纯函数。&lt;/p&gt; 
&lt;p&gt;它不知道之前跟你说过什么。所以每次进行大模型输入的时候，我们需要根据业务场景把之前的【输入】，【反馈】一并给它，避免大模型失忆导致的对话不流畅。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-3f4298c09ec0589241e82ec27594fd43bf5.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;结构化输出&lt;/h2&gt; 
&lt;p&gt;大模型是具备结构化输出能力的，虽然有些模型支持的不够好，但是没关系，只是支持的程度不同，重要的是它们都支持！&lt;/p&gt; 
&lt;p&gt;所谓的结构化输出是指，大模型除了可以返回口语化、没有模式的自然语言文本外，还可以按你需求给你返回其他的文本格式，比如：JSON。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-38fa0d015043b414639659a356421e84b95.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;你看，这像不像在调一个 REST 接口？甚至是一个万能接口，毕竟大模型什么都会，不会的也可以现编。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-b86a6416d0d66ba884b2112b071ac10b848.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;函数调用&lt;/h2&gt; 
&lt;p&gt;其实看到这里我们就可以实现一个大模型驱动的 RPC 调用引擎了！&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-70ed28496f315664f13fb79d858d84155a3.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;大模型帮你推理、规划得到了需要执行的函数和对应的函数参数，至于这个【函数名】对应的到底是一个进程内的方法、HTTP 接口、Dubbo 接口还是 MCP 接口都没有那么重要，这只是智能体实现的一个技术细节而已。&lt;/p&gt; 
&lt;p&gt;我们可以用自然语言表述需求，同时告诉大模型有哪些辅助【工具/函数】可以供它备用。它会推理、编排这些工具来达成需求。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-05eafbfb705514d386afcc33aaa92a0b681.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;把用户输入和可用函数输入给大模型，大模型推理发现需要调用外部函数，于是返回函数名+函数调用参数。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;智能体捕获输出，对指定函数发起调用，再将用户输入和函数结果一起输入到大模型，大模型基于这些上下文推理输出结果。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;考虑到大模型发起函数调用的普遍需求，大模型供应商一般都在 API 层面提供了【function call】能力，用于将文本输出和函数调用输出区分开，明白了原理，我们知道这只是 API 抽象层次的问题。&lt;/p&gt; 
&lt;h1&gt;四、大模型接口&lt;/h1&gt; 
&lt;p&gt;考虑到大模型对硬件资源的特别需求（如显卡），所以大模型一般是独立部署，以 SaaS 模式提供能力。就像 MySQL 对资源有特别的需求（如大内存），所以一般也是进行独立部署。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-0318204255dc09fb74daf6d3701fb1a81d7.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;训练好的大模型就是一套二进制数据集，SaaS 化需要做外围的服务化、产品化封装，同一套模型可以在不同的算力平台部署，提供截然不同的服务化 API。&lt;/p&gt; 
&lt;h2&gt;模型封装&lt;/h2&gt; 
&lt;p&gt;示例伪代码如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-4469b4e5ea9c89830f03852be3da2e7cdca.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;我们可以简单看下当下比较热门的几大供应商提供的 API 文档：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;OpenAI-会话补全&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.apifox.cn%2Fapi-67883981" target="_blank"&gt;https://openai.apifox.cn/api-67883981&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;DeepSeek-会话补全&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapi-docs.deepseek.com%2Fzh-cn%2Fapi%2Fcreate-chat-completion" target="_blank"&gt;https://api-docs.deepseek.com/zh-cn/api/create-chat-completion&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;硅基流动-会话补全&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.siliconflow.cn%2Fcn%2Fapi-reference%2Fchat-completions%2Fchat-completions" target="_blank"&gt;https://docs.siliconflow.cn/cn/api-reference/chat-completions/chat-completions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ollama-会话补全&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.runoob.com%2Follama%2Follama-api.html" target="_blank"&gt;https://www.runoob.com/ollama/ollama-api.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;硅基流动和 Ollama 都属于大模型算力/治理平台。他们不研发大模型，只是大模型的搬运工。可以把大模型理解成微服务集群，把硅基流动和 Ollama 理解成微服务构建/发布平台即可。&lt;/p&gt; 
&lt;p&gt;大概浏览一下，会发现核心 API 都差不多，毕竟有 OpenAI 珠玉在前，许多系统都已对接了 OpenAI 的 API。后发的大模型为了兼容，降低接入难度，基本上也都和 OpenAI 的 API 大差不差。&lt;/p&gt; 
&lt;p&gt;就像是 MySQL，尽管数据库产品类型百花齐放，但都兼容 SQL 语法。&lt;/p&gt; 
&lt;p&gt;我们在此只讨论【会话补全】这一点，会发现会话补全接口的输入/输出大概都是以下情况：&lt;/p&gt; 
&lt;h2&gt;接口输入&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-auto"&gt;{
  "stream": false, // 是否是流式输出 (要不要 SSE)
  "model": "deepseek-chat", //选用的哪个模型
  "messages": [ // 历史对话消息，因为大模型无状态，所以按场景提供一定数量的历史消息
    {
      "content": "You are a helpful assistant",
      "role": "system"
    },
    {
      "content": "Hi", //消息内容
      "role": "user" //消息类型
    }
  ],
  "tools": null, //外部函数列表，【函数调用】能力在 API 层面的支持
  "frequency_penalty": 0,  //无关紧要的模型行为控制参数
  "presence_penalty": 0, //无关紧要的模型行为控制参数
  "temperature": 1, //无关紧要的模型行为控制参数
  "top_p": 1, //无关紧要的模型行为控制参数
  "logprobs": false, //无关紧要的模型行为控制参数
  "top_logprobs": null //无关紧要的模型行为控制参数
}


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这里以目标达成作为要点，内容中部分不理解的参数可以忽略。&lt;/p&gt; 
&lt;h2&gt;接口输出&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-auto"&gt;{
  "id": "&amp;lt;string&amp;gt;", //无关紧要
  "choices": [
    {
      "message": {
        "role": "assistant",
        "content": "&amp;lt;string&amp;gt;", // 大模型生成的内容
        "reasoning_content": "&amp;lt;string&amp;gt;",
        "tool_calls": [  //需要发起的【函数调用】
          {
            "id": "&amp;lt;string&amp;gt;",
            "type": "function",
            "function": {
              "name": "&amp;lt;string&amp;gt;",
              "arguments": "&amp;lt;string&amp;gt;"
            }
          }
        ]
      },
      "finish_reason": "stop" //有点重要，但是我们先不管
    }
  ],
  "usage": {  //token 使用量，计数、计费
    "prompt_tokens": 123,
    "completion_tokens": 123,
    "total_tokens": 123
  },
  "created": 123,  //无关紧要
  "model": "&amp;lt;string&amp;gt;",  //无关紧要
  "object": "chat.completion"  //无关紧要
}


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;看到这里时，你是不是已经开始跃跃欲试了？是不是感觉打造一个垂直领域的智能体没有想象中那么困难了~&lt;/p&gt; 
&lt;h1&gt;五、RAG 架构&lt;/h1&gt; 
&lt;p&gt;除非是围绕特定业务场景结合私域数据训练的专用大模型，否则涉及到一些企业内部的私域信息时，通用大模型也只能不懂装懂的现编。&lt;/p&gt; 
&lt;p&gt;例如：当你询问大模型【DJob 如何接入与使用】，除非训练大模型时输入了相关资料，不然大模型只能现编了。&lt;/p&gt; 
&lt;p&gt;考虑到专用大模型的成本，工程上解决这个问题的方法一般是通过外挂知识库来实现：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;结合具体业务场景，将相关的文档与资料提前录入到【知识库】中。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;用户提交一个【输入】后，先使用，用户【输入】作为搜索条件，去【知识库】中搜索得到相关的【资料】。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;将用户【输入】和【资料】一起提供给大模型。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;此【知识库】组件的具体选型属于实现细节，简单的可以用 MySQL、Elasticsearch，如果想提升【知识库搜索结果】的匹配度，也可以使用近期讨论度很高的【向量数据库】。&lt;/p&gt; 
&lt;p&gt;添加了 RAG 后，流程如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-6f168cdbf7307ba88cff25022007853c787.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;详情可参考下文：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zhihu.com%2Ftardis%2Fzm%2Fart%2F675509396%3Fsource_id%3D1003" target="_blank"&gt;https://www.zhihu.com/tardis/zm/art/675509396?source_id=1003&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;六、MCP 协议&lt;/h1&gt; 
&lt;p&gt;可以看到，将大模型作为一个【函数调用】的规划引擎，借助它的推理与生成能力，可以实现复杂的业务流程。如果说大模型是【脑】，那提供给大模型规划、使用的【函数】就是它的【手】和【脚】。有脑有手的大模型，可以迸发出巨大的业务潜力。&lt;/p&gt; 
&lt;p&gt;那如何打通大模型和传统软件系统（如存量微服务）呢？&lt;/p&gt; 
&lt;p&gt;我们关注的问题，开源社区也在积极的关注，这就是 MCP 协议诞生的背景和目的。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-cdf7c58206c4240bbfa014790dbf64837a8.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MCP 协议介绍&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmcp-docs.cn%2Fintroduction" target="_blank"&gt;https://mcp-docs.cn/introduction&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;在这里我们不展开 MCP 协议的细节，仅作个人对 MCP 协议的思考，重点在于打破 MCP 协议的神秘感、破除 MCP 迷信。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;MCP 协议本身并非高精尖的内容，简单来说，就是常用人群约定系统间调用的流程、格式。若不考虑通用，谁都可以设计符合自己需求的、领域特定的交互协议。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MCP 协议的优势在于，它出现的非常及时，且基本满足了常规交互需求，因此快速在社区达成了共识。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;不管是 MAP、MBP 还是 MCP，都没有那么重要，但是形成共识非常重要。协议达成了共识，开源社区才可以合力围绕协议进行生态建设。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;七、Spring-AI&lt;/h1&gt; 
&lt;p&gt;到了这一步，我们开始探讨 Java 代码，首先我们需要熟悉下 spring-ai 的整套代码架构，一步一步来，以整体到到细节的节奏进行讨论。&lt;/p&gt; 
&lt;h2&gt;模型抽象&lt;/h2&gt; 
&lt;p&gt;核心的 API 实体是 Model ，是一个带泛型的纯函数，提供了对大模型能力的顶层抽象：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-4c8eb6d3a3db0d348bcf6af4a83d96598cc.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;org.springframework.ai.model.Model&lt;/p&gt; 
&lt;p&gt;大模型的能力本质就是：输入一个 ( request )，返回一个输出。&lt;/p&gt; 
&lt;p&gt;至于输入/输出的具体类型，由细分的子类限定：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-658963d4fd91da7af51a3c881b6b6c990d9.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;不同模态的大模型支持不同类型的输入/输出，在此我们只讨论 ChatModel 。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-ea60492d26588e3617111304802991e6d13.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;org.springframework.ai.chat.model.ChatModel&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-8f2e639d274c64e73ac2fd7ab77dffc9b5e.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;spring-ai 提供了不同平台、不同模型的 API 集成，开发者只需要提供接口地址、调用凭证即可开箱使用~&lt;/p&gt; 
&lt;h2&gt;聊天会话&lt;/h2&gt; 
&lt;p&gt;考虑到大模型对话是热点场景， spring-ai 针对性的提供了会话接口抽象。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-c0fc2c85cae2c4c057a742257fa412b0b65.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;org.springframework.ai.chat.client.ChatClient&lt;/p&gt; 
&lt;h2&gt;RAG 拓展&lt;/h2&gt; 
&lt;p&gt;类似 Spring-AOP， spring-ai 基于请求横切提供了开箱即用的 RAG 能力抽象。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-d652767109fde40d777cb798748fcd7d1f1.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-144d4d0070da16c5c4549f3e22d38ef1aab.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;org.springframework.ai.rag.advisor.RetrievalAugmentationAdvisor&lt;/p&gt; 
&lt;h2&gt;代码示例&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;基于供应商构建 ChatModel&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-de37abd8f6a6b76596d69538ae2017b2e70.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;构建 ChatClient 发起会话&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-dc3cbb7de1b8b757423df6f47e3d6f6d8bf.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;八、智能体示例&lt;/h1&gt; 
&lt;p&gt;到这里，我们已经自上而下的理解了大模型的工程化，现在我们来开发一个【DJob 智能助手】吧！&lt;/p&gt; 
&lt;h2&gt;接口骨架&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-2c6fe1568279296cb61ca3c34155b04af4b.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;通过 POST 接口，响应 Content-Type 为 text/event-stream 。&lt;/p&gt; 
&lt;h2&gt;构造外部函数定义&lt;/h2&gt; 
&lt;p&gt;假设有以下几个函数可以给大模型提供能力：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-712add346042b148c3b97b4bfbd1b3ea2a2.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;将上述 3 个本地方法封装成 ChatClient API 认识的【ToolCallback】：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-592d6518eba6c49212db74683c115d8ccf8.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;构建可用的，函数/工具，信息，这里用本地方法来 mock。实际使用时可以利用 MCP/HTTP/gRPC/Dubbod 等实现跨系统调用。&lt;/p&gt; 
&lt;h2&gt;系统提示词&lt;/h2&gt; 
&lt;p&gt;由于不能让大模型自由发挥，因此需要在用户输入的内容外，给大模型一些定向信息补充或场景限定，帮助大模型更好地解决问题！&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-2033f2904f431653de6b35214010265c3e1.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;发起调用&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-6296331333a464f694abe879362d5c31887.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;考虑到大模型无状态，所以每次会话时历史消息也需要一并输入。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;历史消息可以由前端收集、提交，也可以由后端每次会话存储、收集。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;九、总结&lt;/h1&gt; 
&lt;p&gt;综上所述，太阳底下没有新鲜事，工程领域所有的新生事物都可以暂时把它当做 MySQL，没有人比 Java 工程师更懂 MySQL 了（开玩笑）。&lt;/p&gt; 
&lt;p&gt;以上，除 Java 代码外，都是经过盲人摸象的方法探索出的内容。如有错误，欢迎指正。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.一致性框架：供应链分布式事务问题解决方案｜得物技术&lt;/p&gt; 
&lt;p&gt;2.Redis 是单线程模型？｜得物技术&lt;/p&gt; 
&lt;p&gt;3.得物社区活动：组件化的演进与实践&lt;/p&gt; 
&lt;p&gt;4.从 CPU 冒烟到丝滑体验：算法 SRE 性能优化实战全揭秘｜得物技术&lt;/p&gt; 
&lt;p&gt;5.CSS 闯关指南：从手写地狱到「类」积木之旅｜得物技术&lt;/p&gt; 
&lt;p&gt;文 / 羊羽&lt;/p&gt; 
&lt;p&gt;关注得物技术，每周更新技术干货&lt;/p&gt; 
&lt;p&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/p&gt; 
&lt;p&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18638450</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18638450</guid>
      <pubDate>Tue, 22 Jul 2025 07:13:29 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>腾讯发布全栈 AI IDE「CodeBuddyIDE」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;腾讯今日正式发布旗下首个全栈 AI IDE「CodeBuddy IDE」，主打「产品-设计-研发部署」全流程 AI 一体化开发工作台（即「产设研一体」），支持从需求到部署的全栈自动化 。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-55fa5c9fdde529e683a05e0690eb3d5ae4e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;CodeBuddyIDE 国际版已上线，内置 Claude-4.0-Sonnet 和 Gemini-2.5-Pro 等模型，可直接用自然语言生成产品 PRD、TRD、DRD，并据此生成网页和后端，甚至一键将 Figma 设计稿变成网页 。&lt;/p&gt; 
&lt;p&gt;CodeBuddyIDE 集成腾讯云开发 CloudBase 和 Supabase，支持快速部署，用户通过自然语言描述需求即可生成完整项目（如小程序、Web 应用等），并支持一键部署到云端。&lt;/p&gt; 
&lt;p&gt;目前，CodeBuddyIDE 处于内测阶段，需邀请码激活使用，内测期间解锁 Pro 版权益并赠送高级模型对话额度 。腾讯云开发者产品总经理刘毅表示，未来 AI 编程将分化为「简单应用开发需求可通过氛围编程实现，复杂系统则需专业化团队协作的规约编程」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361686</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361686</guid>
      <pubDate>Tue, 22 Jul 2025 07:00:29 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>软银与 OpenAI 产生分歧，5000 亿 「星际之门」 项目面临危机</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;《华尔街日报》&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wsj.com%2Ftech%2Fai%2Fsoftbank-openai-a3dc57b4" target="_blank"&gt;报道&lt;/a&gt;称，白宫于今年 1 月宣布的 「星际之门」 项目正面临重重困难，这个旨在推动美国人工智能（AI）发展的雄心壮志项目，现阶段的推进速度远低于预期。最初计划在项目中注入的 5000 亿美元资金，现在看起来却有可能要大幅度缩减。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;「星际之门」 项目的联合创始人，软银创始人孙正义、OpenAI CEO 萨姆・奥尔特曼以及美国前总统特朗普在今年初在白宫共同亮相，宣布了这一合作计划。然而，六个月过去了，负责推动项目的公司尚未成功完成任何数据中心的交易，这显然让参与各方感到失望。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="459" src="https://oscimg.oschina.net/oscnet/up-94e9db1fbddb7e52554be50cf7517543b16.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;知情人士透露，软银与 OpenAI 在项目的关键条款上产生了分歧，尤其是在数据中心的选址问题上。尽管两家公司在宣布时曾承诺立即投资 1000 亿美元，但目前的目标显得更加保守，计划在年底前建成一家小型数据中心，地点可能选在俄亥俄州。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这个进展缓慢的项目，无疑是对孙正义雄心壮志的挫败。作为风险投资的老手，他近年来在 AI 领域投入了数十亿美元的资金，但仍未能跟上快速发展的脚步。此外，软银早前承诺向 OpenAI 投资 300 亿美元，这项巨额投资使其在 AI 基础设施领域占据了一席之地。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;而奥尔特曼则迫切希望能够获得足够的计算能力来支持 OpenAI 的下一代旗舰产品 ChatGPT，因此他选择与其他运营商合作，绕过软银，与甲骨文达成了一项数据中心协议。根据该协议，OpenAI 将在未来三年内向甲骨文支付超过 300 亿美元的费用，以建立总装机容量达 4.5 吉瓦的数据中心。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;虽然孙正义和奥尔特曼在公开场合声称合作一切顺利，并表示目标是共同建设 10 吉瓦的数据中心，但知情人士却透露，「星际之门」 项目的起步缓慢并未影响孙正义对 OpenAI 未来发展的信心，仍有意向进一步投资。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361680</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361680</guid>
      <pubDate>Thu, 17 Jul 2025 06:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 正在准备发布下一代文生视频模型 Sora 2</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;近日有网友&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fbtibor91%2Fstatus%2F1947276559322345693" target="_blank"&gt;发现&lt;/a&gt;了 OpenAI Sora 2 相关的资源文件。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0722/142046_blsg_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;看起来，OpenAI 似乎正在准备发布其文生视频模型的下一代版本 Sora 2。据称，新模型旨在与 Google 的 Veo 3 等模型竞争，并可能包含生成更长视频以及集成音频功能等新特性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361675</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361675</guid>
      <pubDate>Thu, 17 Jul 2025 06:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>RWKV-7s 即将亮相 WAIC</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;2025 年 7 月 26 日至 29 日，RWKV 团队受邀参加 2025 世界人工智能大会（WAIC 2025）。RWKV 将在大会上公开最新 RWKV-7s 混合架构，与所有参会者分享 RWKV 的最新技术突破。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="waic-1" src="https://oscimg.oschina.net/oscnet/up-2dbef8b0695315b2a589b31cf8f65da16c6.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="waic-2" src="https://oscimg.oschina.net/oscnet/up-7b5848fcb6908307a0952971749fe423f9a.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="waic-3" src="https://oscimg.oschina.net/oscnet/up-0bf9c26895c446447f0997e5c9bad0d9444.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="waic-4" src="https://oscimg.oschina.net/oscnet/up-61bfe66884c43704b452e85fff8a3c5f4a4.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;7 月 26-29 日，RWKV 团队在 WAIC 2025 期待您的到来！&lt;/p&gt; 
&lt;p&gt;RWKV 在上海世博展览馆 1 层 Hall3-D701 及 B1 层 Hall4-FT305 均设有展位。诚邀您亲临现场，了解 RWKV 的最新技术突破！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361672</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361672</guid>
      <pubDate>Thu, 17 Jul 2025 06:07:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>字节跳动开源 Seed-X 7B，支持 28 种语言翻译</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;字节跳动旗下 Seed 团队近日正式开源多语言翻译模型 Seed-X，该模型以仅 70 亿参数（7B）的轻量级规模，支持包括英语、中文、日语、韩语、法语、德语、西班牙语、俄语等在内的 28 种语言的双向翻译。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;根据介绍，Seed-X 在多个领域 (如互联网、科技、办公对话、电子商务、生物医药、金融、法律、文学、娱乐等) 的翻译任务中表现优异，性能甚至可媲美 Gemini-2.5、Claude-3.5 和 GPT-4 等顶级大模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="273" src="https://oscimg.oschina.net/oscnet/up-d1a99717fc679c972df23bf4e33ce1516fc.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Seed-X 基于 Mistral 架构设计，专注于翻译任务的优化。开发团队在训练过程中特意剔除了 STEM、代码和推理相关数据，聚焦于翻译任务的精准性和高效性。这种专注使得 Seed-X 在人类评分测试中表现出色，翻译效果接近 DeepSeek R1 和 Gemini Pro2.5 的水平。得益于其轻量级设计，Seed-X 优化了部署和推理效率，适合在资源受限的环境下运行，为开发者提供了灵活的应用场景。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;团队通过以大语言模型为核心的数据处理管道，最大限度减少了人工干预，生成并筛选高质量的翻译训练数据。这种方法不仅提升了模型的翻译能力，还确保了其在多语言场景下的泛化性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;此前，字节 Seed 团队已开源多模态模型 BAGEL、代码模型 Seed-Coder 和语音生成模型 Seed-TTS。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361671</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361671</guid>
      <pubDate>Thu, 17 Jul 2025 06:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>DeepSeek 下载量暴跌 72.2%，豆包登顶</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;《每日经济新闻》联合 QuestMobile 推出《2025 年二季度 AI 应用价值榜》，基于月均下载量与月活跃用户数（MAU）两大核心指标，揭示 AI 应用「中场战事」的新变局。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;数据显示，一季度冠军 DeepSeek 光环褪色，豆包在下载量方面成为领跑者，Kimi、智谱、文小言、通义等 AI 智能助手类应用月活集体下滑，可灵月活跌超 16%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;新的垂直场景跑出了黑马，在「AI+办公」领域，ima 月活环比增长 190.2%，360 文库月活环比增幅达 134.5%；在「AI+教育」领域，字节旗下的豆包爱学月活为 756.2 万，而作业帮旗下的快对 AI 月活更是高达 1044.4 万。一场关乎用户留存、实用价值与商业化的深水区搏斗正全面展开。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="444" src="https://oscimg.oschina.net/oscnet/up-535d5cbe306167256400f31b96a983f21a3.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="432" src="https://oscimg.oschina.net/oscnet/up-c021a59249f548632845b6a7b9a05d10f5b.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="437" src="https://oscimg.oschina.net/oscnet/up-32976a2d0d2104b3e023b9296bfb6d13634.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;1.&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;王座易主： 豆包以近 3000 万下载量登顶，DeepSeek 下载量大跌七成&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;2025 年二季度，AI 助手赛道的下载量榜首位置发生戏剧性更迭。字节跳动旗下的&lt;strong&gt;豆包，凭借稳健的增长策略和强大的生态协同，取代了一季度「断层式」领先的 DeepSeek，成为月均下载量的冠军&lt;/strong&gt;，并在活跃用户规模上进一步缩小差距。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 数据洞察&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（1）豆包：&lt;strong&gt;二季度月均下载量达到 2981.3 万，位列第一&lt;/strong&gt;，相较于第一季度有 9.5% 的增长。&lt;strong&gt;其 MAU 也从第一季度的 9980.5 万大幅增长 30.4%，达到 1.3 亿&lt;/strong&gt;，稳居行业第二。MAU 与下载量的比值（下载用户的活跃转化效率）从第一季度的约 3.7 倍扩大至约 4.4 倍，显示其庞大的存量用户基础之上，用户粘性仍在增强。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（2）DeepSeek：一季度的「双冠王」在二季度出现明显回落。&lt;strong&gt;其月均下载量从第一季度惊人的 8111.3 万骤降至 2258.9 万，&lt;/strong&gt;&lt;strong&gt;降幅高达 72.2%&lt;/strong&gt;。尽管其 MAU 仍以近 1.7 亿的规模位居榜首，但相比第一季度的近 1.87 亿，也出现 9.3% 的环比下滑。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 数据解读&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（1）豆包的生态优势：豆包在第二季度展现了强大的后劲，这背后是字节跳动生态流量的持续灌溉与产品场景的深化布局。特别是其在教育等垂直领域的子应用&lt;strong&gt;「豆包爱学」表现不俗&lt;/strong&gt;&lt;strong&gt;，MAU 达到 756.2 万&lt;/strong&gt;，&lt;strong&gt;成功为豆包主 App 构建了高频、刚需的使用场景，形成了「通用平台+垂直爆款」的双轮驱动模式&lt;/strong&gt;。这种策略不仅带来了稳定的新用户，更重要的是有效提升了用户的留存和活跃度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（2）DeepSeek 被其他 AI 应用分流，不再是性价比之王：一方面，DeepSeek 动作寥寥，大版本更新停滞。&lt;strong&gt;曾被寄予厚望的 DeepSeek-R2 模型原计划 5 月初发布，但直至 7 月中旬仍未见踪影，引发市场对其技术迭代能力的质疑&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;另一方面，DeepSeek「高性价比」标签正在被市场一点点撕下，进一步加剧了流量的流失。阿里、字节、百度等大厂纷纷推出 API 价格更低的同类模型。蓄势待发的「AI 六小龙」们通过模型更新，也开始在性能和价格上纷纷挑战起 DeepSeek 的性价比。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;QuestMobile 研究总监陈燕在接受《每日经济新闻》记者采访时分析称，&lt;strong&gt;DeepSeek 下滑主要源于其被其他应用接入后，用户被分流。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;QuestMobile 数据显示，DeepSeek 的 App 端流量自 4 月起开始下滑。具体来看，5 月流失的 DeepSeek 用户中，6 月有 59.2% 转向使用百度 App，38.6% 转向使用豆包 App，7.0% 转向使用腾讯元宝 App。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;陈燕进一步指出，DeepSeek 属于通用型智能问答产品，在办公、学习、娱乐等垂直场景对用户的深度绑定不足，这也导致其用户吸引力降低。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="439" src="https://oscimg.oschina.net/oscnet/up-e8d9040e7441bb9dc59fc6d382af92b0a58.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;2. 「烧钱」后遗症显现：腾讯元宝、Kimi 增长模式迎大考&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;腾讯元宝和 Kimi 在第二季度不约而同地进入了增长的「冷静期」与「阵痛期」，印证了《2025 年一季度 AI 应用价值榜》中关于「烧钱」模式不可持续的预警。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（1）腾讯元宝：月均下载量「腰斩」，策略重心转向精细化运营&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;腾讯元宝的 MAU 在第二季度保持了微弱增长，从 2358.3 万增至 2502.5 万，增幅约为 6%，守住了行业第三的位置。然而，&lt;strong&gt;腾讯元宝的月均下载量在第一季度 1343.3 万的基础上大幅下跌 54% 至 617.5 万&lt;/strong&gt;。下载量的大幅下滑与活跃用户的稳定形成鲜明对比。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;这组数据清晰地表明，腾讯元宝在第一季度斥约 14 亿元巨资「闪电战」式获取用户的阶段已经结束。第二季度的策略重心已全面转向用户留存和习惯培养，这正是第一季度报告所预见的挑战。&lt;strong&gt;通过高频迭代、接入微信生态等方式获取的庞大用户群，如今需要通过更精细化的运营来沉淀。&lt;/strong&gt;MAU 的稳定说明其在留存上取得了一定成效，但如何激发这部分用户的更高频使用，避免「下载即流失」成为关键。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（2）Kimi：月均下载量、MAU 均加速下滑&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;如果说第一季度的 Kimi 是「增长失速」，那么第二季度则进入了「加速下滑」通道，用户流失问题凸显。&lt;strong&gt;其月均下载量较第一季度跌 57.7% 至 352.9 万&lt;/strong&gt;&lt;strong&gt;。更令人担忧的是，其 MAU 也未能守住，从第一季度的 2165.3 万下降 35% 至 1407.2 万。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;Kimi 的困境是第一季度问题的延续和深化。在大幅压缩投流规模后，Kimi 在用户拉新上已无优势。当 DeepSeek、豆包、元宝等以更通用、更高性能或更低成本提供同类应用后，Kimi 在产品差异化上未能及时建立起足够高的壁垒。长文本处理能力曾是其亮点，但随着行业技术普遍进步，这一优势的护城河效应正在减弱。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;Kimi 的案例为所有 AI 创业公司敲响了警钟：在缺乏持续造血能力和强大生态依托的情况下，单纯依赖融资和单一亮点的增长路径，将在巨头林立的战场上面临极大的不确定性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;3. 「双雄&lt;strong&gt;」&lt;/strong&gt;格局形成，多数 AI 智能助手流量下滑&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;二季度的数据揭示了一个残酷的现实：市场洗牌正在提速。除了少数头部玩家外，大多数通用型 AI 助手都陷入了活跃用户下滑的困境。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 数据洞察&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;市场集中度达到了前所未有的程度。根据第二季度数据计算，在主流 AI 智能助手应用中，DeepSeek（MAU 约 1.7 亿）和豆包（MAU 约 1.3 亿）占据了该赛道近 88.9% 的月活跃用户规模，形成了「双寡头垄断」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;这一格局使得其他竞争者只能在剩余约 10% 市场空间中激烈拼抢，生存压力巨大。除腾讯元宝保持了 6.1% 的平稳增长外，其余 AI 智能助手几乎全线承压。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;除上文提到的 Kimi 外，智谱清言的 MAU 下降 43.0%，天工的 MAU 下降 39.2%，文小言的 MAU 下降 32.8%，通义也出现了 2.6% 的下滑。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 数据解读&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;产品同质化与用户「审美疲劳」：&lt;/strong&gt;当底层大模型能力趋同，各款 AI 助手在基础对话、问答、知识查询等功能上拉不开显著差距，便陷入了严重的同质化竞争。对于用户而言，在体验过一两款主流应用后，已没有动力去下载和频繁使用功能相似的多个应用。初期的「新鲜感」消退后，用户开始「用脚投票」，向体验更好或场景更贴合的少数应用集中。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;「生态」与「场景」成为决胜负的关键：&lt;/strong&gt;为何豆包和腾讯元宝的 MAU 能在洗牌中保持增长？答案在于&lt;strong&gt;它们&lt;/strong&gt;&lt;strong&gt;超越了「纯工具」的范畴。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;豆包的强劲增长，很大程度上得益于其背后字节跳动的强大生态，通过高频、刚需的场景化服务，将用户牢牢锁定在自己的生态系统内，从而带动了主应用的活跃度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;腾讯元宝的 MAU 增长则更多体现了其在第一季度巨额投入后，依托微信等社交生态进行用户留存的成果。它将 AI 产品与腾讯的其他服务和流量池深度绑定，构建了独特的用户粘性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;独立 AI 助手的生存空间被挤压：&lt;/strong&gt;对于 Kimi、天工、智谱清言等缺乏强大生态背景和独特场景优势的独立 AI 助手而言，生存环境正变得日益严峻。它们既要面对来自巨头「生态军」的降维打击，又要满足用户日益挑剔的目光。当无法为用户提供「非你不可」的价值时，活跃度的下滑便成为难以避免的趋势。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;这一趋势清晰地表明，单纯「聊天机器人」的阶段已经过去。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="446" src="https://oscimg.oschina.net/oscnet/up-ea4c1a8d2b47416a1248659ba91647b94a6.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;4. 「AI+场景」冰火两重天：新风口崛起，旧热点降温&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;与通用 AI 助手领域格局剧变相呼应，第二季度的「AI+场景」应用赛道同样上演了「冰火两重天」的剧情。第一季度的热点应用有的归于沉寂，有的则持续走强，同时，新的细分赛道有「黑马」开始崭露头角。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（1）营销驱动难以为继&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 典型案例：360 旗下的纳米 AI 搜索是本季度最典型的「过山车」式应用。在第一季度，它曾以近 620% 的下载量增幅和近 1100% 的 MAU 增幅惊艳市场。然而进入第二季度，&lt;strong&gt;其月均下载量环比下跌 80.8%，MAU 也锐减 50%。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 现象解读：&lt;strong&gt;纳米 AI 搜索的昙花一现，深刻揭示了过度依赖创始人和营销事件驱动的增长模式的脆弱性。&lt;/strong&gt;周鸿祎的亲自站台和创新营销在短期内吸引了大量眼球和试用用户。但当营销热度褪去，如果产品本身未能提供超越传统搜索或其他 AI 助手的独特、持续的价值，用户便会迅速流失。这表明，&lt;strong&gt;在 AI 时代，用户的忠诚度建立在「好用」而非「好听」之上。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（2）「AI+教育」成垂直场景「领跑者」&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆&amp;nbsp;&lt;/strong&gt;典型案例：以学习辅导为核心的「AI+教育」应用，在用户规模和粘性上已全面超越泛娱乐及生活类应用，成为最成功的垂直场景。&lt;strong&gt;字节旗下的豆包爱学 MAU 为 756.2 万，而作业帮旗下的快对 AI MAU 更是高达 1044.4 万，位列总榜第五，甚至超过了热门的 AIGC 创作应用即梦 AI。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 现象解读：与社交、娱乐等「锦上添花」型需求不同，教育辅导是用户的刚需。这类应用成功地将 AI 能力与查难题、批改作业等高频、具体的学习任务结合，提供了明确的价值，从而获得了极高的用户粘性。它们已经从「AI 玩具」进化为不可或缺的「学习工具」，其庞大且稳定的用户基础，成为 AI 场景化落地的「压舱石」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（3）AIGC 创作赛道格局生变：即梦 AI 一家独大，可灵失速&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆&amp;nbsp;&lt;/strong&gt;数据表现：第二季度见证了 AI 视频生成赛道的格局初定。第一季度，字节旗下的即梦 AI 和快手旗下的可灵 AI 还被视为并驾齐驱的强劲增长者。然而&lt;strong&gt;仅一个季度后，两者差距迅速拉大。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;即梦 AI 延续强势增长&lt;/strong&gt;，&lt;strong&gt;其 MAU 已达 959 万，环比增长超 68%，月均下载量也保持着 44.6% 的高速增长。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;可灵 AI 则明显失速&lt;/strong&gt;，&lt;strong&gt;其月均下载量环比下滑超过 25%&lt;/strong&gt;，MAU 仅为 113.3 万，不足「即梦 AI」的八分之一，环比下跌 16%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 现象解读：即梦 AI 的成功不仅在于技术迭代，更在于其与抖音等内容生态的紧密结合，为用户提供了创作、分享、获得反馈的完整闭环。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;（4）「AI+办公」需求强劲，成新增长引擎&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 典型案例：第二季度的最大特点，是 AI 应用场景正从泛娱乐、泛聊天，向更具生产力属性的「工作学习」场景深度渗透。&lt;strong&gt;以 ima 和 360 文库为代表的 AI 办公类应用异军突起。&lt;/strong&gt;其中，ima 的 MAU 环比增长率高达 190.2%，360 文库的 MAU 增幅也达到 134.5%，两者在 MAU 和下载量增长榜上均名列前茅。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;◆ 现象解读：这一转变标志着用户需求走向成熟。用户不再满足于将 AI 作为「玩具」，而是迫切希望将其作为提升工作和学习效率的工具。AI 文档处理、知识库管理等功能，能够直接解决用户在信息处理、知识沉淀等方面的痛点，因此具备了比泛娱乐应用更高的用户价值和商业化潜力，正成为市场新的增长引擎。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;《2025 年二季度 AI 应用价值榜》显示，AI 应用市场的竞争已彻底告别野蛮生长的阶段，全面进入围绕用户价值和留存的「存量绞杀」阶段。当前市场正呈现出多重关键趋势：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆ 市场的核心已从「如何让用户下载」，转变为「如何让用户留下」。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;陈燕向每经记者表示，通过强投放带来的流量爆破有一定的局限性，不仅获客成本高昂，用户留存也面临难题。在她看来，与移动互联网时代「流量入口为王」的逻辑不同，AI 产品的价值实现更依赖于对特定场景的深度理解和全方位赋能。但需要注意的是，这并非简单的功能叠加，而是基于对用户任务链路的深度洞察，其本质是解决问题而非提供工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆ 「AI+生产力」成核心增长极，AI 应用能否为办公、教育等提供生产力工具，是其成功的关键试金石。&lt;/strong&gt;陈燕指出，「AI+生产力」是一个确定的场景，尤其是「AI+办公」，其场景痛点诸多，如文档处理，数据整合等。QuestMobile 数据显示，5 月「AI+办公」在 PC 网页端的规模达 5000 万，环比增速 12.2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆ 用户已完成市场教育，变得更加务实。他们会选择能解决实际问题的「AI 工具」，也会毫不犹豫地抛弃价值模糊、体验不佳的应用。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;以 AI 社交赛道（App 端）为例，QuestMobile 数据显示，自今年 2 月起 AI 社交类 App 已出现流量滑坡。以某头部 AI 社交互动 App 为例，其 1 月用户规模为 676 万，6 月规模下滑至 353 万。除了行业重心有所转移外，此类产品退潮的关键原因是用户体验满足度上「不达标」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;陈燕认为，从数据层面看，这类产品要走出「短期爆红、长期难留」的困境，一方面可以尝试借鉴游戏行业解法，将 AI 角色发展为虚拟偶像（如初音未来），通过构建内容与情感价值闭环，强化长期陪伴、个性化互动、情绪响应等体验，逐步从娱乐向「轻陪护」演进来提升用户粘性；另一方面，可以尝试产品场景的实用化延展，如 AI 生图功能，与社交平台、内容创作工具等深度结合，并通过内容衍生（短视频、周边）来提高流程和商业化变现。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆ 生态协同能力成为 AI 应用在存量竞争中突围的核心支撑。&lt;/strong&gt;而对于没有大平台背书的 AI 应用，陈燕表示，需要避开与大厂的正面竞争，在垂直场景中找到「缝隙市场」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;可以预见，2025 年下半年的 AI 应用之争将围绕「价值深耕」。陈燕预测，AI 眼镜、AI 耳机、AI PC 等消费电子产品的普及将成为下阶段新爆点。根据市场观察来看，几个头部互联网集团及手机厂商都已经在去年做了提前布局，通过硬件+软件的结合，实现 AI 的落地。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#030303; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;◆ 智能体（Agent）领域同样值得关注。&lt;/strong&gt;AI 产品的真正价值在于实现复杂任务的简单处理，而智能体的概念恰恰与此对应。但智能体的爆发核心在于任务闭环能力、场景渗透能力以及生态协同（即平台+开发者共建）。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361663</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361663</guid>
      <pubDate>Thu, 17 Jul 2025 03:57:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>⚡模型即服务 - Wow 框架 v5.25.5 发布！🏗️</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;&lt;img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"&gt;&lt;img alt="License" src="https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"&gt;&lt;img alt="Integration Test Status" src="https://oscimg.oschina.net/oscnet/badge.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"&gt;&lt;img alt="Awesome Kotlin Badge" src="https://oscimg.oschina.net/oscnet/awesome-kotlin.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt="👉" height="14" src="https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="👈" height="14" src="https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h1&gt;🚀 Wow v5.25.5 震撼发布！全面升级测试体验与核心架构&lt;/h1&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;本次更新带来了革命性的&lt;strong&gt;测试规范升级&lt;/strong&gt;，同时优化了核心架构与异常处理机制，为开发者提供更强大、更灵活的编程体验！&lt;/p&gt; 
 &lt;h2&gt;🔥 重磅亮点：全新测试规范登场&lt;/h2&gt; 
 &lt;h3&gt;🧩 革命性 AggregateSpec 聚合测试框架&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;CartSpec&lt;/strong&gt; : &lt;strong&gt;AggregateSpec&lt;/strong&gt;&amp;lt;&lt;strong&gt;Cart, CartState&lt;/strong&gt;&amp;gt;&lt;/span&gt;({
    on {
        &lt;em&gt;// 模拟初始化场景&lt;/em&gt;
        whenCommand(addCartItem) {
            expectEventType(CartItemAdded::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)  // 事件类型断言&lt;/span&gt;
            expectState { items.hasSize(&lt;span style="color:#008080"&gt;1&lt;/span&gt;) }       &lt;em&gt;// 状态断言&lt;/em&gt;
            fork {  &lt;em&gt;// 分支测试&lt;/em&gt;
                whenCommand(removeCartItem) {
                    expectEventType(CartItemRemoved::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)&lt;/span&gt;
                }
            }
            fork {  &lt;em&gt;// 嵌套分支测试&lt;/em&gt;
                whenCommand(DefaultDeleteAggregate) {
                    expectStateAggregate { deleted.isTrue() }
                }
            }
        }
    }
})&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;多分支测试&lt;/strong&gt;：支持&lt;code&gt;fork&lt;/code&gt;嵌套测试复杂业务流程&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;智能状态验证&lt;/strong&gt;：&lt;code&gt;expectState&lt;/code&gt;/&lt;code&gt;expectStateAggregate&lt;/code&gt;精准断言聚合状态&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;链式操作&lt;/strong&gt;：事件→命令→状态的全链路验证&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;🌟 全新 SagaSpec 流程测试引擎&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt; &lt;strong&gt;CartSagaSpec&lt;/strong&gt; : &lt;strong&gt;SagaSpec&lt;/strong&gt;&amp;lt;&lt;strong&gt;CartSaga&lt;/strong&gt;&amp;gt;&lt;/span&gt;({
    on {  &lt;em&gt;// 场景 1：购物车下单流程&lt;/em&gt;
        whenEvent(OrderCreated(fromCart=&lt;span&gt;true&lt;/span&gt;)) {
            expectCommandType(RemoveCartItem::&lt;span&gt;&lt;strong&gt;class&lt;/strong&gt;)  // 命令类型断言&lt;/span&gt;
            expectCommand { 
                body.productIds.first() == orderItem.productId &lt;em&gt;// 命令内容验证&lt;/em&gt;
            }
        }
    }
    on {  &lt;em&gt;// 场景 2：非购物车订单&lt;/em&gt;
        name(&lt;span style="color:#dd1144"&gt;"NotFromCart"&lt;/span&gt;)  &lt;em&gt;// 自定义测试名&lt;/em&gt;
        whenEvent(OrderCreated(fromCart=&lt;span&gt;false&lt;/span&gt;)) {
            expectNoCommand()  &lt;em&gt;// 空命令断言&lt;/em&gt;
        }
    }
})
&lt;/code&gt;
&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;多场景覆盖&lt;/strong&gt;：支持多个&lt;code&gt;on&lt;/code&gt;块定义不同业务流程&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;精准命令验证&lt;/strong&gt;：&lt;code&gt;expectCommand&lt;/code&gt;可深度校验命令内容&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;命名测试场景&lt;/strong&gt;：&lt;code&gt;name()&lt;/code&gt;方法提升测试报告可读性&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;✨ 核心功能升级&lt;/h2&gt; 
 &lt;h3&gt;🛠 架构优化&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;全新 PrepareKey 机制&lt;/strong&gt;：自动发现注册&lt;code&gt;PrepareKeyProxyFactory&lt;/code&gt;，支持自定义扫描包路径&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;注解迁移&lt;/strong&gt;：&lt;code&gt;wow-api&lt;/code&gt;统一管理注解，弃用&lt;code&gt;wow-spring&lt;/code&gt;旧版注解&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;服务容器增强&lt;/strong&gt;：&lt;code&gt;ServiceProvider&lt;/code&gt;新增&lt;code&gt;serviceNames&lt;/code&gt;属性，实现&lt;code&gt;Copyable&lt;/code&gt;接口&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;⚡ 性能与稳定性&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;异常处理升级&lt;/strong&gt;：增强错误信息与原因链追踪，优化&lt;code&gt;CommandExchange&lt;/code&gt;错误处理&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;等待策略优化&lt;/strong&gt;：重构&lt;code&gt;wait&lt;/code&gt;机制，简化等待条件判断&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;代码生成改进&lt;/strong&gt;：引入&lt;code&gt;GeneratedFile&lt;/code&gt;类统一管理生成文件&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;🔒 安全与维护&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;依赖全面升级&lt;/strong&gt;： 
   &lt;ul&gt; 
    &lt;li&gt;OpenTelemetry 仪表库 v2.18.1&lt;/li&gt; 
    &lt;li&gt;Mockk v1.14.5&lt;/li&gt; 
    &lt;li&gt;Angular v20.1.2&lt;/li&gt; 
    &lt;li&gt;ng-zorro-antd v20.1.0&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;CoSec 增强&lt;/strong&gt;：新增请求 ID 提取能力&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;🧪 测试体系全面进化&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;DSL 语法革新&lt;/strong&gt;：&lt;code&gt;given&lt;/code&gt;→&lt;code&gt;on&lt;/code&gt;语义优化，更符合行为驱动开发&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;验证阶段增强&lt;/strong&gt;：&lt;code&gt;VerifiedStage&lt;/code&gt;新增&lt;code&gt;expect()&lt;/code&gt;断言方法&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;智能错误处理&lt;/strong&gt;：优化聚合状态验证的错误反馈机制&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;动态测试构建&lt;/strong&gt;：&lt;code&gt;DynamicTestBuilder&lt;/code&gt;移至根包提升可用性&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;blockquote&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;💡 立即体验新一代测试规范，让复杂业务逻辑的验证变得前所未有的简洁高效！建议开发者重点关注&lt;code&gt;AggregateSpec&lt;/code&gt;和&lt;code&gt;SagaSpec&lt;/code&gt;的 DSL 设计模式，将大幅提升测试代码的可读性和可维护性。&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span style="background-color:#ddffdd"&gt;+ 本次更新重点优化了测试基础设施&lt;/span&gt;
&lt;span style="background-color:#ddffdd"&gt;+ 强烈推荐查看 CartSpec 和 CartSagaSpec 示例代码&lt;/span&gt;
&lt;span style="background-color:#ddffdd"&gt;+ 体验新一代声明式测试范式的强大威力！&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;🎯 为现代化微服务而生，让领域驱动设计触手可及！&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html" target="_blank"&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Features" src="https://oscimg.oschina.net/oscnet/Features.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Architecture" src="https://oscimg.oschina.net/oscnet/Architecture.svg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html" target="_blank"&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html" target="_blank"&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="传统架构 VS 事件溯源" src="https://oscimg.oschina.net/oscnet/300ee974_384561.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="ETL 同步流程" src="https://oscimg.oschina.net/oscnet/5fda25c1_384561.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361650</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361650</guid>
      <pubDate>Thu, 17 Jul 2025 03:16:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>字节 AI 编程助手 Trae 发布 2.0</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;字节跳动旗下 AI 编程助手 Trae 正式发布 2.0 版本。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d19d38ab798612c44abee342c5f0d7111a5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，Trae 2.0 拥有全新的视觉设计，并加入了新的 SOLO 模式。据悉，SOLO 模式为一个具备上下文工程能力的系统，可基于完整信息进行任务规划和执行，支持从代码编写到功能交付的端到端开发流程。&lt;/p&gt; 
&lt;p&gt;具体来看，SOLO 模式能够处理从 PRD 风格的需求文档、技术设计，到浏览器内容和终端输出等丰富的上下文信息，全面覆盖规划、编码、测试、部署等完整的开发周期。&lt;/p&gt; 
&lt;p&gt;据了解，SOLO 的设计充分考虑了上下文工程。它首先理解用户的知识架构，帮助用户思考和规划，然后将复杂的工作分解成逻辑步骤以便于实施。&lt;/p&gt; 
&lt;p&gt;目前，SOLO 模式仅面向 Trae 国际版 Pro 用户开放体验，并且需要通过 SOLO Code 进行解锁；中国版用户则还需等待。定价方面，Trae 首月仅需 3 美元，后续价格为 10 美元起步。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361648</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361648</guid>
      <pubDate>Thu, 17 Jul 2025 03:10:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>月之暗面发布 Kimi K2 技术报告</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;月之暗面（Moonshot AI）发布了其 Kimi K2 模型的完整技术报告，相关文档已上传至 GitHub。&lt;/p&gt; 
&lt;p&gt;&lt;img height="748" src="https://static.oschina.net/uploads/space/2025/0722/110557_TRxF_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;、&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMoonshotAI%2FKimi-K2%2Fblob%2Fmain%2Ftech_report.pdf" target="_blank"&gt;https://github.com/MoonshotAI/Kimi-K2/blob/main/tech_report.pdf&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一、Kimi K2 是什么？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Kimi K2 是一款 Mixture-of-Experts（MoE）架构，的大语言模型，具备：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;1.04 万亿参数（Trillion-scale Total Params）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;激活参数数为 320 亿（Activated Params）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;高效稳定的训练机制（MuonClip）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;多阶段后训练（含 RL 自我对齐）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在多个领域性能 SOTA，尤其擅长代码、数学、工具使用&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;换句话说，Kimi K2 是一位既懂编程又会推理、还能灵活使用工具的超级 AI 助手。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;二、为什么说它「强」？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;从公开评测数据来看，Kimi K2 在众多权威基准上表现优异：&lt;/p&gt; 
&lt;p&gt;任务类型，测试集，得分，对比领先，软件工程 SWE-Bench 65.8 超 GPT-4.1、Claude 数学竞赛 AIME 2025 49.5 同级模型领先，工具使用 Tau2-Bench 66.1 开源模型最高，编程实战 LiveCodeBench v6 53.7 所有模型最高，通用能力 MMLU-Redux 92.7 超过大多数闭源模型&lt;/p&gt; 
&lt;p&gt;关键词：非思考设置下的 SOTA、全面领先、高效能&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三、它是怎么训练出来的？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Kimi K2 在预训练与后训练阶段均做了大量创新设计。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;预训练阶段 —— MuonClip 提高稳定性与效率&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;使用 Muon 优化器，已在 Kimi K1.5 中证明能极大提升 token 效率；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;提出 QK-Clip 技术，动态裁剪 attention logits，防止训练不稳定；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 15.5 万亿 token 进行训练，全程，无损失突刺（loss spike）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;架构采用，超稀疏 MoE + 多头隐式注意力（MLA），比 DeepSeek V3 更轻更强。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;数据方面 —— 重写技术增强 token 价值&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;为提升每个 token 的学习效率，Kimi 团队采用两类，智能重写：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;知识重写：通过多视角、多风格的 prompts 重写原文，增强语言多样性；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;数学重写：将数学文档转写为「学习笔记」风格，提高理解与推理能力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;此外，还加入跨语种数学翻译数据，让模型更具多语言泛化能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;四、后训练阶段：打造真正的 Agent&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Kimi K2 在后训练中重点强化了「代理式行为」，包括：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;多阶段指令微调（SFT）&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;构建大规模指令数据集，覆盖知识、代码、推理、对话等多个领域；&lt;/p&gt; 
&lt;p&gt;利用，工具使用数据合成流水线，让模型学会调用复杂工具完成任务；&lt;/p&gt; 
&lt;p&gt;采用人类评审 + LLM 评估，保障生成数据的质量与多样性。&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;强化学习（RL）自我对齐机制&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Verifiable RL：在数学、逻辑、代码等有明确正确性的任务中进行强化；&lt;/p&gt; 
&lt;p&gt;Self-Critique RL：让模型自我比较多个输出，根据评分标准自行打分学习；&lt;/p&gt; 
&lt;p&gt;自适应训练策略：包括 token budget 控制、探索性 temperature 衰减等；&lt;/p&gt; 
&lt;p&gt;简而言之，Kimi 不再仅仅「模仿人」，而是在不断尝试、思考、优化自己的行为，朝「具备目标感与行动能力的智能体」迈进。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;五、开放性与社区友好&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Kimi K2 已在 HuggingFace 完整开源，包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;base 模型与 instruct 模型 checkpoint；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;完整技术报告；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;官方评测基准对齐，方便社区复现与改进。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fhuggingface.co%2Fmoonshotai%2FKimi-K2-Instruct" target="_blank"&gt;huggingface.co/moonshotai/Kimi-K2-Instruct&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;六、总结&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Kimi K2 是当前开源 LLM 中少有的兼具：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;高性能（全面领先多数模型）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;高稳定性（训练过程无损失抖动）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;高代理能力（可作为工具使用者、任务执行者）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;的「通才型大模型」。&lt;/p&gt; 
&lt;p&gt;它不仅在 benchmark 上发光，更重要的是为构建「能感知、能计划、能行动」的通用智能代理打下了坚实基础。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361646</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361646</guid>
      <pubDate>Thu, 17 Jul 2025 03:06:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>国产数据库管理工具 CloudDM v2.6.0.0 发布，支持数据库可视化操作</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#030303"&gt;CloudDM 是 ClouGence 公司推出的面向团队使用的数据库管理工具，支持云上、云下、多云等多种环境，并且提供多达&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;21&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#030303"&gt;&amp;nbsp;种数据源的支持。CloudDM 还支持数据库&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fdevops%2Fdevops_about" target="_blank"&gt;DevOps CI/CD&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#030303"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fdevops%2Fdevops_about" target="_blank"&gt;&amp;nbsp;&lt;/a&gt;功能，将用户产品发布流程中数据库发布和程序发布无缝串联起来。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;更新亮点&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;支持可视化创建、修改、删除数据库对象，包括表、触发器、视图、函数等。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img height="2644" src="https://oscimg.oschina.net/oscnet/up-bff85131572388bd3060648d89a85e90e1a.png" width="3812" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#030303; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;支持查看数据源表、视图、存储过程、函数、触发器等属性。&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img height="3492" src="https://oscimg.oschina.net/oscnet/up-55d848847ac21dfb86334fd60692f3155c8.png" width="5492" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;更新内容&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，对象管理权限和数据库运维权限，用于控制查询控制枱交互式 UI 编辑器的使用。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，可视化创建、修改、删除数据库对象，包括表、触发器、视图、函数等，如若缺少权限可使用可视化页面快速提交工单。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，查看数据库对象（表、视图、物化视图、存储过程、函数、触发器等），支持的数据源包括 MySQL、Oracle、MariaDB、TiDB、 PolarDB-X、PostgreSQL、Db2。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，查看 SQL 语句的查询计划功能，支持的数据源包括 MySQL、TiDB、MariaDB、PolarDB-X、PostgreSQL、Greenplum、Oracle、Db2 for i、Db2 for oz。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增 SQL 审计功能，可以在，配置 -&amp;gt; SQL 审计，页面查看历史执行的 SQL。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增，控制枱的查询结果可以导出为 Excel。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，开启数据脱敏规则后，针对 SQL 语句允许使用别名、JOIN、UNION 等操作。支持的数据源包括 MySQL、Greenplum、PostgreSQL、PolarDB For PG。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，将结构定义 DDL 权限分割为结构定义 DDL、数据库对象定义、Catalog/Schema 定义三个权限。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，对于已访问过的数据库元信息进行缓存，加快二次查询速度。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，已授权限和未授权的区分。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，预览授权可以通过颜色区分本次新增/删除。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 PolarDB-X 数据源视图列表查询为空问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，继承权限问题。在编辑权限时，可动态继承权限。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，来自不同层级的授权时间问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;下载与反馈&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;产品首页：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fclouddm%2F" target="_blank"&gt;https://www.clougence.com/clouddm/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;产品文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2F" target="_blank"&gt;https://www.clougence.com/dm-doc/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;问题反馈：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us" target="_blank"&gt;https://www.clougence.com/dm-doc/intro/contact_us&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fdm-doc%2Fintro%2Fcontact_us%2F" target="_blank"&gt;/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361645</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361645</guid>
      <pubDate>Thu, 17 Jul 2025 03:02:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>智谱 Z.ai 推出开源项目阅读工具 Zread.ai</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Z.ai（智谱）公司&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FZread_ai%2Fstatus%2F1947321954777891012"&gt;上线&lt;/a&gt;了一款名为 Zread.AI&amp;nbsp;的新工具，旨在帮助用户阅读和理解复杂的开源项目。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0722/104950_EX44_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Zread.AI 的功能类似于 Cognition 推出的 DeepWiki，优点是支持中文，目前已经索引了大部分热门开源项目，冷门代码仓库可以申请发起索引。&lt;/p&gt; 
&lt;p&gt;具体来说，用户只需粘贴一个 GitHub 链接，该工具即可生成清晰的项目结构和易于遵循的指南。Zread.AI 还推出了一个名为 「Buzz」 的特色功能，该功能能够首次聚合展示来自社区的真实洞察，包括相关的 commits、issues 和新闻。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361635</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361635</guid>
      <pubDate>Thu, 17 Jul 2025 02:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Qwen3 旗舰版更新：Qwen3-235B-A22B-Instruct-2507-FP8</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;阿里通义千问宣布更新旗舰版 Qwen3 模型，推出 Qwen3-235B-A22B-FP8 非思考模式（Non-thinking）的更新版本，命名为 Qwen3-235B-A22B-Instruct-2507-FP8。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;具体来说，&lt;strong&gt;Qwen3-235B-A22B-Instruct-2507-FP8&amp;nbsp;&lt;/strong&gt;具有以下主要增强功能：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;一般能力&lt;strong&gt;有显著提高，包括&lt;/strong&gt;&lt;strong&gt;遵循指令、逻辑推理、文本理解、数学、科学、编码和工具使用&lt;/strong&gt;。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;跨多种语言的&lt;/strong&gt;长尾知识覆盖率&lt;strong&gt;大幅提升&lt;/strong&gt;。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;在主观和开放式任务中&lt;/strong&gt;&lt;strong&gt;明显更好地&lt;/strong&gt;与用户偏好保持一致，从而能够获得更多有用的回应和更高质量的文本生成。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;大幅提升了长文本处理的能力，扩展到 256K 的文本长度。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="313" src="https://oscimg.oschina.net/oscnet/up-7c06d16beba0ad60c33410d15d6158ad917.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;性能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="1021" src="https://static.oschina.net/uploads/space/2025/0722/104117_dP2t_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#000000"&gt;为了达到最佳性能，阿里官方建议采用以下设置：&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;采样参数：&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;建议使用&lt;code&gt;Temperature=0.7&lt;/code&gt;,&amp;nbsp;&lt;code&gt;TopP=0.8&lt;/code&gt;,&amp;nbsp;&lt;code&gt;TopK=20&lt;/code&gt;和&lt;code&gt;MinP=0&lt;/code&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;对于支持的框架，可以在 0 到 2 之间调整&lt;code&gt;presence_penalty&lt;/code&gt; 参数，以减少无休止的重复。不过，使用较高的值偶尔可能会导致语言混合和模型性能的轻微下降。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;足够的输出长度：建议对于大多数查询使用 16,384 个 token 的输出长度，这对于指导模型来说已经足够了。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;标准化输出格式：建议在基准测试时使用提示来标准化模型输出。&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;数学问题：在提示词中包含「Please reason step by step, and put your final answer within \boxed{}.」。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style="color:#000000"&gt;多项选择题：在提示词中添加以下 JSON 结构以标准化响应：「Please show your choice in the&amp;nbsp;&lt;code&gt;answer&lt;/code&gt;&amp;nbsp;field with only the choice letter, e.g.,&amp;nbsp;&lt;code&gt;"answer": "C"&lt;/code&gt;.」&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361625</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361625</guid>
      <pubDate>Thu, 17 Jul 2025 02:36:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>鸿蒙 NEXT 实战：构建安全高效的在线支付应用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;本文旨在深入探讨华为鸿蒙 HarmonyOS NEXT 系统（截止目前 API12）在开发多语言电商平台方面的技术细节，基于实际开发实践进行总结。主要作为技术分享与交流载体，难免错漏，欢迎各位同仁提出宝贵意见和问题，以便共同进步。本文为原创内容，任何形式的转载必须注明出处及原作者。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在数字化金融蓬勃发展的今天，在线支付应用的安全性和稳定性至关重要。本次，我们将基于鸿蒙 NEXT 系统，深入探讨如何开发一个功能完备的在线支付应用，涵盖从架构设计到核心功能实现的全过程，全面展现鸿蒙 NEXT 在金融科技领域的强大实力。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;一、架构设计：Clean Architecture 的应用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）Clean Architecture 概述&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;Clean Architecture 是一种分层架构模式，将应用划分为多个独立的层次，每个层次都有明确的职责，使得代码结构清晰、易于维护和测试。在在线支付应用中，这种架构能够有效隔离业务逻辑、数据存储和用户界面，提高应用的安全性和稳定性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）表现层（Presentation Layer）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;表现层负责与用户进行交互，展示应用的界面和接收用户输入。在在线支付应用中，包括登录界面、银行卡绑定界面、支付密码设置界面、支付订单界面等。我们将使用 ArkUI 框架构建美观、易用的用户界面，确保用户能够流畅地进行操作。例如，通过 TextField 组件接收用户输入的银行卡号、密码等信息，Button 组件实现各种操作按钮的功能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）应用层（Application Layer）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;应用层作为表现层和领域层之间的桥梁，负责协调业务逻辑的执行。它接收表现层的用户请求，调用领域层的业务逻辑处理方法，并将处理结果返回给表现层。例如，当用户点击银行卡绑定按钮时，应用层负责验证用户输入的信息格式，然后调用领域层的银行卡绑定方法进行实际的绑定操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）领域层（Domain Layer）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;领域层包含了应用的核心业务逻辑，如银行卡绑定逻辑、支付密码验证逻辑、支付订单处理逻辑等。它不依赖于任何外部框架或技术，只专注于业务规则的实现。例如，在银行卡绑定逻辑中，验证银行卡号的有效性、与银行系统进行交互验证等操作都在领域层完成。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（五）数据层（Data Layer）&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;数据层负责数据的存储和获取，与数据库、网络服务等进行交互。在在线支付应用中，它负责存储用户的银行卡信息、支付密码等敏感数据（经过加密处理），以及与支付服务器进行通信，获取支付结果等信息。我们将使用鸿蒙 NEXT 的安全存储 API 和网络通信 API 来实现数据层的功能。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（六）各层之间的依赖关系&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;Clean Architecture 强调各层之间的单向依赖，表现层依赖于应用层，应用层依赖于领域层，领域层依赖于数据层。这种依赖关系确保了各层的独立性和可测试性，使得应用的维护和扩展更加容易。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;二、权限申请与安全机制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）权限机制与安全原则&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;在线支付应用涉及用户的敏感信息和资金交易，安全是首要任务。鸿蒙 NEXT 的权限机制为我们提供了坚实的安全保障，确保应用在合法、安全的前提下获取用户授权，保护用户数据和资金安全。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）用户授权的应用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.&amp;nbsp;读取剪贴板权限（用于粘贴银行卡号）&lt;/strong&gt;&lt;br&gt; 当用户在银行卡绑定界面选择粘贴银行卡号时，应用需要申请读取剪贴板权限（ohos.permission.READ_PASTEBOARD）。在用户点击粘贴按钮时，应用应动态申请该权限。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="5.png" height="254" src="https://oscimg.oschina.net/oscnet//60149314fc463ad5c215f21249360d7f.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="6.png" height="286" src="https://oscimg.oschina.net/oscnet//6e60984067e9a6d07f930aa0b63c5abe.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）安全控件的使用&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.&amp;nbsp;粘贴控件（读取银行卡号）&lt;/strong&gt;&lt;br&gt; 为了方便用户输入银行卡号，我们使用粘贴控件。当用户在银行卡号输入框点击粘贴按钮时，应用调用粘贴控件读取剪贴板中的银行卡号。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="7.png" height="305" src="https://oscimg.oschina.net/oscnet//683462379734b38e03e2355e28af71a4.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;用户点击粘贴控件后，应用将读取到的银行卡号填充到输入框中，方便用户操作。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;三、核心功能实现&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（一）银行卡绑定功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;信息验证&lt;/strong&gt;&lt;br&gt; 在用户输入银行卡号、开户行、持卡人姓名等信息后，应用在应用层进行初步的信息格式验证，如银行卡号的位数、开户行的有效性等。然后在领域层，通过与银行系统的接口（假设通过网络通信 API 与银行服务器进行交互）进行更严格的验证，确保银行卡信息的准确性和可用性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;数据加密与存储&lt;/strong&gt;&lt;br&gt; 验证通过后，在数据层对银行卡信息进行加密处理，然后存储到本地安全存储区域（使用鸿蒙 NEXT 的安全存储 API）。加密算法可以选择行业标准的加密算法，如 AES 等，确保用户银行卡信息的安全性。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="8.png" height="210" src="https://oscimg.oschina.net/oscnet//f821f164c2b8677eb862bc487b5e1ccc.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（二）&amp;nbsp;支付密码设置功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1.密码强度验证&lt;/strong&gt;&lt;br&gt; 用户设置支付密码时，在应用层对密码强度进行验证，要求密码包含字母、数字、特殊字符等，且长度符合要求。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="9.png" height="107" src="https://oscimg.oschina.net/oscnet//4d35a3b647cc362ac7c597c9a474b320.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2.密码加密与存储&lt;/strong&gt;&lt;br&gt; 支付密码同样需要进行加密处理后存储到本地安全存储区域。加密方式与银行卡信息加密类似，确保密码的安全性。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="10.png" height="128" src="https://oscimg.oschina.net/oscnet//8a1436b5787ec08bc0d85c500d5013fb.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（三）&amp;nbsp;支付订单功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;1、订单信息生成与加密&lt;/strong&gt;&lt;br&gt; 当用户发起支付订单时，应用在应用层生成订单信息，包括商品信息、金额、订单号等，然后在领域层对订单信息进行加密处理（可以使用与银行卡信息不同的加密密钥）。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="11.png" height="210" src="https://oscimg.oschina.net/oscnet//d9815700ea5826789f49e561bb41de1b.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;2、&amp;nbsp;发送支付请求与接收结果&lt;/strong&gt;&lt;br&gt; 使用网络通信 API 将加密后的订单信息发送到支付服务器，支付服务器进行解密和验证后，返回支付结果。应用接收支付结果并在表现层展示给用户。例如：&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="12.png" height="290" src="https://oscimg.oschina.net/oscnet//e58f3e879a02a2b81cdf9cec8efe3e3f.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;（四）安全功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;防止数据泄露&lt;/strong&gt;&lt;br&gt; 除了对敏感数据进行加密存储外，应用在运行过程中要确保数据在内存中的安全。例如，在处理银行卡信息和支付密码时，尽量减少数据在内存中的停留时间，使用后及时清除。同时，防止应用被调试或反编译，通过鸿蒙 NEXT 的安全机制，如代码混淆、加固等手段，增加恶意者获取数据的难度。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;防止恶意恶意&lt;/strong&gt;&lt;br&gt; 在网络通信方面，使用安全的网络协议（如 HTTPS），对网络请求进行签名和验证，防止中间人恶意和恶意数据。在应用层和领域层，对用户输入进行严格的验证和过滤，防止 SQL XX、XSS 恶意等常见的网络恶意手段。例如，在处理用户输入的订单信息时，对特殊字符进行转义处理，防止 SQL XX 恶意。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;四、总结与展望&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;通过本次实战，我们成功构建了一个基于鸿蒙 NEXT 系统的在线支付应用，涵盖了银行卡绑定、支付密码设置和支付订单等核心功能。在开发过程中，我们深入运用了鸿蒙 NEXT 的 Clean Architecture 架构、权限机制、安全控件、剪贴板操作和网络操作等关键技术，确保了应用的安全性、稳定性和功能性。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;展望未来，随着金融科技的不断发展和用户需求的日益多样化，我们可以进一步优化在线支付应用的功能。例如，引入生物识别技术（如指纹识别、人脸识别），提升支付的便捷性和安全性。同时，加强与更多金融机构和商家的合作，拓展支付场景，为用户提供更加全面、便捷的支付服务。希望本文能够为鸿蒙 NEXT 同行者在金融应用开发领域提供有益的参考和借鉴，共同推动鸿蒙 NEXT 在金融科技领域的应用发展。&lt;/p&gt; 
&lt;p style="color:#555555; margin-left:0; margin-right:0; text-align:left"&gt;踏入鸿蒙世界的敲门砖，标志着您在技术征途上的全新起点，提升就业竞争力，获得行业认可，点亮职业成长先机，快人一步抢占未来应用开发赛道！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361621</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361621</guid>
      <pubDate>Thu, 17 Jul 2025 02:28:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>禅道开源版 21.7.3 发布，优化了文档编辑器的表格功能和使用体验</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;大家好，&lt;strong&gt;禅道开源版 21.7.3 发布啦！&lt;/strong&gt;本次发布主要&lt;strong&gt;优化了文档编辑器的表格功能和使用体验。&lt;/strong&gt;文档工具栏中放出来更多高频操作的按钮， 并在「更多」菜单中新增了「插入禅道数据」入口，操作更便捷。同时，&lt;strong&gt;文档中的简单表格支持了拆分与合并功能，&lt;/strong&gt;表格编辑更灵活！欢迎大家下载升级。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;新版本将为用户带来更好的使用体验和更高的工作效率，感谢大家一直以来的支持和反馈，我们将继续努力提供更优秀的产品和服务！&lt;/p&gt; 
&lt;h2&gt;新增功能点&lt;/h2&gt; 
&lt;h3&gt;文档功能优化：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化编辑器固定工具栏中常显的按钮&lt;/li&gt; 
 &lt;li&gt;在文档顶部工具栏的更多下拉菜单中打印插入禅道数据按钮&lt;/li&gt; 
 &lt;li&gt;文档新编辑器中插入的简单表格支持拆分单元格&lt;/li&gt; 
 &lt;li&gt;文档新编辑器中插入的简单表格支持合并单元格&lt;/li&gt; 
 &lt;br&gt; 
 &lt;li&gt;&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;禅道本次发布数据如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatic.zentao.net%2Fweb%2Fdata%2Fupload%2Fzentao%2F202507%2Ff_9a89742ead04c8d9b34523636ba38dad.webp" target="_blank"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//1444bb226d122362d18303ce41e7746f.webp" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;本期优化的全部需求和 Bug：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Feasysoft%2Fzentaopms%2Fblob%2Fzentaopms_21.7.3_20250721%2Fdoc%2FCHANGELOG" target="_blank"&gt;&lt;span style="color:#007aff"&gt;请点击查看&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;▼优化编辑器固定工具栏中常显的按钮。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatic.zentao.net%2Fweb%2Fdata%2Fupload%2Fzentao%2F202507%2Ff_9830e773e11876e92b81c3281a6e5865.webp" target="_blank"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//ea2b393364d75d72600ea51534bbd24d.webp" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;▼在文档顶部工具栏的更多下拉菜单中打印插入禅道数据按钮。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatic.zentao.net%2Fweb%2Fdata%2Fupload%2Fzentao%2F202507%2Ff_e661f3b6cfac0f7fbb96eccb9a9f9686.webp" target="_blank"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//51d276d8a9b4a4acbafb2215b62654c1.webp" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;▼文档新编辑器中插入的简单表格支持拆分单元格。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatic.zentao.net%2Fweb%2Fdata%2Fupload%2Fzentao%2F202507%2Ff_b6182de785e68067be6cff0bab7e9041.webp" target="_blank"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e747184e14878380052343b95deab88a.webp" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;▼文档新编辑器中插入的简单表格支持合并单元格。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatic.zentao.net%2Fweb%2Fdata%2Fupload%2Fzentao%2F202507%2Ff_a192f05c0a02708b87ed973eeaafd4df.webp" target="_blank"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//fefb94a976561c715d30579552403f56.webp" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;h2&gt;下载链接&lt;/h2&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#39485d; font-family:&amp;quot;Source Han Sans SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;PingFang SC&amp;quot;; font-size:13px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; max-width:100%; orphans:2; scrollbar-color:#c1c1c1 #f1f1f1; scrollbar-width:thin; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:1214.4px; word-break:break-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;Windows 一键安装包&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-zbox.win64.exe" target="_blank"&gt;&lt;span&gt;&lt;span&gt;64 位&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;Linux 一键安装包&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-zbox_amd64.tar.gz" target="_blank"&gt;&lt;span&gt;amd64 位&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-zbox_arm64.tar.gz" target="_blank"&gt;&lt;span&gt;arm64 位&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:middle"&gt;&lt;span style="color:#e53333"&gt;注：Linux 一键安装包必须直接解压到 /opt 目录下。&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;源码包下载（tar.xz）： 可以通过 tar 命令或者解压工具解压&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.0.tar.xz" target="_blank"&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.1.tar.xz" target="_blank"&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.2_7.4.tar.xz" target="_blank"&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php8.1.tar.xz" target="_blank"&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;源码包下载（zip）&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.0.zip" target="_blank"&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.1.zip" target="_blank"&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.2_7.4.zip" target="_blank"&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php8.1.zip" target="_blank"&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;DEB 包下载：可以通过 dpkg 包管理器在 Ubuntu 和 Debian 系统下安装&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS_21.7.3-php7.0-1_all.deb" target="_blank"&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS_21.7.3-php7.1-1_all.deb" target="_blank"&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS_21.7.3-php7.2_7.4-1_all.deb" target="_blank"&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS_21.7.3-php8.1-1_all.deb" target="_blank"&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;RPM 包下载：可以通过 rpm 包管理器在 Centos 系统下安装&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.0-1.noarch.rpm" target="_blank"&gt;&lt;span&gt;php7.0&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.1-1.noarch.rpm" target="_blank"&gt;&lt;span&gt;php7.1&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php7.2_7.4-1.noarch.rpm" target="_blank"&gt;&lt;span&gt;php7.2_7.4&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentao%2F21.7%2FZenTaoPMS-21.7.3-php8.1-1.noarch.rpm" target="_blank"&gt;&lt;span&gt;php8.1&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px; vertical-align:middle"&gt;&lt;span&gt;最新版禅道客户端下载链接（联系右侧客服获取试用）&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;Windows10+&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.win64.setup.exe" target="_blank"&gt;&lt;span&gt;安装包&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.win64.zip" target="_blank"&gt;&lt;span&gt;压缩包&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.linux64.deb" target="_blank"&gt;&lt;span&gt;安装包&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.linux64.tar.gz" target="_blank"&gt;&lt;span&gt;压缩包 (.tar.gz)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.linux64.zip" target="_blank"&gt;&lt;span&gt;压缩包 (.zip)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.linuxarm64.deb" target="_blank"&gt;&lt;span&gt;arm64 位&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;macOS&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px; width:360px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.mac.dmg" target="_blank"&gt;&lt;span&gt;安装包 (Intel)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.mac.m1.dmg" target="_blank"&gt;&lt;span&gt;安装包 (Apple Silicon)&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fzentaoclient.mac64.zip" target="_blank"&gt;&lt;span&gt;压缩包&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;最新版禅道客户端服务器下载链接（联系右侧客服获取试用）&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fxxd.9.3.win64.zip" target="_blank"&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fxxd.9.3.linux.x64.tar.gz" target="_blank"&gt;&lt;span&gt;Linux&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fzentaoclient%2F9.3%2Fxxd.9.3.mac.tar.gz" target="_blank"&gt;&lt;span&gt;macOS&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;span&gt;禅道 Gogs 安装包下载链接&lt;/span&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_darwin_amd64" target="_blank"&gt;&lt;span&gt;macOS amd64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_linux_amd64" target="_blank"&gt;&lt;span&gt;Linux amd64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_windows_amd64.exe" target="_blank"&gt;&lt;span&gt;Windows amd64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_darwin_arm64" target="_blank"&gt;&lt;span&gt;macOS arm64&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fdl%2Fgogs%2F0.12%2Fgogs_linux_arm64" target="_blank"&gt;&lt;span&gt;Linux arm64&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Docker 镜像:&lt;span style="color:#337fe5"&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2Fr%2Feasysoft%2Fzentao%2Ftags" target="_blank"&gt;&lt;span style="color:#337fe5"&gt;点击这里&lt;/span&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;h2&gt;&amp;nbsp;&lt;/h2&gt; 
&lt;h2&gt;帮助手册&lt;/h2&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;安装文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fbook%2Fzentaopms%2F455.html" target="_blank"&gt;https://www.zentao.net/book/zentaopms/455.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;升级文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fbook%2Fzentaopms%2F460.html" target="_blank"&gt;https://www.zentao.net/book/zentaopms/460.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;持续优化，定期更新，禅道一直在路上。&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361620</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361620</guid>
      <pubDate>Thu, 17 Jul 2025 02:28:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>经济学家警告：AI 泡沫或将比互联网泡沫更严重</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;经济学家托尔斯滕・斯洛克（Torsten Slok）发近日出警告，称当前的人工智能（AI）泡沫可能比上世纪 90 年代末的互联网泡沫更为严重。斯洛克是阿波罗全球管理公司的首席经济学家，他在一份广泛传播的报告中指出，当前标准普尔 500 指数（S&amp;amp;P500）&lt;span&gt;前十&lt;/span&gt;名公司的估值显著高于 1990 年代的水平。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="376" src="https://oscimg.oschina.net/oscnet/up-1e2c52de0779e855d42924bc124be66222f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;斯洛克提到，当前标准普尔 500 指数&lt;span&gt;前十&lt;/span&gt;名公司的市盈率（P/E）不断攀升，已经超越了 1990 年代的记录。市盈率通常被视为一种衡量股票价格相对于公司盈利水平的指标，较高的市盈率意味着股票价格&lt;span&gt;极高&lt;/span&gt;。&lt;span&gt;最新&lt;/span&gt;数据显示，这些公司的市盈率持续上升，而它们的盈利水平却并未同步增长，市场的热情似乎正在脱离理性。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;科技巨头们对 AI 的热情不断推动市场，尤其是 AI 芯片制造商英伟达在标准普尔 500 指数中的表现尤为突出，紧随其后的是微软、苹果、亚马逊、Meta 和谷歌等公司。虽然这些公司在 AI 基础设施上的投入高达数十亿美元，但它们的收益依旧无法与这些支出相匹配，市场的高估值令人担忧。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;与此相似，AI 批评人士艾德・齐特龙（Ed Zitron）也将当前的 AI 热潮比作 2007 年的次贷危机，这一危机导致了美国房地产市场的崩溃。硅谷对 AI 的持续追逐在今年初遭遇考验，当时一家名为 DeepSeek 的中国 AI 公司展示了其 AI 聊天机器人在训练过程中所需的计算能力远低于其他大型语言模型的竞争者，这引发了超过 1 万亿美元的市场抛售。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;虽然 AI 工具如 ChatGPT 和谷歌的 Gemini 在 2023 年获得了极大的关注，但其收入与数十亿美元的基础设施投资相比依然微不足道。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;根据标准普尔全球研究的一份报告，预计到 2029 年，生成性 AI 市场的总收入将以惊人的速度增长，达到 850 亿美元。然而，这一数字与 Meta 在 2023 年计划投入的超过 600 亿美元的资本支出相比，仍显得微不足道。因此，科技公司需要向投资者证明，巨额的 AI 投资终将带来回报，而不会重蹈历史上最严重的股市崩盘的覆辙。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361618</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361618</guid>
      <pubDate>Thu, 17 Jul 2025 02:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>快手开源 AutoThink 大模型 KAT-V，40B 性能逼近 R1-0528</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;快手近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FVQo5uRAJGGqhwlf7it1GlA" target="_blank"&gt;发布&lt;/a&gt;并开源了 KAT-V1 自动思考（AutoThink）大模型，这是一款融合思考与非思考能力、并且可以根据问题难度自动切换思考形态的模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公告称，KAT-V1 模型共有 40B 和 200B 两个版本。在自动思考模式下，40B 版本的性能可追平今年 5 月发布的新版 DeepSeek-R1（参数量为 6850 亿）。而 200B 版本的模型，则在多项基准测试中超过了 Qwen、DeepSeek 和 Llama 这三大开源模型家族中的旗舰模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="190" src="https://oscimg.oschina.net/oscnet/up-6d4181b792c7809e665692736de58f77f0f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在 LiveCodeBench Pro 基准测试中，KAT-V1 也以 40B 的参数成功跻身于闭源模型之列，超越一众思考/非思考的开源模型。目前，KAT-V1 模型家族的 40B 版本已开源上线。技术报告透露，200B 版本的 MoE 模型仍在训练过程中。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="349" src="https://oscimg.oschina.net/oscnet/up-d43fbd44b3b2178e7de9ea8513a33d41d02.webp" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;KAT-V1 模型由 Qwen2.5-32B 扩展而来，通过分层定向扩展的策略，将模型参数量有选择地扩展到 40B，减少了无效的参数增长，实现规模与计算效率的平衡。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在 KAT-V1 模型的预训练阶段，Kwaipilot 团队构造了大量的思考/非思考数据。对于非思考数据，为了保证问题的广泛性，他们从预先收集的 5TB tokens 预训练数据中，抽取出部分带有推理特征、具有一定难度的多领域数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="336" src="https://oscimg.oschina.net/oscnet/up-8292fd097c0e95bbd9e0232987356a422bd.webp" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;思考数据则使用一个 Agentic 框架来合成。该框架由解答者（solver）、思考者（thinker）和评论者（critic）组成。解答者先提供初步答案，思考者对解决方案进行反思和迭代改进，评论者对整个流程进行监督，以保证逻辑一致性和输出质量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;这一框架可在一定程度上提升合成数据的质量——只有经过核验的高质量合成数据才能被保留，并转化为长思维链（long-CoT）数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;预训练阶段，Kwaipilot 团队使用了大约 1000 万个示例的语料，其中约 34.8% 的数据为思考数据，约 65.2% 的数据为非思考数据。这些数据涵盖了科学、代码、数学、工具调用和通用知识等广泛领域，给模型的能力泛化提供基础。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;Kwaipilot 团队选择通过模型蒸馏的方式完成模型的初始化冷启动——先让一个大型教师模型在输入数据上输出详细的概率分布，再让较小的学生模型在相同输入下产生预测，通过最小化两者之间的差异，使学生模型学习教师模型的预测模式和知识。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;不过，KAT-V1 采用了独特的异构蒸馏框架，能够更高效地将教师模型的知识传递给学生模型。该框架由通用 Logits 蒸馏损失（ULD Loss）和多 Token 预测（MTP）两大模块组成。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="128" src="https://oscimg.oschina.net/oscnet/up-7fa488f4839e384c6958dc80eb6ce5cc4ab.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;整体上，这个设计大大提高了知识迁移的效率，让小模型在冷启动时用较少算力就能快速获得较好的性能。Kwaipilot 团队透露，他们以传统方法 1/30 的成本，完成了模型的冷启初始化。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;Kwaipilot 团队还提出了一种分布式奖励的强化学习算法：Step-SRPO。在 Step-SRPO 框架中，模型先进行「推理必要性评估」，判断每个问题是否需要深入思考，以避免对简单问题浪费计算资源。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;随后，通过双重奖励机制引导学习：判断奖励（Judge Reward）根据模型是否正确选择推理模式打分，鼓励准确判断推理需求；答案奖励（Answer Reward）依据最终回答的正确性和质量进行评分，并结合判断奖励进行调整，确保回答质量和推理选择相一致。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="267" src="https://oscimg.oschina.net/oscnet/up-524071521d5090e62d5e49d6a0fccff2387.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;数据显示，由于强化学习的奖励策略，模型选择思考模式的比例不断降低。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="255" src="https://oscimg.oschina.net/oscnet/up-b218aecc2b7006d8c87e806732cc88b853a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;这种趋势在测试集上的表现更为明显，模型在多个测试集的平均 token 数下降了 20%-30%，其中复杂推理榜单 (例如 AIME 2025/2024、LCB、GPQA) 变化趋势最小，但是相对简易榜单的比例下降趋势更为明显。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="246" src="https://oscimg.oschina.net/oscnet/up-b899d2a35cff3183bd96fdbc70e220586cf.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;Step-SRPO 让模型在训练中逐步学会既能保持高准确性，也能根据问题难度灵活调整推理深度，最终实现在模型性能上涨的前提下，还能进一步降低 token 的使用，提升了模型输出 token 的思考密度以及对是否应该开启思考模式判断的智能程度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;强化学习训练后，KAT-V1 40B 成功学会了自动在某些简单问题上切换到非思考模式，模型性能在保持和 DeepSeek-R1-0528 接近的水位下，平均 token 消耗降低。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;&lt;img height="222" src="https://oscimg.oschina.net/oscnet/up-83dfac1a38035b2f80be00105ef4ea09f8a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FVQo5uRAJGGqhwlf7it1GlA" target="_blank"&gt;查看官方公告&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/361613</link>
      <guid isPermaLink="false">https://www.oschina.net/news/361613</guid>
      <pubDate>Thu, 17 Jul 2025 02:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>开发者的福音：Zadig 支持飞书单点登录，告别 10+ 密码记忆</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;&lt;img height="798" src="https://oscimg.oschina.net/oscnet/up-f48276dfe9e43046c202f3ed7e26ac7d2d1.png" width="1876" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在当今数字化办公浪潮中，飞书已成为众多企业团队协作的首选平台，其高效、便捷的沟通方式深受用户喜爱。然而，在开发领域，多系统多账号的管理一直是让开发者们头疼不已的难题。为了解决这一问题，Zadig 正式宣布支持飞书单点登录（SSO），开发者可以通过飞书账号直接登录 Zadig，告别多账号管理的烦恼，享受更高效、更安全的开发体验。&lt;/p&gt; 
&lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;Zadig 与飞书集成的优势&lt;/h1&gt; 
&lt;p&gt;通过将 Zadig 与飞书账号系统集成，开发者可以享受以下优势：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;单点登录&lt;/strong&gt;：使用飞书账号直接登录 Zadig，无需额外创建和管理账号，简化登录流程。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;增强安全性&lt;/strong&gt;：飞书提供了多层次的安全认证机制，确保账号和数据的安全性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;提高效率&lt;/strong&gt;：减少账号管理的复杂性，让开发者更专注于核心开发工作。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;统一身份管理&lt;/strong&gt;：企业可以通过飞书统一管理员工账号，提升管理效率。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;集成步骤详解&lt;/h1&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;步骤 1：创建飞书应用&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;访问飞书开放平台&lt;/strong&gt;：登录飞书开放平台（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopen.feishu.cn%2F" rel="nofollow" target="_blank"&gt;https://open.feishu.cn&lt;/a&gt;），创建一个新的「企业自建应用」。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img height="1520" src="https://oscimg.oschina.net/oscnet/up-34d308c170afcfb2c80044eae14f5ccab14.png" width="2950" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;开通权限：&lt;/strong&gt; 在权限管理中，配置以下权限项：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;contact:user.email:readonly&lt;/code&gt;：获取用户邮箱信息。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;contact:user.phone:readonly&lt;/code&gt;：获取用户手机号。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1520" src="https://oscimg.oschina.net/oscnet/up-5ac0e62a42aee4f74a6ffb079bfcebb032c.png" width="2950" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;获取 App ID 和 App Secret&lt;/strong&gt;：在应用创建完成后，获取应用的 App ID 和 App Secret，这些信息将用于后续的 Zadig 配置。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img height="1520" src="https://oscimg.oschina.net/oscnet/up-e7cb7cf5c7014a6eb3bd36750d439ffba19.png" width="2950" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;发布飞书应用&lt;/strong&gt;：创建版本并发布飞书应用，确保应用处于可用状态。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;步骤 2：配置 Zadig 账号集成&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;访问 Zadig 系统设置&lt;/strong&gt;：登录 Zadig 系统，进入系统设置 -&amp;gt; 系统集成 -&amp;gt; 账号系统，选择「飞书」作为集成方式，将步骤 1 中获取的 App ID 和 App Secret 填入相应的字段中。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img height="1520" src="https://oscimg.oschina.net/oscnet/up-092faa4c15cd36fee98bda679c6ea7dcd2f.png" width="2950" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;获取 Callback 地址&lt;/strong&gt;：在 Zadig 配置页面中，获取 Callback 地址。这个地址将用于飞书开放平台中的回调配置。配置完成后，将飞书账号系统设置为默认账号系统。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img height="1514" src="https://oscimg.oschina.net/oscnet/up-2ead595169bddc697b1f2cf20debeb01280.png" width="2944" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1516" src="https://oscimg.oschina.net/oscnet/up-250680db4307ed77f8c12be4bc2e9892bb0.png" width="2956" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;配置飞书回调地址&lt;/strong&gt;：回到飞书开放平台，将 Zadig 提供的 Callback 地址配置到飞书应用的回调地址中。确保回调地址正确无误，以便飞书能够将认证信息正确传递回 Zadig。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img height="1520" src="https://oscimg.oschina.net/oscnet/up-16c3f54b2860c2b28004f71ad1bdc459c5d.png" width="2950" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_5"&gt;&lt;/span&gt; 
&lt;h1&gt;使用飞书账号登录 Zadig&lt;/h1&gt; 
&lt;p&gt;配置完成后，访问 Zadig，完成飞书账号认证即可快速登录 Zadig。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1516" src="https://oscimg.oschina.net/oscnet/up-f40ce579a4ecdb8caab3468708e65d5498c.png" width="2956" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_6"&gt;&lt;/span&gt; 
&lt;h1&gt;结语&lt;/h1&gt; 
&lt;p&gt;Zadig 与飞书的集成，为开发者提供了无缝的单点登录体验，简化了多账号管理的复杂性。未来，Zadig 将继续扩展与主流企业工具的集成能力，帮助团队更专注于核心业务，释放更大的生产力。&lt;/p&gt; 
&lt;p style="color:#ff4c88; margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;即日起，Zadig 新版发布&lt;br&gt; 扫码咨询抢先体验&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img height="943" src="https://oscimg.oschina.net/oscnet/up-0c7876673ed701ed97107bb53b607d661dd.png" width="1797" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank" rel="nofollow"&gt;Zadig 在 Github&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href="https://gitee.com/koderover/zadig" rel="nofollow"&gt;Zadig 在 Gitee&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style="color:#002a64; margin-left:0; margin-right:0"&gt;&lt;a href="https://my.oschina.net/koderover/blog/17622087" target="_blank" rel="nofollow"&gt;Zadig：首个深度集成 DeepSeek 的 DevOps 平台&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href="https://my.oschina.net/koderover/blog/11210095" target="_blank" rel="nofollow"&gt;Zadig 官网博客正式发布，技术干货实践管饱&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href="https://my.oschina.net/koderover/blog/16492101" target="_blank" rel="nofollow"&gt;流水线早已 out 了？你需要更高效能的工作流&lt;/a&gt;&amp;nbsp;/&lt;span style="background-color:#ffffff; color:#002a64"&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://my.oschina.net/koderover/blog/10316143" target="_blank" rel="nofollow"&gt;Jenkins 迁移 Zadig，新项目实施上线效率提升 6 倍&lt;/a&gt;&amp;nbsp;/&lt;a href="https://my.oschina.net/koderover/blog/17644385" target="_blank" rel="nofollow"&gt;Zadig 辞旧迎新发布 V3.3，更好看更好用超稳定&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/koderover/blog/18043823</link>
      <guid isPermaLink="false">https://my.oschina.net/koderover/blog/18043823</guid>
      <pubDate>Thu, 17 Jul 2025 02:04:00 GMT</pubDate>
      <author>原创</author>
    </item>
  </channel>
</rss>
