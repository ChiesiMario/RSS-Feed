<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 29 May 2025 12:43:11 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Ollama v0.8.0 发布，支持通过工具调用进行流式响应</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Ollama v0.8.0 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Follama%2Follama%2Freleases%2Ftag%2Fv0.8.0" target="_blank"&gt;已发布&lt;/a&gt;，新版本带来了通过工具调用进行流式响应 (Streaming responses with tool calling) 功能，让开发者构建的聊天应用从此能够像流式输出普通文本一样，实时地调用工具并展示结果。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c1cb4379332c6aa107ff5693761ce0263e9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这一更新使得所有聊天应用都能够在模型生成内容的同时，实时地调用外部工具，并将整个过程（包括模型的思考、工具的调用指令、以及最终的文本回复）流畅地展示给用户。&lt;/p&gt; 
&lt;p&gt;&lt;img height="455" src="https://static.oschina.net/uploads/space/2025/0529/191937_jrgy_2720166.png" width="640" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该功能已在 Ollama 的 Python 和 JavaScript 库以及 cURL API 中得到全面支持。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Ollama v0.8.0&amp;nbsp;的更新亮点包括：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;即时工具调用与内容流式输出：&lt;/strong&gt;&amp;nbsp;应用不再需要等待模型完整响应后才能处理工具调用，模型生成内容和工具调用指令可以同步、分块地流式传输。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;全新智能增量解析器：&lt;/strong&gt;&amp;nbsp;Ollama 构建了新的解析器，它专注于理解工具调用的结构，而不仅仅是寻找 JSON。这使得 Ollama 能够：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;实时分离：&lt;/strong&gt;&amp;nbsp;在流式输出用户内容的同时，准确检测、抑制和解析工具调用相关的 Token。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;兼容广泛模型：&lt;/strong&gt;&amp;nbsp;无论模型是否经过工具特定 Token 的训练，都能有效工作，甚至能处理模型输出的部分前缀或在必要时回退到 JSON 解析。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;提升准确性：&lt;/strong&gt;&amp;nbsp;通过前缀匹配和状态管理，显著改善了工具调用的可靠性，避免了以往可能出现的重复或错误解析问题。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;广泛的模型支持：&lt;/strong&gt;&amp;nbsp;包括 Qwen 3, Devstral, Qwen2.5 系列, Llama 3.1, Llama 4 等众多支持工具调用的模型。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;开发者友好的集成：&lt;/strong&gt;&amp;nbsp;提供了清晰的 cURL, Python, JavaScript 示例，方便快速上手。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模型上下文协议 (MCP) 增强：&lt;/strong&gt;&amp;nbsp;使用 MCP 的开发者现在也可以享受流式聊天内容和工具调用的好处，并且官方建议使用更大的上下文窗口（如 32k）可以进一步提升工具调用的性能和结果质量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p&gt;来源：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fk16PRepQHeCp_1FMpfzuxA" target="_blank"&gt;https://mp.weixin.qq.com/s/k16PRepQHeCp_1FMpfzuxA&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2Fblog%2Fstreaming-tool" target="_blank"&gt;https://ollama.com/blog/streaming-tool&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Follama%2Fstatus%2F1927835844754194638" target="_blank"&gt;https://x.com/ollama/status/1927835844754194638&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352610/ollama-0-8-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352610/ollama-0-8-0</guid>
      <pubDate>Sun, 11 May 2025 11:21:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>​Netflix 联合创始人 Reed Hastings 加入 Anthropic 董事会</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;人工智能公司 Anthropic 最近宣布，Netflix 的联合创始人、董事长以及前首席执行官 Reed Hastings 正式加入其董事会。Hastings 在 2023 年卸任了 Netflix 的共同首席执行官职务；此外，他还曾在 Facebook、微软和彭博社等公司的董事会任职。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="372" src="https://oscimg.oschina.net/oscnet/up-112f5965a8035159bc73d8c94ddeb448fa3.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在公告中，Anthropic 表示，Hastings 不仅在 Netflix 的发展上表现卓越，同时他在教育改革和发展中国家的数字基础设施方面也投入了大量精力。这使得他对如何确保技术能够服务于更广泛的社会目标有着切实的理解。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;Hastings 在一份声明中提到：Anthropic 对人工智能能为人类带来的益处持乐观态度，但也非常清楚经济、社会及安全方面的挑战。我加入 Anthropic 董事会是因为我相信他们在人工智能发展上的方法，并希望帮助人类进步。」&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;Anthropic 的董事会还包括首席执行官 Dario Amodei、总裁 Daniela Amodei、Yasmin Razavi 和 Jay Kreps 等成员。最近，Anthropic 还发布了其&lt;span&gt;最新&lt;/span&gt;的 Claude4 人工智能模型。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352601</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352601</guid>
      <pubDate>Sun, 11 May 2025 09:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>HTAP 已死</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文翻译自：&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mooncake.dev%2Fblog%2Fhtap-is-dead" target="_blank"&gt;《HTAP is Dead》&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;这篇博客受到 Jordan Tigani 文章&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmotherduck.com%2Fblog%2Fbig-data-is-dead%2F" target="_blank"&gt;《Big Data is Dead》&lt;/a&gt;&lt;/em&gt;的启发。&lt;/p&gt; 
&lt;h2&gt;旧时代的岁月（70 年代）&lt;/h2&gt; 
&lt;p&gt;上世纪 70 年代，一个关系型数据库可以完成所有任务。白天处理事务（OLTP），晚上生成报表（OLAP）。像 Oracle V2 和 IBM DB2 这样的数据库在同一系统上运行 OLTP 和 OLAP，主要是因为数据集仍然可以装在几个磁盘上，而计算资源昂贵。&lt;/p&gt; 
&lt;p&gt;没有人称之为混合事务/分析处理（HTAP）；它只是&lt;strong&gt;数据库&lt;/strong&gt;而已。&lt;/p&gt; 
&lt;h2&gt;重大分歧（80 年代）&lt;/h2&gt; 
&lt;p&gt;随着企业拥有更多数据，并提出更复杂的问题，数据库开始显示出它的局限性。&lt;/p&gt; 
&lt;p&gt;事务型和分析型工作负载是朝着相反的方向发展的。OLTP 需要微秒级的插入和单行查找，而 OLAP 则需要全表扫描和大规模的聚合。这导致了持续的争用；分析型工作负载消耗 I/O 和缓存，这些资源对于低延迟的事务型工作负载来说是必需的，反之亦然。&lt;/p&gt; 
&lt;p&gt;解决方案是什么？隔离这些工作负载。到 20 世纪 80 年代初，这种「巨大分歧」已经开始出现。&lt;/p&gt; 
&lt;h2&gt;存储的分离（90 年代）&lt;/h2&gt; 
&lt;p&gt;推动这种分歧的一个关键技术因素是存储架构。OLTP 系统针对基于行的存储进行了优化（快速写入 + 点查询）。而 OLAP 系统则选择基于列的存储，以实现高效的扫描和聚合。&lt;/p&gt; 
&lt;p&gt;到 2000 年代中期，这种分离已经成为行业标准。数据库先驱迈克尔·斯托纳布勒（Michael Stonebraker）在他的论文《One Size Fits All：An Idea Whose Time Has Come and Gone》中标志着这一转变，该论文发表在 ACM Digital Library 上（https://dl.acm.org/doi/abs/10.1145/3226595.3226636）。数据库开始分裂成专门的引擎。&lt;/p&gt; 
&lt;h2&gt;OLTP 和 OLAP 都放弃了 SQL（2000–2010 年代）&lt;/h2&gt; 
&lt;p&gt;横向扩展推动了 OLTP 和 OLAP 之间的距离进一步拉大。&lt;/p&gt; 
&lt;p&gt;早期的分布式 OLTP 数据库（如 MongoDB 这类 NoSQL 引擎）完全摒弃了 SQL 和分析能力。在分析领域，我们看到了 MapReduce 和数据湖架构（Hadoop/HDFS）的采用：以牺牲传统关系型数据库的严格一致性为代价，换取巨大的吞吐量。&lt;/p&gt; 
&lt;h2&gt;意想不到的和解（2010 年代）&lt;/h2&gt; 
&lt;p&gt;在 2010 年代，两种不同的数据库运动逐渐兴起：&lt;/p&gt; 
&lt;p&gt;1. &lt;strong&gt;NewSQL&lt;/strong&gt;（Spanner、CockroachDB、Vitess）。OLTP 应该保持基于 SQL。&lt;br&gt; 2. &lt;strong&gt;云数据仓库&lt;/strong&gt;（Redshift、Snowflake）。OLAP 应该运行在具有更强一致性保证的 SQL 系统上。&lt;/p&gt; 
&lt;p&gt;从表面看，这些系统服务于完全不同的工作负载。但在底层，它们有很多共同点：分布式、MPP 风格的执行，以及 SQL。孤立来看，OLTP 和 OLAP 系统已经收敛于许多相同的架构原则。唯一一个大的不同点是：存储引擎。&lt;/p&gt; 
&lt;p&gt;我们问自己：如果可以将行存储引擎和列存储引擎结合到一个数据库中，会怎样？&lt;/p&gt; 
&lt;h2&gt;没错，就是 HTAP (2014)&lt;/h2&gt; 
&lt;p&gt;2014 年，Gartner &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fdocuments%2F2657815%23%3A%7E%3Atext%3DSummary%2Cmemory%2520computing%2520technologies%2520as%2520enablers" target="_blank"&gt;引入&lt;/a&gt; 术语 HTAP（混合事务和分析处理）：下一代数据库架构。&lt;/p&gt; 
&lt;p&gt;目标是缩小操作系统和分析系统之间的差距。这对于新兴的工作负载，如定价、欺诈检测和个人化，都是必要的。即使在企业层面，决策者也希望获得实时数据。早期的 HTAP 系统展示了这是可以实现的。不过，大部分情况是如此。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.acm.org%2Fdoi%2F10.1145%2F3514221.3526055" target="_blank"&gt;SingleStoreDB&lt;/a&gt; 结合了内存中的行存储、基于磁盘的列存储以及向量化执行引擎——在一个系统中支持快速扫描、查找、过滤、聚合和更新。随着时间的推移，我们发现，在现代硬件的支持下，仅列存储就可以处理大量 OLTP 风格的查询，包括点查找和低延迟的访问模式。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Ftidb%2Fstable%2Ftidb-architecture" target="_blank"&gt;TiDB&lt;/a&gt; 采取了不同的路线，将其 TiKV 行存储与基于 ClickHouse 的独立列式引擎相结合——保持数据的两个副本以服务两种工作负载。&lt;/p&gt; 
&lt;p&gt;所以，这样应该就是全部了，对吧？70 年代的数据乌托邦，唉，终究还是落空了。&lt;/p&gt; 
&lt;h2&gt;云数据仓库是 2020 年代的唯一赢家&lt;/h2&gt; 
&lt;p&gt;云数据仓库显然胜出。NewSQL 运动停滞了……HTAP 呢？它从未获得应有的关注。尽管有真正的技术进步，但它仍然处于预产品市场契合状态。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 替换一个人的 OLTP 系统真的非常困难。&lt;/strong&gt; 请相信&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdb-engines.com%2Fen%2Franking" target="_blank"&gt;DBEngines&lt;/a&gt;的说法：Oracle 和 SQL Server 仍然分别排在第 1 和第 3 位。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 大多数工作负载并不需要分布式 OLTP。&lt;/strong&gt; 硬件变得更快且更便宜了。单台性能强大的机器就可以处理大多数事务型工作负载。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D4jDQi9P9UIw" target="_blank"&gt;Cursor&lt;/a&gt;和&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pixelstech.net%2Farticle%2F1747708863-openai%253a-scaling-postgresql-to-the-next-level" target="_blank"&gt;OpenAI&lt;/a&gt;都是由单台 Postgres 实例驱动的。你完全没问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. 云原生架构更倾向于共享磁盘，而不是共享无磁盘。&lt;/strong&gt; 虽然 NewSQL 系统需要快速的本地存储（甚至需要内存持久性），但云平台则更倾向于对象存储和弹性计算。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. OLTP 和 OLAP 由不同的团队负责。&lt;/strong&gt; OLTP 由产品工程团队负责；OLAP 属于数据团队。激励机制很少一致。没有人因为「整合堆栈」而被晋升。&lt;/p&gt; 
&lt;h2&gt;你的数据栈构成了 HTAP 数据库（今天）&lt;/h2&gt; 
&lt;p&gt;云技术也开始推动从紧密耦合的数据仓库向基于对象存储的模块化数据湖转变。&lt;/p&gt; 
&lt;p&gt;在试图摆脱传统数据仓库/数据库的模式时，数据团队开始自行构建定制系统。这些系统由「最佳组件」构成：&lt;/p&gt; 
&lt;p&gt;1. OLTP 系统和流处理器作为 WAL&lt;br&gt; 2. 开放表格格式如 Iceberg 作为存储引擎&lt;br&gt; 3. 查询引擎如 Spark 和 Trino 用于执行&lt;br&gt; 4. 实时系统如 ClickHouse 或 Elastic 作为索引&lt;/p&gt; 
&lt;p&gt;即使在今天解耦的数据栈中，需求依然不变：在最新的交易数据上实现快速的 OLAP 查询。这现在通过一系列流式管道、云数据湖和实时查询层的网络实现。&lt;/p&gt; 
&lt;p&gt;它仍然是 HTAP；但通过数据库的组合而非整合来实现。这归结为诸如：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 如何将 WAL 应用到我的存储引擎上？&lt;/strong&gt; AKA: 如何高效地从 OLTP 系统将数据同步到数据湖？&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 我能否在我的数据湖上构建一个低成本的索引，并保持同步？&lt;/strong&gt; AKA: 如何将实时数据摄入到湖中？或者如何使用 Postgres 或 Elastic 功能查询湖中的数据？&lt;/p&gt; 
&lt;p&gt;我们当前的 HTAP 挑战归根结底是让湖仓成为实时准备的系统。&lt;/p&gt; 
&lt;p&gt;在花费了我最好的 10 年时间，先是创立，然后是拯救之后，HTAP 作为一种数据库已经死了。&lt;/p&gt; 
&lt;p&gt;但让精神继续存在。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352600/htap-is-dead</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352600/htap-is-dead</guid>
      <pubDate>Sun, 11 May 2025 09:48:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Git 2.50 发布首个 RC 版本</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Git 2.50 首个候选版本已发布，主要变化如下&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;逐步更新多包索引文件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为 .INI 格式配置文件新增一个用户 diff 驱动程序。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Git 帮助命令 "--build-options" 现在会报告构建中使用的 SHA1 和 SHA256 后端。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Git send-email 已更新，以更好地与 Microsoft Outlook SMTP 服务器配合使用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Git fsck 在检查引用时更加谨慎。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;开始弃用并移除 Git 的 merge-recursive&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2Fxmqqzfewsml1.fsf%40gitster.g%2F" target="_blank"&gt;邮件列表公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352595/git-2-50-rc0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352595/git-2-50-rc0</guid>
      <pubDate>Sun, 11 May 2025 09:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Greenmask —— 转储匿名化和合成数据生成工具</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                            &lt;p&gt;&lt;strong style="color:#1f2328"&gt;Greenmask&amp;nbsp;&lt;/strong&gt;是一款功能强大的开源实用程序，专为逻辑数据库备份转储、匿名化、合成数据生成和恢复而设计。&lt;/p&gt;

&lt;p&gt;它已移植 PostgreSQL 库，因此非常可靠。它是无状态的，不需要对数据库架构进行任何更改。它设计为高度可定制，并与现有的 PostgreSQL 实用程序向后兼容，快速可靠。&lt;/p&gt;

&lt;p&gt;&lt;span style="background-color:#fbfbfb; color:#1d1d35"&gt;Greenmask 提供了一套安全的工具来转换你的数据库同时保持完整性，创建一个镜像生产数据的暂存环境并确保高效的测试而不损害信息。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height="248" src="https://static.oschina.net/uploads/space/2025/0407/151056_sbRf_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style="background-color:#fbfbfb; color:#1d1d35"&gt;特点：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong style="color:#1f2328"&gt;&lt;a href="https://docs.greenmask.io/latest/database_subset/"&gt;Database subset&lt;/a&gt;&lt;/strong&gt;—市场上最先进的子集系统之一。它支持&lt;strong&gt;虚拟引用、可空列、多态引用，甚至可以使用&lt;/strong&gt;&lt;strong&gt;循环引用&lt;/strong&gt;对最复杂的架构进行子集化。&lt;/li&gt;
&lt;li&gt;&lt;strong style="color:#1f2328"&gt;&lt;a href="https://docs.greenmask.io/latest/built_in_transformers/transformation_engines/#hash-engine"&gt;Deterministic transformers&lt;/a&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;— 使用哈希函数确保相同输入的输出一致。大多数转换器都支持&lt;code&gt;random&lt;/code&gt;和&amp;nbsp;&lt;code&gt;hash&lt;/code&gt;引擎，为各种用例提供灵活性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.greenmask.io/latest/built_in_transformers/dynamic_parameters/"&gt;动态参数&lt;/a&gt;&lt;/strong&gt;— 大多数转换器都支持动态参数，允许它们根据表列值进行调整。此功能有助于管理列之间的依赖关系并有效满足约束。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.greenmask.io/latest/built_in_transformers/transformation_condition/"&gt;转换条件&lt;/a&gt;&lt;/strong&gt;—仅在满足指定条件时应用转换，这对于定位特定行很有用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.greenmask.io/latest/commands/validate/"&gt;转换验证和轻松维护&lt;/a&gt;&lt;/strong&gt;— Greenmask 在配置期间提供验证警告、数据转换差异和架构差异，从而实现对转换的有效监控和维护。架构差异功能有助于防止架构更改时的数据泄漏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.greenmask.io/latest/built_in_transformers/transformation_inheritance/"&gt;转换继承&lt;/a&gt;&lt;/strong&gt;&amp;nbsp;— 分区表和带外键的表的转换继承。定义一次，应用于全部。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无状态&lt;/strong&gt;—Greenmask 作为逻辑转储运行，不会影响您现有的数据库模式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跨平台&lt;/strong&gt;—由于其基于 Go 的架构消除了平台依赖性，因此可以在任何平台上轻松构建和执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据库类型安全&lt;/strong&gt;—通过验证数据并使用数据库驱动程序进行编码和解码操作来确保数据完整性，从而保留准确的数据格式。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;向后兼容&lt;/strong&gt;— 完全支持与标准 PostgreSQL 实用程序相同的功能和协议。Greenmask 创建的转储可以使用该&lt;code&gt;pg_restore&lt;/code&gt;实用程序无缝恢复。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可扩展&lt;/strong&gt;—用户可以灵活地使用&amp;nbsp;任何编程语言&lt;a href="https://docs.greenmask.io/latest/built_in_transformers/standard_transformers/cmd/"&gt;实现基于领域的转换或使用&lt;/a&gt;&lt;a href="https://docs.greenmask.io/latest/built_in_transformers/advanced_transformers/"&gt;预定义的模板&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并行执行&lt;/strong&gt;—支持并行转储和恢复，以显著加快结果。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多种存储&lt;/strong&gt;—支持本地和远程存储，包括目录和 S3 兼容解决方案。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.greenmask.io/latest/commands/dump/?h=pgzip#pgzip-compression"&gt;Pgzip 支持更快的压缩&lt;/a&gt;&lt;/strong&gt;— 通过设置&lt;code&gt;--pgzip&lt;/code&gt;并行压缩来加速转储和恢复过程。&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/greenmask</link>
      <guid isPermaLink="false">https://www.oschina.net/p/greenmask</guid>
      <pubDate>Sun, 11 May 2025 09:24:00 GMT</pubDate>
    </item>
    <item>
      <title>VTJ 低代码设计器支持了应用增强</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;div&gt; 
  &lt;h1&gt;应用增强&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E5%25BA%2594%25E7%2594%25A8%25E5%25A2%259E%25E5%25BC%25BA" target="_blank"&gt;&lt;/a&gt;&lt;/h1&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;应用增强是指给低代码的应用扩展功能。如增加全局的状态、样式、配置等应用级的功能。&lt;/p&gt; 
  &lt;div&gt; 
   &lt;p style="margin-left:0; margin-right:0"&gt;注意： 该功能仅支持通过官方脚手架 (npm create vtj@latest) 创建的本地开发项目，在线方式不支持。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;h2&gt;开启应用增强&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E5%25BC%2580%25E5%2590%25AF%25E5%25BA%2594%25E7%2594%25A8%25E5%25A2%259E%25E5%25BC%25BA" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;开启该功能需要完成以下三个步骤：&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;在项目 src 目录下创建文件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;enhance.ts&lt;/code&gt;。 这是应用增强插件的默认入口文件，可以配置为其他名称或路径，无特殊需求建议采用配置。 文件的代码需要导出 Vue Plugin。&lt;/p&gt; 
    &lt;div&gt;
     &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
     &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { App } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; 'vue'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { Provider } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; '@vtj/renderer'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;// 可以在此引用 scss 文件，需要用到的工具库，依赖等&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;span style="color:#d73a49"&gt; default&lt;/span&gt;&lt;span style="color:#d73a49"&gt; function&lt;/span&gt;&lt;span style="color:#24292e"&gt; (&lt;/span&gt;&lt;span style="color:#e36209"&gt;app&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; App&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#e36209"&gt;provider&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; Provider&lt;/span&gt;&lt;span style="color:#24292e"&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 应用增强代码&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;main.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件导入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;enhance&lt;/code&gt;, 并传递给&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;createProvider&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法。&lt;/p&gt; 
    &lt;div&gt;
     &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
     &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;// 省略了其他代码&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#24292e"&gt; enhance &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; './enhance'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;span style="color:#24292e"&gt; { &lt;/span&gt;&lt;span style="color:#005cc5"&gt;provider&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#005cc5"&gt;onReady&lt;/span&gt;&lt;span style="color:#24292e"&gt; } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; createProvider&lt;/span&gt;&lt;span style="color:#24292e"&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 省略了其他参数&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  enhance&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;配置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;vite.config.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;开启设计器支持&lt;/p&gt; 
    &lt;div&gt;
     &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
     &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#24292e"&gt; { createViteConfig } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; '@vtj/cli'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#24292e"&gt; { createDevTools } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; '@vtj/local'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;span style="color:#d73a49"&gt; default&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; createViteConfig&lt;/span&gt;&lt;span style="color:#24292e"&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  proxy,&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  plugins: [&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6f42c1"&gt;    createDevTools&lt;/span&gt;&lt;span style="color:#24292e"&gt;({&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;      // 开启增强&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;      enhance: &lt;/span&gt;&lt;span style="color:#005cc5"&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;    })&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  ]&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
    &lt;/div&gt; &lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;通过以上配置， 启动开发环境&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;npm run dev&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;后，在源码运行、设计器视图、预览视图都加载了增强的代码。同时支持热更新。可以利用增强的代码对应用进行个性化的全局配置。&lt;/p&gt; 
  &lt;h2&gt;应用示例&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E5%25BA%2594%25E7%2594%25A8%25E7%25A4%25BA%25E4%25BE%258B" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
  &lt;h3&gt;给应用增加全局样式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E7%25BB%2599%25E5%25BA%2594%25E7%2594%25A8%25E5%25A2%259E%25E5%258A%25A0%25E5%2585%25A8%25E5%25B1%2580%25E6%25A0%25B7%25E5%25BC%258F" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;需要给应用添加全局样式，只需在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;enhance.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;引入&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;.scss&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件即可。如&lt;/p&gt; 
  &lt;div&gt;
   &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
   &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { App } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; 'vue'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { Provider } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; '@vtj/renderer'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;// 引入样式文件&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#032f62"&gt; './style/global.scss'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;span style="color:#d73a49"&gt; default&lt;/span&gt;&lt;span style="color:#d73a49"&gt; function&lt;/span&gt;&lt;span style="color:#24292e"&gt; (&lt;/span&gt;&lt;span style="color:#e36209"&gt;app&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; App&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#e36209"&gt;provider&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; Provider&lt;/span&gt;&lt;span style="color:#24292e"&gt;) {}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
  &lt;h3&gt;网络请求拦截&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E7%25BD%2591%25E7%25BB%259C%25E8%25AF%25B7%25E6%25B1%2582%25E6%258B%25A6%25E6%2588%25AA" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;在实际项目开发时，您可能需要给请求头增加 token 或对响应进行错误提示等，这时，你可能需要用到请求拦截，通过应用增强可以方便处理。&lt;/p&gt; 
  &lt;div&gt;
   &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
   &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { App } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; 'vue'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { Provider } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; '@vtj/renderer'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;span style="color:#d73a49"&gt; default&lt;/span&gt;&lt;span style="color:#d73a49"&gt; function&lt;/span&gt;&lt;span style="color:#24292e"&gt; (&lt;/span&gt;&lt;span style="color:#e36209"&gt;app&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; App&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#e36209"&gt;provider&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; Provider&lt;/span&gt;&lt;span style="color:#24292e"&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  provider.adapter.request.&lt;/span&gt;&lt;span style="color:#6f42c1"&gt;useRequest&lt;/span&gt;&lt;span style="color:#24292e"&gt;((&lt;/span&gt;&lt;span style="color:#e36209"&gt;config&lt;/span&gt;&lt;span style="color:#24292e"&gt;) &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#24292e"&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;    // 注入请求头&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;    config.headers.Token &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&lt;/span&gt;&lt;span style="color:#032f62"&gt; '123456'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;    return&lt;/span&gt;&lt;span style="color:#24292e"&gt; config;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  });&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  provider.adapter.request.&lt;/span&gt;&lt;span style="color:#6f42c1"&gt;useResponse&lt;/span&gt;&lt;span style="color:#24292e"&gt;((&lt;/span&gt;&lt;span style="color:#e36209"&gt;res&lt;/span&gt;&lt;span style="color:#24292e"&gt;) &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#24292e"&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;    // 响应拦截处理&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;    return&lt;/span&gt;&lt;span style="color:#24292e"&gt; res;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  });&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
  &lt;h3&gt;接入 Pinia&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E6%258E%25A5%25E5%2585%25A5pinia" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;Pinia 等其他工具库也可以增强文件中添加&lt;/p&gt; 
  &lt;div&gt;
   &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
   &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { App } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; 'vue'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#d73a49"&gt; type&lt;/span&gt;&lt;span style="color:#24292e"&gt; { Provider } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; '@vtj/renderer'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;import&lt;/span&gt;&lt;span style="color:#24292e"&gt; { createPinia, defineStore } &lt;/span&gt;&lt;span style="color:#d73a49"&gt;from&lt;/span&gt;&lt;span style="color:#032f62"&gt; 'pinia'&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;span style="color:#005cc5"&gt; pinia&lt;/span&gt;&lt;span style="color:#d73a49"&gt; =&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; createPinia&lt;/span&gt;&lt;span style="color:#24292e"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;const&lt;/span&gt;&lt;span style="color:#005cc5"&gt; useCounterStore&lt;/span&gt;&lt;span style="color:#d73a49"&gt; =&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; defineStore&lt;/span&gt;&lt;span style="color:#24292e"&gt;(&lt;/span&gt;&lt;span style="color:#032f62"&gt;'counter'&lt;/span&gt;&lt;span style="color:#24292e"&gt;, {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6f42c1"&gt;  state&lt;/span&gt;&lt;span style="color:#24292e"&gt;: () &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#24292e"&gt; ({&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;    count: &lt;/span&gt;&lt;span style="color:#005cc5"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  }),&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  getters: {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6f42c1"&gt;    doubleCount&lt;/span&gt;&lt;span style="color:#24292e"&gt;: (&lt;/span&gt;&lt;span style="color:#e36209"&gt;state&lt;/span&gt;&lt;span style="color:#24292e"&gt;) &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&amp;gt;&lt;/span&gt;&lt;span style="color:#24292e"&gt; state.count &lt;/span&gt;&lt;span style="color:#d73a49"&gt;*&lt;/span&gt;&lt;span style="color:#005cc5"&gt; 2&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  }&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;});&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;span style="color:#d73a49"&gt; default&lt;/span&gt;&lt;span style="color:#d73a49"&gt; function&lt;/span&gt;&lt;span style="color:#24292e"&gt; (&lt;/span&gt;&lt;span style="color:#e36209"&gt;app&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; App&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#e36209"&gt;provider&lt;/span&gt;&lt;span style="color:#d73a49"&gt;:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; Provider&lt;/span&gt;&lt;span style="color:#24292e"&gt;) {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  app.&lt;/span&gt;&lt;span style="color:#6f42c1"&gt;use&lt;/span&gt;&lt;span style="color:#24292e"&gt;(pinia);&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  //通过 provide 提供&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  app.&lt;/span&gt;&lt;span style="color:#6f42c1"&gt;provide&lt;/span&gt;&lt;span style="color:#24292e"&gt;(&lt;/span&gt;&lt;span style="color:#032f62"&gt;'counter'&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#6f42c1"&gt;useCounterStore&lt;/span&gt;&lt;span style="color:#24292e"&gt;());&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 也可以挂载到 globalProperties&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;  app.config.globalProperties.counter &lt;/span&gt;&lt;span style="color:#d73a49"&gt;=&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; useCounterStore&lt;/span&gt;&lt;span style="color:#24292e"&gt;();&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;app.provide&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的方式，在低代码页面需要定义注入才可以读取到 store&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//ecc75afc01b84df589957dcb4c2b432d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;挂载到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;globalProperties&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的可以直接，通过上下文读取，如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;this.counter&lt;/code&gt;&lt;/p&gt; 
  &lt;h2&gt;个性化配置&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fbase%2Fenhance.html%23%25E4%25B8%25AA%25E6%2580%25A7%25E5%258C%2596%25E9%2585%258D%25E7%25BD%25AE" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;vite.config.ts 的 enhance 默认配置就是最便捷的使用方式，如需要自定义入口文件，可以参考配置&lt;/p&gt; 
  &lt;div&gt;
   &lt;span style="color:#929295"&gt;ts&lt;/span&gt; 
   &lt;pre&gt;&lt;code&gt;&lt;span style="color:#67676c"&gt;&lt;span style="color:#d73a49"&gt;export&lt;/span&gt;&lt;span style="color:#d73a49"&gt; interface&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; EnhanceOptions&lt;/span&gt;&lt;span style="color:#24292e"&gt; {&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 入口文件路径&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#e36209"&gt;  entry&lt;/span&gt;&lt;span style="color:#d73a49"&gt;?:&lt;/span&gt;&lt;span style="color:#005cc5"&gt; string&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // umd 导出名称&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#e36209"&gt;  name&lt;/span&gt;&lt;span style="color:#d73a49"&gt;?:&lt;/span&gt;&lt;span style="color:#005cc5"&gt; string&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // umd 产物文件名&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#e36209"&gt;  fileName&lt;/span&gt;&lt;span style="color:#d73a49"&gt;?:&lt;/span&gt;&lt;span style="color:#005cc5"&gt; string&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 外部化的依赖&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#e36209"&gt;  external&lt;/span&gt;&lt;span style="color:#d73a49"&gt;?:&lt;/span&gt;&lt;span style="color:#005cc5"&gt; string&lt;/span&gt;&lt;span style="color:#24292e"&gt;[];&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 外部依赖对应的全局名称&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#e36209"&gt;  globals&lt;/span&gt;&lt;span style="color:#d73a49"&gt;?:&lt;/span&gt;&lt;span style="color:#6f42c1"&gt; Record&lt;/span&gt;&lt;span style="color:#24292e"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color:#005cc5"&gt;string&lt;/span&gt;&lt;span style="color:#24292e"&gt;, &lt;/span&gt;&lt;span style="color:#005cc5"&gt;string&lt;/span&gt;&lt;span style="color:#24292e"&gt;&amp;gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#6a737d"&gt;  // 产物文件生成目录&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#e36209"&gt;  outDir&lt;/span&gt;&lt;span style="color:#d73a49"&gt;?:&lt;/span&gt;&lt;span style="color:#005cc5"&gt; string&lt;/span&gt;&lt;span style="color:#24292e"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#67676c"&gt;&lt;span style="color:#24292e"&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;VTJ 源码仓库：&lt;a href="https://gitee.com/newgateway/vtj"&gt;https://gitee.com/newgateway/vtj&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352573</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352573</guid>
      <pubDate>Sun, 11 May 2025 08:48:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>65.4% 受访者期待建立全方位的 AI 法规体系</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;中国青年报社社会调查中心联合问卷网，对 1340 名受访者进行的一项调查显示，近八成受访者最近使用过人工智能工具。内容生成、教育辅助、效率工具是人们现阶段使用 AI 工具的主要用途。未来，让人工智能更好地服务于人，65.4% 的受访者希望建立覆盖伦理、算法等各方面的 AI 法规体系。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="338" src="https://oscimg.oschina.net/oscnet/up-2e1e4f7be33cd7ddeca06d21646cf2dd23a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;调查显示，78.3% 的受访者使用过人工智能工具，其中，近三成（27.7%）频繁使用。交叉分析显示，受访在校大学生（90.2%）使用比最高，其次是党政机关/事业单位工作人员（83.8%），国有企业工作人员（82.0%）排在第三位。不同年龄段的受访者中，年龄越大使用人工智能的比例越低，00 后比例最高，为 85.1%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在各种不同的 AI 工具中，豆包是人们使用最普遍的工具，超六成受访者（61.0%）表示都在使用，其次是文心一言（48.6%），DeepSeek（44.1%）排在第三位。其他主要还有：腾讯元宝（17.9%）、讯飞星火（17.4%）、Kimi（16.5%）、ChatGPT（11.3%）、千问（10.7%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;人们现在使用 AI 工具主要是做什么？调查显示，内容生成（文案撰写/图像视频生成）（62.8%）是第一用途，其次是教育辅助（知识问答/学习路径规划）（56.2%），排在第三位的用途是作为效率工具（文档处理/数据分析/信息检索）（52.4%），其他还有：健康管理（饮食建议/医疗咨询）（44.7%）、情感交互（心理疏导/虚拟陪伴）（28.1%）、商业决策（市场分析/投资建议）（10.4%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;重庆大学法学院教授齐爱民提醒，虽然 AI 给我们的工作和生活带来了很多便利，但也需要注意，AI 系统通常依赖于使用大量用户的数据进行训练和优化，如果使用不当或缺乏监管，可能导致个人隐私的泄露和个人信息的滥用，甚至威胁公共安全。国家有关方面和社会的方方面面都应加强公众对 AI 技术的深入了解，广泛普及网络安全知识和法律常识，提高整体安全防范意识。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;未来，让人工智能更好地服务于人，65.4% 的受访者期待建立覆盖伦理、算法等各方面的 AI 法规体系；65.3% 的受访者指出应尽快出台 AI 安全技术强制标准；59.6% 的受访者呼吁重视人工智能教育培训，提升数字素养；35.5% 的受访者建议健全 AI 服务行业监督管理制度与标准。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;齐爱民指出，应在法律制度层面构建人工智能系统化的保障体系。首先，制定《人工智能基本法》，坚持以人为本，从整体上确定人工智能的基本规则，为各细分领域人工智能单行法的制定提供法律依据和立法基础。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;其次，针对人工智能的数据治理、算法歧视、算法黑箱等特殊法律问题，在《人工智能基本法》的基础上制定单行立法，针对性地解决人工智能数据治理问题与算法难题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「在人工智能法律制度的建设过程中，应贯彻分类分级的规范思维，同时坚持技术中立性原则，保持适度的规则弹性以适应技术迭代节奏，保障制度的科学性、稳定性与灵活性。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;受访者中，00 后占 9.5%，90 后占 48.4%，80 后占 34.4%，70 后占 6.1%，60 后占 1.4%，其他占 0.2%。中学生占 0.4%，在校大学生占 6.1%，党政机关/事业单位工作人员占 9.7%，国有企业工作人员占 20.3%，私营/外资企业工作人员占 47.2%，个体户占 7.7%，灵活就业/自由职业者占 7.5%，无业/失业人员占 0.6%，已退休占 0.1%，其他占 0.4%。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352568</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352568</guid>
      <pubDate>Sun, 11 May 2025 08:32:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Angular v20 正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Angular v20 已正式发布，这次更新带来了稳定的响应式 API、实验性异步状态管理工具、无 Zone.js 的变更检测预览版，以及多项开发体验优化。&lt;/p&gt; 
&lt;p&gt;&lt;img height="576" src="https://static.oschina.net/uploads/space/2025/0529/162215_jNZg_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;新版本亮点如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;稳定 API，如&amp;nbsp;&lt;code&gt;effect&lt;/code&gt;、&lt;code&gt;linkedSignal&lt;/code&gt;、&lt;code&gt;toSignal&lt;/code&gt;、增量水合、路由级渲染模式配置以及将 zoneless 提升至开发者预览版&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 Angular DevTools 改进调试功能，并与 Chrome 合作，在 Chrome DevTools 中直接进行自定义 Angular 报告&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过编码风格指南更新、类型检查和 HostBindings 的语言服务支持、模板中支持 untagged 模板字面量表达式、默认模板热模块替换等，提升开发者体验。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;GenAI 开发方面的进步，包括&lt;code&gt;llms.txt&lt;/code&gt;&amp;nbsp;和 angular.dev 指南和视频，用于构建生成式 AI 应用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;启动对 Angular 官方吉祥物的评论请求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.angular.dev%2Fannouncing-angular-v20-b5c9c06cf301" target="_blank"&gt;https://blog.angular.dev/announcing-angular-v20-b5c9c06cf301&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fangular%2Fangular%2Freleases%2Ftag%2F20.0.0" target="_blank"&gt;https://github.com/angular/angular/releases/tag/20.0.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352566/angular-v20</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352566/angular-v20</guid>
      <pubDate>Sun, 11 May 2025 08:24:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Zadig v3.4.0 核能级发布：AI 提效 × 军工级防护 × 协作革命</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;&lt;img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-c7ea0a614026dc5c524ec1a92c7e359ec52.png" width="900" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;亲爱的开发者们，假期归来，效率拉满！&lt;/p&gt; 
&lt;p&gt;Zadig v3.4.0 携&lt;strong&gt; AI 黑科技 + 企业级防护 + 丝滑协作&lt;/strong&gt; 强势登场，免费版也能打，升级只需 5 分钟👇，四大超能升级，助你轻松应对节后工作高峰！&lt;/p&gt; 
&lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
&lt;h2&gt;🤖 AI 提效，Zadig Pilot 登场！&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;对话式解决工作流卡顿问题&lt;/li&gt; 
 &lt;li&gt;智能诊断效能瓶颈并生成优化方案&lt;/li&gt; 
 &lt;li&gt;产品文档秒级语义检索&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="1061" src="https://oscimg.oschina.net/oscnet/up-ddfaa4d79911c7a473c808799e8c7f9fe83.gif" width="2142" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;⚡ 效能四连暴击，甩锅时代终结！&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔥 资源消耗直降 50%！工作流自身运行效率翻倍&lt;/li&gt; 
 &lt;li&gt;⏮️ 生产事故 5 秒回滚：支持一键回滚备注溯源&lt;/li&gt; 
 &lt;li&gt;🔔 Teams 跨国告警：跨国团队零时差协同&lt;/li&gt; 
 &lt;li&gt;✅ 测试报告直通群聊：质量问题全员可见&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="1500" src="https://oscimg.oschina.net/oscnet/up-9ecd24ae14768629517bb89f2c4f48eefea.png" width="2928" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img alt="" height="1358" src="https://oscimg.oschina.net/oscnet/up-96df3282e967fbeae27bd7bd03cdbe680c2.png" width="2028" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;img alt="" height="1516" src="https://oscimg.oschina.net/oscnet/up-a41e653968fb28614bd8fc4e616758a87d8.png" width="2956" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;img alt="" height="1500" src="https://oscimg.oschina.net/oscnet/up-96c53c116b921d5cf0a4d6b780791ad7b86.png" width="1418" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;span id="OSC_h2_2"&gt;&lt;/span&gt; 
&lt;h2&gt;🛡️ 系统安全&amp;amp;性能双重升级&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;镜像漏洞扫描强化版（更新 CVE 库）&lt;/li&gt; 
 &lt;li&gt;智能拦截 0day 攻击（高危接口动态防护）&lt;/li&gt; 
 &lt;li&gt;工作流测试列表加载速度提升 300%&lt;/li&gt; 
 &lt;li&gt;高可用架构（HubServer 多副本部署）&lt;/li&gt; 
 &lt;li&gt;操作日志查询响应时间缩短 80%&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="751" src="https://oscimg.oschina.net/oscnet/up-c3a995eb5c21f831a2cbfd431a663abec64.png" width="757" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img alt="" height="2323" src="https://oscimg.oschina.net/oscnet/up-ad118a1d48a76645de295c98b1acf02ad00.png" width="2685" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;🔗 OpenAPI &amp;amp; 集成：打通企业工具链&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;CI/CD 融合数据库变更：OpenAPI 触发工作流自动执行 SQL 脚本&lt;/li&gt; 
 &lt;li&gt;操作日志审计 API：一键导出全量操作记录，合规审计无忧&lt;/li&gt; 
 &lt;li&gt;身份管理扩容：新增飞书/企业微信 SSO，千人团队一键登入&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="659" src="https://oscimg.oschina.net/oscnet/up-b98005a2e203e53ce90542195de6d3b2e98.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0cd12582e7c6c10bf017e0382bb3e7ff8a2.png" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f575cfc6da482d467e4784536fedbfc5fce.png" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;h2&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cd2814f1f463a64dfd8e619c4861d8c6644.png" referrerpolicy="no-referrer"&gt;&lt;/h2&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;🎁 免费版超进化！小团队也能开航母&lt;/h2&gt; 
&lt;p&gt;为普惠开发者，免费版现已开放多项企业级能力：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ 工作流通知含测试结果&lt;/li&gt; 
 &lt;li&gt;✅ Helm 服务部署状态检查&lt;/li&gt; 
 &lt;li&gt;✅ 全量安全加固 &amp;amp; 性能优化&lt;/li&gt; 
 &lt;li&gt;✅ 军工级资源优化（效能翻倍，成本减半）&lt;/li&gt; 
 &lt;li&gt;✅ HubServer 多副本高可用&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;💡 小团队也能稳如大厂！&lt;/p&gt; 
&lt;p&gt;让 Zadig 承包你的节后效率焦虑，现在升级👇&lt;/p&gt; 
&lt;p&gt;探索更多 Zadig v3.4 革新特性，敬请查阅：&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com%2Fzadig%2FZadig%2520v3.4%2Frelease-notes%2Fv3.4.0%2F" target="_blank"&gt;Zadig v3.4 Release Notes&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/koderover/blog/18332270</link>
      <guid isPermaLink="false">https://my.oschina.net/koderover/blog/18332270</guid>
      <pubDate>Sun, 11 May 2025 08:03:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>我国科学家发明混合并行新算法，让 AI 训练速度翻倍</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;近日，西北农林科技大学信息工程学院智能计算与农业信息系统团队刘斌教授携其课题组在国际计算机体系结构领域权威期刊《&lt;em&gt;IEEE Transactions on Computers&lt;/em&gt;》（TC，CCF A 类期刊）上发表研究论文。&lt;/p&gt; 
&lt;p&gt;该论文由西北农林科技大学携手美国纽约州立大学和云南大学联合发表。西北农林科技大学信息工程学院教授刘斌担任第一作者，纪泽宇老师与云南大学副教授何臻力共同担任通讯作者，纽约州立大学教授李克勤（欧洲科学院院士，并行与分布式计算领域公认的顶尖学者，国家特聘教授）作为重要合作者，使本次研究成果更具国际影响力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;论文针对当前大规模深度卷积神经网络（DCNN）大模型训练中负载不均衡和高通信开销的难题，提出了一种创新的混合并行训练方法——GroPipe&lt;/strong&gt;。该方法首次将流水线模型并行与数据并行相融合，构建「组内流水线+组间数据并行」的分层训练架构，并通过自动模型划分算法（AMPA）实现计算负载的动态均衡调度，大幅提升 GPU 资源利用率。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cc26042b68f375fc4655056cadeda8f3857.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;GroPipe 方法整体框架图。西北农林科技大学供图&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;为了进一步降低数据并行同步通信代价，GroPipe 在反向传播阶段引入「基于分组的延迟异步通信」策略，延迟梯度同步操作，有效减轻全局通信带宽压力，显著提升训练吞吐量。&lt;/p&gt; 
&lt;p&gt;实验证明，在 ImageNet 数据集上，GroPipe 方法相较于主流方案（如 DP、Torchgpipe、DAPPLE 和 DeepSpeed）表现出卓越优势：ResNet 系列平均加速比达 42.2%，VGG 系列达 79.2%；在 BERT-base 模型训练中，性能提升最高可达 51%。该成果展示了 GroPipe 在图像与文本领域的广泛适用性。&lt;/p&gt; 
&lt;p&gt;这一成果的发表标志着西北农林科技大学在计算机体系结构领域的 A 类国际顶级学术期刊——《&lt;em&gt;IEEE Transactions on Computers&lt;/em&gt;》（创刊于 1952 年）上实现了历史性突破。&lt;/p&gt; 
&lt;p&gt;相关论文信息：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoi.org%2F10.1109%2FTC.2025.3566869" target="_blank"&gt;https://doi.org/10.1109/TC.2025.3566869&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;转载自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.sciencenet.cn%2Fhtmlnews%2F2025%2F5%2F544895.shtm" target="_blank"&gt;https://news.sciencenet.cn/htmlnews/2025/5/544895.shtm&lt;/a&gt;&lt;br&gt; 作者：李媛，来源：中国科学报&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352559</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352559</guid>
      <pubDate>Sun, 11 May 2025 08:01:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>快手可灵 2.1 上线，价格降 65%</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;AI 视频生成工具可灵 2.1 现已正式上线。这次更新不仅在性能上实现了显著提升，还大幅降低了价格。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="479" src="https://oscimg.oschina.net/oscnet/up-5e7135eb09f9596c74164e4a9a21a533fa6.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;可灵 2.1 在之前的 2.0 版本基础上进行了深入优化，推出了三个明确的模型质量体系：标准版、高品质版和大师版。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;标准版提供 720P 的画质，适合一般视频需求，一条视频仅需 20 灵感值；高品质版提供 1080P 的画质，性能卓越，一条视频需 35 灵感值；而大师版则是 1080P 的高端选择，适合影视级效果，价格为 100 灵感值。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;更新后的可灵 2.1 在效果上已经能够与之前的 2.0 大师版相媲美，价格却降低了 65%。虽然可灵 2.1 目前只支持图生视频，但其生成的效果已经能够满足大多数用户的需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;通过对比测试，不同版本之间的性能差异显著。可灵 2.1 的高品质版在生成速度上也相较于老版本有了明显的提升，用户的等待时间大幅缩短。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352553</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352553</guid>
      <pubDate>Sun, 11 May 2025 07:43:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>云从科技多模态大模型「CongRong-v2.0​​​​​​​」登顶 OpenCompass 全球多模态榜单</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;近日，云从科技自主研发的「从容大模型」（CongRong-v2.0）在国际评测平台 OpenCompass 最新全球多模态榜单中，以 80.7 分的综合成绩登顶榜首。&lt;/p&gt; 
&lt;p&gt;&lt;img height="777" src="https://static.oschina.net/uploads/space/2025/0529/153339_ceUy_2720166.png" width="772" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1079" src="https://static.oschina.net/uploads/space/2025/0529/153443_hhxG_2720166.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frank.opencompass.org.cn%2Fleaderboard-multimodal%2F%3Fm%3DREALTIME" target="_blank"&gt;https://rank.opencompass.org.cn/leaderboard-multimodal/?m=REALTIME&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，面对涵盖视觉感知、认知理解与跨领域应用的 8 大核心数据集，CongRong-v2.0 模型在医学健康、数理逻辑、艺术设计等十余个专业领域表现突出。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1222" src="https://static.oschina.net/uploads/space/2025/0529/153632_A0RS_2720166.png" width="1269" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;来源：&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F1qANK87j5VYqKSAvU2cjBw" target="_blank"&gt;https://mp.weixin.qq.com/s/1qANK87j5VYqKSAvU2cjBw&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352549</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352549</guid>
      <pubDate>Sun, 11 May 2025 07:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>图片授权公司 Getty Images 斥资数百万美元指控 Stability AI 侵权</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Getty Images 指控 Stability AI 在未经授权的情况下，使用其 1200 万张版权图片训练文生图模型 Stable Diffusion，并生成带有 Getty 水印的合成图像，构成版权侵权、商标侵权及不正当竞争。&lt;/p&gt; 
&lt;p&gt;Stability AI 则主张其行为符合「合理使用」原则，认为 AI 生成内容具有变革性，不直接复制原作品。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1502862.htm" target="_blank"&gt;相关报道称&lt;/a&gt;，Getty 已投入数百万美元在英美两国提起诉讼，CEO 克雷格·彼得斯坦承诉讼成本「高得令人却步」，但强调「证据非常有力」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-00f36d49e30a8d04ce50ff97b625dbe7b55.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;彼得斯坦承这场斗争并不轻松：「我认为我方证据非常有力。但需要说明：我们不得不在英美两国分别起诉，而且坦白说，我们并不清楚其训练行为的具体发生地。有些环节需要耗费资金进行尽职调查，对方会抵抗，我们必须反击，双方反复拉锯。」&lt;/p&gt; 
&lt;p&gt;他补充道：「从全球范围的整体事实来看，优势绝对在我们这边。但这些事实如何在不同地域和法律框架下呈现，仍有待观察。」&lt;/p&gt; 
&lt;p&gt;案件将于 2025 年 6 月 9 日举行首次责任认定庭审。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352548</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352548</guid>
      <pubDate>Sun, 11 May 2025 07:30:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>NASA 内部使用的开源软件存在安全漏洞</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;网络安全初创公司 ThreatLeap 创始人、安全研究员 Leon Juranić&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.helpnetsecurity.com%2F2025%2F05%2F27%2Fnasa-open-source-software-vulnerabilities%2F" target="_blank"&gt;指出&lt;/a&gt;，美国宇航局（NASA）内部开发使用的开源软件存在漏洞，可能被攻击者利用入侵其系统。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0529/143431_zaKA_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;经分析确认，以下工具均因使用存在安全隐患的函数而存在缓冲区溢出漏洞：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;飞机工程分析工具 OpenVSP（开放式飞行器草图板）&lt;/li&gt; 
 &lt;li&gt;区域水文极端评估系统 RHEAS&lt;/li&gt; 
 &lt;li&gt;多仪器分析软件 OMINAS&lt;/li&gt; 
 &lt;li&gt;二维/三维网格适配工具 Refine&lt;/li&gt; 
 &lt;li&gt;包含数值分析库的 CFD 工具软件集（CFDTOOLS）&lt;/li&gt; 
 &lt;li&gt;knife 函数库&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Leon Juranić表示仅用 4 小时进行手动代码分析，就发现了 NASA 内部开发使用的多款开源软件中存在的一系列漏洞，并且&lt;span&gt;多次通过不同电子邮件向 NASA 报告漏洞，还打电话给 NASA 的安全运营中心，但未得到回复。因为 NASA 的官方政策规定不回复外部人员的漏洞报告。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352532/nasa-open-source-software-vulnerabilities</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352532/nasa-open-source-software-vulnerabilities</guid>
      <pubDate>Sun, 11 May 2025 06:39:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>​字节推出全新 AI 剪辑应用 「剪小映」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;字节跳动公司发布了一款名为 「剪小映」 的新应用，其宣传口号 「捕捉美好，智创影片」 引发了广泛关注。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="504" src="https://oscimg.oschina.net/oscnet/up-064c064581bd9831571c02a6b895dff4444.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这也是字节继 「即梦 AI」 之后的又一力作。借助火山引擎的豆包大模型技术，「剪小映」 旨在为用户提供更加便捷、高效的视频创作体验。用户在使用这款应用时，无需具备专业的视频编辑技能，简单的操作就可以生成高质量的视频作品。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;应用背后的火山引擎豆包大模型，是 「剪小映」 最核心的技术支持。该模型拥有强大的数据处理和学习能力，使得视频的分析、剪辑和合成都表现得更加出色。通过智能化的处理方式，「剪小映」 能够在短时间内完成复杂的视频编辑任务，确保用户的创作效率。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352521</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352521</guid>
      <pubDate>Sun, 11 May 2025 05:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 对标 Coze 和 Dify，Java 开发的 AIFlowy v1.0.4 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;我们很高兴向大家宣布：AIFlowy v1.0.4 正式发布了！ 🎉&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在本次更新中，我们新增了 12 项功能，优化了 6 处细节，修复了 7 个问题。最重要的是：我们完成了 12 个文档的更新，文档已经逐渐完善。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;👉 查看更新详情:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faiflowy.tech%2Fzh%2Fproduct%2Fchanges.html" target="_blank"&gt;https://aiflowy.tech/zh/product/changes.html&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;AIFlowy 是一个基于 Java 开发的企业级 AI 底层平台，致力于为中国开发者和企业提供高效、开放、本土化的 AI 工具与平台。我们对标字节 Coze、腾讯元器和 Dify 等产品，但更加聚焦于 toB 场景下的深度应用与落地实践。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们的使命是：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;「成为中国最具有影响力的人工智能品牌之一， 引领核心技术自主创新，推动中国 AI 技术生态繁荣发展和科技自立。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们的愿景是：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;「为中国开发者、政企用户，提供高效、开放、本土化的 AI 开发工具与解决方案，降低技术门槛，加速人工智能在产业中的深度应用。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果你认同我们的理念，欢迎为我们点个 Star，也欢迎加入我们的社区一起交流与共建！🌟&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Gitee 链接：&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;感谢每一位关注和支持 AIFlowy 的朋友，我们将持续打磨产品，不负期待！&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="851" src="https://oscimg.oschina.net/oscnet/up-22a7806b0ab6037067588eb7ee8065eae03.png" width="1860" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="831" src="https://oscimg.oschina.net/oscnet/up-d96e8f4b26dda06739e82db44668f84376b.png" width="1868" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;AI 功能&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 应用（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 插件（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Rag 知识库（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;AI 工作流编排（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型配置（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型市场（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;系统管理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;角色管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;菜单管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;部门管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岗位管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;日志管理（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;git&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;clone https://gitee.com/aiflowy/aiflowy.git&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;aiflowy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;mvn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;clean package&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;aiflowy-ui-react&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;run dev&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;环境要求&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JDK 1.8+&lt;/li&gt; 
 &lt;li&gt;Node.js 20.0+&lt;/li&gt; 
 &lt;li&gt;MySQL 8.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;v1.0.4 更新内容&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：新增 sysToken 菜单插入语句&lt;/li&gt; 
 &lt;li&gt;新增：Bot 应用增加问题预设功能，聊天组件支持快捷提示词&lt;/li&gt; 
 &lt;li&gt;新增：iframe 匿名用户访问功能，新增 iframe 访问外部地址鉴权功能 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC7TT5" target="_blank"&gt;#IC7TT5:iframe 访问外部访问地址，如何鉴权&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增：iframe 鉴权接口，前端拼接 token 并存入 localStorage 进行鉴权&lt;/li&gt; 
 &lt;li&gt;新增：新增插件分类功能，插件可归属一个或多个分类&lt;/li&gt; 
 &lt;li&gt;新增：插件分类支持修改与删除&lt;/li&gt; 
 &lt;li&gt;新增：新增单节点执行功能 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC7QJU" target="_blank"&gt;#IC7QJU:流程编排的单节点无法执行&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增：工作流试运行时支持显示每一步执行结果 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC7KLQ" target="_blank"&gt;#IC7KLQ:像 coze 一样测试的时候支持动态输出，采用 websocket 前后端通信&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增：知识库导入支持 PPT、PPTX 文件 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC6IOY" target="_blank"&gt;#IC6IOY:【Feature】知识库添加 ppt 的导入&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增：新增 DeepSeek 品牌&lt;/li&gt; 
 &lt;li&gt;新增：新增插件分类接口&lt;/li&gt; 
 &lt;li&gt;新增：新增 SQL 查询节点功能 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC7ZET" target="_blank"&gt;#IC7ZET:新增 SQL 查询节点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化：统一数据库表前缀&lt;/li&gt; 
 &lt;li&gt;优化：优化 bot 使用大模型但不支持 function_calling 的报错提示 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC73F6" target="_blank"&gt;#IC73F6:无法问答&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;优化：Bot 下 API 功能增加使用说明地址&lt;/li&gt; 
 &lt;li&gt;优化：优化节点单独运行时查找 dataType 的代码&lt;/li&gt; 
 &lt;li&gt;优化：升级 AF（Agents-Flex）至最新版本，支持流式对话与 NodeErrorListener 配置&lt;/li&gt; 
 &lt;li&gt;优化：优化知识库页面布局，右侧内容自动填满剩余宽度&lt;/li&gt; 
 &lt;li&gt;优化：优化日志配置并启用 Spring Boot 日志 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC8BU9" target="_blank"&gt;#IC8BU9:项目中存在多个 slf4j 实现导致冲突&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：修复本地 ES 上传小文档超时报错后导入按钮失效的问题 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/ICA6WM" target="_blank"&gt;#ICA6WM:本地 ES 上传小文档 doc 超时报错后，导入按钮无法继续点击，需要重新进入页面&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：修复可能的 NPE 问题&lt;/li&gt; 
 &lt;li&gt;修复：修复 bot 对话共享上下文问题&lt;/li&gt; 
 &lt;li&gt;修复：插件未将 key 加入参数中导致 API 鉴权失败 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC9SQH" target="_blank"&gt;#IC9SQH:插件的 key 没有被加入到参数中，导致 api 鉴权失败&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：后台 AI 助手配置错误时聊天提示异常，修复 OpenAI 配置问题 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC9L0Q" target="_blank"&gt;#IC9L0Q:AIFlowy 智能助理报错&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：相似度检索测试结果不准确问题 close&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy/issues/IC9FQM" target="_blank"&gt;#IC9FQM:检索测试时，相似度不准确&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修复：SQL 查询节点，参数支持 {{...}} 与 {{?...}} 混用模式，解决字段不可使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;?&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;占位的问题&lt;/li&gt; 
 &lt;li&gt;文档：新增 iframe 匿名用户访问文档&lt;/li&gt; 
 &lt;li&gt;文档：更新自定义节点文档&lt;/li&gt; 
 &lt;li&gt;文档：更新外部调用工作流文档&lt;/li&gt; 
 &lt;li&gt;文档：新增默认存储方式配置说明&lt;/li&gt; 
 &lt;li&gt;文档：更新文件管理文档&lt;/li&gt; 
 &lt;li&gt;文档：新增定时任务文档&lt;/li&gt; 
 &lt;li&gt;文档：更新默认用户名密码说明&lt;/li&gt; 
 &lt;li&gt;文档：更新向量数据库文档&lt;/li&gt; 
 &lt;li&gt;文档：更新大模型配置文档&lt;/li&gt; 
 &lt;li&gt;文档：整理工作流文档图示&lt;/li&gt; 
 &lt;li&gt;文档：新增 SQL 查询节点文档&lt;/li&gt; 
 &lt;li&gt;文档：新增插件分类功能文档&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开发及产品文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;官方网站：&lt;/strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Faiflowy.tech" target="_blank"&gt;https://aiflowy.tech&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开源地址：&lt;/strong&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352517/aiflowy-1-0-4-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352517/aiflowy-1-0-4-released</guid>
      <pubDate>Sun, 11 May 2025 05:05:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Claude 向所有用户免费开放联网搜索功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;Anthropic 团队&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FAnthropicAI%2Fstatus%2F1927440048930128089" target="_blank"&gt;宣布&lt;/a&gt; Claude 的联网搜索功能已面向所有用户免费开放。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;img height="1378" src="https://static.oschina.net/uploads/space/2025/0529/115507_zRvs_2720166.png" width="1288" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;该功能此前仅限美国付费用户使用。现在，免费用户也可以通过 Claude 访问实时网络信息，包括行业趋势、市场动态、学术文献等。&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;Claude 通过 Brave Search 提供搜索结果，并为每次回复提供内联引用以确保信息可验证。用户只需在 Claude 账户的个人资料设置中开启「网页搜索」开关即可使用。&lt;/p&gt; 
&lt;p&gt;相关阅读：&lt;a href="https://www.oschina.net/news/340196/anthropic-claude-web-search" target="news"&gt;Anthropic 为 Claude 增加联网搜索功能&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352510</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352510</guid>
      <pubDate>Sun, 11 May 2025 03:56:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Mistral AI 发布代码嵌入模型 Codestral Embed</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Mistral AI&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmistral.ai%2Fnews%2Fcodestral-embed"&gt;发布&lt;/a&gt;了其首款专门针对代码的嵌入模型 Codestral Embed。该模型在处理真实世界代码数据的检索用例时表现尤为出色，据称其性能显著优于市场上领先的代码嵌入器，包括 Voyage Code 3、Cohere Embed v4.0 以及 OpenAI 的大型嵌入模型。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-85599f31eba5292dd0346c0531e83ee1ca9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0529/113410_KZv0_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该模型的核心应用场景广泛。它可以为代码补全、编辑或解释任务提供快速高效的上下文检索，支持 AI 驱动的软件工程，例如 copilots 或编码代理框架。同时，它能通过自然语言或代码查询准确搜索相关代码片段，适用于开发者工具、文档系统和 copilots。&lt;/p&gt; 
&lt;p&gt;此外，Codestral Embed 能够识别功能相似或接近重复的代码段，即便是词汇差异较大的情况，这有助于识别可重用代码以避免重复，或检测复制粘贴以执行许可策略。它还能基于功能或结构对代码进行无监督分组，用于分析存储库组成、识别新兴架构模式或为自动化文档和分类系统提供支持。&lt;/p&gt; 
&lt;p&gt;Codestral Embed 目前通过 Mistral AI 的 API 提供，名称为 codestral-embed-2505。其价格为每百万 tokens 0.15 美元，批量 API 调用可享受 50% 的折扣。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;来源：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F92OEt-XuAxwtaBukkDAZbw" target="_blank"&gt;https://mp.weixin.qq.com/s/92OEt-XuAxwtaBukkDAZbw&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352503/mistral-ai-codestral-embed</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352503/mistral-ai-codestral-embed</guid>
      <pubDate>Sun, 11 May 2025 03:36:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>苹果操作系统大版本将采用年份命名</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-05-28%2Fapple-to-rebrand-device-operating-systems-ios-26-macos-26-watchos-26" target="_blank"&gt;彭博社报道称&lt;/a&gt;&lt;/u&gt;，苹果公司计划从今年开始，所有苹果操作系统的版本命名将&lt;strong&gt;统一采用年份标识&lt;/strong&gt;，而非此前混乱的版本体系。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0529/111852_wyvq_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这意味着当前的 iOS 18 将直接跳跃至 "iOS 26"，同时 iPadOS 26、macOS 26、watchOS 26、tvOS 26 和 visionOS 26 也将同步亮相。&lt;/p&gt; 
&lt;p&gt;这一命名策略的核心逻辑在于统一性。目前苹果的操作系统呈现出令人困惑的数字差异：iOS 18、watchOS 12、macOS 15、visionOS 2—— 这种不一致源于各系统首版发布时间的差异，但对用户和开发者而言却构成了理解障碍。&lt;/p&gt; 
&lt;p&gt;报道指出，苹果将在 6 月 9 日的全球开发者大会上正式宣布这一变革。&lt;/p&gt; 
&lt;p&gt;新命名系统将伴随代号为"Solarium"的全新用户界面设计语言，覆盖 tvOS、watchOS 以及部分 visionOS 系统。这一设计理念旨在确保用户在不同设备间切换时获得更加统一的体验。&lt;/p&gt; 
&lt;p&gt;值得注意的是，苹果采用的是「未来年份」策略 —— 尽管新操作系统将于 2025 年 9 月前后发布，但却以 2026 年命名，这与汽车行业的营销手法如出一辙。如果这一策略得以延续，后续版本将依次使用 27、28 等年份标识。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352495/apple-to-rebrand-device-operating-systems-ios-26</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352495/apple-to-rebrand-device-operating-systems-ios-26</guid>
      <pubDate>Sun, 11 May 2025 03:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>日本出台首部人工智能法</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;日本参议院全体会议 28 日以多数赞成票通过首部专门针对人工智能（AI）的法律，旨在促进 AI 相关技术研发和应用并防止其滥用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这部《人工智能相关技术研究开发及应用推进法》指出，AI 技术是日本经济社会发展的基础，从安全保障的角度来看也是重要的技术。依据这部新法，拟设立以日本首相为首、全体内阁成员参加的「AI 战略本部」作为日本 AI 政策的「司令部」，并制定「AI 基本计划」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;新法提出，日本应在 AI 领域保持研究开发能力，并提高相关产业的国际竞争力。日本政府有责任全面且系统地制定和实施推动 AI 研发和应用的措施。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;为防止 AI 技术被滥用而引发侵权问题，缓解公众对生成式 AI 制造虚假信息等的不安，新法规定，日本政府要对侵权行为展开调查，并给涉事企业以建议和指导，企业有义务配合相关调查。对于使用 AI 制作虚假视频、侵犯著作权等行为，日本政府将进行分析调查，并可公开相关企业的名称。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据日本总务省 2024 年版《信息通信白皮书》，使用或使用过生成式 AI 的日本国民仅占人口的 9.1%，远低于美国的 46.3% 和德国的 34.6%。（新华社）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/352493</link>
      <guid isPermaLink="false">https://www.oschina.net/news/352493</guid>
      <pubDate>Sun, 11 May 2025 03:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
