<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 30 Apr 2025 07:38:10 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>80% 的 Z 世代年轻人愿意与 AI 结婚</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;AI 聊天机器人公司 Joi AI 的一项&lt;span&gt;最新&lt;/span&gt;研究结果&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.forbes.com%2Fsites%2Fjohnkoetsier%2F2025%2F04%2F29%2F80-of-gen-zers-would-marry-an-ai-study%2F&quot; target=&quot;_blank&quot;&gt;表明&lt;/a&gt;，有高达 80% 的 Z 世代年轻人表示，他们愿意与人工智能（AI）结婚。更有 83% 的人认为，他们能够与 AI 建立深厚的情感纽带。&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;Joi AI 因此&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;为人机关系创造了一个新术语：&lt;/span&gt;「AI-lationships」。Joi AI 的关系专家、注册治疗师 Jaime Bronstein 指出，这些 「AI-lationships」 并不是用来取代真实的人际关系，而是为人们提供一种独特的情感支持，提升整体的情感健康。在如今这个时代，&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;许多人感到压力重重、不知所措、无人倾听和孤独。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;343&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-66209a3bec428fa4946dcef30c38506e8ed.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;然而，Joi AI 在对 2000 名 Z 世代成员的调查中发现，75% 的人认为 AI 伴侣可以完全取代人类的陪伴，&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;这是一个令人恐惧的前景。《Left To Their Own Devices》一书的作者、数字社会学家&lt;/span&gt; Julie Albright 认为，年轻一代正在经历着数字技术带来的深刻变革。&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;「许多年轻人没有朋友。&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;现在的 &lt;/span&gt; AI&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;，尤其是语音&lt;/span&gt; AI&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;，随着时间的推移和技术的进步，语音与模拟身体的结合将能够通过非语言信号，例如语调中的温暖，来模仿或模拟人与人之间的联系。&lt;/span&gt;」&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;她补充道，人类天生就渴望彼此联系，但随着互联网、游戏和智能手机的出现，越来越少的年轻人通过语音或视频进行面对面甚至实时的交流。相反，我们更有可能给朋友发短信（如果有的话）。这使得与人 AI 聊天几乎与与朋友发短信无异。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#fcfcfc&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;AI&amp;nbsp;又&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#fcfcfc&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;很简单，它总是可以访问的，而且它可以是我们想要的任何东西......而不需要与真实的人建立真实的关系的麻烦。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;Albright&amp;nbsp;称&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#fcfcfc&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：「这将在某种程度上满足通过模拟关系进行联系的需求，进一步拉远我们彼此之间的距离，因为无摩擦的 AI 关系的便利性和轻松性取代了更混乱、更困难、有时充满摩擦的现实关系。」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#fcfcfc&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Joi AI 在某种程度上同意这种观点。该公司的人际关系专家 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;Bronstein&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#fcfcfc&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;表示，AI 伴侣可以填补这一空白，可以成为一个贴心的伴侣，或者是一个随时倾听的「数字挚友」。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#fcfcfc; color:#333333&quot;&gt;「有时候，有人陪伴也挺好的，哪怕是 AI。就像我们已经用它来简化日常事务一样，现在人们也看到了它如何帮助他们感受到更多的情感支持。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;不过，潜在的风险同样不容忽视。去年，一名 14 岁的男孩因与 AI 聊天机器人发展出感情而自杀，而在 2023 年，一名比利时男子也因类似情况而悲剧身亡。此外，还有关于信息误导和操控的风险。尽管如此，Joi AI 表示，近年来人们对 「与 AI 有情感」 及 「爱上 AI」 的搜索量激增，分别增长了 120% 和 132%，这也反映了人们在寻求社交连接时的无奈和渴望。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347563/80-of-gen-zers-would-marry-an-ai</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347563/80-of-gen-zers-would-marry-an-ai</guid>
            <pubDate>Wed, 30 Apr 2025 07:18:53 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>deepin MCP 服务上线</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;deepin MCP 服务&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fm2v8qWooWaLQEWjoQ4Ad6g&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;正式上线。公告称，它可以让 AI 大模型接管操作系统，形成一种新交互方式，是当前市面上首个系统级 MCP 交互服务模式。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;只需要一句指令──『批量重命名文件为报告 1 到 100』『帮我更换一张星空壁纸』『下载{文档 url}这篇文档，并总结主要内容』......借助大模型 + MCP 协议能力，都能使命必达，将繁琐多步骤任务化为「一键完成」。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;系统级控制协议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;deepin MCP server 适配了 deepin 的系统级、应用级控制接口。找一个合适的 MCP Client，借助 AI 大模型的强大推理和任务拆解能力，还可以做多任务流程化处理！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;如『打开⽂件管理器/⽇历/⽂件夹/浏览器』、『切换到深⾊主题/浅⾊主题』等。AI 模型拆解任务后，会根据给出的工具自行达成目标。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;333&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-98bc8ef5aee0d4cad928e8d82a666453697.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;333&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-66a7be612caa481f90af3315f3a70e7a05a.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;文件处理协议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;deepin MCP server 同样适配了对文件的操作控制接口。繁琐重复的文件管理任务，一样可以通过 AI 大模型 + MCP Client / Server 的任务流方式搞定！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;如『将某⽂件夹的所有⽂件按照⽂件类型分类，不同类型的⽂件汇总到不同⽂件夹⾥，⽂件夹名称为该⽂件类型』、『将某⽂件夹内的 100 个⽂件重命名为报告开头，以数字递增』等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AI 模型拆解任务后，会根据 deepin MCP server 给出的工具组合自行达成目标。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;333&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1f49087d1de9a4e4dcc60f67bce76d94d31.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;联网协议&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;deepin MCP server 除了适配系统、应用和文件操作接口外，还添加了联网任务的协议，包括可联网搜索查找内容，通过指定链接获取、下载在线内容等！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;如『帮我找一张太空图片并设置为壁纸』、『下载{文档 url}这篇文档，并总结文档主要内容』等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;333&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cc8e83a0fea3016417b40d503673a62060d.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;借助大模型的任务拆解能力，所有 MCP 协议接口像「智能拼图」一样自由组合新功能。使用者提出诉求，AI 都能瞬间获得新技能，彻底告别重复造轮子，让操作系统与 AI 模型开启一场梦幻联动。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;感兴趣的用户可选择在 deepin 应用商店内搜索、安装 deepin MCP。随后在终端运行 deepin-mcp-servers，启动说明窗口，复制 /opt/deepin-mcp-servers 文件夹到任意用户目录。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347550</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347550</guid>
            <pubDate>Mon, 28 Apr 2025 06:12:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>打破</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;作者:京东零售，王彗木&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//b8f6c2fba037d3941b3a974e5019e697.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;东方若晓，莫道君行早&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;EMNLP 2024: Breaking the Hourglass Phenomenon of Residual Quantization: Enhancing the Upper Bound of Generative Retrieval&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;paper 链接： &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2407.21488v1&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://arxiv.org/abs/2407.21488v1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;0 摘要&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;生成式搜索/推荐在搜索和推荐系统中已经成为一种创新的范式，它通过使用基于数值的标识符来提升效率和泛化能力。特别是在电子商务领域，像 TIGER 这样的方法使用基于残差量化的语义标识符（RQ-SID），表现出了很大的潜力。然而，RQ-SID 面临一个被称为「沙漏」现象的问题，即中间码本令牌过于集中，限制了生成式搜索/推荐方法的全面发挥。本文通过研究发现，路径稀疏和长尾分布是造成这一问题的主要原因。我们通过一系列详细的实验和消融研究，分析了这些因素对码本利用率和数据分布的影响。结果表明，「沙漏」现象对 RQ-SID 的性能有显著影响。我们提出了一些有效的解决方案，成功改善了生成式任务在实际电子商务应用中的效果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1 背景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在生成式搜索/推荐中，基于数值的标识符表示方法因其简单、高效和强大的泛化能力而在行业中被广泛采用，特别是在长行为序列推荐中。这些方法显著缩短了序列长度并加快了推理过程。值得注意的方法包括 DSI、NCI、TIGER、GDR 和 GenRet。其中，TIGER 方法通过残差量化（RQ）（Lee 等，2022；Zeghidour 等，2021）生成语义标识符（SID），有效捕捉了语义信息和层次结构。这种方法在以商品为主的电子商务场景中特别有优势，能够准确反映电子商务数据中固有的复杂层次关系和语义特征，从而显著提升推荐性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;需要强调的是，基于 RQ 的方法的性能上限在很大程度上依赖于 SID 的生成，这也是本文分析和讨论的核心重点。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2 任务定义&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//d16f679f11968911dc61b757b68174ca.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基于现有常见的任务场景，定义如下任务【注意：任务形式不限于下列任务，只要是含有 SID 的任务均可】：该用户信息：年龄：age_2；性别：男性；会员状态：非会员。该用户的历史交互行为有：&amp;lt;xxx&amp;gt;&amp;lt;xxx&amp;gt;&amp;lt;xxx&amp;gt;，&amp;lt;xxx&amp;gt;&amp;lt;xxx&amp;gt;&amp;lt;xxx&amp;gt;……。该用户本次搜索的关键词为「XX 鼠标」。请根据该用户信息、历史交互行为和本次搜索关键词，预测该用户接下来最可能购买的商品：&amp;lt;xxx&amp;gt;&amp;lt;xxx&amp;gt;&amp;lt;xxx&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_4&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3 RQ-VAE SID 生成&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//de877438410161dfd2a08399ea5bb84e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;SID 生成，谷歌的 TIGER 方法用的比较广泛。它通过残差量化 RQ 生成语义标识符（SID），能够有效捕捉语义信息和层次结构。这种方法在以商品为主的电商场景中尤其有优势，因为它能够准确反映电商数据中的复杂层次关系和语义特征，从而显著提升推荐性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_5&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4 沙漏现象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//bbcb600e26744a81fe8db32b495e0e1d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在通过残差量化（RQ）生成的 SID 中，我们观察到了一种显著的「沙漏」现象。具体而言，中间层的码本过于集中，导致了一对多和多对一的映射结构。这种集中现象引发了路径的稀疏性和长尾分布问题。路径稀疏性是指匹配路径仅占总路径空间的一小部分，而长尾分布则意味着大多数 SID 集中在少数的头部标记上，中间层标记的分布呈现长尾特征。在具有长尾特征的数据集中，这种「沙漏」效应尤为明显，显著限制了生成式搜索推荐方法的表示能力。问题的根源在于逐步量化高维向量残差的内在特性。基于此，我们对该现象进行了深入的理论与实验分析，并提出了相应的解决方案。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4.1 沙漏现象可视化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为了生成语义 ID，我们首先利用公司内部数十亿条搜索日志中的查询-商品数据，训练了双塔模型（如 DSSM 和 BERT 等）。接着，通过商品塔获取了数亿商品的嵌入向量，最终采用残差量化（RQ）方法为所有商品生成了语义 ID。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//7ed9b21f55ffd8c0af1a131203c16b36.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;生成语义 ID 后，对所有商品进行了聚合，并计算了三层分布图。如上图所示，可以看到第二层集中有大量路由节点，整体分布呈现「沙漏」现象。为了验证这一现象的普遍性，我们在不同参数组合下进行了多次可视化实验，沙漏效应非常显著，三层代码表中 token 的路径分布相对稀疏。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//2abf19b744b20b57208a0fe6c4d0275c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此外，基于上述实验，我们使用三个指标对第二层的标记分布进行了统计分析：熵、基尼系数和标准差，如图所示。结果表明，第二层的标记分布表现出低熵、高基尼系数和大标准差，表明该分布具有显著的不均匀性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;总体而言，这种沙漏现象在代码表中通过路径稀疏性和 token 的长尾分布得到了统计数据支持。其中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;路径稀疏性：语义 ID 结构导致代码表利用率低。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;长尾分布：在中间层，大多数路径集中到单个 token 上&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4.2 现象分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为了探讨「沙漏」现象的成因，将基于残差量化（RQ）的运行机制进行深入分析和讨论。为了便于理解，考虑两种原始嵌入的分布：非均匀分布和均匀分布。接下来，使用 RQ 为数据 X 生成语义 ID。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//dcc4a6645a4d62e7573e6fdda6b44d98.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可以看到，第一层，候选点被分成 M 个聚类桶，token 的入度相等。输入分布均匀。第二层输入为第一层的残差，分布非均匀。小残差点靠近聚类中心，异常值较大。聚类更关注异常值，形成长尾现象。第三层残差值变得一致且均匀。类似第一层的均匀分布。第二层大路由节点分散成多个小节点。整体趋势随层数增加，残差减小，聚类效应减弱。形成沙漏状结构：数据压缩再扩展，最终均匀分布。语义 ID 构建后，RQ 量化方法的影响，加上中间层头部 token 的主导地位，自然导致了路径的稀疏性。类似地，对于非均匀分布（如长尾分布），残差分布变得更加不均匀，导致现象更加严重。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_8&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4.3 实际影响&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//33edb69523af12bc6f883304ffab5e42.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为了评估这种现象的影响，我们进行了多项实验。首先，在评估过程中，我们根据第二层标记的分布将测试集分为两组：头部标记测试集和尾部标记测试集。如表所示，头部标记测试集的性能显著提升，而尾部标记测试集的性能则明显较差。这种性能差异可以归因于先前分析的路径稀疏性和标记的长尾分布，导致了结果的偏差。这一现象在不同规模的模型（如 LLaMA2、Baichuan2 和 Qwen1.5）以及不同参数的残差量化（RQ）中均有观察到，突显出长尾标记分布和路径稀疏性对模型性能的广泛影响。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此外，为了进一步探讨「沙漏」现象对模型性能的影响，我们进行了两个关键实验：1）交换第一层和第二层的标记，2）将交换序列的第一个标记作为输入。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在仅交换第一层和第二层标记的情况下，第一层出现显著的长尾分布，导致模型难以拟合，从而效果较差。由于逐标记错误的累计，交换后的效果甚至比不交换更差。然而，当交换后给定第一个标记时，输出任务变为预测第二或第三层的 SID，这使得任务变得更简单，并且长尾分布不再影响结果（因为给定了真实的 SID1），因此效果显著提升。此外，在不交换第一层和第二层的条件下，给定第一个标记（第二层 SID 依旧是长尾分布），其结果高于基线，但低于交换后给出第一个标记的情况（如表所示）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这一发现表明，「沙漏」现象对模型性能有着实质性的负面影响。通过上述实验，不仅确认了「沙漏」效应的存在，还阐明了其对模型性能的具体影响，从而为未来的优化提供了坚实的基础。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_9&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5 解决方法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//3dae80e34f740167fb315cce83ad9360.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决沙漏现象的方法有多种，在此简单的从分布角度提出两种简单易行的方法：一种启发式的方法是直接移除第二层，从而消除长尾效应的影响。然而，这可能导致空间容量不足。需要注意的是，这里首先要生成一个 L 层的语义 ID（SID），然后再移除第二层，这与直接生成一个两层的 SID 不同，因为后者可能仍然存在大的路由节点。另一种简单的方法是自适应地移除第二层的顶部 tokens，使语义 ID 成为一个可变长度的结构。这里使用了 top@K 策略，并设定一个阈值 p。这种方法确保了分布保持不变，同时有选择地减少了「沙漏」效应的影响。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为了进一步验证该方法的有效性，在 LLaMA 模型上进行了实验。结果表明，通过应用自适应 token 移除策略，模型性能得到了提升，同时计算成本与基础模型相近，并且在一些客观优化（如 Focal Loss 和 Mile Loss）方面也表现出色。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;具体来说，实验结果显示，使用 top&lt;a href=&quot;https://my.oschina.net/u/2303249&quot; class=&quot;referer&quot; target=&quot;_blank&quot;&gt;@400&lt;/a&gt; token 移除策略的模型在大多数评估指标上都优于基线模型。这表明该方法有效地减少了长尾效应的影响。随着移除的 tokens 数量增加，模型性能的提升会遇到瓶颈。特别是当所有 tokens 都被移除时，这种限制尤为明显，这可能是由于缺少长尾 tokens，导致召回率下降。同时，直接移除第二层会导致一个 SID 对应多个项目。这种细粒度的分析为所提出方法的有效性提供了有力证据。该方法在选择性移除不太重要的 tokens 的同时，保留了最有信息量的 tokens，即使在移除大量数据的情况下，也能提升模型性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_10&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;6 结论&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本研究系统地探讨了 RQ-SID 在生成式搜索/推荐的局限性，特别是发现了中间层 tokens 过度集中导致数据稀疏和长尾分布的「沙漏」现象。通过广泛的实验和消融研究，证明了这一现象，并分析了其根本原因在于残差特性。为了解决这个问题，提出了两种方法：移除第二层的启发式方法和自适应调整 token 分布的可变长度 token 策略。实验结果显示，两种方法都有效缓解了瓶颈效应，其中自适应 token 分布调整策略效果最佳。这是首次系统性地探讨 RQ-SID 在生成式搜索/推荐中缺陷的研究，为未来的模型优化提供了坚实的基础，并显著提升了模型性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_11&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;7 未来规划&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、 优化 SID 的生产与表征方式，通过引入时效、统计类特征来辅助额外表征，让其能满足对特征极为看重的排序需求；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、 统一稀疏表征（SID）与密集表征，让 LLM 可以显示的建模密集特征变化趋势，而不是稀疏表征的映射&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、 保证链路无损失实现一段式搜索。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4090830/blog/18253263</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18253263</guid>
            <pubDate>Mon, 28 Apr 2025 03:55:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>RWKV7-G1 1.5B 发布！全球语言推理模型，特别适合端侧手机运行</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;2025 年 4 月 29 日，RWKV 基金会开源了 &lt;strong&gt;RWKV7-G1 1.5B 推理模型&lt;/strong&gt;（Reasoning Model）。&lt;/p&gt; 
&lt;p&gt;RWKV7-G1 1.5B 具备其它同尺寸模型不具备的&lt;strong&gt;推理能力&lt;/strong&gt; 和&lt;strong&gt;任务能力&lt;/strong&gt; ，同时还支持现实世界 100+ 种语言。在实际测试中，RWKV7-G1 1.5B 模型的推理逻辑性较强，能够完成有难度的&lt;strong&gt;多语言、数学和代码任务&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;RWKV7-G1 1.5B 推理模型基于 World v3.5 数据集训练，包含更多小说、网页、数学、代码和 reasoning 数据，总数据为 5.16T tokens。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;快速体验 G1 1.5B&lt;/strong&gt; ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FRWKV-Red-Team%2FRWKV-LatestSpace&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/spaces/RWKV-Red-Team/RWKV-LatestSpace&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;我们也&lt;strong&gt;开源发布了 RWKV 模型端聊天 APP&lt;/strong&gt;，方便大家体验 RWKV-7 模型。APP 下载链接在本文靠后位置。&lt;/p&gt; 
&lt;h2&gt;模型客观指标评测&lt;/h2&gt; 
&lt;h3&gt;英语和多语言能力&lt;/h3&gt; 
&lt;p&gt;RWKV7-G1 1.5B 的英语和多语言能力&lt;strong&gt;显著强于同规模的开源模型&lt;/strong&gt; ，&lt;strong&gt;包括同期发布的 Qwen3-1.7B-Base&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;1B5-Models-Eval&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b819bf2ced96136a125853a503ac6a8bfc6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此外，RWKV7-G1 1.5B 的 MMLU 准确度为 48.2%，比 RWKV-7 World 1.5B 的 44.8% 有继续提升。&lt;/p&gt; 
&lt;h3&gt;无法作弊的评测&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FJellyfish042%2FUncheatableEval&quot; target=&quot;_blank&quot;&gt;Uncheatable Eval&lt;/a&gt; 是&quot;无法作弊的评测&quot;，它使用最新的论文和新闻文章等实时数据，评估开源大语言模型的真实建模能力和泛化能力。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;G1 1.5B 的 Uncheatable Eval 综合得分&lt;strong&gt;在同参数规模的开源模型中处于领先地位&lt;/strong&gt;，超越 Qwen2.5-1.5B，仅次于参数更多的 Qwen3-1.7B：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;1B5-Uncheatable-eval&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ea66b4ac0a821eeb44198153944aed28563.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;模型使用体验实测&lt;/h2&gt; 
&lt;h3&gt;多语言能力&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;RWKV7-G1 1.5B 支持全球 100 多种自然语言，比同参数量的 Transformer 模型更强。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;下面是 G1 1.5B 把&lt;strong&gt;中文翻译为多国语言&lt;/strong&gt;的推理过程和翻译结果，翻译结果完全准确：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;multilang-translation&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-600d322ee5f079fdbb5a7cc2a2e1c191ee1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;代码能力&lt;/h3&gt; 
&lt;p&gt;G1 1.5B 拥有基础的代码能力，更大的 G1 2.9B/7B 模型的代码能力会显著更强。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;G1 1.5B 刷 Leetcode 题目：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;code&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3775e6b875281b365e7ac096c0eb0e3b6ee.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;code-1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c7f4f8b4f431ddb2ad9d288ca6a63bd628d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;数学题目&lt;/h3&gt; 
&lt;p&gt;&lt;img alt=&quot;math-1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c7c6747db72d61f272746d10f782e5ba08e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;math&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26cc2c752f6bea1ad719fa00bc9ffe44ba2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;日常对话&lt;/h3&gt; 
&lt;p&gt;&lt;img alt=&quot;chat-life&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1ba9fae99600cfce6427ebdee1ee727f2df.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;chat-work&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b43bd98dd46c3b3cdbb541c6628db75d9bf.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;chat-work-1&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ffdc8be159f72604773ed2f78cabd03bfea.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;general-chat&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7bce8c594c594045896f3a7e3ca9476fb35.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;小说能力&lt;/h3&gt; 
&lt;p&gt;G1 1.5B 直接续写小说，有较好的网感和文风：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;novel&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c4a80e71002ff493837860358d4e033bbd3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;模型试用&lt;/h2&gt; 
&lt;p&gt;我们提供了多个 RWKV-7 模型的&lt;strong&gt;在线 demo&lt;/strong&gt;，也提供移动端聊天 APP。&lt;/p&gt; 
&lt;h3&gt;【推荐】用在线 demo（聊天模式）&lt;/h3&gt; 
&lt;p&gt;为了方便社区体验 RWKV-G1 模型，我们提供了&lt;strong&gt;聊天模式&lt;/strong&gt;的在线 demo。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hugging Face&lt;/strong&gt;：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FRWKV-Red-Team%2FRWKV-LatestSpace&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/spaces/RWKV-Red-Team/RWKV-LatestSpace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;魔搭 demo&lt;/strong&gt;：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Fstudios%2FRWKV-Red-Team%2FRWKV-LatestSpace%2Fsummary&quot; target=&quot;_blank&quot;&gt;https://modelscope.cn/studios/RWKV-Red-Team/RWKV-LatestSpace/summary&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;可在此体验已完成训练的 RWKV7-G1 0.1B、0.4B 和 1.5B 模型，也可以切换到其他正在&lt;strong&gt;训练中&lt;/strong&gt;的 G1 模型，如 G1 2.9B。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;chat-mode-demo&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f5cbc231da4a5842d51586fead436d26c5d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;这个精美的 RWKV 对话界面由 RWKV 社区成员 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fleoncat.top%2F&quot; target=&quot;_blank&quot;&gt;@Leon&lt;/a&gt; 开发，并在 GitHub 仓库 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSolomonLeon%2Fweb-rwkv-realweb&quot; target=&quot;_blank&quot;&gt;web-rwkv-realweb&lt;/a&gt; 中开源。&lt;/p&gt; 
&lt;h3&gt;使用在线 demo（续写模式）&lt;/h3&gt; 
&lt;p&gt;可以在官方 Demo 中试用 RWKV7-G1 1.5B 模型：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;**Hugging Face Gradio Demo：**&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FBlinkDL%2FRWKV-Gradio-2&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/spaces/BlinkDL/RWKV-Gradio-2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;RWKV7-G1 的整体 prompt 格式与 RWKV-7-World 模型类似，可选使用 &lt;code&gt;&amp;lt;think&amp;gt;&lt;/code&gt; 标签开启 reasoning 功能：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;User: 我可以抽干太平洋的水然后下去抓鱼吗？

Assistant: &amp;lt;think&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;使用 RWKV 端侧聊天 APP&lt;/h3&gt; 
&lt;p&gt;我们也开发了处于内测阶段的 RWKV 端侧聊天 APP（Android 和 iOS 版本），可在下列地址下载 APP：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Android&lt;/strong&gt; : &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pgyer.com%2Frwkvchat&quot; target=&quot;_blank&quot;&gt;https://www.pgyer.com/rwkvchat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;iOS (TestFlight)&lt;/strong&gt; : &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftestflight.apple.com%2Fjoin%2FDaMqCNKh&quot; target=&quot;_blank&quot;&gt;https://testflight.apple.com/join/DaMqCNKh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;贯彻开源开放的宗旨，RWKV 端侧聊天 APP 也已开源&lt;/strong&gt; ，在 GitHub &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMollySophia%2Frwkv_mobile_flutter&quot; target=&quot;_blank&quot;&gt;rwkv_mobile_flutter&lt;/a&gt; 仓库中可以看到项目代码。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;测试数据显示：经过 NPU 优化后，RWKV-7 1.5B 模型在高通 8Gen3 手机芯片实现了 &lt;strong&gt;62 token/s&lt;/strong&gt; 的推理速度，G1 0.1B 模型的推理速度则高达 &lt;strong&gt;170 token/s&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;模型下载&lt;/h2&gt; 
&lt;p&gt;下载已完成训练的 RWKV7-G1 0.1B/0.4B/1.5B 模型：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hugging Face：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FBlinkDL%2Frwkv7-g1%2Ftree%2Fmain&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/BlinkDL/rwkv7-g1/tree/main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;魔搭社区：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Fmodels%2FRWKV%2Frwkv7-g1%2Ffiles&quot; target=&quot;_blank&quot;&gt;https://modelscope.cn/models/RWKV/rwkv7-g1/files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WiseModel：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwisemodel.cn%2Fmodels%2Frwkv4fun%2FRWKV-7-G1%2Ffile&quot; target=&quot;_blank&quot;&gt;https://wisemodel.cn/models/rwkv4fun/RWKV-7-G1/file&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下载其他训练中的 RWKV7-G1 模型（G1 2.9B）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hugging Face：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FBlinkDL%2Ftemp-latest-training-models%2Ftree%2Fmain&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/BlinkDL/temp-latest-training-models/tree/main&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;魔搭社区：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Fmodels%2FRWKV%2Ftemp-latest-training-models%2Ffiles&quot; target=&quot;_blank&quot;&gt;https://modelscope.cn/models/RWKV/temp-latest-training-models/files&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;G1 模型发布计划&lt;/h2&gt; 
&lt;p&gt;当前已发布 G1 0.1B/0.4B/1.5B 模型，正在训练 G1 2.9B，具体发布计划如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;模型&lt;/th&gt; 
   &lt;th&gt;发布计划&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;G1 0.1B&lt;/td&gt; 
   &lt;td&gt;3 月 8 日（已发布）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;G1 0.4B&lt;/td&gt; 
   &lt;td&gt;3 月 25 日（已发布）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;G1 1.5B&lt;/td&gt; 
   &lt;td&gt;4 月 29 日（已发布）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;G1 2.9B&lt;/td&gt; 
   &lt;td&gt;5 月，中旬&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;我们也在同时准备更大更优的数据集 &lt;strong&gt;World v3.7&lt;/strong&gt;。World v3.7 数据集的准备工作即将完成，届时将开始训练 RWKV7-G1 7B 模型。&lt;/p&gt; 
&lt;h2&gt;加入 RWKV 社区&lt;/h2&gt; 
&lt;p&gt;欢迎大家加入 RWKV 社区，可以从 RWKV 中文官网了解 RWKV 模型，也可以加入 RWKV 论坛、QQ 频道和 QQ 群聊，一起探讨 RWKV 模型。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📖 RWKV 中文文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.cn&quot; target=&quot;_blank&quot;&gt;https://www.rwkv.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 RWKV 论坛：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.rwkv.cn%2F&quot; target=&quot;_blank&quot;&gt;https://community.rwkv.cn/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐧 QQ 频道：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpd.qq.com%2Fs%2F9n21eravc&quot; target=&quot;_blank&quot;&gt;https://pd.qq.com/s/9n21eravc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📺 BiliBili 视频教程：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546689096910933&quot; target=&quot;_blank&quot;&gt;https://space.bilibili.com/3546689096910933&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;欢迎大家基于 RWKV-7 进行创业、科研，我们也会为基于 RWKV 的项目提供技术支持。&lt;/p&gt; 
 &lt;p&gt;如果您的团队正在基于 RWKV 创业或开展研究，请联系我们！（在&quot;RWKV 元始智能&quot;微信公众号留言您的联系方式，或发送邮件到&quot;contact@rwkvos.com&quot;。）&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347518</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347518</guid>
            <pubDate>Mon, 28 Apr 2025 03:18:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Bytebase 3.6.0 - SOC 2 Type 2</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;继 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247509519%26idx%3D1%26sn%3Da311a8b5c1b50826fab0e97ba449d774%26scene%3D21&quot; target=&quot;_blank&quot;&gt;SOC 2 Type 1&lt;/a&gt; 之后，Bytebase 又成功取得了 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247509875%26idx%3D1%26sn%3D8f375b3e0e1e9f5a9e290c32598327a9%26scene%3D21&quot; target=&quot;_blank&quot;&gt;SOC 2 Type 2&lt;/a&gt; 认证 🥳&lt;/p&gt; 
&lt;h1&gt;🚀 新功能&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;增加对 Trino 数据库的基本支持。&lt;/li&gt; 
 &lt;li&gt;支持将 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fadministration%2Fsso%2Foidc%2F%23group-syncing&quot; target=&quot;_blank&quot;&gt;OIDC IdP 群组&lt;/a&gt;同步到 Bytebase 群组。&lt;/li&gt; 
 &lt;li&gt;支持 Cassandra 在 SQL 编辑器中执行语句和创建工单。&lt;/li&gt; 
 &lt;li&gt;可自动重试 PostgreSQL 锁超时。 &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af1d7a7689a520c78354902c1b378570ca3.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🔔 重大变更&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;API 变更：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;移除 &lt;code&gt;EnvironmentService&lt;/code&gt;。环境设置移动到 &lt;code&gt;SettingService&lt;/code&gt;。移除自定义角色的 &lt;code&gt;bb.environments.*&lt;/code&gt; 权限。你可以授予自定义角色 &lt;code&gt;bb.settings.update&lt;/code&gt; 权限以更新环境设置。&lt;/li&gt; 
   &lt;li&gt;移除预定义的 &lt;code&gt;groupValue&lt;/code&gt; 枚举值，仅允许 &lt;code&gt;role&lt;/code&gt;。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;下线异常中心。数据库列表/详情页会直接展示 Schema 漂移。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🎄 改进&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;将 Docker 基本镜像更新为 Alpine，以改善安全性。&lt;/li&gt; 
 &lt;li&gt;当工单中有 11 个及以上数据库时，支持在 UI 中对工单任务按照状态进行过滤。 &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-9878df6abc1f4d422e05dabe77ecd2417e3.png&quot; alt=&quot;file&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/li&gt; 
 &lt;li&gt;在 MSSQL 中添加对 &lt;code&gt;EXPLAIN&lt;/code&gt; 的支持。&lt;/li&gt; 
 &lt;li&gt;在 Redis 的 SQL 编辑器中支持更多只读命令。&lt;/li&gt; 
 &lt;li&gt;改进 MSSQL FROM 子句中的列自动补全。&lt;/li&gt; 
 &lt;li&gt;修复 PostgreSQL 的日期无限显示问题。&lt;/li&gt; 
 &lt;li&gt;在 SQL 编辑器中隐藏从属对象。&lt;/li&gt; 
 &lt;li&gt;从 Oracle 的 &lt;code&gt;EXPLAIN&lt;/code&gt; 查询中移除 &lt;code&gt;FILTER_PREDICATES&lt;/code&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📕 安装及升级&lt;/h1&gt; 
&lt;p&gt;新安装 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget-started%2Fself-host%2F&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get-started/self-host/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;升级 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget-started%2Fupgrade%2F&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get-started/upgrade/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;升级前请备份元数据库，升级后无法回退版本。&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;💡 更多资讯，请关注 Bytebase 公号：Bytebase&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/6148470/blog/18261924</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/18261924</guid>
            <pubDate>Mon, 28 Apr 2025 03:07:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>小米开源首个推理大模型「Xiaomi MiMo」——为「Reasoning」而生</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;今天，小米开源首个为推理（Reasoning）而生的大模型「Xiaomi MiMo」，联动预训练到后训练，全面提升推理能力。&lt;/p&gt; 
&lt;p&gt;在数学推理（AIME 24-25）和，代码竞赛（LiveCodeBench v5）公开测评集上，MiMo 仅用 7B 的参数规模，超越了 OpenAI 的闭源推理模型 o1-mini 和阿里 Qwen 更大规模的开源推理模型 QwQ-32B-Preview。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;683&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0430/103847_joxz_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;MiMo 推理能力的提升，由预训练和后训练阶段中数据和算法等多层面的创新联合驱动，包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;预训练&lt;/strong&gt;：核心是让模型见过更多推理模式&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;数据：着重挖掘富推理语料，并合成约 200B tokens 推理数据。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;训练：进行了三阶段训练，逐步提升训练难度，总训练 25T tokens。&lt;br&gt; &lt;br&gt; &lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0430/104118_bvTj_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;后训练&lt;/strong&gt;：核心是高效稳定的强化学习算法和框架&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;算法：提出 Test Difficulty Driven Reward 来缓解困难算法问题中的奖励稀疏问题，并引入 Easy Data Re-Sampling 策略，以稳定&amp;nbsp;RL&amp;nbsp;训练。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;框架：设计了 Seamless Rollout 系统，使得 RL 训练加速 2.29 倍，验证加速 1.96 倍。&lt;br&gt; &lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0430/104133_eS5a_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;MiMo-7B 已开源 4 个模型至 HuggingFace：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FXiaomiMiMo&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/XiaomiMiMo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0430/104219_TNxZ_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;技术细节见技术报告：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FXiaomiMiMo%2FMiMo%2Fblob%2Fmain%2FMiMo-7B-Technical-Report.pdf&quot; target=&quot;_blank&quot;&gt;https://github.com/XiaomiMiMo/MiMo/blob/main/MiMo-7B-Technical-Report.pdf&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347495</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347495</guid>
            <pubDate>Mon, 28 Apr 2025 02:39:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>中科院软件所开源流式机器学习新框架 FreewayML</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;近日，中国科学院软件研究所软件工程技术研究开发中心分布式计算与系统工程研究团队&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FWdJhOtK903SaQu0te1ZpDQ&quot; target=&quot;_blank&quot;&gt;提出&lt;/a&gt;了一种新的流式机器学习框架 FreewayML，为复杂场景数据流的高效分析提供了创新解决方案。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;现有典型流式学习框架如 Flink ML、River、Alink、StreamDM 等存在稳定性和通用性不足两个难题。在稳定性方面，现有框架一般采用简单直接的模型更新方法，没有充分考虑数据动态变化对训练和预测的影响，导致实时正确率波动较大。在通用性方面，这些框架大多只能支持少量传统机器学习算法，如流式 Logistic Regression、流式 K-Means 聚类等，难以支持流式深度学习等复杂数据分析算法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;针对上述问题，研究团队提出了一种新的流式机器学习框架 FreewayML。团队首先通过实证研究深入分析数据动态变化（非独立同分布）对流式学习稳定性的影响，定义了三种典型的数据偏移模式——轻微偏移、严重偏移和重现型偏移，并相应提出三重自适应调节机制，即多时间粒度模型组合机制、协同经验聚类机制和历史知识重用机制，通过优化框架处理流程，实现模型准确率与稳定性的协同提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreewayML 还设计了数据训练流和预测流，可以同时支持传统机器学习算法和深度学习算法，突破了现有框架通用性上的局限。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;269&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-16f104508e372a912fb4310b0ae2797353c.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreewayML 框架能广泛适用于现有流式机器学习模型，相关成果已经在南方电网合作项目开展实际应用。在电力、交通、网络安全等典型流式数据集上的实验表明，相较现有框架，FreewayML 的平均准确率提升 3% 至 7%，实时准确率最高提升 45%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;203&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-55c2b7fc18c64841023eba7fbd7bf6ffa6c.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347484</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347484</guid>
            <pubDate>Mon, 28 Apr 2025 02:10:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>腾讯重构混元大模型研发体系，加大 AI 投入</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯对其混元大模型研发体系进行了全面重构，围绕算力、算法和数据三大核心板块，刷新团队部署，加码研发投入。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;278&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d4cf8514493b1f5cf7a929c33b8abb6c2e7.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;调整后，腾讯成立两个新的部门：大语言模型部和多模态模型部，分别负责探索大语言模型和多模态大模型的前沿技术，持续迭代基础模型，提升模型能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，进一步加强大模型数据能力和平台底座建设，其中数据平台部专注大模型数据全流程管理与建设，机器学习平台部则聚焦机器学习与大数据融合平台建设，为 AI 模型训练推理、大数据业务提供全面高效的 PaaS 平台底座，共同支撑腾讯混元大模型技术研发。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯相关人士表示，这意味着腾讯在快速调整组织架构以应对日新月异的大模型行业发展，这次调整有利于整合资源，优化研发流程，进一步提升腾讯在 AI 领域的长期技术作战能力。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347476</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347476</guid>
            <pubDate>Mon, 28 Apr 2025 02:02:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>GFast 开发 MCP 服务器之 mark3labs/mcp-go 库接入（一）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这将是一个系列文章，我们将从简到繁开发一套基于 GFast 框架下 MCP 服务工具&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;github.com/mark3labs/mcp-go 介绍&lt;/h2&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;code&gt;github.com/mark3labs/mcp-go&lt;/code&gt;&lt;span&gt; &lt;/span&gt;是一个基于 Go 语言实现的&lt;span&gt; &lt;/span&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;的开源项目，旨在为大语言模型&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;LLM&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;与外部系统的交互提供标准化协议支持。以下是综合搜索结果的关键信息&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;1.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;项目功能与定位&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;该项目实现了 MCP 协议的完整规范，提供&lt;span&gt; &lt;/span&gt;&lt;strong&gt;客户端和服务端能力&lt;/strong&gt;，用于 LLM 与数据资源、工具的集成。例如，支持通过标准化方式暴露资源、提示词和工具，便于 LLM 调用外部 API 或执行操作。&lt;/li&gt; 
 &lt;li&gt;目前支持&lt;span&gt; &lt;/span&gt;&lt;strong&gt;stdio&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;和&lt;span&gt; &lt;/span&gt;&lt;strong&gt;SSE&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Server-Sent Events&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;作为传输协议，未来可能扩展其他通信方式（如 WebSocket 或 gRPC&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;技术特点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Go 语言优势&lt;/strong&gt;：与 Python 或 TypeScript 实现的 MCP SDK 相比，Go 版本强调强类型检查、高并发性能和简易部署，适合生产环境的高可靠性需求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模块化设计&lt;/strong&gt;：分层架构（传输层、协议层、用户层）确保扩展性和维护性，开发者可自定义传输方式或协议扩展。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;与其他 MCP 实现的对比&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ThinkInAI 的 Go-MCP&lt;/strong&gt;（另一个 Go 实现）更注重生态建设（如 Marketplace 和工具链），而&lt;span&gt; &lt;/span&gt;&lt;code&gt;mark3labs/mcp-go&lt;/code&gt;&lt;span&gt; &lt;/span&gt;目前功能更聚焦于协议基础实现。&lt;/li&gt; 
 &lt;li&gt;Python/TypeScript SDK 动态语言的灵活性更高，但长期维护成本可能更高。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;安全与维护状态&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;根据 GitHub 页面，该项目&lt;span&gt; &lt;/span&gt;&lt;strong&gt;未设置安全策略文件&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;SECURITY.md&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;，且无公开的安全公告，需注意潜在风险。&lt;/li&gt; 
 &lt;li&gt;项目活跃度未明确提及，但代码示例和协议支持显示其具备实际可用性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;总结&lt;/h3&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;code&gt;mark3labs/mcp-go&lt;/code&gt;&lt;span&gt; &lt;/span&gt;是一个轻量级的 MCP 协议 Go 实现，适合需要高性能、强类型支持的 LLM 集成场景。若需更完整的生态工具（如服务发现、调试面板），可参考 ThinkInAI 的 Go-MCP 项目。建议进一步查阅其 GitHub 仓库的文档和示例以评估适用性。&lt;/p&gt; 
&lt;h2&gt;MCP Server 的业务能力&lt;/h2&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;--fonts-override:var(--fonts-default-override-zh-cn); --fonts-regular:var(--fonts-override, var(--fonts-proportional)),&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Request Method&lt;/th&gt; 
   &lt;th&gt;发起方&lt;/th&gt; 
   &lt;th&gt;响应方&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;initialized&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;初始化会话&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;tools-list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的工具&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;tools/call&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;调用工具&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的资源&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/read&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;获取资源内容&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/templates&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的参数化资源&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/subscribe&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;订阅特定资源，监听其变化事件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;prompts/list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的提示词&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;prompts/get&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;获取特定提示词&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;roots/list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;列出服务器有权访问的客户端文件系统根节点（暴露目录和文件）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;sampling/create&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;启用服务器的 AI 生成能力（ sampling creation&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;一、简单的 MCP 服务器 demo 实现 (stdio 方式)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;import&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;context&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;errors&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;fmt&quot;&lt;/span&gt;

&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/mcp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/server&quot;&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建 MCP 服务器&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;Demo 🚀&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器名称&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;  &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器版本&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 添加工具&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Say hello to someone&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数是必需的&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Name of the person to greet&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 为工具添加处理器&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 启动标准输入输出服务器&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;);&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Printf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Server error: %v\\n&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 打印服务器错误&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 从请求参数中获取名字参数，并断言为字符串类型&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 如果断言失败，返回错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;errors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;New&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name must be a string&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回包含问候语的结果&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, %s!&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;这段代码实现了一个简单的&lt;span&gt; &lt;/span&gt;&lt;strong&gt;MCP&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Model Context Protocol&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;服务器&lt;/strong&gt;，它通过标准输入/输出&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;stdio&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;与客户端交互，提供了一个名为&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;&lt;span&gt; &lt;/span&gt;的工具，用于向指定的人打招呼。以下是详细解析：&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;1. 核心功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;工具注册&lt;/strong&gt;：服务器注册了一个工具&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;，接收一个字符串参数&lt;span&gt; &lt;/span&gt;&lt;code&gt;name&lt;/code&gt;，返回问候语。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;标准输入/输出通信&lt;/strong&gt;：通过&lt;span&gt; &lt;/span&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt; &lt;/span&gt;与客户端交互（适合命令行或管道调用）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：验证参数类型，返回明确的错误信息。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;2. 代码逐层解析&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;(1) 初始化 MCP 服务器&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
    &lt;span style=&quot;color:#106303&quot;&gt;&quot;Demo 🚀&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器名称（显示标识）&lt;/span&gt;
    &lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;  &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器版本&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;创建一个 MCP 服务器实例，指定名称和版本（用于元信息标识）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(2) 定义工具&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Say hello to someone&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具功能描述&lt;/span&gt;
    &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;                      &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数名&lt;/span&gt;
        &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt;                         &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数必填&lt;/span&gt;
        &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Name of the person to greet&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
    &lt;span&gt;),&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;工具名称&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;参数配置&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;name&lt;/code&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;字符串类型，必填字段，描述为「Name of the person to greet」。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;通过&lt;span&gt; &lt;/span&gt;&lt;code&gt;mcp.WithString&lt;/code&gt;&lt;span&gt; &lt;/span&gt;和链式方法声明参数约束。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(3) 注册工具处理器&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;将工具&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;&lt;span&gt; &lt;/span&gt;绑定到处理函数&lt;span&gt; &lt;/span&gt;&lt;code&gt;helloHandler&lt;/code&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(4) 启动服务器&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;启动标准输入/输出模式，监听来自客户端的请求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(5) 工具处理函数&lt;span&gt; &lt;/span&gt;&lt;code&gt;helloHandler&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 获取参数&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;errors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;New&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name must be a string&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 类型检查&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, %s!&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 返回结果&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;参数提取&lt;/strong&gt;：从&lt;span&gt; &lt;/span&gt;&lt;code&gt;request.Params.Arguments&lt;/code&gt;&lt;span&gt; &lt;/span&gt;中获取&lt;span&gt; &lt;/span&gt;&lt;code&gt;name&lt;/code&gt;&lt;span&gt; &lt;/span&gt;参数，并验证是否为字符串。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：若类型不符，返回错误。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;结果生成&lt;/strong&gt;：使用&lt;span&gt; &lt;/span&gt;&lt;code&gt;mcp.NewToolResultText&lt;/code&gt;&lt;span&gt; &lt;/span&gt;封装文本响应。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;3. 数据流示例&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;客户端请求&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;JSON 输入）&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span&gt;{&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;tool&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#22863a&quot;&gt;&quot;arguments&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span style=&quot;color:#22863a&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;Alice&quot;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;服务器响应&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span&gt;{&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;result&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#22863a&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, Alice!&quot;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;错误场景（非字符串参数）&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span&gt;{&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;tool&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#22863a&quot;&gt;&quot;arguments&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span style=&quot;color:#22863a&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#009999&quot;&gt;123&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;响应错误&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;name must be a string
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;4. 关键设计点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;工具化架构&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;每个功能（如问候）封装为独立工具，通过名称调用，支持灵活扩展。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;强类型校验&amp;lt;/strong&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;使用 Go 的类型断言确保参数合法性。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;标准化协议&amp;lt;/strong&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;输入/输出遵循 MCP 格式，兼容不同客户端（如 CLI、Web 前端）。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;轻量级通信&amp;lt;/strong&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;code&amp;gt;stdio&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;模式无需网络依赖，适合集成到脚本或管道。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;5. 如何运行？&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;编译服务器&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go build -v -o server &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;再启动 mcp inspetor&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;（通过标准输入）：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx -y @modelcontextprotocol/inspector ./server &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-14%2F20250414234917.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;20250414234917&quot; src=&quot;https://oscimg.oschina.net/oscnet//1b8523b60cfc72ad9f182af4bb80f6fc.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;点击&amp;lt;code&amp;gt;connect&amp;lt;/code&amp;gt;:

&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;&amp;lt;a href=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-14/20250414235059.png&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img alt=&quot;20250414235059&quot; src=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-14/20250414235059.png&quot; /&amp;gt;&amp;lt;/a&amp;gt;

&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;连接后可以列出相关工具，此时显示&amp;lt;code&amp;gt;hello_world&amp;lt;/code&amp;gt;,可以进行&amp;lt;code&amp;gt;run tool&amp;lt;/code&amp;gt;测试
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;二、简单的 MCP 服务器 demo 实现 (同时支持 stdio 和 SSE 方式)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;import&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;context&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;encoding/json&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;flag&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;io&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;log&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;net/http&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;os&quot;&lt;/span&gt;

&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/mcp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/server&quot;&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// authKey 是用于在 context 中存储认证令牌的自定义键类型&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;authKey&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;struct&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// withAuthKey 将认证令牌添加到 context 中&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 原始 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// auth: 要存储的认证令牌&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 包含令牌的新 context&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;withAuthKey&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithValue&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;authKey&lt;/span&gt;&lt;span&gt;{},&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// authFromRequest 从 HTTP 请求头中提取认证令牌并存入 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 原始 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// r: HTTP 请求对象&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 包含认证令牌的新 context&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;authFromRequest&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;http&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;withAuthKey&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Header&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// authFromEnv 从环境变量中提取认证令牌并存入 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 原始 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 包含认证令牌的新 context&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;authFromEnv&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;withAuthKey&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;os&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Getenv&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;API_KEY&quot;&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// tokenFromContext 从 context 中提取认证令牌&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 包含令牌的 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 令牌字符串或错误 (如果令牌不存在或类型不符)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 注意: 此方法不关心令牌来源 (HTTP 头或环境变量)，统一通过 context 获取&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;tokenFromContext&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Value&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;authKey&lt;/span&gt;&lt;span&gt;{}).(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;missing auth&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// response 定义 httpbin.org 返回的数据结构&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;response&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;struct&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;Args&lt;/span&gt;    &lt;span style=&quot;color:#d73a49&quot;&gt;map&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;interface&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;`json:&quot;args&quot;`&lt;/span&gt;    &lt;span style=&quot;color:#6a737d&quot;&gt;// 请求参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;Headers&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;map&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;      &lt;span style=&quot;color:#106303&quot;&gt;`json:&quot;headers&quot;`&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 请求头&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// makeRequest 向 httpbin.org 发起带认证的 GET 请求&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: context 对象 (用于超时控制等)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// message: 要发送的消息 (会作为查询参数)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// token: 认证令牌 (会添加到请求头)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 响应数据或错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;makeRequest&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;response&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建 HTTP 请求&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;http&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewRequestWithContext&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;https://httpbin.org/anything&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;创建请求失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 设置认证头&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Header&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 添加查询参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;query&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;URL&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Query&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;query&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Add&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;URL&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;RawQuery&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;query&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Encode&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 发送请求&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;http&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;DefaultClient&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Do&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;请求失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;defer&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Body&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Close&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 读取响应体&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;body&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;io&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ReadAll&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Body&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;读取响应失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 解析 JSON 响应&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;response&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;json&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Unmarshal&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;body&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;);&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;解析 JSON 失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// handleMakeAuthenticatedRequestTool 认证请求工具的处理函数&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 包含认证令牌的 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// request: MCP 工具调用请求&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 工具调用结果或错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;handleMakeAuthenticatedRequestTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 从请求参数中获取 message 参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;缺少 message 参数或参数类型错误&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 从 context 中提取认证令牌&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;tokenFromContext&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;获取认证令牌失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 发起带认证的请求&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;makeRequest&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;执行请求失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回格式化后的响应&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;%+v&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// MCPServer 封装 MCP 服务器的结构体&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;struct&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// NewMCPServer 创建并配置 MCP 服务器实例&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 初始化好的 MCPServer 指针&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建基础服务器实例&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;example-server&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器名称&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;         &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器版本&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithResourceCapabilities&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 启用资源能力&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithPromptCapabilities&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;        &lt;span style=&quot;color:#6a737d&quot;&gt;// 启用提示词能力&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithToolCapabilities&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;          &lt;span style=&quot;color:#6a737d&quot;&gt;// 启用工具能力&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 注册认证请求工具&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;make_authenticated_request&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;执行带认证的 HTTP 请求&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;             &lt;span style=&quot;color:#6a737d&quot;&gt;// 字符串参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;要发送的消息内容&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;     &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt;                   &lt;span style=&quot;color:#6a737d&quot;&gt;// 必填参数&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;handleMakeAuthenticatedRequestTool&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// ServeSSE 启动 SSE 模式的服务&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// addr: 监听地址 (如&quot;localhost:8080&quot;)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: SSEServer 实例&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;ServeSSE&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;addr&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;SSEServer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewSSEServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithBaseURL&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;http://%s&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;addr&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 基础 URL&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithSSEContextFunc&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;authFromRequest&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;         &lt;span style=&quot;color:#6a737d&quot;&gt;// 使用请求头认证&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// ServeStdio 启动标准输入输出模式的服务&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 错误信息 (如果有)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; 
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithStdioContextFunc&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;authFromEnv&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 使用环境变量认证&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 解析命令行参数&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;flag&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;StringVar&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;t&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;stdio&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;传输协议类型 (stdio 或 sse)&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;flag&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;StringVar&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;transport&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;stdio&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;传输协议类型 (stdio 或 sse)&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;flag&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Parse&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建服务器实例&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 根据参数启动对应模式&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;switch&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;stdio&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 标准输入输出模式&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;();&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Fatalf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;服务器错误: %v&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;sse&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// SSE 服务器模式&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeSSE&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;localhost:8080&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Printf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;SSE 服务启动，监听 :8080 端口&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Start&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;:8080&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Fatalf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;服务器错误: %v&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;default&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Fatalf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;无效的传输协议: %s。必须是&#39;stdio&#39;或&#39;sse&#39;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;这段代码实现了一个基于&lt;span&gt; &lt;/span&gt;&lt;strong&gt;MCP&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Model Context Protocol&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;的服务器，支持通过&lt;span&gt; &lt;/span&gt;&lt;strong&gt;SSE&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Server-Sent Events&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;或&lt;span&gt; &lt;/span&gt;&lt;strong&gt;标准输入/输出&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;stdio&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;两种方式与客户端交互。以下是代码的详细解析：&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;1. 核心功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;认证管理&lt;/strong&gt;：从 HTTP 请求头或环境变量中提取认证令牌（&lt;code&gt;Authorization&lt;/code&gt;），并通过上下文（&lt;code&gt;context.Context&lt;/code&gt;）传递。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;工具调用&lt;/strong&gt;：注册一个名为&lt;span&gt; &lt;/span&gt;&lt;code&gt;make_authenticated_request&lt;/code&gt;&lt;span&gt; &lt;/span&gt;的工具，用于向外部 API&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;code&gt;httpbin.org&lt;/code&gt;）发送带认证的请求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多传输协议支持&lt;/strong&gt;：支持&lt;span&gt; &lt;/span&gt;&lt;code&gt;SSE&lt;/code&gt;&lt;span&gt; &lt;/span&gt;和&lt;span&gt; &lt;/span&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt; &lt;/span&gt;两种通信方式（通过命令行参数切换）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;2. 代码结构解析&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;(1) 认证管理&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;authKey&lt;/code&gt;&lt;span&gt; &lt;/span&gt;类型&lt;/strong&gt;：自定义的上下文键，用于存储认证令牌。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;withAuthKey&lt;/code&gt;&lt;/strong&gt;：将令牌注入上下文。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;authFromRequest&lt;/code&gt;&lt;/strong&gt;：从 HTTP 请求头提取&lt;span&gt; &lt;/span&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;span&gt; &lt;/span&gt;字段并存入上下文。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;authFromEnv&lt;/code&gt;&lt;/strong&gt;：从环境变量&lt;span&gt; &lt;/span&gt;&lt;code&gt;API_KEY&lt;/code&gt;&lt;span&gt; &lt;/span&gt;中读取令牌并存入上下文。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tokenFromContext&lt;/code&gt;&lt;/strong&gt;：从上下文中提取令牌，供工具函数使用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(2) 工具实现&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;makeRequest&lt;/code&gt;&lt;span&gt; &lt;/span&gt;函数&lt;/strong&gt;：向&lt;span&gt; &lt;/span&gt;&lt;code&gt;httpbin.org/anything&lt;/code&gt;&lt;span&gt; &lt;/span&gt;发送 GET 请求，附带认证令牌和查询参数&lt;span&gt; &lt;/span&gt;&lt;code&gt;message&lt;/code&gt;，返回响应数据。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;handleMakeAuthenticatedRequestTool&lt;/code&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;MCP 工具的核心逻辑： 
  &lt;ul&gt; 
   &lt;li&gt;从请求参数中提取&lt;span&gt; &lt;/span&gt;&lt;code&gt;message&lt;/code&gt;。&lt;/li&gt; 
   &lt;li&gt;从上下文中获取认证令牌。&lt;/li&gt; 
   &lt;li&gt;调用&lt;span&gt; &lt;/span&gt;&lt;code&gt;makeRequest&lt;/code&gt;&lt;span&gt; &lt;/span&gt;发送请求，返回格式化后的响应。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(3) MCP 服务器配置&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;NewMCPServer&lt;/code&gt;&lt;/strong&gt;：初始化 MCP 服务器： &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;设置服务器名称和版本。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;启用资源、提示词和工具能力。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;注册工具&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;make_authenticated_request&amp;lt;/code&amp;gt;，绑定处理函数&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;handleMakeAuthenticatedRequestTool&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;ServeSSE&amp;lt;/code&amp;gt;&amp;lt;/strong&amp;gt;：启动 SSE 服务器，绑定认证函数&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;authFromRequest&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;ServeStdio&amp;lt;/code&amp;gt;&amp;lt;/strong&amp;gt;：启动 stdio 模式，从环境变量获取认证令牌。&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(4) 主函数&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;通过命令行参数&lt;span&gt; &lt;/span&gt;&lt;code&gt;-t&lt;/code&gt;&lt;span&gt; &lt;/span&gt;选择传输协议（&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt; &lt;/span&gt;或&lt;span&gt; &lt;/span&gt;&lt;code&gt;sse&lt;/code&gt;）。 &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;stdio&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;模式&amp;lt;/strong&amp;gt;：直接通过标准输入/输出交互（适合 CLI 或管道调用）。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;sse&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;模式&amp;lt;/strong&amp;gt;：启动 HTTP 服务（默认端口&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;8080&amp;lt;/code&amp;gt;），通过 SSE 协议通信。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;3. 关键逻辑流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;客户端发起请求&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;若为 SSE 模式，HTTP 请求头需包含&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;Authorization&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;若为 stdio 模式，需设置环境变量&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;API_KEY&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;认证令牌传递&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;服务器通过&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;authFromRequest&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;或&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;authFromEnv&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;提取令牌，存入上下文。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;工具调用&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;客户端发送 MCP 格式的请求，指定工具名&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;make_authenticated_request&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;和参数&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;message&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;服务器调用&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;handleMakeAuthenticatedRequestTool&amp;lt;/code&amp;gt;，从上下文中获取令牌并发送到&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;httpbin.org&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;返回结果&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;工具将&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;httpbin.org&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;的响应封装为 MCP 格式返回给客户端。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;4. 示例用法&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;(1) SSE 模式&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;# 启动服务器&lt;/span&gt;
go run main.go -t sse

&lt;span style=&quot;color:#6a737d&quot;&gt;# 客户端请求示例（使用 curl&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
curl -N -H &lt;span style=&quot;color:#106303&quot;&gt;&quot;Accept: text/event-stream&quot;&lt;/span&gt; &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  -H &lt;span style=&quot;color:#106303&quot;&gt;&quot;Authorization: Bearer YOUR_TOKEN&quot;&lt;/span&gt; &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  -X POST &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  -d &lt;span style=&quot;color:#106303&quot;&gt;&#39;{&quot;tool&quot;:&quot;make_authenticated_request&quot;, &quot;params&quot;:{&quot;arguments&quot;:{&quot;message&quot;:&quot;hello&quot;}}}&#39;&lt;/span&gt; &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  http://localhost:8080/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;(2) Stdio 模式&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;# 设置环境变量并启动&lt;/span&gt;
&lt;span style=&quot;color:#005cc5&quot;&gt;export&lt;/span&gt; &lt;span style=&quot;color:teal&quot;&gt;API_KEY&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;YOUR_TOKEN&quot;&lt;/span&gt;
go run main.go -t stdio

&lt;span style=&quot;color:#6a737d&quot;&gt;# 通过标准输入发送请求（示例 JSON&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#005cc5&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&#39;{&quot;tool&quot;:&quot;make_authenticated_request&quot;, &quot;params&quot;:{&quot;arguments&quot;:{&quot;message&quot;:&quot;hello&quot;}}}&#39;&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; go run main.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;5. 如何运行？&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;启动 SSE 服务器&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go run sse.go -t sse &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;再启动 mcp inspetor&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx -y @modelcontextprotocol/inspector &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;&amp;lt;a href=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-15/20250415000301.png&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img alt=&quot;20250415000301&quot; src=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-15/20250415000301.png&quot; /&amp;gt;&amp;lt;/a&amp;gt;

&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;连接后可以列出相关工具，此时显示&amp;lt;code&amp;gt;make_authenticated_request&amp;lt;/code&amp;gt;,可以进行&amp;lt;code&amp;gt;run tool&amp;lt;/code&amp;gt;测试
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;三、GFast 集成&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在实际开发中，很多公司内部的业务有自己的框架，集成了许许多多的独特功能。总不能为了使用 MCP 重写一套 Web 框架，此时就需要使用到 mark3labs/mcp-go 集成到 Web 框架下。因 GFast 使用的是 GoFrame 框架，下面以 GoFrame 框架为例：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;import&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;context&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;errors&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/gogf/gf/v2/frame/g&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/gogf/gf/v2/net/ghttp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/mcp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/server&quot;&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;helloHandler2&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 从请求参数中获取名字参数，并断言为字符串类型&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 如果断言失败，返回错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;errors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;New&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name must be a string&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回包含问候语的结果&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, %s!&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建一个新的 MCPServer 实例（假设这是 SSEServer 所需的）&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;gf-mcp-server&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 根据你的实际代码调整&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// mcpServer 新加 Tool、Resource、Prompt&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 添加工具&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Say hello to someone&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数是必需的&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Name of the person to greet&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 为工具添加处理器&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;helloHandler2&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建一个新的 SSEServer 实例，并传入 MCPServer&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewSSEServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;g&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Server&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 将 SSEServer 的 SSE 端点和处理函数集成到 GoFrame 路由中&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;BindHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;CompleteSsePath&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ghttp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Response&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Writer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;})&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 将 SSEServer 的消息端点和处理函数集成到 GoFrame 路由中&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;BindHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;CompleteMessagePath&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ghttp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Response&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Writer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;})&lt;/span&gt;

&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;SetPort&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#009999&quot;&gt;8000&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;运行&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;启动 SSE 服务器&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go run main.go &lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;此时 MCPServer 请求响应将被 GoFrame 接管，并绑定如下路由&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;a href=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-16/20250416104437.png&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img alt=&quot;20250416104437&quot; src=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-16/20250416104437.png&quot; /&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;&amp;lt;strong&amp;gt;再启动 mcp inspetor&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;

&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx -y @modelcontextprotocol/inspector &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-16%2F20250416104240.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;20250416104240&quot; src=&quot;https://oscimg.oschina.net/oscnet//3940ea2feac26ad7773006e63d4932ec.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;连接后可以列出相关工具，此时显示&amp;lt;code&amp;gt;hello_world&amp;lt;/code&amp;gt;工具,可以进行&amp;lt;code&amp;gt;run tool&amp;lt;/code&amp;gt;测试
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347466</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347466</guid>
            <pubDate>Mon, 28 Apr 2025 01:28:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Linus 痛恨大小写不敏感的文件系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Linus 近日在内核邮件列表（LKML）上发表&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwjajMJyoTv2KZdpVRoPn0LFZ94Loci37WLVXmMxDbLOjg%40mail.gmail.com%2F&quot; target=&quot;_blank&quot;&gt;长文&lt;/a&gt;&lt;/u&gt;，「怒斥」&lt;strong&gt;文件系统中的大小写不敏感（case-insensitive）功能。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;他明确表示，&lt;strong&gt;这种设计是个「巨大的错误」&lt;/strong&gt;，文件系统开发者从未吸取教训。问题的核心不在于测试不足，而在于一开始就不该实现这种功能。&lt;/p&gt; 
&lt;p&gt;Linus 表示，大小写不敏感功能会带来严重的安全风险。他举例说明，许多用户空间程序会检查文件名是否符合安全敏感模式，但文件系统可能无视不可打印字符，导致原本不应匹配的文件名被错误匹配。这种「忽略其他因素」的做法，让安全检查形同虚设。&lt;/p&gt; 
&lt;p&gt;他举了一个例子：&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;❤&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;和 ❤️&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;表面上看非常相似，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;但实际上是不同的编码。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;如果大小写折叠逻辑一刀切地忽略这类细节，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;那么这两个文件名就会被错误地认为是「相同的」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;——&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;这不仅仅是名字混淆，更会让原本基于字符串检查机制（如验证路径是否安全）的用户空间程序失效，引发安全漏洞。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;482&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/195826_9tDN_2720166.png&quot; width=&quot;1212&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwjajMJyoTv2KZdpVRoPn0LFZ94Loci37WLVXmMxDbLOjg%40mail.gmail.com%2F&quot; target=&quot;_blank&quot;&gt;https://lore.kernel.org/lkml/CAHk-=wjajMJyoTv2KZdpVRoPn0LFZ94Loci37WLVXmMxDbLOjg@mail.gmail.com/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Linus 还顺势讽刺了那些怀念老式 FAT 文件系统的人（FAT 文件系统是早期 PC 时代常见的文件系统，但在现代计算环境中，这种设计早已被证明存在大量问题，尤其在安全性和一致性方面表现糟糕）：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;真是见鬼了。大小写不敏感，本质上就是个 BUG，文件系统开发者们居然到今天还把它当作一个‘特性’，我完全无法理解&lt;/strong&gt;。这种行为简直像是，他们对古老的 FAT 文件系统怀有一种变态的崇拜，非得一遍又一遍地把这种糟糕设计复制出来——而且每次都做得更烂。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;总的来说，在 Linus 看来，所谓「正确实现大小写不敏感」，本质上就是无解的。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347415/linus-torvalds-anti-case-fold</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347415/linus-torvalds-anti-case-fold</guid>
            <pubDate>Sun, 27 Apr 2025 12:04:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>马斯克预告下周发布 Grok 3.5 早期测试版，基于第一性原理进行推理</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;Qwen 3 发布才一天，Grok 3.5 就要来了。马斯克宣布：&lt;strong&gt;下周即将发布 Grok 3.5 的早期&lt;strong&gt;&lt;strong&gt;测&lt;/strong&gt;&lt;/strong&gt;试版&lt;/strong&gt;——仅限 SuperGrok 订阅用户体验。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Grok 3.5 是首个能准确回答火箭引擎或电化学等复杂技术问题的 AI，它从第一性原理出发，甚至能给出互联网上不存在的答案。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-165fb0d36ecc72914c1fda95eedaa1b73c1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据了解，SuperGrok 是付费订阅的高阶服务，享受优先体验新功能的特权。&lt;/p&gt; 
&lt;p&gt;马斯克强调，这次 Grok 3.5 的突出之处在于它能推理出网络上根本不存在的新知识。用人话讲，就是马斯克让 Grok 学会了「原创」。这意味着你再也不是简单地问一个 AI 它在网上查到的答案，而是让它通过自身的理解和推理能力，帮你解答火箭发动机设计、电化学反应机制等极度专业的问题——这将直面宇宙的奥秘，探索世界上最基础和前沿的根本性问题。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347413</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347413</guid>
            <pubDate>Sun, 27 Apr 2025 11:44:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>2024 年 MaaS + AI 大模型解决方案市场规模翻倍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;国际数据公司 （IDC）最新发布的《中国模型即服务 (MaaS) 及 AI 大模型解决方案市场追踪，2024H2》&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FiU2lLbZmhmzI4gxf5SCpug&quot; target=&quot;_blank&quot;&gt;报告显示&lt;/a&gt;&lt;/u&gt;，2024 年中国 MaaS 市场呈现爆发式增长，全年规模达 7.1 亿元人民币，较 2023 年实现 215.7% 的同比激增，其中 2024 下半年市场规模达 4.6 亿元人民币。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;IDC 所定义的中国模型即服务（MaaS）及 AI 大模型解决方案市场由两个子市场构成，分别是模型即服务（MaaS）市场和 AI 大模型解决方案市场。&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;模型即服务（MaaS）&lt;/strong&gt;：提供以服务/云模式交付的全流程 AI 大模型生命周期工具链、大模型应用开发平台以及 AI 大模型服务。主要以 API 访问、模型中枢或会话接口来提供服务。不包含单独销售的云基础资源层（IaaS）和算力的收入。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;AI 大模型解决方案&lt;/strong&gt;：提供包括模型框架，大模型，大模型生命周期工具链，模型训练和调优的软件和服务，在企业自己或第三方的数据中心部署，支持企业客户构建和训练自己的企业或行业大模型以及行业应用。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;538&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/193331_ufEE_2720166.png&quot; width=&quot;677&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/193431_sTN0_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;展望 2024-2029 年，该市场将以 66.1% 的年均复合增长率高速扩容，预计 2029 年市场规模将达到 90 亿元人民币。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;545&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/193401_6JqC_2720166.png&quot; width=&quot;704&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/193446_Fs0Z_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;AI 大模型解决方案市场同样保持高位增长态势。2024 年全年市场规模达 34.9 亿元人民币，同比增长 126.4%，其中 2024 下半年市场规模达为 21.0 亿元人民币。&lt;/p&gt; 
&lt;p&gt;未来五年，该市场将以 54.5% 的年均复合增长率持续扩张，预计 2029 年整体规模达 306 亿元人民币。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347412</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347412</guid>
            <pubDate>Sun, 27 Apr 2025 11:35:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Kali Linux 紧急更换仓库签名密钥，用户需手动更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Kali Linux 官网于 4 月 28 日&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kali.org%2Fblog%2Fnew-kali-archive-signing-key%2F&quot; target=&quot;_blank&quot;&gt;发布公告称&lt;/a&gt;，由于官方意外丢失对仓库签名密钥的访问权限，apt update 功能将暂时失效。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5e06ca94835b9910c04f2b5bb669faccde7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;为确保安全，官方已冻结仓库并启用新密钥，用户需手动下载更新。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;用户可通过运行指定命令安装新密钥（使用 `wget` 或 `curl`），旧密钥仍有效但将被逐步替换。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;wget 命令：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo&amp;nbsp;wget&amp;nbsp;https://archive.kali.org/archive-keyring.gpg&amp;nbsp;-O&amp;nbsp;/usr/share/keyrings/kali-archive-keyring.gpg&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;curl 命令：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo&amp;nbsp;curl&amp;nbsp;https://archive.kali.org/archive-keyring.gpg&amp;nbsp;-o&amp;nbsp;/usr/share/keyrings/kali-archive-keyring.gpg&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Kali Linux 强调密钥未泄露，新密钥包将同时包含新旧签名密钥（ED444FF07D8D0BF6 和 ED65462EC8D5E4C5），以平滑过渡。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347410/new-kali-archive-signing-key</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347410/new-kali-archive-signing-key</guid>
            <pubDate>Sun, 27 Apr 2025 11:28:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>阿里云对 .COM 等域名注册、续费、转入价格进行调整，5 月 7 日生效</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;阿里云上周发布公告，宣布自 2025 年 5 月 7 日起，对 COM、NET、XYZ、TOP 等多个主流域名的注册、续费及转入价格进行调整。&lt;/p&gt; 
&lt;p&gt;以.COM 域名为例，注册价涨至 85 元，续费价达 95 元。部分域名如 XYZ 续费价格高达 98 元。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;影响时间&lt;/h3&gt; 
 &lt;p&gt;北京时间 2025-05-07 00:00:00&lt;/p&gt; 
 &lt;h3&gt;调价原因&lt;/h3&gt; 
 &lt;p&gt;因域名上游成本上调、汇率波动及域名合规治理成本增加，经慎重考虑，现决定于 2025 年 5 月 7 日零时，将域名调整为如下价格。&lt;/p&gt; 
 &lt;h3&gt;调价内容&lt;/h3&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6dca13884686ba6d96b6b53e15e5f7b969f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;相关域名的预释放抢注保证金也会进行调整，具体以页面显示为准。其余后缀也会视实际情况不定期调整价格，如无特殊情况，将不再另行公告通知，请以阿里云域名价格总览页、域名抢注预订页面等展示价格为准。&lt;/p&gt; 
 &lt;p&gt;温馨提示：阿里云域名不定期开展优惠口令、批量优惠包、注册优惠、周三转入日等优惠活动，优惠价格以实际活动规则或订单结算价格为准。&lt;/p&gt; 
 &lt;p&gt;阿里云域名致力于为用户提供优质超值的域名服务，后续我们也将继续根据域名成本的变化，及时合理地调整（下调 / 上涨）域名价格，并始终为您提供高品质的专业服务！您的满意是我们的动力，感谢您的理解与支持！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据了解，阿里云已于今年 4 月 1 日对部分小众域名价格进行了初步调整：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;影响时间&lt;/h3&gt; 
 &lt;p&gt;北京时间 2025-04-01 00:00:00&lt;/p&gt; 
 &lt;h3&gt;调价原因&lt;/h3&gt; 
 &lt;p&gt;因注册局成本上涨，经慎重考虑，现决定于 2025 年 4 月 1 日零时，进行如下域名价格调整。&lt;/p&gt; 
 &lt;h3&gt;调价内容&lt;/h3&gt; 
 &lt;p&gt;.beer 域名：新注价格 108 元 / 首年，续费 / 转入价格 108 元。&lt;/p&gt; 
 &lt;p&gt;.biz 域名：新注价格 52 元 / 首年，续费 / 转入价格 135 元。&lt;/p&gt; 
 &lt;p&gt;.club 域名：新注价格 14 元 / 首年，续费 / 转入价格 108 元。&lt;/p&gt; 
 &lt;p&gt;.fit 域名：新注价格 15 元 / 首年，续费 / 转入价格 108 元。&lt;/p&gt; 
 &lt;p&gt;.ink 域名：新注价格 15 元 / 首年，续费 / 转入价格 68 元。&lt;/p&gt; 
 &lt;p&gt;.vip 域名：新注价格 32 元 / 首年，续费 / 转入价格 39 元。&lt;/p&gt; 
 &lt;p&gt;.wiki 域名：新注价格 15 元 / 首年，续费 / 转入价格 92 元。&lt;/p&gt; 
 &lt;p&gt;.work 域名：新注价格 15 元 / 首年，续费 / 转入价格 39 元。&lt;/p&gt; 
 &lt;p&gt;.yoga 域名：新注价格 195 元 / 首年，续费 / 转入价格 195 元。&lt;/p&gt; 
 &lt;p&gt;.co 域名：新注价格 79 元 / 首年，续费 / 转入价格 199 元。&lt;/p&gt; 
 &lt;p&gt;.xin 域名：新注价格 88 元 / 首年（优惠后价格 18 元），续费 / 转入价格 88 元。&lt;/p&gt; 
 &lt;p&gt;阿里云域名致力于为用户提供优质超值的域名服务，后续我们也将继续根据域名成本的变化，及时合理地调整（下调 / 上涨）域名价格，始终为您提供高品质的专业服务！感谢您的理解与支持！&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347409</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347409</guid>
            <pubDate>Sun, 27 Apr 2025 11:24:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>中国已形成完整人工智能产业体系</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;今年以来，中国持续加强人工智能基础研究，同时突出应用导向，新技术正不断向具体应用场景纵深渗透。目前，中国已形成覆盖基础层、框架层、模型层、应用层的完整人工智能产业体系。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c2288d9d5879f83df834cc25fafca2b812d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;最新数据显示，截至 2025 年 4 月 9 日，我国人工智能专利申请量达 1576379 件，占全球申请量的 38.58%，位居全球首位。目前，我国已累计培育 400 余家人工智能领域国家级专精特新「小巨人」企业，占据了全球十分之一的人工智能产业规模，形成了完整的人工智能产业体系。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;今年，我国进一步设立了 600 亿元规模的国家人工智能基金，加快推进各地人工智能科技创新、产业发展和赋能应用。同时，完善人工智能监管体制机制，目前已累计制定了 40 余项行业关键标准和 10 余项国际标准，推动产业生态持续优化。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347407</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347407</guid>
            <pubDate>Sun, 27 Apr 2025 11:19:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>阶跃星辰图像编辑模型 Step1X-Edit 登上 Hugging Face 趋势热榜</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;阶跃星辰昨天发布并开源了全新的通用图像编辑模型 Step1X-Edit，上线次日就在海外开源社区平台 Hugging Face 登上 Spaces 趋势热榜，该榜单反映了模型实际应用价值的受欢迎程度。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-973cf289e69a594563f32a510c5d94e66b9.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Step1X-Edit 提供强大的改图能力，可以帮用户完成日常工作和生活中最高频的 11 类图像编辑任务：包括替换图片中的文字、为人物做美化修图、对画面进行风格迁移和材质变换等。据了解，目前这项功能已经可以在阶跃 AI App 和网页端免费使用。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af0264c03e5be7f6f01ece9ee927956dfd5.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;据了解，在国内通用大模型公司中，阶跃星辰以多模态能力强著称，多模态模型在其自研的 Step 系列基座模型矩阵中占比超过 7 成，且多款模型曾在 LMSYS、OpenCompass 等国内外权威大模型评测榜单上位列中国大模型第一，并被 OPPO、茶百道等各行业头部厂商接入打造全新的消费场景产品体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347406</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347406</guid>
            <pubDate>Sun, 27 Apr 2025 11:14:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>携手创未来，「HarmonyOS 协同・创新」 技术沙龙在济南顺利举办</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4 月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;27 日&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;「HarmonyOS 协同·创新」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;软件行业专场&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在济南顺利举行。本次会议由开源中国&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主办，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;山东省软件行业协会&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;协办&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，吸引了来自全国各地的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;近&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;百名鸿蒙开发者、技术团队负责人及生态企业代表齐聚&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;济南&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，围绕 HarmonyOS 技术创新与产业实践展开深度研讨，为鸿蒙生态发展注入新动能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//0023bd6ba845a82144468ff633801cb7.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;会议伊始，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;华为云 HCDE 专家姚圣伟&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共建未来：HarmonyOS 生态全景与开发者新机遇&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为主题发表演讲，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系统阐述了 HarmonyOS 的生态发展现状与技术前景：截至 2025 年 3 月，鸿蒙设备突破 10 亿台，以 17% 市占率成为中国第二大移动操作系统&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;吸引 720 万开发者，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;超 2 万款应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;覆盖 18 个行业，腾讯、阿里等头部企业已深度参与；其全栈自研的分布式架构通过「一次开发、多端部署」实现跨终端协同，并深度融合 AI 技术优化全场景体验&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;将持续推动&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;跨终端生态协同创新&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;助力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS NEXT 向更智慧、高效的全场景操作系统演进，持续引领万物互联时代。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6af8b6ef399a57005f9eb3d7c983ab57.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在智能终端加速向全域协同演进的时代背景下，HarmonyOS 通过分布式技术打破硬件边界的能力已成为行业焦点。在《鸿蒙分布式架构详解，跨端协同开发》演讲中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;姚圣伟通过拆解分布式架构核心技术，揭示了跨端协同开发的关键路径&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分布式架构依托自主研发的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分布式软总线技术，通过毫秒级设备连接、跨端数据强一致性和微内核安全隔离机制，实现多终端无缝协同；「一次开发，多端部署」理念借助 ArkTS 语言与 DevEco Studio 工具，解决屏幕适配与功能兼容问题，简化跨设备应用开发流程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如自适应布局、数据同步安全等；生态层面，华为联合 300+高校及行业伙伴构建智能家居、汽车等场景的跨端应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通过 AI Agent 和元服务深化设备协同能力，推动 HarmonyOS 在万物互联时代的技术普惠与生态繁荣。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//0924b9ce0ea7a7b23d48a852985fc9e0.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;刘张豪在《AI 赋能鸿蒙生产力》演讲中聚焦 AI 技术与 HarmonyOS 的深度融合&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;作为鸿蒙&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开发者与多届技术竞赛获奖者，他展示了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DevEco CodeGenie 工具如何通过智能问答、代码生成及元服务卡片生成大幅提升开发效率；系统层集成 Vision Kit 与跨设备朗读控件 Speech Kit 等原生 AI 能力，以「端侧稳定、接入简捷」优化用户交互体验；案例部分详解通用文字识别技术，实现从图片选择、OCR 识别到结果编辑的全流程应用；未来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS 将深化 AI 本地推理与隐私保护、推动分布式算力共享，并通过轻量化元服务、全球化布局及智能家居、工业物联网&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业垂直场景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;持续扩展生态，构建更开放、智能的全场景操作系统。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//1c805cfd61aaae8f2600d03e69acc54a.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;互联网医疗企业大前端负责人&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;黄沅在《HarmonyOS 开发避坑指南&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高频问题解析与实战优化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;》中针对常见开发痛点提出实战优化方案&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。他&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;指出，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;状态管理需优先使用类对象而非字面量对象，结合@Track 装饰器精准触发 UI 刷新，避免属性修改后界面无响应；Foreach 循环因 key 生成不当导致列表项刷新异常时，建议迁移至状态管理 V2，通过动态 key 计算强制重绘；自绘制编辑框需注意输入法配置，解决键盘弹起错误时采用延时弹起或主动隐藏策略；Hvigor 构建工具支持命令行打包与自定义 BuildProfile 类属性，实现动态配置修改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如全局变量注入、模块元数据适配&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;他最后还&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;强调&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通过规范对象使用、升级状态管理版本、优化输入法交互及构建流程定制，有效规避开发陷阱，提升鸿蒙应用性能与部署效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6dc127fee296d4537644ca60ec3c512f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;会议特别设立的「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;互动时刻&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;与会者围绕鸿蒙生态实践中的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共性挑战展开深度探讨。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在长达 40 分钟的零距离交流中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;专家团队集中解答了分布式数据同步延迟、跨端安全认证机制等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;十多&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;项技术难题。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;比如，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;针对跨设备性能差异影响协同流畅度的痛点，专家团队解析了动态资源调度方案，通过智能分配机制确保异构设备高效协作；对于小型开发团队资源有限的现状，现场推介了低代码工具链及开源社区支持计划&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在 AI 技术融合方面，专家分享了可快速集成的轻量化模型库，助力开发者提升智能化开发效率；针对多端屏幕适配这一高频问题，则重点讲解了自适应布局框架的标准化应用策略。此外，围绕网络请求优化、多线程管理及测试兼容性等关键技术环节，专家团结合行业案例给出了可落地的实践方法论。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//dc5f3927b844a19c2638a07cd3930af4.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此次「HarmonyOS 协同·创新」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;软件行业专场&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在济南成功举办，不仅为全国近百名开发者、技术团队及生态企业代表搭建了深度交流的平台，更通过一线技术分享与实战案例解析，为鸿蒙生态的落地实践提供了切实可行的思路&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;展现了 HarmonyOS 在跨端协同、开发效率与生态适配上的独特优势。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;展望&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未来，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;鸿蒙&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;生态的成长离不开每一位开发者的实践反馈与创新尝试——通过优化工具链、深化 AI 能力、拓展垂直场景，逐步实现从技术突破到产业普惠的跨越。期待更多开发者在鸿蒙生态中携手同行，以务实的技术探索与开放的协作精神，共同推动智能终端与行业数字化的深度融合，让创新真正扎根于需求，服务于未来。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3859945/blog/18268969</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18268969</guid>
            <pubDate>Sun, 27 Apr 2025 09:25:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>GPT-4o 出现「谄媚烦人」倾向，突变「赛博舔狗」，奥尔特曼称在一周内修复</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 首席执行官 Sam Altman 近日&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fsama%2Fstatus%2F1916625892123742290&quot; target=&quot;_blank&quot;&gt;发文&lt;/a&gt;&lt;/u&gt;，回应了有关用户近期反馈关于 GPT-4o 情感的问题。他表示，最新版 GPT-4o 在最近几次更新后出现了「过度谄媚」的交互倾向，并承诺将在一周内推出修复方案。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;856&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/145130_2663_2720166.png&quot; width=&quot;1284&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/news/346982/openai-updated-gpt-4o&quot;&gt;OpenAI 发行说明显示&lt;/a&gt;&lt;/u&gt;，GPT-4o 在 3 月 27 日迎来了全面更新，而且在 4 月 25 日发布了进一步的更新，重点改进其记忆存储时机的选择机制，并显著增强其在科学、技术、工程及数学（STEM）领域的问题解决能力。OpenAI 在此期间对 GPT-4o 的对话响应模式进行了细微调整，使其在交互中更加主动，并能更精准地引导对话达成有效结论。&lt;/p&gt; 
&lt;p&gt;也就是在此次更新后，GPT-4o 表现出了令人不悦的「谄媚」属性。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1460&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/145535_Oqjk_2720166.png&quot; width=&quot;1332&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;比如下面这个例子，网友声称自己想要打造一个永动机，结果得到了 GPT-4o 一本正经的无脑夸赞，物理学常识也被按在地上摩擦。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56bb98433f09aeb7e7c9f1f21df233954b4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;这与学术研究发现的 LLM「谄媚倾向」（Sycophancy）高度吻合 —— 模型为获得用户认可，可能违背事实或伦理准则。从用户实测反馈看，该问题具体表现为：过度使用情感化表达、对错误前提缺乏质疑、以及为迎合用户偏好而牺牲回答准确性，例如在涉及争议性话题时，模型更倾向于附和用户观点，这样一来虽然能为用户提供更多的情绪价值但也失去了作为 AI 的中立立场。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;推荐阅读：&lt;a href=&quot;https://www.oschina.net/news/334508/large-language-models-show-concerning&quot; target=&quot;news&quot;&gt;大语言模型显示出令人担忧的「奉承」用户倾向&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347339</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347339</guid>
            <pubDate>Sun, 27 Apr 2025 06:56:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Spring Cloud Data Flow 未来仅限商业版本</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;近日，Spring 官方宣布 &lt;strong&gt;Spring Cloud Data Flow&lt;/strong&gt;、&lt;strong&gt;Spring Cloud Deployer&lt;/strong&gt; 和 &lt;strong&gt;Spring Statemachine&lt;/strong&gt; 将不再作为开源项目进行维护。从此以后，这些工具的未来版本只会对 Tanzu Spring 商业客户开放。&lt;/p&gt; 
&lt;p&gt;目前最后的开源版本分别是：Spring Cloud Data Flow 2.11.x、Spring Cloud Deployer 2.9.x 和 Spring Statemachine 4.0.x。这一变化不会影响其他 Spring 开源项目或现有开源版本对用户的支持义务。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Spring Cloud Data Flow 的历史与未来&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Spring Cloud Data Flow 起源于八年前的 Spring XD，专注于批处理与流式工作负载的编排。多年来，凭借客户的高度认可，该项目取得了显著成效。为了实现持续发展，Spring 决定将其转为纯商业产品，以更好地满足企业用户的需求。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;为何做出这一决定？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;根据官方说明，大多数 Spring Cloud Data Flow 的使用场景都源自 Tanzu 企业客户，而开源社区的使用及贡献量极为有限。近两年，Spring Cloud Data Flow 的维护几乎完全由 Tanzu 的研发团队承担，这与其他活跃且拥有广泛社区贡献的 Spring 项目形成鲜明对比。Spring Statemachine 和 Spring Cloud Deployer 的使用模式也与之类似，主要通过与 Spring Cloud Data Flow 的集成得到驱动。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;更专注的未来&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Spring 表示，维持开源项目与商业产品的双重需求所需的巨大成本不再合理，因此此举将使团队能够集中资源，为用户提供更有价值的服务。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;现有用户的支持与展望&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;对 Tanzu 商业客户而言，Spring Cloud Data Flow 最新补丁版本 2.11.7 已上线，并在 Spring Enterprise 工件库中提供。同时，基于 2.11.7 的 Spring Cloud Data Flow Tile 1.14.5 和 Kubernetes 发行版 1.6.5 也已发布。预计今年秋季会推出基于 Spring Boot 3.5 的新产品版本。&lt;/p&gt; 
&lt;p&gt;尽管如此，Spring 开源生态仍然活跃，60 多个完全支持的开源项目、数十位提交者以及上百位社区贡献者共同推动了 Spring 的持续发展。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347318/spring-cloud-data-flow-commercial</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347318/spring-cloud-data-flow-commercial</guid>
            <pubDate>Sun, 27 Apr 2025 06:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>OpenAI 更新 ChatGPT 搜索功能，周搜索量达 10 亿次</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 今天对 ChatGPT 搜索进行了大&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FOpenAI%2Fstatus%2F1916947241086095434&quot; target=&quot;_blank&quot;&gt;更新&lt;/a&gt;，对网购搜索进行了大幅度优化。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/113444_5DgM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;现在，搜索的产品可以直接显示详情、价格以及用户评价，并且可以直接跳转到购买链接，例如，你想购买一个新的平板电脑，可以在 ChatGPT 完成所有参数比对，并跳转到亚马逊购买。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-732cc10c9a539fd31f67d4cf7db52314e46.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;具体更新如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;购物体验：ChatGPT 中购物变得更简单、更快捷，方便查找、比较和购买产品。 
  &lt;ul&gt; 
   &lt;li&gt;优化产品推荐结果，提升商品相关性和展示效果&lt;/li&gt; 
   &lt;li&gt;可视化呈现，包括产品介绍、实时价格和用户评价&lt;/li&gt; 
   &lt;li&gt;用户可点击购买链接直接达到购买页面&lt;/li&gt; 
   &lt;li&gt;官方强调，所有商品搜索结果保持独立客观，并非广告植入&lt;/li&gt; 
   &lt;li&gt;购物体验的更新今天开始向所有可使用 ChatGPT 的地区的 Plus、Pro、免费及未登录用户，预计几天内完成部署&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;引用功能更靠谱：一个回答可以引用多个来源；高亮显示，超清晰地告诉你引用了哪部分内容。&lt;/li&gt; 
 &lt;li&gt;搜索界面优化：热门搜索趋势；自动补全搜索建议。&lt;/li&gt; 
 &lt;li&gt;WhatsApp 一键搜索：给 + 1-800-242-8478 发消息，就能实时获取各种信息：如体育比分、热点新闻。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;同时，OpenAI 同时还表示，ChatGPT 搜索已经成为 OpenAI 最重要功能之一，仅过去一周使用量就超过 10 亿次，成为最受欢迎且增长最快的功能之一。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347296</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347296</guid>
            <pubDate>Sun, 27 Apr 2025 03:33:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>