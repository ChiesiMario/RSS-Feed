<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 04 Jun 2025 07:45:39 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>中国 AI Coding 市场在 2025 年迎来应用爆发期</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;国际数据公司（IDC）于近日发布了《中国市场代码生成产品评估，1H25》，报告对 AI Coding 产品进行了市场分析和调研，并测试了中国市场的主流产品，从核心代码实现、注释质量、工程化引导三个维度进行模型打分，并对产品整体能力进行评估，来为市场用户提供选型参考。&lt;/p&gt; 
&lt;p&gt;根据报告数据，AI Coding 市场在 2025 年迎来应用爆发期，更多技术供应商基于代码工程化优势发布和更新产品，&lt;strong&gt;AI 编码助手在产品界限上逐渐模糊，集成编程助手、工具、模型、对话交互界面等多种能力&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;此外，各个模型之间的差距在缩小，已经可以帮助开发者完成简单任务的端到端实现，并对复杂任务搭建框架，在 RAG / 知识库、联网搜索、跨文件检索上持续更新，各家厂商的竞争也逐渐收敛到用户入口和独立 IDE 产品上。&lt;/p&gt; 
&lt;p&gt;中国市场仍有极大发展空间，AI 编程助手对开发者的覆盖率在 30%。而美国已有 91% 的开发者使用 AI 工具，且超过 50% 的受访者表示采用 OpenAI ChatGPT 来创建生产级应用程序。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/152404_eUUg_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/152711_rUXz_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/152733_keWG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;另一项调研显示，使用 AI 编码助手的开发人员平均生产力提高了 35%，其中超过 20% 的受访者表示对其生产效率的提升超过 50%。&lt;/p&gt; 
&lt;p&gt;开发者使用 AI 编程助手可以执行各种与开发相关的任务，不仅是代码生成和补全，还包括单元测试生成、代码版本自动升级以及自定义企业编码规范。约 50% 的开发者认为增强团队协作、提高工作满意度、加快问题解决速度是编程助手的主要优势，当前 AI 的核心能力在于提高开发者的生产效率，并非创新。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353521</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353521</guid>
      <pubDate>Wed, 04 Jun 2025 07:29:50 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>「互联网女皇」发布 340 页 AI 趋势报告</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;被称为「互联网女皇」的 Mary Meeker 在沉寂数年后，于 2025 年 5 月 30 日再次发布了其标志性的深度趋势报告 &lt;em&gt;《Trends – Artificial Intelligence》。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;这位曾经的摩根士丹利明星分析师，如今的风险投资公司 Bond Capital 创始合伙人，通过这份长达 340 页的重磅报告详细介绍了 AI 的发展现况、未来趋势等内容。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ffbb618303f41e093ce8bb8a50c8fd50dc7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151307_ToP4_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;如果用一个词来形容这份报告，会是「史无前例」，即 AI 史无前例的发展速度和普及度：AI 的用户增长、技术迭代和全球扩散速度远超以往任何技术浪潮，如互联网。&lt;/p&gt; 
&lt;p&gt;报告称：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ChatGPT 在 17 个月内用户数就突破了 8 亿，这是史无前例的；&lt;/li&gt; 
 &lt;li&gt;AI 公司数量以及如此多的公司实现高年经常性收入的速度是史无前例的；&lt;/li&gt; 
 &lt;li&gt;AI 模型的推理成本下降速度是史无前例的——虽然训练一个大模型的成本最高要 10 亿美元，但推理成本两年内下降了 99%；&lt;/li&gt; 
 &lt;li&gt;AI 公司以极低成本匹配竞争对手模型功能的速度也是史无前例的。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151356_jTsS_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151448_ufHT_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151723_EMvF_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;报告指出，AI 唯一没有超越其它科技革命的领域是财务回报，暂时还不知道哪些公司能成长为长期盈利的下一代科技巨头。&lt;/p&gt; 
&lt;p&gt;Mary 在报告中提到，目前主流的 AI 企业其估值与收入的差距过大。具体来看，Perplexity 在估值/收入倍数中，达到了约 75 倍的差距，而 OpenAI 则以 92 亿美元的年收入、预计 3000 亿美元的估值获得了 33 倍的差距。&lt;/p&gt; 
&lt;p&gt;而在近一年时间中，中国的模型通过低成本的方式，打破了各大 AI 企业的高昂价格「泡沫」。Mary 对此表示：「投资人，请只投你愿意损失的金额」。&lt;/p&gt; 
&lt;p&gt;更多报告内容查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bondcap.com%2Freports%2Ftai" target="_blank"&gt;https://www.bondcap.com/reports/tai&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353516/trends%E2%80%93artificial-intelligence</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353516/trends%E2%80%93artificial-intelligence</guid>
      <pubDate>Wed, 04 Jun 2025 07:15:50 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Anthropic 「封杀」 Windsurf</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;AI 编程工具 Windsurf 开发商&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwindsurf.com%2Fblog%2Fanthropic-models" target="_blank"&gt;发布公告称&lt;/a&gt;&lt;/u&gt;，Anthropic 在几乎没有预先通知的情况下切断了 Windsurf 的 API 访问权限。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/143502_jh84_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根据 Windsurf 的声明，Anthropic 在提前不到一周的通知时间内，切断了其几乎所有 Claude 3.x 模型的直接访问权限 (first-party capacity)，具体涉及的模型包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Claude 3.5 Sonnet&lt;/li&gt; 
 &lt;li&gt;Claude 3.7 Sonnet&lt;/li&gt; 
 &lt;li&gt;Claude 3.7 Sonnet Thinking&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;由于 Windsurf 从未获得 Claude 4 的直接访问权限，等于直接被 Anthropic 彻底封杀了。&lt;/p&gt; 
&lt;p&gt;Windsurf CEO Varun Mohan&amp;nbsp;表示，Windsurf 一直希望支付服务费用以获得完整访问权限，对 Anthropic 这一决定和通知时间之短感到失望。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/144530_0dYo_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Windsurf 目前虽有部分第三方算力资源，但远不能满足需求，短期内可能影响用户访问 Claude 模型的稳定性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353506</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353506</guid>
      <pubDate>Sun, 11 May 2025 06:42:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>SQLE 4.2505.0 正式版发布！企业级权限管理下放</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;🎉&lt;/span&gt;&lt;span&gt;&amp;nbsp;SQLE 4.2505.0 正式版发布 🎉&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;🤗 欢迎体验 🤗&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;社区版&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;新版权限管理（&lt;span&gt;企业版功能下放&lt;/span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;结构对比优化亮点&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;专业版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;与&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;社区版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;同步更新&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;支持多网络区部署 SQLE&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新版 TopSQL 性能分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;专业版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;（文末下载）&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;企业版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;（体验环境）已发布更新，欢迎体验！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;🎈 新功能&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;社区版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;新版权限管理&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;这次更新给您带来什么好处？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;企业级权限管理下放到社区版&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;团队管理更高效：想了解用户的项目参与情况，不用一个个查询，一键就能看查看&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;权限管理更安全：每个用户的平台角色清清楚楚，方便做好权限控制&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;角色权限与使用场景&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;系统管理员&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;适用对象&lt;/span&gt;&lt;span&gt;：IT 管理人员、平台维护人员&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要职责&lt;/span&gt;&lt;span&gt;：负责平台整体运维、用户权限配置、系统参数设置等全局管理工作&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;审计管理员&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;适用对象&lt;/span&gt;&lt;span&gt;：合规部门人员、内审人员&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要职责&lt;/span&gt;&lt;span&gt;：系统操作日志审计、权限变更记录查看、合规检查等&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;项目总监&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;适用对象&lt;/span&gt;&lt;span&gt;：项目负责人、部门主管&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要职责&lt;/span&gt;&lt;span&gt;：项目配置管理、团队成员分配、项目权限管理等&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;普通用户&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;适用对象&lt;/span&gt;&lt;span&gt;：日常业务操作人员&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要职责&lt;/span&gt;&lt;span&gt;：执行具体项目任务、查看被授权的项目内容&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;使用方法&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;打开用户管理页面&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在列表中，您可以直接看到：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;每个用户的权限角色（比如系统管理员、普通用户等）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;他们参与的所有项目&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;点击用户信息，可以查看更详细的权限设置&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;需要调整用户权限时，直接在这里操作即可&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img alt="" height="887" src="https://oscimg.oschina.net/oscnet//18205ed22a6a710fb0abd728997bb101.png" width="1604" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;结构对比优化亮点&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;差异高亮：自动标记关键差异类型，问题点一目了然。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;结果统计：智能汇总差异数量与分布，快速评估影响范围，支持按差异类型一键筛选，精准定位问题。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="1040" src="https://oscimg.oschina.net/oscnet//d1712c5184d3a4d90bd28d0e07818419.png" width="1497" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;结构对比页&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;支持多网络区部署 SQLE&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;适用场景&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;数据库分散在不同地区的机房（如北京、上海、广州），每次管理都要切换多个系统，繁琐又耗时。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;企业网络安全策略严格，跨区域访问数据库受限，运维效率大打折扣，但你又必须遵守合规要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;怎么办？试试新推出的跨网络区域数据库统一管理功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;功能价值&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;统一管理，省时省力：无需跳转多个系统，单界面即可操作所有区域的数据库，节省运维时间。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;安全与效率兼得：各区域保持网络隔离，数据访问权限严格受控，完全符合等保要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;智能数据同步：关键配置和监控数据自动汇总到中心区，备份/审计更轻松。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;如何使用？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;管理员分区域：管理员在系统中创建对应网络区域的「可用区」（如 Zone-北京、Zone-上海）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;成员登录即用：成员按权限进入对应可用区，像管理本地数据库一样操作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;img alt="" height="264" src="https://oscimg.oschina.net/oscnet//1f6fb9280ea3a440d25f0749ceb6bb06.webp" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;新版 TopSQL 性能分析&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;当你的数据库变慢时，是不是总遇到这些问题？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;系统突然卡顿，却找不到是哪条 SQL 在「偷吃」 CPU 和内存&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;面对密密麻麻的性能数据，像看天书一样无从下手&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;管理多种数据库时，要反复切换不同的监控工具&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;现在有了更聪明的解决方案！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新版 TopSQL 性能分析就像给数据库装上 「CT 扫描仪」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一眼锁定问题 SQL&lt;/span&gt;&lt;span&gt;：按照执行次数、总执行时间、CPU 执行时间、逻辑读、物理读等指标实行自动抓取 TOP10 语句，直接标出「拖后腿」的语句。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多数据库统一看板&lt;/span&gt;&lt;span&gt;：不论用 Oracle 还是 PostgreSQL，一个界面全搞定。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;智能问题下钻&lt;/span&gt;&lt;span&gt;：从历史曲线一眼看出性能恶化时间点。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;三步就能用起来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;进入平台页面，进入【SQL 管控配置】&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;选择需要管控的数据源（支持 Oracle / DB2 / 达梦 / PostgreSQL / OceanBase），配置 TopSQL。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;打开 TopSQL 管控页面，性能瓶颈自动暴露。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这次升级让数据库优化变得像看天气预报一样简单——打开页面，性能问题一目了然。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;下次数据库报警时，试试这个会「自动诊断」的新功能？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="447" src="https://oscimg.oschina.net/oscnet//53543bd620a84bf807663ab6ba3ef891.webp" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;智能扫描详情页&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;📜 版本日志&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;社区版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3045] 增加刷新 Token 功能&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3041] 优化审核 SQL 不会自动换行&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3020] 冗余索引规则优化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms/issues/458] 配置 DMS 仓库开源许可证&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms/issues/400] 补充数据源插件 Logo&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;Bug 修复&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[#3007] 修复添加数据源时重置后项目和业务无法再次选择问题&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3023] 修复配置数据源「工作台查询是否需要审核」设置等级生效情况与预期不符问题&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3050] 修复项目概览数据源柱状图的提示信息不显示并报错&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/2602] 修复 Scannerd Token 失效的问题 [actiontech/dms/issues/453] 修复 HTTP Verb Tampering 漏洞&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2353] 规则列表新增数量标记&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2374] 权限整理&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/1639] 智能扫描：支持 TDSQL 监控库慢日志&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/541] 多网络区部署 DMS 方案&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/560] 用户自定义密码复杂度的规则&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/508] DMS 同步 DMP 数据源区分项目&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2318] 优化 SQL 管控定时抓取数据的 SQL 性能，降低客户生产环境后端数据库 IO&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2352] 慢日志扫描任务高优先级配置优化&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2357] 数据库结构对比页面优化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2356] Oracle Top SQL 功能重构&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;Bug 修复&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2375] 修复 Oracle 插件内存和 CPU 资源异常升高&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2371] 修复工单审核过程会触发 panic&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2361] 修复 Token 刷新失败时页面白屏：异常处理逻辑不完整导致无法正常跳转登录页&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2358] 修复 DB2 配置扫描 TopSQL 采集异常&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/577] 修复编辑数据源在什么都没修改的情况下点击提交出现连通性报错&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/570] 修复用户权限足够的情况下创建数据库帐号失败&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/220] 修复外部数据源同步效果不符合预期问题&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;🧩 版本选择&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;社区版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;轻量级 MySQL 开发治理工具，满足个人和小团队的基础 SQL 开发需求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;专业版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多数据源开发治理平台，为中小团队提供更丰富的数据库变更管控能力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;企业级数据资产合规平台，满足大型企业的数据安全与管控要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="989" src="https://oscimg.oschina.net/oscnet//944950ce75be8f8be243316c9aa7c90e.png" width="1560" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;🤗 我们为&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;社区版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;和&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;准备了在线体验环境，欢迎体验。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="519" src="https://oscimg.oschina.net/oscnet//44934cacf564efe14493faccc3ec676c.webp" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;社区版：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;http://demo.sqle.actionsky.com/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企业版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;http://demo.sqle.actionsky.com:8889/&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;🙋‍♂️&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;用户名：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;admin&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;🔑&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;密 &amp;nbsp; 码：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;专业版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;调填写调研问卷（扫码或点击&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;原文链接&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;）获取安装包。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="300" src="https://oscimg.oschina.net/oscnet//014a87e8ea8c7109cfbfed3b6bd321bb.jpg" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SQLE 4.2505.0&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;专业版&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🔗&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;企业版获取：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;可通过海报下方的小程序进行商务咨询或预约演示。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="8750" src="https://oscimg.oschina.net/oscnet//2129537bc1bf41230f0143f8f4661874.png" width="5250" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353503/sqle-4-2505-ga</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353503/sqle-4-2505-ga</guid>
      <pubDate>Sun, 11 May 2025 06:31:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>QuantumGuard OS 发布：全球首个融合后量子加密的物联网边缘操作系统</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;QuantumGuard OS 发布：全球首个融合后量子加密的物联网边缘操作系统，通过 FIPS 140-3 认证&amp;nbsp;&lt;em&gt;在物联网安全威胁日益严峻的背景下，QuantumGuard OS 的发布标志着边缘计算安全进入新纪元。这款全球首个融合后量子加密技术的物联网操作系统，不仅通过严苛的 FIPS 140-3 认证，更重新定义了设备级数据保护标准。本文将深度解析其架构特性、加密原理及行业应用价值。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;QuantumGuard OS 发布：全球首个融合后量子加密的物联网边缘操作系统，通过 FIPS 140-3 认证&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;后量子加密技术的革命性突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;QuantumGuard OS 的核心突破在于其集成的格基加密（Lattice-based Cryptography）算法，这种被 NIST 选为后量子加密标准的技术，能够有效抵抗量子计算机的暴力破解。传统 RSA 加密在量子计算面前仅需数分钟即可被攻破，而格基加密的数学复杂性使其破解时间预估超过 1000 年。在边缘计算场景中，系统采用混合加密模式，既兼容现有 AES-256 标准，又无缝衔接抗量子算法，这种双重保障机制为智能电表、工业传感器等设备提供了前所未有的安全基线。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;FIPS 140-3 认证的深层意义&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;获得美国联邦信息处理标准（FIPS）最高级别认证，意味着 QuantumGuard OS 的加密模块经受了包括物理防篡改、侧信道攻击防御等 11 类严苛测试。特别值得注意的是其"零信任密钥派生"机制，每个设备在启动时都会动态生成专属加密种子，即使同一批次的设备也不会存在密钥重复问题。对于医疗物联网中的胰岛素泵、工业控制系统的 PLC 等关键设备，这种认证级别的安全保障能有效阻断供应链攻击。认证过程中，系统在-40℃至 85℃的极端温度范围内仍保持加密稳定性，这为户外物联网设备部署扫清了障碍。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;边缘计算架构的独特设计&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;区别于传统物联网操作系统，QuantumGuard OS 采用微内核架构将安全域（Security Domain）与功能域严格隔离。其内存保护单元（MPU）可实现亚毫秒级的上下文切换，使得加密运算对设备性能的影响降至 5% 以下。在智慧城市的路况监测场景中，系统表现出惊人的能效比——处理 1080P 视频流时的功耗仅为同类系统的 1/3。独特的"安全飞地"设计允许敏感数据在加密状态下直接进行边缘计算，这种隐私增强技术（PET）完美解决了人脸识别等场景的数据合规难题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;抗量子攻击的实际防御能力&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通过模拟量子攻击环境的压力测试，QuantumGuard OS 展现出令人信服的防御能力。其采用的 CRYSTALS-Kyber 密钥封装机制，在模拟 1000 量子比特（Qubit）攻击时仍保持加密有效性。对于智能电网中的电表数据采集，系统实现了端到端的量子安全隧道，每个数据包都经过独立加密且具备前向安全性。更值得关注的是其"加密敏捷性"设计，当监测到异常解密请求时，系统可在 50ms 内自动切换至备用的 SIKE 加密算法，这种动态防御机制远超传统物联网系统的响应速度。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;跨行业应用场景解析&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在工业 4.0 领域，QuantumGuard OS 已成功部署于西门子新一代 PLC 控制器，其安全启动（Secure Boot）功能可检测 0.1% 的固件篡改。车联网方面，系统支持 V2X 通信的毫秒级密钥轮换，满足自动驾驶对实时安全的需求。农业物联网中，结合国密 SM9 算法特别优化了传感器节点的能耗表现，使得土壤监测设备的电池寿命延长至 5 年。医疗行业应用更具突破性，系统通过"分片加密"技术实现了 ECG 数据在边缘端的匿名化处理，既满足 HIPAA 合规要求，又保留了数据分析价值。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;QuantumGuard OS 的诞生不仅解决了物联网设备面临的量子计算威胁，其通过 FIPS 140-3 认证更树立了行业安全新标杆。从加密算法革新到边缘架构优化，这套系统为智能城市、工业互联网等关键领域提供了面向未来的安全基座。随着量子计算时代的临近，这种融合经典加密与后量子防御的混合方案，或将成为物联网操作系统的标准配置。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353495</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353495</guid>
      <pubDate>Sun, 11 May 2025 06:10:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>NeuralFabric 1.0 开源：基于 Rust 的分布式 AI 训练框架，实现边缘集群千卡级线性加速</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;NeuralFabric 1.0 开源：基于 Rust 的分布式 AI 训练框架，实现边缘集群千卡级线性加速 &lt;em&gt;在人工智能技术飞速发展的今天，分布式训练框架正成为突破算力瓶颈的关键。NeuralFabric 1.0 作为首个基于 Rust 语言开发的边缘计算专用框架，通过创新的拓扑感知调度算法，在千卡级集群中实现了近乎线性的加速比。本文将深入解析其架构设计、性能优势以及在边缘计算场景中的独特价值。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;NeuralFabric 1.0 开源：基于 Rust 的分布式 AI 训练框架，实现边缘集群千卡级线性加速&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;革命性的框架架构设计&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NeuralFabric 1.0 采用分层式微服务架构，将传统参数服务器模式与 AllReduce 算法进行深度融合。其核心组件包括分布式张量存储引擎、动态拓扑管理器以及基于 WASM（WebAssembly）的算子加速模块。这种设计使得框架在边缘计算环境下，能够智能感知设备间的网络拓扑结构，自动优化通信路径。测试数据显示，在 1000 张 NVIDIA T4 显卡组成的异构集群中，ResNet-152 模型的训练速度较传统框架提升 3.2 倍。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rust 语言带来的性能突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;为什么选择 Rust 作为开发语言？这源于其对内存安全的严格保证与零成本抽象特性。NeuralFabric 1.0 利用 Rust 的所有权系统，实现了无锁并发的梯度聚合机制，避免了传统 C++框架中常见的内存竞争问题。特别值得注意的是，框架中的通信层采用 tokio 异步运行时，配合自定义的 RDMA（远程直接内存访问）协议栈，将千卡集群的通信延迟控制在 200 微秒以内。这种语言级优化使得框架在边缘设备的资源受限环境中，仍能保持稳定的吞吐量。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;边缘计算场景的专项优化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;针对边缘计算节点分布广、网络异构的特点，NeuralFabric 1.0 引入了多项创新技术。其动态分片算法能够根据设备算力差异，自动调整模型分区大小；而跨地域的梯度压缩传输技术，则通过混合精度量化和稀疏矩阵编码，将跨数据中心的通信流量减少 78%。在实际部署案例中，某自动驾驶公司在全球 200 个边缘节点上部署该框架后，模型迭代周期从 2 周缩短至 36 小时。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;线性加速背后的核心技术&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;实现千卡级线性加速的关键在于 NeuralFabric 1.0 的三重创新：是拓扑感知的环形通信算法，通过构建最优化的 AllReduce 路径，将通信开销与设备数量解耦；是流水线式的梯度聚合机制，使计算与通信完全重叠；是自适应批处理技术，根据实时网络状况动态调整微批次大小。在 ImageNet 数据集上的测试表明，当 GPU 数量从 256 张扩展到 1024 张时，训练速度提升比例达到理论值的 96%。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;开源生态的战略布局&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NeuralFabric 1.0 采用 Apache 2.0 开源协议，其代码库包含完整的 CI/CD（持续集成/持续交付）工具链和 Kubernetes 算子。社区版特别提供了与 PyTorch 生态的无缝对接接口，开发者可以通过简单的装饰器语法，将现有模型迁移到分布式环境。框架还内置了可视化调试工具，能够实时展示梯度流动路径和计算热点，这对优化分布式训练策略具有重要价值。目前已有超过 40 家机构参与贡献，形成了活跃的技术生态。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;行业应用与未来展望&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在医疗影像分析领域，某三甲医院利用 NeuralFabric 1.0 构建的联邦学习系统，实现了跨院区的隐私保护训练；工业质检场景中，框架的实时模型更新能力帮助客户将缺陷识别准确率提升 12%。未来版本计划引入量子梯度优化算法，并支持更多异构计算设备。随着 5G 边缘计算的普及，这种专为分布式环境设计的训练框架，有望成为下一代 AI 基础设施的核心组件。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NeuralFabric 1.0 通过系统级的创新设计，成功解决了大规模分布式训练中的通信瓶颈问题。其开源策略和技术先进性，正在重塑边缘计算时代的 AI 开发范式。对于需要处理海量数据的行业用户而言，这个基于 Rust 的高性能框架，无疑是加速 AI 落地的关键利器。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353493</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353493</guid>
      <pubDate>Sun, 11 May 2025 06:09:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>FusionCore 1.0 发布：全球首个支持 Rust 语言的安全边缘计算平台，通过 SESIP 认证</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;em&gt;随着边缘计算技术的快速发展，安全性和开发效率成为行业核心痛点。FusionCore 1.0 的正式发布标志着边缘计算领域的重要突破——这是全球首个原生支持 Rust 编程语言并通过 SESIP(物联网安全评估标准) 认证的安全边缘计算平台。本文将深入解析该平台的技术架构、安全特性及其对物联网生态的变革性影响。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;FusionCore 1.0 发布：全球首个支持 Rust 语言的安全边缘计算平台，通过 SESIP 认证&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;技术架构的革命性突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FusionCore 1.0 采用微内核架构设计，其核心创新在于完全基于 Rust 语言构建。这种内存安全的系统编程语言从根本上杜绝了缓冲区溢出等常见漏洞，使得平台在边缘计算场景下的可靠性提升显著。平台支持容器化部署，每个计算单元都运行在独立的沙箱环境中，这种隔离机制与 Rust 的所有权系统形成双重保护。特别值得注意的是，其事件驱动架构能够实现微秒级响应，这对工业自动化等实时性要求高的场景意味着什么？正是这种技术组合使 FusionCore 1.0 在性能与安全之间取得了完美平衡。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SESIP 认证的安全保障体系&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;作为首个通过 SESIP Level 2 认证的边缘计算平台，FusionCore 1.0 建立了完整的安全防护链。从硬件信任根开始，平台实现了安全启动、运行时防护、数据加密的全流程保护。其独特的可信执行环境 (TEE) 设计，使得敏感数据即使在边缘节点被物理获取的情况下也能保持安全。认证过程中特别验证了平台抵抗侧信道攻击的能力，这在金融边缘计算等场景为何如此关键？平台还集成了符合 GDPR 标准的数据脱敏模块，确保隐私计算需求得到满足。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rust 语言带来的开发范式变革&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FusionCore 1.0 对 Rust 语言的原生支持彻底改变了边缘应用开发模式。开发者可以直接使用 Rust 的 async/await 语法编写高性能并发代码，无需担心传统 C/C++开发中的内存安全问题。平台提供的 SDK 包含丰富的硬件抽象层 (HAL)，使得针对不同边缘设备的移植工作变得异常简单。更令人振奋的是，其跨平台编译工具链支持将同一套代码编译为 x&lt;br&gt; 86、ARM 甚至 RISC-V 架构的可执行文件，这种"一次编写，到处运行"的特性如何降低开发者的学习成本？统计显示，采用 Rust 开发的边缘应用代码缺陷率比传统语言降低达 73%。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;边缘计算场景的性能优化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;针对边缘计算的特殊需求，FusionCore 1.0 实现了多项创新性优化。其轻量级调度器可在资源受限的设备上高效管理计算任务，内存占用控制在惊人的 128KB 以内。平台独有的预测性资源分配算法，能够根据历史数据预加载可能需要的计算资源，这使得流媒体分析等应用的延迟降低了 40%。在能耗管理方面，平台支持动态电压频率调整 (DVFS)，这对电池供电的物联网终端意味着什么？正是这些优化使 FusionCore 1.0 在树莓派级别的设备上也能流畅运行复杂的 AI 推理任务。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;行业应用与生态建设&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FusionCore 1.0 已经成功部署在智能制造、智慧城市等多个领域。在汽车电子领域，平台的安全特性使其成为车载 ECU(电子控制单元) 的理想选择；在医疗物联网中，其通过 HIPAA 合规性验证的特性备受青睐。平台开发者社区正在快速增长，目前已贡献了超过 200 个开源驱动和组件。更值得关注的是，其与主流云平台的无缝集成能力，如何帮助企业构建真正的边云协同架构？行业分析显示，采用 FusionCore 1.0 的企业平均缩短了 60% 的边缘应用上线周期。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;未来发展与技术路线图&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;根据官方披露的技术路线图，FusionCore 将在 2.0 版本引入量子安全加密算法，以应对未来计算安全挑战。平台还计划增加对 WebAssembly 的支持，进一步扩展其多语言运行时能力。在硬件加速方面，下一代版本将深度优化对 NPU(神经网络处理器) 的支持，这对边缘 AI 应用意味着怎样的性能飞跃？值得期待的是，平台团队正在与多个标准组织合作，推动建立基于 Rust 的边缘计算开放标准，这或将重塑整个物联网安全开发生态。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FusionCore 1.0 的发布标志着边缘计算进入安全可信的新纪元。作为全球首个支持 Rust 语言并通过 SESIP 认证的平台，它不仅解决了传统边缘计算的安全痛点，更通过创新的技术架构为开发者提供了高效可靠的解决方案。随着生态系统的不断完善，该平台有望成为智能边缘时代的核心基础设施，推动物联网应用向更安全、更高效的方向发展。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353488</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353488</guid>
      <pubDate>Sun, 11 May 2025 06:00:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>得物自研 DScript 2.0 脚本能力从 0 到 1 演进</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h1&gt;一、前言&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在高并发推荐引擎场景中，C++的极致性能往往以开发效率为妥协，尤其在业务频繁迭代时，C++的开发效率流程成为显著瓶颈。传统嵌入式脚本（如 Lua）虽支持动态加载，但其与 C++的交互成本（如虚拟栈数据中转、类型转换）仍会带来额外性能损耗。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为此，我们探索设计 DScript2.0——一种与 C++内存布局及调用约定深度兼容的动态脚本语言，通过自研编译器实现即时编译与无缝嵌入，尝试在保留脚本灵活性的同时，尽可能贴近 C++的原生性能，为性能与效率的平衡提供了轻量化解决方案。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;二、动态脚本在引擎中的引用&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;C++引擎的迭代效率瓶颈&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在搜推引擎中的实践中，出于对高并发场景下极致性能的追求，使用 C++进行引擎自研成为了一种业界常态。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;众所周知，C++通过开放底层控制权限（如内存分配，指令优化等），提升了可达的性能上限，但这种提升伴随了大量底层细节的处理，消耗了更多的开发时间，追求性能优先的同时，却又限制了开发效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们希望能够在保持性能的同时，提升引擎的开发效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;利用嵌入式脚本提升迭代效率&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们的目标是寻求一种平衡性能与迭代效率的方案，一种主流方案是在 C++中嵌入脚本语言。例如，在游戏引擎和 Nginx 开发中集成 Lua，在 C/C++代码中实现性能需求，结合脚本代码中实现控制逻辑，从而提升开发效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;嵌入式脚本对迭代效率的提升&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持动态加载，无需编译部署。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;无需 C/C++经验，脚本学习成本低，提升参与迭代的人力总量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;引擎的迭代拆解&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;引擎内部的技术性迭代&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;业务侧的需求支持&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;业务侧的需求非常适合引入嵌入式脚本，实现对易变需求的自迭代，提升开发效率，这也是一种业界主流方案。例如，一些搜索中台中，对于相关性和粗排逻辑封装为插件，业务侧的算法工程师使用 Lua 开发计算逻辑，可以极大地提升迭代效率。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;嵌入式脚本的额外性能开销&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在引擎中嵌入脚本，虽然可以提升迭代效率，但并非全无代价，高阶语言与低阶语言的交互存在着额外的性能开销。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;例如，Lua 和 C++的交互机制基于 Lua 提供的虚拟栈来实现，这个栈是两者进行数据交换的核心通道。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;使用虚拟栈实现语言交互存在额外的开销，包括但不限于压栈和弹栈操作、栈空间管理、类型检查和转换、复杂数据结构的处理等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//3e6d8349d3c8b462cc5a9df4bd5e9d57.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;更加极致的方案&amp;nbsp;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;基于以上的瓶颈，我们期望一种更加极致的方案，实现性能与效率的平衡。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;嵌入式脚本的额外性能开销&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;（主要源于两种语言在 ABI 层面的不一致）&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;函数调用约定不一致，需要一个虚拟栈进行中转。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;数据类型内存布局不一致，需要额外的检查和转换。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;一个直观的解决方案就是我们设计一种编程语言，在底层实现上与 C++具有一致内存布局与调用约定，从而消除额外的转换开销。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;同时，这种编程语言可以在 C++嵌入，也支持即时编译，提升效率的同时，也拥有与原生 C++近似的执行性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以上是我们规划 DScript2.0 项目初衷。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;三、DScript2.0 的编译器实现&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;语法设计&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 被设计为一种轻量级面向过程的编程语言，同时它也是静态类型的编译语言。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在语法支持上，包含了基础数据类型、变量、运算符、控制流和函数，额外支持了与 C++的语言互操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;数据类型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;int，long，bool，float，double，void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;变量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;自定义变量，隐式类型转换。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;C++变量：支持访问和操作外部注册的 C++变量，支持 C++的结构体部分操作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;运算符&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;算术运算符：+，-，*，/，%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;关系运算符：==，!=，&amp;gt;=，&amp;gt;，&amp;lt;=，&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;逻辑运算符：!，&amp;amp;&amp;amp;，||&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;赋值运算符：=，+=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;自增自减运算符：++i，--i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;控制流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;分支语句：if (...) else if (...) else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;循环语句: for 循环&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;函数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;自定义函数：基础类型值传递，对象类型引用传递。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;C++API：支持调用外部注册的 C++函数。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;浅析编译器架构&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//0002b3da20c2712954db692af8d1c91b.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（编译器的三段结构）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;一个完整的编译器通常由三个主要部分组成：前端、优化器和后端。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;前端：&lt;/strong&gt;负责词法分析、语法分析、语义分析、生成中间代码。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;优化器（中端）：&lt;/strong&gt;负责对中间代码进行优化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;后端：&lt;/strong&gt;负责将中间代码转换成目标机器的的机器码。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;基于 LLVM 实现 DScript2.0 编译器&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//afd841f8ba9fca992d5f2b6f32ec9dcc.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;LLVM 是一个模块化且高度可重用的编译器基础设施项目。它提供了前端、优化器和后端工具链，已支持多种编程语言和平台。LLVM 具有跨平台性，允许开发者灵活定制编译流程，提供高级优化能力，支持即时编译，被广泛用于编译器开发、虚拟机和代码分析工具场景。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;采用 LLVM 实现 DScript2.0 的优势&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;提升开发效率：&lt;/strong&gt;LLVM 的前端、中端和后端采用了模块化设计，每个部分都可以独立替换或扩展，这种灵活性使得 LLVM 非常适合定制编译器，&lt;strong&gt;我们可以复用 LLVM 的中端与后端，专注于前端开发，减少开发成本。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持高级优化：&lt;/strong&gt;LLVM 提供了一套强大的优化工具，能够对代码进行静态和动态优化。这些优化不仅能够提高代码的执行效率，还可以减少代码体积。&lt;strong&gt;这是 DScript2.0 理论上可能提供接近原生 C++性能的关键因素之一。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持即时编译：&lt;/strong&gt;LLVM 支持即时编译（JIT），通过 JIT 编译，LLVM 能够在运行时生成和执行代码，大大提升了执行效率。通过运行时进行编译后运行，&lt;strong&gt;这是 DScript2.0 理论上可能提供接近原生 C++性能的关键因素之二&lt;/strong&gt;。支持在线的即时编译能力，&lt;strong&gt;同时也是算子开发与分发效率的保障。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;DScript2.0 编译器架构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//972c134f7ea81077c7a1ed3e97e7c6c6.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;DScript2.0 编译器同样包含前端、中端、后端三部分，前端能力自研，优化器和后端基于 LLVM 的 Pass 和 JIT 实现。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编译器最终输出为 x86_64 平台的可执行二进制，以 JIT 实例的方式常驻内存，通过入口函数地址执行。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编译器支持注入 C++类型与函数参与编译，实现 DScript2.0 对 C++的调用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;编译器前端实现&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;前端的实现流程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;编译器前端的任务是&lt;strong&gt;将源码转换为优化器可处理的中间代码&lt;/strong&gt;，这个转换的流程通常包含 4 个步骤：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;词法分析&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;语法分析&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;语义分析&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;中间代码生成&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//34e7a033f0a4360ff25f44ea62bd08ad.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（编译器前端架构）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;词法分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;原理：&lt;/strong&gt;源代码是一堆连续的字符，计算机要先识别出这些字符组成的基本单元，才能进一步理解代码含义。就像读句子先得认出单词一样，这是理解程序的第一步。词法分析的本质是&lt;strong&gt;将代码的字符流，转换为更易处理的 token 流。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;输入与输出：字符流-&amp;gt;记号流（Tokens）。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;词法分析器&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 中了使用 Flex，可以根据自定义的正则表达式规则，自动生成词法分析的扫描器，减少手工编写词法分析器的工作量。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;&amp;nbsp;Flex 工作流程&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4f5ea2329f5f69d9eee567e4741fa745.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;&amp;nbsp;Flex 语法&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在 Flex 的定义文件中包含三部分：&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;定义段：&lt;/strong&gt;包含头文件和全局变量，如输入和输出流的定义。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;规则段：&lt;/strong&gt;由模式和对应的动作组成。当扫描器匹配到模式时，执行对应的动作。例如，匹配到"int"字符串时，将其识别为 INT 标识。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;用户代码段：&lt;/strong&gt;通常可以在此区域定义&lt;strong&gt;&amp;nbsp;main()&amp;nbsp;&lt;/strong&gt;函数，它调用&lt;strong&gt;&amp;nbsp;yylex()&amp;nbsp;&lt;/strong&gt;，启动词法分析过程。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/* 定义段段开始 */
/* 引入的 c/c++代码 */
%{
#include &amp;lt;string&amp;gt;
%}


/* 正则表达式的宏定义 */
LineTerminator &amp;nbsp; &amp;nbsp; &amp;nbsp; \n|\r|\r\n
WhiteSpace &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [ \t\f]|{LineTerminator}
Identifier &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [a-zA-Z_][a-zA-Z0-9_]*
/* 定义段结束 */


%%




/* 规则段开始 */
/* 规则：正则表达式 { return 传递给语法分析器的记号类型 } */
"int"&amp;nbsp;{&amp;nbsp;return&amp;nbsp;INT; }
"float"&amp;nbsp;{&amp;nbsp;return&amp;nbsp;FLOAT; }
"void"&amp;nbsp;{&amp;nbsp;return&amp;nbsp;VOID; }


{Identifier} {
&amp;nbsp; &amp;nbsp; yylval.identifier = new std::string(yytext);
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;IDENTIFIER;
}
{LineTerminator} {}
{WhiteSpace} {}


&amp;lt;&amp;lt;EOF&amp;gt;&amp;gt; {
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;END;
}
/* 规则段结束 */




%%




/* 用户代码段开始 */
/* 用户代码段结束 */&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;匹配规则&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;最长匹配：当多个规则可匹配时，Flex 选择&lt;strong&gt;最长匹配&lt;/strong&gt;的词素。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;最先定义：若多个规则长度相同，则选择&lt;strong&gt;最先定义&lt;/strong&gt;的规则。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;语法分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;原理：&lt;/strong&gt;语法分析的原理是根据上下文无关文法（CFG）对输入的 tokens 序列进行分析，验证其是否符合某种语言的语法规则，并构建对应的抽象语法树。其核心在于建立程序的分层逻辑结构，并确保这种结构符合语法约束。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;输入与输出：记号流-&amp;gt;抽象语法树（AST）。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;由语法分析原理拆分&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;结构验证：&lt;/strong&gt;检查记号流的排列是否符合语法规则，DScript2.0 的语法规则由上下文无关文法（CFG）描述，验证算法采用了自底向上的 LR 算法。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;// 示例：分支语法规则：if (conditon) { stmts }
// 符合语法规则
if&amp;nbsp;(a &amp;lt;&amp;nbsp;1) {


// 不符合语法规则
if&amp;nbsp;a &amp;lt;&amp;nbsp;1&amp;nbsp;{&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;层次构建：&lt;/strong&gt;将线性的记号流转换为树状或嵌套的语法结构，以抽象语法树为例：&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;int&amp;nbsp;func(int&amp;nbsp;a)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;int&amp;nbsp;b = a +&amp;nbsp;1;
&amp;nbsp;&amp;nbsp;return&amp;nbsp;b;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FunctionDefinition
&amp;nbsp; ├── ReturnType:&amp;nbsp;int
&amp;nbsp; ├── FunctionName: func
&amp;nbsp; ├── Parameters
&amp;nbsp; │ &amp;nbsp; └── Parameter
&amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; ├──&amp;nbsp;Type:&amp;nbsp;int
&amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; └── Name: a
&amp;nbsp; └── Body
&amp;nbsp; &amp;nbsp; &amp;nbsp; ├── VariableDeclaration
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; ├──&amp;nbsp;Type:&amp;nbsp;int
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; ├── Name: b
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; └── InitialValue
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; └── +
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ├── Variable: a
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── Constant:&amp;nbsp;1
&amp;nbsp; &amp;nbsp; &amp;nbsp; └── ReturnStatement
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── Variable: b
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;上下文无关文法（CFG)&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;上下文无关文法（CFG） 是编译器语法分析的核心工具，用于形式化描述编程语言的语法结构。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其核心要素包括：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;终结符&lt;/strong&gt;（如标识符、运算符），对应词法分析的 Token，不可再分解。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;非终结符&lt;/strong&gt;（如表达式、语句），需通过产生式规则展开为终结符或其他非终结符。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;产生式规则（如 E → E + T）&lt;/strong&gt;&amp;nbsp;，定义语法结构的生成方式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;起始符号&lt;/strong&gt;（如&lt;strong&gt;&amp;nbsp;Program&amp;nbsp;&lt;/strong&gt;），代表语法分析的入口。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;产生式规则定义示例：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/* 局部变量声明 -&amp;gt; 类型，变量声明 */
/* 例如&amp;nbsp;int&amp;nbsp;a =&amp;nbsp;1&amp;nbsp;*/
/* Type 对应 int&amp;nbsp;*/
/* Variable_Declartor 对应 a =&amp;nbsp;1&amp;nbsp;*/
Local_Variable_Declartor -&amp;gt;
&amp;nbsp; &amp;nbsp; Type Variable_Declartor;


/* 变量声明 -&amp;gt; 变量 ID 或，变量 ID = 变量初始化 */
Variable_Declartor -&amp;gt;&amp;nbsp;
&amp;nbsp; &amp;nbsp; Variable_ID
&amp;nbsp; &amp;nbsp; | Variable_ID EQ Variable_Initializer;


/* 变量 ID -&amp;gt; 标识符 */ &amp;nbsp; &amp;nbsp;
Variable_ID -&amp;gt; IDENTIFIER;


/* 变量初始化 -&amp;gt; 任意表达式 */
Variable_initializer -&amp;gt; expression;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;示例中根据形式化的语法，描述了变量定义和变量初始化规则。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;示例中包含 4 条产生式规则：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;局部变量声明规则&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;变量声明表达式规则&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;变量 ID 规则&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;变量初始化规则&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;终止符：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Type 对应一个 C++的 TypeNode&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IDENTIFIER 对应词法定义的 Token&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;语法分析器&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;语法分析器采用 Bison 来实现，Bison 可以与 Flex 进行协作，将词法分析器生成的记号序列解析为语法树，供编译器进一步处理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;通过与 Flex 协同工作，Bison 可以自动化地处理复杂的语法分析任务，使编译器的开发更加高效和灵活。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;语义分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;原理：&lt;/strong&gt;通过遍历抽象语法树，实现上下文相关的文法检查，对程序的类型、作用域和标识符等进行详细检查，&lt;strong&gt;确保程序在逻辑上符合编程语言的规则，同时生成中间表示代码&lt;/strong&gt;，作为优化器或后端的输入。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;输入与输出：&lt;/strong&gt;抽象语法树-&amp;gt;中间代码。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;语法分析与语义分析的区别：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;输出目标不同：语法分析的主要任务是将记号流转换为结构化信息，语义分析是将结构化信息翻译为优化器可以处理的中间表示语言。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;语法正确的语句，语义未必正确：&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;例如，有函数原型&lt;strong&gt;&amp;nbsp;void echo(int a)&amp;nbsp;&lt;/strong&gt;，在调用时&lt;strong&gt;&amp;nbsp;int b = echo("a")&amp;nbsp;&lt;/strong&gt;，这是符合语法的，但不符合语义。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;再比如，语言要求使用变量前先定义，在未定义变量&lt;strong&gt;&amp;nbsp;a&amp;nbsp;&lt;/strong&gt;的前提下，执行赋值&lt;strong&gt;&amp;nbsp;a = 1;&amp;nbsp;&lt;/strong&gt;，这样也是符合语法但不符合语义的。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;语义分析的主要任务&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;符号表管理&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;作用域解析&lt;/strong&gt;：追踪变量/函数的作用域（如块级作用域、全局作用域）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;符号绑定：&lt;/strong&gt;将标识符与其声明关联（如变量类型、函数签名）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;重复定义检查：&lt;/strong&gt;禁止同一作用域内同名符号的重复声明。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;类型系统校验&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;类型推断与检查：&lt;/strong&gt;验证表达式和操作的合法性，如&lt;strong&gt;&amp;nbsp;int a = "str";&amp;nbsp;&lt;/strong&gt;类型不匹配。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;隐式类型转换：&lt;/strong&gt;处理类型提升，如&lt;strong&gt;&amp;nbsp;int + float&amp;nbsp;&lt;/strong&gt;自动转为浮点运算。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;函数签名匹配：&lt;/strong&gt;检查实参与形参的个数、类型一致性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;控制流合法性&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;语句上下文检查：&lt;/strong&gt;确保&lt;strong&gt;&amp;nbsp;break&amp;nbsp;&lt;/strong&gt;仅在循环内、&lt;strong&gt;&amp;nbsp;return&amp;nbsp;&lt;/strong&gt;与函数返回类型一致。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;可达性分析：&lt;/strong&gt;检测不可达代码（如&lt;strong&gt;&amp;nbsp;return&amp;nbsp;&lt;/strong&gt;后的语句）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;常量表达式求值&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;优化常量计算（如&lt;strong&gt;&amp;nbsp;const x = 2 + 3*4; &amp;nbsp;&lt;/strong&gt;直接计算为&lt;strong&gt;&amp;nbsp;14&amp;nbsp;&lt;/strong&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;用于数组长度、条件编译等需编译期确定值的场景。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;中间代码生成&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;中间代码的生成流程是通过递归遍历 AST 完成的，将语义检查无误的逻辑，转换为中间表示语言，这是编译器前端工作的最后一步。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 中使用了&lt;strong&gt;LLVM IR&lt;/strong&gt;作为中间代码语言，它介于高级语言和目标代码之间，既能表达高级语言的抽象概念，又能适应底层机器代码的生成需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;LLVM IR 提供了丰富的指令集，涵盖了从基本运算到复杂控制流、内存操作、同步操作等各种编程需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;LLVM IR 指令集示例&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//fffc0e15f1be962695432d3b2b69989a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;转换示例：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;int&amp;nbsp;func(int&amp;nbsp;a)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;int&amp;nbsp;b = a +&amp;nbsp;1;
&amp;nbsp;&amp;nbsp;return&amp;nbsp;b;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（源代码）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;; 函数定义: 函数名为 func，返回类型为 i32（32 位整数），参数为 i32 类型的 a
define i32 @func(i32 %a) {
entry:
&amp;nbsp; ; 定义局部变量 b，并将其初始化为 a +&amp;nbsp;1&amp;nbsp;的结果
&amp;nbsp; %b = add i32 %a,&amp;nbsp;1


&amp;nbsp; ; 返回 b 的值
&amp;nbsp; ret i32 %b
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（与之对应的 LLVM 的中间代码）&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;编译器中端：中间代码优化&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4427d784ffc7bf64021b597373528883.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在 DScript2.0 中，优化器是通过&lt;strong&gt;复用 LLVM 的中端优化能力&lt;/strong&gt;来实现的，通过一系列 LLVM 预置的优化遍 (Pass)，对程序生成的中间代码进行优化，以&lt;strong&gt;提高代码的性能。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;中端的输出为优化过后的 IR 指令，这些 IR 指令需要提供给后端进行编译。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在 LLVM 中，优化遍是指按照一定顺序执行的一个或多个优化算法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;以下是一些常用的优化算法：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//aa73fe5a522d09fac64f469c9f1c016a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;编译器后端：即时编译&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//7ffd47a0be70b88382e468d14fe98757.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 使用 LLVM 的 ORC JIT 作为即时编译器的实现，支持在程序运行时编译脚本，并通过查找函数地址的方式执行脚本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;采用即时编译器的优势：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;避免了开发调试过程中，频繁的启停程序，&lt;strong&gt;提升迭代效率。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;且经过编译的代码，在执行时能够显著&lt;strong&gt;提升运行性能。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;语言互操作性&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;语言互操作性是指不同编程语言能够相互调用、协同工作的能力。通过这种能力，开发者可以在同一项目中结合多种语言的优势。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;例如，&lt;strong&gt;C++ 与 Lua 的结合&lt;/strong&gt;是就互操作的经典场景，常见于游戏开发、搜推引擎、嵌入式系统等领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在我们的需求中，要支持动态脚本访问引擎的表列资源，就需要 DScript2.0 也能具备与 C++交互操作的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 与 C++的语言互操作性体现在&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;DScript2.0 可以调用 C++的函数，并向 C++传递数据。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;C++可以调用 DScript2.0 的函数，并向 DScript 脚本传递数据。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;DScript2.0 可以访问和操作 C++传递的基础类型和结构体类型变量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;调试能力&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 基于 GDB 实现了基本的调试能力：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持通过 Attach 进程进行实时调试&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持在 coredump 中保留栈信息&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;调试能力的实现主要基于 GDB 的通用调试接口，在编译 DScript2.0 源码时，生成调试信息，插入到 LLVM IR 的元数据中，然后通过 JIT 的监听器挂载 GDB 调试接口，并注入调试信息，最终实现调试能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//712d0be95e399fdf471e33364f57da3d.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;异常处理&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 中也实现了异常处理能力，主要包括了硬件异常的主动防御和跨 C++与 DScript2.0 边界的异常传播。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;硬件异常防御&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;程序异常可以划分为硬件异常和主动异常：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;硬件异常&lt;/strong&gt;是底层不可控错误，硬件异常的处理需依赖信号钩子或语言运行时封装。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;典型例子：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;段错误（SIGSEGV）：&lt;/strong&gt;非法内存访问&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;浮点运算错误（SIGFPE）：&lt;/strong&gt;如整数除零或浮点运算异常&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;非法指令（SIGILL）：&lt;/strong&gt;执行未定义的机器指令&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;总线错误 （SIGBUS）：&lt;/strong&gt;如未对齐的内存访问&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;主动异常&lt;/strong&gt;是代码逻辑的一部分，用于可控的错误处理与资源管理，主动异常由开发者显式抛出，也可由语言运行时隐式转换。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;硬件异常的主动防御&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 在语言层面上，对代码引发的硬件异常进行了主动防御。实现上，是在语义分析阶段，对中间代码添加防御逻辑，防御策略则采用了可被捕获的主动异常抛出。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;例如下图所示，在编译阶段，编译器对于结构体指针进行了空引用检查逻辑，将硬件异常转换为了主动异常，而主动异常可以通过捕获来进行处理，避免了进程崩溃。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//6c7e8cac4f4f5824c798faa662322910.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;跨语言边界传播&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;因为 DScript2.0 的语言互操作性特性，会涉及到 C++与 DScript2.0 的函数互相调用（如下图所示），就会涉及到异常处理时，异常在 C++和 DScript2.0 之间传播，即所谓跨语言边界。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 主要实现了如下的异常传播机制：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;脚本调用 C++ 函数时若抛出异常，在脚本端不进行捕获，但支持异常传播到 C++端，同时正常完成栈回退。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;C++ 调用脚本函数时若抛出异常，可以在 C++ 端捕获。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4ca2105f8da79d27155676715456951f.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;四、DScript2.0 在线开发工作流&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//304b49d4719757821cbf6154aa5b5807.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 通过平台化实现了在线开发的工作流：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;引擎集成：以 SDK 方式与引擎进行集成，提供在线编译和加载的能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在线 IDE：实现编辑、编译的在线开发环境。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在线工作流：通过平台化支持脚本的在线分发与管理。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;五、总结&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 的实践为推荐引擎的敏捷迭代探索了一条新路径。通过编译器架构与 C++底层机制的高度兼容设计，它在降低跨语言交互成本、支持动态加载等方面展现出潜力，同时保持了接近原生 C++的运行时性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;其即时编译能力与在线开发流程，使业务团队能独立完成逻辑更新，减少对传统 C++开发中编译部署的依赖，初步验证了兼顾性能与效率的可能性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未来，我们计划进一步完善调试工具链与异常处理机制，并探索其在混合语言场景下的扩展性，以更轻量的方式推动引擎架构的持续优化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;算法团队大量 HC，欢迎加入我们：&lt;/strong&gt;得物技术大量算法岗位多地上线，「职」等你来！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;1.&lt;/span&gt;社区造数服务接入 MCP｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;2.&lt;/span&gt;CSS 闯关指南：从手写地狱到「类」积木之旅｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;3.&lt;/span&gt;从零实现模块级代码影响面分析方案｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;4.&lt;/span&gt;以细节诠释专业，用成长定义价值——对话@孟同学 ｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;5.&lt;/span&gt;得物可观测平台架构升级：基于 GreptimeDB 的全新监控体系实践&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;文 / 明远&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;关注得物技术，每周更新技术干货&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353485</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353485</guid>
      <pubDate>Sun, 11 May 2025 05:46:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>NebulaFlow 重构边缘计算：分布式 AI 推理框架正式开源，低延迟赋能工业物联网</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;em&gt;在工业物联网 (IIoT) 与边缘计算深度融合的今天，NebulaFlow 开源框架的发布标志着分布式 AI 推理技术迈入新阶段。本文深度解析该框架如何通过创新的数据流编排机制，在工业质检、设备预测性维护等场景中实现毫秒级响应，同时揭示其三层异构计算架构如何平衡算力成本与推理精度。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;NebulaFlow 重构边缘计算：分布式 AI 推理框架正式开源，低延迟赋能工业物联网&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;边缘计算范式下的 AI 推理困境与破局&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;传统云计算架构在工业物联网场景中面临的根本矛盾，在于数据传输延迟与集中式算力分配间的不可调和性。NebulaFlow 创新性地采用边缘节点协同推理策略，将 AI 模型拆解为可动态部署的微服务单元。通过实时监控网络带宽波动和设备算力状态，系统能自主决策将 ResNet-34 等视觉模型的卷积层部署在网关设备，而全连接层下沉至边缘服务器。这种混合精度推理机制使得汽车焊接质量检测的端到端延迟从传统方案的 800ms 降至惊人的 93ms，同时保持 99.2% 的缺陷识别准确率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三层异构架构的算力编排奥秘&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NebulaFlow 框架最核心的竞争力在于其"终端-边缘-近云"三级计算架构设计。在半导体晶圆检测的实际部署中，框架的资源调度器会智能识别：轻量级 YOLOv5 模型的前处理阶段适合部署在带 NPU(神经网络处理单元) 的工业相机，特征提取层分配至工厂级边缘服务器集群，而复杂的分类决策则交由厂区级 GPU 节点完成。这种动态负载均衡策略使得单台注塑机的状态监测年运维成本降低 47%，而分布式推理过程中的梯度同步开销控制在总耗时的 15% 以内。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;数据流编排引擎的技术突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;框架内置的 Fluid DAG 引擎彻底改变了传统 AI 流水线的刚性结构。当处理风力发电机组的振动信号时，系统能根据传感器数据的信噪比动态调整 STFT(短时傅里叶变换) 的窗口参数，并智能跳过噪声干扰严重时段的数据预处理。这种具有容错能力的流式计算模式，使得 200ms 时间窗内的特征提取完成率从固定管道的 82% 提升至 98.7%。特别值得注意的是，引擎支持 TensorRT 和 ONNX Runtime 的混合部署，这让同一套 LSTM 模型能在不同代际的工业设备上保持一致的预测性能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;开源生态带来的产业变革机遇&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NebulaFlow 选择 Apache 2.0 协议开源的战略决策，正在催生工业 AI 领域的"安卓时刻"。其模块化设计允许西门子等设备厂商快速集成私有协议栈，同时保持核心调度算法的持续升级。在首批试点项目中，某钢铁集团通过复用框架的模型分片功能，仅用 3 周就完成了轧钢温度预测系统的跨厂区部署。更值得关注的是社区贡献的 ROS2-Nebula 适配器，这使 AGV 调度系统的路径规划延迟突破性地降至 50ms 量级。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;工业级可靠性的实现路径&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;为满足制药行业 GMP(药品生产质量管理规范) 的严苛要求，框架创新性地引入了双通道容错机制。当检测到某边缘节点心跳丢失时，不仅会立即触发邻近节点的模型热迁移，还会自动启用压缩感知技术对缺失数据进行重建。在疫苗灌装产线的 72 小时连续测试中，系统在模拟 20% 节点故障的情况下仍保持 99.99% 的批次合格判定准确率。这种鲁棒性很大程度上源于其独特的联邦式检查点机制，该技术将模型状态同步的带宽消耗降低了 60%。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NebulaFlow 的开源标志着边缘 AI 推理进入"生产就绪"阶段，其价值不仅体现在技术参数上的突破，更在于重构了工业智能化的实施范式。从半导体到能源装备，该框架证明分布式推理完全可以兼顾实时性与准确性，而其开放的架构更将加速工业元宇宙的生态构建。随着 5G-Advanced 网络的普及，这套框架有望成为连接物理世界与数字孪生的神经网络。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353481</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353481</guid>
      <pubDate>Sun, 11 May 2025 04:49:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>腾讯开源跨平台框架 ovCompose，助力全端应用开发</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;近日，腾讯开源平台正式推出了由腾讯视频团队主导开发的跨平台框架 ovCompose。该框架基于 Compose Multiplatform 生态构建，旨在解决 JetBrains Compose Multiplatform 当前不支持鸿蒙系统的问题，并改善 iOS 平台上布局受限的情况，从而帮助开发者更高效地打造全平台应用。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;在腾讯大前端 Oteam 的推动下，腾讯视频团队还推出了 KuiklyBase，涵盖 Kotlin/Native 对鸿蒙系统的适配、组件生态建设、编译流程优化、堆栈还原以及工具链完善等多个方面。这一系列技术方案有效提升了 Kotlin Multiplatform（KMP）开发者在鸿蒙平台上的开发效率。目前，ovCompose 与 KuiklyBase 已在 GitHub 上开源发布。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;现阶段，ovCompose 已在腾讯视频的鸿蒙平台全面应用，成为首个实现全跨端覆盖的 App。而 KuiklyBase 的核心能力也已在包括腾讯视频、QQ 浏览器、腾讯体育在内的十余款 App 中落地使用。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;通过采用一套代码覆盖 Android、iOS 与鸿蒙三大平台的开发模式，业务开发效率明显提升。随着鸿蒙系统的持续演进，ovCompose 与 KuiklyBase 的应用范围也将逐步拓展至电视端与 PC 端。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;值得关注的是，近年来 Kotlin Multiplatform（KMM）生态不断成熟，Kotlin-Native 在多个场景下的执行性能已超越 Kotlin-JVM。然而，Compose Multiplatform 在跨平台方面的技术尚未完全成熟。未来，ovCompose 与 KuiklyBase 将继续围绕以下方向进行优化：提升垃圾回收机制在实际业务中的表现、推进 Kotlin-Native 的组件化能力、优化 Kotlin-Native 的开发体验，以及进一步统一 UIKit 与 Skia 的渲染模式，力求为开发者提供更流畅、更高效的跨端开发体验。&lt;/p&gt; 
&lt;p&gt;https://github.com/Tencent-TDS/ovCompose-sample/blob/main/README-zh_CN.md&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353476</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353476</guid>
      <pubDate>Sun, 11 May 2025 04:04:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Yandex 发布全球最大开源音乐推荐数据集 Yambda</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Yandex &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsspai.com%2Flink%3Ftarget%3Dhttps%253A%252F%252Fwww.prnewswire.com%252Fnews-releases%252Fyandex-releases-worlds-largest-event-dataset-for-advancing-recommender-systems-302468616.html" target="_blank"&gt;发布&lt;/a&gt;开源音乐推荐数据集 Yambda，包含近 50 亿次匿名用户与流媒体平台 Yandex Music 音轨的互动数据。&lt;/p&gt; 
&lt;p&gt;Yandex 表示，该数据集来自旗下流媒体音乐服务的 My Wave 推荐系统，所有用户和跟踪数据都使用数字标识符匿名化处理：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;包含了跨度 10 个月、47.9 亿次匿名用户交互，拥有来自 100 万用户的数据和 939 万个曲目的匿名描述符&lt;/li&gt; 
 &lt;li&gt;包括隐式交互（侦听）和显式交互（喜欢、不喜欢和删除）两种反馈类型，并提供 50 亿、5 亿和 5000 万三种数据集大小，&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1154" src="https://static.oschina.net/uploads/space/2025/0604/112437_dqLB_2720166.png" width="2026" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;相比现有的 Spotify Million Playlists、Netflix Prize dataset 等数据集，Yambda 在数据规模和时效性方面都更为出色。&lt;/p&gt; 
&lt;p&gt;Yambda 可作为通用基准用于电子商务、社交网络和短视频平台的推荐系统测试，现已在 Hugging Face 上提供：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fdatasets%2Fyandex%2Fyambda" target="_blank"&gt;https://huggingface.co/datasets/yandex/yambda&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353465/yandex-releases-worlds-largest-event-dataset</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353465/yandex-releases-worlds-largest-event-dataset</guid>
      <pubDate>Sun, 11 May 2025 03:25:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>crabc-api 3.5.0 发布，接口快速开发平台</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;crabc-api 是一款 API 接口快速开发平台，企业级接口管理、SQL2API 平台。支持动态数据源、动态 SQL 和标签，&amp;nbsp;支持接入（mysql、oracle、达梦、TiDB、hive、es 和 mongodb）等 SQL 或 NoSQL 数据源，在线可视化编写 SQL 快速发布接口，支持一键上下线、接口管理、代理转发、鉴权、限流、熔断和监控告警等一站式 API 数据服务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1126" src="https://oscimg.oschina.net/oscnet/up-f5c1529db83d584e7a2e604fc6cf6bdec2e.png" width="2420" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1206" src="https://oscimg.oschina.net/oscnet/up-bd30a1e8a1ce8e211548ec01cd72225bfbe.png" width="2262" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;v3.5 更新内容&lt;/h3&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;1、新增删除按钮&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;2、优化详情页参数&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;3、去除 appCode 认证&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;4、优化认证逻辑&lt;/span&gt;&lt;br&gt; &lt;span style="background-color:#ffffff; color:#40485b"&gt;5、springboot 更新至 3.5.0&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;开源地址:&amp;nbsp;&lt;a href="https://gitee.com/linebyte/crabc"&gt;crabc-api&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;官网地址:&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.crabc.cn%2F" target="_blank"&gt;crabc&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353460/crabc-api-3-5-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353460/crabc-api-3-5-0</guid>
      <pubDate>Sun, 11 May 2025 03:11:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>AI 造物社区作品分享——超 mini 的 1.54 寸墨水屏多功能阅读器</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2005</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2005</guid>
      <pubDate>Sun, 11 May 2025 03:09:00 GMT</pubDate>
    </item>
    <item>
      <title>阶跃星辰 C 端产品「冒泡鸭」停运，业务重心转向终端 Agent</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ft6j6Wk5ekwdtbxvKP6HwmA" target="_blank"&gt;根据《智能涌现》的独家报道&lt;/a&gt;，大模型「六小虎」之一的阶跃星辰近半年在其 C 端应用布局上进行了一系列调整：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2024 年 12 月，角色扮演类 Agent 产品「冒泡鸭」停止大范围投入，团队合并至对话产品「跃问」（现更名为「阶跃 AI」），目前仅留部分员工运维。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/110406_jreC_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;针对上述信息，阶跃星辰回复称，早期团队基于当时的模型能力进行了一些产品探索；&lt;strong&gt;2025 年，随着多模态和推理能力的成熟，团队对产品进行收敛，聚焦 Agent 方向&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;公司方面还表示，「跃问」改名为「阶跃 AI」，意味着它从 Chat 类的产品到 Agent 能力的转变。&lt;/p&gt; 
&lt;p&gt;而据阶跃星辰员工透露，经过一年以来的探索，团队现在在产品布局上学到的深刻一课是：不要在已有头部玩家的领域，参与竞争。&lt;/p&gt; 
&lt;p&gt;报道指出，2025 年以来，阶跃星辰的战略，也是将资源从短板，集中到长板业务上：重心从 C 端，转移到模型研发和 ToB/G 上。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353456</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353456</guid>
      <pubDate>Sun, 11 May 2025 03:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>🚀 Xinference v1.6.1 新增 Deepseek-R1 模型，语言能力升级！</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Xorbits Inference（Xinference）是一个，性能强大且功能全面的，分布式，推理框架。可用于大语言模型（LLM），语音识别模型，多模态模型等各种模型的推理。通过 Xorbits Inference，你可以轻松地，一键部署你自己的模型或内置的前沿开源模型 - https://github.com/xorbitsai/inference。无论你是研究者，开发者，或是数据科学家，都可以通过 Xorbits Inference 与最前沿的 AI 模型，发掘更多可能。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt; Xinference 的功能和亮点有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌟 模型推理，轻而易举：大语言模型，语音识别模型，多模态模型的部署流程被大大简化。一个命令即可完成模型的部署工作。&lt;/li&gt; 
 &lt;li&gt;⚡️ 前沿模型，应有尽有：框架内置众多中英文的前沿大语言模型，包括 baichuan，chatglm2 等，一键即可体验！内置模型列表还在快速更新中！&lt;/li&gt; 
 &lt;li&gt;🖥 异构硬件，快如闪电：通过 ggml，同时使用你的 GPU 与 CPU 进行推理，降低延迟，提高吞吐！&lt;/li&gt; 
 &lt;li&gt;⚙️ 接口调用，灵活多样：提供多种使用模型的接口，包括 OpenAI 兼容的 RESTful API（包括 Function Calling），RPC，命令行，web UI 等等。方便模型的管理与交互。&lt;/li&gt; 
 &lt;li&gt;🌐 集群计算，分布协同：支持分布式部署，通过内置的资源调度器，让不同大小的模型按需调度到不同机器，充分使用集群资源。&lt;/li&gt; 
 &lt;li&gt;🔌 开放生态，无缝对接：与流行的三方库无缝对接，包括 LangChain， LlamaIndex， Dify，以及 Chatbox。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;🚀 Xinference v1.6.1 更新日志&lt;/p&gt; 
&lt;p&gt;✅ 本次亮点&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧠 新增 Deepseek-R1-0528 及其蒸馏模型 Deepseek-R1-0528-Qwen3 支持 Deepseek R1 最新版模型，语言理解与生成能力进一步增强。&lt;/li&gt; 
 &lt;li&gt;🧩 Transformers 的视觉语言（VL）模型推理逻辑全面重构新架构支持 &lt;strong&gt;continuous batching&lt;/strong&gt;，显著提升多模态模型在高并发场景下的处理效率。&lt;/li&gt; 
 &lt;li&gt;🦙 llama.cpp 引擎支持 Auto NGL（自动分层部署）功能系统可自动判断每张显卡的显存大小，智能计算能加载进 GPU 的层数（NGL: &lt;em&gt;n-gpu-layers&lt;/em&gt;），防止 OOM 错误，大幅提升大模型部署稳定性。🔗 参考文档：Auto NGL 说明&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌐 社区版更新&lt;/p&gt; 
&lt;p&gt;📦 安装方式&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;pip 安装：pip install 'xinference==1.6.1'&lt;/li&gt; 
 &lt;li&gt;Docker 使用：拉取最新版镜像，或在容器中使用 pip 更新&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🆕 新模型支持&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deepseek-R1-0528&lt;/li&gt; 
 &lt;li&gt;Deepseek-R1-0528-Qwen3（Deepseek 蒸馏到 Qwen3 架构）&lt;/li&gt; 
 &lt;li&gt;Paraformer 系列语音模型（新增若干变体）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ 新特性&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;llama.cpp 后端支持多模态推理（图文）&lt;/li&gt; 
 &lt;li&gt;llama.cpp 后端支持 Auto NGL 自动分层部署&lt;/li&gt; 
 &lt;li&gt;Web UI 支持常用参数提示与自定义参数输入框&lt;/li&gt; 
 &lt;li&gt;支持 Deepseek-R1-0528 及其蒸馏模型&lt;/li&gt; 
 &lt;li&gt;支持 Paraformer 系列新增语音模型&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🛠 功能增强&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修正 minicpm-reranker 的使用方式&lt;/li&gt; 
 &lt;li&gt;Speech2Text 接口支持额外参数透传&lt;/li&gt; 
 &lt;li&gt;kolors 支持使用 ModelScope 下载&lt;/li&gt; 
 &lt;li&gt;移除 vLLM 后端限制，允许 GPU index 自定义&lt;/li&gt; 
 &lt;li&gt;Transformers 后端支持 HybridCache，提升 Gemma3 Chat 等模型推理效率&lt;/li&gt; 
 &lt;li&gt;chattts 模型支持虚拟环境（virtualenv）隔离部署&lt;/li&gt; 
 &lt;li&gt;更新 flashinfer 版本&lt;/li&gt; 
 &lt;li&gt;精简安装依赖配置（修复 setup.cfg）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🐞 Bug 修复&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 jina-clip 模型输入参数问题&lt;/li&gt; 
 &lt;li&gt;修复 UI 删除缓存文件时可能导致白屏的问题&lt;/li&gt; 
 &lt;li&gt;忽略导入子模块时的测试文件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📚 文档更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除 llama-cpp-python 相关说明&lt;/li&gt; 
 &lt;li&gt;丰富 cosyvoice-2.0 的流式能力说明&lt;/li&gt; 
 &lt;li&gt;增加 Auto NGL 使用说明&lt;/li&gt; 
 &lt;li&gt;优化模型能力文档结构&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🏢 企业版更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧩 支持主从同步高可用架构提升在多节点部署场景下的稳定性与容错能力，保障核心业务连续性。&lt;/li&gt; 
 &lt;li&gt;🎨 多项功能优化与界面提升包括多模态模型使用体验优化、更强的系统可观测性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;我们感谢每一位参与的社区伙伴对 Xinference 的帮助和支持，也欢迎更多使用者和开发者参与体验和使用 Xinference。&lt;br&gt; &amp;nbsp;&lt;br&gt; 欢迎您在 https://github.com/xorbitsai/inference 给我们一个，星标，这样你就可以在 GitHub 上及时收到每个新版本的通知。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353452/xinference-1-6-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353452/xinference-1-6-1</guid>
      <pubDate>Sun, 11 May 2025 02:57:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>智源研究院开源 Video-XL-2：轻量级超长视频理解模型</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;近日，智源研究院联合上海交通大学等机构，正式发布新一代超长视频理解模型：&lt;strong&gt;Video-XL-2&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;相较于上一版本的 Video-XL，该模型在多个维度全面优化了多模态大模型对长视频内容的理解能力：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;效果更佳&lt;/strong&gt;：Video-XL-2 在长视频理解任务中表现出色，在 MLVU、Video-MME、LVBench 等主流评测基准上达到了同参数规模开源模型的领先水平。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;长度更长&lt;/strong&gt;：新模型显著扩展了可处理视频的时长，支持在单张显卡上高效处理长达万帧的视频输入。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;速度更快&lt;/strong&gt;：Video-XL-2 大幅提升了处理效率，编码 2048 帧视频仅需 12 秒，显著加速长视频理解流程。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Video-XL-2 的模型架构示意图：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/104152_Zepa_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在模型架构设计上，Video-XL-2 主要由三个核心组件构成：视觉编码器（Visual Encoder）、动态 Token 合成模块（Dynamic Token Synthesis, DTS）以及大语言模型（LLM）。&lt;/p&gt; 
&lt;p&gt;目前，Video-XL-2 的模型权重已全面向社区开放。未来，该模型有望在影视内容分析、异常行为监测等多个实际场景中展现重要应用价值。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;项目主页：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Funabletousegit.github.io%2Fvideo-xl2.github.io%2F" target="_blank"&gt;https://unabletousegit.github.io/video-xl2.github.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模型 hf 链接：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FBAAI%2FVideo-XL-2" target="_blank"&gt;https://huggingface.co/BAAI/Video-XL-2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;仓库链接：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FVectorSpaceLab%2FVideo-XL" target="_blank"&gt;https://github.com/VectorSpaceLab/Video-XL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353446</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353446</guid>
      <pubDate>Sun, 11 May 2025 02:44:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>「鸿蒙创想·创新场景共建挑战赛」开启，等你来战！</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;科技领域，生态竞争愈发激烈。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;凭借全场景战略，推动原生应用全面普及，构建更安全、更智能、更开放的操作系统生态，已成为国产操作系统生态的核心力量之一。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2025 年，开源中国携手 Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;诚邀各路开发者一起&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共建&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;HarmonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开发者场景技术能力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;并推出&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;鸿蒙创想·创新场景共建挑战赛&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;希望通过本次大赛，进一步加速 Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;应用开发进程，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;推动 H&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;armonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开发者场景技术能力生态&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，激发各路开发 OG 的无限创造力和创新力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;让我们以代码为笔，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共筑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开发者场景技术能力的盛景繁花&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0.0001pt; margin-right:0px; text-align:center"&gt;&lt;img height="162" src="https://static.oschina.net/uploads/space/2025/0604/103456_a3qU_4806939.png" width="553" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;鸿蒙创想 · 创新场景共建挑战赛&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;活动时间： 2025.5.30-2025.6.30&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报名链接：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqaxb95n3g50.feishu.cn%2Fshare%2Fbase%2Fform%2FshrcnaQjWtDMJvkU62QaXkuZyld" target="_blank"&gt;&lt;u&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;https://qaxb95n3g50.feishu.cn/share/base/form/shrcnaQjWtDMJvkU62QaXkuZyld&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="484" src="https://static.oschina.net/uploads/space/2025/0604/103551_WbZW_4806939.png" width="389" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;核心命题&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;HarmonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最新版本能力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;建&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;三方开源代码库，可提交开源代码、SDK 接口、API 接口、插件、边缘工具集成、智能工具以及场景解决方案等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提交方向参考&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多设备适配&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：基于 Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以及 ArkUI/RN/Flutter 技术栈，提供各种不同场景下的多设备响应式/自适应组件；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;跨平台框架&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：针对 RN/Flutter 等跨平台框架，提供鸿蒙特色能力的实现，例如：华为账号一键登录、碰一碰分享等；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AI 辅助&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：基于 AI 辅助，提升 Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;应用开发效率、问题定位效率等各类场景的能力或方案；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;性能功耗&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：①开发或移植高性能的数据库 ORM/Helper 、序列化/反序列化、后台任务管理等开源库 ②开发各类复杂场景的高性能 UI 组件；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;媒体方向&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：开发或移植功能完善的图片处理、音视频处理等开源库；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;6、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;网络方向&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：开发或移植高质量、功能完善的 http、websocket 等各类网络协议库。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#646a73"&gt;*提交内容广泛多样，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;如果与 Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;&amp;nbsp;相关的开源库代码、组件、接口均可参与。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span style="display:none"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color:#000000"&gt;学习资料：&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Fforum%2Fblock%2Fapplication%3Fha_linker%3DeyJ0cyI6MTcyMDU3ODU3MTQ0MywiaWQiOiJiZGMyZWVmNWU4MDFhYjI2OTA1YzM4ZWI0Y2QxYWFhMiJ9" target="_blank"&gt;&lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;https://developer.huawei.com/consumer/cn/forum/block/application?ha_linker=eyJ0cyI6MTcyMDU3ODU3MTQ0MywiaWQiOiJiZGMyZWVmNWU4MDFhYjI2OTA1YzM4ZWI0Y2QxYWFhMiJ9&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;参赛要求&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提交的作品必须紧扣核心命题，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;且&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;与 Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;相关&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可使用【&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fsheet%2FDS0FqQXBDRU10VWVJ%3Ftab%3D35fdxw" target="_blank"&gt;&lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#245bdb"&gt;&lt;u&gt;&lt;span&gt;HarmonyOS 工具包&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;】参与开发&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;并不适配最新&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;HarmonyOS &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系统&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;作品将无法通过审核；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;作品提交并通过审核后，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;名称和描述将不可更改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，请在提交作品前谨慎操作；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;3、提交的作品为可以直接复用的开源组件，便于评审；&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提交的作品（包含标题、描述、内容）要求正向积极，且必须遵守相关法律法规，确保内容安全合法合规&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;活动流程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、填写并提交【&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqaxb95n3g50.feishu.cn%2Fshare%2Fbase%2Fform%2FshrcnaQjWtDMJvkU62QaXkuZyld" target="_blank"&gt;&lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#0070c0"&gt;&lt;u&gt;&lt;span&gt;活动报名表&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;】，即为报名成功&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、提交活动作品：完成开发、适配后，进入【&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/gao-zhanr/harmony-os-third-party-library"&gt;&lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#0070c0"&gt;&lt;u&gt;&lt;span&gt;提交入口&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;】，提交自己的作品，作品需要包含源代码、demo 演示和简要介绍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、提交截止后，三方库内的开源作品经由官方评选，最后结果公示&amp;amp;奖励发放&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;活动奖项&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="display:none"&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="310" src="https://static.oschina.net/uploads/space/2025/0604/103836_17T3_4806939.png" width="552" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="171" src="https://static.oschina.net/uploads/space/2025/0604/103854_5c4s_4806939.png" width="503" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;评选维度&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;命题准确（20%）————紧扣核心命题，适配&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最新&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;Harmony&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;OS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&amp;nbsp;&lt;span&gt;&lt;span&gt;&lt;span&gt;系统&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;业务价值（35%）————贴合需求、市场价值及推广性，有明显的效率提升&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开发能力（35%）————综合技术能力，良好的作品运行效果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;文档规范（10%）————流程文档规范、工程质量优良、资料齐全&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;评选委员会将根据技术性、创新性、应用价值、用户体验、页面设计、使用体验、输出效果、体验流畅丝滑等维度综合评选出获奖作品。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;通过参加本次活动，参与者表明其理解并同意遵守以下条款和条件：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;数据安全与第三方权益：参与者应独立保证和承担活动期间所涉及数据的合规及安全责任，并保证其活动不侵害任何第三方的合法权利和利益。参与者活动期间所获得任何数据不得用于本次活动之外的其他任何目的，不得向任何第三人提供或披露本次活动数据及任何信息。参与者不得从事任何违反适用的法律、法规、规章或活动协议的活动。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;提交作品的审查与评估：活动组织者保留对提交的模型和代码进行全面审查和评估的权利，以确保符合活动规则和标准，但不因此免除参与者任何责任。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;活动规则和决策权：关于活动的所有相关事宜，包括但不限于活动规则、评估标准、奖励设定以及最终结果的决定，均由主办方全权决定。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;最终解释权：主办方拥有对所有活动相关内容的最终解释权。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;规则修改与调整：主办方保留根据实际情况对未尽事宜进行解释和处理的权利，并保留随时修改活动规则、调整活动流程或取消活动的权利。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;官方信息发布：请所有参与者密切关注活动官方网站或其他公告渠道，以便及时获取最新的活动信息。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;版权声明：参与者保证提交作品的创作不得侵犯任何第三方的合法权利，其作品版权归其作者及主办方共同所有。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353442</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353442</guid>
      <pubDate>Sun, 11 May 2025 02:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ChatGPT 轻量级记忆功能已向所有免费用户开放</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;OpenAI CEO Sam Altman &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fsama%2Fstatus%2F1930007155723415560" target="_blank"&gt;宣布&lt;/a&gt;，从现在开始，将为 ChatGPT 的免费用户提供轻量级记忆功能，同时他自己也表示该功能是其最喜欢的 ChatGPT 功能，未来也将大幅改进这一功能。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/103431_rXKj_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，ChatGPT 的记忆功能能记住用户最近的聊天内容，从而用户不必再经常重复表述自己的内容，GPT 也能回答更加个性化、更加符合用户偏好的内容，以及记住用户的部分信息、数据等内容。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d7727d9f7a35e0da218a4455d9ff43c9038.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;即日起，打开 ChatGPT 即可收到「全新改进型记忆功能上线」的相关推送消息。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353439</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353439</guid>
      <pubDate>Sun, 11 May 2025 02:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>虚幻引擎 5.6 正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Epic Games 发布了虚幻引擎 5.6 以及一系列开发工具，其中虚幻引擎 5.6 已开放&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.unrealengine.com%2Fzh-CN%2Fdownload" target="_blank"&gt;下载&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e1c36be4a3043698d373e1be09ba9a24cae.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，虚幻引擎 5.6 提供了经过优化的工具集，以在当前世代游戏主机、高端个人电脑以及现代移动设备上以 60 FPS 帧率稳定渲染游戏为目标，Epic Games 表示该版本消除了关键的 CPU 性能瓶颈并提升了硬件光线追踪（HWRT）系统和 Lumen 全局光照的性能表现。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-1ea550c8b7e659a53ab82f06b90699c4e05.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;借助快速几何内容流送（Fast Geometry Streaming）插件，开发者可以在世界中放置更多不可变的静态几何体并以恒定帧率更快地加载，内容流送中的异步物理状态创建和销毁流程也得到了改进；&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e129d74601ab78366206295d04acaf43db0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此外，开发者还可借助新版设备描述以尽可能少的配置流程达成性能目标。&lt;/p&gt; 
&lt;p&gt;更多内容查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.unrealengine.com%2Fzh-CN%2Fnews%2Funreal-engine-5-6-is-now-available" target="_blank"&gt;发布公告&lt;/a&gt; &amp;amp;&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.epicgames.com%2Fdocumentation%2Fzh-cn%2Funreal-engine%2Funreal-engine-5-6-release-notes" target="_blank"&gt;版本说明&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353435/unreal-engine-5-6</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353435/unreal-engine-5-6</guid>
      <pubDate>Sun, 11 May 2025 02:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 计划今年夏天发布 GPT-5</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fartificial-intelligence%2Fopenai-is-hopeful-gpt-5-will-compete-a-little-more%2F" target="_blank"&gt;据 BleepingC&lt;/a&gt;&lt;/u&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fartificial-intelligence%2Fopenai-is-hopeful-gpt-5-will-compete-a-little-more%2F" target="_blank"&gt;omputer 报道&lt;/a&gt;&lt;/u&gt;，OpenAI 的两位高管近日在出席在墨西哥举行的人工智能峰会上证实，GPT-5 确实正在研发中，并且它将比现有的 OpenAI 模型强大得多。OpenAI 目前仍在开发 GPT-5，尚未确定其成本。&lt;/p&gt; 
&lt;p&gt;一名 OpenAI 代表表示，他们希望借助 GPT-5 进一步提升竞争力，但未透露具体细节。&lt;/p&gt; 
&lt;p&gt;据悉，GPT-5 有望在今年夏季某个时间点发布，但具体时间尚不明确。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;值得一提的是，OpenAI CEO Sam Altman 就在刚刚疑似对新模型进行预告。其表示「火爆的 AI 夏天」，并透露 OpenAI 即将发布许多精彩内容。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2c222639a50749ed14090c376008a28b88e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据 AI 工程师 Tibor Blaho 近期透露，OpenAI 将在 7 月发布一个大规模模型。此前，Tibor Blaho 曾在 o3、o4 mini 系列模型发布前，在 ChatGPT 的网页中挖出相关信息。另据投资者「Chris（chatgpt21）」消息透露，GPT-5 发布时间有望定于 7 月。&lt;/p&gt; 
&lt;p&gt;今年 4 月，Altman 在 X 上宣布新模型发布计划的调整：GPT-5 将在几个月内发布。当时 Altman 解释了这次调整的原因，是要把 GPT-5 做得比最初预期的还要好得多，同时在整合上遇到了比想象中要大的困难。&lt;/p&gt; 
&lt;p&gt;今年 2 月，Altman 还曾公布了 GPT-5 的发展路线，并表示未来 OpenAI 旗下产品将简化分类：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;在 GPT-4.5 发布后，OpenAI 将会推出集成化模型系统，来统一 O 系列模型以及 GPT 系列模型。据 Altman 透露，GPT-5 将作为一个集成了 OpenAI 多项技术的系统进行发布，其中包含 o3 模型，同时 o3 模型将不再单独进行发布。&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353433</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353433</guid>
      <pubDate>Sun, 11 May 2025 02:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
