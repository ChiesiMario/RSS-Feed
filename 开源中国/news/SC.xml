<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 31 Jul 2025 21:43:38 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>袋鼠数据库工具 8.0.1 版已上线</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;袋鼠数据库工具，是一款 AI 驱动的热门数据库系统客户端 (MariaDB / MySQL / Oracle / PostgreSQL / Redis / SQLite / SQL Server / ...) ，支持建表、查询、模型、同步、导入导出等功能，支持 Windows / Mac / Linux 等操作系统，致力于打造一款好用、好玩、开发友好的开发者工具。&lt;/p&gt; 
&lt;h2&gt;重点特性介绍&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;这个版本继续完善 Redis 支持，实现了 Redis 高阶功能，实现了集群模式、哨兵模式、管道执行、命令导出、批量执行等高级功能，键视图、查询和控制枱也都支持集群模式和哨兵模式；导出和批量执行功能也支持集群模式和哨兵模式。控制枱支持全面升级，新增支持历史命令支持；&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;温馨提示&lt;/strong&gt;：自版本 9.99.1 开始，数据库连接配置文件做了升级，支持配置扩展附件，原有的连接在新版本中将会丢失部分数据，主要影响 SQLite/ODBC 连接，升级前请做好备份；&lt;/p&gt; 
&lt;h2&gt;新特性或修复的缺陷列表&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;数据表格: 增加跳转上下文菜单&lt;/li&gt; 
 &lt;li&gt;对象浏览: 增加跳转上下文菜单&lt;/li&gt; 
 &lt;li&gt;连接对象: 增加超时及 Redis 分隔符支持&lt;/li&gt; 
 &lt;li&gt;连接空间: 状态栏支持更多网格显示摘要信息&lt;/li&gt; 
 &lt;li&gt;对象仓库：重构数据库和架构上下文菜单&lt;/li&gt; 
 &lt;li&gt;Redis: 增加键分隔符支持&lt;/li&gt; 
 &lt;li&gt;Redis: DB 节点显示 DB 键数量&lt;/li&gt; 
 &lt;li&gt;Redis: 增加集群模式支持&lt;/li&gt; 
 &lt;li&gt;Redis: 增加哨兵模式支持&lt;/li&gt; 
 &lt;li&gt;Redis: 键视图增加键排序支持&lt;/li&gt; 
 &lt;li&gt;Redis: 重构控制枱界面为一个视图&lt;/li&gt; 
 &lt;li&gt;Redis: 控制枱新增内建命令支持 (Connect)&lt;/li&gt; 
 &lt;li&gt;Redis: 控制枱新增内建命令支持 (Clear)&lt;/li&gt; 
 &lt;li&gt;Redis: 控制枱增加历史命令支持 (Ctrl+Up/Down)&lt;/li&gt; 
 &lt;li&gt;Redis: 控制枱命令复合数据输出格式化支持&lt;/li&gt; 
 &lt;li&gt;Redis: 改建集权节点/分片信息显示&lt;/li&gt; 
 &lt;li&gt;Redis: 增加集群连接/复制节点显示支持&lt;/li&gt; 
 &lt;li&gt;Redis: 管道执行模式支持&lt;/li&gt; 
 &lt;li&gt;Redis: 批量执行命令支持&lt;/li&gt; 
 &lt;li&gt;Redis: 导出命令文件支持&lt;/li&gt; 
 &lt;li&gt;更新中文语言支持 (zh-CN/zh-SG/zh-Hans/zh-Hant)&lt;/li&gt; 
 &lt;li&gt;修复: 修复修改连接时无法更新视图的问题&lt;/li&gt; 
 &lt;li&gt;修复: 无法删除多个键问题&lt;/li&gt; 
 &lt;li&gt;修复: 分片日志格式化崩溃问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下载与安装&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv8.0.1.801.html" target="_blank"&gt;袋鼠数据库管理工具 8.0.1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;新版本功能快照&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv8.0.1.801.html" target="_blank"&gt;&lt;img alt="控制枱内建命令组" src="https://oscimg.oschina.net/oscnet/up-ab23d404a593fc1845d9c6d849cb0e7442a.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv8.0.1.801.html" target="_blank"&gt;&lt;img alt="Pub/Sub 界面截图" src="https://oscimg.oschina.net/oscnet/up-d3fff6fabaddd24d17f8b36bb308e231c39.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv8.0.1.801.html" target="_blank"&gt;&lt;img alt="Redis 键编辑截图" src="https://oscimg.oschina.net/oscnet/up-bb04d911533d016ad6de240dd0b97a8907c.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363484/kangaroo-8-0-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363484/kangaroo-8-0-1</guid>
      <pubDate>Wed, 16 Jul 2025 12:18:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Grok 即将推出「Imagine」功能，支持生成带音频的视频</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.eonmsk.com%2F2025%2F07%2F28%2Fxai-grok-imagine-feature%2F" target="_blank"&gt;据报道&lt;/a&gt;，xAI 即将为 Grok iOS 应用推出全新图像视频生成功能「Imagine」：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持带音频的视频生成（类似谷歌 Veo 3）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可一次性生成 4 段视频&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;生成速度显著提升&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;据悉，Grok 的生成模型 Aurora 已经升级，马斯克表示正在修复相关的 bug。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-bf9b9170ad1451344a226fff915855c764c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;从早期泄露的信息来看，Imagine 将在 Grok 的应用和网页版中拥有独立的标签页，与原有的文字对话功能并列。&lt;/p&gt; 
&lt;p&gt;Grok 届时将提供两个主要入口：「Ask」用于文字问答，「Imagine」则专注于图像与视频生成，用户可以在两者之间自由切换，使用更便捷。&lt;/p&gt; 
&lt;p&gt;在 Imagine 页面中，除了展示一些预先生成的图像和视频供用户探索外，还提供完整的创作自由。你可以手动输入 Prompt（提示词）生成内容，也可以通过语音方式来描述想要创作的画面或场景。&lt;/p&gt; 
&lt;p&gt;每次生成后，系统会给出 4 个不同版本的视频供你挑选，每段视频都配有不同的背景音效。生成结果会附带一些实用按钮，例如收藏、下载、在线分享，还可以点击「Redo」重新生成内容。&lt;/p&gt; 
&lt;p&gt;同时，Imagine 还提供多种预设模式可选，包括 Spicy（火辣）、Fun（风趣）和 Normal（常规）。此外，Imagine 页面还支持无限浏览推荐内容，用户可以持续向下滑动，探索更多图像与视频变体。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363480/xai-grok-imagine-feature</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363480/xai-grok-imagine-feature</guid>
      <pubDate>Wed, 16 Jul 2025 11:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ESP32 + MCP over MQTT：从 0 到 1 打造情感陪伴智能体</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;AI + IoT 的具象化：真正「懂你」的情感陪伴智能体&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;智能硬件的发展经历了几个阶段：从最初的「能联网」，到后来「能听你说话」，再到今天，我们希望它不仅能理解你的话，还能回应你，甚至陪伴你。想象以下的几个场景：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;下班回家，它主动问候你：「今天看起来有点疲惫，要不要帮你调暗灯光，放点轻音乐？」&lt;/li&gt; 
 &lt;li&gt;孩子和它聊天，它能用不同角色的声音演绎小故事。&lt;/li&gt; 
 &lt;li&gt;打开摄像头，它看看你的穿搭，并幽默回应：「今天这身很有气质！」&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这并非只存在于科幻作品中，而是大模型（LLM）+ 多模态 AI + IoT 技术结合的必然趋势。&lt;/p&gt; 
&lt;p&gt;传统 IoT 设备大多依赖「命令式控制」，即系统通过硬编码或者预置规则的方式来对设备进行控制，无法智能感知设备状态的变化。而未来的设备将迈向语义交互和情感陪伴。情感陪伴智能体，正是这一趋势的缩影。&lt;/p&gt; 
&lt;span id="OSC_h3_2"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;该系列文章适合谁？&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;如果你符合以下任意一种特征，这个系列就是为你准备的：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;智能硬件开发工程师：想探索 AI 如何赋能 IoT&lt;/li&gt; 
 &lt;li&gt;嵌入式/物联网开发者：对接 AI 服务，实现语音、视觉交互&lt;/li&gt; 
 &lt;li&gt;硬件发烧友 / 创客：想 DIY 一个「有灵魂」的智能小助手&lt;/li&gt; 
 &lt;li&gt;AI 应用开发者：希望从云端走向硬件，打通端到端体验&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果你曾经做过智能家居、机器人、AI 助手项目，这个系列能帮你提升到一个全新的交互层级。&lt;/p&gt; 
&lt;span id="OSC_h3_3"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;背景知识要求&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;别担心，你不需要成为全栈大神，但以下知识会让你更轻松：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;硬件开发基础：会烧写 ESP32 程序（ESP-IDF）&lt;/li&gt; 
 &lt;li&gt;网络通信基础：了解 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.emqx.com%2Fzh%2Fblog%2Fthe-easiest-guide-to-getting-started-with-mqtt" rel="nofollow" target="_blank"&gt;MQTT 协议&lt;/a&gt;的基本概念（发布/订阅）&lt;/li&gt; 
 &lt;li&gt;Python 基础：后续 LLM 和云端应用用到 Python SDK&lt;/li&gt; 
 &lt;li&gt;AI 应用概念（选修）：知道什么是大语言模型（LLM）、ASR（语音识别）、TTS（语音合成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;不会这些也没关系，系列文章会逐步讲解，并提供开箱即用的示例。&lt;/p&gt; 
&lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;为什么要自己做？&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;商用产品封闭无法定制，而我们希望用最经济、最简单的方式，构建一个功能强大的情感陪伴智能体&lt;/li&gt; 
 &lt;li&gt;借助开源硬件（ESP32）+ 云端 AI 接口，个人开发者也能打造接近厂商级体验的智能体&lt;/li&gt; 
 &lt;li&gt;这个过程不仅能让你玩出酷炫的 AI 硬件，还能深入理解 AI + IoT 的架构设计与实践&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_5"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;本系列教程的目标&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;通过渐进式教程，带你从零搭建一个情感陪伴智能体，它将具备：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;语音交互：听懂你的话，并用自然语气回答&lt;/li&gt; 
 &lt;li&gt;设备控制：通过语义指令调节屏幕亮度、音量等&lt;/li&gt; 
 &lt;li&gt;个性化人格：设定性格、喜好，具备一定记忆能力&lt;/li&gt; 
 &lt;li&gt;视觉理解：识别图像内容，并生成趣味反馈&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;最终，你将实现这样的体验：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;「嘿，把屏幕调暗一点」 → &lt;em&gt;「好的，已经帮你调暗，舒服点了吧？」&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;「你看一下我，觉得怎么样？」 → 智能体拍摄照片并上传 → &lt;em&gt;「呦，今天这么好看，是想迷死谁啊？」&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_6"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;本系列教程路线图&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:left"&gt;篇章&lt;/th&gt; 
   &lt;th style="text-align:left"&gt;功能&lt;/th&gt; 
   &lt;th style="text-align:left"&gt;难度&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;1&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;整体介绍：背景 + 环境准备 + 设备上线&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;★&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;2&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;从「命令式控制」到「语义控制」：MCP over MQTT 封装设备能力&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;★★&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;3&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;接入 LLM，实现「自然语言 → 设备控制」&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;★★&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;4&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;语音 I/O：麦克风数据上传 + 语音识别 + 语音合成回放&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;★★★&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;5&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;人格、情感、记忆：从「控制器」到「陪伴体」&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;★★★&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="text-align:left"&gt;6&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;给智能体增加「眼睛」：图像采集 + 多模态理解&lt;/td&gt; 
   &lt;td style="text-align:left"&gt;★★★&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;span id="OSC_h2_7"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;技术栈一览&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ESP32：低成本 + Wi-Fi/Bluetooth + 丰富外设，智能硬件项目首选&lt;/li&gt; 
 &lt;li&gt;MQTT 协议：轻量、实时、跨平台，IoT 标配&lt;/li&gt; 
 &lt;li&gt;MCP (Model Context Protocol) Over MQTT 
  &lt;ul&gt; 
   &lt;li&gt;让 LLM 通过「工具调用」直接控制硬件&lt;/li&gt; 
   &lt;li&gt;设备服务以「能力声明」方式注册，AI 调用自然、标准&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;AI 能力： 
  &lt;ul&gt; 
   &lt;li&gt;LLM：处理自然语言、控制意图&lt;/li&gt; 
   &lt;li&gt;ASR/TTS：语音识别与合成&lt;/li&gt; 
   &lt;li&gt;VLM（多模态大模型）：视觉理解，生成有趣描述&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;云端服务： 
  &lt;ul&gt; 
   &lt;li&gt;EMQX Serverless，或者本地安装的 EMQX&lt;/li&gt; 
   &lt;li&gt;开源 AI 框架：LangChain / LangFlow / LlamaIndex，本文选择的是 LlamaIndex&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;一句话概括架构：ESP32 做「硬件执行器」，云端 AI 做「大脑」，MQTT + MCP 做「神经通路」。&lt;/p&gt; 
&lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;硬件清单&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;为完成本教程所有相关的功能，推荐准备以下硬件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ESP32-S3-DevKitC（熟悉开发版的可以选择其他型号）&lt;/li&gt; 
 &lt;li&gt;INMP441 麦克风模块&lt;/li&gt; 
 &lt;li&gt;功放 MAX98357A&lt;/li&gt; 
 &lt;li&gt;喇叭 2-3W&lt;/li&gt; 
 &lt;li&gt;IIC 接口的液晶显示器&lt;/li&gt; 
 &lt;li&gt;OV2640 摄像头模块&lt;/li&gt; 
 &lt;li&gt;400 孔面包板以及杜邦线一套&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;总体系统架构设计&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://assets.emqx.com/images/2d0152b47bd29e2d883575bd7c9c2c67.png" alt="image.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;硬件层：ESP32 + 麦克风 + 扬声器 + 摄像头 + 屏幕。&lt;/li&gt; 
 &lt;li&gt;连接层：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.emqx.com%2Fzh%2Fblog%2Fthe-ultimate-guide-to-mqtt-broker-comparison" rel="nofollow" target="_blank"&gt;MQTT Broker&lt;/a&gt;（EMQX） + MCP 协议。&lt;/li&gt; 
 &lt;li&gt;AI 服务层：自然语言处理、语音合成、视觉识别、人格逻辑&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI 服务方面，本文选择了阿里云的语音识别，语音合成，大模型以及多模态大模型的服务。&lt;/p&gt; 
&lt;span id="OSC_h2_10"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;第一个目标：让设备上线&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;本实践主要是为了把 ESP32 设备连接到服务器，并发送消息&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://assets.emqx.com/images/ad358c414d6748ea4883bef28151e20a.png" alt="image.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;如图所示，&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;ESP32 连接 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.emqx.com%2Fzh%2Fcloud%2Fserverless-mqtt" rel="nofollow" target="_blank"&gt;EMQX Serveless&lt;/a&gt; 服务&lt;/li&gt; 
 &lt;li&gt;MQTTX（作为服务端的应用）也连接到 EMQX Serveless，订阅主题 &lt;code&gt;emqx/esp32&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;ESP32 发布消息 &lt;code&gt;Hi EMQX I'm ESP32 ^^&lt;/code&gt; 到主题 &lt;code&gt;emqx/esp32&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;MQTTX 接收到上述消息&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;硬件：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ESP32 开发板（推荐 DevKitC，带 USB 转串口）&lt;/li&gt; 
 &lt;li&gt;USB 数据线（注意必须支持数据传输）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;软件 ：&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ESP-IDF&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;安装 ESP-IDF&lt;/li&gt; 
   &lt;li&gt;安装 ESP-IDF 依赖，参考官方文档 - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fidf.espressif.com%2F" rel="nofollow" target="_blank"&gt;ESP-IDF Getting Started | Espressif Systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;安装 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2F" rel="nofollow" target="_blank"&gt;VS Code&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;VS Code 中安装 ESP-IDF 扩展&lt;/li&gt; 
   &lt;li&gt;参考 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fespressif%2Fvscode-esp-idf-extension" rel="nofollow" target="_blank"&gt;配置开发环境&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;MQTT 客户端测试工具：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmqttx.app%2F" rel="nofollow" target="_blank"&gt;MQTTX: Your All-in-one MQTT Client Toolbox&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;驱动注意：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 用户可能需要安装 CP210x 或 CH340 串口驱动&lt;/li&gt; 
 &lt;li&gt;macOS/Linux 通常即插即用&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_11"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;注册 EMQX Serverless&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;MQTT 作为智能体和云端大模型的传输协议，后续所有功能（语音、视觉、AI 控制）都依赖它与云端实时通信。为降低难度，避免本地安装和配置等复杂过程，推荐读者使用 EMQX MQTT 云服务。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;访问 EMQX Serverless - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.emqx.com%2Fzh%2Fcloud%2Fserverless-mqtt" rel="nofollow" target="_blank"&gt;安全、可伸缩的 Serverless MQTT 消息服务。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;按照网站的提示创建，注册账号，创建 MQTT 服务实例，获取以下信息： 
  &lt;ul&gt; 
   &lt;li&gt;Broker 地址&lt;/li&gt; 
   &lt;li&gt;用户名 / 密码&lt;/li&gt; 
   &lt;li&gt;端口号（MQTT over TLS 推荐 8883）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注意：您也可以根据自己的情况，在本机或者内网中部署一个 EMQX Broker，这样做的好处是可以降低 ESP32 与远程服务器之间的网络时延 - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.emqx.com%2Fzh%2Femqx%2Flatest%2Fdeploy%2Finstall-docker.html" rel="nofollow" target="_blank"&gt;通过 Docker 运行 EMQX | EMQX 文档&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://assets.emqx.com/images/1bbfb54fb08a2c9d9dbcb69daf071fee.png" alt="image.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_12"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;编译 &amp;amp; 烧录 ESP32 程序&lt;/strong&gt;&lt;/h3&gt; 
&lt;span id="OSC_h4_13"&gt;&lt;/span&gt; 
&lt;h4&gt;代码目录&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;| - CMakeLists.txt
| - sdkconfig
| - main
| --- main.c
| --- CMakeLists.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;span id="OSC_h4_14"&gt;&lt;/span&gt; 
&lt;h4&gt;CMakeLists.txt&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;# The following lines of boilerplate have to be in your project's
# CMakeLists in this exact order for cmake to work correctly
cmake_minimum_required(VERSION 3.16)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

include($ENV{IDF_PATH}/tools/cmake/project.cmake)
project(main)
&lt;/code&gt;&lt;/pre&gt; 
&lt;span id="OSC_h4_15"&gt;&lt;/span&gt; 
&lt;h4&gt;sdkconfig&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;CONFIG_MQTT_PROTOCOL_5=y
CONFIG_ESP_WIFI_SOFTAP_SUPPORT=n
&lt;/code&gt;&lt;/pre&gt; 
&lt;span id="OSC_h4_16"&gt;&lt;/span&gt; 
&lt;h4&gt;main/main.c&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-c"&gt;#include &amp;lt;stdio.h&amp;gt;

#include "freertos/FreeRTOS.h"
#include "freertos/event_groups.h"
#include "freertos/task.h"

#include "esp_log.h"
#include "esp_mac.h"
#include "esp_system.h"
#include "esp_wifi.h"
#include "mqtt_client.h"
#include "nvs_flash.h"

#define PIN_NUM_SCLK 21
#define PIN_NUM_MOSI 47
#define PIN_NUM_MISO -1

#define LCD_H_RES 240

static EventGroupHandle_t s_wifi_event_group;
static int                s_retry_num = 0;
static esp_mqtt_client_handle_t client;

static const char *WIFI_SSID     = "wifi_ssid";
static const char *WIFI_PASSWORD = "wifi_password";
static const char *MQTT_BROKER =
    "mqtts://xxyyzzz:8883";
static const char *username = "user";
static const char *password = "password";
static const char *cert =
    "-----BEGIN CERTIFICATE-----\n"
    "MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh\n"
    "MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\n"
    "d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD\n"
    "QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT\n"
    "MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j\n"
    "b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG\n"
    "9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB\n"
    "CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97\n"
    "nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt\n"
    "43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P\n"
    "T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4\n"
    "gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO\n"
    "BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR\n"
    "TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw\n"
    "DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr\n"
    "hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg\n"
    "06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF\n"
    "PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls\n"
    "YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk\n"
    "CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=\n"
    "-----END CERTIFICATE-----";

static void event_handler(void *arg, esp_event_base_t event_base,
                          int32_t event_id, void *event_data)
{
    if (event_base == WIFI_EVENT &amp;amp;&amp;amp; event_id == WIFI_EVENT_STA_START) {
        esp_wifi_connect();
    } else if (event_base == WIFI_EVENT &amp;amp;&amp;amp;
               event_id == WIFI_EVENT_STA_DISCONNECTED) {
        if (s_retry_num &amp;lt; 5) {
            esp_wifi_connect();
            s_retry_num++;
            ESP_LOGI("wifi sta", "retry to connect to the AP");
        } else {
            xEventGroupSetBits(s_wifi_event_group, BIT1);
        }
        ESP_LOGI("wifi sta", "connect to the AP fail");
    } else if (event_base == IP_EVENT &amp;amp;&amp;amp; event_id == IP_EVENT_STA_GOT_IP) {
        ip_event_got_ip_t *event = (ip_event_got_ip_t *) event_data;
        ESP_LOGI("wifi sta", "ip: " IPSTR ", mask: " IPSTR ", gateway: " IPSTR,
                 IP2STR(&amp;amp;event-&amp;gt;ip_info.ip), IP2STR(&amp;amp;event-&amp;gt;ip_info.netmask),
                 IP2STR(&amp;amp;event-&amp;gt;ip_info.gw));
        s_retry_num = 0;
        xEventGroupSetBits(s_wifi_event_group, BIT0);
    }
}

int wifi_init_sta(void)
{
    s_wifi_event_group = xEventGroupCreate();

    ESP_ERROR_CHECK(esp_netif_init());
    ESP_ERROR_CHECK(esp_event_loop_create_default());

    esp_netif_create_default_wifi_sta();
    wifi_init_config_t cfg = WIFI_INIT_CONFIG_DEFAULT();
    ESP_ERROR_CHECK(esp_wifi_init(&amp;amp;cfg));

    esp_event_handler_instance_t instance_any_id;
    esp_event_handler_instance_t instance_got_ip;

    ESP_ERROR_CHECK(esp_event_handler_instance_register(
        WIFI_EVENT, ESP_EVENT_ANY_ID, &amp;amp;event_handler, NULL, &amp;amp;instance_any_id));
    ESP_ERROR_CHECK(esp_event_handler_instance_register(
        IP_EVENT, IP_EVENT_STA_GOT_IP, &amp;amp;event_handler, NULL, &amp;amp;instance_got_ip));

    wifi_config_t wifi_config = {
        .sta = {
            .threshold.authmode = WIFI_AUTH_WPA2_PSK,
            .sae_pwe_h2e = WPA3_SAE_PWE_BOTH,
            .sae_h2e_identifier = "",
        },
    };
    strcpy((char *) wifi_config.sta.ssid, WIFI_SSID);
    strcpy((char *) wifi_config.sta.password, WIFI_PASSWORD);
    ESP_ERROR_CHECK(esp_wifi_set_mode(WIFI_MODE_STA));
    ESP_ERROR_CHECK(esp_wifi_set_config(WIFI_IF_STA, &amp;amp;wifi_config));
    ESP_ERROR_CHECK(esp_wifi_start());

    ESP_LOGI("wifi sta", "wifi init finished.");

    EventBits_t bits = xEventGroupWaitBits(s_wifi_event_group, BIT0 | BIT1,
                                           pdFALSE, pdFALSE, portMAX_DELAY);

    if (bits &amp;amp; BIT0) {
        ESP_LOGI("wifi sta", "connected to ap SSID: %s", CONFIG_WIFI_SSID);
    } else if (bits &amp;amp; BIT1) {
        ESP_LOGI("wifi sta", "Failed to connect to SSID: %s", CONFIG_WIFI_SSID);
    } else {
        ESP_LOGE("wifi sta", "UNEXPECTED EVENT");
    }

    return 0;
}

static void mqtt5_event_handler(void *handler_args, esp_event_base_t base,
                                int32_t event_id, void *event_data)
{
    char *TAG = "mqtt5";
    ESP_LOGD(TAG, "Event dispatched from event loop base=%s, event_id=%" PRIi32,
             base, event_id);
    esp_mqtt_event_handle_t  event  = event_data;
    esp_mqtt_client_handle_t client = event-&amp;gt;client;
    int                      msg_id;

    ESP_LOGD(TAG, "free heap size is %" PRIu32 ", minimum %" PRIu32,
             esp_get_free_heap_size(), esp_get_minimum_free_heap_size());
    ESP_LOGI(TAG, "event_id=%" PRIi32, event_id);

    switch ((esp_mqtt_event_id_t) event_id) {
    case MQTT_EVENT_CONNECTED:
        msg_id = esp_mqtt_client_publish(client, "emqx/esp32",
                                         "Hi EMQX I'm ESP32 ^^", 0, 1, 0);
        ESP_LOGI(TAG, "sent publish successful, msg_id=%d", msg_id);
        break;
    case MQTT_EVENT_DISCONNECTED:
    case MQTT_EVENT_SUBSCRIBED:
    case MQTT_EVENT_PUBLISHED:
    case MQTT_EVENT_DATA:
        break;
    case MQTT_EVENT_UNSUBSCRIBED:
        esp_mqtt_client_disconnect(client);
        break;
    case MQTT_EVENT_ERROR:
        ESP_LOGI(TAG, "MQTT5 return code is %d",
                 event-&amp;gt;error_handle-&amp;gt;connect_return_code);
        if (event-&amp;gt;error_handle-&amp;gt;error_type == MQTT_ERROR_TYPE_TCP_TRANSPORT) {
            ESP_LOGI(TAG, "Last errno string (%s)",
                     strerror(event-&amp;gt;error_handle-&amp;gt;esp_transport_sock_errno));
        }
        break;
    default:
        ESP_LOGI(TAG, "Other event id:%d", event-&amp;gt;event_id);
        break;
    }
}

int mqtt_init(void)
{
    esp_mqtt_client_config_t mqtt5_cfg = {
        .broker.address.uri                  = MQTT_BROKER,
        .session.protocol_ver                = MQTT_PROTOCOL_V_5,
        .network.disable_auto_reconnect      = true,
        .credentials.username                = username,
        .credentials.authentication.password = password,
        .broker.verification.certificate     = cert,
    };

    client = esp_mqtt_client_init(&amp;amp;mqtt5_cfg);
    esp_mqtt_client_register_event(client, ESP_EVENT_ANY_ID,
                                   mqtt5_event_handler, NULL);
    esp_mqtt_client_start(client);
    return 0;
}

void app_main(void)
{
    esp_err_t ret = nvs_flash_init();
    if (ret == ESP_ERR_NVS_NO_FREE_PAGES ||
        ret == ESP_ERR_NVS_NEW_VERSION_FOUND) {
        ESP_ERROR_CHECK(nvs_flash_erase());
        ret = nvs_flash_init();
    }
    ESP_ERROR_CHECK(ret);

    wifi_init_sta();
    mqtt_init();

    while (1) {
        vTaskDelay(pdMS_TO_TICKS(3000));
        int msg_id = esp_mqtt_client_publish(client, "emqx/esp32",
                                             "Hi EMQX I'm ESP32 ^^", 0, 1, 0);
        ESP_LOGI("mqtt", "sent publish successful, msg_id=%d", msg_id);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;span id="OSC_h4_17"&gt;&lt;/span&gt; 
&lt;h4&gt;main/CMakeLists.txt&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;idf_component_register(SRCS "main.c"
                    PRIV_REQUIRES mqtt esp_wifi nvs_flash
                    INCLUDE_DIRS ".")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;修改 WIFI 以及 MQTT 服务相关配置 main/main.c 如下所示，替换为你自己的配置信息，&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Wi-Fi 名称、密码&lt;/li&gt; 
 &lt;li&gt;在 Serverless 上申请的地址，以及用户名和密码&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-c"&gt;static const char *WIFI_SSID     = "wifi_ssid";
static const char *WIFI_PASSWORD = "wifi_password";
static const char *MQTT_BROKER =
    "mqtts://xxyyzzz:8883";
static const char *username = "user";
static const char *password = "password";
&lt;/code&gt;&lt;/pre&gt; 
&lt;span id="OSC_h4_18"&gt;&lt;/span&gt; 
&lt;h4&gt;编译代码并且烧录到 esp32 中&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;idf.py build 
idf.py flash monitor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;烧录完成后，ESP32 将每隔 3 秒发送 &lt;code&gt;Hi EMQX I'm ESP32 ^^&lt;/code&gt; 到 &lt;code&gt;emqx/esp32&lt;/code&gt; 主题。&lt;/p&gt; 
&lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;验证&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;打开 MQTTX，配置 MQTT 连接，如下图所示，&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Host 中填入你在 EMQX Serverless 申请的服务地址&lt;/li&gt; 
 &lt;li&gt;Username 和 Password 中输入连接的用户名和密码&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://assets.emqx.com/images/d12a76daacc575471fc45eea5e74a3c9.png" alt="image.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;连接成功后，添加一个新的订阅，在主题中输入 &lt;code&gt;emqx/esp32&lt;/code&gt;，如果看到以下内容：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://assets.emqx.com/images/a67b868b203bb1af0f1b9b874883f9fc.png" alt="image.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;恭喜！你的设备已经成功接入 MQTT。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;问题诊断：如果收不到消息，我该怎么办？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;可以登录到 EMQX Serverless 上看一下有没有你连接上来的 ESP32 设备。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果没有，大概率是你的设备端有问题。 
  &lt;ul&gt; 
   &lt;li&gt;再次检查一下源代码中指定的地址、用户名和密码。&lt;/li&gt; 
   &lt;li&gt;确定网络状态，以及 Wi-Fi 信息&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;如果有，那么可能是你的 MQTTX 指定的连接或者主题不对。 
  &lt;ul&gt; 
   &lt;li&gt;再次检查一下 MQTTX 中指定的地址、用户名和密码。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_20"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;下篇预告&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在下一篇中，我们将让 ESP32 「暴露」自己的控制能力，通过 MCP 协议注册亮度、音量调节接口，让 MCP 的客户端 Python 应用可以访问和列出所有在 ESP32 上安装的工具列表。&lt;/p&gt; 
&lt;span id="OSC_h2_21"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;资源&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MQTT 协议相关的基本材料：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.emqx.com%2Fzh%2Femqx%2Flatest%2Fconnect-emqx%2Fdeveloper-guide.html" rel="nofollow" target="_blank"&gt;开发者指南 | EMQX 文档&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;EMQX Serverless 免费注册 - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.emqx.com%2Fzh%2Fcloud%2Fserverless-mqtt" rel="nofollow" target="_blank"&gt;安全、可伸缩的 Serverless MQTT 消息服务。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MQTT 客户端工具：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmqttx.app%2F" rel="nofollow" target="_blank"&gt;MQTTX: Your All-in-one MQTT Client Toolbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ESP32 官方网站：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.espressif.com.cn%2Fen%2Fproducts%2Fsocs%2Fesp32" rel="nofollow" target="_blank"&gt;https://www.espressif.com.cn/en/products/socs/esp32&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4174826/blog/18686619</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4174826/blog/18686619</guid>
      <pubDate>Wed, 16 Jul 2025 11:25:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>飞致云开源社区月度动态报告（2025 年 7 月）</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style="color:#000000"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;自 2023 年 6 月起，中国领先的开源软件公司飞致云以月度为单位发布《飞致云开源社区月度动态报告》，旨在向广大社区用户同步飞致云旗下系列开源软件的发展情况，以及当月主要的产品新版本发布、社区运营成果等相关信息。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;飞致云开源运营数据概览（2025 年 7 月）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 7 月飞致云开源软件运营数据概览（统计时间为 2025.7.1～2025.7.31）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://mp.toutiao.com/mp/agw/article_material/open_image/get?code=NmYwZTNlZTY3MmQ2Zjg5NjlhYjk1OTQ0N2Q1ZGIxZGEsMTc1Mzk1NjQ4Njc3MA==" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3370ff"&gt;2025 年 7 月产品发布事件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MeterSphere 开源持续测试工具&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#010101"&gt;2025 年 7 月 14 日，MeterSphere 开源持续测试工具发布了 v3.6.5 LTS 版本。在这一版本中，MeterSphere 开源项目组对排序字段存在 SQL 注入风险的缺陷进行了修复。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ JumpServer 开源堡垒机&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#010101"&gt;2025 年 7 月 17 日，广受欢迎的开源堡垒机 JumpServer 发布了 v4.10.4 LTS 版本。在这一版本中，JumpServer 项目组进行了包括优化操作日志在内的 9 项功能优化工作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MaxKB 开源企业级智能体平台&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#010101"&gt;2025 年 7 月 18 日，MaxKB V2 版本正式发布。MaxKB 是一个强大易用的企业级智能体平台，致力于解决企业 AI 落地所面临的技术门槛高、部署成本高、迭代周期长等问题，让企业用户落地 AI 更简单。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#010101"&gt;在 V2 版本中，MaxKB 的多租户权限管理体系全面升级，能够有效满足多组织、多部门及多用户群体的权限与资源管理需求，实现权限与资源的精准管控；新增共享资源管理功能，支持跨工作空间的资源复用与协作；新增对话用户管理功能，支持提问端身份验证，能够实现对用户提问范围和知识检索权限的管理与控制；新增支持按文件夹目录管理应用、知识库、工具和模型四类核心资源。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#010101"&gt;此外，MaxKB V2 社区版本全面开放对用户数量、知识库数量和应用数量的限制，助力广大社区用户加速构建并运营生产级别的智能体应用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 1Panel 开源面板&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#010101"&gt;2025 年 7 月 24 日，现代化、开源的 Linux 服务器运维管理面板 1Panel 正式发布 v2.0.5 版本。在这一版本中，1Panel 新增数据库集群部署、邮件告警和主从节点灵活切换三项功能，聚焦为企业级运维场景提供更优使用体验。1Panel v2.0.5 版本是 1Panel 开源面板项目在交付企业级集群化和高可用能力方面迈出的关键一步。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3370ff"&gt;其他重要事件&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MaxKB 入选中国 AI 领域高潜力开源项目（2025 年第一期）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 7 月 5 日，在 2025 全球数字经济大会·全球开源创新发展论坛上，国家工业信息安全发展研究中心联合开源指南针社区（OSS Compass）、南京大学、开放原子开源基金会、开源中国、CSDN 等单位，共同发布开源项目质效量化评估和智能预测体系以及中国人工智能开源项目质效评估洞察。飞致云旗下 MaxKB 开源项目入选「中国 AI 领域高潜力开源项目」（2025 年第一期）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MaxKB 在企业环境中实现 AI 落地的具体场景盘点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;近期，MaxKB 新增的企业用户包括：河北鑫达集团、北京锐融天下科技股份有限公司、广州港南沙集装箱三期码头、国元期货有限公司、中信泰富特钢集团、济南地铁、深圳联合产权交易所股份有限公司、新疆兵团勘测设计院集团股份有限公司、安徽公共资源交易集团有限公司、中电建商业保理有限公司、四川航空、北京建工六建集团、中国有色金属工业西安勘察设计研究院、国药集团国瑞药业有限公司、大唐宁德发电公司和上海豫园旅游商城（集团）股份有限公司。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;在本轮收集到的 16 家企业用户中，MaxKB 的使用场景包括智能客服、业务 AI 助手、员工服务、人力与财务管理等。其中，智能客服是 MaxKB 的高频使用场景之一，有 6 家企业基于 MaxKB 构建并运营智能客服系统。MaxKB 与企业业务的深度结合也是一个重要的方向，在港口、地铁、建筑、发电等场景中，MaxKB 正在被应用在设备管理、车辆调度、机电设计、缺陷管理等领域。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 飞致云开源项目入驻 GitCode，打造开发者最强工具箱！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 7 月，飞致云旗下的开源项目 1Panel 开源面板、MaxKB 开源企业级智能体平台、JumpServer 开源堡垒机、DataEase 开源 BI 工具、MeterSphere 开源持续测试工具和 Halo 开源建站工具正式加入 GitCode 开源开发者平台，并且成为 G-Star 毕业项目，为开发者带来了覆盖运维、安全、数据分析等领域的专业级工具。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MaxKB 亮相 2025 世界人工智能大会&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;MaxKB 联合超聚变打造的 MaxKB 企业级智能体平台一体机解决方案亮相于 2025 年 7 月 26 日开幕的 2025 世界人工智能大会（WAIC 2025）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-1edf8e7f21b546bf89b82f8fc65730642b9.jpg" width="1620" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 1 MaxKB 亮相 2025 世界人工智能大会&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 1Panel 开源面板 GitHub Star 数量突破 30,000 个！&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;截至 2025 年 7 月 23 日 20:00，飞致云旗下开源项目——1Panel 开源 Linux 服务器运维管理面板 GitHub Star 数超过 30,000 个！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;继 Halo 之后，1Panel 成为飞致云旗下第二个 GitHub Star 数量超过 30,000 个的开源项目，也是飞致云旗下最快达成 30,000 个 GitHub Star 目标的项目。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-4fa891f28867f5e17eed7ff8baaa34c0c5b.jpg" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 2 1Panel 成为飞致云旗下最快达成 30,000 个 GitHub Star 目标的项目&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 1Panel 应用商店下载趋势及下载排名情况&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;为了方便广大用户快捷安装部署相关软件应用，1Panel 特别开通应用商店，精选各类高质量的开源工具和应用软件，为用户的应用安装与升级操作提供便利。目前，1Panel 应用商店已经上架了超过 180 款精品软件并且定期更新维护，成为了开源软件用户的系统装机神器。&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#ff8124"&gt;2025 年 7 月，1Panel 应用商店软件下载量达到 232,945 次。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="848" src="https://oscimg.oschina.net/oscnet/up-cee79e42e6dc4ef3656783eaf145fad50a4.png" width="1220" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 3 1Panel 应用商店月下载总量统计&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="814" src="https://oscimg.oschina.net/oscnet/up-67a5b296fe41369f105a261de689c0c9078.png" width="1178" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 4 1Panel 应用商店软件下载排名 Top 20（2025 年 7 月）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&amp;nbsp;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4736111/blog/18686621</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/18686621</guid>
      <pubDate>Wed, 16 Jul 2025 11:01:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Meta 计划 2025 年斥资最高 720 亿美元建设 AI 基础设施</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Meta &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F07%2F30%2Fmeta-to-spend-up-to-72b-on-ai-infrastructure-in-2025-as-compute-arms-race-escalates%2F" target="_blank"&gt;计划&lt;/a&gt;在 2025 年投入 660 亿至 720 亿美元用于 AI 基础设施建设，包括数据中心和服务器等。按中间值计算，同比增加约 300 亿美元。Meta 首席财务官苏珊・李表示，开发领先的 AI 基础设施将成为开发最优秀 AI 模型和产品体验的核心优势，因此公司计划在 2026 年继续大幅增加投资。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-546675b820004ef0950dda417dfc593cd82.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Meta 正在建设多个 AI 超级集群，包括位于俄亥俄州的「普罗米修斯」集群，预计 2026 年上线后将成为首批计算能力达到 1 千兆瓦的 AI 超级集群之一；以及路易斯安那州的「海伯利昂」集群，其规模相当于整个曼哈顿，未来数年可扩展至 5 千兆瓦。此外，Meta 还在建设其他几个未命名的泰坦级集群。&lt;/p&gt; 
&lt;p&gt;除了硬件设施的投入，Meta 也在积极储备人才，斥资数亿甚至数十亿美元从竞争对手处挖角 AI 工程师和研究人员，充实新成立的「超级人工智能实验室」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363471</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363471</guid>
      <pubDate>Wed, 16 Jul 2025 10:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>200 万的 AI 服务器坏了，返修要半年，深圳老哥两周就给你修好！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;你知道国内 GPU 维修集中在哪吗？答案是深圳，特别是早期的华强北。&lt;/p&gt; 
&lt;p&gt;这里曾是显卡维修的发源地，尤其是消费级显卡，因为图纸公开，维修门槛低。可现在，核心业务早已转向高端计算卡，比如 A100、H100、4090 这些禁售卡。维修这些卡，技术门槛高，还得是干过台积电、富士康、英伟达的老工程师才行。&lt;/p&gt; 
&lt;p&gt;现在全国能修这类卡的团队，基本也就集中在深圳，维修流程专业、完整，从上机检测到核心移植，一张卡动辄十几万，可不是随便焊电路板那么简单。&lt;/p&gt; 
&lt;p&gt;国内大部分 GPU 维修点，都在深圳，华强北电子产业繁荣，滋生了相关产业链，很好承接了这部分需要。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0731/183053_jQ95_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;从 2022 年开始，英伟达就陆续在中国禁售 A100/H100 及 A800/H800 等高端 GPU，国内不存在「官方」售后服务了。因此，国内就出现很多 GPU 维修的公司，最快只需要 2 个礼拜就能完成。&lt;/p&gt; 
&lt;p&gt;有人根据保有量和故障率预测，这是一笔百亿元的产业。这几百亿的产业，应该基本都要落到深圳的兜里。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;更多精彩内容，扫码观看视频：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0731/182758_Y5ZC_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363470</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363470</guid>
      <pubDate>Wed, 16 Jul 2025 10:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>GitHub Copilot 用户总数突破 2000 万</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;微软首席执行官萨蒂亚·纳德拉在周三的公司&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2FInvestor%2Fearnings%2FFY-2025-Q4%2Fpress-release-webcast" target="_blank"&gt;&lt;span style="color:#2980b9"&gt;财报电话会议&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt;上表示，微软旗下 GitHub 提供的 AI 编程工具 GitHub Copilot 的用户数量现已超过 2000 万。GitHub 发言人向 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F07%2F30%2Fgithub-copilot-crosses-20-million-all-time-users%2F" target="_blank"&gt;TechCrunch&lt;/a&gt; 证实，这个数字代表的是「总用户数」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这意味着在过去三个月中，已有 500 万人首次尝试使用 GitHub Copilot；该公司在 4 月份报告称，该工具的用户已达 1500 万。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;微软还报告称，GitHub Copilot 是目前最受欢迎的 AI 编码工具之一，被 90% 的《财富》100 强企业所使用。据该公司称，该产品在企业客户中的增长也比上一季度增长了约 75%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="313" src="https://oscimg.oschina.net/oscnet/up-a9c4f03844fb818759eb957360032e04e77.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;AI 编程工具越来越受欢迎，它们似乎是少数几个能带来可观收入的 AI 产品之一。纳德拉在 2024 年表示，GitHub Copilot 的业务规模将超过微软 2018 年收购 GitHub 时的整体规模。自那以后的一年里，GitHub Copilot 的增长率似乎一直保持着积极的方向。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;与 ChatGPT 和 Gemini 等每月吸引数亿用户的 AI 聊天机器人相比，全球最受欢迎的 AI 编程工具的用户群仍然很小。当然，软件工程比 AI 聊天机器人提供的一般信息查询更为小众。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;话虽如此，软件工程师及其雇主似乎愿意为 AI 编码工具支付溢价。凭借微软众多的企业客户和 GitHub 的开发者生态系统，GitHub Copilot 完全有能力在企业 AI 编码工具市场占据主导地位。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;另一款热门的 AI 编程工具 Cursor 也希望在企业领域挑战 GitHub Copilot，并一直在从新兴的 AI 初创公司挖角人才。据彭博社报道，今年 3 月，Cursor 的日均使用人数超过 100 万。当时，该公司的年化经常性收入约为 2 亿美元。如今，Cursor 的年平均经常性收入 (ARR) 已超过 5 亿美元，这意味着现在每天使用其产品的人数正在大幅增加。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363469</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363469</guid>
      <pubDate>Wed, 16 Jul 2025 10:28:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌发布地理空间 AI 模型 Google Earth AI</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌正式发布了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fai%2Fgoogle-earth-ai%2F"&gt;Google Earth AI，&lt;/a&gt;这是一个集成了先进地理空间 AI 模型和数据集的平台，旨在帮助应对全球性的关键挑战。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0731/181003_MK8N_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，Google Earth AI 涵盖多个领域的模型，包括用于详细天气预测、洪水预报和野火探测的模型，这些模型已经为 Google 搜索和 Google 地图中的洪水与野火警报等功能提供了支持。此外，还有用于改善城市规划和公共衞生的模型，通过对图像、人口动态和城市交通的深入理解，为 Google Earth、Google Maps Platform 和 Google Cloud 提供可操作的洞察。&lt;/p&gt; 
&lt;p&gt;目前，Google Earth AI 在洪水预测方面已覆盖 100 多个国家，能提前 7 天为 7 亿人提供河流洪水预警；在野火追踪方面，已在 27 国上线野火边界监测服务。&lt;/p&gt; 
&lt;p&gt;与 Google Earth AI 一同亮相的还有其核心引擎之一：由 Google DeepMind 团队研发的 AlphaEarth Foundations。该 AI 模型被誉为 「虚拟衞星」，正以前所未有的方式重塑全球遥感认知与地图制作能力。&lt;/p&gt; 
&lt;p&gt;作为 Google Earth AI 的技术核心，AlphaEarth Foundations 是一个多模态 AI 模型，它能够将 PB 级遥感数据（包括光学影像、雷达、激光点云、气候模拟等）统一转化为 64 维的嵌入表达（embedding），每个 10 米 ×10 米的地表单元被压缩为高度浓缩的数据指纹。&lt;/p&gt; 
&lt;p&gt;谷歌正计划将 AlphaEarth 的时间序列能力与 LLMs（如 Gemini）相结合，构建具备理解 - 推理 - 决策能力的地理智能平台，为全球科研、城市规划与生态治理赋能。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363466/google-earth-ai</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363466/google-earth-ai</guid>
      <pubDate>Wed, 16 Jul 2025 10:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>企查查开源弹窗组件库 QuickDialog</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;企查查近日将其自研的鸿蒙弹窗组件库「QuickDialog」开源，并上线至 OpenHarmony 三方库中心仓。这是鸿蒙生态首个支持「弹窗堆栈暂存能力」的非侵入式弹窗解决方案，凭借其灵活、高效、可复用的设计理念，有望成为鸿蒙应用开发中管理复杂弹窗场景的最佳实践方案之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="276" src="https://oscimg.oschina.net/oscnet/up-e69e0e19205b74db65552cdc2eb0f2d990b.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据介绍，QuickDialog 以「可维护、可拓展」为设计理念，围绕复杂弹窗场景中的共性痛点，提供以下核心技术能力：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;弹窗堆栈暂存能力：&lt;/strong&gt;支持多个弹窗的层级管理与状态保持，用户可任意中断或恢复某一弹窗流转，大幅提升弹窗交互的灵活性；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;无侵入式控件创建机制：&lt;/strong&gt;采用 Node 方式动态生成弹窗内容，无需修改业务页面结构，减少耦合，便于维护；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;Overlay 接管生命周期：&lt;/strong&gt;通过将弹窗依附于自定义页面，自主接管生命周期管理，支持弹窗与页面双向通信；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;装饰器与弹窗内容解耦，支持复用：&lt;/strong&gt;支持将同一弹窗内容搭配多种装饰器结构，灵活适配不同交互场景，提升开发效率；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;页面绑定式弹窗层级自由管理：&lt;/strong&gt;每个弹窗基于页面结构进行绑定控制，实现清晰的显示/隐藏管理与模态规则控制。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;在企查查鸿蒙 App 的开发实践中，QuickDialog 已全面替代传统弹窗方案，实现了弹窗体系的统一重构。在复杂用户操作流程中，用户可在不同页面中保留弹窗堆栈状态，实现从多任务中返回继续处理，大幅改善使用体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;对于开发者而言，QuickDialog 的接入完全基于组件调用与绑定机制，无需改动现有页面结构或状态流，大大降低弹窗系统的开发与维护成本，开发效率显著提升。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363464</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363464</guid>
      <pubDate>Wed, 16 Jul 2025 10:07:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenPipe 发布开源框架 AutoRL，用于简化模型 RL 训练</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenPipe&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fmattshumer_%2Fstatus%2F1950572449025650733" target="_blank"&gt;发布&lt;/a&gt;了开源框架 AutoRL，旨在简化使用强化学习（RL）为任何特定任务专门化训练开源模型（如 Qwen）的过程。&lt;/p&gt; 
&lt;p&gt;AutoRL 的训练流程是，用户首先用一句话定义任务，随后 AutoRL 会自动生成 30 个示例场景。Agent 使用 GRPO 算法在 25 个训练样本上进行训练，最后在剩余的 5 个测试样本上与 SOTA 模型（如 Sonnet 4）进行性能对比测试。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0731/175842_QhNH_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该框架构建于 OpenPipe 的 ART（Agentic Reasoning &amp;amp; Tool-use）之上，并使用 RULER 作为其奖励函数。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenPipe%2FART%2Ftree%2Fauto-rl%3Ftab%3Dreadme-ov-file%23-autorl-train-models-for-any-task" target="_blank"&gt;点此查看更多介绍&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363461</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363461</guid>
      <pubDate>Wed, 16 Jul 2025 10:01:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Charm 发布面向终端的开源 AI 编程工具 Crush</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Charm 开源了一款名为&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcharmbracelet%2Fcrush" target="_blank"&gt;Crush&lt;/a&gt;的全新 AI 编码工具，定位为「终端中的编码伙伴」。它支持多模型、会话管理，并利用 LSP 提供更精准的编码辅助。&lt;/p&gt; 
&lt;p&gt;Crush 是一个高性能的 agentic 编码工具，基于 Charm 库构建，可在用户偏好的任何终端模拟器中使用。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0731/174323_NDya_2720166.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;主要功能&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多模型支持：支持多种 LLM，并允许用户通过与 OpenAI 或 Anthropic 兼容的 API 添加自定义模型&lt;/li&gt; 
 &lt;li&gt;灵活切换：可在会话中途切换 LLM，同时保留上下文&lt;/li&gt; 
 &lt;li&gt;会话管理：支持为每个项目维护多个工作会话和上下文&lt;/li&gt; 
 &lt;li&gt;LSP 增强：利用语言服务器协议（LSP）获取额外上下文，以提供更精准的辅助&lt;/li&gt; 
 &lt;li&gt;可扩展性：通过 MCP（Model Context Protocol）服务器添加新功能&lt;/li&gt; 
 &lt;li&gt;跨平台：在 macOS, Linux, Windows (PowerShell, WSL) 和 FreeBSD 等所有主流终端上提供一流支持。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;用户可以通过 Homebrew、NPM、AUR 等包管理器安装，或直接下载二进制文件。&lt;/p&gt; 
&lt;p&gt;Crush 支持通过环境变量配置 Anthropic、OpenAI、Google Gemini、Groq、AWS Bedrock 和 Azure OpenAI 等多种模型的 API 密钥。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363456</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363456</guid>
      <pubDate>Wed, 16 Jul 2025 09:44:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>小智 - 基于 MCP 的聊天机器人</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;小智&amp;nbsp;AI 聊天机器人，旨在&lt;span style="background-color:#ffffff; color:#1f2328"&gt;帮助更多人入门 AI 硬件开发，了解如何将当下飞速发展的大语言模型应用到实际的硬件设备中。无论你是对 AI 感兴趣的学生，还是想要探索新技术的开发者，都可以通过这个项目获得宝贵的学习经验。&lt;/span&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;已实现功能&lt;/h2&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Wi-Fi / ML307 Cat.1 4G&lt;/li&gt;
&lt;li&gt;BOOT 键唤醒和打断，支持点击和长按两种触发方式&lt;/li&gt;
&lt;li&gt;离线语音唤醒&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://github.com/espressif/esp-sr"&gt;ESP-SR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;流式语音对话（WebSocket 或 UDP 协议）&lt;/li&gt;
&lt;li&gt;支持国语、粤语、英语、日语、韩语 5 种语言识别&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://github.com/FunAudioLLM/SenseVoice"&gt;SenseVoice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;声纹识别，识别是谁在喊 AI 的名字&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://github.com/modelscope/3D-Speaker"&gt;3D Speaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;大模型 TTS（火山引擎，或 CosyVoice）&lt;/li&gt;
&lt;li&gt;大模型 LLM（Qwen, DeepSeek, Doubao）&lt;/li&gt;
&lt;li&gt;可配置的提示词和音色（自定义角色）&lt;/li&gt;
&lt;li&gt;短期记忆，每轮对话后自我总结&lt;/li&gt;
&lt;li&gt;OLED / LCD 显示屏，显示信号强弱或对话内容&lt;/li&gt;
&lt;li&gt;支持 LCD 显示图片表情&lt;/li&gt;
&lt;li&gt;支持多语言（中文、英文）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;面包板效果图如下：&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height="375" src="https://static.oschina.net/uploads/space/2025/0303/162020_yOnr_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;已支持的开源硬件&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://oshwhub.com/li-chuang-kai-fa-ban/li-chuang-shi-zhan-pai-esp32-s3-kai-fa-ban"&gt;立创·实战派 ESP32-S3 开发板&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/espressif/esp-box"&gt;乐鑫 ESP32-S3-BOX3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.m5stack.com/zh_CN/core/CoreS3"&gt;M5Stack CoreS3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.m5stack.com/en/atom/Atomic%20Echo%20Base"&gt;AtomS3R + Echo Base&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.m5stack.com/en/core/ATOM%20Matrix"&gt;AtomMatrix + Echo Base&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gf.bilibili.com/item/detail/1108782064"&gt;神奇按钮 2.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.waveshare.net/shop/ESP32-S3-Touch-AMOLED-1.8.htm"&gt;微雪电子 ESP32-S3-Touch-AMOLED-1.8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Xinyuan-LilyGO/T-Circle-S3"&gt;LILYGO T-Circle-S3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://oshwhub.com/tenclass01/xmini_c3"&gt;虾哥 Mini C3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://oshwhub.com/movecall/moji-xiaozhi-ai-derivative-editi"&gt;Moji 小智 AI 衍生版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WMnologo/xingzhi-ai"&gt;无名科技 Nologo-星智-1.54TFT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WMnologo/xingzhi-ai"&gt;无名科技 Nologo-星智-0.96TFT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/xiaozhi-esp32</link>
      <guid isPermaLink="false">https://www.oschina.net/p/xiaozhi-esp32</guid>
      <pubDate>Wed, 16 Jul 2025 09:35:00 GMT</pubDate>
    </item>
    <item>
      <title>字节跳动：在职员工工龄的中位数是 2.9 年</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;字节跳动于今日上午举办了新一期的 All Hands 全员会。公司 CEO 梁汝波、抖音总裁韩尚佑、Seed 模型应用负责人朱文佳以及来自绩效与激励、管理研究院等部门的负责人与全体员工交流。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在全员会上，字节跳动也首次回应了社交媒体上关于「字节平均在职时间 7 个月」的说法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;据字节给出的数据显示，字节在职员工司龄中，中位数 2.9 年，平均数 3.0 年；离职司龄中位数 2.5 年，平均 2.6 年。同时，这也是字节头条成立 13 年来，首次在内部披露这一数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="398" src="https://oscimg.oschina.net/oscnet/up-e419b1144a8a16d65894ae84d2f72c6bc80.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此外，会议还重点介绍了关于绩效调整的相关情况。针对之前内部通知的绩效调整，字节跳动方面解释绩效调整是为了弱化内卷，并表示其实 M 和 M+的区分度不高。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;过往激励中 M+及 E 以上约为 45%-50% 左右，部门之间存在一定差异，M 代表的是符合预期，M-不意味淘汰，两次 M-也不意味着要淘汰。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363451</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363451</guid>
      <pubDate>Wed, 16 Jul 2025 09:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>布局个人 AI 市场，AMD 考虑向 PC 用户推出独立 NPU 方案</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AMD 客户端 CPU 业务负责人 Rahul Tikoo 向&lt;span style="background-color:#ffffff; color:#333333"&gt;外媒 CRN 透露&lt;/span&gt;，他们正在与客户洽谈一款专用的加速芯片的使用范例和潜在市场，这芯片不是 GPU，而是 NPU。&lt;/p&gt; 
&lt;p&gt;实际上联想、戴尔和惠普等 OEM 厂商也正在开始探索独立的 NPU 核其他类似的加速芯片，作为 PC 中 AI 工作负载 GPU 的代替品，戴尔上个月就公布了新款 Dell Pro Max Plus 电脑中搭载了 Qualcomm AI 100 推理卡，它本质上就是个独立的 NPU。&lt;/p&gt; 
&lt;p&gt;&lt;img height="285" src="https://oscimg.oschina.net/oscnet/up-ac65c94140ddcb5fa8af3f02b8ad7d3697b.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;AMD 通过收购 Xilinx 获得了 AI 加速技术，并把它作为 NPU 整合到了锐龙移动处理器上，既然如此也能把 NPU 做成独立的加速卡，实际上独立 NPU 并不是什么新鲜事物，Intel 在酷睿 Ultra 100 系列处理器发布之前就有独立的 Movidius 视觉处理单元，它就是 Intel NPU 的前身，微软的 2023 款 Surface Laptop 就有搭载它。&lt;/p&gt; 
&lt;p&gt;AMD 目前最强的 NPU 搭载在锐龙 AI 300 系列处理器上的 XDNA 2，可以提供 50TOPS 的算力，如果独立 NPU 扩展卡上堆叠两个这样的 NPU 算力就能到 100 TOPS，当然了独立 NPU 解决方案必须比 GPU 消耗更少的能源，这样才有意义。&lt;/p&gt; 
&lt;p&gt;至于 AMD 何时推出这样的产品，Rahul Tikoo 表示他不能谈论未来的线路图，目前该项目还处于保密协议中，他说到：「但如果你看看我们的技术和解决方案的广度，不难想象我们很快就能实现这一目标」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363430</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363430</guid>
      <pubDate>Wed, 16 Jul 2025 08:57:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>RWKV 社区七月动态：RWKV7-G0 7.2B 模型发布，8 篇高质量论文</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;欢迎大家收看《RWKV 社区最新动态》，本期内容收录了 RWKV 社区 2025 年 7 月的最新动态。&lt;/p&gt; 
&lt;p&gt;只需 3 分钟，快速了解 RWKV 社区 7 月都有哪些新鲜事！&lt;/p&gt; 
&lt;h2&gt;7 月动态省流版（TL;DR）&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;RWKV 模型新闻动态&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;RWKV7-G0 7.2B 发布，这可能是迄今为止人类训练过的最强纯 RNN 语言模型&lt;/li&gt; 
   &lt;li&gt;RWKV7-G1a 0.1B 发布，增强数据后有明显提升&lt;/li&gt; 
   &lt;li&gt;RWKV7a-G1b 0.1B 正在训练，加入了 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYl79XfbMCO6ecAdKGzboRg" target="_blank"&gt;DeepEmbed 技术&lt;/a&gt;，总参数 0.9B&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RWKV 学术研究动态&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;新论文：AuroraLong: Bringing RNNs Back to Efficient Open-Ended Video Understanding（基于 RWKV 的视频理解，已入选 &lt;strong&gt;ICCV 2025&lt;/strong&gt;）&lt;/li&gt; 
   &lt;li&gt;新论文：An Efficient Image Fusion Network Exploiting Unifying Language and Mask Guidance（基于 RWKV 的图像融合，已入选 &lt;strong&gt;IEEE TPAMI&lt;/strong&gt;）&lt;/li&gt; 
   &lt;li&gt;新论文：U-RWKV: Lightweight medical image segmentation with direction-adaptive RWKV（基于 RWKV 的医学图像分割，已入选 &lt;strong&gt;MICCAI 2025&lt;/strong&gt;）&lt;/li&gt; 
   &lt;li&gt;新论文：DEVR: Train an Efﬁcient Vision-RWKV Model with Improved Knowledge Distillation（基于 RWKV 的高效视觉模型，已入选 ICIC 2025）&lt;/li&gt; 
   &lt;li&gt;新论文：EvRWKV: A RWKV Framework for Effective Event-guided Low-Light Image Enhancement（基于 RWKV 低光增强）&lt;/li&gt; 
   &lt;li&gt;新论文：Scaling Context Requires Rethinking Attention（基于 RWKV 的架构优化方案）&lt;/li&gt; 
   &lt;li&gt;新论文：DRWKV: Focusing on Object Edges for Low-Light Image Enhancement（基于 RWKV 的低光图像增强）&lt;/li&gt; 
   &lt;li&gt;新论文：LowKeyEMG: Electromyographic typing with a reduced keyset（基于 RWKV 的辅助人机交互系统）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RWKV 社区项目动态&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Mini-RWKV-V7(基于 RWKV-V7 的一个 34M 参数的语言模型)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;RWKV 社区市场活动&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_CWdzniuhb4otg_rK-1QQw" target="_blank"&gt;RWKV 团队亮相 WAIC 2025&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;移远通信宣布与 RWKV 建立全面合作关系&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;RWKV 模型新闻动态&lt;/h2&gt; 
&lt;h3&gt;RWKV7-G0 7.2B 发布&lt;/h3&gt; 
&lt;p&gt;2025 年 7 月 22 日， RWKV7-G0 7.2B 推理模型（Reasoning Model）正式开源发布，它很可能是迄今为止人类训练过的最强纯 RNN 语言模型，可以解决不少数学题。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="eval" src="https://oscimg.oschina.net/oscnet/up-2eb5e5d4557666f81434c5d8d3efc687ff3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;详细报道&lt;/strong&gt; ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FKZQ4l2yjf80auPFDOxWX3g" target="_blank"&gt;RWKV7-G0 7.2B 发布，最强纯 RNN 推理模型&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;RWKV7-G1a 0.1B 发布&lt;/h3&gt; 
&lt;p&gt;2025 年 7 月 28 日，RWKV7-G1a 0.1B 推理模型（Reasoning Model）正式开源发布，相对 RWKV-G1 0.1B 增加了 1T token 的优质训练数据，各项指标有明显提升。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="eval-G1a" src="https://oscimg.oschina.net/oscnet/up-96b523aac01fa6ba805523603656374305e.png" referrerpolicy="no-referrer"&gt; &lt;img alt="UncheatableEval-G1a" src="https://oscimg.oschina.net/oscnet/up-655f7213f8b912ae77d2f70eb48f75fe95a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;RWKV7a-G1b 0.1B 正在训练&lt;/h3&gt; 
&lt;p&gt;我们正在训练加入 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FYl79XfbMCO6ecAdKGzboRg" target="_blank"&gt;DeepEmbed 技术&lt;/a&gt; 的 RWKV7a-G1b 0.1B（总参数 0.9B）。目前它相对于 RWKV7 的 loss 正在稳定下降。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Loss-G1b" src="https://oscimg.oschina.net/oscnet/up-01a1951dcd5f170b51d4584011b87465b24.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;RWKV 学术研究动态&lt;/h2&gt; 
&lt;p&gt;RWKV 学术研究包括&lt;strong&gt;基于 RWKV 架构的新论文&lt;/strong&gt; 或 &lt;strong&gt;RWKV 社区参加的学术研究&lt;/strong&gt;。&lt;/p&gt; 
&lt;h3&gt;AURORA LONG&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：AuroraLong: Bringing RNNs Back to Efficient Open-Ended Video Understanding&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.02591" target="_blank"&gt;https://arxiv.org/abs/2507.02591&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-03&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出了 AURORA LONG，通过将 MLLMs 中的 LLM 组件替换为 RWKV 模型，以恒定大小的隐藏状态处理任意长度的输入序列。研究结合视觉令牌合并，通过按大小升序重新排列视觉令牌，显著提高了处理效率。AURORA LONG 在多个视频基准测试中表现出与基于 Transformer 的模型相当的性能，同时降低了算力消耗。&lt;/p&gt; 
&lt;p&gt;该论文的模型十分精妙，已入选 ICCV 2025。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250703-Bringing RNNs Back to Efficient Open-Ended Video Understanding" src="https://oscimg.oschina.net/oscnet/up-8a081ee56a443d1cfdb279d1d55c1de171b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;RWKVFusion&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：An Efficient Image Fusion Network Exploiting Unifying Language and Mask Guidance&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fieeexplore.ieee.org%2Fabstract%2Fdocument%2F11091495" target="_blank"&gt;https://ieeexplore.ieee.org/abstract/document/11091495&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-23&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出 RWKVFusion 框架，利用语言描述和语义掩码指导图像融合过程。该方法通过高效扫描策略将 RWKV 适配为双向版本，并引入多模态融合模块促进信息交换，构建轻量级网络以降低计算成本。在可见红外、多曝光等图像融合任务中实现了最先进的性能。&lt;/p&gt; 
&lt;p&gt;该论文的框架十分有效，已入选 IEEE TPAMI。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250723-An Efficient Image Fusion" src="https://oscimg.oschina.net/oscnet/up-b10e20cb05e611b9485b0f560587e835185.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;U-RWKV&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：U-RWKV: Lightweight medical image segmentation with direction-adaptive RWKV&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.11415" target="_blank"&gt;https://arxiv.org/abs/2507.11415&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-15&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出 U-RWKV 框架，用于轻量级医学图像分割。该框架引入方向自适应 RWKV 模块 (DARM) 和阶段自适应挤压-激励模块 (SASE)，高效建模长距离依赖并减少方向偏差，在资源受限环境中实现高性能分割。实验验证了其优越的计算效率和分割精度。&lt;/p&gt; 
&lt;p&gt;论文在医学分割上有出色的表现，已入选 MICCAI 2025。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250715-U-RWKV" src="https://oscimg.oschina.net/oscnet/up-ec564af85a1f94391bbc006e9059d8306b6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;DEVR&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：DEVR: Train an Efﬁcient Vision-RWKV Model with Improved Knowledge Distillation&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.springer.com%2Fchapter%2F10.1007%2F978-981-96-9794-6_29" target="_blank"&gt;https://link.springer.com/chapter/10.1007/978-981-96-9794-6_29&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-15&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出了一种高效的视觉模型 DEVR，通过改进知识蒸馏方法。重新设计了 RWKV 块以增强通道特征和空间信息捕获，并引入结合对比学习和蒸馏的损失函数，分阶段对齐特征空间。实验表明，DEVR 在图像分类、检测和分割任务中优于现有模型，计算成本更低、速度更快。&lt;/p&gt; 
&lt;p&gt;论文在图像领域有优秀的表现，已被 ICIC 2025 收录。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250715-DEVR" src="https://oscimg.oschina.net/oscnet/up-d038ab1410b6f6476af09040b05af59557f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;EvRWKV&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：EvRWKV: A RWKV Framework for Effective Event-guided Low-Light Image Enhancement&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.03184" target="_blank"&gt;https://arxiv.org/abs/2507.03184&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-01&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出 EvRWKV 框架，通过双域处理实现事件与图像的连续跨模态交互。该框架采用 Cross-RWKV 模块进行细粒度时空融合，结合 EISFE 模块实现自适应频域噪声抑制与空域形变卷积对齐。在真实低光数据集上的实验表明，该方法能有效抑制噪声、恢复结构细节并提升视觉清晰度，达到 SOTA 性能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250701-EvRWKV" src="https://oscimg.oschina.net/oscnet/up-c60b61f949dd8bd507a66fe9fa019b3f401.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;Scaling Context Requires Rethinking Attention&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：Scaling Context Requires Rethinking Attention&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.04239" target="_blank"&gt;https://arxiv.org/abs/2507.04239&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-06&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出了 power attention 优化方案，一种线性成本的序列建模层，通过独立调整状态大小解决长上下文训练问题。实验显示其在上下文学习中优于指数和线性注意力，并开发高效 GPU 内核实现速度提升。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250706-Scaling Context Requires Rethinking Attention" src="https://oscimg.oschina.net/oscnet/up-804f46c91066cfea9311f06cfe64db15c2f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;DRWKV&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：DRWKV: Focusing on Object Edges for Low-Light Image Enhancement&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.18594" target="_blank"&gt;https://arxiv.org/abs/2507.18594&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-24&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型提出了 DRWKV 模型，整合全局边缘 Retinex (GER) 理论以解耦光照与边缘结构，引入演化 WKV 注意力机制增强空间连续性。实验表明，该模型在多个低光增强基准测试中取得领先的 PSNR、SSIM 和 NIQE 分数，同时保持低计算复杂度。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250724-DRWKV" src="https://oscimg.oschina.net/oscnet/up-5024f1ba7584699c39bf9cc5c688cdac83d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;LowKeyEMG&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;论文名称：LowKeyEMG: Electromyographic typing with a reduced keyset&lt;/li&gt; 
 &lt;li&gt;论文链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2507.19736" target="_blank"&gt;https://arxiv.org/abs/2507.19736&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;发布日期：2025-07-26&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;本文基于 RWKV 模型开发了 LowKeyEMG 系统，用于通过表面肌电信号实现高效文本输入。该系统仅使用 7 个手势键，结合语言模型优化文本重建，在实时实验中达到平均 23.3 词/分钟的输入速度，手势效率提升 17%，top-3 单词准确率达 99.2%。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="20250726-LowKeyEMG" src="https://oscimg.oschina.net/oscnet/up-a53de3263efa378926e0ce713830f0ecfa4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;社区项目动态&lt;/h2&gt; 
&lt;h3&gt;Mini-RWKV-V7&lt;/h3&gt; 
&lt;p&gt;项目基于 RWKV-V7 架构训练了一个 34M 参数量的语言模型 &lt;code&gt;Mini-RWKV-V7-LM-34M&lt;/code&gt; 。它在保持轻量的同时，具备良好的语言理解和生成能力，非常适合资源极其有限的设备部署和快速迭代开发，并且同时支持预训练和有监督微调。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="Mini-RWKV-V7" src="https://oscimg.oschina.net/oscnet/up-c6da2bc4e0d67120c5f6c14da1d2e64292d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;项目链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAlic-Li%2FMini_RWKV_7" target="_blank"&gt;https://github.com/Alic-Li/Mini_RWKV_7&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;社区市场活动&lt;/h2&gt; 
&lt;h3&gt;RWKV 团队亮相 2025 世界人工智能大会&lt;/h3&gt; 
&lt;p&gt;7 月 26 日，RWKV 携全球领先的大模型架构 RWKV-7 亮相 2025 世界人工智能大会暨人工智能全球治理高级别会议（以下简称 " WAIC 2025"），并首次公开了 RWKV-7s 架构。元始智能作为企业代表向国务院总理李强、上海市委书记陈吉宁介绍 RWKV 架构、生态和产业化近况。 &lt;img alt="WAIC" src="https://oscimg.oschina.net/oscnet/up-8f5c8db4e87a3294e45d0159eccd1f7cefa.png" referrerpolicy="no-referrer"&gt; &lt;strong&gt;详细报道&lt;/strong&gt; ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_CWdzniuhb4otg_rK-1QQw" target="_blank"&gt;WAIC 首日 | RWKV-7s 新型高效大模型架构正式亮相&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;同日，承接 RWKV-7 优势的 RWKV-7s 新型高效大模型架构凭借其原创的 DeepEmbed 和 DeepEmbedAttention 技术，成为现场焦点并荣获 &lt;strong&gt;WAIC"镇馆之宝-未来之星"称号&lt;/strong&gt; 。 &lt;img alt="2025-07-29-img-2-Award" src="https://oscimg.oschina.net/oscnet/up-234c71f0dd692a06e8c35377c602e0c92ec.jpg" referrerpolicy="no-referrer"&gt; &lt;strong&gt;详细报道&lt;/strong&gt; ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FcAujzUFlCTjBOHiLfMuPtw" target="_blank"&gt;全新高效模型架构！RWKV-7s 闪耀 WAIC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;移远通信宣布与 RWKV 建立全面合作关系&lt;/h3&gt; 
&lt;p&gt;7 月 26 日，&lt;strong&gt;移远通信宣布与 RWKV 建立全面合作关系&lt;/strong&gt; ，双方将依托移远的算力平台，优化并支持 RWKV 最新模型架构，共同推动大模型在端侧设备的低资源占用部署。 &lt;img alt="yiyuan" src="https://oscimg.oschina.net/oscnet/up-bef4708292a754b78dd17727ccb20773290.png" referrerpolicy="no-referrer"&gt; &lt;strong&gt;详细报道&lt;/strong&gt; ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FUk6xlo-MQ09vS9JFwf35NA" target="_blank"&gt;端侧大模型迎来"轻"革命！移远通信 × RWKV 打造"轻量 AI 大脑"&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;加入 RWKV 社区&lt;/h2&gt; 
&lt;p&gt;欢迎大家加入 RWKV 社区，可以从 RWKV 中文官网了解 RWKV 模型，也可以加入 RWKV 论坛、QQ 频道和 QQ 群聊，一起探讨 RWKV 模型。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📖 RWKV 中文文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rwkv.cn" target="_blank"&gt;https://www.rwkv.cn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 RWKV 论坛：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.rwkv.cn%2F" target="_blank"&gt;https://community.rwkv.cn/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐧 QQ 频道：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpd.qq.com%2Fs%2F9n21eravc" target="_blank"&gt;https://pd.qq.com/s/9n21eravc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📺 BiliBili 视频教程：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F3546689096910933" target="_blank"&gt;https://space.bilibili.com/3546689096910933&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363429</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363429</guid>
      <pubDate>Wed, 16 Jul 2025 08:55:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Eigent 正式开源：首个桌面多智能体协作系统</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;CAMEL-AI 团队&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8AVx8hWltAeOBh1iSwo4IA" target="_blank"&gt;宣布&lt;/a&gt;推出全球首个桌面端多智能体 Workforce 平台 (Multi-agent Workforce)：Eigent。&lt;/p&gt; 
&lt;p&gt;Eigent 被描述为首个桌面上的多智能体工作团队，它由一组 AI agents 组成，能够并行协作以完成复杂任务。该系统定位为用户的长期工作伙伴，提供完全可定制的 workers 和 MCPs。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Eigent 基于开源项目 CAMEL 与 OWL 构建。它不仅是单一的 AI 工具，更像是你专属的 AI 打工团队，一站式搞定复杂流程。&lt;/p&gt; 
 &lt;p&gt;&lt;img height="720" src="https://static.oschina.net/uploads/space/2025/0731/162932_BPEH_2720166.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;官网链接：https://www.eigent.ai&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;功能特性&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;基于 Electron 的跨 OS 桌面端应用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;内置终端、代码生成、Web 浏览器&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;可接入 Google Workspace、Slack、Notion、X、Reddit、Telegram、Discord 等现代软件服务&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持自定义专业 Worker：合规、医药、法律、投研等场景一网打尽&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;所有数据可本地化处理，保障隐私安全（如财务信息、健康记录、创作内容）&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;人类在环（Human in the Loop）在关键决策节点引入人为控制，确保结果准确、可靠且符合要求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0731/163431_tZBE_2720166.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Eigent 目前已推出适用于 MacOS 和 Windows 的公开测试版，开源地址：https://github.com/eigent-ai/eigent。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363426</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363426</guid>
      <pubDate>Wed, 16 Jul 2025 08:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>数据实时迁移同步工具 CloudCanal v4.9.0.0 发布，支持 GaussDB</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;CloudCanal&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;免费社区版&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;是&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;ClouGence&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;公司推出的一款&lt;strong&gt;全自研&lt;/strong&gt;、&lt;strong&gt;可视化&lt;/strong&gt;、&lt;strong&gt;自动化&lt;/strong&gt;数据迁移同步工具，具备&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;结构迁移&lt;/strong&gt;、&lt;strong&gt;数据迁移&lt;/strong&gt;、&lt;strong&gt;数据同步&lt;/strong&gt;、&lt;strong&gt;数据校验&lt;/strong&gt;、&lt;strong&gt;数据订正&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;等功能，支持&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;30+ 款&lt;/strong&gt;流行关系型数据库、实时数仓、消息中间件、缓存数据库和搜索引擎之间数据互通，其中包含国产数据库&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;OceanBase&lt;/strong&gt;、&lt;strong&gt;PolarDB&lt;/strong&gt;、&lt;strong&gt;TiDB&lt;/strong&gt;、&lt;strong&gt;StarRocks&lt;/strong&gt;、&lt;strong&gt;Doris&lt;/strong&gt;、&lt;strong&gt;RocketMQ&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;结合开源项目&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/clougence/cloudcanal-data-process"&gt;CloudCanalProcess&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，可方便实现如下功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;wide-table&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 打宽表数据处理插件，主要包括事实表和单维表组合处理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-transform&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 数据通用转换插件，比如做操作变幻、额外加字段、清洗回填数据&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-gather&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 数据汇聚插件，将分库分表、垂直拆分、异地数据进行实时汇聚&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-compare&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 数据对比插件，根据源端数据变化进行业务对账&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;business-alert&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 业务告警插件，根据数据变化趋势做出相应告警&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;CloudCanal&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;产品功能对标阿里云 DTS、亚马逊 DMS、StreamSets、AirByte，助力开发、DBA 或运维同学快速构建在线数据应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1582" src="https://oscimg.oschina.net/oscnet/up-4787b0331b802b4e95ed1ccd108c23cea9c.png" width="1850" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;Release-Note&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;亮点&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;新增 AWS DynamoDB、AWS ElastiCache (Valkey/Redis)、GaussDB 源端数据源&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;新链路&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放 AWS ElastiCache (Valkey/Redis) -&amp;gt; AWS ElastiCache (Valkey/Redis) / Redis 全量迁移、增量同步、数据校验、数据订正&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放 Redis -&amp;gt; AWS ElastiCache (Valkey/Redis) 全量迁移、增量同步、数据校验、数据订正&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放 AWS DynamoDB -&amp;gt; MySQL / StarRocks 全量迁移、增量同步、数据校验、数据订正&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放 MySQL -&amp;gt; AWS DynamoDB 结构迁移、全量迁移、增量同步、数据校验、数据订正&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放，华为 GaussDB -&amp;gt; MySQL / Oracle / Doris / SelectDB 结构迁移、全量迁移、增量同步、数据校验、数据订正、DDL 同步（加列、减列、modify、rename、truncate）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放，华为 GaussDB -&amp;gt; ClickHouse 结构迁移、全量迁移、增量同步、数据校验、DDL 同步（加列、减列、modify、rename、truncate）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放 ClickHouse -&amp;gt; StarRocks / Doris / SelectDB 结构迁移、全量迁移、数据校验、数据订正&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开放 Yuque 文档 -&amp;gt; PostgreSQL (向量) 结构迁移、全量迁移&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Redis 到 Redis 非幂等命令（如：incr/decr）因任务重启重复执行（新增参数：enableWriteDeReplay），实现 exactly once 语义&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Apache Paimon HDFS 存储方式，当前支持 S3、HDFS、本地文件三种方式&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 StarRocks 部分列更新（参数：partialUpdateEnabled，partialUpdateMode）, 让增量同步链路更省带宽&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Doris / StarRocks 目标端控制校验方式，根据主键的分布特性优化查询性能（新增参数：checkFetchStrategy，checkRangeThreshold）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 MySQL / PostgreSQL 获取当前最新文件位点&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 PostgreSQL / RDS for PostgreSQL 使用 SSL 证书认证&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 SQL Server 源端联合主键数据校验&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 ClickHouse 支持 25.4.x/25.5.x/25.6.x&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 StarRocks 3.4.x 版本 TABLE_TYPE 为 TABLE 的表（适配其新版本元数据变化）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Dameng 源端增量同步单位点任务消费&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Redis 使用 TLS 连接，并允许使用自签 CA 证书连接&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 MySQL / RDS for MySQL SSL 证书认证&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Elasticsearch 对端 DATE 类型内置格式&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Oracle 源端设置事务超时后自动提交的时间（参数：autoCommitTxTimeoutSec）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，创建任务时设置 Kafka 对端副本数&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，数据清洗，源端字符串转时间（castToDateTimeWithFormat(@params['dt'],'yyyy-MM-dd HH🇲🇲ss')、castToDateWithFormat(@params['d'],'yyyy-MM-dd')、castToTimeWithFormat(@params['t'],'HH🇲🇲ss')）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，私有部署开启 MFA 验证，增强账号安全&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，创建任务设置默认集群（新增用户偏好参数：defaultClusterName），以免用户创建任务忘记指定特定集群导致创建失败&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;优化&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 Redis 全量拆分 Key 前生成 del command，解决任务重启后对端重复写入的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MySQL 获取 SECURITY_TYPE 为 DEFINER 的视图时根据权限信息检索&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MySQL 源端按白名单处理 Create DDL 刷新 MetaHistory 逻辑，MetaHistory 只保存任务相关表的 DDL 信息&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 SQL Server 元数据获取逻辑，支持获取自定义类型字段&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，创建任务第一步做限制，目标端 DB2 不显示待创建库&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 PostgreSQL 源端添加多 DB 增量任务预检&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化 MariaDB 源端表级别 ACTION 添加 CREATE/ALTER/RENAME/TRUNCATE/DROP&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，获取 AK/SK、重置 AK/SK 以及第三方配置的排布，目前移动到，配置 &amp;gt; 个人资料 &amp;gt; 安全，中&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，子账号管理页面国际化问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;优化，创建任务按钮布局，下一步按钮位置固定&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;问题修复&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 PostgreSQL 修改订阅的子任务合并后 publication slot 没有删除的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 Kafka -&amp;gt; MySQL / Iceberg 修改订阅没有把主任务的目标主键带上的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 Kafka -&amp;gt; MySQL / Iceberg 创建相似任务没有带上目标主键的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 Kafka -&amp;gt; MySQL / Iceberg 修改订阅不增减表只修改目标主键报未进行修改的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，创建相似任务，修改源端数据源类型，控制枱和接口报错的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，创建任务和创建相似任务，选完库映射再切换数据源类型控制枱报错的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 AuroraMySQL 源端全库同步抛 src table detail is empty 异常&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 TiDB -&amp;gt; TiDB 结构迁移中复合索引项重复出现导致异常报错的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，使用相同文件名的私钥/证书认证文件修改数据源认证配置不生效问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，使用 TLS/Kerberos 认证的 Kafka 数据源测试连接显示证书文件不存在问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，源端有 Schema 的链路使用默认目标主键时，修改订阅没有展示该目标主键的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，任务列表、数据源管理列表、集群列表、状态机列表、环境列表、角色列表、子账号列表查询时页数没有重置的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 OpenGauss 创建任务时未显示 autoInitReplication 配置的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 Dameng 源端解析 SQL 字段包含 TimeStamp 关键字解析失败的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，修改订阅不新增表时修改数据清洗条件不生效的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，修改订阅减少表时出现 NPE 的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 Oracle 源端元数据快照不刷新的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 Oracle 源端 COL x 解析错位的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复，修改子账号名字报错的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修复 MariaDB 全量条件下推弹窗展示不正确导致过滤条件失效的问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免费下载和使用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;快速上手：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2Fquick%2Fquick_start" target="_blank"&gt;https://www.clougence.com/cc-doc/quick/quick_star&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363422/cloudcanal-4-9-0-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363422/cloudcanal-4-9-0-0</guid>
      <pubDate>Wed, 16 Jul 2025 08:28:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>预计全球机器人市场规模 2029 年超 4000 亿美元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;IDC 预测，到 2029 年全球机器人市场规模将超过 4,000 亿美元。其中，中国市场占据近半份额，并以近 15% 的复合增长率位居全球前列，成为推动全球机器人产业增长的核心引擎。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="285" src="https://oscimg.oschina.net/oscnet/up-59a80a836caee85eb090be2a1a385aa583e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年，全球商用服务机器人出货量突破 10 万台，配送机器人和清洁机器人占据市场主导地位。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;中国厂商以 84.7% 的出货份额引领全球，头部企业持续推动产品智能化和多场景落地，市场规模快速扩张。擎朗智能、普渡机器人、高仙机器人、云迹科技等企业已在全球范围内形成显著领先优势，出货量位居世界前列。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;同时，中国厂商在具身智能、系统集成等核心技术领域持续突破，结合丰富的多场景应用经验，推动商用服务机器人实现快速智能化升级。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年，全球四足机器人市场规模超过 1.8 亿美元，出货量约 2 万台，应用需求在电力、石油、公共安全等领域持续扩展。产品涵盖消费级和商用级四足机器人，市场出货量稳步增长。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;当前，人形机器人正处于技术快速创新阶段，市场整体保持强劲增长，IDC 预测 2025 年中国人形机器人商用销售出货量预计约 5 千台，2030 年将增至近 6 万台，年复合增长率超 95%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年，中国工业机器人厂商海外收入总计超过 20 亿美元，其中协作机器人出口收入达到约 7410 万美元，同比增长 34.7%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;IDC 同时指出，具身智能机器人是机器人智能化发展的重要方向，其实现依赖多项关键技术的融合与复杂系统的集成，以满足多样化、复杂化的应用场景需求。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363421</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363421</guid>
      <pubDate>Wed, 16 Jul 2025 08:24:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>1Panel 开源面板 v2.0.5 版本发布，支持 MySQL、PostgreSQL 和 Redis 集群部署</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style="color:#000000; text-align:start"&gt;2025 年 7 月 24 日，现代化、开源的 Linux 服务器运维管理面板 1Panel 正式发布 v2.0.5 版本。在这一版本中，1Panel 新增数据库集群部署、邮件告警和主从节点灵活切换三项功能，聚焦为企业级运维场景提供更优使用体验。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1Panel v2.0.5 版本是 1Panel 开源面板项目在交付企业级集群化和高可用能力方面迈出的关键一步，也是对社区用户长期支持与反馈的回应。从单机到多节点，从单实例数据库到数据库集群，从单一告警到邮件短信双通道，1Panel 正在努力成为「可用、好用、值得信赖」的下一代 Linux 服务器运维面板。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;感谢广大社区用户的反馈和支持，1Panel 期待与您携手创造更加美好的未来。&lt;/strong&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;亮点更新&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#005eeb"&gt;新增 MySQL、PostgreSQL 和 Redis 集群部署功能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;数据库是数字化业务的核心。针对用户的集群化部署需求，1Panel v2.0.5 版本在原有的数据库一键部署的基础之上，新增了 MySQL、PostgreSQL 和 Redis 的集群部署功能。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;MySQL、PostgreSQL 和 Redis 集群部署的功能优势主要体现在以下三方面：&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1. 一键部署 MySQL 主从集群，轻松实现读写分离；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;2. 快速搭建 PostgreSQL 集群，支持事务一致性；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;3. 使用 Redis Cluster，满足高并发和大数据量缓存场景需要。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;更加重要的是，无需借助繁琐的命令行，用户仍然可以通过可视化的「傻瓜式」操作来进行 MySQL、PostgreSQL 和 Redis 的集群安装部署，从而大幅降低搭建高可用数据库集群的技术门槛。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1135" src="https://oscimg.oschina.net/oscnet/up-16ef61b9273d384378f43b756b77ccdfc27.png" width="1973" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 1 1Panel 的 MySQL 主从复制集群界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#005eeb"&gt;新增邮件告警，关键事件不错过&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;在系统运行中，可靠的告警机制对及时发现系统风险尤为关键。1Panel v2.0.5 版本在原有短信告警的基础上，新增了邮件告警功能。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;现在，1Panel 能够同时通过邮件和短信双通道，将告警信息第一时间推送给系统运维人员。相比单一通道，双通道告警能够覆盖更多场景，保障告警信息触达用户的即时性，为用户构建更为完善的监控闭环。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-22a348e39682f4288e5b2a0b89e457a546f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 2 1Panel 邮件告警界面&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#005eeb"&gt;支持主从节点灵活切换&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;在分布式和多节点管理场景下，如何在主节点发生故障时快速切换节点，保障业务的正常可用，一直是高可用系统运维的核心。本次更新后，1Panel 正式支持主从节点切换模式。运维人员可以根据需要，将某个从节点升级为主节点，或将主节点降级为从节点重新加入集群。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;主从节点切换为用户带来的价值包括：&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1. 紧急情况下从节点可以快速接管，保证业务持续可用；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;2. 主从节点切换操作简单快捷，有效降低系统维护成本；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;3. 角色信息清晰，管理流程更加可控。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-92743b301e721984922feb02a20aabb87b2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 3 在 1Panel 中进行主节点备份&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="617" src="https://oscimg.oschina.net/oscnet/up-04d80e70a97dbf692378689d4e60170d0f3.png" width="779" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲图 4 执行主从节点切换命令&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;功能优化&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;应用商店：安装应用时支持使用已存在的远程数据库；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;网站：移除 HTTPS 配置页面 HSTS 的必填标识；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;网站：优化部分负载均衡配置页面的提示信息；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;运行环境：进入运行环境页面时新增 Docker 未安装提醒；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;运行环境：进入运行环境终端支持指定用户；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;运行环境：支持快速安装 Sodium 扩展；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;容器：构建容器镜像改为异步执行；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;容器：创建容器后支持选择继续编辑或者返回容器列表；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;容器：创建容器改为异步执行；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;计划任务：计划任务中容器选项新增容器状态显示；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点管理：新增「已删除」节点状态；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点管理：优化节点同步状态的显示样式；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点管理：增加节点「启动中」状态；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;面板设置：同步快照时备份账号选项新增类型显示；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;面板设置：支持自定义快照超时时间；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统：优化备份临时文件目录；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统：编辑 Compose 等右侧抽屉页面时禁止点击空白处关闭；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统：优化节点切换的过渡动画效果。&lt;/p&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;Bug 修复&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;概览：修复了概览页内存使用详情未包含共享内存的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;应用商店：修复了应用日志页面标题显示异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;应用商店：修复了部分应用脚本执行失败的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;应用商店：修复了本地应用未设置端口时错误显示跳转按钮的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;应用商店：修复了 MailServer 安装失败问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;应用商店：修复了应用备份设置密码后在其他服务器恢复会失败的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;网站：修复了部分负载均衡配置页面显示异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;网站：修复了删除 HTTPS 类型镜像仓库重启 Docker 异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;证书：修复了编辑 IPv6 自签证书时保存失败的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;容器：修复了容器日志下载后文件中颜色显示异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;容器：修复了连续开启容器日志跟踪开关导致系统日志异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;容器：修复了部分场景下容器日志下载失败的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;容器：修复了关闭日志追踪后容器日志筛选未生效的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;容器：修复了编辑容器时无法配置 DNS 的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;容器：修复了编辑容器任务日志时原容器名称获取失败的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件：修复了打开部分 UTF-8 编码文件时乱码的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件：修复了文件列表排序后文件大小计算错误的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;防火墙：修复了部分场景下防火墙端口转发功能异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;节点管理：修复了节点因目录不存在而导致添加失败的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;网站监控：修复了部分场景下切换到网站监控趋势统计时统计数据异常的问题；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系统：修复了演示模式下可以进入文件终端的问题。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4736111/blog/18685998</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/18685998</guid>
      <pubDate>Wed, 16 Jul 2025 08:20:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Android Studio 中的 Gemini 全面支持 Dart 和 Flutter 开发</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid-developers.googleblog.com%2F2025%2F04%2Fgemini-in-android-studio-for-business.html" target="_blank"&gt;宣布&lt;/a&gt;，Android Studio 中集成的 Gemini 现已全面支持 Dart 语言和 Flutter 框架的开发。此次更新旨在为使用 Android Studio 进行 Flutter 应用开发的开发者提供更强大的 AI 辅助功能，提升开发效率。&lt;/p&gt; 
&lt;p&gt;&lt;img height="554" src="https://static.oschina.net/uploads/space/2025/0731/160248_xbKB_2720166.png" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;主要功能&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UI 代码生成：通过简单的自然语言提示生成 Flutter 界面代码&lt;/li&gt; 
 &lt;li&gt;布局错误修复：分析布局代码，识别并提供针对像素溢出等问题的修复建议&lt;/li&gt; 
 &lt;li&gt;代码解释与重构：解释复杂的 widget 功能，并帮助开发者优化和现代化 Dart 代码库&lt;/li&gt; 
 &lt;li&gt;测试生成：自动生成单元测试和 widget 测试&lt;/li&gt; 
 &lt;li&gt;上下文感知聊天：根据当前打开的文件，为开发者提供量身定制的答案&lt;/li&gt; 
 &lt;li&gt;智能代码补全：为 Dart 代码、Flutterwidget 和 pubspec.yaml 依赖项提供智能建议。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;开发者可以在最新版的 Android Studio 中启用 Gemini。对于企业用户，可以购买 Gemini Code Assist 许可证以获得企业级的隐私和安全支持。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/363413</link>
      <guid isPermaLink="false">https://www.oschina.net/news/363413</guid>
      <pubDate>Wed, 16 Jul 2025 08:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
