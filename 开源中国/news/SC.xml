<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 26 Jun 2025 12:47:11 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>Gartner：超 40% 的 AI 智能体项目活不过两年</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;研究咨询公司 Gartner 最新发布的一份报告&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2025-06-25-gartner-predicts-over-40-percent-of-agentic-ai-projects-will-be-canceled-by-end-of-2027" target="_blank"&gt;指出&lt;/a&gt;，预计到 2027 年底，超过 40% 的 AI 智能体项目将被取消，原因是成本不断上升和商业价值不明确。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Gartner 高级总监分析师 Anushree Verma 表示：「目前大多数 AI 智能体项目都处于早期实验或概念验证阶段，这些项目大多受到炒作的驱动，并且经常被误用。这可能会让企业忽视大规模部署 AI 智能体的实际成本和复杂性，从而阻碍项目投入生产。他们需要拨开炒作的迷雾，谨慎地制定战略决策，确定在何处以及如何应用这项新兴技术。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="281" src="https://oscimg.oschina.net/oscnet/up-4f7c22926062ebd6122d8165e030afd0db5.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Gartner 基于 3412 名受访者的调查结果显示，19% 的人表示其组织已对 AI 智能体项进行了大量投资，42% 的人进行了保守投资，8% 的人没有投资，其余 31% 的人采取观望态度或不确定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;许多供应商通过「洗牌」来炒作，即对现有产品（例如 AI 助手、机器人流程自动化 (RPA) 和聊天机器人）进行品牌重塑，而这些产品本身并不具备实质性的智能体功能。Gartner 估计，在数千家 AI 智能体供应商中，只有大约 130 家是有真材实料的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「大多数 AI 智能体方案缺乏显著的价值或投资回报率 (ROI)，因为目前的模型还不够成熟，无法自主实现复杂的业务目标或持续遵循细微的指令。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Gartner 预测，到 2028 年，至少 15% 的日常工作决策将通过 AI 智能体自主做出，而 2024 年这一比例为 0%。此外，到 2028 年，33% 的企业软件应用程序将包含 AI 智能体，而 2024 年这一比例还不到 1%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在早期阶段，Gartner 建议仅在能够带来明确价值或投资回报率 (ROI) 的情况下才应采用 AI 智能体。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「为了从 AI 智能体中获得真正的价值，组织必须专注于企业生产力，而不仅仅是增强单个任务。他们可以先在需要决策时使用 AI 智能体，在日常工作流程中实现自动化，并在简单检索时使用助手。这关乎通过成本、质量、速度和规模来推动业务价值。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357455/gartner-over-40-percent-agentic-ai-projects-cancel-2027</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357455/gartner-over-40-percent-agentic-ai-projects-cancel-2027</guid>
      <pubDate>Sun, 11 May 2025 10:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>LowCodeEngine —— 企业级低代码技术体系</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;一套面向扩展设计的企业级低代码技术体系。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;&lt;img alt="" height="276" src="https://static.oschina.net/uploads/space/2025/0619/160054_sOPF_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;特性&lt;/h2&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;提炼自企业级低代码平台的面向扩展设计的内核引擎，奉行最小内核，最强生态的设计理念&lt;/li&gt;
&lt;li&gt;开箱即用的高质量生态元素，包括，物料体系、设置器、插件，等&lt;/li&gt;
&lt;li&gt;完善的工具链，支持，物料体系、设置器、插件，等生态元素的全链路研发周期&lt;/li&gt;
&lt;li&gt;强大的扩展能力，已支撑 100+ 个各种类型低代码平台&lt;/li&gt;
&lt;li&gt;使用 TypeScript 开发，提供完整的类型定义文件&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;兼容环境&lt;/h2&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;现代浏览器（Chrome &amp;gt;= 80, Edge &amp;gt;= 80, last 2 safari versions, last 2 firefox versions）&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;引擎协议&lt;/h2&gt;
&lt;/div&gt;

&lt;p style="color:#1f2328; text-align:start"&gt;引擎完整实现了《低代码引擎搭建协议规范》和《低代码引擎物料协议规范》，协议栈是低代码领域的物料能否流通的关键部分。&lt;/p&gt;

&lt;p&gt;&lt;img height="277" src="https://static.oschina.net/uploads/space/2025/0619/160028_gMUx_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/lowcode-engine</link>
      <guid isPermaLink="false">https://www.oschina.net/p/lowcode-engine</guid>
      <pubDate>Sun, 11 May 2025 09:49:00 GMT</pubDate>
    </item>
    <item>
      <title>Mozilla 终止维护开源语音转文本引擎项目「DeepSpeech」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;DeepSpeech 是 Mozilla 开发的一款开源语音转文本引擎，基于百度 2014 年发表的研究论文《Deep Speech: Scaling up end-to-end speech recognition》所提出的端到端语音识别方法开发。&lt;/p&gt; 
&lt;p&gt;从&amp;nbsp;DeepSpeech 的仓库动态来看，Mozilla 已于上周将项目仓库归档，并表示停止维护。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/155240_73ji_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;作为一款端到端自动语音识别（ASR）引擎，DeepSpeech 即使在 Raspberry Pi SBC 和其他低功耗系统上运行时，也能提供出色的实时通信性能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-762647632f4a326522c5f510328561b4af1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;遗憾的是，&lt;span&gt;近年来 DeepSpeech 项目的活跃度持续降低，其&lt;/span&gt;最后一个标记版本是 2020 年 12 月发布的 0.9.3。&lt;/p&gt; 
&lt;p&gt;DeepSpeech&lt;span&gt;&amp;nbsp;GitHub 仓库已经有近 4 年没有任何 commit，社区贡献和更新频率都不尽如人意，这使得项目的进一步发展受到限制，因此 Mozilla 选择终止该项目。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357400/mozilla-deepspeech-discontinued</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357400/mozilla-deepspeech-discontinued</guid>
      <pubDate>Sun, 11 May 2025 08:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Cursor 如何保障「代码索引」的安全、高效</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;编者按：&lt;/strong&gt; AI 编程工具如何迅速检索海量代码库，并精准定位到最相关的代码片段？这个看似不可能完成的任务，却是决定现代 AI 编程工具用户体验的关键技术挑战。&lt;/p&gt; 
 &lt;p&gt;我们今天为大家带来的这篇文章，作者的观点是：Cursor 通过巧妙运用默克尔树数据结构，实现了对大型代码库的快速索引和高效增量更新，这正是其能够提供精准 AI 辅助编程服务的技术基础。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;作者 | Engineer's Codex&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;编译 | 岳扬&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Cursor ------ 这家最近宣布斩获 3 亿美元年营收的热门 AI 开发工具 ------ 正是利用默克尔树（Merkle trees）实现对代码的快速索引。本篇文章将为你详细介绍其运作原理。&lt;/p&gt; 
&lt;p&gt;在深入了解 Cursor 的具体实现方法之前，我们先来了解一下默克尔树的基本概念。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;01 默克尔树的简单解释&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;默克尔树（Merkle tree）是一种树状数据结构，其每个"叶"节点都标注了对应数据块的加密哈希值，而每个非叶节点则存储其子节点哈希值组合后的新哈希值。这种层级结构通过比较哈希值，能有效地侦测任何层级的数据变动。&lt;/p&gt; 
&lt;p&gt;通俗理解，它就像是数据的指纹系统：&lt;/p&gt; 
&lt;p&gt;1）每份数据（例如文件）都拥有自己独一无二的指纹（哈希值）&lt;/p&gt; 
&lt;p&gt;2）成对的指纹被组合在一起，生成一个新的指纹&lt;/p&gt; 
&lt;p&gt;3）此过程层层递进，直至形成唯一的主指纹（根哈希）&lt;/p&gt; 
&lt;p&gt;根哈希（root hash）概括了所有底层数据块的指纹信息，相当于对整个数据集做了一次加密公证。只要根哈希不变，就能证明原始数据分毫未改。此机制的精妙之处在于：&lt;strong&gt;任何一个数据块发生变化，都将牵一发而动全身 ------ 改变其上所有层级的指纹，最终彻底改变根哈希值。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-54b3916d0a8c97b04ff5e18eb75930572e1.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;02 Cursor 如何利用默克尔树实现代码库索引功能&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;默克尔树 (Merkle trees) 是 Cursor 代码库索引功能的核心组件。根据 Cursor 创始人发布的帖子[1]和 Cursor 的安全文档[2]，其工作流程如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-434fca0d5d62079cc39b5f46a8de5f6cdc9.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;2.1 步骤 1：代码分块与预处理&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Cursor 首先在本地对代码库文件进行分块处理，将代码分割成具有语义含义的片段。此步骤是后续操作的必要前提。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;2.2 步骤 2：默克尔树的构建与同步&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;启用代码库索引功能后，Cursor 会扫描编辑器当前打开的文件夹，并为所有有效文件计算哈希值组成的默克尔树。随后，该默克尔树会与 Cursor 的服务器同步，其安全文档[2]详细描述了此过程。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;2.3 步骤 3：生成嵌入向量&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;将代码分块并发送至 Cursor 服务器后，将使用 OpenAI 的嵌入 API 或自研的嵌入模型（我未能验证 Cursor 具体采用的是哪种方法）生成嵌入向量 (embeddings)。这些向量表征能够捕捉代码片段的语义信息。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;2.4 步骤 4：存储与索引&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;生成的嵌入向量，连同起始/结束行号及文件路径等元数据，会被存储在一个远程向量数据库（Turbopuffer）中。为兼顾路径筛选功能与隐私保护，Cursor 会为每个向量附加经过混淆处理的相对文件路径。Cursor 创始人曾明确表示[1]："我们的数据库中不会存储任何代码。请求处理完毕立即销毁存储的代码数据。"&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;2.5 步骤 5：基于默克尔树的定期更新&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;每隔 10 分钟，Cursor 就会检测哈希值的变化情况，利用默克尔树精准定位哪些文件发生了变动。如 Cursor 的安全文档[2]所述，只需上传所定位到的发生变动的文件，从而大幅降低带宽消耗。&lt;strong&gt;默克尔树结构的最大价值正体现于此 ------ 它能实现高效的增量更新。&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;03 代码分块策略&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;代码库索引的有效性很大程度上取决于代码的分块方式。尽管我先前的说明未深入探讨代码分块方法，但这篇关于构建类 Cursor 代码库功能的博客[3]揭示了一些技术细节：&lt;/p&gt; 
&lt;p&gt;简单的分块方式（按字符/按单词/按行）往往会遗漏语义边界 ------ 导致嵌入向量质量下降。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;尽管可根据固定的 token 数分割代码，但这种方式可能导致函数或类等代码块被强制截断。&lt;/li&gt; 
 &lt;li&gt;更有效的方案是使用能够理解代码结构的智能分割器，例如递归文本分割器（recursive text splitters），它使用高级分隔符（如类定义和函数声明）在恰当的语义边界处进行精准切分。&lt;/li&gt; 
 &lt;li&gt;一个更优雅的解决方案是根据代码的抽象语法树（AST）结构来分割代码。通过深度优先遍历 AST，将代码分割成符合 token 数量限制的子树结构。为避免产生过多的碎片化分块，系统会在满足 token 限制的前提下，将同级语法节点合并为更大的代码块。此类 AST 解析工作可借助 tree-sitter[4] 等工具实现，其支持绝大多数主流编程语言。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;04 嵌入向量在推理阶段的应用&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;在了解 Cursor 如何创建和存储代码嵌入向量后，一个自然而然的问题就出现了：这些嵌入向量在生成之后究竟是如何使用的？&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;4.1 语义搜索（Semantic Search）与上下文检索（Context Retrieval）&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;当你使用 Cursor 的 AI 功能（例如通过 &lt;a href="https://my.oschina.net/u/135318"&gt;@Codebase&lt;/a&gt; 或 ⌘ Enter 询问代码库相关问题时），将触发以下流程：&lt;/p&gt; 
&lt;p&gt;1）将查询转换为向量：Cursor 会为您的提问或当前代码上下文生成对应的嵌入向量。&lt;/p&gt; 
&lt;p&gt;2）向量相似性搜索：该查询向量被发送至 Turbopuffer（Cursor 的向量数据库），通过最近邻搜索找出与查询语义相似的代码块。&lt;/p&gt; 
&lt;p&gt;3）访问本地文件：Cursor 客户端接收到的检索结果包含经过混淆处理的文件路径和最相关代码块的行号范围。实际代码内容始终保留在用户本地设备，仅在需要时从本地读取。&lt;/p&gt; 
&lt;p&gt;4）上下文整合：客户端从用户本地文件读取这些相关代码块，并将其作为上下文与您的问题一并发送至服务器供大语言模型处理。&lt;/p&gt; 
&lt;p&gt;5）生成响应：此时大语言模型已获取代码库中的相关上下文，可据此提供精准回答或生成符合场景的代码补全。&lt;/p&gt; 
&lt;p&gt;这种由嵌入向量驱动的检索机制支持以下功能：&lt;/p&gt; 
&lt;p&gt;1）根据上下文生成代码：在编写新代码时，Cursor 可参考现有代码库中的相似实现，保持代码模式与代码风格的一致性。&lt;/p&gt; 
&lt;p&gt;2）代码库智能问答：可以获取基于代码库中实际代码的精准解答，而非通用回复。&lt;/p&gt; 
&lt;p&gt;3）智能代码补全：代码补全建议会融合项目的特定约定与特定模式。&lt;/p&gt; 
&lt;p&gt;4）智能重构辅助：重构代码时，系统可自动识别代码库中所有需要同步修改的关联代码段。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;05 Cursor 为何选择默克尔树&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;这些设计细节多与安全有关，具体可参阅 Cursor 的安全文档[2]。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;5.1 高效的增量更新&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;默克尔树使 Cursor 能精准定位自上次同步后变更的文件。因此，无需重新上传整个代码库，仅需上传修改过的特定文件。对于大型代码库来说这一点非常重要 ------ 重新索引所有文件会消耗过多的带宽和处理时间。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;5.2 数据完整性验证&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;默克尔树结构让 Cursor 能高效验证所索引的文件与服务器上存储的文件是否一致。分层的哈希结构可轻松检测传输过程中的数据异常或数据损坏。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;5.3 缓存优化&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Cursor 将嵌入向量（embeddings）存储在以代码块（chunk）哈希值为索引的缓存中，使得重复索引相同代码库时速度大幅提升。这对多人协作开发同一代码库的团队尤为有利。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;5.4 隐私保护型索引&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;为保护文件路径中的敏感信息，Cursor 采用路径混淆技术：通过用 "/" 和 "." 为分隔符切割路径，并用存储在客户端的密钥加密每一段。虽然这样做会暴露部分目录结构，但能隐藏绝大多数敏感细节。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;5.5 集成 Git 版本历史&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在 Git 仓库中启用代码库索引时，Cursor 还会索引 Git 的版本历史记录。它会存储 commit 的 SHA 值、父提交信息（parent information）及混淆后的文件名。为实现同 Git 仓库且同团队用户间的数据结构共享，用于混淆文件名的秘钥来自最近 commit 内容的哈希值。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;06 嵌入模型的选择与技术考量&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;嵌入模型的选择直接影响代码搜索与理解的质量。&lt;/strong&gt; 部分系统采用开源模型（如 all-MiniLM-L6-v2[5]），而 Cursor 可能使用 OpenAI 的嵌入模型或针对代码场景进行优化的定制模型。对于专用的代码嵌入模型，微软的 unixcoder-base[6] 或 Voyage AI 的 voyage-code-2[7] 等模型对代码的语义理解效果显著。&lt;/p&gt; 
&lt;p&gt;由于嵌入模型存在 token 容量限制，使得该技术的实现难度大幅增加。以 OpenAI 的 text-embedding-3-small[8] 为例，其 token 上限为 8192。有效的分块策略能在保留语义的前提下不超出该限制。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;07 握手同步流程&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;Cursor 默克尔树实现的核心在于同步时的握手机制。根据应用日志显示：在初始化代码库索引时，Cursor 会创建一个"merkle client"并与服务器进行"初始化握手流程"（详见 GitHub Issue #2209[9] 与 Issue #981[10]），该握手流程涉及向服务器发送本地计算的默克尔树的根哈希值。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;握手流程使服务器能精准判定需同步的代码范围。&lt;/strong&gt; 如握手日志所示（参照 GitHub Issue #2209[11]），Cursor 会计算代码库的初始哈希值，并将其发送至服务器进行验证。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;08 技术实现挑战&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;虽然默克尔树方案有许多优势，但其实现过程仍存在一些技术难点。&lt;/strong&gt; Cursor 的索引服务常因瞬时流量过载，导致大量请求失败。如安全文档所述[2]，用户可能观察到向 repo42.cursor.sh 发送的网络流量比预期要高 ------ 这正是由于文件需多次重传才能被完全索引。&lt;/p&gt; 
&lt;p&gt;另一项挑战与嵌入向量的安全性有关。学术研究表明，特定条件下存在逆向解析嵌入向量的可能性。虽然当前的攻击手段通常需同时满足：1) 拥有嵌入模型的访问权限 2) 仅对短文本有效。但若攻击者获取 Cursor 向量数据库的访问权限，仍存在从存储的嵌入向量中提取代码库信息的风险。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本期互动内容 🍻&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;❓Cursor 通过路径混淆和本地哈希计算保护隐私，但同步时仍需上传部分数据。在团队协作场景下，你更倾向于完全本地化的方案，还是接受有限数据上传以换取更强的 AI 辅助？为什么？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;文中链接&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;[1]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.cursor.com%2Ft%2Fcodebase-indexing%2F36" target="_blank"&gt;https://forum.cursor.com/t/codebase-indexing/36&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[2]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2Fen%2Fsecurity" target="_blank"&gt;https://www.cursor.com/en/security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[3]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.lancedb.com%2Frag-codebase-1%2F" target="_blank"&gt;https://blog.lancedb.com/rag-codebase-1/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[4]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftree-sitter.github.io%2Ftree-sitter%2F" target="_blank"&gt;https://tree-sitter.github.io/tree-sitter/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[5]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fsentence-transformers%2Fall-MiniLM-L6-v2" target="_blank"&gt;https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[6]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fmicrosoft%2Funixcoder-base" target="_blank"&gt;https://huggingface.co/microsoft/unixcoder-base&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[7]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.voyageai.com%2Fembeddings%2Fmodels%2F" target="_blank"&gt;https://docs.voyageai.com/embeddings/models/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[8]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplatform.openai.com%2Fdocs%2Fguides%2Fembeddings" target="_blank"&gt;https://platform.openai.com/docs/guides/embeddings&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[9]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgetcursor%2Fcursor%2Fissues%2F2209" target="_blank"&gt;https://github.com/getcursor/cursor/issues/2209&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[10]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgetcursor%2Fcursor%2Fissues%2F981" target="_blank"&gt;https://github.com/getcursor/cursor/issues/981&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[11]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgetcursor%2Fcursor%2Fissues%2F2209" target="_blank"&gt;https://github.com/getcursor/cursor/issues/2209&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本文经原作者授权，由 Baihai IDP 编译。如需转载译文，请联系获取授权。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fread.engineerscodex.com%2Fp%2Fhow-cursor-indexes-codebases-fast" target="_blank"&gt;https://read.engineerscodex.com/p/how-cursor-indexes-codebases-fast&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/IDP/blog/18638294</link>
      <guid isPermaLink="false">https://my.oschina.net/IDP/blog/18638294</guid>
      <pubDate>Sun, 11 May 2025 08:01:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>龙芯发布新一代处理器，进军服务器和 AI 处理器市场​​​​​​​</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;「龙芯中科」在今天举办的 2025 龙芯产品发布暨用户大会上发布了基于国产自主指令集龙架构（LoongArchTM）研发的服务器处理器龙芯 3C6000 系列芯片、工控领域及移动终端处理器龙芯 2K3000/3B6000M 芯片，以及相关整机和解决方案。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/153553_ZF0H_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，3C6000 系列服务器 CPU 采用自主指令系统龙架构，于 2024 年上半年流片成功。3C6000 单硅片 16 核 32 线程，可通过自研的龙链接口通过多硅片封装形成 32 核 64 线程的 3C6000/D（又称 3D6000）及 60/64 核 120/128 线程的 3C6000/Q（又称 3E6000）。&lt;/p&gt; 
&lt;p&gt;根据中国电子技术标准化研究院赛西实验室测试报告，单路 3C6000/S 服务器在 2.2GHz 运行 SPEC CPU 2017 单核单线程定/浮点分值为 5.56/6.93 分，多核定/浮点分值为 73.2/58.5 分；双路 3C6000/D 服务器在 2.1GHz 运行 SPEC CPU 2017 多核定/浮点分值为 284/261 分；双路 3C6000/Q 服务器在 2.1GHz 运行 SPEC CPU 2017 多核定/浮点分值为 450/283 分；四路 3C6000/D 服务器在 2.1GHz 运行 SPEC CPU 2017 多核定/浮点分值为 547/412 分。上述 3C6000/S、3C6000/D 实测单核/多核性能分别达到 Intel 公司 2021 年上市的 16 核至强 Silver 4314、32 核至强 Gold 6338 的水平，64 核 3C6000/Q 性能超过 40 核至强 Platinum 8380 的水平。&lt;/p&gt; 
&lt;p&gt;结合 Intel 公司第三代至强可扩展架构服务器芯片出货情况，3C6000 系列服务器 CPU 综合性能达到 2023 年市场主流产品水平。&lt;/p&gt; 
&lt;p&gt;2K3000/3B6000M 工控/终端 CPU 采用自主指令系统龙架构，面向工控和终端（笔记本、云终端等）应用，于 2024 年底流片成功。3B6000M 集成 8 个 LA364E 处理器核，主频 2.5GHz 时实测 SPEC CPU 2006 Base 单核定点分值达到 30 分；集成第二代自研 GPGPU 核心 LG200 和独立硬件编解码模块，4K 高清视频处理性能达到每秒 60 帧；集成安全处理器提供可信支持和密码服务，包括 SM2/3/4 硬件算法模块以及可供软件编程使用的可重构密码模块。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1800" src="https://static.oschina.net/uploads/space/2025/0626/153709_EMEW_2720166.png" width="2486" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;来源：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FU1_yQYdi-47nhn5ojBvSEA" target="_blank"&gt;https://mp.weixin.qq.com/s/U1_yQYdi-47nhn5ojBvSEA&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357386</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357386</guid>
      <pubDate>Sun, 11 May 2025 07:37:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>LM Studio 0.3.17 发布，新增 MCP 主机支持</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;LM Studio v0.3.17&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flmstudio.ai%2Fblog%2Flmstudio-v0.3.17" target="_blank"&gt;已发布&lt;/a&gt;&lt;/u&gt;，新版本引入了 Model Context Protocol (MCP) 主机支持，允许用户连接 MCP 服务器并与本地模型协同使用，同时强调了安全风险和工具调用确认机制。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ff9f8ff547dc70dcc08e650304920222373.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;LM Studio 支持本地和远程 MCP 服务器，用户可以通过编辑应用的 mcp.json 文件或通过新的「添加到 LM Studio」按钮添加 MCP。LM Studio 提醒用户，安装来自不受信任来源的 MCP 存在风险，因为某些 MCP 服务器可能运行任意代码、访问本地文件和使用网络连接。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-909832708bbeb89e7371519a489805a66b5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;当模型调用工具时，LM Studio 会显示确认对话框，允许用户在执行前审查和编辑工具调用参数。&lt;/p&gt; 
&lt;p&gt;开发者现在还可以为 LM Studio 中的 MCP 服务器创建一键安装按钮。此次更新还包括支持 11 种新语言（总计 33 种）、多项错误修复以及用户界面改进，如新增「Solarized Dark」主题。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357384</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357384</guid>
      <pubDate>Sun, 11 May 2025 07:14:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OceanBase 正式启用中文名：海扬数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;国产数据库 OceanBase 正式启用中文品牌名「海扬数据库」，品牌战略全面升级。&lt;/p&gt; 
&lt;p&gt;官方解释称：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「海」，既象征 OceanBase 对海量数据的承载能力，能够应对像支付宝每秒 42 万笔交易这样的高并发处理需求，体现其分布式架构在数据存储与处理上的强大优势，也象征着如海一样开源开放，以兼容幷蓄的姿态携手开发者、合作伙伴推动行业创新。&lt;/p&gt; 
 &lt;p&gt;「扬」，既寓意昂扬向上，象征 OceanBase 在技术海洋中不断突破边界，以根自研深耕行业，也寓意扬帆出海，不断走向全球化。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;OceanBase CEO 杨冰表示，中文名的推出，一方面代表着 OceanBase 深耕本土市场的决心，也是 OceanBase 继续引领世界舞台上分布式数据库技术创新和应用的宣言。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8c286d418602fc6ed5232b2c2249cf0d73c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;OceanBase 始创于 2010 年，是蚂蚁集团完全自主研发的国产数据库。2020 年 OceanBase 成立北京奥星贝斯科技有限公司并开始独立商业化运作。2021 年，OceanBase&amp;nbsp;&lt;a href="https://www.oschina.net/news/144034"&gt;正式开源&lt;/a&gt;(&lt;a href="https://gitee.com/oceanbase"&gt;https://gitee.com/oceanbase&lt;/a&gt;)，300 万行核心代码向社区开放。2024 年 3 月 19 日，蚂蚁集团宣布，旗下的蚂蚁国际、OceanBase 和蚂蚁数科已成立董事会，独立面向市场。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357376</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357376</guid>
      <pubDate>Sun, 11 May 2025 06:59:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>deepin 25 正式发布！万物向新，坚如磐石</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;p&gt;&lt;img height="383" src="https://oscimg.oschina.net/oscnet/up-2b978d9744246aedc27e66c24c7ed37d6de.jpg" width="900" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 历经 Preview、Alpha、Beta 三轮社区共创测试，deepin 25 于今日发布亮相！本次版本以
 &lt;span&gt;&amp;nbsp;&lt;/span&gt;
 &lt;strong&gt;「万物向新」&lt;/strong&gt;
 &lt;span&gt;&amp;nbsp;&lt;/span&gt;为核心，四大革新特性全面进化，1000+ 项优化修复落地，为广大开发者与用户朋友们带来更可靠、更流畅、更自由的开源操作系统体验。
&lt;/div&gt; 
&lt;div&gt; 
 &lt;h1&gt;&lt;strong&gt;DDE 桌面：界面"新"貌・丝滑过人&lt;/strong&gt;&lt;/h1&gt; 
&lt;/div&gt; 
&lt;div&gt;
 我们相信，每一次点击、每一次滑动，都应是享受。全新 DDE 桌面环境，从每一个像素开始，为您重塑感官与效率的边界。
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p style="text-align:center"&gt;&lt;img height="2250" src="https://oscimg.oschina.net/oscnet/up-26836d54c962cff64107821896ae1cf1282.jpg" width="4000" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    &lt;strong&gt;看得见的优雅，看不见的用心&lt;/strong&gt;：我们对桌面环境的众多组件进行了 QML 重构，这不仅带来了肉眼可见的流畅度提升，更实现了视觉语言的全面统一。从拟物化图标到温润如玉的平滑圆角设计，每一处细节都经过反复打磨，让系统界面更具呼吸感和温度。
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    &lt;strong&gt;告别繁琐，控制中心「颠覆式」进化&lt;/strong&gt;：控制中心引入了新的「侧边栏+内容区」分层结构，左侧导航一目了然，右侧设置直观便捷，您所需的一切都触手可及，高频操作从此告别层级跳转。
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    &lt;strong&gt;会「整理」的启动器与文件管理器&lt;/strong&gt;：为了让您更快地找到所需，启动器现已支持按应用名称首字母排序。文件管理器也迎来了搜索功能的重大升级，支持「即输即搜」和关键词高亮，让您在海量文件中精准定位。
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
    &lt;strong&gt;更自由的交互定义&lt;/strong&gt;：针对笔记本用户，我们新增了三指、四指触控板手势的自定义能力，分屏、切换窗口等操作皆可随心设定，让您的触控板真正成为效率神器。
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h1&gt;&lt;strong&gt;UOS AI：AI "新"声・问啥都行&lt;/strong&gt;&lt;/h1&gt; 
 &lt;div&gt;
  在 deepin 25 中，AI 不再是遥远的功能，而是融入系统的智能伙伴，时刻感知您的需求。
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style="text-align:center"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//7df4f785506cc9cba40c60520777084a.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;AI 随航，知识随行&lt;/strong&gt;：无论在任何界面阅读，只需轻划选中文字，AI 图标便会即时浮现。一键翻译、总结、解释，甚至支持离线使用，让知识获取再无障碍，让您的专注不被打断。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;动口不动手，系统听你说&lt;/strong&gt;：想调暗屏幕、或是快速创建会议日程？试试用自然语言对系统下达指令吧！无论是语音还是文字，系统都能心领神会，告别繁琐的菜单点击。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;双模引擎，安全与强大的平衡&lt;/strong&gt;：您可以选择接入 DeepSeek、百度千帆、讯飞星火等主流在线大模型，畅享云端算力；也可以在设置中安装并使用「统信有容大模型」，实现数据不出本地的离线运行，为您的隐私安全保驾护航。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;智能体商店，无限能力扩展&lt;/strong&gt;：通过 AI 助手新增的智能体商店入口，您可以下载不同领域的智能体，拓展 AI 的应用场景，让您的 AI 更具个性化。
    &lt;/div&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;h1&gt;&lt;strong&gt;磐石系统：权限"新"固・核心防护&lt;/strong&gt;&lt;/h1&gt; 
  &lt;div&gt;
   我们深刻理解系统稳定对于用户的意义。为此，deepin 25 重磅推出「磐石系统」，重新定义了 Linux 操作系统的稳定标杆。
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;img alt="" height="689" src="https://oscimg.oschina.net/oscnet//ece74b2f32e767d83b0c05a667132b03.png" width="1394" referrerpolicy="no-referrer"&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;只读防护，杜绝核心篡改&lt;/strong&gt;：系统通过将
     &lt;code&gt;/usr/bin&lt;/code&gt;等核心目录强制设置为只读挂载，从根本上拦截了用户误操作或恶意软件对系统核心的修改，确保系统长久稳定运行。对于需要深度定制的开发者，我们也提供了便捷的命令一键开/关防护。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;秒级快照，升级高枕无忧&lt;/strong&gt;：每一次系统更新前，系统都会自动创建备份快照。即便更新过程中发生意外，系统也能在重启后自动回滚至上一个正常状态，让您告别「升级变砖」的焦虑。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;无忧还原，公共设备「自净」引擎&lt;/strong&gt;：针对公用电脑、展厅设备等场景，「无忧还原」功能可实现重启后自动清空使用痕迹，同时支持白名单配置，兼顾安全与效率。
    &lt;/div&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;h1&gt;&lt;strong&gt;如意玲珑：兼容"新"篇・处处生根&lt;/strong&gt;&lt;/h1&gt; 
  &lt;div&gt;
   依赖冲突是 Linux 用户长久以来的痛点。现在，「如意玲珑」为您带来终极解决方案。
  &lt;/div&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;跨发行版兼容，一次封装处处运行&lt;/strong&gt;：玲珑通过沙箱化容器技术，将应用与依赖库彻底隔离。这意味着，一个玲珑包可以在 Debian、Ubuntu、Arch、Fedora、openEuler 等 7 大主流发行版上直接运行，开发者无需再为不同平台重复打包。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;多架构支持，生态版图持续扩张&lt;/strong&gt;：我们已实现对 AMD64、ARM64、LoongArch64 等主流 CPU 架构的全面支持。目前，玲珑生态已累计上架超过 5000 款软件，覆盖办公、开发、娱乐等多样化需求。
    &lt;/div&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;h1&gt;&lt;strong&gt;社区利器：为开发者与极客打造的自由天地&lt;/strong&gt;&lt;/h1&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;Distrobox 子系统&lt;/strong&gt;：现在，您可以在应用商店一键安装 Debian12、Ubuntu（20.04/24.04）、Arch、Fedora（41/42）等主流发行版的子系统镜像，自由搭建您所熟悉的开发与测试环境。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;Treeland 窗口合成器 (预览探索)&lt;/strong&gt;：我们自研的渲染引擎，带来了 40% 的动画流畅度提升，并支持多指触控板的跟手操作，交互如丝般顺滑。欢迎各位极客朋友切换体验，感受未来的桌面交互。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;跨端协同，打破设备边界&lt;/strong&gt;：除了 PC 间的键鼠、剪贴板共享，新版跨端协同实现了手机与 PC 的突破性双向操控。在电脑大屏上回复手机消息、操作手机应用，构建一体化的无缝工作流。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;主流架构支持：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;在 AMD64 稳定适配的基础上，新增 ARM 64 / LoongArch64 / RISC-V 架构支持，覆盖主流芯片平台；并已适配包括树莓派 4B+、瑞莎 Rock5B/5B+ 及 ROCK 5 ITX 主板等设备，拓展了在嵌入式及轻量级计算领域的应用。
    &lt;/div&gt; &lt;/li&gt; 
   &lt;li&gt; 
    &lt;div&gt;
     &lt;strong&gt;全球化落地&lt;/strong&gt;：安装器新增 17 种语言，系统级翻译共覆盖
     &lt;span&gt;&amp;nbsp;&lt;/span&gt;
     &lt;strong&gt;51 种语言&lt;/strong&gt;，应用商店支持区域化内容分发，为全球用户提供一致化的本地体验。
    &lt;/div&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;h2&gt;&lt;span style="color:#0052ff"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;坚持开放，持续共建&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;deepin 25 不仅是四大革新的舞台，更是全体社区成员开放共建的答卷。我们诚挚感谢每一位参与测试、提出建议的社区伙伴！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;秉承「开放、创新、共建」的社区理念，本次版本重点修复了多项高频问题（详见发行注记用户反馈问题优化与修复部分），涵盖系统稳定性（如更新后启动异常、关机缓慢）、安全性、桌面体验（任务栏、控制中心）等多个方面，让「坚如磐石」的承诺更加坚实可靠。您的每一次反馈，都在真切地塑造着 deepin 的未来！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="margin-left:0px; margin-right:0px; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;⬇️&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;立即下载，开启 deepin 25 之旅！&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li style="color: rgba(0, 0, 0, 0.9); margin-left: 0px; margin-right: 0px; text-align: justify;"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;下载地址&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdownload%2F" target="_blank"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#0052ff"&gt;https://www.deepin.org/zh/download/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li style="color: rgba(0, 0, 0, 0.9); margin-left: 0px; margin-right: 0px; text-align: justify;"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;完整发行注记&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-25-release" target="_blank"&gt;&lt;span&gt;&lt;span style="color:#0052ff"&gt;&lt;span&gt;https://www.deepin.org/zh/deepin-25-release&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357370/deepin-25-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357370/deepin-25-released</guid>
      <pubDate>Sun, 11 May 2025 06:43:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Meta 成功挖角三名 OpenAI 研究人员</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;《华尔街日报》报道称，在争夺顶尖人工智能人才的斗争中，Meta 刚刚取得了胜利，尽管竞争对手 Sam Altman 公开嘲笑马克·扎克伯格的奢侈招聘策略，但 Meta 仍然挖走了三名 OpenAI 研究人员。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Lucas Beyer、Alexander Kolesnikov 和 Xiaohua Zhai （OpenAI 苏黎世办事处的创始人）现已加入 Meta 的超级智能团队。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-0044b1bf5ef2f1f7a26cba89cd241222c75.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此前，OpenAI 首席执行官 Altman 在与其兄弟 Jack 一起的播客透露，扎克伯格一直在提供超过 1 亿美元的薪酬方案，以吸引 OpenAI 的顶尖人才。并表示，「我很高兴，至少到目前为止，我们最好的员工中还没有人决定接受他的（那些提议）。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《华尔街日报》随后报道称，扎克伯格一直在通过 WhatsApp 与数百名顶尖 AI 研究人员进行私人交流，通过他的「Recruiting Party」聊天室协调目标人才，然后在 Palo Alto 和 Lake Tahoe 的家中举办晚宴。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这一策略的成果好坏参半。扎克伯格最近斥资 140 亿美元，签下了 Scale AI 的首席执行官 Alexandr Wang，这位 28 岁的年轻人也因此成为科技界有史以来身价最高的人才之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers" target="_blank"&gt;Sam Altman：Meta 曾试图以 1 亿美元挖走 OpenAI 人才，但未能成功&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers</guid>
      <pubDate>Sun, 11 May 2025 06:28:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Vite v7.0 正式发布，超快的前端构建工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Vite v7.0 已正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvitejs%2Fvite%2Freleases%2Ftag%2Fv7.0.0" target="_blank"&gt;发布&lt;/a&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Vite（法语意为 "快速的"，发音&lt;code&gt;/vit/&lt;/code&gt;，发音同 "veet"）是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;一个开发服务器，它基于&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FGuide%2FModules"&gt;原生 ES 模块&lt;/a&gt;提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fguide%2Ffeatures.html"&gt;丰富的内建功能&lt;/a&gt;，如速度快到惊人的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fguide%2Ffeatures.html%23hot-module-replacement"&gt;模块热替换（HMR）&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;一套构建指令，它使用&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frollupjs.org%2F"&gt;Rollup&lt;/a&gt;&amp;nbsp;打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5e2ecda18c413c7f0cb508984defebdc3d5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;Node.js 支持&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fblog%2Fannouncing-vite7%23node-js-support" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Vite 现在要求使用 Node.js 20.19+ 或 22.12+。由于 Node.js 18 已于 2025 年 4 月底达到&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fendoflife.date%2Fnodejs" target="_blank"&gt;生命周期终点（EOL）&lt;/a&gt;，我们已不再支持该版本。&lt;/p&gt; 
&lt;p&gt;我们要求使用这些新的 Node.js 版本范围，以确保 Node.js 可以无需启用标志即可支持&lt;code&gt;require(esm)&lt;/code&gt;。这使我们能够仅以 ESM 格式发布 Vite 7.0，同时不会阻止 CJS 模块通过&lt;code&gt;require&lt;/code&gt;调用 Vite 的 JavaScript API。有关当前 ESM 在生态系统中的发展状况的详细分析，请查看 Anthony Fu 的文章&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fantfu.me%2Fposts%2Fmove-on-to-esm-only" target="_blank"&gt;《迈向纯 ESM》&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;默认浏览器兼容性目标已更改为 Baseline Widely Available&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fblog%2Fannouncing-vite7%23default-browser-target-changed-to-baseline-widely-available" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb-platform-dx.github.io%2Fweb-features%2F" target="_blank"&gt;Baseline&lt;/a&gt;为我们提供了明确的信息，指出了哪些 Web 平台特性在当今主流浏览器中可用。Baseline Widely Available，表示该功能已经十分成熟，可在多种设备和浏览器版本中正常工作，并且在各浏览器中至少已支持 30 个月。&lt;/p&gt; 
&lt;p&gt;在 Vite 7 中，默认浏览器目标将从&lt;code&gt;'modules'&lt;/code&gt;更改为新的默认值：&lt;code&gt;'baseline-widely-available'&lt;/code&gt;。每当我们发布一个重大版本时，所支持的浏览器列表都会更新，以匹配与「Baseline Widely Available」特性兼容的最低浏览器版本。Vite 7.0 中&lt;code&gt;build.target&lt;/code&gt;的默认浏览器值变化如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome 87 → 107&lt;/li&gt; 
 &lt;li&gt;Edge 88 → 107&lt;/li&gt; 
 &lt;li&gt;Firefox 78 → 104&lt;/li&gt; 
 &lt;li&gt;Safari 14.0 → 16.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这一变化为未来版本的浏览器兼容性带来了更高的可预测性。&lt;/p&gt; 
&lt;h2&gt;Vitest&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fblog%2Fannouncing-vite7%23vitest" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;对于 Vitest 用户而言，Vite 7.0 从 Vitest 3.2 开始得到支持。你可以阅读&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvitest.dev%2Fblog%2Fvitest-3-2.html" target="_blank"&gt;Vitest 3.2 发布博客&lt;/a&gt;，了解更多关于 Vitest 团队如何持续改进 Vite 测试功能的内容。&lt;/p&gt; 
&lt;h2&gt;Environment API&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fblog%2Fannouncing-vite7%23environment-api" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Vite 6 是自 Vite 2 以来最具意义的一次重大发布，它通过&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvite.dev%2Fblog%2Fannouncing-vite6.html%23experimental-environment-api" target="_blank"&gt;全新的实验性 Environment API&lt;/a&gt;引入了多项新功能。我们暂时将这些新 API 保持为实验性状态，以便生态系统逐步评估它们在各类项目中的适用性并提供反馈。如果你正在基于 Vite 构建项目，我们鼓励你尝试使用这些新 API，并通过&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvitejs%2Fvite%2Fdiscussions%2F16358" target="_blank"&gt;此开放讨论话题&lt;/a&gt;向我们提供你的使用反馈。&lt;/p&gt; 
&lt;p&gt;在 Vite 7 中，我们新增了一个&lt;code&gt;buildApp&lt;/code&gt;钩子，使插件能够协调环境的构建过程。详情请参阅&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fguide%2Fapi-environment-frameworks.html%23environments-during-build" target="_blank"&gt;面向框架的 Environment API 指南&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;我们要感谢那些一直在测试新 API 并帮助我们稳定新功能的团队。例如，Cloudflare 团队宣布了其 Cloudflare Vite 插件的 1.0 版本发布，并正式支持 React Router v7。他们的插件展示了 Environment API 在运行时提供者方面的潜力。要了解更多关于他们的实现方式和未来计划，请查看文章&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.cloudflare.com%2Fintroducing-the-cloudflare-vite-plugin%2F" target="_blank"&gt;「Just use Vite」… with the Workers runtime&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;迁移到 Vite 7&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fblog%2Fannouncing-vite7%23migrating-to-vite-7" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;从 Vite 6 升级到 Vite 7 应该是一次平滑的体验。我们移除了已弃用的功能，例如 Sass 的旧版 API 支持以及&lt;code&gt;splitVendorChunkPlugin&lt;/code&gt;，这些改动不会影响你的项目。我们仍然建议你在升级前查看&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fguide%2Fmigration.html" target="_blank"&gt;详细的迁移指南&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;所有变更的完整列表请见&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvitejs%2Fvite%2Fblob%2Fmain%2Fpackages%2Fvite%2FCHANGELOG.md" target="_blank"&gt;Vite 7 更新日志&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357360/vite7-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357360/vite7-released</guid>
      <pubDate>Sun, 11 May 2025 06:09:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Scale AI 被曝使用谷歌文档泄露客户机密信息</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;人工智能初创公司 Scale AI 陷入了一场严重的数据安全风波。这家估值不菲、并被 Meta 以 148 亿美元收购 49% 股份的公司，被曝出竟然使用公共的谷歌文档来存储包括 Meta、谷歌和 xAI 在内的众多客户的绝密信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;报道称，任何知道 Scale AI 文档链接的人，都可以轻易访问这些包含绝密项目、电子邮件地址和付款信息等敏感内容的谷歌文档。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Scale AI 的一位发言人对此回应表示，公司正在进行彻底的调查，并且已经禁止任何用户公开分享 Scale AI 管理系统中的文档。然而，谷歌和 xAI 尚未对此事发表评论，而 Meta 则选择拒绝置评。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="250" src="https://oscimg.oschina.net/oscnet/up-a25cf5b5fc9703e4e067c5e37806e5bd265.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;据五名 Scale AI 的承包商透露，谷歌文档在 Scale AI 内部被广泛使用。网络安全专家指出，尽管目前尚无迹象表明这些公开文件已导致实际的数据泄露，但这种存储方式无疑让 Scale AI 极易受到黑客攻击。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;调查显示，在 Scale AI 采取措施之前，人们可以查看多达 85 份、数千页的项目信息，其中详细记录了 Scale AI 与大型科技客户之间的敏感合作。例如，这些文档揭示了谷歌如何利用 OpenAI 的 ChatGPT 来微调自己的聊天机器人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更令人震惊的是，至少有七份被标记为机密信息的谷歌项目手册向公众开放，其中包括如何改进其聊天机器人 Bard 的具体建议。此外，公开的谷歌文档中甚至包含了埃隆·马斯克 「木琴计划」（Project Xylophone）的详细内容，比如用于训练 xAI 人工智能模型的 700 个对话提示。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;承包商们还透露，尽管这些项目通常有秘密代号，但他们仍然能清晰辨别自己为哪个客户工作。在使用人工智能产品时，聊天机器人有时在被询问时甚至会直接透露客户信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;除了客户的机密项目信息，Scale AI 的谷歌文档中还赫然披露了该公司数千名员工的姓名和私人联络方式。更甚者，有些文件甚至详细列出了个体承包商的工资数额，包括有关工资纠纷和差异的详细说明。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这些信息无疑充分暴露了 Scale AI 在数据安全性上的严重纰漏，并可能引发法律纠纷。值得注意的是，就在 Meta 入股 Scale AI 后不久，业内便有传言称包括谷歌在内的大客户已经与 Scale AI 进行了业务上的切割，以防止 Scale AI 向 Meta 透露敏感内容。此次谷歌文档事件，无疑将进一步加剧客户对 Scale AI 数据安全能力的担忧。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/356119/openai-drops-scale-ai-meta" target="news"&gt;OpenAI 终止与 Scale AI 合作&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357357</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357357</guid>
      <pubDate>Sun, 11 May 2025 05:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>给予虚拟成像台蛋糕商城示例，哑数据模式演示</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;给予虚拟成像台蛋糕商城示例，哑数据模式演示&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;给予虚拟成像台是第二代动词算子架构的通用代码生成器阵列。是一种彻底插件化的通用代码生成器阵列。所有后端生成功能都由插件提供。目前支持 Rust 语言的 tower 技术栈。技术状态和 Rust 通用代码生成器莲花，红莲尝鲜版三十六一致。支持图片初始化功能。&lt;/p&gt; 
&lt;p&gt;现在给予虚拟成像台第一个介绍视频已公布，视频请见：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1g4KDzbED3%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1g4KDzbED3/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台将强大的生产力赋能广大程序员。无论是新开发的软件还是通过遗留数据库反射以再次开发的遗留项目，您都可以使用动词算子式通用代码生成器的强大生产力大大加速研发速度。给予虚拟成像台永远是广大程序员的瑞士军刀，是加快开发速度和提高开发质量的利器。&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台&lt;span style="background-color:#ffffff; color:#333333"&gt;的项目地址：&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/Given"&gt;https://gitee.com/jerryshensjf/Given&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;给予虚拟成像台&lt;/h1&gt; 
&lt;h4&gt;介绍&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;项目名：给予虚拟成像台&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;Project Name: Given the gateway&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;为第二代动词算子架构的通用代码生成器阵列，目前支持 Rust 语言，和 Rust 通用代码哦生成器莲花，红莲尝鲜版三十六技术状态一致。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台是一款彻底插件化的多语言通用代码生成器阵列。其所有功能由插件提供，插件不分语言，如果支持某种语言的生成需求，它就会生成压缩包，如果不支持，软件会报一个编译错误。现有的 Rust 语言代码生成功能由标准插件提供。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;给予虚拟成像台有完善的插件管理功能。未来所有的功能增强都会通过不同的插件提供。给予虚拟成像台的插件机制，构成了第二代动词算子架构的主要部分。&lt;/p&gt; 
&lt;h3&gt;项目图片&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//96489c2d880fb95cc2e54814dc281de0.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;生成功能界面截图&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//53c2a6a219068031b0df89ab0614169c.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//e0500a8da1fbccd72078f9d43ac429af.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//7fb99c427ed950f2babf850ba02e3b2b.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//01fe11c07271de7139a3a6a3c99bb850.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//24dd2d4bc978c4e412224d25b32c59ba.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//cd310fb352e7c0c26411d4a38a00738e.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="输入图片说明" src="https://oscimg.oschina.net/oscnet//36ff78f92e985283a2bfd5c15d2a75d2.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;软件架构&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;统一的插件架构&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;内含动词算子，标准域对象，界面和模块&lt;/li&gt; 
 &lt;li&gt;动词算子库，模块库和界面库是统一的，因内含物的不同提供不同的服务&lt;/li&gt; 
 &lt;li&gt;对象的标准命名:插件名.模块名.对象名&lt;/li&gt; 
 &lt;li&gt;不分语言和技术栈，生成时匹配语言，技术栈，数据库类型，前端技术，后端技术并输出结果，如果不匹配返回 Null 或抛 ValidateException&lt;/li&gt; 
 &lt;li&gt;可以引用本插件和其他插件的模块&lt;/li&gt; 
 &lt;li&gt;一个代码生成器阵列以一个阵列本体和一系列插件 Jar 组成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;组件清单&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;曲速引擎前端代码生成器&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/WarpEngine"&gt;https://gitee.com/jerryshensjf/WarpEngine&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;表反射引擎&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/ReflectTable"&gt;https://gitee.com/jerryshensjf/ReflectTable&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;标准插件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/StdPlugin"&gt;https://gitee.com/jerryshensjf/StdPlugin&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;蛋糕商城插件&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/jerryshensjf/CookieShopPlugin"&gt;https://gitee.com/jerryshensjf/CookieShopPlugin&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;插件概要&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;StdPlugin 标准插件由红莲三十六改过来&lt;/li&gt; 
 &lt;li&gt;CookieShopPlugin 蛋糕商城插件&lt;/li&gt; 
 &lt;li&gt;SimpleAuthPlugin 简易认证插件&lt;/li&gt; 
 &lt;li&gt;SimpleAuth2Plugin 简易认证插件 2&lt;/li&gt; 
 &lt;li&gt;AdvancedAuthPlugin 先进认证插件&lt;/li&gt; 
 &lt;li&gt;DictionaryPlugin 字典插件&lt;/li&gt; 
 &lt;li&gt;OrgnizationPlugin 组织插件&lt;/li&gt; 
 &lt;li&gt;LocationPlugin 地点插件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;介绍视频&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1g4KDzbED3%2F" target="_blank"&gt;https://www.bilibili.com/video/BV1g4KDzbED3/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357348</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357348</guid>
      <pubDate>Sun, 11 May 2025 04:49:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>ResNet 主要发明人何恺明加入谷歌 DeepMind，担任「杰出科学家」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;计算机视觉领域代表人物何恺明官宣加入谷歌 DeepMind，担任杰出科学家（Distinguished Scientist）。 他在个人主页上表示，自己在 DeepMind 的工作是兼职，还将继续保留 MIT 终身副教授的身份。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/110724_YwBV_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;何恺明是残差网络（ResNet）的主要发明人，而这项技术成为了深度学习及后续人工智能进步的基础。我们今天看到的 ChatGPT、AlphaGo、AlphaFold 都离不开它的影响。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/111204_Czoq_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenaccess.thecvf.com%2Fcontent_cvpr_2016%2Fpapers%2FHe_Deep_Residual_Learning_CVPR_2016_paper.pdf" target="_blank"&gt;https://openaccess.thecvf.com/content_cvpr_2016/papers/He_Deep_Residual_Learning_CVPR_2016_paper.pdf&lt;/a&gt;&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;2003 年，何恺明以标准分 900 分获得广东省高考总分第一，被清华大学物理系基础科学班录取。在清华物理系基础科学班毕业后，他进入香港中文大学多媒体实验室攻读博士学位，师从汤晓鸥。何恺明曾于 2007 年进入微软亚洲研究院视觉计算组实习，实习导师为孙剑博士。&lt;/p&gt; 
&lt;p&gt;2011 年博士毕业后，何恺明加入微软亚洲研究院工作任研究员。2016 年，何恺明加入 Facebook 人工智能实验室，任研究科学家。2024 年，何恺明加入 MIT，成为该校一名副教授。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/111129_NW0H_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357334</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357334</guid>
      <pubDate>Sun, 11 May 2025 03:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>开源模拟器 QEMU 拒绝 AI 生成代码的贡献</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;开源模拟器 QEMU 开始对用 AI 生成的代码进行治理，项目维护者&amp;nbsp;Daniel Berrangé &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fqemu%2Fqemu%2Fcommit%2F3d40db0efc22520fa6c399cf73960dced423b048" target="_blank"&gt;撰写并提交&lt;/a&gt;了一份「&lt;strong&gt;禁止使用人工智能代码生成&lt;/strong&gt;器」的文档：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;近年来，所谓的人工智能代码生成器引发了极大的关注。然而，迄今为止，尚未形成关于代码生成器输出结果的许可影响的普遍认可的法律解释。尽管供应商可能声称不存在问题且可以自由选择许可协议，但他们在推广这一解释时存在固有的利益冲突。&lt;/p&gt; 
 &lt;p&gt;更广泛地说，目前尚未就基于多种不同许可协议输入数据训练的代码生成器的许可影响形成广泛共识。&lt;/p&gt; 
 &lt;p&gt;DCO 要求贡献者声明其有权在指定项目许可下进行贡献。鉴于对 AI 代码生成器输出许可问题的共识缺失，若补丁包含此类生成代码，则声称符合 DCO 条款 (b) 或 (c) 被视为不可信。&lt;/p&gt; 
 &lt;p&gt;因此，本补丁定义了 QEMU 项目当前不会接受涉及已知或疑似使用 AI 代码生成器的贡献。&lt;/p&gt; 
 &lt;p&gt;这是人工智能辅助软件开发的早期阶段。法律问题最终将得到解决。工具将成熟，我们可预期部分工具将安全适用于自由软件项目。&lt;/p&gt; 
 &lt;p&gt;我们当前制定的政策必须适用于当下，并保持开放修订。最好从严格和安全开始，随后逐步放宽。&lt;/p&gt; 
 &lt;p&gt;同时，可根据具体情况考虑例外请求。&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/105527_LWLP_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357331</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357331</guid>
      <pubDate>Sun, 11 May 2025 03:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>腾讯云 TDMQ RabbitMQ Serverless 版全新发布</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;h2&gt;导语&lt;/h2&gt; 
&lt;p&gt;2025 年 6 月起，腾讯云 TDMQ RabbitMQ 版正式推出 Serverless 版本，该版本基于自研的存算分离架构，兼容 AMQP 0-9-1 协议和开源 RabbitMQ 的各个组件与概念，且能够规避开源版本固有的不抗消息堆积、脑裂等稳定性缺陷，具有稳定、安全、灵活扩缩容等优势。本文将全面解析 TDMQ RabbitMQ Serverless 版的核心特性、技术优势及售卖形态。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版推出的背景&lt;/h2&gt; 
&lt;p&gt;2021 年，腾讯云推出自研消息队列服务 TDMQ RabbitMQ 版，全面兼容 AMQP 0-9-1 协议及开源 RabbitMQ 生态。产品以开源托管版形态提供服务，按照节点进行售卖。&lt;/p&gt; 
&lt;p&gt;相比传统自建方案，TDMQ RabbitMQ 开源托管版不仅免除了用户部署运维的负担，并通过架构优化实现了跨可用区高可用部署、一键弹性扩缩容等生产级能力，同时内置了完善的监控告警、巡检诊断等企业级运维功能，在保持协议完全兼容的基础上，针对企业实际应用场景进行了深度优化，为用户提供了更稳定可靠的消息服务体验。&lt;/p&gt; 
&lt;p&gt;在当前数字化转型加速的背景下，用户对成本优化提出了更高要求，同时业务快速迭代也催生了对弹性能力的强烈需求。用户极需突破传统资源预留式运维的局限，充分释放云原生的技术红利。&lt;/p&gt; 
&lt;p&gt;为更好地满足用户对弹性扩展和成本优化的需求，腾讯云消息队列 TDMQ RabbitMQ 版正式推出 Serverless 版本。该版本采用存储和计算分离的架构设计，在完全兼容 AMQP 0-9-1 协议及开源 RabbitMQ 生态的同时，有效规避了开源版本固有的不抗消息堆积、脑裂等稳定性缺陷，又解决了开源版本性能受限于底层机型和扩展性不足等问题，为用户提供更安全可靠、弹性灵活的消息服务体验。&lt;/p&gt; 
&lt;p&gt;在产品设计上，Serverless 版本提供专业版（1000+ TPS）和铂金版（10w+ TPS）两种规格，用户只需根据业务吞吐量需求选择对应版本，无需关心底层资源运维。在计费模式上，同时支持包年包月和按小时计费两种方式，其中计算资源按流量规格计费，存储资源无起步门槛，按实际使用量进行计费，成本整体可降低约 30%。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版核心特性解析&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、 兼容开源、开箱即用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;支持开箱即用，一键自动创建集群，无需手动安装和部署。兼容 AMQP 0-9-1 协议及开源 RabbitMQ 客户端，业务代码无需任何改造即可平滑上云。同时提供多种 TPS 规格供用户选择，用户可以在控制枱上自助灵活扩容和缩容，无需关注底层资源。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、 可观测能力增强&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提供全面的监控告警能力，支持集群、VHost、Exchange 和 Queue 4 个维度，覆盖 6 大类、90+ 细粒度监控指标，帮助您实时了解集群运行状态。同时支持消息查询和消息轨迹能力，清晰展示消息的完整生命周期，便于快速定位问题，提升运维效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、 高可用高可靠&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通过架构升级有效解决了开源版本常见的稳定性问题，包括消息堆积和脑裂等场景。服务采用多可用区分布式部署架构，可自动容灾切换，轻松应对机房级故障，提供不低于 99.95% 的 SLA 服务可用性保障。同时通过三副本数据持久化机制，确保消息数据的持久可靠。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4、 灵活适配多业务场景&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;提供多种路由方式，例如 Direct、Fanout、Topic、 Header 和 X-Delayed-Message 等，可灵活组合不同的交换机类型，满足复杂业务需求。同时支持多种消息类型，例如广播消息、延迟消息、死信队列等，满足订单超时处理、事件通知、异步解耦等典型业务场景，提供高度灵活的消息解决方案。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版对比开源的八大关键优势&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、监控告警丰富度高&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源自建 RabbitMQ 方案需通过 Management UI 手动采集指标，并自行搭建指标存储和展示系统；或者通过接入外部 Prometheus 和 Grafana 实现监控指标展示，运维难度和成本显著增加。&lt;/p&gt; 
&lt;p&gt;而 TDMQ RabbitMQ Serverless 版提供白屏化监控大盘，支持集群/VHost/Exchange/Queue 4 个监控维度，涵盖 6 大类，90+ 指标，实时了解集群运行状态，提升自主运维效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、支持全链路消息轨迹&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源自建 RabbitMQ 方案需要在服务器里的 log 文件中查询文本格式的消息轨迹信息，查询和定位问题效率较低。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版支持通过 Message ID 精准查询或按队列检索消息，并且可以可视化展示消息完整生命周期，快速定位消息收发问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、 灵活无感扩缩容&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;传统开源的 RabbitMQ 方案扩缩容需要停机升级底层机型，并需要重启开源控制枱，操作复杂且影响业务连续性。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版支持灵活扩缩容，通过控制枱简单操作即可实现资源扩展，变更过程平滑无感，客户侧的应用无需做停机处理。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4、 消息抗堆积能力强&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源自建 RabbitMQ 集群抗消息堆积能力较弱，容易因消息堆积导致内存过载，需人工干预。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版采用高性能架构，具备强大的抗堆积能力，即使在高并发消息堆积场景下，仍能保持稳定的吞吐性能，避免消息积压导致的服务不可用风险。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5、 默认支持跨可用区容灾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;传统开源的 RabbitMQ 方案存在固有的不抗消息堆积和脑裂等架构风险，且单可用区部署模式难以保障故障出现时的业务连续性。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版默认跨可用区部署，确保服务的高可用性。采用先进的存算分离架构，规避不抗消息堆积和脑裂问题，既保证集群高可靠和数据持久化，又具备灵活扩缩容优势。承诺不低于 99.95% 的服务可用性 SLA，为用户提供强有力的稳定性保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6、 可无限横向扩展&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源 RabbitMQ 集群的队列和单节点绑定，受限於单机硬件配置，镜像队列副本数量增多会降低集群 TPS 值，增加节点不能扩展集群吞吐量。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版通过存算分离架构，突破了传统方案的性能瓶颈，理论上支持无限 TPS 扩展能力，服务可按需横向扩容，为业务增长提供持续的性能保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7、秒级精度延时消息&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源 RabbitMQ 通过延时消息插件实现，该开源插件设计存在局限性，不适用于大量延时消息或长时间延时消息的场景，集群节点异常时会导致延时消息丢失，还存在不支持强制标志等问题。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版免去开启延时消息插件的步骤，直接对消息设置 delay 属性即可，不仅便捷，还可以解决开源实现方式的局限性，支持长时间、大量的延时消息，且海量消息堆积不影响集群高可用。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;8、灵活消息重试策略&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;开源 RabbitMQ 默认只支持消息无限立即重试机制，需要开发者自行实现重试逻辑，消费失败的消息需人工定位原因，开发和运维成本高。&lt;/p&gt; 
&lt;p&gt;TDMQ RabbitMQ Serverless 版默认支持消息重试策略，当消息消费达到"消费超时时间"而消费者还未响应时，消息将被重新投递，并且支持不同的重试间隔，当重新投递次数达到上限时，消息会被投递到死信队列或者被丢弃。&lt;/p&gt; 
&lt;h2&gt;TDMQ RabbitMQ Serverless 版售卖形态&lt;/h2&gt; 
&lt;p&gt;当前 TDMQ RabbitMQ Serverless 版提供专业版和铂金版两种规格，以满足不同业务场景的需求，按照 TPS 规格对外售卖。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-a52b5a86022eb497558d49a27de6643ace7.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在性能方面，专业版支持消息 TPS 在 1000 到 10 万之间的多种规格，铂金版则提供更高的规格，支持 10 万 TPS 以上的消息处理能力。&lt;/p&gt; 
&lt;p&gt;在部署架构上，专业版计算资源是独占的，但存储层是共享的；而铂金版提供完全独占的计算和存储资源，相比专业版稳定性会更强。&lt;/p&gt; 
&lt;p&gt;消息保留时间方面，专业版默认支持 3 天的消息保留时间，铂金版则支持 7 天以上，满足更严格的数据留存需求。&lt;/p&gt; 
&lt;p&gt;服务可靠性方面，两个版本均采用跨可用区部署架构，并配备三副本数据持久化机制。专业版提供 99.95% 的 SLA 保障，与开源托管版持平；铂金版则承诺更高的 99.99% 服务可用性，为关键业务提供更强保障。&lt;/p&gt; 
&lt;p&gt;后续我们还将推出弹性 TPS 功能，允许用户在购买的基础 TPS 规格范围上可以超出一部分用量。对于超出基础规格的部分，按照实际使用量进行独立计费。具体弹性扩展空间方面，专业版最高可支持超出基础规格的 50%，铂金版则支持 100% 的超量扩展，为用户业务的突发激增流量提供保障。&lt;/p&gt; 
&lt;h2&gt;总结与展望&lt;/h2&gt; 
&lt;p&gt;腾讯云推出的 TDMQ RabbitMQ Serverless 版基于自研的存算分离架构，有效兼容开源生态并解决了其固有稳定性问题（如脑裂、不抗堆积），提供高可用、弹性扩缩和按量计费的核心优势，同时大幅增强监控告警、消息轨迹等可观测能力，显著简化运维负担。&lt;/p&gt; 
&lt;p&gt;未来腾讯云 TDMQ RabbitMQ Serverless 版将持续优化，推出弹性 TPS 功能以更好应对突发流量，同时做好开源兼容性增强、管控能力升级和可观测工具完善，并深化行业场景应用，助力用户以更低成本、零运维负担享受高性能消息服务。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4587289/blog/18638278</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4587289/blog/18638278</guid>
      <pubDate>Sun, 11 May 2025 02:52:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Jina AI 开源多模态多语言向量模型 Jina Embeddings V4</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Jina AI &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpfbyYOf8_KJijGfmLtTr9w" target="_blank"&gt;宣布&lt;/a&gt;正式推出 jina-embeddings-v4，一款全新的多模态向量模型，参数规模达到 38 亿，并首次实现了对文本与图像的同步处理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;项目团队在模型内置了一套面向特定任务的 LoRA 适配器，专门强化了模型在处理查询-文档检索、语义匹配以及代码搜索等任务时的表现。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="263" src="https://oscimg.oschina.net/oscnet/up-a2a4b22fe7f6b657a270a7ecbcfeb963466.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公告称，在 MTEB、MMTEB、CoIR、LongEmbed、STS、Jina-VDR 及 ViDoRe 等多项基准测试中，jina-embeddings-v4 在多模态、多语言检索任务上均展现了顶尖性能。它尤其擅长解读富含视觉信息的内容，无论是表格、图表还是复杂的示意图，都能精准捕捉其深层语义。此外，模型还同时支持单向量和多向量表示，灵活满足各种场景需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「&lt;code&gt;jina-embeddings-v4&lt;/code&gt;&amp;nbsp;是我们迄今为止最具突破性的一款向量模型。&lt;strong&gt;作为一款开源模型，它的性能表现已全面超越来自主流供应商的顶尖闭源模型。&lt;/strong&gt;」&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在多语言检索方面，其性能比 OpenAI 的 text-embedding-3-large 高出 12%（66.49 vs 59.27）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在长文档任务上，性能提升了 28%（67.11 vs 52.42）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;在代码检索方面，效果比 voyage-3 好 15%（71.59 vs 67.23）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;综合性能与谷歌的 gemini-embedding-001 模型并驾齐驱&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" height="695" src="https://oscimg.oschina.net/oscnet/up-349b5e56cf55646be67b29e49a34777f535.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="657" src="https://oscimg.oschina.net/oscnet/up-95eed0ac1e5ba7c967ac000a2b39bca41b5.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpfbyYOf8_KJijGfmLtTr9w" target="_blank"&gt;查看官方公告&lt;/a&gt;。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357326</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357326</guid>
      <pubDate>Sun, 11 May 2025 02:47:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Swift 编程语言正式成立 Android 工作组</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Swift 编程语言项目&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforums.swift.org%2Ft%2Fannouncing-the-android-workgroup%2F80666" target="_blank"&gt;宣布&lt;/a&gt;成立新团队：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fandroid-workgroup%2F" target="_blank"&gt;Android 工作组&lt;/a&gt; (Android Workgroup)，这是一个推广使用 Swift 开发 Android 应用的团队&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0626/103853_lltG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;「Swift on Android Working Group」的章程写道：工作组的主要目标是建立并维护 Android 作为 Swift 的官方支持平台。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;改进并维护官方 Swift 发行版的 Android 支持，消除对树外或下游补丁的需求&lt;/li&gt; 
 &lt;li&gt;推荐对 Foundation 和 Dispatch 等核心 Swift 包进行增强，使其更好地与 Android 惯用法配合&lt;/li&gt; 
 &lt;li&gt;与平台指导小组合作，正式定义平台支持级别，然后努力为 Android 实现特定级别的官方支持&lt;/li&gt; 
 &lt;li&gt;确定 Swift 集成所支持的 Android API 级别和架构范围&lt;/li&gt; 
 &lt;li&gt;为 Swift 项目开发持续集成，包括在 PR 检查中包含 Android 测试。&lt;/li&gt; 
 &lt;li&gt;识别并推荐 Swift 与 Android 的 Java SDK 之间桥接的最佳实践，以及将 Swift 库与 Android 应用打包的最佳实践&lt;/li&gt; 
 &lt;li&gt;开发在 Android 上调试 Swift 应用程序的支持功能&lt;/li&gt; 
 &lt;li&gt;为各种社区 Swift 包添加 Android 支持提供建议和协助&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.swift.org%2Fandroid-workgroup%2F" target="_blank"&gt;https://www.swift.org/android-workgroup/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357325/swift-android-workgroup</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357325/swift-android-workgroup</guid>
      <pubDate>Sun, 11 May 2025 02:43:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>宇树科技王兴兴：公司目前年度营收超过十亿元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;据新华网报道，宇树科技创始人王兴兴在近日举行的夏季达沃斯论坛上透露，宇树科技自 2016 年创立之初的「一人公司」，如今已发展成为拥有近千名员工、年营收突破十亿元人民币。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="307" src="https://oscimg.oschina.net/oscnet/up-f88df9ea1d0af1507ea7206a2304fe3c8e4.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;宇树科技或是机器人行业少数实现盈利的企业。此前宇树科技早期投资人、SevenUp Capital 创始人赵楠曾透露，自 2020 年以来，宇树科技的财务报表每年都保持盈利状态。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;成立于 2016 年的宇树科技，早期主要做四足机器狗。2024 年，其通用人形机器人 G1 一经推出便引发热议。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2025 年初，宇树科技的 Unitree H1 和 G1 人形机器人登陆京东商城开售，其中 H1 售价 65 万元，G1 售价 9.9 万元，产品上线后迅速售罄。此外，宇树科技的机器人还多次在央视春晚、美国拉斯维加斯 CES 等舞台亮相，大幅提升了品牌知名度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;该公司的融资情况也颇为顺利。2020 年到 2022 年之间，宇树进行了 Pre-A、A、A+、B、B+轮融资，投资方包括红杉种子、初心资本、祥峰投资、顺为资本、经纬创投等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2024 年 2 月，宇树科技完成近 10 亿元 B2 轮融资，参与方包括深创投、中网投、容亿投资、经纬创投、源码资本、美团战略投资部、中信金石、博睿智联、钧石创投等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;进入 2025 年，这家公司又完成了始于去年底 C 轮融资的交割，由中国移动旗下基金、腾讯、锦秋基金、阿里、蚂蚁集团、吉利资本共同领投，绝大部分老股东都跟投，融资金额接近 7 亿元人民币，投后估值超 120 亿元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;今年 4 月，香港特区行政长官李家超在杭州与「杭州六小龙」企业代表进行了交流，并到访了宇树科技。彼时，王兴兴表示，宇树科技在香港有业务，各方面合作机会也很多。至于未来会否在香港上市，王兴兴称有可能，但不确定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;当前我国机器人行业正处于快速发展态势。摩根士丹利曾预计，中国作为全球最大的机器人市场和制造中心，2024 年机器人市场规模已达 470 亿美元，占全球总量的 40%，预计到 2028 年将增至 1080 亿美元，年复合增长率达 23%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;不过，在谈及机器人未来的重要应用场景时，王兴兴表示，家庭应用场景非常有挑战，需要一步步来做，目前像工业或农业应用会更快一些。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「近距离与人交互的产品，安全性问题比技术问题会更大一点，在伦理道德方面会更具挑战性。」王兴兴举例称，前段时间有客户采购了一台宇树机器人，在外参加活动时不小心踩掉了一个小女孩的鞋子，一度引发大众关注。在王兴兴看来，尽管此事并未对小女孩造成实际的身体伤害，但说明存在很大的安全隐患。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357324</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357324</guid>
      <pubDate>Sun, 11 May 2025 02:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>DataGear 5.4.0 发布，数据可视化分析平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.datagear.tech%2F" target="_blank"&gt;DataGear&lt;/a&gt; 5.4.0 发布，新增 SQL 预编译、数据集加载控制等功能，具体更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：SQL 数据集新增 SQL 预编译支持，增强 SQL 防注入能力；&lt;/li&gt; 
 &lt;li&gt;新增：SQL 数据集新增二进制字段类型支持，用于在看板中展示数据库中的图片等二进制数据；&lt;/li&gt; 
 &lt;li&gt;新增：HTTP 数据集新增文本、二进制响应类型支持，用于在看板中展示数据源中的图片等二进制数据；&lt;/li&gt; 
 &lt;li&gt;新增：HTTP/JSON 数据集新增附加数据功能，可设置从数据源中读取更多有用数据；&lt;/li&gt; 
 &lt;li&gt;新增：图表 JS 对象新增忽略加载指定数据集结果的 API，可更灵活控制数据加载粒度；&lt;/li&gt; 
 &lt;li&gt;新增：图表插件新增数据集标记功能，为定义多结构数据集图表插件提供支持；&lt;/li&gt; 
 &lt;li&gt;新增：图表插件/渲染器新增 additions 附加信息规范；&lt;/li&gt; 
 &lt;li&gt;新增：新增 disableSetting 内置图表选项，功能同 dg-chart-disable-setting 图表元素属性；&lt;/li&gt; 
 &lt;li&gt;新增：内置表格图表新增 serverSidePaging 选项，可以方便配置服务端分页；&lt;/li&gt; 
 &lt;li&gt;新增：图表 JS 对象新增大量 API，为新特性提供支持；&lt;/li&gt; 
 &lt;li&gt;修复：修复图表绑定的数据集在某些极端情况会出现顺序错乱的 BUG；&lt;/li&gt; 
 &lt;li&gt;修复：修复内置图表参数面板输入框对于 0 数值，在关闭后再打开参数面板不显示的 BUG；&lt;/li&gt; 
 &lt;li&gt;修复：修复内置水球图在没有数据时显示"series***"异常信息的 BUG；&lt;/li&gt; 
 &lt;li&gt;改进：内置下拉框图表默认联动触发事件由 click 改为 change，解决不必要的联动触发问题；&lt;/li&gt; 
 &lt;li&gt;改进：改进看板展示页面内置图表参数/数据面板定位逻辑，自动定位至按钮周围合适位置；&lt;/li&gt; 
 &lt;li&gt;改进：内置图表参数面板改为默认进行参数类型转换，并可通过 convertParamFormValue 选项禁用；&lt;/li&gt; 
 &lt;li&gt;改进：图表编辑页面数据标记选择面板显示必填/多选信息，便于操作提示；&lt;/li&gt; 
 &lt;li&gt;改进：数据集/图表/看板支持设置描述信息，可匹配管理页面关键字查询；&lt;/li&gt; 
 &lt;li&gt;改进：系统配置项 welcomeContent 支持从文件中读取欢迎页内容，便于定义大量欢迎页内容；&lt;/li&gt; 
 &lt;li&gt;改进：系统登录/注册验证码支持在配置文件中自定义图片/字体尺寸等信息，以解决某些系统验证码显示不全问题；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.datagear.tech%2F" target="_blank"&gt;DataGear&lt;/a&gt;是一款开源免费的数据可视化分析平台，支持自由制作任何您想要的数据可视化看板。&lt;/p&gt; 
&lt;p&gt;官网地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.datagear.tech%2F" target="_blank"&gt;http://www.datagear.tech&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;源码地址：&lt;/p&gt; 
&lt;p&gt;Gitee：&lt;a href="https://gitee.com/datagear/datagear"&gt;https://gitee.com/datagear/datagear&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Github：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatageartech%2Fdatagear" target="_blank"&gt;https://github.com/datageartech/datagear&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;系统截图：&lt;/h3&gt; 
&lt;p&gt;制作看板&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8d44fe2497a797a09ce42a5cccc5dd8cc50.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;数据钻取&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8c5df432ca6a1d721ef61b92e2219e32c05.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;地图联动&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ba4802924d238d1c60de7ecf3afc2a8b169.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;看板表单&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-cc0b2383446202fb8a217f2cad1098f4a15.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;实时图表&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e6633cc1192c0dda38f75e6431f92681102.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;异步加载&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-63490b0aa500554f2e8bbc0bad707e8d596.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357320/datagear-5-4-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357320/datagear-5-4-0</guid>
      <pubDate>Sun, 11 May 2025 02:18:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>工信部：57 款 APP 及 SDK 存在侵害用户权益行为</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;工信部发布「&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwap.miit.gov.cn%2Fjgsj%2Fxgj%2Fgzdt%2Fart%2F2025%2Fart_eb31dd22d04a4658b912871c090274bd.html" target="_blank"&gt;关于侵害用户权益行为的 APP（SDK）通报（2025 年第 3 批，总第 48 批）&lt;/a&gt;」指出，近期，经组织第三方检测机构进行抽查，共发现 57 款 APP 及 SDK 存在侵害用户权益行为，现予以通报。上述 APP 及 SDK 应按有关规定进行整改，整改落实不到位的，工信部将依法依规组织开展相关处置工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;附件：工业和信息化部通报存在问题的 APP（SDK）名单&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-694cad317b798664fc6874f4dfcc5d04f03.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="380" src="https://oscimg.oschina.net/oscnet/up-95fdfdd6becefe89b59842435523158e7c9.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="377" src="https://oscimg.oschina.net/oscnet/up-67969320b093051e361809ae89079035228.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="384" src="https://oscimg.oschina.net/oscnet/up-dc0b31e0c1d8fd1034c092014e19fb865f7.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="383" src="https://oscimg.oschina.net/oscnet/up-74b9d4032b353a9db522aa784fbd0d762ed.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="386" src="https://oscimg.oschina.net/oscnet/up-b69d4f045e994d21d9b7f7214da69db6359.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="367" src="https://oscimg.oschina.net/oscnet/up-02a8816c82afb354b8910237cf8f42f35b4.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="249" src="https://oscimg.oschina.net/oscnet/up-d5e033274977ca0b8d94f80b0adf8dd3f6e.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357317</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357317</guid>
      <pubDate>Sun, 11 May 2025 02:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
