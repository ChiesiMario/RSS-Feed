<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 29 Jul 2025 02:47:33 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>阿里开源通义万相 Wan2.2</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;阿里&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FiPL7OLQhwYdoFelHt41N6Q" target="_blank"&gt;宣布&lt;/a&gt;开源视频生成模型「通义万相 Wan2.2」，此次共开源文生视频（Wan2.2-T2V-A14B）、图生视频（Wan2.2-I2V-A14B）和统一视频生成（Wan2.2-IT2V-5B）三款模型。其中文生视频模型和图生视频模型均为业界首个使用 MoE 架构的视频生成模型，总参数量为 27B，激活参数 14B。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据介绍，通义万相 2.2 率先在视频生成扩散模型中引入 MoE 架构，有效解决视频生成处理 Token 过长导致的计算资源消耗大问题。Wan2.2-T2V-A14B、Wan2.2-I2V-A14B 两款模型均由高噪声专家模型和低噪专家模型组成，分别负责视频的整体布局和细节完善，在同参数规模下，可节省约 50% 的计算资源消耗，在模型能上，通义万相 2.2 在复杂运动生成、人物交互、美学表达、复杂运动等维度上也取得了显著提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Wan2.2 还首创了「电影美学控制系统」，光影、色彩、构图、微表情等能力媲美专业电影水平。例如，用户输入「黄昏」、「柔光」、「边缘光」、「暖色调」「中心构图」等关键词，模型可自动生成金色的落日余晖的浪漫画面；使用「冷色调」、「硬光」、「平衡图」、「低角度」的组合，则可以生成接近科幻片的画面效果。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="213" src="https://oscimg.oschina.net/oscnet/up-9384df8eada31bdbc196286746847bfe546.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="177" src="https://oscimg.oschina.net/oscnet/up-58b00afb9376a3a0972e10d973fdb82ab5f.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="213" src="https://oscimg.oschina.net/oscnet/up-7c4a2896d24586d24ff41491862261a2aeb.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;通义万相还开源了一款 5B 小尺寸的统一视频生成模型，单一模型同时支持文生视频和图生视频，可在消费级显卡部署。该模型采用了高压缩率 3D VAE 架构，时间与空间压缩比达到高达 4×16×16，信息压缩率提升至 64，均实现了开源模型的最高水平，仅需 22G 显存（单张消费级显卡）即可在数分钟内生成 5 秒高清视频，是目前 24 帧每秒、720P 像素级的生成速度最快的基础模型。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362867</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362867</guid>
      <pubDate>Tue, 29 Jul 2025 02:14:26 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阿里云正式开源 LoongSuite：打造 AI 时代的高性能低成本可观测采集套件</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;作者：阿里云可观测开源&lt;/p&gt; 
&lt;h2&gt;AI Agent 技术架构演进重塑软件工程实践方式&lt;/h2&gt; 
&lt;p&gt;在 AI Agent 开发领域，技术架构的演进正在重塑软件工程的实践方式。开发者既可以通过 Cursor、通义灵码、Claude Code 等智能编程助手提升代码生成效率，也可依托专业的 AI Agent 开发框架构建完整的智能体系统。技术生态呈现出多维度发展：实现方式既有需要深度编码的高代码方案，也有通过可视化组件拖拽的低代码平台；技术栈维度 Java 生态的 Spring AI Alibaba 与 Python 领域的 Dify、AgentScope 等工具形成跨语言支持体系，其中 Python 凭借其丰富的 AI 库生态占据主导地位。技术演进也催生新型开发范式：AutoGen 的多 Agent 对话框架、LangChain 的模块化组件体系，都在降低智能体开发的技术门槛。&lt;/p&gt; 
&lt;p&gt;我们把智能体的核心能力体系，总结成四个关键构成维度：感知层需要集成多模态交互能力，包括自然语言处理、语音识别和视频流分析；决策中枢由大模型构成，通过 AI 网关（如 Higress）实现模型调用的统一调度，同时也承担流量控制与安全防护的关键角色；记忆机制存储用户交互历史并具备上下文关联能力；工具集成方面，随着 MCP 协议的出现，工具的使用逐渐标准化。工具成为 AI Agent 和传统互联网时代的数字世界很好的沟通渠道。而 MCP 市场的出现可以将 MCP 工具集中进行管理和发现，高效完成 Agent 和工具的连接。同时，当单体 Agent 的能力边界被突破时，多 Agent 系统通过 A2A 协议实现协同计算，这种分布式智能架构能够处理更复杂的任务场景。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-c3b5e0b94b8ba58ffcbf17953e3222070a3.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;AI 工具链全景图&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;随着开发工具链的持续完善，AI Agent 在完成开发后需要进行部署。Agent 执行环境的差异化需求催生了多样的架构模式：面向个人用户的桌面端 Agent（如 Cherry Studio, DeepChat）可以通过云端沙箱环境将运行时延伸到云端，而面向企业服务的 Agent 则运行在具备资源隔离的云原生环境中，Serverless 架构（如函数计算）可以为其提供弹性伸缩的基础设施。在 AI Agent 运行过程中，一些通用的能力也需要由中间件来支撑：通过 Nacos 实现的动态 Prompt 管理以及 MCP 注册中心、Higress 可以作为 AI 模型和 MCP Server 统一代理、RocketMQ 支撑的异步任务队列、Redis 提供的状态存储等共同构成智能体运行的技术底座。同时，安全体系的构建面临数据合规与系统防护双重挑战。在数据治理层面，需建立敏感信息过滤机制和审计追踪系统；针对 MCP 协议的安全漏洞，可采用沙箱隔离、工具签名认证等技术手段构建防御体系。可观测性平台通过采集 Agent 与模型的调用、token 消耗、性能指标等关键信息，为系统优化和威胁检测提供数据支撑。&lt;/p&gt; 
&lt;h2&gt;可观测性：AI Agent 技术发展的重要基石&lt;/h2&gt; 
&lt;p&gt;正如前文提到，AI Agent 的开发已突破传统软件工程的边界，其非确定性决策机制与动态化执行流程对可观测性提出了革命性要求。一个智能体其背后涉及的多模态数据处理、大模型推理及工具链调用的复杂度呈指数级增长。这种复杂性不仅体现在技术架构层面，更深刻影响着系统的稳定性保障、成本控制与合规审计等核心运维环节。&lt;/p&gt; 
&lt;p&gt;AI Agent 的自主决策特性使其区别于传统软件应用，涉及多模态数据处理、大模型推理及工具调用等复杂交互。当这种非线性工作流应用于真实业务场景时，任何环节的异常都可能引发连锁反应。另一方面，当 Agent 与模型进行多轮交互时，中间过程可能产生惊人的 Token 消耗，甚至有可能陷入无休止的状态，形成所谓的 "Token 黑洞"。在缺乏链路追踪机制的情况下，开发者难以定位服务异常的根源。通过构建端到端的可观测能力可以提供坚实的决策依据。&lt;/p&gt; 
&lt;p&gt;AI Agent 的迭代升级需要在保持服务连续性的前提下进行，这要求建立完善的回归测试评估体系。每一次提示词、模型的变更都可能引发不可预见的副作用。每一次 AI Agent 的修改和发布上线，我们都需要对 Agent 执行的结果进行评估，这相当于对 AI Agent 进行"回归测试"。通过采集执行过程中的可观测数据，企业可以构建自动化评估框架，量化新版本对服务质量的影响，避免版本迭代风险失控。&lt;/p&gt; 
&lt;p&gt;随着生成式 AI 不断发展，可观测性正从运维工具进化为 AI 应用架构的核心组件。正是看到了这样的技术趋势，OpenTelemetry 社区推动的 GenAI 语义约定，正在构建跨框架、跨供应商的标准化数据规范。也是在这样的技术背景之下，阿里云正式开源 LoongSuite 可观测采集套件，在顺应 AI 时代技术发展趋势的基础上，帮助更多企业，通过高性能低成本的方式，更高效地利用标准化数据规范模型建立可观测体系。&lt;/p&gt; 
&lt;h2&gt;LoongSuite ：打造 AI 时代高性能低成本的可观测采集套件&lt;/h2&gt; 
&lt;p&gt;LoongSuite （/lʊŋ swiːt/）（音译，龙-sweet），作为下一代可观测性技术生态的核心载体，核心数据采集引擎实现了主机级探针与进程级插桩的有效结合，进程级探针实现应用内细粒度可观测数据采集，而主机探针则实现了高效灵活的数据处理和数据上报，以及通过 eBPF 等技术实现了进程外数据采集能力。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-6f16653bf7aa654aa37e5e43c6508112a9a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;LoongSuite 技术应用架构&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;在进程级数据采集层面，LoongSuite 对 Java、Go、Python 等主流编程语言构建企业级观测能力。通过语言特性的深度适配，采集器能够自动捕获函数调用链路、参数传递路径及资源消耗，无需修改业务代码即可实现运行时状态的精准采集。这种无侵入式设计特别适用于动态更新频繁的技术环境，既保障观测数据的完整性，又避免对核心业务逻辑产生干扰。当面对复杂工作流时，系统可自动关联分布式追踪上下文，构建完整的执行路径拓扑。作为核心数据采集引擎，LoongCollector 实现多维度观测数据的统一处理，从原始数据采集到结构化转换，再到智能路由分发，整个流程通过模块化架构实现灵活编排。这种架构使观测数据既可对接开源分析平台实现自主治理，也可无缝衔接托管服务构建云原生观测体系。在技术生态构建方面，阿里云深度参与国际开源标准制定，其核心组件与 OpenTelemetry 等主流标准兼容。接下来，我们将逐一介绍相关组件。&lt;/p&gt; 
&lt;h3&gt;LoongCollector&lt;/h3&gt; 
&lt;p&gt;LoongCollector 作为新一代可观测性数据采集器，通过深度性能优化与技术架构创新，为云原生智算服务提供了高性能、高稳定的可观测数据采集与预处理解决方案，尤其在 AI 场景中展现出显著优势。&lt;/p&gt; 
&lt;p&gt;首先，LoongCollector 具备多维度的可观测数据采集能力，支持 Logs、Metrics、Traces、Events、Profiles 等多种类型数据的统一采集、处理与传输，实现了 All-in-One 的可观测性管理架构。它融合了实时日志采集、Prometheus 指标拉取、eBPF 技术等能力，在无需修改系统代码的前提下完成无侵入式监控，能够高效获取各类性能指标，尤其适用于大规模分布式训练和推理任务中的一体化可观测需求。&lt;/p&gt; 
&lt;p&gt;其次，LoongCollector 在性能与稳定性方面表现出色。其采用事件驱动架构、时间片调度、无锁化设计等技术，确保在高并发、大规模数据采集场景下仍能保持低资源消耗和高吞吐量。同时，其高低水位反馈队列机制和持久化缓存能力，使其具备良好的流量控制和容错能力，确保数据不丢失、采集不间断、服务不抖动，全面满足 AI 训练过程中对稳定性、连续性和可靠性的严苛要求。&lt;/p&gt; 
&lt;p&gt;再者，在 AI 场景中，LoongCollector 支持多种部署模式，包括 Agent 模式和集群模式，能够灵活适应分布式训练和推理任务的弹性需求。其具备自动发现容器上下文、关联 K8s 元信息、多租户隔离等能力，确保在复杂云原生环境下实现高效、安全的数据采集。同时，通过配置管理服务 ConfigServer，可实现对大规模 Agent 的集中管控与动态配置下发，显著提升运维效率与系统可控性。&lt;/p&gt; 
&lt;p&gt;此外，LoongCollector 实现了多维度观测数据的统一处理能力。从原始数据采集到结构化转换，到数据过滤聚合处理，再到路由分发，全流程模块化灵活编排、按需扩展。其支持 SPL 查询语言与多语言插件双引擎驱动，并内置丰富的数据处理算子，满足多样化、高吞吐的数据预处理场景。&lt;/p&gt; 
&lt;p&gt;综上所述，LoongCollector 凭借其全面的数据采集能力、卓越的性能表现、灵活的部署方式与强大的可编程性，成为 AI 场景下构建可观测性体系的核心基础设施，助力企业实现高效、稳定的智算服务运维。&lt;/p&gt; 
&lt;h3&gt;LoongSuite Python Agent&lt;/h3&gt; 
&lt;p&gt;LoongSuite Python Agent 基于 OpenTelemetry Python Agent 构建，OTel 社区由于还在制定 GenAI 语义规范，很多 AI 框架的支持尚未完全实现，目前基本只有 OpenAI 的插件可以支持可观测数据采集，和国内的流行 AI 框架相去甚远。LoongSuite Python Agent OTel GenAI 语义规范的最新实现，在遵循开源语义规范的基础上，添加了国内流行插件的支持。例如国内流行的 AgentScope, Agno 等 AI 编程框架，目前已经率先提供了支持，更多插件包括 Dify、Langchain、MCP Client 的支持，陆续会开源，并且会将这些插件贡献回 OTel 社区。通过 Python agent 我们可以轻松地采集 AI agent 调用模型和工具过程中的详细信息，耗时等多方面的数据。借助 OTel 项目可以将这些数据以标准的 OTLP 协议的方式上报到任意的存储之中，并且通过可视化的界面进行展示。&lt;/p&gt; 
&lt;h3&gt;LoongSuite Go Agent&lt;/h3&gt; 
&lt;p&gt;LoongSuite Go Agent 通过编译时插桩技术，为 Go 语言构建的 AI Agent 提供无侵入式的观测能力。通过深度解析 Go 语言的编译流程，在 AST 语法树分析阶段植入监控逻辑，实现了在不修改源代码的前提下完成可观测性能力的注入。LoongSuite Go Agent 采用编译增强机制，通过预定义的埋点规则引擎，在编译阶段自动注入 Span 创建、token 消耗等统计逻辑。内置对主流开发框架的完整支持，从基础通信协议到中间件交互，从微服务治理到数据持久化，系统已覆盖包括 HTTP、gRPC、数据库连接等在内的二十多个核心模块，能够自动捕获请求延迟分布、服务调用拓扑及资源竞争状态等关键指标。这种开箱即用的设计显著降低了观测体系的部署门槛，使开发者能够聚焦业务逻辑而非基础设施配置。LoongSuite Go Agent 可以精准捕获大模型调用的输入输出特征、Token 消耗模式及多轮交互的流程轨迹，为优化资源利用率提供了数据基础。目前支持的 AI Agent 开发框架包括 LangChainGo【1】，MCP Server【2】等，Eino、Ollma 等框架的支持也将陆续发布。&lt;/p&gt; 
&lt;h3&gt;LoongSuite Java Agent&lt;/h3&gt; 
&lt;p&gt;LoongSuite Java Agent 基于 OpenTelemetry Java Instrumentation 项目，通过字节码增强技术，为 Java 应用提供全链路的可观测性解决方案。借助对 Java 字节码的动态修改能力，实现了无需手动修改业务代码即可接入分布式追踪、指标收集和日志关联的观测体系。在极低性能开销的前提下，提供细粒度的运行时数据采集能力，适配从传统单体应用到云原生微服务的全场景观测需求。从基础的 Servlet、Spring、Dubbo 等开发框架，到 Redis、Kafka、MySQL 等中间件，再到 JVM 自身的性能指标采集，系统已覆盖超过 50+ 常用组件的自动埋点，能够自动捕获调用链路拓扑、方法执行耗时、异常堆栈及资源消耗等关键数据。这种即插即用的特性极大降低了可观测性接入的技术门槛，使开发者无需关注埋点细节即可获得全面的系统运行视图。针对高并发场景，其内置的采样策略与数据聚合机制可在保证观测精度的同时，有效控制数据量，满足生产环境的高可用性要求。目前已经在百炼大模型平台大规模生产落地，这些过程中积累的在大模型场景下数据采集的优化等方式将陆续发布到开源仓库。此外，针对常见的模型访问 SDK 如 OpenAI, DashScope 等，正在提供自动埋点支持，也欢迎社区贡献更多的插件实现。&lt;/p&gt; 
&lt;h3&gt;Loongsuite 与 Spring AI Alibaba 共建 AI 应用生态建设&lt;/h3&gt; 
&lt;p&gt;Spring AI 作为 Spring 生态与大模型能力融合的产物，在 Java 语言中提供了对 LLM 的抽象封装和易用的 API，同时在可观测性设计上充分拥抱 OpenTelemetry 标准，为关键调用提供了原生的可观测性能力。Spring AI Alibaba【3】 是 Alibaba 在 Spring AI 项目的基础上构建的 AI Agent 开发框架，深度集成了百炼大模型平台能力，提供了如工作台、Graph 等诸多可视化的白屏能力，以及各种开箱即用的预实现 Agent。Spring AI 的核心目标是让开发者能够以 Spring 的方式快速集成和使用 AI 能力。因此像 Spring 一样，可观测性被作为重要的组成部分集成在框架内部。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-483e2b3957f208292fdeef0998b8034673d.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在可观测性上，Spring AI 提供以下关键能力：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自动埋点：Spring AI 对所有涉及 LLM 调用、Prompt 构建、流式响应处理等关键路径进行了自动追踪埋点，并生成符合 OpenTelemetry 标准的 Span。&lt;/li&gt; 
 &lt;li&gt;上下文传播：支持在调用链中自动注入和提取 Trace ID 和 Span ID，确保与上下游服务的调用链路无缝衔接。&lt;/li&gt; 
 &lt;li&gt;指标导出：内置对请求延迟、token 使用量、模型响应长度等关键性能指标的采集与导出。&lt;/li&gt; 
 &lt;li&gt;日志关联：通过 MDC 或结构化日志机制，将当前 Span 上下文注入到日志中，便于问题排查时进行全栈分析。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这些能力使得 Spring AI 在接入观测系统时无需额外开发即可实现完整的追踪、监控与日志联动。为了进一步提升可观测性覆盖范围并降低接入成本，Spring AI Alibaba 支持结合 LoongSuite Java Agent 进行部署。Java Agent 可以无侵入地对运行中的 JVM 应用进行字节码增强，从而实现对 Spring 框架、数据库访问、HTTP 请求等通用组件的自动埋点。&lt;/p&gt; 
&lt;h2&gt;LoongSuite 项目未来规划&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;面对 AI Agent 众多的框架，LoongSuite 将会针对市面上的主流 AI Agent 提供全面的可观测性数据采集能力，包括 Python 生态中的低代码平台 Dify、高代码框架 AgentScope、Agno、OpenAI Agent 等主流 AI Agent 开发框架，同时也包括 Java 生态中的 Spring AI Alibaba 以及其基础之上的低代码以及 0 代码 Agent JManus 提供强有力的支撑，Golang 生态中的 Eino, Langchain4go 等等，也欢迎有兴趣参与社区的同学一起参与贡献更多的框架。&lt;/li&gt; 
 &lt;li&gt;未来 Agent 会大量使用工具，多智能体的协同也将成为常态，LoongSuite 会打通 MCP 和多 Agent 通讯的观测盲区，突破 MCP token 黑洞，实现对 MCP 和 A2A 协议的可观测覆盖。&lt;/li&gt; 
 &lt;li&gt;AI Agent 开发完在测试和线上运行期间都需要对 AI Agent 的行为进行充分的评估，评估的能力逐步成为 AI Agent 生命周期中不可或缺的一环，和 Spring AI Alibaba 以及 AgentScope 等项目集成，发布开源可观测追踪和评估能力控制枱，形成从采集、存储到评估的 AI Agent 全周期覆盖。&lt;/li&gt; 
 &lt;li&gt;实现端到端可观测能力的覆盖，打通端侧 Agent 到模型内部的整条链路，实现 AI Agent 链路完整分析和快速诊断。&lt;/li&gt; 
 &lt;li&gt;LoongCollector 通过 eBPF 支持 CPU 和 GPU 场景下的 Profiling 能力，LoongSuite 也将和 SysOM【4】 社区共同推出 AI 场景下的 Profiling 能力。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;开源社区参与&amp;amp;贡献&lt;/h2&gt; 
&lt;p&gt;作为全球领先的云服务商，阿里云始终致力于开源观测技术的最前沿。我们深度投身于 OpenTelemetry（OTel）社区，坚定不移地参与、支持技术开放生态的构建以及全球技术标准的制定。过去几年，阿里云在 OpenTelemetry 社区中积极推动技术共享与代码贡献，深度融入社区多个关键领域，如 Semantic Conventions（可观测标准规范建设）、Java Instrumentation（Java 探针）、Go Instrumentation（Go 探针）、Profiling（性能分析）等。截至目前，我们累计向社区贡献并合并 1000+ PR Reviews 与 400+ Pull Requests。在这一开源贡献进程中，我们成功培养出 3 位 Maintainer、5 位 Approvers、1 位 Triager 以及 8 位 Member，为社区的技术演进与生态建设注入了强劲动力。&lt;/p&gt; 
&lt;p&gt;除却技术贡献，阿里云亦全力践行开源文化所倡导的分享与合作精神，积极推动新技术与新思想的蓬勃发展。例如，我们踊跃在 KubeCon、OTel Community Day 等全球性行业会议中分享技术成果，同时在社区内发起设立了面向亚太地区的友好交流时段，有力促进了与社区的跨地域技术交流与深度合作。也欢迎更多的开发者加入 OTel 社区以及 LoongSuite 中。LoongSuite 开源的代码仓库如下，欢迎参与贡献：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LoongCollector:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Floongcollector" target="_blank"&gt;https://github.com/alibaba/loongcollector&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LoongSuite Python Agent:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Floongsuite-python-agent" target="_blank"&gt;https://github.com/alibaba/loongsuite-python-agent&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LoongSuite Go Agent:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Floongsuite-go-agent" target="_blank"&gt;https://github.com/alibaba/loongsuite-go-agent&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LoongSuite Java Agent:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Floongsuite-java-agent" target="_blank"&gt;https://github.com/alibaba/loongsuite-java-agent&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相关链接&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;【1】LangChainGo&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftmc%2Flangchaingo" target="_blank"&gt;https://github.com/tmc/langchaingo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【2】MCP Server&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmark3labs%2Fmcp-go" target="_blank"&gt;https://github.com/mark3labs/mcp-go&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【3】Spring AI Alibaba&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-ai-alibaba%2Fblob%2Fmain%2FREADME-zh.md" target="_blank"&gt;https://github.com/alibaba/spring-ai-alibaba/blob/main/README-zh.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;【4】SysOM&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenanolis.cn%2Fsig%2Fsysom" target="_blank"&gt;https://openanolis.cn/sig/sysom&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/3874284/blog/18686155</link>
      <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/18686155</guid>
      <pubDate>Tue, 29 Jul 2025 02:08:26 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>智谱正式发布 GLM-4.5：面向推理、代码与智能体的开源 SOTA 模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;智谱&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPsb5TJSFszReCQ8SwnjFyA" target="_blank"&gt;发布&lt;/a&gt;了新一代旗舰模型 GLM-4.5，专为智能体应用打造的基础模型。官方称「GLM-4.5 在包含推理、代码、智能体的综合能力达到开源 SOTA 水平，在真实代码智能体的人工对比评测中，实测国内最佳。」&lt;/p&gt; 
&lt;p&gt;&lt;img height="472" src="https://static.oschina.net/uploads/space/2025/0729/095744_ZTr1_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;GLM-4.5 已在 Hugging Face 与 ModelScope 平台同步开源，模型权重遵循 MIT License。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;开源仓库：https://github.com/zai-org/GLM-4.5&lt;/p&gt; 
 &lt;p&gt;模型仓库&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;HuggingFace：https://huggingface.co/collections/zai-org/glm-45-687c621d34bda8c9e4bf503b&lt;/li&gt; 
  &lt;li&gt;ModelScope：https://modelscope.cn/collections/GLM-45-b8693e2a08984f&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;体验地址&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;https://chat.z.ai/&lt;/li&gt; 
  &lt;li&gt;https://chatglm.cn&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;GLM-4.5 技术报告：https://z.ai/blog/glm-4.5&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;GLM-4.5 采用混合专家（MoE）架构，包括两个模型：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;GLM-4.5：总参数量 3550 亿，激活参数 320 亿；&lt;/li&gt; 
 &lt;li&gt;GLM-4.5-Air：总参数 1060 亿，激活参数 120 亿；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;以及两种模式：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;用于复杂推理和工具使用的思考模式&lt;/li&gt; 
 &lt;li&gt;用于即时响应的非思考模式；&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;价格方面，API 调用价格低至输入 0.8 元/百万 tokens、输出 2 元/百万 tokens；高速版最高可达 100 tokens/秒。&lt;/p&gt; 
&lt;p&gt;编程能力方面，根据官方面向 Claude-4-Sonnet、Kimi-K2、Qwen3-Coder 的对比测试，结论是比 Claude-4 稍差，比 Qwen3-Coder 强不少。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0729/095945_cXyL_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0729/095958_jsN7_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;GLM-4.5 深度优化了全栈编程与工具调用能力，兼容 Claude Code、Cline、Roo Code 等主流代码智能体。完整使用指南：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;国内用户：https://docs.bigmodel.cn/cn/guide/develop/claude&lt;/li&gt; 
 &lt;li&gt;海外用户：https://docs.z.ai/scenario-example/develop-tools/claude&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362861/glm-4-5</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362861/glm-4-5</guid>
      <pubDate>Tue, 29 Jul 2025 02:02:58 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Solon 集成 LiteFlow：轻量级工作流引擎的极简实践指南</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; text-align:start"&gt;在复杂的业务场景中，工作流引擎是解耦业务逻辑、提升可维护性的核心组件。传统的 BPM 引擎（如 Activiti、Flowable）虽功能强大，但学习曲线陡峭且资源消耗较大。LiteFlow 作为一款国产轻量级规则引擎/流程引擎，以其零学习成本、高可扩展性和极致性能成为微服务架构下的理想选择。本文将详细讲解 Solon 集成 LiteFlow 的全过程，助你轻松驾驭轻量级流程编排。&lt;/p&gt; 
&lt;h2&gt;一、LiteFlow 核心优势&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;轻量嵌入：仅需 2 个核心 JAR 包，无数据库依赖&lt;/li&gt; 
 &lt;li&gt;规则驱动：基于 EL 表达式的链式规则配置，变更实时生效&lt;/li&gt; 
 &lt;li&gt;组件化设计：业务逻辑封装为可复用组件，支持热插拔&lt;/li&gt; 
 &lt;li&gt;高性能：无反射执行，单线程每秒可处理万级任务&lt;/li&gt; 
 &lt;li&gt;多类型支持：顺序流、条件分支、循环、嵌套、异步并行&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二、Solon 集成实战&lt;/h2&gt; 
&lt;h3&gt;准备：添加依赖包&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;em&gt;&amp;lt;!-- pom.xml 依赖 --&amp;gt;&lt;/em&gt;
&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;com.yomahub&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;liteflow-solon-plugin&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;最新版&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependencies&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;步骤 1：定义流程组件&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.core.NodeComponent;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.&lt;span style="color:#a626a4"&gt;annotation&lt;/span&gt;.Managed;

&lt;em&gt;// 普通组件示例&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;@Managed(&lt;span style="color:#50a14f"&gt;"paymentAction"&lt;/span&gt;)&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span&gt;&lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;PaymentAction&lt;/span&gt; &lt;span style="color:#c18401"&gt;extends&lt;/span&gt; &lt;span style="color:#c18401"&gt;NodeComponent&lt;/span&gt; &lt;/span&gt;{
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; void process() {
        PaymentContext context = &lt;span style="color:#a626a4"&gt;this&lt;/span&gt;.getContextBean(PaymentContext.&lt;span style="color:#a626a4"&gt;class&lt;/span&gt;);
        &lt;em&gt;// 执行支付逻辑&lt;/em&gt;
        System.&lt;span style="color:#a626a4"&gt;out&lt;/span&gt;.println(&lt;span style="color:#50a14f"&gt;"处理支付, 订单:"&lt;/span&gt; + context.getOrderId());
    }
}

&lt;em&gt;// 条件组件示例（用于分支判断）&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;@Managed(&lt;span style="color:#50a14f"&gt;"userCheck"&lt;/span&gt;)&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span&gt;&lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;UserCheck&lt;/span&gt; &lt;span style="color:#c18401"&gt;extends&lt;/span&gt; &lt;span style="color:#c18401"&gt;NodeComponent&lt;/span&gt; &lt;/span&gt;{
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; void process() {
        UserContext context = &lt;span style="color:#a626a4"&gt;this&lt;/span&gt;.getContextBean(UserContext.&lt;span style="color:#a626a4"&gt;class&lt;/span&gt;);
        &lt;span style="color:#a626a4"&gt;if&lt;/span&gt;(context.isVip()) {
            &lt;span style="color:#a626a4"&gt;this&lt;/span&gt;.setIsEnd(&lt;span style="color:#0184bb"&gt;true&lt;/span&gt;);  &lt;em&gt;// 终止流程&lt;/em&gt;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;步骤 2：配置流程规则&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;code&gt;resources/flow.yml&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;配置 EL 表达式规则：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;liteflow:&lt;/span&gt;
  &lt;span style="color:#986801"&gt;rule-source:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;config/flow.el.xml&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;code&gt;resources/config/flow.el.xml&lt;/code&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span style="color:#4078f2"&gt;&amp;lt;?xml version=&lt;span style="color:#50a14f"&gt;"1.0"&lt;/span&gt; encoding=&lt;span style="color:#50a14f"&gt;"UTF-8"&lt;/span&gt;?&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;flow&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;chain&lt;/span&gt; &lt;span style="color:#986801"&gt;name&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"orderProcess"&lt;/span&gt;&amp;gt;&lt;/span&gt;
        THEN(
            initOrder, 
            WHEN(
                checkInventory, 
                checkUserCredit
            ),
            SWITCH(choosePayWay).TO(
                CASE(aliPay).DO(aliPayAction),
                CASE(wechatPay).DO(wechatPayAction)
            ),
            AFTER(paymentAction).WHEN(userCheck)
        );
    &lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;chain&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;flow&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;步骤 3：初始化上下文并执行流程&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.core.FlowExecutor;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.flow.LiteflowResponse;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.*;

&lt;span style="color:#4078f2"&gt;@Controller&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;OrderController&lt;/span&gt; {

    &lt;span style="color:#4078f2"&gt;@Inject&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; FlowExecutor flowExecutor;

    &lt;span style="color:#4078f2"&gt;@Post&lt;/span&gt;
    &lt;span style="color:#4078f2"&gt;@Mapping("/submitOrder")&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;submitOrder&lt;/span&gt;&lt;span&gt;(&lt;span style="color:#4078f2"&gt;@Body&lt;/span&gt; OrderDTO order)&lt;/span&gt; {
        &lt;span style="color:#986801"&gt;OrderContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;OrderContext&lt;/span&gt;();
        context.setOrderId(order.getId());
        context.setAmount(order.getAmount());
        
        &lt;span style="color:#986801"&gt;LiteflowResponse&lt;/span&gt; &lt;span style="color:#986801"&gt;response&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; flowExecutor.execute2Resp(
            &lt;span style="color:#50a14f"&gt;"orderProcess"&lt;/span&gt;, 
            context, 
            OrderContext.class
        );
        
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; response.isSuccess() ? &lt;span style="color:#50a14f"&gt;"订单成功"&lt;/span&gt; : &lt;span style="color:#50a14f"&gt;"流程失败"&lt;/span&gt;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;三、高级特性应用&lt;/h2&gt; 
&lt;h3&gt;异步并行执行&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;em&gt;&amp;lt;!-- 配置并行节点 --&amp;gt;&lt;/em&gt;
&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;chain&lt;/span&gt; &lt;span style="color:#986801"&gt;name&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"parallelChain"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    THEN(
        a, 
        WHEN(b, c, d),  &lt;em&gt;&amp;lt;!-- b,c,d 并行执行 --&amp;gt;&lt;/em&gt;
        e
    );
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;chain&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;嵌套子流程&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;chain&lt;/span&gt; &lt;span style="color:#986801"&gt;name&lt;/span&gt;=&lt;span style="color:#50a14f"&gt;"mainFlow"&lt;/span&gt;&amp;gt;&lt;/span&gt;
    THEN(prepare, SUB(orderProcess), notify);
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;chain&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;组件降级处理&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.core.NodeComponent;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Managed;

&lt;span style="color:#4078f2"&gt;@Managed("paymentAction")&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;PaymentAction&lt;/span&gt; &lt;span style="color:#a626a4"&gt;extends&lt;/span&gt; &lt;span style="color:#c18401"&gt;NodeComponent&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Inject&lt;/span&gt;
    FallbackService fallbackService;
    
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;process&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {...}

    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;onError&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {
        &lt;em&gt;// 支付失败时执行补偿逻辑&lt;/em&gt;
        fallbackService.compensate();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;规则热更新&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; com.yomahub.liteflow.flow.FlowBus;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Managed;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.core.bean.LifecycleBean;

&lt;em&gt;// 动态添加规则&lt;/em&gt;
FlowBus.addChain(&lt;span style="color:#50a14f"&gt;"newChain"&lt;/span&gt;, &lt;span style="color:#50a14f"&gt;"THEN(a,b,c)"&lt;/span&gt;);

&lt;em&gt;// 监听规则变化&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;@Managed&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;FlowConfig&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;LifecycleBean&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;postStart&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; Throwable {
        FileWatcher.watch(Paths.get(&lt;span style="color:#50a14f"&gt;"config/flow"&lt;/span&gt;),
                () -&amp;gt; FlowBus.reloadRule());
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;四、监控与调试&lt;/h2&gt; 
&lt;h3&gt;流程跟踪&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#986801"&gt;LiteflowResponse&lt;/span&gt; &lt;span style="color:#986801"&gt;response&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; flowExecutor.execute2Resp(
    &lt;span style="color:#50a14f"&gt;"orderProcess"&lt;/span&gt;, 
    context, 
    OrderContext.class,
    &lt;em&gt;// 开启执行链路跟踪&lt;/em&gt;
    SlotCallbackBuilder.builder().build()
);

System.out.println(response.getExecuteStepStr());
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;输出示例：&lt;code&gt;initOrder[✓] =&amp;gt; checkInventory[✓] =&amp;gt; checkUserCredit[✓] =&amp;gt; ...&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;可视化监控（需企业版）&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;liteflow:&lt;/span&gt;
  &lt;span style="color:#986801"&gt;monitor:&lt;/span&gt;
    &lt;span style="color:#986801"&gt;enable-log:&lt;/span&gt; &lt;span style="color:#0184bb"&gt;true&lt;/span&gt;
    &lt;span style="color:#986801"&gt;queue-limit:&lt;/span&gt; &lt;span style="color:#986801"&gt;200&lt;/span&gt;
    &lt;span style="color:#986801"&gt;delay:&lt;/span&gt; &lt;span style="color:#986801"&gt;30&lt;/span&gt;
    &lt;span style="color:#986801"&gt;period:&lt;/span&gt; &lt;span style="color:#986801"&gt;120&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;五、最佳实践建议&lt;/h2&gt; 
&lt;h3&gt;上下文设计原则&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用独立 Context 对象传递流程数据&lt;/li&gt; 
 &lt;li&gt;避免在组件中操作数据库事务（应在 Service 层控制）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;组件规范&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;单个组件代码不超过 200 行&lt;/li&gt; 
 &lt;li&gt;组件命名采用"业务域+操作"格式（如：stockDeduct）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;异常处理&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;业务异常通过 throw BusinessException 中断流程&lt;/li&gt; 
 &lt;li&gt;系统异常自动触发 onError 回调&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;规则管理进阶&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;// 从数据库加载规则&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;@Managed&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;DBRuleLoader&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;RuleSource&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; String &lt;span style="color:#4078f2"&gt;loadRules&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; {
        &lt;span style="color:#a626a4"&gt;return&lt;/span&gt; ruleMapper.selectByApp(&lt;span style="color:#50a14f"&gt;"order-service"&lt;/span&gt;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;结语&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;通过 Solon 集成 LiteFlow，我们实现了：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;业务可视化编排：复杂流程通过 EL 表达式清晰定义&lt;/li&gt; 
 &lt;li&gt;组件热插拔：新增业务节点无需停服&lt;/li&gt; 
 &lt;li&gt;极致性能：单机万级 TPS 满足高并发场景&lt;/li&gt; 
 &lt;li&gt;灵活扩展：支持自定义节点、拦截器、上下文&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;在微服务架构下，LiteFlow 的轻量级特性使其成为业务流程编排的理想选择。其简洁的 API 设计让开发者能快速上手，而强大的异步并行、嵌套流程等特性又能支撑复杂业务场景。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362856</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362856</guid>
      <pubDate>Tue, 29 Jul 2025 01:52:26 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>🔥 830% 效能暴增！VTJ.PRO：AI 低代码的「双向自由」革命</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#404040"&gt;VTJ.PRO 是一款&lt;/span&gt;&lt;strong&gt;AI 驱动的企业级低代码开发平台&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#404040"&gt;，专注于前端开发领域，深度融合可视化设计、源码工程与 AI 智能引擎，旨在解决传统开发中的效率瓶颈与协作断层问题。以下从核心特性、技术架构、应用场景等维度综合介绍：&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;🧱 一、基础定位与技术特性&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;技术栈与定位&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Vue3 + TypeScript + Vite&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;构建，深度整合 ElementPlus、Axios、ECharts 等主流工具链，面向专业前端开发者提供「零学习成本」的低代码体验。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;核心能力包括：&lt;strong&gt;低代码设计器、多模态渲染引擎、AI 代码生成器&lt;/strong&gt;，支持双向源码/DSL（领域特定语言）智能转换，实现设计稿与代码的无损互转。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;核心设计原则&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;源码零污染&lt;/strong&gt;：采用设计器-渲染器分离架构，生成的代码为纯净 Vue 文件（.vue），无运行时依赖，可直接二次开发。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;自由双向穿梭&lt;/strong&gt;：可视化设计可一键输出标准 Vue 源码；已有 Vue 组件也能反向解析为低代码 DSL，在设计器中调整后切回源码维护，规避平台锁定风险。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e871959223311614b17de07384f5c222.gif" referrerpolicy="no-referrer"&gt;&lt;/h3&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;⚙️ 二、核心功能与技术突破&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;AI 智能引擎&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;多模态生成能力&lt;/strong&gt;：&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;文生代码（Text-to-Code）&lt;/strong&gt;：通过自然语言描述生成页面代码。&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;图生代码（Image-to-Code）&lt;/strong&gt;：上传设计图（JPG/PNG）自动识别布局并生成 Vue 组件。&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;设计稿转代码（Design-to-Page）&lt;/strong&gt;：直接解析 Figma/Sketch/&lt;strong&gt;MasterGo&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等工具的 JSON 文件，5 秒内生成响应式 Vue 代码，继承设计系统的约束与变量。&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;AI-CodeFix 引擎&lt;/strong&gt;（v0.12.58+）：&lt;br&gt; 动态检测 47 类代码风险（如 Props 未定义、样式作用域泄漏），自动修复成功率达 85%，调试时间从 2.1 小时压缩至 12 分钟。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;多模态渲染引擎&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;支持三种执行模式：&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;设计模式&lt;/strong&gt;：注入调试能力，实时交互；&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;运行模式&lt;/strong&gt;：移除插桩代码，渲染性能提升 300%；&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;VNode 模式&lt;/strong&gt;：无 ref 虚拟节点渲染，支撑高并发场景。&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;跨端输出&lt;/strong&gt;：一次设计同步生成 Web/H5/UniApp 三端代码，兼容 17 种设备模板。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;企业级工程闭环&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;物料库与模板&lt;/strong&gt;：内置多套企业级组件库与页面模板（如表单生成器、ECharts 集成），支持区块复用。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;私有化部署&lt;/strong&gt;：保障设计资产安全，支持定制代码转换策略适配内部规范。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//dca4a43a95ae127ccbe0f0a8f5548111.gif" referrerpolicy="no-referrer"&gt;&lt;/h3&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;三、应用场景与用户价值&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;典型场景&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;table cellspacing="0" style="border-collapse:collapse; max-width:max-content; width:max-content"&gt; 
    &lt;tbody&gt; 
     &lt;tr&gt; 
      &lt;th style="text-align:left"&gt;&lt;strong&gt;场景类型&lt;/strong&gt;&lt;/th&gt; 
      &lt;th style="text-align:left"&gt;&lt;strong&gt;解决方案&lt;/strong&gt;&lt;/th&gt; 
      &lt;th style="text-align:left"&gt;&lt;strong&gt;效能提升&lt;/strong&gt;&lt;/th&gt; 
     &lt;/tr&gt; 
    &lt;/tbody&gt; 
    &lt;tbody&gt; 
     &lt;tr&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;中后台管理系统&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;拖拽布局 + 表单生成器 + ECharts 集成&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;开发周期缩短 65%&lt;/td&gt; 
     &lt;/tr&gt; 
     &lt;tr&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;多端应用开发&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;一套 DSL 生成 Web/H5/UniApp 三端代码&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;适配效率提升 90%&lt;/td&gt; 
     &lt;/tr&gt; 
     &lt;tr&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;老项目升级&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;Vue2 组件反向解析为 DSL，渐进式重构&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;旧组件改造效率提升 80%&lt;/td&gt; 
     &lt;/tr&gt; 
     &lt;tr&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;设计稿转生产代码&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;MasterGo 设计稿分钟级生成 Vue 组件&lt;/td&gt; 
      &lt;td style="border-bottom:1px solid #e5e5e5; border-left-color:#e5e5e5; border-right-color:#e5e5e5; border-top-color:#e5e5e5"&gt;UI 开发从 3 天→10 分钟&lt;/td&gt; 
     &lt;/tr&gt; 
    &lt;/tbody&gt; 
   &lt;/table&gt; 
  &lt;/div&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;企业级价值&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;效率跃迁&lt;/strong&gt;：某电商企业 200+AI 生成组件经修复后直接部署，20 人日任务由 3 人 2 天完成，效率提升 830%。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;成本优化&lt;/strong&gt;：初级前端工作量减少 80%，维护成本降低 75%。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;strong&gt;资产沉淀&lt;/strong&gt;：自动归档组件至企业私有库，某制造企业复用率达 90%。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🛠️ 四、开发体验与部署&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;快速启动&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      &amp;nbsp;
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;pre&gt;&lt;em&gt;# 创建 Web 应用（PC 端）&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;npm&lt;/span&gt; create vtj@latest -- &lt;span style="color:#4078f2"&gt;-t&lt;/span&gt; app
&lt;em&gt;# 创建 H5 应用（移动端）&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;npm&lt;/span&gt; create vtj@latest -- &lt;span style="color:#4078f2"&gt;-t&lt;/span&gt; h5
&lt;em&gt;# 创建 UniApp 跨端应用&lt;/em&gt;
&lt;span style="color:#4078f2"&gt;npm&lt;/span&gt; create vtj@latest -- &lt;span style="color:#4078f2"&gt;-t&lt;/span&gt; uniapp&lt;/pre&gt; 
  &lt;/div&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;支持本地离线部署（推荐）与在线体验平台（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flcdp.vtj.pro%2F" target="_blank"&gt;https://lcdp.vtj.pro&lt;/a&gt;）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;开源仓库：&lt;a href="https://gitee.com/newgateway/vtj"&gt;https://gitee.com/newgateway/vtj&lt;/a&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//5d5d3c99baa922089038e0f490d54fee.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;生态兼容性&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;深度集成&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;若依（RuoYi）&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等主流开源框架，无缝接入 Spring Boot 后端权限系统。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0px; margin-right:0px"&gt;引擎可独立调用，支持构建自有低代码平台。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;💎 总结&lt;/h3&gt; 
&lt;p style="color:#404040; margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;VTJ.PRO 本质是「AI×低代码×工程自由」三位一体的生产力基座&lt;/strong&gt;：&lt;br&gt; 👉&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;对开发者&lt;/strong&gt;：保留源码自由，通过 AI 降低重复劳动；&lt;br&gt; 👉&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;对企业&lt;/strong&gt;：重构开发流程（产品稿 → AI 生成 → 开发者验收），实现「10 分钟交付」；&lt;br&gt; 👉&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;对生态&lt;/strong&gt;：国产化技术栈（Vue3+MasterGo+若依）的安全可控实践。&lt;br&gt; 其通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;双向代码穿梭&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;与&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;AI 质量防线&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;解决了低代码领域「效率与自由不可兼得」的终极矛盾，成为企业数字化转型的「加速引擎」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2dfc9b53e06e1f977050356e74804a16.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362853</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362853</guid>
      <pubDate>Thu, 17 Jul 2025 01:19:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>snail-job vsj1.7.0-beta1 发布，分布式重试服务平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;snail-job vsj1.7.0-beta1 已经发布，分布式重试服务平台。&lt;/p&gt; 
&lt;p&gt;此版本更新内容包括：&lt;/p&gt; 
&lt;h3&gt;✨ 优化（Optimizations）&lt;/h3&gt; 
&lt;h4&gt;OpenAPI 重构与增强&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;服务端 OpenAPI 改造：全面采用 HTTP 调用，计划在 v1.8.0 下线现有 gRPC 调用方式。&lt;/li&gt; 
 &lt;li&gt;客户端兼容：保持历史版本兼容，新增配置 snail-job.openapiV2=true 以启用新版本。&lt;/li&gt; 
 &lt;li&gt;模块合并：snail-job-common-server-api 与 snail-job-common-client-api 合并为 snail-job-common-model（对用户无感）。&lt;/li&gt; 
 &lt;li&gt;类迁移提示：com.aizuda.snailjob.client.model.ExecuteResult 迁移至 com.aizuda.snailjob.client.job.core.dto.ExecuteResult（当前版本未删除，请尽快迁移）。&lt;/li&gt; 
 &lt;li&gt;服务端模块调整 
  &lt;ul&gt; 
   &lt;li&gt;snail-job-server 改为 snail-job-server-dispatcher&lt;/li&gt; 
   &lt;li&gt;新增 snail-job-server-interface 具体结构参考 &lt;a href="https://gitee.com/link?target=https%3A%2F%2Fsnailjob.opensnail.com%2Fdocs%2Fquickstart%2Fproject_structure.html" target="_blank"&gt;项目结构&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;其他&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;删除，服务端 Netty RPC 逻辑，清理 Maven 依赖。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;修复问题（Fixes）&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;修复，重试调度幂等性问题。&lt;/li&gt; 
 &lt;li&gt;修复 REQUIRES_NEW 模式下未清除挂起缓存数据。&lt;/li&gt; 
 &lt;li&gt;修复 QLExpress 安全漏洞&lt;/li&gt; 
 &lt;li&gt;修复 SnailRetryEndPoint 无法被 SnailEndPointScanner 处理&lt;/li&gt; 
 &lt;li&gt;修复 OpenAPI 执行时原始上下文与临时上下文未合并的问题。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 本次版本重点完成 OpenAPI 的重构，以更好地满足 Python 和 Go 客户端的集成需求。同时，针对包结构进行了合理化调整，此变更对二次开发用户可能产生影响，请注意适配。&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/aizuda/snail-job/releases/vsj1.7.0-beta1"&gt;https://gitee.com/aizuda/snail-job/releases/vsj1.7.0-beta1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362822</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362822</guid>
      <pubDate>Wed, 16 Jul 2025 15:41:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>阿里云创始人王坚称 90% 的 AI 将在十年内消失</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里云创始人王坚近日在接受彭博电视采访时表示，自 ChatGPT 热潮后涌现的 AI 技术和服务中，&lt;strong&gt;约 90% 可能会在 5 到 10 年内消失&lt;/strong&gt;，因为这些应用并非 AI 技术的本质，反而造成了大众对 AI 能力的片面认知（如仅关注聊天机器人）。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/192416_z7K5_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;他指出，开发者需摆脱思维定势，以创造性思维探索更多实际应用场景，才能推动 AI 进入下一个发展阶段。&lt;/p&gt; 
&lt;p&gt;此外，王坚还批评硅谷企业&lt;strong&gt;高薪挖人&lt;/strong&gt;的做法，认为创新关键在于找到「对的人」而非「贵的人」，高薪策略并不一定能成功。他强调，中国作为全球最大科技实验室，具备成为创新热土的潜力。&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;王坚坦言，他在近二十年前并未预料到如今这场 AI 革命会来得如此之快。他当时能够设想的只是计算会像电力或石油一样重要。这种重要性至少还会持续几十年。对于中国，王坚坚信中国将继续成为创新的热土，部分原因是它是世界上最大的科技实验室之一。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362796</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362796</guid>
      <pubDate>Wed, 16 Jul 2025 11:24:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>商汤发布「悟能」具身智能平台</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;商汤科技在 WAIC 2025 大模型论坛上正式发布&lt;strong&gt;「悟能」具身智能平台&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;「悟能」以商汤「开悟」世界模型为核心引擎，依托商汤大装置提供的端侧和云侧算力支持，目标为机器人、智能设备赋予感知、视觉导航及多模态交互能力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-607bb635d2ffda5ab42975fcca7f70eb8db.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;「悟能」具身智能平台能为各类终端硬件赋予对万物的识别与理解能力，可嵌入端侧芯片实现端侧推理，还可让机器人在更多样的环境中实现路径规划与导航。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-1dd539a42f6aa81a6a1f39c32ae8e425a50.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;商汤科技表示，「悟能」具身智能平台可广泛适配包括汽车、机器人在内的各类终端，实现空间层面的现实世界互动。据介绍，商汤「开悟」世界模型能够仅凭自然语言描述，即可生成七路摄像头视角模拟数据，且不同视角下的几何位置高度对应。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/191445_LUjU_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;「开悟」世界模型还能够编辑真实世界，可对现实世界中的车辆等场景元素进行替换、删除、增补，创造更加多样的现实场景。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362795</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362795</guid>
      <pubDate>Wed, 16 Jul 2025 11:15:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Linux 智能手机「Liberux NEXX」众筹失败</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;西班牙 Liberux 团队推出的 &lt;strong&gt;Liberux NEXX&lt;/strong&gt; Linux 智能手机&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.indiegogo.com%2Fprojects%2Fliberux-nexx--3%23%2F" target="_blank"&gt;众筹失败&lt;/a&gt;，仅筹集到约 1/10 的目标资金（1,358,491 港币，约合 124 万元人民币），而原定目标为 13,242,895 港币（约合 1209.2 万元人民币）。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/190110_6t0h_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-215c64da08adc5b16cd48c946fcaf091abb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这款手机基于 &lt;strong&gt;Debian 13&lt;/strong&gt; 的 &lt;strong&gt;LiberuxOS&lt;/strong&gt; 系统，主打隐私保护和耐用性，配备 6.34 英寸 2400×1080 OLED 屏幕，顶部有 3 个硬件级物理开关（可分别关闭麦克风与相机、Wi-Fi 与蓝牙、蜂窝网络与 GNSS 定位），搭载 Rockchip RK3588S 处理器、32GB LPDDR4x RAM 和 512GB eMMC 存储，支持 5G、Wi-Fi 5 和蓝牙 5.0，众筹价 790 欧元起。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362793</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362793</guid>
      <pubDate>Wed, 16 Jul 2025 11:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>腾讯研究院发布「AI Coding ⾮共识报告」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;腾讯研究院发布了一份《AI Coding⾮共识报告》&lt;span&gt;，这份 54 页的研究报告系统梳理了 AI 编程（AI Coding）如何从根本上颠覆传统软件开发逻辑，并指出行业在高速发展中所面临的七大非共识与三大未来趋势。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9e50a6c9732fa31fd5bf65748417005080d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;七大非共识&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;非共识 01：AI Coding 的最佳产品形态是什么？——本地 VS 云端&lt;/li&gt; 
 &lt;li&gt;非共识 02：AI Coding 产品选择什么模型？——自研 VS 第三方&lt;/li&gt; 
 &lt;li&gt;非共识 03：AI Coding 给用户的价值有多大？——提效 VS 降效&lt;/li&gt; 
 &lt;li&gt;非共识 04：AI Coding 产品理想付费模式是什么？——固定 VS 按需&lt;/li&gt; 
 &lt;li&gt;非共识 05：大企业推进 AI Coding 应用的态度？——激进 VS 渐进&lt;/li&gt; 
 &lt;li&gt;非共识 06：AI Coding 对组织发展的影响？——裁员 VS 扩张&lt;/li&gt; 
 &lt;li&gt;非共识 07：AI Coding 的未来市场格局是怎样？——专业 VS 普惠&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;三大未来趋势&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;「意图驱动」成为主流：自然语言将取代代码成为软件开发的主要交互方式&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;「Vibe Coding（氛围编程）」兴起：非技术人员通过自然语言即可构建应用&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;「品味」成为核心竞争力：在「丰饶时代」，谁能定义好产品，谁就能胜出&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/184505_hPwL_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;完整内容查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fp5szrZfb6dzMze7p6Aeyeg" target="_blank"&gt;https://mp.weixin.qq.com/s/p5szrZfb6dzMze7p6Aeyeg&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362790</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362790</guid>
      <pubDate>Wed, 16 Jul 2025 10:47:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>JPROCMS 1.5 发布，开源免费 Java CMS 网站内容管理系统，支持 SaaS</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;strong&gt;更新日志&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;新增功能-管理用户可自行设置默认站点&lt;/p&gt; 
&lt;p&gt;新增门户获取通知公告功能数据接口和标签&lt;/p&gt; 
&lt;p&gt;新增栏目批量创建功能，新增密钥类字段脱敏处理&lt;/p&gt; 
&lt;p&gt;完善应用停止的时候删除 xxljob 定时任务避免任务重复&lt;/p&gt; 
&lt;p&gt;修复 ftp 模式下编辑模板 bug 和加载模板错误 bug&lt;/p&gt; 
&lt;p&gt;修复后台友情链接数据没有区分站点 bug&lt;/p&gt; 
&lt;p&gt;修复内容自定义字段数据修改报错 bug&lt;/p&gt; 
&lt;p&gt;优化易错词初始化缓存采用异步避免偶尔刚启动报错问题&lt;/p&gt; 
&lt;p&gt;修复获取 ip 地区排除本地 ip 报错&lt;/p&gt; 
&lt;p&gt;修复门户服务在接口文档无法调试问题&lt;/p&gt; 
&lt;p&gt;修复栏目新窗口打开设置无效 bug 部分 jar 版本更新&lt;/p&gt; 
&lt;p&gt;修复站点删除报错 bug&lt;/p&gt; 
&lt;p&gt;优化基础服务的可不必安装 libreoffice 启动&lt;/p&gt; 
&lt;p&gt;修复静态化在系统设置协议为空的情况下报错 bug&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;平台简介&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;jprocms 免费可商用 Java 开源内容管理群系统 (java cms)、Java 建站系统，支持信创国产环境。使用 SpringCloud 、SpringBoot、MyBatisPlus、FreeMarker、Vue3、ElementPlus 等技术开发。使用 Apache-2.0 开源协议，可免费用于商业网站。&lt;/p&gt; 
&lt;p&gt;可使用模板 (Freemarker)+ 标签或 API 方式制作网站群页面。支持自定义字段存储及字段可视化设计，支持自定义字段搜索。&lt;/p&gt; 
&lt;p&gt;技术上选择主流、先进、方便用户二次开发。设计上强调 「简单」、「灵活」，降低系统维护成本和二次开发难度。功能使用上也要求 「简单」，避免复杂的使用逻辑。&lt;/p&gt; 
&lt;p&gt;演示站前台：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.jprocms.com" target="_blank"&gt;https://demo.jprocms.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;演示站后台：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.jprocms.com%2Fadmin%2Findex.html" target="_blank"&gt;https://demo.jprocms.com/admin/index.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;API 文档：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.jprocms.com%2Fdoc.html" target="_blank"&gt;https://demo.jprocms.com/doc.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;演示模板：&lt;a href="https://gitee.com/jprocms/jprocms-template.git"&gt;https://gitee.com/jprocms/jprocms-template.git&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;管理后台 vue 源码：&lt;a href="https://gitee.com/jprocms/jprocms-ui-admin-v3.git"&gt;https://gitee.com/jprocms/jprocms-ui-admin-v3.git&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;安装部署使用标签等文档： &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.jprocms.com%2Fdownload%2Fjprocms-doc.zip" target="_blank"&gt;https://demo.jprocms.com/download/jprocms-doc.zip&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Java 后端：master 分支为 JDK 8 + Spring Boot 2.7 master-boo3 分支为 JDK 17 + Spring Boot 3.4 管理后台的电脑端：Vue3 提供 element-plus 后端采用 Spring Cloud Alibaba 微服务架构，注册中心 + 配置中心 Nacos，定时任务 XXL-Job，服务网关 Gateway 数据库可使用 MySQL、Oracle、PostgreSQL、SQL Server、MariaDB、国产达梦 DM 、人大金仓、瀚高数据库、高斯、等，基于 MyBatis Plus、Redis + Redisson 操作，消息队列可使用 Event、Redis、RabbitMQ、Kafka、RocketMQ 等，权限认证使用 Spring Security &amp;amp; Token &amp;amp; Redis，支持多终端、多种用户的认证系统，支持 SSO 单点登录，支持加载动态权限菜单，按钮级别权限控制，Redis 缓存提升性能，支持 SaaS 多租户系统，可自定义每个租户的权限，提供透明化的多租户底层封装，高效率开发，使用代码生成器可以一键生成 Java、Vue 前后端代码、SQL 脚本、接口文档，支持单表、树表、主子表，集成阿里云、腾讯云等短信渠道，集成 MinIO、阿里云、腾讯云、七牛云等云存储服务&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;功能亮点&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;支持自定义字段查询，极大地增强了系统的灵活性。&lt;/p&gt; 
&lt;p&gt;静态化支持 SSI，可将页头页尾独立生成引入，可实现方便快捷替换避免全量生产所有静态页&lt;/p&gt; 
&lt;p&gt;工作流支持配置不同栏目使用不同流程，配置工作流的流程模型的可视化，提供 7 种任务分配规则，查看我发起的工作流程，支持新建、取消流程等操作，高亮流程图、审批时间线，支持委派，加签减签等非常灵活满足各种流程需求&lt;/p&gt; 
&lt;p&gt;支持 Oauth2,开发单点登录更快捷&lt;/p&gt; 
&lt;p&gt;支持 saas 化，减少重复部署，提高生产效率&lt;/p&gt; 
&lt;p&gt;审计日志支持字段级别变更记录，安全可靠可查&lt;/p&gt; 
&lt;p&gt;自动识别攻击 ip 自动屏蔽策略可设置，提高系统安全性&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;运行环境：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;jprocms 支持全系列 JAVA 运行环境，包括国产操作系统、中间件、数据库。操作系统支持：中标麒麟、银河麒麟、统信、中科方德、Windows、Linux、Unix；中间件支持：东方通 、金蝶、宝兰德、中创、Tomcat；数据库支持：Mysql、达梦、人大金仓、神通、南大通用、瀚高 、高斯等国产数据库；&lt;/p&gt; 
&lt;h3&gt;系统功能&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;用户管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;用户是系统操作者，该功能主要完成系统用户配置&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;角色管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;角色菜单权限分配、设置角色按机构进行数据范围权限划分&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;菜单管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置系统菜单、操作权限、按钮权限标识等，本地缓存提供性能&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;部门管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置系统组织机构（公司、部门、小组），树结构展现支持数据权限&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;岗位管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置系统用户所属担任职务&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;租户管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置系统租户，支持 SaaS 场景下的多租户功能&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;租户套餐&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置租户套餐，自定每个租户的菜单、操作、按钮的权限&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;字典管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;对系统中经常使用的一些较为固定的数据进行维护&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;短信管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;短信渠道、短息模板、短信日志，对接阿里云、腾讯云等主流短信平台&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;邮件管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;邮箱账号、邮件模版、邮件发送日志，支持所有邮件平台&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;站内信&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统内的消息通知，提供站内信模版、站内信消息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;操作日志&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;操作日志记录了维护相关数据的详细信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;登录日志&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统登录日志记录查询，包含登录异常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;错误码管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统所有错误码的管理，可在线修改错误提示，无需重启服务&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;通知公告&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统通知公告信息发布维护&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;敏感词&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置系统敏感词，支持标签分组&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;应用管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理 SSO 单点登录的应用，支持多种 OAuth2 授权方式&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;地区管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;展示省份、城市、区镇等城市信息，支持 IP 对应城市&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;会员组管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;前台注册的用户都是会员用户，这里前台注册的会员，默认是给系统组的会员组，&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;会员管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;会员管理是前台门户上注册的用户，可更改密码，分配会员组&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;工作流程&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;流程模型&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置工作流的流程模型，支持文件导入与在线设计流程图，提供 7 种任务分配规则&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;流程表单&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拖动表单元素生成相应的工作流表单，覆盖 Element UI 所有的表单组件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;用户分组&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;自定义用户分组，可用于工作流的审批分组&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;我的流程&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;查看我发起的工作流程，支持新建、取消流程等操作，高亮流程图、审批时间线&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;待办任务&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;查看自己【未】审批的工作任务，支持通过、不通过、转发、委派、退回等操作&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;已办任务&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;查看自己【已】审批的工作任务，未来会支持回退操作&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;OA 请假&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;作为业务自定义接入工作流的使用示例，只需创建请求对应的工作流程，即可进行审批&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;基础设施&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;代码生成&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;前后端代码的生成（Java、Vue、SQL、单元测试），支持 CRUD 下载&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;API 接口&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 Swagger 自动生成相关的 RESTful API 接口文档&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;数据库文档&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基于 Screw 自动生成数据库文档，支持导出 Word、HTML、MD 格式&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;表单构建&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;拖动表单元素生成相应的 HTML 代码，支持导出 JSON、Vue 文件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;文件服务&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;支持将文件存储到 S3（MinIO、阿里云、腾讯云、七牛云）、本地、FTP、数据库等&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Redis 监控&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;监控 Redis 数据库的使用情况，使用的 Redis Key 管理&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;微信公众号&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;账号管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置接入的微信公众号，可支持多个公众号&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;数据统计&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;统计公众号的用户增减、累计用户、消息概况、接口分析等数据&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;粉丝管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;查看已关注、取关的粉丝列表，可对粉丝进行同步、打标签等操作&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;消息管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;查看粉丝发送的消息列表，可主动回复粉丝消息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;自动回复&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;自动回复粉丝发送的消息，支持关注回复、消息回复、关键字回复&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;标签管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;对公众号的标签进行创建、查询、修改、删除等操作&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;菜单管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;自定义公众号的菜单，也可以从公众号同步菜单&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;素材管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理公众号的图片、语音、视频等素材，支持在线播放语音、视频&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;图文草稿箱&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;新增常用的图文素材到草稿箱，可发布到公众号&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;图文发表记录&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;查看已发布成功的图文素材，支持删除操作&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;栏目&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;栏目管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;栏目管理、支持自动推送内容的采集规则设置，根据设置的栏目模型动态维护栏目相关信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;栏目回收站&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;删除的栏目先进入了回收站，防止误操作&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;内容&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;内容管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;内容数据的维护支持推送，复制，设置区域标记等。批量发布下线、置顶、定时下线置顶等，设置相关阅读内容&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;待审核内容&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;支持工作流的待我审批内容&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;内容索引&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;支持后台内容索引查询内容下线和删除&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;静态化&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;支持静态化任务操作，可查看静态化失败日志，进度等，可全站生成，自动触发生成，支持 ssi 局部页头页尾文件生成&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;配置&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统配置&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;对访问前缀、上传、邮件、存储、注册、安全等配置&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;站点管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理门户站群的站点相关信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;模型管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理栏目和内容字段信息的模型信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;模板管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;门户模板文件管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;资源管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;门户样式、图片文件等管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;友情链接&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;友情外链管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;词汇管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;热搜词等管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Tag 词管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;内容自动关联 tag 词管理&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;互动&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;留言板管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理留言信息和回复等&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;投票管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理投票和查看投票结果&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;问卷调查管理&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;管理问卷和查看问卷结果&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;安全&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;敏感词检测&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;检查现有内容数据是否有敏感词&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Ip 限制黑名单&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Ip 限制黑名单&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统防火墙记录&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录门户前台攻击行为提交的 ip 参数等&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;安全配置&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置门户接口安全以及后台 ip 限制访问&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;统计&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;受访页面&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录受访问页面的地址、ip、uv、pv&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;入口页面&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录入口页面的地址、ip、uv、pv&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;访问趋势&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录按时间 ip、uv、pv 变化趋势&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;访问来源&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录不同来源的 ip、uv、pv&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;地域分布&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录不同地域的 pv&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;新老访客&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录新老访客的占比 pv uv 访问时长，平级访问页数，跳出率&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;访客环境&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;记录不同操作系统、浏览器设备占比&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;技术栈&lt;/h2&gt; 
&lt;h3&gt;微服务&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-dependencies&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Maven 依赖版本管理&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-framework&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Java 框架拓展&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-module-system&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;系统功能的 Module 模块&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-module-cms-biz&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CMS 后台功能的 Module 模块&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-module-cms-portal&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;CMS 门户功能的 Module 模块&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-module-infra&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;基础设施的 Module 模块&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-module-bpm&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;工作流程的 Module 模块&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;jpro-module-mp&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;微信公众号的 Module 模块&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;框架&lt;/h3&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Liberation Sans&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Wenquanyi Micro Hei&amp;quot;,&amp;quot;WenQuanYi Zen Hei&amp;quot;,&amp;quot;ST Heiti&amp;quot;,SimHei,SimSun,&amp;quot;WenQuanYi Zen Hei Sharp&amp;quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:856px; word-break:initial; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;框架&lt;/th&gt; 
   &lt;th&gt;说明&lt;/th&gt; 
   &lt;th&gt;版本&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-cloud-alibaba" target="_blank"&gt;Spring Cloud Alibaba&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;微服务框架&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;2021.0.9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Falibaba%2Fnacos" target="_blank"&gt;Nacos&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;配置中心 &amp;amp; 注册中心&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;2.3.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fapache%2Frocketmq" target="_blank"&gt;RocketMQ&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;消息队列&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;5.2.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fxuxueli%2Fxxl-job" target="_blank"&gt;XXL Job&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;定时任务&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;2.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fspring-cloud%2Fspring-cloud-gateway" target="_blank"&gt;Spring Cloud Gateway&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;服务网关&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;3.1.9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.mysql.com%2Fcn%2F" target="_blank"&gt;MySQL&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;数据库服务器&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;5.7 / 8.0+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Falibaba%2Fdruid" target="_blank"&gt;Druid&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;JDBC 连接池、监控组件&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1.2.23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fmp.baomidou.com%2F" target="_blank"&gt;MyBatis Plus&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MyBatis 增强工具包&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;3.5.7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fdynamic-datasource.com%2F" target="_blank"&gt;Dynamic Datasource&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;动态数据源&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;4.3.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fredis.io%2F" target="_blank"&gt;Redis&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;key-value 数据库&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;5/ 6/7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fredisson%2Fredisson" target="_blank"&gt;Redisson&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Redis 客户端&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;3.32.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Ftree%2Fmaster%2Fspring-webmvc" target="_blank"&gt;Spring MVC&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;MVC 框架&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;5.3.39&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-security" target="_blank"&gt;Spring Security&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Spring 安全框架&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;5.8.14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fhibernate%2Fhibernate-validator" target="_blank"&gt;Hibernate Validator&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;参数校验组件&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;6.2.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fflowable%2Fflowable-engine" target="_blank"&gt;Flowable&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;工作流引擎&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;6.8.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/xiaoym/knife4j"&gt;Knife4j&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Swagger 增强 UI 实现&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;4.5.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FFasterXML%2Fjackson" target="_blank"&gt;Jackson&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;JSON 工具库&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;2.13.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fmapstruct.org%2F" target="_blank"&gt;MapStruct&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Java Bean 转换&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1.5.5.Final&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fprojectlombok.org%2F" target="_blank"&gt;Lombok&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;消除冗长的 Java 代码&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;1.18.34&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fjunit.org%2Fjunit5%2F" target="_blank"&gt;JUnit&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Java 单元测试框架&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;5.8.2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmockito%2Fmockito" target="_blank"&gt;Mockito&lt;/a&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Java Mock 框架&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;4.8.0&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362788</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362788</guid>
      <pubDate>Wed, 16 Jul 2025 10:44:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>华为在 WAIC 现场展示升腾 384 超节点真机（Atlas 900 A3 SuperPoD）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;华为在 2025 世界人工智能大会（WAIC）首次线下展出了升腾 384 超节点真机，即 Atlas 900 A3 SuperPoD。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-03939f41c57a57852f17b4b230bb8ec49ff.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该产品基于超节点架构，通过总线技术实现 384 个 NPU 之间的大带宽低时延互联，解决集群内计算、存储等各资源之间的通信瓶颈。通过系统工程的优化，实现资源的高效调度，让超节点像一台计算机一样工作。&lt;/p&gt; 
&lt;p&gt;相比传统集群，主要有以下 3 大优势：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;超大带宽：超节点内任意两个 AI 处理器之间通信带宽，相较于传统架构提升 15 倍，超节点内单跳时延降低 10 倍。&lt;/li&gt; 
 &lt;li&gt;超低时延：升腾超节点支持全局内存统一编址，具备更高效的内存语义通信能力。通过更低时延指令级内存语义通信，可满足大模型训练/推理中的小包通信需求，提升专家网络小包数据传输及离散随机访存通信效率。升腾 384 超节点是业界唯一突破 Decode 时延 15ms 的方案，满足实时深度思考下的用户体验需求。&lt;/li&gt; 
 &lt;li&gt;超强性能：经过实际测试，在升腾超节点集群上，LLaMA3 等千亿稠密模型训练性能可达传统集群的 2.5 倍以上。在通信占比更高的 Qwen、DeepSeek 等多模态、MoE 模型上，可以达到 3 倍以上的提升。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;据了解，升腾 384 超节点首创将 384 颗升腾 NPU 和 192 颗鲲鹏 CPU 通过全新高速网络 MatrixLink 全对等互联，形成一台超级「AI 服务器」，其算力总规模达 300Pflops，是英伟达 NVL72 的 1.7 倍。&lt;/p&gt; 
&lt;p&gt;网络互联总带宽达 269TB/s，比英伟达 NVL72 提升 107%；内存总带宽达 1229TB/s，比英伟达 NVL72 提升 113%；单卡推理吞吐量跃升到 2300 Tokens/s。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-32beeb3971ee73f4b99e7394a492c09ec0c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;华为官方透露，目前业界已基于升腾适配和开发超过 80 个大模型，在基础大模型方面多个技术方向均有积累，如讯飞星火认知、DeepSeek、Qwen、鹏城、LLaMA 等。同时，升腾联合 2700 +行业合作伙伴，共同孵化了超过 6000 +个行业解决方案。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362784</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362784</guid>
      <pubDate>Wed, 16 Jul 2025 10:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>软件业质效提升迎机遇</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;今年上半年，软件和信息技术服务业高质量发展扎实推进，呈现出稳增长、增效能、强能力的特点。1 月至 5 月，软件业务收入 55788 亿元，同比增长 11.2%；实现利润总额 6721 亿元，同比增长 12.8%。信息技术服务收入 38096 亿元，同比增长 12.0%，占全行业收入的 68.3%。其中，云计算、大数据服务共实现收入 5855 亿元，同比增长 11.2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;当前，人工智能正以前所未有的深度和广度重塑软件业，为其带来新的增长机遇。专家预计，今年我国软件业有望继续保持两位数增长态势。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;盈利质量持续改善&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;上半年，我国软件业在复杂的宏观经济环境中，展现出强大的发展韧性和内生动力，增长稳健，质效提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;中国电子信息产业发展研究院信息化与软件产业研究所软件产业研究室主任杨婉云表示，软件产业盈利质量持续改善。1 月至 5 月，利润总额增速较收入增速高 1.6 个百分点，说明软件企业运营效率改善、高附加值业务占比提升以及商业模式优化。同时，一季度软件上市企业营收同比增长 5.1%，较去年同期增速提升 2.4 个百分点，亏损面大幅收窄，较去年同期收窄 20 亿元，企业经营质量和盈利能力有所增强。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;从国际市场看，前 5 个月，软件业务出口额达 227.1 亿美元，同比增长 3.3%，较去年同期由负转正。这主要得益于新兴市场拓展，以及在人工智能、云计算等领域的技术优势开始转化为出口竞争力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;从区域发展角度看，产业集聚效应与协同发展态势并存。东部地区依然是产业发展的核心，贡献全国 84.2% 的软件业务收入。京津冀和长三角两大城市群作为创新策源地，同比分别实现了 12.3% 和 11.9% 的增长，引领作用突出。北京、上海、江苏、山东、广东 5 个软件重点省市的地位依然稳固。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「软件业应用融合度高，软件产品已融入经济社会各个领域数智化进程。」赛智产业研究院院长赵刚介绍，截至 6 月，互联网普及率已达 79.7%，农村互联网普及率达 69.2%，重点工业企业数字化研发设计工具普及率超过 84.1%，移动用户上网流量连续 6 个月实现两位数增长。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;浪潮集团副总裁、浪潮数字企业总经理魏代森表示，在政策引导、市场需求升级、技术迭代等多种因素驱动下，实体经济数字化转型进程加快。上半年，我国软件业依托人工智能、大数据、物联网等新一代信息技术，驱动企业核心业务场景数字化再造，推动实体经济数字化转型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;人工智能重塑行业&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;人工智能正为软件业注入新的活力和创新动力。杨婉云认为，人工智能驱动软件开发范式变革，实现成本效率优化。一方面，AI 辅助开发工具大规模应用，通过智能代码生成、测试和调试，显著提升研发效率。另一方面，以 DeepSeek 等为代表的通用大模型，其相对低的调用成本和强大的基础能力，使得过去昂贵的大模型技术得以迅速普及，让广大中小企业和开发者能够以较低门槛开发和部署 AI 应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;赵刚表示，随着基础大模型、行业大模型、智能体、具身智能等技术不断革新，人工智能技术促进软件业全产业链迭代升级。人工智能基础大模型和行业大模型算法加快创新。截至 6 月 30 日，我国累计有 439 款生成式人工智能服务完成备案，有 233 款生成式人工智能应用或功能完成登记。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;开源体系建设不断完善。DeepSeek 以软补硬、开源传播、生态优先的创新模式有效激发了行业开源创新氛围，多家科技型企业推出一批开源软件成果，比如，仓颉编程语言、星环车载操作系统、文心大模型等加速发展。人工智能、人形机器人、自动驾驶等领域的开源社区加快建设。开源鸿蒙生态加速演进，截至 6 月底，搭载开源鸿蒙操作系统的产品种类超 1200 款，总量超 11.9 亿台，上架应用与元服务数量超 2.5 万个，生态伙伴超 450 家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;人工智能催生应用新蓝海，构建企业「第二增长曲线」。杨婉云介绍，AI 驱动形成新市场。自 2 月以来，智慧城市、金融、能源、医疗等重点行业领域智能化转型需求大量释放，基于 DeepSeek 等通用大模型底座的各类 AI 应用加速落地。据统计，上半年全国大模型相关中标项目累计已达 1810 个，超过 2024 年全年总量。AI 产品及服务成为骨干企业业务增长的新动力，例如，抖音集团上半年中标多个行业项目。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;360 集团创始人周鸿祎表示，数智时代最鲜明的特征可概括为「一切皆可编程，万物均要互联，大数据驱动业务，AI 提高生产力」，即「软件定义世界」。这意味着大众衣食住行、企业经营和政府运转都架构在网络、软件和数据之上，带来前所未有的风险。应对 AI 时代的新型安全挑战，周鸿祎提出「以模制模」的思路：「用大模型来对付大模型，推出大模型衞士解决大模型遭受攻击、隐私泄露、内容出错等风险，并缓解幻觉问题。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「在政策与技术双重驱动下，AI 大模型和开源模式将进一步提升新产品开发效率，赋能关键软件产品智能化升级。」魏代森说。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;技术驱动创新加速&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;我国软件业多年保持高速增长原因何在？赵刚分析，软件技术创新活跃，新产品不断更新换代；国产软件产品竞争力不断提升，市场占有率持续扩大；数字经济与实体经济融合不断深入，市场需求持续旺盛。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「宏观需求、技术创新和政策环境三大引擎共同构成了强大、持久的驱动力体系。」杨婉云说，其中，技术引擎带来创新驱动。近年来，开源、云与 AI 三重趋势叠加，为软件产业创新提供前所未有的加速度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;首先是开源模式普及，开源已成为软件技术和产业创新的主导范式，极大降低了创新门槛。我国拥有庞大的开发者群体，国内开源社区的活跃度和企业参与度持续提升，这不仅加速软件产品成熟，也促使人们从开源使用者逐步向贡献者和引领者转变。其次是云计算全面渗透，SaaS（软件即服务）等模式创新，改变了软件的交付和商业模式，推动软件产品向按需订阅、即开即用的服务转变。这不仅为软件企业开辟了持续性收入的新来源，也让众多中小企业能以更低的成本享受到先进的数字化工具，极大拓宽了软件的应用广度和深度。最后也是当前最受关注的，以大模型为代表的 AI 技术正为软件业注入新活力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「技术创新是核心驱动力。」魏代森表示，中国软件企业不断加大对技术研发的投入，特别是人工智能、大数据等新兴技术领域取得显著进展，推动软件技术创新升级，提高软件产品的性能和质量。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;工业和信息化部信息通信发展司司长谢存表示，将推动软件和信息技术服务业进一步提质增效，组织开展「人工智能+软件」行动，加速软件智能化进程。聚力打造优质开源项目，深入推进以贡献为导向的开源人才评价，营造更具吸引力、包容性和创造力的开源生态。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;杨婉云判断，上半年 11.2% 的收入增长为软件业全年奠定了坚实基础。根据国家统计局数据，6 月份互联网软件及信息技术服务位于 55% 以上较高景气区间。数字中国建设深入推进，进一步加快传统产业智能化改造和数字化转型，不断释放新的市场空间。而以大模型为代表的 AI 技术加速落地，也将为产业增长注入新动能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「全年看，我国经济保持稳定增长的态势明显。在各行业中，软件业是技术创新活跃、增长动力充足、市场规模稳定的重要行业。预计，全年软件业仍将保持 10% 以上的增速，人工智能大模型、云计算、大数据、集成电路设计、电商平台技术服务等细分领域仍将保持较高增长率。」赵刚说。（经济日报记者，黄 鑫）&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362780</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362780</guid>
      <pubDate>Wed, 16 Jul 2025 10:28:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>智谱今晚发布最新 SOTA 开源模型 GLM-4.5</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;据多方媒体报道，&lt;strong&gt;智谱&lt;/strong&gt;将于&lt;strong&gt;今晚（7 月 28 日）&lt;/strong&gt; 正式发布其最新开源大模型 &lt;strong&gt;GLM-4.5&lt;/strong&gt; 系列，该系列采用全新的&lt;strong&gt;混合专家（MoE）架构&lt;/strong&gt;，定位为&lt;strong&gt;多模态可扩展大模型&lt;/strong&gt;，具备高吞吐推理、结构化工具调用、可解释推理追踪、分布式负载均衡等特性，支持文本（T）、图像（I）、扩展模态（E+）和视觉扩展（V+）。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/181911_bBvy_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;GLM-4.5 系列预计包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GLM-4.5&lt;/strong&gt;（355B-A32B，3550 亿总参数，320 亿激活参数）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GLM-4.5-Air&lt;/strong&gt;（106B-A12B，1060 亿总参数，120 亿激活参数）&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/181926_PTA6_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该模型将以 &lt;strong&gt;MIT 协议开源，允许商用&lt;/strong&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362778</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362778</guid>
      <pubDate>Wed, 16 Jul 2025 10:20:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>金山办公发布原生 Office 智能体 WPS 灵犀</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;金山办公已正式发布 WPS AI 3.0 版本——WPS 灵犀。由于用户只需通过自然语言、多轮对话即可完成文档创作、演示文稿生成及语音助手等功能，全程无需复杂操作和外部跳转，因此新品被视为真正意义上的原生 Office 办公智能体。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「WPS AI 3.0 的发布预示着办公 AI 的能力已从工具升级为 AI 助理。我们希望 WPS 用户都能拥有好用的 AI 助理，以低使用门槛的人机交互模式，轻松地完成各项工作。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="302" src="https://oscimg.oschina.net/oscnet/up-4ad5a6e53929e4d627083b60bf6b551f077.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;WPS 灵犀与 WPS Office 深度协同。目前在 WPS Office 的部分组件中已经形成了左侧 Office 套件、右侧 WPS 灵犀的同屏交互形态。用户直接在右侧的对话框中用自然语言提出需求，AI 在识别用户意图后，即可对左侧文档区域进行修改，全程无需跳转其他应用。相比于其他产品，灵犀具备多轮对话、修改可控、格式保留等优势，能控制 AI 生成用户真实可用的成果。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;截至 2025 年 3 月底，WPS Office 全球月度活跃设备数为 6.47 亿。WPS 灵犀的发布即交付，将推动办公智能体的史上最大规模应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;金山办公助理总裁田然介绍，经过过去一年对 AI 与办公软件关系的全新理解和技术实践，WPS AI 3.0 正在探索重新定义用户、AI 与软件三者的交互关系，推动 AI 办公向 Agentic Software 演进（代理式软件，即更强大更智能的软件)。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2023 年，金山办公推出 WPS AI ，围绕 AIGC（内容创作）、 Copilot （智慧助理）、 Insight （知识洞察）三大方向推出系列 AI 功能，并将其嵌入到 WPS 的各大组件；2024 年，推出 WPS AI 2.0，聚焦企业特定场景，为组织构建「企业大脑」，用 AI 促进企业知识的智能化应用；2025 年，推出以 WPS 灵犀为核心的 WPS AI 3.0，打造人与 AI 助理多轮对话、持续修改的全新交互方式，实现原生 Office 环境下的智能体服务。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362762</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362762</guid>
      <pubDate>Wed, 16 Jul 2025 09:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 董事会主席：如果你想快速烧掉百万美元，就开发自己的 AI 模型吧</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.businessinsider.com%2Fopenai-chairman-bret-taylor-ai-model-costs-destroy-capital-2025-7" target="_blank"&gt;据《商业内幕》报道&lt;/a&gt;，OpenAI 董事会主席布雷特·泰勒（Bret Taylor）在接受媒体采访时直言，&lt;strong&gt;「如果你想快速烧掉百万美元，就去开发自己的 AI 模型吧」&lt;/strong&gt;。他指出，训练一个前沿大模型的成本极其高昂，&lt;strong&gt;动辄数百万美元&lt;/strong&gt;，而且模型本身还会迅速贬值。&lt;/p&gt; 
&lt;p&gt;他强调，除非你是 OpenAI、Anthropic、谷歌或 Meta 这类资金雄厚的科技巨头，否则几乎不可能独立承担这样的投入。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0728/173113_JMWh_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Taylor 明确表示，从零开始构建模型几乎等于「烧掉资本」。他将自制模型形容为「快速贬值的资产」，而且还不便宜，成本可能高达数百万美元。「别自己做。你可以租赁一些模型，也有开源的。」&lt;/p&gt; 
&lt;p&gt;Taylor 建议，创业者应&lt;strong&gt;避免从零开始训练模型&lt;/strong&gt;，而是专注于&lt;strong&gt;构建应用、服务或 AI 工具市场&lt;/strong&gt;，并考虑通过&amp;nbsp;&lt;strong&gt;API 调用或开源模型&lt;/strong&gt;来实现产品落地。他认为，这种模式不仅更可持续，也更符合当前 AI 行业的整合趋势。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362761</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362761</guid>
      <pubDate>Wed, 16 Jul 2025 09:32:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>1Panel 开源面板 GitHub Star 数量突破 30,000</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style="color:#000000; text-align:start"&gt;截至 2025 年 7 月 23 日 20:00，飞致云旗下开源项目——1Panel 开源 Linux 服务器运维管理面板 GitHub Star 数超过 30,000 个！&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;继 Halo 之后，1Panel 成为飞致云旗下第二个 GitHub Star 数量超过 30,000 个的开源项目，也是飞致云旗下最快达成 30,000 个 GitHub Star 目标的项目。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1Panel 开源项目（&lt;em&gt;https://github.com/1Panel-dev&lt;/em&gt;）于 2023 年 3 月 20 日发布。作为一款开源、现代化的 Linux 服务器运维管理面板，1Panel 旨在通过开源的方式，帮助用户简化建站与运维管理流程。1Panel 提供了一个直观的 Web 界面，帮助用户轻松管理 Linux 服务器中的应用、网站、文件、数据库以及大语言模型（LLMs）等。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1920" src="https://oscimg.oschina.net/oscnet/up-41eead60936bf4a87285282fc5ec41483fa.jpg" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;1Panel 项目发展时间线&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2022 年 7 月 17 日：1Panel 项目在 GitHub 代码托管平台正式创建；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;2023 年 3 月 20 日：发布 v1.0.0 版本；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2023 年 4 月 17 日：发布 v1.1.0 版本，新增 PHP 运行环境；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2024 年 2 月 28 日：发布 v1.10 LTS 版本，V1 代际产品进入长期支持阶段；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2024 年 4 月 18 日：发布 v1.10.3 LTS 版本，新增 WAF、网站防篡改、GPU 监控、自定义 Logo 等专业版功能；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;2024 年 6 月 7 日：发布 v1.10.10 LTS 版本，新增网站监控、黑金主题等专业版功能；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 2 月 27 日：发布 v1.10.26 LTS 版本，1Panel App 正式上线&lt;/span&gt;；&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 6 月 10 日：发布 v2.0.0 版本，开启 V2 代际产品序列，引入多机管理能力；&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span style="color:#005eeb"&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 7 月 24 日：发布 v2.0.5 版本，新增 MySQL、PostgreSQL 和 Redis 数据库集群部署能力。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;1Panel 应用商店&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;为了方便广大用户快捷安装部署相关软件应用，1Panel 特别开通应用商店（&lt;em&gt;apps.fit2cloud.com/1panel&lt;/em&gt;），精选各类高质量的开源工具和应用软件，为用户的应用安装与升级操作提供便利。目前，1Panel 应用商店已经上架了超过 180 款精品软件并且定期更新维护，成为了开源软件用户的系统装机神器。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1Panel 应用商店于 2023 年 6 月 8 日正式开通。&lt;strong&gt;截至 2025 年 7 月 23 日，1Panel 应用商店软件累计下载量已经超过 400 万次。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="919" src="https://oscimg.oschina.net/oscnet/up-32b6a8e21950e4c4ccfe32a84e9b72210fb.png" width="1345" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;感谢贡献者&lt;/h1&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1Panel 项目的蓬勃发展离不开广大社区用户的贡献和支持。截至 2025 年 7 月 23 日，共有 605 位贡献者为 1Panel 开源项目做出了贡献。&lt;strong&gt;1Panel 期待与大家携手创造更加美好的未来！&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-fabe7662bb6810f551de3def3d5dc87c118.png" width="1184" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;1Panel 项目完整贡献者名单请参见：&lt;em&gt;https://www.lxware.cn/1panel-contributors#/all&lt;/em&gt;。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4736111/blog/18686001</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/18686001</guid>
      <pubDate>Wed, 16 Jul 2025 09:26:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>周鸿祎评 AI 大战：苹果 AI 彻头彻尾败了</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#242424"&gt;360 集团创始人周鸿祎在微博发文，就当下 AI 大战发表看法称，随着 AI 技术持续取得突破，行业内的竞争变得愈发激烈且透明。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="350" src="https://oscimg.oschina.net/oscnet/up-2a6157ecd9597fbd64d12538ae1a1cb2708.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;周鸿祎在视频中毫不留情地批评了苹果在 AI 领域的表现，称曾经的科技优等生苹果，其所谓的 Apple Intelligence 简直就是一场彻头彻尾的败仗。他直言，苹果作为市值万亿的科技巨头，在 AI 战场上却连基本的模型和产品都未能做好，就好比让爱因斯坦去参加幼儿园算数比赛还输了，形象地凸显出苹果在 AI 竞争中的窘境。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;并表示，苹果如今面临一个关键抉择，是继续单打独斗，还是找个 AI 高手「抱大腿」。周鸿祎还以生动的比喻指出，如果用户手持&lt;span&gt;最新&lt;/span&gt;款 iPhone，却无法使用&lt;span&gt;最先&lt;/span&gt;进的 AI 功能，就如同买了辆法拉利却只能以 20 迈的速度行驶，这恰恰是当下苹果手机给用户带来的感受。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362758</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362758</guid>
      <pubDate>Wed, 16 Jul 2025 09:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Meta 宣布「Shengjia Zhao」担任超级智能实验室首席科学家</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Meta 首席执行官扎克伯格宣布，ChatGPT 核心研发人员赵晟佳（Shengjia Zhao）将担任公司超级智能实验室首席科学家一职。&lt;/p&gt; 
&lt;p&gt;扎克伯格强调：「赵晟佳是超级智能实验室的联合创始人，从一开始就是我们的首席科学家。」赵晟佳将直接向扎克伯格汇报，并将与 Meta 首席人工智能官 Alexandr Wang 合作。&lt;/p&gt; 
&lt;p&gt;&lt;img height="996" src="https://static.oschina.net/uploads/space/2025/0728/170714_Tgmu_2720166.png" width="1250" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据悉，除了共同缔造 ChatGPT 外，赵晟佳曾深度参与构建 OpenAI 的 GPT-4、mini 系列、4.1 及 o3 模型，并曾负责 OpenAI 合成数据团队。&lt;/p&gt; 
&lt;p&gt;扎克伯格近几周在 AI 领域展开了不计成本的抢人计划，其中最引人注目的是对数据标注公司 Scale AI 的 140 亿美元投资。据报道，Meta 向顶尖研究员和工程师开出的薪酬包，动辄上亿美元。对扎克伯格而言，这是一场输不起的战役。在元宇宙敍事失败后，他将公司战略全面转向 AI，寄望于押中下一波技术浪潮，Meta 已投入数百亿美元扩建数据中心。&lt;/p&gt; 
&lt;p&gt;今年 6 月份，扎克伯格已预告组建「超级智能实验室」，将集结全球顶尖 AI 研究员和工程师。扎克伯格本月表示：「对我们而言，打造一支精英密度最高的团队，是超级智能实验室的第一要务。」&lt;/p&gt; 
&lt;p&gt;据了解，超级智能实验室将聚焦下一代基础模型研发，包括开源的 Llama 系列、AI 产品以及基础人工智能研究项目。扎克伯格本月早些时候表示，Meta 将在 AI 算力基础设施上投入「数千亿美元」。他在 7 月 25 日写道：「未来几年会非常精彩！」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362754</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362754</guid>
      <pubDate>Wed, 16 Jul 2025 09:08:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>前阿里通义视觉负责人薄列峰加入腾讯混元团队</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;2025 年 7 月 27 日，前阿里通义实验室应用视觉团队负责人薄列峰确认加入腾讯混元大模型团队，直接向腾讯副总裁蒋杰汇报，负责多模态技术研发。&lt;/p&gt; 
&lt;p&gt;据悉，薄列峰于 2025 年 4 月 30 日从阿里离职，此前曾主导阿里图像与视频 AIGC 技术，包括「全民舞王」动作生成框架、换装模型等关键成果。薄列峰拥有机器学习与计算机视觉领域深厚积累，曾参与亚马逊无人零售项目 Amazon Go 研发，并在阿里期间推动多项生成式 AI 技术落地。&lt;/p&gt; 
&lt;p&gt;腾讯混元团队近年持续吸纳顶尖人才，&lt;a href="https://www.oschina.net/news/349795"&gt;此前已引入微软 WizardLM 核心成员&lt;/a&gt;，此次薄列峰加入进一步强化其多模态技术布局，被视为腾讯 AI 从「追赶」转向建立技术节奏的标志。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/362752</link>
      <guid isPermaLink="false">https://www.oschina.net/news/362752</guid>
      <pubDate>Wed, 16 Jul 2025 09:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
