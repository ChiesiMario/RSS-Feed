<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 24 Jun 2025 02:45:26 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>抢答题：「把文字变成数字」、「对结果精修」，都是什么技术？</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;写 AI 应用，你总不能就指望大模型直出的效果吧，很多必要的时候，需要「通过外部策略」的方式去影响大模型处理资料的逻辑，检索增强生成技术&amp;nbsp;RAG 是这种路数，而 RAG 中，Embedding 和 Reranker 又是重中之重的环节，当前这两个环节也都有专门模型化范式来接入，并且已成为高效构建智能问答、知识检索、推荐系统等应用的核心组件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;智能问答&lt;/strong&gt;：通过高精度的 Embedding 建立问答对检索索引，结合 Reranker 精细排序，显著提升答案的相关性与准确率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;知识库检索&lt;/strong&gt;：在海量文档中精准定位用户意图，支持多轮对话和上下文关联检索。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;推荐系统&lt;/strong&gt;：基于用户历史行为与商品描述生成向量表示，实现个性化推荐、相似内容召回。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;舆情监测&lt;/strong&gt;：快速将海量文本转为向量，通过聚类与分类算法进行主题发现与情感分析。&lt;/p&gt; 
&lt;p&gt;这些都是典型的需要&amp;nbsp;Embedding 与 Reranker 给力的场景。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0624/103257_8UDj_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这过程中，「把文字变成数字」与「对检索结果精修」是两大核心环节。下面以通俗的方式，分两块为你说明 Embedding 和 Reranker 的原理与价值。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Embedding：把语义「压缩」成向量&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;想象你在把一本书里的每句话都翻译成一长串数字，这串数字既要能表达句子的中心意思，又要在空间里与含义相近的句子靠得更近。Embedding 模型，就是完成这件「翻译」工作的机器。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;多层语义提取&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Embedding 模型内部运用了多层 Transformer 编码器。第一层关注词与词之间的基本搭配（如「苹果」与「果汁」关系）；中间层捕捉句子结构（比如主谓宾），最后几层则把整句话和上下文联系起来，形成一个高维向量。在 Qwen3‑Embedding‑8B 中，这个向量高达 4096 维，让模型能够在更广的维度上区分细微差异。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;对比学习让向量更「聪明」&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;训练时，模型不仅看成对的问答或同义句怎么对应，更会把数千万甚至上亿条不相关的句子拉远。这样，真正相似的句子在向量空间里互相靠近，不相干的句子被推得更远，检索时才不会把「苹果手机电池续航」误当成「香蕉营养价值」。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;动静结合的量化策略&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;向量越大，存储和检索压力越大。动态量化技术能让模型在运行时自动决定哪些维度可以用更低精度来存（节省空间），哪些维度要保持高精度（保证关键语义不丢失）。在实际部署中，这让检索速度实现了「百毫秒级」响应，同时节省了约 60–70% 的存储。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Reranker：给检索结果「打分」再排序&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Embedding 检索出来的是一个粗略的「候选集」，真正要交给用户之前，还需要一位「品质检验师」——Reranker，将这些候选答案再打一遍分、排个序，让最优答案排在最前面。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;深度交互，跳出双塔局限&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;传统双塔结构（query 和 document 分别编码）虽然高效，但只在编码后进行一次简单匹配，会错失一些深度关联。我们的 Reranker 在两侧编码后，还会引入多轮交互注意力——就好像让问题和答案反复「对话」，捕捉细节差异，才能判断「哪句话更贴近用户真实意图」。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;实时反馈持续进化&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;当用户点击某个答案或给出负面评价时，这些行为会被立即反馈到在线增量学习系统中。Reranker 会在后台快速微调自身参数，就像运动员不断根据比赛录像调整战术，保证随着业务热点变化，排序效果始终领先。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;多目标优化兼顾公平与准确&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;除了相关性打分外，模型还联合了分类（这是不是好答案？）、回归（该答案得分应该是多少？）和对比损失（同类答案之间应该怎么排）三个目标共同训练，确保排序既精准又稳定，不会因为单一指标过拟合而出现极端情况。&lt;/p&gt; 
&lt;p&gt;总的来说，&lt;strong&gt;Embedding 负责将文本「量化」到高维空间，为检索打下基础；Reranker 则在此基础上「打磨」结果，确保输给用户的是最精炼、最相关的答案&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;为了让更多开发者和企业能够零门槛体验最前沿的 AI 能力，模力方舟携手国产 GPU 厂商，重磅宣布——&lt;strong&gt;已部署的 17 个 Embedding 和 Reranker 模型，全量免费使用&lt;/strong&gt;！&lt;/p&gt; 
&lt;p&gt;&lt;img height="964" src="https://static.oschina.net/uploads/space/2025/0624/103342_VXq3_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;还有更多的免费模型选择，尽在模力方舟之模型广场：&lt;em&gt;&lt;strong&gt;&lt;a href="https://ai.gitee.com/serverless-api" target="_blank"&gt;https://ai.gitee.com/serverless-api&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1520" src="https://static.oschina.net/uploads/space/2025/0624/103354_4RFB_2720166.png" width="1074" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;好东西一起分享之，图片拿去转吧。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356959</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356959</guid>
      <pubDate>Tue, 24 Jun 2025 02:34:57 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软发布设备端模型 Mu，支持在 Windows 中设置智能体</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微软&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindowsexperience%2F2025%2F06%2F23%2Fintroducing-mu-language-model-and-how-it-enabled-the-agent-in-windows-settings%2F" target="_blank"&gt;宣布&lt;/a&gt;推出面向设备端的小参数模型 Mu。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1294" src="https://static.oschina.net/uploads/space/2025/0624/103032_Y3sh_2720166.png" width="3086" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Mu 仅有 3.3 亿参数，但其性能可以比肩微软之前发布的小参数模型 Phi-3.5-mini，体量却比它小 10 倍左右，并且在离线 NPU 的笔记本设备上，可以跑出每秒超过 100 tokens 的响应，这在小参数模型领域非常罕见。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0fe4a5c2aa3f7e02f94f3883e0a0a49dd2c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此外，Mu 支持在 Windows 中设置智能体，可将自然语言指令实时转化为系统操作，例如，只需对着电脑说一句 「把鼠标指针调大一些，调整屏幕亮度」，智能体就能精准定位到相关设置项一键完成调整。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356958/microsoft-mu-language-model-</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356958/microsoft-mu-language-model-</guid>
      <pubDate>Tue, 24 Jun 2025 02:31:57 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>前字节 Seed 大语言模型负责人乔木被辞退</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;此前，一份有关字节跳动豆包大模型核心技术人员乔某及同组 HRBP 程某存在不正当关系的举报文件在网上广泛传播。6 月 23 日，红星资本局获悉，字前字节 Seed 大语言模型负责人乔木以及关联 HRBP 已被辞退。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="273" src="https://oscimg.oschina.net/oscnet/up-d1fc69ad929f39468990c7341f686a6bd81.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;字节在最新发布的一期廉政通报中提到：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;公司 Seed 部门（字节跳动豆包大模型团队）某前员工与支持其团队的某前 HRBP（人力资源）存在未申报的亲密关系，属于公司利益冲突管理规定的禁止场景（如上下级关系、共同直属上级或一方为另一方 HRBP 等）。二人不仅未按规定申报利益冲突，且在接受调查过程中多次作虚假陈述，严重违反公司制度。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据通报，字节跳动已对涉事二人作出辞退处理，并全额扣发其年终奖。对此，字节官方尚无说法。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356956</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356956</guid>
      <pubDate>Tue, 24 Jun 2025 02:15:57 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>博士生用 Typst 取代 LaTeX 写论文引热议：编译速度快 9 倍，但导师并不满意</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;一位博士生最近在网上分享了自己使用 Typst（而非传统的 LaTeX）撰写博士论文的经历，在技术社区引发了激烈讨论。这个选择看似小众，却触及了学术界一个由来已久的痛点：LaTeX 虽然功能强大，但学习曲线陡峭、编译速度缓慢、错误信息晦涩难懂。&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="400" src="https://oscimg.oschina.net/oscnet/up-da99f6b5d1fdd0954f78d4992bf7563f660.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;从 90 秒到 10 秒：速度是第一生产力&lt;/h2&gt; 
&lt;p&gt;作者选择 Typst 的直接原因很简单——一位朋友的 LaTeX 论文编译时间竟然长达 90 秒。「我太容易分心了，根本无法忍受在做小改动时要等 90 秒的编译时间。」相比之下，Typst 的编译速度快得惊人：即使是 150 页以上的论文，完整编译只需 15 秒，内容修改几乎是即时更新的。&lt;/p&gt; 
&lt;p&gt;HackerNews 用户 WhyNotHugo 深有同感：「我最后一篇论文用的是 makefile，通常能工作。但不工作时，运行两次就能修复。最罕见的情况下，我必须运行&lt;code&gt;git clean -xdf&lt;/code&gt;，然后下一次运行就能工作了。」另一位用户 shusaku 则幽默地评论道：「疯狂的定义就是做同样的事情两次却期待不同的结果。巧合的是，这正是编译 LaTeX 的基本方式。」&lt;/p&gt; 
&lt;h2&gt;Typst 的语言设计：现代化的力量&lt;/h2&gt; 
&lt;p&gt;Typst 最大的亮点在于其精心设计的语言。作者将其描述为「Markdown 和动态类型 Rust 的混合体」，这种组合听起来很奇怪，但实际使用起来却非常舒适。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typst"&gt;#let numbers = (1,2,5,8)
This is *bold text*. The sum of [#numbers.map(it =&amp;gt; str(it)).join(", ")] is *#numbers.sum()*
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这段代码会生成：「This is &lt;strong&gt;bold text&lt;/strong&gt;. The sum of [1, 2, 5, 8] is &lt;strong&gt;16&lt;/strong&gt;」&lt;/p&gt; 
&lt;p&gt;相比 LaTeX 中到处都是反斜杠的语法，Typst 的设计更加直观。更重要的是，Typst 拥有一个设计良好的脚本语言。正如作者所说：「我对 LaTeX 最大的抱怨是没有任何东西是一致的。每个包都定义自己的小工具，甚至连基本的 if 语句都不统一。感觉你不是在学 LaTeX，而是在分别学习每个包。」&lt;/p&gt; 
&lt;h2&gt;实际应用：不只是纸上谈兵&lt;/h2&gt; 
&lt;p&gt;作者展示了一个实际案例：他收集了各种硬件描述语言的元数据，存储在 TOML 文件中。由于 Typst 可以直接解析 TOML，他能够轻松地用这些数据生成论文中的分类图表。这种程度的编程集成在 LaTeX 中几乎是不可想象的。&lt;/p&gt; 
&lt;p&gt;HackerNews 用户 lizimo 分享了更有趣的应用场景：「我们已经在生产环境中使用 Typst 生成 PDF 文档几个月了，比如发票和标签。每天生成数千份文档，我很高兴其中一些被打印出来，供仓库里做实际工作的人使用。」&lt;/p&gt; 
&lt;h2&gt;痛点仍在：生态系统的挑战&lt;/h2&gt; 
&lt;p&gt;然而，Typst 并非完美无缺。最大的问题来自于参考文献管理。Typst 每个文档只能有一个参考文献部分和文件，这对于需要为引言和每篇包含的论文分别设置参考文献的博士论文来说是个致命缺陷。虽然 Alexandria 包提供了解决方案，但仍需要额外的工作。&lt;/p&gt; 
&lt;p&gt;更大的挑战在于生态系统。正如 HackerNews 用户 gumbojuice 指出：「我坚持使用 LaTeX，不是因为偏好，而是因为期刊/会议仍然不接受比如 typst。他们会接受吗？我不知道，这取决于他们是否愿意将其整合到工具链中。」&lt;/p&gt; 
&lt;h2&gt;导师的不同视角&lt;/h2&gt; 
&lt;p&gt;有趣的是，作者的导师对此有完全不同的看法。导师认为：「问题是你必须调整它才能让事情看起来符合要求。这不一定是优势。作为导师，我会建议在所有手稿都用 LaTeX 编写的领域中使用 Typst 吗？不会。」&lt;/p&gt; 
&lt;p&gt;导师特别指出，从监督者的角度来看，他几乎没有在源代码中编辑任何文本，而是让作者自己编辑文本和格式，这相当低效。&lt;/p&gt; 
&lt;h2&gt;社区的两极化反应&lt;/h2&gt; 
&lt;p&gt;HackerNews 的讨论呈现出明显的两极分化。支持者认为 Typst 代表了未来。用户 commandersaki 列出了 Typst 的诸多优势：「编译时不会生成 5 个该死的文件」、「编译是即时的」、「诊断信息更容易理解（有点像 Rust 编译器的建议风格）」。&lt;/p&gt; 
&lt;p&gt;反对者则担心 Typst 的持续性。用户 dleslie 警告说：「三十年后 LaTeX 仍将是开源的，可能还会被维护。Typst 看起来是开源和闭源的混合体；这种模式往往会忽视开源部分，在闭源部分实现关键功能。」&lt;/p&gt; 
&lt;p&gt;用户 the-wumpus 则反驳道：「网页应用编辑器是闭源的，但它提供的大部分功能都是开源的，所以本地编辑体验类似（在我看来更好）。typst 编译器、LSP 和你需要使用的所有东西都是开源的。」&lt;/p&gt; 
&lt;h2&gt;写在最后&lt;/h2&gt; 
&lt;p&gt;正如作者在结论中所说：「如果你像我一样，喜欢玩编程语言，容易被工具困扰，更喜欢可以调整到完全符合自己要求的工具，而不是开箱即用但难以调整的工具，那么 Typst 绝对值得一试。」&lt;/p&gt; 
&lt;p&gt;对于学术界来说，Typst 的出现提供了一个思考的契机：我们是否应该继续忍受 LaTeX 的种种不便，仅仅因为「大家都在用」？还是应该拥抱新技术带来的效率提升？&lt;/p&gt; 
&lt;p&gt;用户 rcpt 的评论或许代表了一种新的可能：「自从我写 LaTeX 以来已经有十年了，我同意它的所有痛点。但似乎 LaTeX 正是 LLM 会完美处理的东西。我觉得今天使用它不会太糟糕。」&lt;/p&gt; 
&lt;p&gt;无论选择哪种工具，重要的是它能帮助研究者更好地表达思想。正如用户 noelwelsh 所说：「在一天结束时，我不是在试图迁移任何人。使用你认为最好的。对于我的使用场景，我确信 Typst 是比 LaTeX 更好的选择。」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356954</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356954</guid>
      <pubDate>Tue, 24 Jun 2025 01:57:57 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Solon Expression Language (SnEL)：轻量高效的 Java 表达式引擎</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;一、SnEL 是什么？&lt;/h2&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;Solon Expression Language（简称 SnEL）是 Solon 生态体系中的轻量级表达式引擎，专为 Java 开发者设计。它采用独特的"求值表达式"模型，通过简洁的语法实现复杂逻辑处理，同时保持极高的执行效率和安全性。&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;项目地址：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gitee:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/noear/solon-expression"&gt;https://gitee.com/noear/solon-expression&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon-expression" target="_blank"&gt;https://github.com/noear/solon-expression&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二、核心特性解析&lt;/h2&gt; 
&lt;h3&gt;1. 安全可靠的表达式引擎&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;无副作用设计&lt;/strong&gt;：禁止&lt;code&gt;new&lt;/code&gt;实例化、控制语句等危险操作&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;上下文隔离&lt;/strong&gt;：通过&lt;code&gt;StandardContext&lt;/code&gt;严格管控变量访问范围&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. 丰富的表达式能力&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;// 复杂逻辑表达式示例&lt;/em&gt;
&lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;expr&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"""
    ((age &amp;gt; 18 AND salary &amp;lt; 5000) OR NOT isMarried) 
    AND tags IN ['vip','premium'] 
    OR level == 'gold'"""&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;支持功能主要包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基础运算：算术、比较、逻辑运算&lt;/li&gt; 
 &lt;li&gt;集合操作：IN/NOT IN 集合判断&lt;/li&gt; 
 &lt;li&gt;嵌套访问：多级对象属性/方法调用&lt;/li&gt; 
 &lt;li&gt;静态方法：直接调用类静态方法&lt;/li&gt; 
 &lt;li&gt;三元运算：条件表达式支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;更多参考官网：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F1043" target="_blank"&gt;《SnEL 求值表达式语法和能力说明》&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3. 独创的模板引擎&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;双模式模板处理：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;// 求值表达式模板&lt;/em&gt;
SnEL.evalTmpl(&lt;span style="color:#50a14f"&gt;"订单总额：#{order.amount * 0.95}"&lt;/span&gt;);

&lt;em&gt;// 属性表达式模板（带默认值）&lt;/em&gt;
SnEL.evalTmpl(&lt;span style="color:#50a14f"&gt;"配置参数：${server.timeout:3000}"&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;三、企业级功能深度解析&lt;/h2&gt; 
&lt;h3&gt;1. 上下文增强方案&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;// 标准 Map 上下文&lt;/em&gt;
Map&amp;lt;String,Object&amp;gt; ctx = &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();
ctx.put(&lt;span style="color:#50a14f"&gt;"user"&lt;/span&gt;, userService.getCurrent());

&lt;em&gt;// 增强型 Bean 上下文&lt;/em&gt;
&lt;span style="color:#986801"&gt;StandardContext&lt;/span&gt; &lt;span style="color:#986801"&gt;context&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;StandardContext&lt;/span&gt;(userEntity);
context.properties(configProps); &lt;em&gt;// 绑定配置属性&lt;/em&gt;

&lt;em&gt;// 虚拟 root 访问&lt;/em&gt;
SnEL.eval(&lt;span style="color:#50a14f"&gt;"root.id &amp;gt; 1000"&lt;/span&gt;, context);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 多场景表达式转换&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;基于 AST 的通用转换接口：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#986801"&gt;Expression&lt;/span&gt; &lt;span style="color:#986801"&gt;expr&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; SnEL.parse(&lt;span style="color:#50a14f"&gt;"age &amp;gt; 18 AND status=='active'"&lt;/span&gt;);

&lt;em&gt;// 转换为 Redis 查询语法&lt;/em&gt;
&lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;redisFilter&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; RedisFilterTransformer.getInstance().transform(expr);

&lt;em&gt;// 转换为 Elasticsearch DSL&lt;/em&gt;
Map&amp;lt;String,Object&amp;gt; esQuery = ElasticsearchFilterTransformer.getInstance().transform(expr);

&lt;em&gt;// 输出语法树结构&lt;/em&gt;
PrintUtil.printTree(expr);
&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#24292e; display:block; font-family:-apple-system,&amp;quot;system-ui&amp;quot;,&amp;quot;Segoe UI&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:960px; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;转换器类型&lt;/th&gt; 
   &lt;th&gt;输出示例&lt;/th&gt; 
   &lt;th&gt;应用场景&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Redis&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;(@age:[18 +inf] @status:{active})&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;缓存查询&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Milvus&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;((metadata["age"] &amp;gt; 18) and (metadata["status"] == "active"))&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;向量数据库&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;Elasticsearch&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;{bool={must=[{range={age={gt=18}}}, {term={status={value=active}}}]}}&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;全文检索&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;SQL&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;code&gt;WHERE age &amp;gt; 18 AND status='active'&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;数据库查询&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;四、典型应用场景&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;动态规则引擎：金融风控规则配置&lt;/li&gt; 
 &lt;li&gt;智能路由：微服务调用条件路由&lt;/li&gt; 
 &lt;li&gt;低代码平台：表单校验逻辑动态配置&lt;/li&gt; 
 &lt;li&gt;数据分析：实时数据过滤与计算&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;五、快速入门&lt;/h2&gt; 
&lt;h3&gt;1. 添加依赖&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-expression&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;最新版本&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;version&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2. 基础用法示例&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;Demo&lt;/span&gt; {
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;static&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;main&lt;/span&gt;&lt;span&gt;(String[] args)&lt;/span&gt; {
        Map&amp;lt;String,Object&amp;gt; context = &lt;span style="color:#a626a4"&gt;new&lt;/span&gt; &lt;span style="color:#c18401"&gt;HashMap&lt;/span&gt;&amp;lt;&amp;gt;();
        context.put(&lt;span style="color:#50a14f"&gt;"price"&lt;/span&gt;, &lt;span style="color:#986801"&gt;99.5&lt;/span&gt;);
        context.put(&lt;span style="color:#50a14f"&gt;"discount"&lt;/span&gt;, &lt;span style="color:#986801"&gt;0.8&lt;/span&gt;);
        
        &lt;span style="color:#986801"&gt;Object&lt;/span&gt; &lt;span style="color:#986801"&gt;result&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; SnEL.eval(&lt;span style="color:#50a14f"&gt;"price * discount &amp;gt; 50"&lt;/span&gt;, context);
        System.out.println(&lt;span style="color:#50a14f"&gt;"是否符合条件："&lt;/span&gt; + result);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. 性能优化建议&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;复用解析结果：对固定表达式使用 SnEL.parse() 缓存 AST&lt;/li&gt; 
 &lt;li&gt;上下文优化：复杂对象优先使用 StandardContext&lt;/li&gt; 
 &lt;li&gt;避免频繁解析：高并发场景预编译表达式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;六、企业实践案例&lt;/h2&gt; 
&lt;h3&gt;案例 1：电商促销系统&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;em&gt;// 动态计算促销条件&lt;/em&gt;
&lt;span style="color:#986801"&gt;String&lt;/span&gt; &lt;span style="color:#986801"&gt;rule&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"""
    (user.level IN ['VIP','SVIP'] OR order.amount &amp;gt; 1000) 
    AND inventory.stock &amp;gt; 0 
    AND NOT blacklist.contains(user.id)"""&lt;/span&gt;;
    
&lt;span style="color:#986801"&gt;Boolean&lt;/span&gt; &lt;span style="color:#986801"&gt;rst&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; SnEL.eval(rule, context);&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356941</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356941</guid>
      <pubDate>Sun, 11 May 2025 00:43:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>🎉夜莺监控 V8 发版，内置支持 DeepSeek 对接</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; text-align:left"&gt;夜莺监控发布了 v8.beta14 版本，这个版本是可以上生产的，强烈建议升级。正式版会在每年夜莺大会上发布，今年预计是 7.4 号。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;下面快速介绍一下 v8.beta14 的主要更新。&lt;/p&gt; 
&lt;h2&gt;beta14 重点更新&lt;/h2&gt; 
&lt;h3&gt;支持 Postgres 告警&lt;/h3&gt; 
&lt;p style="color:#333333; text-align:left"&gt;又支持了一个新的告警数据源：Postgres，可以对 Postgres 中的数据做异常判定啦，有些业务数据（比如订单数据、商品数据）可能是存在 Postgres 或 MySQL 等 OLTP 库中，所以这算是多了一个业务数据告警的手段，业务监控的告警规则不用很多，但是通常都极为关键。&lt;/p&gt; 
&lt;p&gt;&lt;img height="630" src="https://oscimg.oschina.net/oscnet/up-e30994bca7c3d950bb85c39db5c1e5ccd77.png" width="1890" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;您可以在&lt;code&gt;集成中心-数据源&lt;/code&gt;添加 Postgres 数据源，目前的开源版本，该数据源仅支持告警，不支持看图（即时查询、仪表盘等）。&lt;/p&gt; 
&lt;h3&gt;对接 AI 做 Summary&lt;/h3&gt; 
&lt;p style="color:#333333; text-align:left"&gt;告警事件 Pipeline 新增一个新的内置处理器：AI Summary，可以使用 DeepSeek 等对告警事件做总结，将总结之后的信息附加到告警事件中，进而通过告警消息发出。让您的监控与 AI 之间的联动触手可及。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1190" src="https://oscimg.oschina.net/oscnet/up-8c07f9b00aebd755c3f0a894362cb7207f8.png" width="2002" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;填入 AI 服务器的地址和 API Key，以及要使用的模型，即可引入 AI Summary 的能力。夜莺内置提供了一个提示词，您可以根据自己的需求修改提示词。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;更多使用文档，可以参考红色箭头指向的那个&lt;code&gt;使用说明&lt;/code&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;事件处理器非常具有想象力，欢迎给我们投稿分享您的实践案例。&lt;/p&gt; 
&lt;h3&gt;告警事件匿名访问&lt;/h3&gt; 
&lt;p style="color:#333333; text-align:left"&gt;重新设计了告警事件匿名访问的逻辑。您可以在告警事件详情页面找到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;生成分享链接&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的入口。最新逻辑是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;默认不支持匿名访问，必须登录才能看到事件详情&lt;/li&gt; 
 &lt;li&gt;通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;生成分享链接&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可以生成一个带 token（有过期时间）的 URL，访问那个 URL 就可以匿名访问了&lt;/li&gt; 
 &lt;li&gt;如果夜莺配置文件 config.toml 中直接开启了全局的匿名访问，则匿名访问的 token 就没用了，只要访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;/share/alert-his-events/${id}&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;就会直接放行，配置文件中的全局匿名访问配置位置是：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;&lt;span&gt;&lt;span&gt;[&lt;span style="color:#a6e22e"&gt;Center&lt;/span&gt;.&lt;span style="color:#a6e22e"&gt;AnonymousAccess&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;PromQuerier&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 就是下面这个&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;AlertDetail&lt;/span&gt; = &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; text-align:left"&gt;如果夜莺开放在公网，请不要打开匿名访问！&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;其他 Changelog 请参考&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale%2Freleases%2Ftag%2Fv8.0.0-beta.14" target="_blank"&gt;github release&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;页面。&lt;/p&gt; 
&lt;h2&gt;升级须知&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;大家可以从夜莺的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale%2Freleases" target="_blank"&gt;github releases&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;页面下载到最新的发布包。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;v6/v7 版本都可以平滑升级：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;建议先备份老版本的二进制、配置、integrations 目录等，留好后路，然后就可以放心大胆升级了&lt;/li&gt; 
 &lt;li&gt;如果夜莺所用的 DB 账号有建表、改表权限，会自动更新表结构，否则就要参考代码仓库里&amp;nbsp;docker/migratesql&amp;nbsp;手工改表结构了&lt;/li&gt; 
 &lt;li&gt;integrations 目录可以直接替换成新版&lt;/li&gt; 
 &lt;li&gt;配置文件 etc/config.toml 建议认真 diff 一下&lt;/li&gt; 
 &lt;li&gt;容器启动的话，直接拉取 latest 镜像重启即可&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;夜莺产品特性介绍的 PPT&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;有些人可能对夜莺的产品还不太了解，特准备了一份 PPT，请参考：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc9xudyniiq.feishu.cn%2Fslides%2FO6xJsUzZclzeUrdMb9DcynVtnSf" target="_blank"&gt;PPT&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356937/nightingale-release-v8beta-14</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356937/nightingale-release-v8beta-14</guid>
      <pubDate>Sun, 11 May 2025 00:17:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>宇树王兴兴为高考生送上报考建议</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;随着高考成绩、分数线陆续公布，对于那些想投身具身智能行业的考生，宇树科技创始人王兴兴发文结合自身的经历给出一些专业报考建议。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-513fc7219a635ce3cbb2d6d3d7ae7738440.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;如果你从小喜欢拆解维修一些电子产品，或者动手 DIY 做点东西，推荐学习机械或电子相关专业。具体的专业细分名字很多，请注意区分，对于自己感兴趣的学校和专业，大家最好直接去对应学院的官网，直接看看具体的详细介绍，看看老师们在做什么课题或项目。哪怕专业名字一模一样，每个学校的差别也非常大。中间如果想多学习 AI，也可以多花时间自学。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;如果你对智能如何产生感兴趣、如果你有 AGI 的梦想，且数学还不错，推荐直接学习计算机科学/人工智能相关专业，也一并请直接多查查对应学院的详细信息，甚至可以直接先去对应实验室看看。当然，还是建议中间可以稍微花一些时间，学习一些硬件相关的原理，比如自己动手画个 PCB 板子等，简单实用。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;当然，现实里，大多数同学没有那么幸运，能直接进入自己理想的学校和专业，或者进入以后发现不适合自己或者不喜欢。这其实完全不是大问题，非常常见和正常。请不要放弃努力寻找自己喜欢和擅长的事，寻找新的方向，并请一定努力去实践。你可以转专业，哪怕转不了，也一点问题没有，你可以直接去找自己感兴趣方向的老师，直接沟通去他的实验室做事，甚至完全可以直接全都自学。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;后续上学时，请大家也不要局限于书本和论文，具身智能是物理世界的智能，一定要多动手，拧螺丝、调电路、写程序、debug，马上自己动手编程，进入实验室、参与机器人比赛等等，在实战中迅速提升自己。我自己至今，也还会自己直接上手拆装零部件，敲敲代码等。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;如果你想成为最顶尖的人才，一定要超脱课本，主动持续学习，学习当下最前沿的科技领域。持续关注顶级学术会议最新论文等；积极参与最具探索性的开源项目并尝试复现和改进；与同样渴望挑战边界的同学、研究者组建小组，共同探讨前沿问题，碰撞思想。每个同学，都有机会成为全人类未来科技方向的探索者和实践者。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;最后，我想说，在未来的学业中，你们或许会感到迷茫，不知前进的方向，但不要担心，每个人都会迷茫，我也一样。在大学期间，要较多的探索自己的多种可能性，多尝试，找到爱好点和擅长点。如果你的爱好恰巧也是你擅长的，那恭喜你，你找到了可以为之奋斗一生的目标。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;在成长过程中，你们可能目睹了一次又一次的时代浪潮，见证了一个又一个商业奇迹，外贸、房地产、基建、互联网、消费电子、移动互联网、新能源汽车，等等。可能你们会羡慕前人，觉得机会变少了，觉得宇宙的科技树没有太多可以探索的了。但请不要灰心，AI 和机器人的时代才刚刚开始，还有大量的挑战和机会在等你们。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356888</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356888</guid>
      <pubDate>Sat, 10 May 2025 10:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>网易有道开源首个专注数学教育的模型 Confucius3-Math</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;网易有道宣布正式开源「子曰 3」系列大模型的数学模型（英文名称 Confucius3-Math），这是国内首个专注于数学教育，可在单块消费级 GPU 上高效运行的开源推理模型。&lt;/p&gt; 
&lt;p&gt;据了解，Confucius3-Math 是由网易有道 AI 团队开发的&lt;strong&gt;140 亿参数开源推理大语言模型&lt;/strong&gt;，专门针对 K-12 数学教育场景进行优化。与通用模型不同，Confucius3-Math 具有以下特点：&lt;/p&gt; 
&lt;p&gt;✅&lt;strong&gt;数学任务上的顶尖性能&lt;/strong&gt;&lt;br&gt; 通过专门的强化学习训练，在中文 K-12 数学问题上的表现超越了参数规模更大的模型&lt;/p&gt; 
&lt;p&gt;✅&lt;strong&gt;高性价比的部署方案&lt;/strong&gt;&lt;br&gt; 可在单张消费级 GPU（如 RTX 4090D）上高效运行&lt;/p&gt; 
&lt;p&gt;✅&lt;strong&gt;文化与课程体系的深度契合&lt;/strong&gt;&lt;br&gt; 针对中国国家数学课程标准和解题方法论进行了优化&lt;/p&gt; 
&lt;p&gt;Confucius3-Math 采用纯强化学习的后期训练流程，结合创新的数据调度策略和改进的组相对优势估计器开发而成。Confucius3-Math 在解决国内数学问题任务中展现出了显著优势。其通过大规模增强学习以及一系列的创新算法，训练成本仅为 2.6 万美元，推理性能约为 DeepSeek R1 的 15 倍。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8732b5278351553b8f60ad1d228c44e8d50.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;附 1：Demo 地址，欢迎试用&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fconfucius.youdao.com%2F" target="_blank"&gt;https://confucius.youdao.com/&lt;/a&gt;&lt;br&gt; 附 2：模型开源地址&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FConfucius3-Math" target="_blank"&gt;https://github.com/netease-youdao/Confucius3-Math&lt;/a&gt;&lt;br&gt; 附 3：论文地址&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FConfucius3-Math%2Fblob%2Fmain%2FConfucius3-Math.pdf" target="_blank"&gt;https://github.com/netease-youdao/Confucius3-Math/blob/main/Confucius3-Math.pdf&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356885</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356885</guid>
      <pubDate>Sat, 10 May 2025 09:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>ChinaTextbook —— 所有小初高、大学 PDF 教材</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;虽然国内教育网站已提供免费资源，但大多数普通人获取信息的途径依然受限。有些人利用这一点，在某站上销售这些带有私人水印的资源。为了应对这种情况，将这些资源集中并开源，以促进义务教育的普及和消除地区间的教育贫困。&lt;/span&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;小学数学&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;一年级上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;一年级下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;二年级上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;二年级下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;三年级上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;三年级下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E5%9B%9B%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;四年级上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%9B%9B%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;四年级下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%BA%94%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;五年级上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%BA%94%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;五年级下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E5%85%AD%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;六年级上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AD%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;六年级下册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;初中数学&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B8%83%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;初一上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B8%83%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;初一下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E5%85%AB%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AB%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;初二上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E5%85%AB%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AB%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;初二下册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B9%9D%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B9%9D%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;初三上册&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/blob/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B9%9D%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B9%9D%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;初三下册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;高中数学&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E9%AB%98%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88%EF%BC%88A%E7%89%88%EF%BC%89%EF%BC%88%E4%B8%BB%E7%BC%96%EF%BC%9A%E7%AB%A0%E5%BB%BA%E8%B7%83%26%E6%9D%8E%E5%A2%9E%E6%B2%AA%EF%BC%89-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE"&gt;目录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;大学数学&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E5%90%8C%E6%B5%8E%E5%A4%A7%E5%AD%A6%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%AC%E4%B8%83%E7%89%88"&gt;高等数学&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0"&gt;线性代数&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6"&gt;离散数学&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E6%A6%82%E7%8E%87%E8%AE%BA"&gt;概率论&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.dxsx.net/index.php"&gt;更多数学资料-(大学数学网)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;问题：如何合并被拆分的文件？&lt;/h2&gt;
&lt;/div&gt;

&lt;p style="color:#1f2328; text-align:start"&gt;由于 GitHub 对单个文件的上传有最大限制，超过 100MB 的文件会被拒绝上传，超过 50MB 的文件上传时会收到警告。因此，文件大小超过 50MB 的文件会被拆分成每个 35MB 的多个文件。&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;示例&lt;/h3&gt;
&lt;/div&gt;

&lt;p style="color:#1f2328; text-align:start"&gt;文件被拆分的示例：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.1&lt;/li&gt;
&lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.2&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;解决办法&lt;/h3&gt;
&lt;/div&gt;

&lt;p style="color:#1f2328; text-align:start"&gt;要合并这些被拆分的文件，您只需执行以下步骤 (其他操作系统同理)：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;将合并程序&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;下载到包含 PDF 文件的文件夹中。&lt;/li&gt;
&lt;li&gt;确保&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和被拆分的 PDF 文件在同一目录下。&lt;/li&gt;
&lt;li&gt;双击&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;程序即可自动完成文件合并。&lt;/li&gt;
&lt;/ol&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;下载方式&lt;/h3&gt;
&lt;/div&gt;

&lt;p style="color:#1f2328; text-align:start"&gt;您可以通过以下链接，下载文件合并程序：&lt;/p&gt;

&lt;p style="color:#1f2328; text-align:start"&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook-tools/releases"&gt;下载文件合并程序&lt;/a&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;文件和程序示例&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;mergePDFs-windows-amd64.exe&lt;/li&gt;
&lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.1&lt;/li&gt;
&lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.2&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/chinatextbook</link>
      <guid isPermaLink="false">https://www.oschina.net/p/chinatextbook</guid>
      <pubDate>Sat, 10 May 2025 09:43:00 GMT</pubDate>
    </item>
    <item>
      <title>谷歌 AI 编程工具 Gemini Code Assist 发布更新，增强上下文管理能力</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌 AI 编程助手&amp;nbsp;Gemini Code Assist 近日&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FGoogleCloudTech%2Fstatus%2F1936136971849441648" target="_blank"&gt;发布更新&lt;/a&gt;&lt;/u&gt;，集成了最新的&amp;nbsp;Gemini 2.5&amp;nbsp;模型，带来了更强的个性化和更灵活的上下文管理。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0623/174100_cmzw_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;用户现在可以创建自定义快捷命令来处理重复性任务，并在&amp;nbsp;VS Code&amp;nbsp;或&amp;nbsp;JetBrains IDE&amp;nbsp;的&amp;nbsp;Gemini&amp;nbsp;设置中配置项目编码规范，这些规则在每次生成代码时自动生效。&lt;/p&gt; 
&lt;p&gt;上下文管理方面，Gemini Code Assist&amp;nbsp;支持将整个文件夹或工作区加入上下文，上下文窗口可达&amp;nbsp;100 万 tokens，并可通过「@」符号精确添加特定文件或目录。&lt;/p&gt; 
&lt;p&gt;此外，新增的上下文抽屉（Context Drawer）可视化面板能显示当前参与对话的文件与路径，支持一键添加/移除。聊天窗口右上角现可开启多个会话，所有历史对话会自动保存并支持一键恢复。&lt;/p&gt; 
&lt;p&gt;同时，Google 的&amp;nbsp;Jules 异步编码代理也将登陆&amp;nbsp;AI Studio，未来可能以「Vibe coding」桌面应用的形式推出。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356882</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356882</guid>
      <pubDate>Sat, 10 May 2025 09:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>开源鸿蒙代码规模突破 1.3 亿行</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FEGCrwLfPlELGTq0DGmeTZw" target="_blank"&gt;据 OpenAtom OpenHarmony 分享&lt;/a&gt;，2025 年 6 月 21 日，由开源鸿蒙项目群工作委员会主办的开源鸿蒙社区年中技术会议在东莞三丫坡盛大召开。&lt;/p&gt; 
&lt;p&gt;开源鸿蒙项目群工作委员会主席、华为终端 BG 软件部总裁龚体为本次大会致辞。他表示，&lt;strong&gt;开源四年多来，开源鸿蒙实现全面生态跃迁：代码规模突破 1.3 亿行，凝聚 8700 多位开发者智慧&lt;/strong&gt;；社区治理持续升级，新增 8 个关键 SIG，系统性补齐路由、北斗、Web 等关键技术版图；400 余家生态伙伴的 1200 余款产品通过兼容性测评，覆盖金融、交通、教育、医疗、航天等多个行业领域。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a8c873b452dab8e67e8a87ad3868acef8dc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;消费端同步跨越升级 —— 鸿蒙 PC、Pura X 及 nova 系列设备全面搭载 HarmonyOS 5 操作系统，2 万多个原生应用与元服务成功上架，标志着万物智联生态正式进入规模化落地新阶段。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356872</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356872</guid>
      <pubDate>Sat, 10 May 2025 09:13:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>百度文心快码 AI IDE 上线</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;百度文心快码宣布上线独立 AI 原生开发环境工具 Comate AI IDE。根据介绍，Comate AI IDE 是行业首个多模态、多智能体协同 AI IDE，首创设计稿一键转代码，模型已接入文心 4.0 X1 Turbo，开箱即用。目前百度每天新增的代码中，文心快码生成的代码占比已超过 43%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="271" src="https://oscimg.oschina.net/oscnet/up-933809d1b828cf04041454b88391e408dd4.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;&lt;span style="color:#000000"&gt;不同于当前主流 AI 代码助手以插件形态附着在 VS Code、JetBrains 等开发平台，Comate AI IDE 完全自研，重构从编辑器交互到底层逻辑的全链路开发体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#1a1a1a; text-align:justify"&gt;&lt;span style="color:#000000"&gt;核心技术上，Comate AI IDE 集成了文心 4.0 X1 Turbo 模型与升级版 Zulu 智能体，支持自动任务拆解与自主决策执行。开发者可通过自然语言或语音输入复杂需求，由智能体自主生成代码、实时预览、持续优化。例如，开发者上传 Figma 设计稿，系统可自动生成高还原度前端代码，省去大量重复性编写工作。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356871</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356871</guid>
      <pubDate>Sat, 10 May 2025 09:09:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>马斯克：xAI 计划用 Grok 3.5 重写人类知识库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;近日，马斯克在 X&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Felonmusk%2Fstatus%2F1936333964693885089" target="_blank"&gt;宣布&lt;/a&gt;，旗下 AI 公司 xAI 将用新一代大模型 Grok 3.5（或许直接叫 Grok 4）重写整个人类知识库，添加缺失信息，删除错误内容，然后基于这个「纯净版」知识库重新训练模型。&lt;/p&gt; 
&lt;p&gt;马斯克认为，在任何基于未修正数据训练的基础模型中，都有太多的垃圾。&lt;/p&gt; 
&lt;p&gt;AI 为了迎合用户的要求，会自己加戏，从而凭空想象出很多不存在，或者还未发生的细节，直接当成真实事件嵌入到文章里。而一旦这样的内容多了，这些看似真实的内容甚至会被 AI 重新咀嚼回去训练，再被下一次输出时引用。这时候，真真假假就更难以分辨了。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b1fa8925a68e196d59d0eb4bed7287ebb5b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;简单来说，马斯克想让 Grok 成为人类知识的审核员和补全者。据悉，新一代 Grok 拥有高级推理能力，能够识别知识库中的错误和缺失。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356867</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356867</guid>
      <pubDate>Sat, 10 May 2025 08:48:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>《鸿蒙智能体框架白皮书》发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;华为正式发布了鸿蒙智能体框架（Harmony Agent Framework，HMAF）以及《Agent 时代，鸿蒙应用生而智能 —— 鸿蒙智能体框架白皮书》，全面且系统地定义了在鸿蒙系统下，操作系统、鸿蒙应用 / 元服务与智能体之间相互交互以及协同合作的全新范式。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1660" src="https://static.oschina.net/uploads/space/2025/0623/162018_MUZn_2720166.png" width="1316" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;鸿蒙智能体框架的核心目标是建立一个具备自主决策、群体协作能力的 AI 生态系统，全面赋能应用智能化升级。&lt;/p&gt; 
&lt;p&gt;无论是手机、手表、PC，还是其他智能终端，鸿蒙智能体都能够在各设备之间高度协同与互动。系统级智能体小艺和应用 Agent 的深度融合，能够实现无缝协作，让用户的需求和意图可以通过智能体间的协作流畅实现。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1664" src="https://static.oschina.net/uploads/space/2025/0623/162449_PJXg_2720166.png" width="2234" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0623/162552_RABO_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;与此同时，华为还推出了小艺智能体开放平台，旨在全方位赋能开发者，驱动智能体开发的蓬勃开展。通过小艺智能体开放平台，开发者可以快速构建符合自己需求的智能体，并借助鸿蒙系统级的分发入口，精准触达目标用户。平台还提供了丰富的插件、新手引导指南等，将开发门槛降低到新手开发者也能够迅速上手的程度。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0623/163017_fsUG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;更多内容查看&amp;nbsp;&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Fdoc%2Fguidebook%2Fai-agent-0000002355199797" target="_blank"&gt;https://developer.huawei.com/consumer/cn/doc/guidebook/ai-agent-0000002355199797&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;阅读更多：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/356477" target="news"&gt;《鸿蒙编程语言白皮书》发布&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356864</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356864</guid>
      <pubDate>Sat, 10 May 2025 08:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>第二届壁仞科技 「飞翔杯」 AI 应用创新挑战赛</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;6 月 20 日，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;由上海市计算机行业协会、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上海&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;壁仞科技&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;股份有限公司&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主办&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上海临港浦江国际科技城&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;发展有限公司&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、浙江大学&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上海&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高等研究院、模力方舟（ Gitee AI ）、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;杭州&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一蓦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;信息&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;科技&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有限公司&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;承办&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;上海农村商业银行股份有限公司协办的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#c00000"&gt;&lt;strong&gt;第二届壁仞科技「飞翔杯」 AI 应用创新挑战赛&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;正式启幕。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:center"&gt;&lt;img height="4146" src="https://oscimg.oschina.net/oscnet/up-8adee0809261b27666b62893ecf019e0589.png" width="2160" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本届大赛以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;「智领创新应用，芯启 AI 蓝图」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为主题，基于壁仞科技自主研发的高性能 GPU ，通过「技术赋能+场景驱动」的双轮机制，聚焦智能政务、医疗健康、教育科技、金融法律等八大重点行业领域，面向企业开发者、高校科研团队及个人创客征集具备商业价值与社会效益的 AI 应用，旨在促进国产算力基础设施与实体经济深度融合。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;据悉，本届大赛获得了重点高校、场景企业、投资机构、金融机构等 12 家单位支持。壁仞科技更是携手合作伙伴向参赛选手提供了「五重惊喜」，打造国产 GPU 背景下的更宏伟的 AI 应用蓝图。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;第二届壁仞科技「飞翔杯」AI 应用创新挑战赛&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/biren_fxcup/" rel="nofollow"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报，名&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;赛事日程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="border-collapse:collapse; border:none; font-family:&amp;quot;Times New Roman&amp;quot;; font-size:10pt; margin-left:-0.6000pt; width:427.8000pt"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-bottom:none; border-left:none; border-right:none; border-top:none; height:59.0500pt; vertical-align:top; width:71.3000pt"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报，名 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;6 月 20 日&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-bottom:none; border-left:none; border-right:none; border-top:none; height:59.0500pt; vertical-align:top; width:76.2500pt"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开，始 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提，交 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;7 月 11 日&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-bottom:none; border-left:none; border-right:none; border-top:none; height:59.0500pt; vertical-align:top; width:80.5000pt"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;截，止&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;提，交&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;8 月 15 日&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-bottom:none; border-left:none; border-right:none; border-top:none; height:59.0500pt; vertical-align:top; width:57.1500pt"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;复，审&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;- 9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-bottom:none; border-left:none; border-right:none; border-top:none; height:59.0500pt; vertical-align:top; width:71.3000pt"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;决，赛 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;8 - &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-bottom:none; border-left:none; border-right:none; border-top:none; height:59.0500pt; vertical-align:top; width:71.3000pt"&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;颁，奖&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;9 月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;参赛对象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;面向企业开发者、高校科研团队及个人创客，并以团体赛形式报名，每队限定 1~5 个人。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;赛题设置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本次大赛设置揭榜赛题和常规赛题两类赛题。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;揭榜赛题由壁仞科技、华山医院、一蓦科技出题，聚焦 AI4S、智慧医疗、实训项目三大场景。揭榜赛题直接匹配企业现有需求，更有机会直接获取合作机会及资金支持。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;常规赛题聚焦智慧政务、医疗健康、教育科技、金融法律、文化传媒、具身智能、先进制造、互联网电商等八大重点行业领域。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报名方式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;即日起，第二届壁仞科技「飞翔杯」AI 应用创新挑战赛正式开启报名啦！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报名方式一：&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fruw9xpnpiv.feishu.cn%2Fshare%2Fbase%2Fform%2Fshrcnp5GagUPERraQX0KsrkqHIc" rel="nofollow" target="_blank"&gt;&lt;u&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#0000ff"&gt;&lt;u&gt;&lt;span&gt;https://ruw9xpnpiv.feishu.cn/share/base/form/shrcnp5GagUPERraQX0KsrkqHIc&lt;/span&gt;&lt;/u&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报名方式二：扫描下方二维码，获取报名信息。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img height="252" src="https://oscimg.oschina.net/oscnet/up-a9e468acbf6bd697baae4d8393b3e2d3616.png" width="257" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;作品提交&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;报名成功后，行业组与高校组作品分不同的平台进行提交。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;行业组作品提交&lt;/strong&gt;：模力方舟平台；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;高校组作品提交&lt;/strong&gt;：浙大智海 Mo 平台；&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提交内容为 zip 压缩包，包含在线演示视频录制、应用介绍 PPT、DEMO 体验地址、代码工程（可选）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;参赛即可获得五重惊喜！&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;1、高性能算力支持：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;依托壁仞科技自主研发的高性能 GPU，大赛组织方已上线 8 大类近 20 种典型模型的 API 接口，并提供大量免费算力券！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;2、全栈式技术指导：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;强大技术团队坐镇！参赛者可获得来自壁仞科技及合作伙伴提供的 GPU 算力支持及模型调用专业指导。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;3、专业评审团队：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;由行业专家、资深工程师、学术界大咖、资深投资人组成的评审委员会，确保比赛的公正性和专业性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;4、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;最高可获 5 万元奖励：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本届「飞翔杯」大赛设立丰厚奖金池！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;本次大赛分为卓越、标杆、创新、潜力四大等级，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;行业组最高奖励可达 5 万元，高校组最高奖励 3 万元！&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;值得一提的是，所有获奖团队将会获得赛事组织方颁发的获奖证书，获奖团队队员可获得壁仞科技提供的优秀 AI 应用开发者证书！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;5、&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;超豪华曝光大礼包：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;投资人面对面：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;进入决赛的团队可获得与投资机构交流的机会！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;OFFER 请查收：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;优胜者将有机会获得壁仞科技合作机会、实习就业直通卡！参与技术社区线下沙龙活动，与大咖深入交流！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;大商机强曝光：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;参与揭榜题及有意商业化的项目，主办方将于赛事结束后为团队对接感兴趣的企业，为项目提供业务合作机会！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;赶快报名「飞翔杯」AI 应用创新挑战赛吧，让梦想在这里启航！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#8f959e"&gt;*大赛解释权归大赛组委会&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;关于壁仞科技：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;壁仞科技成立于 2019 年，致力于研发高性能通用 GPU，打造自主原创的高性能 GPU 软硬件体系，构建国产智能计算产业生态。首代壁仞通用 GPU 产品基于原创训推一体芯片架构，已在多地智算中心落地。新一代全国产产品研发正全面推进。近期，壁仞科技实现中国首个四种及以上异构芯片混训技术落地，突破了大模型算力孤岛难题，引领业界异构混训技术发展趋势。合作伙伴包括中国移动、中国电信、中兴通讯等。截至目前，壁仞科技在全球多个国家和地区累计申请专利近 1200 项，获得专利授权 430 余项&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;想了解壁仞科技更多信息，请前往&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.birentech.com%2F%25E8%258E%25B7%25E5%258F%2596%25E3%2580%2582" rel="nofollow" target="_blank"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3370ff"&gt;https://www.birentech.com/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;获取。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4806939/blog/18633161</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4806939/blog/18633161</guid>
      <pubDate>Sat, 10 May 2025 08:03:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>模力方舟 17 款 Embedding 和 Reranker 模型全部免费使用</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;为了让更多开发者和企业能够零门槛体验最前沿的 AI 能力，模力方舟携手国产 GPU 伙伴，已将模型广场中 17 款 Embedding 与 Reranker 模型全部开放免费使用——其中包括最新的 4096 维 Qwen3-Embedding-8B。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0623/160005_Q4xj_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;RAG 架构必备的检索向量和重排序能力，即刻零成本上手！&lt;/p&gt; 
&lt;p&gt;更多免费模型，尽在模力方舟模型广场：&lt;em&gt;&lt;strong&gt;&lt;a href="https://ai.gitee.com/serverless-api" target="_blank"&gt;https://ai.gitee.com/serverless-api&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356859</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356859</guid>
      <pubDate>Sat, 10 May 2025 08:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Anthropic 发布 Claude Code 的 VS Code 扩展</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Anthropic 已为&amp;nbsp;VS Code&amp;nbsp;发布了&amp;nbsp;Claude Code&amp;nbsp;扩展。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0623/155007_jjcF_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，它能自动检测并安装，通过自动添加选定文本到&amp;nbsp;Claude&amp;nbsp;的上下文、在&amp;nbsp;VSCode&amp;nbsp;的差异查看器中显示代码更改、支持快捷键以及查看编辑器中打开的文件等功能来提升编码体验。&lt;/p&gt; 
&lt;p&gt;Claude Code for VSCode 插件主要特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;集成紧密&lt;/strong&gt; ：安装后，Claude Code 能与 VSCode 紧密集成， Claucte 提出的编辑建议以内联方式在文件中显示，简化代码审查和跟踪过程。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;操作便捷&lt;/strong&gt; ：在 VSCode 中，使用 &lt;code&gt;Cmd+Esc&lt;/code&gt;（Mac）或 &lt;code&gt;Ctrl+Esc&lt;/code&gt;（Windows/Linux）可直接从编辑器打开 Claude Code，也可点击 UI 中的相应按钮；使用 &lt;code&gt;Cmd+Option+K&lt;/code&gt;（Mac）或 &lt;code&gt;Alt+Ctrl+K&lt;/code&gt;（Linux/Windows）可插入文件引用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;功能实用&lt;/strong&gt; ：如代码片段所述，该插件支持自动检测已安装插件，可通过快捷键将选中代码发送至 Claude，还能在 VSCode 的 Diff 视图中直接查看代码变更。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下载地址：&lt;em&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Danthropic.claude-code" target="_blank"&gt;https://marketplace.visualstudio.com/items?itemName=anthropic.claude-code&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356857/claude-code-for-vs-code</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356857/claude-code-for-vs-code</guid>
      <pubDate>Sat, 10 May 2025 07:56:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>MiniMax 宣布 Hailuo Video Agent 开启 Beta 公测</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;MiniMax 宣布旗下视频创作 Agent 产品——Hailuo Video Agen&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FyphAy5SDzmOzUsNB21lsvA" target="_blank"&gt;t 已开放 Beta 版本&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-118191fd968c50acaec868448d58c4508b0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，在 Hailuo Video Agent 中，为了提供足够大的创意空间，且保证好的质量， MiniMax 做了以下设计：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;抛弃传统工作流+节点的工具模式，通过 LLM 语言模型的工具调用能力，创新性地支持用户在自然语言描述中构建完整视频；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;打造视频构思、资料收集、分镜制作、剪辑、配音等视频制作全流程工具集，并通过 Agent 模型在不同阶段实现自动调用。为了提高短片创作的质量，我们遴选了所有视频创作需要的最佳工具集；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Agent 思维链可视化，用户实时查看 Agent 创作流程，为自定义编辑功能提供可视窗口与操作空间。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Web 端登录 https://hailuoai.com/ 即可体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356853</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356853</guid>
      <pubDate>Sat, 10 May 2025 07:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>图挖掘在反作弊场景的应用</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;本文全面探讨了营销活动反作弊与电商反作弊的图算法应用。首先介绍了黑产薅取活动奖励、刷单等作弊行为的背景，随后深入讲解了同人挖掘技术，包括同人建模、挖掘步骤及稳定性处理。接着，依次介绍了标签传播算法、Fraudar 算法、GCN 网络的原理、优缺点及应用。最后，文章展望了未来图算法在风控反作弊应用的发展方向，如多模态数据融合与动态图实时计算，旨在应对黑产的快速演化，确保营销活动的公平性与数据真实性。&lt;/p&gt; 
&lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;01 业务背景&lt;/h1&gt; 
&lt;p&gt;在营销活动场景中，黑产团伙通过自动化手段大规模获取活动奖励，挤占真实用户权益造成营销资金浪费，并污染数据指标导致活动效果失真，从而影响运营决策准确性。&lt;/p&gt; 
&lt;p&gt;以当前主流作弊模式为例，黑产实施路径如下：&lt;/p&gt; 
&lt;p&gt;1. 资源准备阶段：通过虚拟机登录批量购买的百度账号。&lt;/p&gt; 
&lt;p&gt;2. 任务执行阶段：部署自动化脚本模拟用户行为，如视频播放、广告点击等。&lt;/p&gt; 
&lt;p&gt;3. 资金变现阶段：使用分散的真实微信账号进行提现操作。&lt;/p&gt; 
&lt;p&gt;在与反作弊的对抗中，黑产工具持续升级（如改机工具、IP 池轮换等），传统特征采集数据趋于分散。我们的反作弊体系从两个方向不断提升防御能力：&lt;/p&gt; 
&lt;p&gt;1. 多维特征挖掘，包括设备指纹、行为特征以及环境特征。&lt;/p&gt; 
&lt;p&gt;2. 关联团伙分析，包括用户操作模式量化、暱称相似度分析以及基于账号-设备-提现账户等信息建立关联图谱。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-b567c76d759b133c58127296b4127e848a9.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;上图为云手机工具示例。&lt;/p&gt; 
&lt;p&gt;在电商场景中，存在着类似于营销活动的批量团伙作弊，典型的即刷单。刷单作弊即非真实有购买需求的用户（机器或众包真人）为了提升店铺的销量、评分，替店铺虚假的下单、评价，然后收取店铺报酬的一种作弊方式。&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;02 同人挖掘&lt;/h1&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;2.1 同人建模&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;黑产为了节省成本往往存在账号、设备共用的情况，因此我们定义「同人」概念：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;若参与活动的账号、设备背后的主体相同，则为一个同人团伙。&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在账号之外，增加一个同人粒度进行数据监控和风险控制。例如，某人使用 5 个手机号分别注册 5 个 uid，并使用 2 个身份证进行实名认证，每天在 3 个设备上参与活动，并将收益提取到 2 个微信账号中，我们希望通过构图将其归类为一个同人团伙。&lt;/p&gt; 
&lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
&lt;h3&gt;2.1.1 同人挖掘&lt;/h3&gt; 
&lt;p&gt;挖掘步骤可分为以下 3 步：&lt;/p&gt; 
&lt;p&gt;1. 以用户百度账号为节点，共设备 ID/手机号/提现 ID/身份证号（加密）为边构图&lt;/p&gt; 
&lt;p&gt;2. 挖掘极大连通子图，即有边的强连通判为同人关系&lt;/p&gt; 
&lt;p&gt;3. 在多天参与活动的用户上挖掘同人关系，并与历史挖掘结果进行拼接，做同人 ID 稳定性处理&lt;/p&gt; 
&lt;span id="OSC_h3_5"&gt;&lt;/span&gt; 
&lt;h3&gt;2.1.2 稳定性处理&lt;/h3&gt; 
&lt;p&gt;在与历史同人结果拼接时，可将情况分为以下几类：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-ab1a6ef3b27b0b9b955c9dc6b8740c0fc75.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;经过稳定性处理后，整体同人 ID 稳定性达 96.8%，排除已知合并等不稳定因素稳定性达 99.3%。&lt;/p&gt; 
&lt;span id="OSC_h2_6"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;2.2 挖掘结果&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;由于线上已有一对多业务规则，同人团伙会采用多对多打散以绕过规则。&lt;/p&gt; 
&lt;p&gt;以下展示部分典型团伙构图：&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-7ce79c7f88211177a7133e1a96d8e3daec7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_7"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;2.3 同人应用&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;作弊识别&lt;/strong&gt;&lt;/strong&gt;：按照团大小逐渐收敛，从同人作弊株连、团内作弊风险浓度高、同人且有作弊风险几个思路进行策略迭代。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;发放打压&lt;/strong&gt;&lt;/strong&gt;：对于作弊风险较低的羊毛党用户，业务侧可根据情况进行奖励发放打压。&lt;/p&gt; 
&lt;span id="OSC_h1_8"&gt;&lt;/span&gt; 
&lt;h1&gt;03 标签传播算法及其应用&lt;/h1&gt; 
&lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;3.1 标签传播算法&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;标签传播算法（Label Propagation Algorithm，LPA）是一种基于图的&lt;strong&gt;&lt;strong&gt;半监督&lt;/strong&gt;&lt;/strong&gt;学习算法，常用于社区检测和节点分类任务。它通过迭代传播标签信息，利用数据结构的相似性来推断未知节点的标签。&lt;/p&gt; 
&lt;span id="OSC_h3_10"&gt;&lt;/span&gt; 
&lt;h3&gt;3.1.1 算法流程&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;输入&lt;/strong&gt;：图&lt;span class="math-tex"&gt;\(G=(V,E)\)&lt;/span&gt;，已知标签节点集合&lt;span class="math-tex"&gt;\(V_L\)&lt;/span&gt;，未知标签节点集合&lt;span class="math-tex"&gt;\(V_U\)&lt;/span&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;输出&lt;/strong&gt;：所有节点预测标签&lt;span class="math-tex"&gt;\({\{y_i\}}_{i\in V}\)&lt;/span&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;初始化阶段&lt;/strong&gt;：为每个已标记节点&lt;span class="math-tex"&gt;\(v\in V_L\)&lt;/span&gt;分配固定标签&lt;span class="math-tex"&gt;\(y_v\)&lt;/span&gt;，为每个未标记节点&lt;span class="math-tex"&gt;\(v\in V_U\)&lt;/span&gt;随机分配标签（或按先验分布分配）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;迭代传播阶段&lt;/strong&gt;：对于每个未标记节点，将出现频率最高的邻居标签作为自己的新标签。&lt;/p&gt; 
&lt;p&gt;定义&lt;span class="math-tex"&gt;\(N(v)\)&lt;/span&gt;为节点&lt;span class="math-tex"&gt;\(v\)&lt;/span&gt;的邻居集合，&lt;span class="math-tex"&gt;\(y_v^{(t)}\)&lt;/span&gt;为节点&lt;span class="math-tex"&gt;\(v\)&lt;/span&gt;在迭代&lt;span class="math-tex"&gt;\(t\)&lt;/span&gt;时的标签，Ⅱ为指示函数（当&lt;span class="math-tex"&gt;\(y_u=l\)&lt;/span&gt;时为 1，否则为 0）。&lt;/p&gt; 
&lt;p&gt;无权图标签更新规则&lt;span class="math-tex"&gt;\(y_v^{(t+1)} = \argmax_l \displaystyle\sum_{u\in N(v)} \Pi(y_u^{t}=l)\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;加权图标签更新规则&amp;nbsp;&lt;span class="math-tex"&gt;\(y_v^{(t+1)} = \argmax_l \displaystyle\sum_{u\in N(v)} w_{uv} \cdot\Pi(y_u^{t}=l)\)&lt;/span&gt;，其中&lt;span class="math-tex"&gt;\(w_{uv}\)&lt;/span&gt;为边权重。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;终止条件&lt;/strong&gt;：当迭代不再改变任何节点的标签时；或达到最大迭代次数。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-9f71c1149e2ddfb7d9ae359bbdbcd6fc955.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;上图为标签传播示例。&lt;/p&gt; 
&lt;span id="OSC_h3_11"&gt;&lt;/span&gt; 
&lt;h3&gt;3.1.2 实践细节&lt;/h3&gt; 
&lt;p&gt;最高频率标签不唯一时：随机选择（结果可能不稳定），或结合其他信息（如节点度数等）。&lt;/p&gt; 
&lt;p&gt;传播顺序：同步更新（所有节点同时更新，可能振荡），或异步更新（按随机或度排序等顺序逐个更新）。&lt;/p&gt; 
&lt;span id="OSC_h3_12"&gt;&lt;/span&gt; 
&lt;h3&gt;3.1.3 无监督改进&lt;/h3&gt; 
&lt;p&gt;在&lt;strong&gt;&lt;strong&gt;完全无监督&lt;/strong&gt;&lt;/strong&gt;的情况下，仍然可以通过改进方法实现社区检测或聚类任务。面对局部最优问题，使用模块度作为目标函数多次运行。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;算法流程：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 随机初始化所有节点的标签（如 1 到 K，K 为社区数）&lt;/p&gt; 
&lt;p&gt;2. 执行标准 LPA 迭代，直到收敛，计算模块度 Q&lt;/p&gt; 
&lt;p&gt;3. 重复多次，选择模块度最高的划分结果&lt;/p&gt; 
&lt;p&gt;模块度指标的核心思想：社区内部的连接应显著高于随机情况&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(Q = \frac{1}{2m} \sum_{i,j}\Big[A_{ij}-\frac{k_ik_j}{2m}\Big]\delta(c_i,c_j)\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;其中&lt;span class="math-tex"&gt;\(A_{ij}\)&lt;/span&gt;为邻接矩阵元素（节点&lt;span class="math-tex"&gt;\(i\)&lt;/span&gt;和&lt;span class="math-tex"&gt;\(j\)&lt;/span&gt;相连时为 1，否则为 0），&lt;span class="math-tex"&gt;\(k_i\)&lt;/span&gt;为节点&lt;span class="math-tex"&gt;\(i\)&lt;/span&gt;的度数，&lt;span class="math-tex"&gt;\(m\)&lt;/span&gt;为图中总边数&lt;span class="math-tex"&gt;\(m=\frac{1}{2}\sum_iki\)&lt;/span&gt;，&lt;span class="math-tex"&gt;\(c_i\)&lt;/span&gt;节点&lt;span class="math-tex"&gt;\(i\)&lt;/span&gt;所属的社区，&lt;span class="math-tex"&gt;\(\delta(c_i,c_j)\)&lt;/span&gt;若&lt;span class="math-tex"&gt;\(c_i=c_j\)&lt;/span&gt;则为 1，否则为 0。&lt;/p&gt; 
&lt;span id="OSC_h3_13"&gt;&lt;/span&gt; 
&lt;h3&gt;3.1.4 算法优缺点&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;优点：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 计算高效：每轮迭代复杂度&lt;span class="math-tex"&gt;\(O(|E|)\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;2. 无需参数调优：完全基于图结构&lt;/p&gt; 
&lt;p&gt;3. 自然并行化：节点更新可并行执行&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;局限性：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 结果可能不稳定：受初始化顺序影响&lt;/p&gt; 
&lt;p&gt;2. 仅利用拓扑结构：忽略节点特征信息&lt;/p&gt; 
&lt;p&gt;3. 对稀疏图效果差：邻居信息不足时传播受限&lt;/p&gt; 
&lt;span id="OSC_h2_14"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;3.2 在营销活动场景的应用&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在营销活动场景中，黑产在资源准备和任务执行阶段存在批量化的账号生成和活动行为，在挖掘结果中也经常发现存在暱称、行为序列等相似的聚集特征。&lt;/p&gt; 
&lt;span id="OSC_h3_15"&gt;&lt;/span&gt; 
&lt;h3&gt;3.2.1 构图&lt;/h3&gt; 
&lt;p&gt;以用户账号为节点，以暱称与活动点位行为序列为例，分别采用针对字符串、序列相似度的建边算法。&lt;/p&gt; 
&lt;p&gt;暱称相似度：两两计算用户暱称的编辑距离，编辑距离越小说明两个暱称越相似。&lt;/p&gt; 
&lt;p&gt;序列相似度：拼接用户活动点位（活动行为类型标记）-时间作为行为序列，将序列中的打点转换为词频矩阵，使用 MinHash 估计 Jaccard 相似度。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;实践细节&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 预处理，如做暱称长度分桶、异常用户筛选等，减少相似度计算量。&lt;/p&gt; 
&lt;p&gt;2. 使用局部敏感哈希（LSH）进行优化，减少搜索空间。&lt;/p&gt; 
&lt;p&gt;3. 可结合业务场景做相似度阈值过滤，缩减构图输入。&lt;/p&gt; 
&lt;span id="OSC_h3_16"&gt;&lt;/span&gt; 
&lt;h3&gt;3.2.2 团伙挖掘&lt;/h3&gt; 
&lt;p&gt;使用无监督的 LPA 算法进行团伙挖掘，设定团伙阈值、或结合业务场景添加其他特征进行作弊识别。&lt;/p&gt; 
&lt;p&gt;下表为实际应用中，通过用户行为序列相似挖掘出的一个团伙部分数据，其设备和地域并不聚集，但暱称可看出为批量操作。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-cd8efca074b9009b15bde0cbb5f30c8cc46.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_17"&gt;&lt;/span&gt; 
&lt;h1&gt;04 Fraudar 算法及其应用&lt;/h1&gt; 
&lt;p&gt;在电商场景中，用户-店铺之间天然形成一种二部图的结构，二部图是指图中的节点有两类、边有一类，两类节点互相连接，每类节点本身之间没有连接。Fraudar 算法是一种适用于二部图结构的算法，下文详细介绍我们在电商场景的应用。&lt;/p&gt; 
&lt;span id="OSC_h2_18"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;4.1 Fraudar 算法原理&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
&lt;h3&gt;4.1.1 全局可疑度度量&lt;/h3&gt; 
&lt;p&gt;Fraudar 定义了一个全局度量&lt;span class="math-tex"&gt;\(g(S) = \frac{f(S)}{|S|}\)&lt;/span&gt;，其中：&lt;br&gt; ● &lt;span class="math-tex"&gt;\(f(S) = f_v(S) + f_{\epsilon}(S)\)&lt;/span&gt;：子网络&lt;span class="math-tex"&gt;\(S\)&lt;/span&gt;中节点的可疑度之和（&lt;span class="math-tex"&gt;\(f_v\)&lt;/span&gt;）与边的可疑度之和（&lt;span class="math-tex"&gt;\(f_{\epsilon}\)&lt;/span&gt;）；&lt;br&gt; ● 假设在一个用户-商品二部图中，那么&lt;span class="math-tex"&gt;\(f_v(S)\)&lt;/span&gt;可以理解为用户或商品的独立可疑度，&lt;span class="math-tex"&gt;\(f_{\epsilon}(S)\)&lt;/span&gt;可以理解为用户在商品下的订单/评论的可疑度。&lt;br&gt; ● &lt;span class="math-tex"&gt;\(|S|\)&lt;/span&gt;：子网络的规模（节点数）。&lt;br&gt; &lt;span class="math-tex"&gt;\(g(S)\)&lt;/span&gt;表示一个网络的平均可疑度，满足以下四个属性：&lt;/p&gt; 
&lt;p&gt;1. （节点可疑度）当节点总数、边可疑度保持一致时，由较高可疑度的节点组成的网络比由较低可疑度节点组成的网络更可疑。&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(|S| = |S'| \land f_{\epsilon}(S) = f_{\epsilon}(S') \land f_v(S) &amp;gt; f_v(S') \Rightarrow g(S) &amp;gt; g(S')\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;2. （边可疑度）其他条件不变，在网络中添加边会增加该网络的可疑度。&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(e \notin \epsilon \Rightarrow g(S(v, \epsilon \cup \{e\})) &amp;gt; g(S(v, \epsilon))\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;3. （大小）假设节点和边的权重都相等，边的密度也相等，那么更大的网络比小的网络更可疑。其中边的密度$\rho(S)$定义为网络中的边数除以它可能的最大边数。&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(|S| &amp;gt; |S'| \land S \supset S' \land \rho(S) = \rho(S') \Rightarrow g(S) &amp;gt; g(S')\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;4. (集中度) 较小的网络比相同总可疑度但规模更大的网络更可疑。&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(|S| &amp;lt; |S'| \land f(S) = f(S') \Rightarrow g(S) &amp;gt; g(S')\)&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_20"&gt;&lt;/span&gt; 
&lt;h3&gt;4.1.2 抗伪装设计&lt;/h3&gt; 
&lt;p&gt;即使虚假账户添加大量正常连接（伪装），算法仍能通过识别局部密集子网络发现异常，因为伪装行为会导致整体网络稀疏化，而欺诈子网络仍保持高密度。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-12ea6c9656a0117fc3f04e647772db3cd0d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;上图是虚假账户常用的伪装方法，假设为用户-商品网络，那么（a）刷单用户通过向正常商品随机下单伪装；（b）刷单用户通过向正常商品添加有偏的伪装；（c）刷单用户劫持一些正常账户。&lt;/p&gt; 
&lt;p&gt;算法使用了列权重作为边权的方式来抗伪装，即利用商品的边数来定义边权。在一个用户商品图中，算法先确定商品节点的数量，利用 1/log(商品节点边数+5) 确定边权 （边可疑度），然后按照边权汇总求取商品节点、用户节点的权重（节点可疑度）。&lt;/p&gt; 
&lt;span id="OSC_h3_21"&gt;&lt;/span&gt; 
&lt;h3&gt;4.1.3 算法实现流程&lt;/h3&gt; 
&lt;p&gt;利用列权重定义边权能够抵抗虚假账户向正常商品增加边的伪装，因为是往正常商品增加边，不会影响欺诈商品的边数，也即三种伪装方式的欺诈块仍然是高权重的/密集的。而如果使用行权重，那么一个用户通过向正常商品增加边，就可以稀释自己的欺诈边的可疑度，达到伪装的目的。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-3f0893250a1894485d2ba5248e81434106c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;上图是 Fraudar 算法的步骤。迭代移除当前优先级最高的节点（可疑度贡献最低的节点），逐步缩小网络规模，直至所有节点被移除。每一步记录剩余子网络的全局可疑度&lt;span class="math-tex"&gt;\(g(S)\)&lt;/span&gt;。在所有迭代步骤中，&lt;span class="math-tex"&gt;\(g(S)\)&lt;/span&gt;值会先增大后减小，算法保留每一步的迭代结果，选择&lt;span class="math-tex"&gt;\(g(S)\)&lt;/span&gt;达到最大值的子网络作为最可疑的欺诈团伙。&lt;/p&gt; 
&lt;p&gt;由于遍历删除图中可疑度最低的节点是个&lt;span class="math-tex"&gt;\(O(|V|^2)\)&lt;/span&gt;的操作（迭代&lt;span class="math-tex"&gt;\(|V|\)&lt;/span&gt;次，每次找到可疑度最低的节点&lt;span class="math-tex"&gt;\(O(|V|)\)&lt;/span&gt;），因此算法引入了优先树（小顶堆），叶子节点对应图中的节点，父节点记录子节点中的最高优先级，以此实现快速访问和更新优先级。优化后算法需要迭代边数次，每次查找和更新节点优先级的复杂度变为&lt;span class="math-tex"&gt;\(O(log|V|)\)&lt;/span&gt;，算法的总时间复杂度为&lt;span class="math-tex"&gt;\(O(|\epsilon| log|V|)\)&lt;/span&gt;。&lt;/p&gt; 
&lt;p&gt;另外，在实际应用中，只获得可疑度最大的子图可能并不够用，可以在获取一个可疑度最大子图后将其中原始图中删除，然后再在剩余的图中获取次可疑的子图，循环往复得到多个可疑子图。&lt;/p&gt; 
&lt;span id="OSC_h3_22"&gt;&lt;/span&gt; 
&lt;h3&gt;4.1.4 优缺点及改进方向&lt;/h3&gt; 
&lt;p&gt;优势：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;1. 抗伪装能力&lt;/strong&gt;&lt;/strong&gt;通过全局度量而非局部密度，算法能抵抗虚假账户添加正常连接的行为，即使部分节点被「污染」，仍能准确识别核心欺诈簇。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;2. 高效性与可扩展性&lt;/strong&gt;&lt;/strong&gt;利用优先树结构优化节点移除操作，时间复杂度为&lt;span class="math-tex"&gt;\(O(|\epsilon| log |V|)\)&lt;/span&gt;，适用于大规模网络。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;3. 实际应用场景&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;电商刷单检测&lt;/strong&gt;&lt;/strong&gt;：识别虚假评论形成的密集用户-商品子网络。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;社交网络反欺诈&lt;/strong&gt;&lt;/strong&gt;：检测伪卡交易或虚假关注关系。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;金融反洗钱&lt;/strong&gt;&lt;/strong&gt;：发现异常交易团伙。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_23"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;4.2 Fraudar 算法应用&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-928573e7eca9a5c3ce222a41201de5f7d3a.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_24"&gt;&lt;/span&gt; 
&lt;h3&gt;4.2.1 构图与关系降噪&lt;/h3&gt; 
&lt;p&gt;实践中，我们利用用户-店铺的订单关系构建二部图，并且为了提升二部图中的风险浓度，对低风险店铺等做了剪枝实现关系的降噪，然后输入 Fraudar 算法挖掘异常子图。&lt;/p&gt; 
&lt;p&gt;原始的 Fraudar 算法只能挖掘出风险最高的一个子图，但实际业务中，一般不止一个作弊团伙，因此我们在每次运行 Fraudar 算法产生一个子图后，就将这个子图从原始图中裁剪掉，再次运行 Fraudar 算法得到次可疑的子图，即循环 Fraudar。通过这种方法，我们可以获得期望数量的异常子图。&lt;/p&gt; 
&lt;span id="OSC_h3_25"&gt;&lt;/span&gt; 
&lt;h3&gt;4.2.2 结合监督模型&lt;/h3&gt; 
&lt;p&gt;挖掘出的风险子图由用户和店铺构成，而实际业务的识别目标是订单，且风险子图中会掺杂少量正常用户的订单。为了进一步提升算法识别结果的准确率，我们将挖掘出的风险子图输入到 LR 模型进行精细判别。LR 模型使用用户、店铺的特征作为输入，异常订单为正样本、正常订单为负样本训练，最后在风险子图的用户、店铺的订单上区分出异常订单并落地到业务。&lt;/p&gt; 
&lt;span id="OSC_h1_26"&gt;&lt;/span&gt; 
&lt;h1&gt;05 GCN 模型及其应用&lt;/h1&gt; 
&lt;p&gt;上文提到 Fraudar 模型为了提升图的风险浓度做了剪枝降噪，这样提升算法精准的同时会损失一部分召回。并且 Fraudar 本身是无监督模型，还需要结合监督模型做精细化判别。因此我们尝试了端到端的 GCN 模型，提升召回的同时简化了识别链路。&lt;/p&gt; 
&lt;span id="OSC_h2_27"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;5.1 GCN 模型原理&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_28"&gt;&lt;/span&gt; 
&lt;h3&gt;5.1.1 GCN 的核心思想：消息传递与聚合&lt;/h3&gt; 
&lt;p&gt;GCN 的核心是通过邻域聚合更新节点特征，其本质是让每个节点从邻居节点中提取有效信息：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;1. 基础聚合公式：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(H^{(l+1)} = \sigma\left(\hat{D}^{-1/2} \hat{A} \hat{D}^{-1/2} H^{(l)} W^{(l)}\right)\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;其中：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span class="math-tex"&gt;\(\hat{A} = A + I\)&lt;/span&gt;：邻接矩阵加入自连接，防止节点自身信息丢失。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span class="math-tex"&gt;\(\hat{D}\)&lt;/span&gt;：度矩阵的对称归一化，解决节点度数差异导致的权重偏差。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span class="math-tex"&gt;\(W^{(l)}\)&lt;/span&gt;：可学习的权重矩阵，用于特征变换，即卷积核。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span class="math-tex"&gt;\(H^{(l)}\)&lt;/span&gt;：激活值，对于输入层可以理解成特征矩阵。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;2. 关键设计：&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;归一化：通过&lt;span class="math-tex"&gt;\(\hat{D}^{-1/2} \hat{A} \hat{D}^{-1/2}\)&lt;/span&gt;避免度数高的节点主导信息传播，使模型更稳定。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;非线性激活：如 ReLU 函数，增强模型的表达能力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_29"&gt;&lt;/span&gt; 
&lt;h3&gt;5.1.2 数学视角：从拉普拉斯矩阵到频谱域卷积&lt;/h3&gt; 
&lt;p&gt;GCN 的理论基础源自图谱理论，通过将图信号转换到频域进行卷积操作，核心概念：&lt;/p&gt; 
&lt;p&gt;1. 拉普拉斯矩阵：定义为&lt;span class="math-tex"&gt;\(L = D - A\)&lt;/span&gt;，其特征分解&lt;span class="math-tex"&gt;\((L = U \Lambda U^T)\)&lt;/span&gt;将图结构映射到频域空间。&lt;/p&gt; 
&lt;p&gt;2. 图傅里叶变换：利用特征向量矩阵&lt;span class="math-tex"&gt;\(U\)&lt;/span&gt;对节点特征进行频域投影，卷积操作简化为频域的乘积。&lt;/p&gt; 
&lt;p&gt;a. 卷积定理：函数卷积的傅里叶变换是函数傅里叶变换的乘积，即对于函数&lt;span class="math-tex"&gt;\(f(t)\)&lt;/span&gt;与&lt;span class="math-tex"&gt;\(h(t)\)&lt;/span&gt;两者的卷积是其函数傅里叶变换乘积的逆变换。&lt;br&gt; b. 图傅里叶变换把图上定义的任意向量，表示成了拉普拉斯矩阵特征向量的线性组合。&lt;/p&gt; 
&lt;p&gt;3. 切比雪夫近似：为降低计算复杂度，GCN 采用一阶近似（仅考虑直接邻居），公式退化为经典聚合形式。&lt;br&gt; 第一代 GCN：将输入特征通过图傅里叶变换从空域映射到谱域，做卷积运算后再映射回空域。&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(Y = U \cdot g_\theta(\Lambda) \cdot U^T X\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;第二代 GCN：利用切比雪夫多项式近似&lt;span class="math-tex"&gt;\(g_\theta(\Lambda)\)&lt;/span&gt;，避免&lt;span class="math-tex"&gt;\(O(N^3)\)&lt;/span&gt;复杂度的拉普拉斯矩阵分解。&lt;br&gt; 卷积核用 K 阶段切比雪夫多项式展开：&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(g_\theta(\Lambda) = \sum_{k=0}^K \theta_k T_k(\tilde{\Lambda})\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;最终 GCN 公式：&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(Y = \sum_{k=0}^K \theta_k T_k(\tilde{L}) X\)&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;第三代 GCN：只保留一阶切比雪夫多项式，并加入自环和归一化。&lt;/p&gt; 
&lt;p&gt;&lt;span class="math-tex"&gt;\(H^{(l+1)} = \sigma \left( \hat{A} H^{(l)} W^{(l)} \right)\)&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_30"&gt;&lt;/span&gt; 
&lt;h3&gt;5.1.3 模型结构：轻量化与高效性&lt;/h3&gt; 
&lt;p&gt;GCN 的典型结构通常仅需 2-4 层即可完成高效学习，原因在于：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;1. 层数限制&lt;/strong&gt;&lt;/strong&gt;：过深的网络会导致&lt;strong&gt;&lt;strong&gt;过平滑（图中同一连通分量的节点特征趋同）&lt;/strong&gt;&lt;/strong&gt;，因此实践中常用浅层架构。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;2. 参数共享&lt;/strong&gt;&lt;/strong&gt;：每层共享权重矩阵，大幅减少参数量，适合处理大规模图数据。（相对于一个节点一个权重矩阵的全连接形式）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;3. 应用场景&lt;/strong&gt;&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;节点分类&lt;/strong&gt;&lt;/strong&gt;（如电商刷单用户检测）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;图分类&lt;/strong&gt;&lt;/strong&gt;（如分子属性判断）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;链接预测&lt;/strong&gt;&lt;/strong&gt;（如推荐系统好友关系推断）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_31"&gt;&lt;/span&gt; 
&lt;h3&gt;5.1.4 GCN 的优缺点与改进方向&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;1. 优势&lt;/strong&gt;&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;天然融合图结构与节点特征，适合复杂关系建模。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;计算高效，支持稀疏矩阵优化。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;2. 局限&lt;/strong&gt;&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;过平滑问题&lt;/strong&gt;&lt;/strong&gt;：深层网络性能下降。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;静态图假设&lt;/strong&gt;&lt;/strong&gt;：难以处理动态变化的图结构。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_32"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;5.2 GCN 模型应用&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_33"&gt;&lt;/span&gt; 
&lt;h3&gt;5.2.1 构图&lt;/h3&gt; 
&lt;p&gt;利用订单作为节点、订单之间的属性关联关系构建同构图。特征上采用用户、 店铺等风险属性刻画订单，异常订单为正样本、正常订单为负样本。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-e413211583231cf96809e8be84b96306075.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_34"&gt;&lt;/span&gt; 
&lt;h3&gt;5.2.2 风险订单挖掘&lt;/h3&gt; 
&lt;p&gt;由于实际业务中有标签的风险订单、正常订单仅是全量订单的一小部分，因此我们采用了半监督的方式训练 GCN 模型，利用有标签的订单对无标签的订单进行推理。GCN 模型设计上针对的是静态图，应用中我们采用了随着时间窗口滚动构图的方式来适应动态变化的数据，滚动过程中排除了 GCN 模型本身推理的标签，防止对模型自身结果过拟合。&lt;/p&gt; 
&lt;p&gt;这里解释下，为什么我们不采用一个训练好的模型在线上不断的推理，而是滚动的训练推理。这是因为 GCN 模型从原理上属于直推式模型，通常的训练好一个模型后不断的对新数据推理的模型是归纳式模型。GCN 的直推式，本质上是因为卷积计算用到了图的拉普拉斯矩阵，图发生了变化，那么这个拉普拉斯矩阵也就发生变化，训练的模型也就失效了。&lt;/p&gt; 
&lt;p&gt;既然 GCN 是直推式的，这里又产生一个问题，为什么我们不使用归纳式模型呢？事实上，我们对比了 GraphSage 等模型在同样图结构、特征数据上的效果，在我们的场景中比 GCN 效果差，为了保证业务效果我们最终采用的是 GCN。&lt;/p&gt; 
&lt;span id="OSC_h1_35"&gt;&lt;/span&gt; 
&lt;h1&gt;06 总结和展望&lt;/h1&gt; 
&lt;p&gt;在风控反作弊的业务中，我们落地了 LPA、Fraudar、GCN 等算法并取得了良好的效果，未来我们希望做的更多。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;1. 多模态数据融合：从单一图谱到全域关联&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;未来风控需整合图数据、时序数据（如交易频率）、文本数据（如聊天记录）等多模态信息。例如，通过图嵌入技术将设备、IP、地理位置等实体统一表征，构建全域风险画像。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;2. 动态图实时计算：应对黑产快速演化&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;当前黑产通过「少边构造」（刻意断开部分关联）绕过静态图检测，需引入动态图算法（如时序 GNN）实时捕捉行为演变，并结合增量计算优化性能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;3. 可解释性与对抗防御：提升算法可信度&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;探索可视化工具（如子图归因分析）解释 GCN 决策逻辑，并研发对抗训练技术抵御黑产对模型的逆向攻击。&lt;/p&gt; 
&lt;p&gt;图算法正从「辅助工具」升级为风控系统的核心引擎，而未来的挑战在于如何平衡技术效能、业务合规与用户体验。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4939618/blog/18627800</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4939618/blog/18627800</guid>
      <pubDate>Sat, 10 May 2025 07:21:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>jsoup 1.21.1 发布，Java HTML 解析器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;jsoup 1.21.1 现已发布。此版本具有强大的全新节点选择功能，可让用户使用 CSS 选择器锁定特定的 DOM 节点（例如注释和文本节点）、通过新的 TagSet 回调系统进行动态标签自定义，并通过简化的属性转义增强了对突变 XSS 攻击的防御能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此版本还默认提供 HTTP/2 支持，并进行了多项 API 改进以提升开发者体验，并修复了多个 edge-case parsing 问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;Changes&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;删除了以前弃用的方法。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2317" target="_blank"&gt;#2317&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;由于&lt;code&gt;:matchText&lt;/code&gt;pseduo-selector 对 DOM 的副作用，已将其弃用；改用新的&lt;code&gt;::textnode&lt;/code&gt;&lt;span style="color:#192943"&gt;&amp;nbsp;selector&lt;/span&gt;和 &lt;span style="color:#192943"&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23selectNodes%28java.lang.String%2Cjava.lang.Class%29" target="_blank"&gt;Element#selectNodes(String css, Class&amp;lt;T&amp;gt; type)&lt;/a&gt;&lt;/code&gt;方法。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2343" target="_blank"&gt;#2343&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;已弃用&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23bufferUp%28%29" target="_blank"&gt;Connection.Response#bufferUp()&lt;/a&gt;&lt;/code&gt;，以代替&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23readFully%28%29" target="_blank"&gt;Connection.Response#readFully()&lt;/a&gt;&lt;/code&gt;，后者会抛出一个已检查的 IOException。&lt;/li&gt; 
 &lt;li&gt;已弃用的内部方法&lt;span style="color:#192943"&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fhelper%2FValidate.html%23ensureNotNull%28java.lang.Object%29" target="_blank"&gt;Validate#ensureNotNull(Object)&lt;/a&gt;&lt;/code&gt;（由 t&lt;span style="color:#192943"&gt;yped&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fhelper%2FValidate.html%23expectNotNull%28T%29" target="_blank"&gt;Validate#expectNotNull(T)&lt;/a&gt;&lt;/code&gt;替代）；来自 Attribute 和 Node 的受保护 HTML 附加程序。&lt;/li&gt; 
 &lt;li&gt;如果你碰巧正在使用任何已弃用的方法，官方建议立即借此机会迁移它们，因为它们将在未来的版本中被删除。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;Improvements&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;增强了&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FSelector.html" target="_blank"&gt;Selector&lt;/a&gt;&lt;/code&gt;，支持直接匹配注释和文本节点等节点。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2324" target="_blank"&gt;#2324&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTagSet.html%23onNewTag%28java.util.function.Consumer%29" target="_blank"&gt;TagSet#onNewTag(Consumer&amp;lt;Tag&amp;gt; customizer)&lt;/a&gt;：注册一个回，当每个新的或克隆的标签插入到集合中时，都会调用该回调函数。该函数支持动态调整标签选项（例如，将所有自定义标签标记为自闭合，或将给定命名空间中的所有内容标记为保留空格）。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2330" target="_blank"&gt;#2330&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;使&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTokenQueue.html" target="_blank"&gt;TokenQueue&lt;/a&gt;&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FCharacterReader.html" target="_blank"&gt;CharacterReader&lt;/a&gt;&lt;/code&gt;可自动关闭，以确保它们将缓冲区释放回缓冲池，以供以后重用。&lt;/li&gt; 
 &lt;li&gt;添加了&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FSelector.html%23evaluatorOf%28java.lang.String%29" target="_blank"&gt;Selector#evaluatorOf(String css)&lt;/a&gt;&lt;/code&gt;，以更清晰的方式从 CSS 查询中获取评估器。这是&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FQueryParser.html%23parse%28java.lang.String%29" target="_blank"&gt;QueryParser.parse(String css)&lt;/a&gt;&lt;/code&gt;的别名。&lt;/li&gt; 
 &lt;li&gt;可以将外部命名空间（例如 SVG）中的自定义标签（通过&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTagSet.html" target="_blank"&gt;TagSet&lt;/a&gt;&lt;/code&gt;定义）配置为数据标签进行解析。&lt;/li&gt; 
 &lt;li&gt;添加&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FNodeVisitor.html%23traverse%28org.jsoup.nodes.Node%29" target="_blank"&gt;NodeVisitor#traverse(Node)&lt;/a&gt;&lt;/code&gt;以简化节点遍历调用（相对于导入&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FNodeTraversor.html" target="_blank"&gt;NodeTraversor&lt;/a&gt;&lt;/code&gt;）。&lt;/li&gt; 
 &lt;li&gt;更新了默认用户代理字符串以提高兼容性。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2341" target="_blank"&gt;#2341&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HTML 解析器现在允许为已知标签自定义特定的文本数据类型 (Data、RcData)。（之前此功能仅支持自定义标签。）&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2326" target="_blank"&gt;#2326&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加了&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23readFully%28%29" target="_blank"&gt;Connection.Response#readFully()&lt;/a&gt;&lt;/code&gt;，以替代&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23bufferUp%28%29" target="_blank"&gt;Connection.Response#bufferUp()&lt;/a&gt;&lt;/code&gt;，并明确了 IOException。同样，添加&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23readBody%28%29" target="_blank"&gt;Connection.Response#readBody()&lt;/a&gt;&lt;/code&gt;代替&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23body%28%29" target="_blank"&gt;Connection.Response#body()&lt;/a&gt;&lt;/code&gt;。已弃用&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23bufferUp%28%29" target="_blank"&gt;Connection.Response#bufferUp()&lt;/a&gt;&lt;/code&gt;。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2327" target="_blank"&gt;#2327&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;序列化 HTML 时，属性中的&lt;code&gt;&amp;lt;&lt;/code&gt;和&lt;code&gt;&amp;gt;&lt;/code&gt;字符现在会被转义。这有助于防止一类变异 XSS 攻击。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2337" target="_blank"&gt;#2337&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;已更改&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html" target="_blank"&gt;Connection&lt;/a&gt;&lt;/code&gt;为优先使用 JDK 的 HttpClient 而非 HttpUrlConnection（如果可用），以默认启用 HTTP/2 支持。用户可以通过禁用&lt;code&gt;-Djsoup.useHttpClient=false&lt;/code&gt;关闭该功能。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2340" target="_blank"&gt;#2340&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;Bug Fixes&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;&lt;code&gt;svg&lt;/code&gt;外部上下文中的&lt;code&gt;script&lt;/code&gt;内容应被解析为脚本数据，而非文本。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2320" target="_blank"&gt;#2320&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fparser%2FTag.html%23isFormSubmittable%28%29" target="_blank"&gt;Tag#isFormSubmittable()&lt;/a&gt;&lt;/code&gt;正在更新标签的选项。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2323" target="_blank"&gt;#2323&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;当文本跟在块元素中的内联元素之后时，HTML pretty-printer&amp;nbsp;会错误地修剪空格。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2325" target="_blank"&gt;#2325&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;名称中带有连字符或其他非字母字符的自定义标签现在可以正确用作 Data 或 RcData 标签。它们的结束标签现在也能正确标记。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2332" target="_blank"&gt;#2332&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;克隆元素时，克隆将保留源的缓存子元素列表（如果有），这可能导致在修改克隆的子元素时出现不正确的结果。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2334" target="_blank"&gt;#2334&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更新说明：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fnews%2Frelease-1.21.1" target="_blank"&gt;https://jsoup.org/news/release-1.21.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/356839/jsoup-1-21-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/356839/jsoup-1-21-1-released</guid>
      <pubDate>Sat, 10 May 2025 06:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
