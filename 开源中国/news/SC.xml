<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 31 May 2024 15:02:37 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>开源日报 | 开箱即用的 ChatTTS 安装包；Scaling Law 是经验公式；二娃奶爸 AI 复活旧玩具；中国工程院院士谈 AI；自主内核 MCU 故事难讲？TikTok「美国特供版」推荐算法</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.5.31&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/295109/ubuntu-24-04-real-time&quot; target=&quot;news&quot;&gt;Canonical 发布实时内核 (Real-time) 版 Ubuntu 24.04 LTS&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Canonical 工程师介绍称：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通过确保首先执行高优先级进程并具有确定性的响应时间，与主线 Linux 相比，实时 Ubuntu 24.04 LTS 减少了延迟，增强了系统有效处理时间敏感操作的能力。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;实时内核版 Ubuntu 24.04 LTS 集成了 AMD64 和 ARM64 上的 PREEMPT_RT 补丁。作为事实上的 Linux 实时实现，PREEMPT_RT 通过修改现有内核代码来提高可预测性。通过对关键任务延迟要求的有时限响应，实时 Ubuntu 24.04 LTS 为从制造和汽车到电信运营商的关键基础设施等各行业最苛刻的工作负载提供确定性处理。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;基于上游 v6.8 内核，Real-time Ubuntu 24.04 版本还包括对 Raspberry Pi 硬件的优化支持，以在广泛的计算范围内提供增强的性能和兼容性。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;借助 Ubuntu 24.04 LTS，用户可以探索 Raspberry Pi 4 和 5 上优化实时计算的可能性，推动创新并释放嵌入式领域的新机遇&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOgO23Cn8P&quot; target=&quot;_blank&quot;&gt;开箱即用的 ChatTTS 安装包来了&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;最近爆火的 TTS 项目 ChatTTS，开源社区有位大佬为它创建 Web 界面和 API 接口，提供了网页中使用 ChatTTS 合成语音及 API 接口服务，支持 Windows、Linux、macOS 部署。其中 Windows 用户可直接下载安装包，一键安装开箱即用！&lt;/p&gt; 
  &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f75c06af264dde47066b53d8d1f3d5d221d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;p&gt;GitHub：github.com/jianchang512/ChatTTS-ui&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1433031.htm&quot; target=&quot;_blank&quot;&gt;纳德拉已会面奥特曼：担心 OpenAI 与苹果合作影响微软&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;对 OpenAI 来说，与苹果合作显得至关重要。微软将 OpenAI 的技术转售给其企业软件和云客户，这在一定程度上限制了 OpenAI 发展自身企业销售业务的空间。但若能接触到数十亿苹果移动设备的用户，就可能为 OpenAI 的业务开辟新的途径。&lt;/p&gt; 
&lt;p&gt;不过，苹果与 OpenAI 的合作也引起了微软的担忧。这家企业软件和云计算领域的巨头正试图利用 OpenAI 的技术在消费者市场中取得突破，苹果与 OpenAI 的交易可能会对这些尝试构成威胁。&lt;/p&gt; 
&lt;p&gt;但从另一方面看，如果苹果确实使用了 OpenAI 的技术，微软也可能从中获益，因为 OpenAI 需要支付费用使用微软的数据中心运行其对话式 AI，这将增加微软的云收入。&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1433010.htm&quot; target=&quot;_blank&quot;&gt;担心技术被转移到中国，美国正减缓 NVIDIA 和 AMD 向中东出口 AI 芯片的速度&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;彭博社报道，据熟悉内情的人士透露，美国官员已经放缓了向 NVIDIA 公司和 Advanced Micro Devices 公司等芯片制造商发放向中东地区大规模运送人工智能加速器的许可证，与此同时，美国官员正在对该地区的人工智能发展进行国家安全审查。&lt;/p&gt; 
&lt;p&gt;这些人表示，目前还不清楚审查需要多长时间，也没有关于什么是大批量货物的具体定义，因为讨论是私下进行的，所以他们要求不公开身份。这些人说，官员们尤其关注大批量销售，因为包括阿拉伯联合酋长国和沙特阿拉伯在内的国家都希望大量进口人工智能数据中心使用的芯片。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5648162302%2FOgOdJudSk&quot; target=&quot;_blank&quot;&gt;devv.ai 发布 Devv GitHub Mode&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;devv.ai 发布 Devv GitHub Mode，支持直接连接 GitHub 仓库，进行搜索、提问、生成代码。&lt;/p&gt; 
&lt;p&gt;GitHub Mode 的使用场景：&lt;/p&gt; 
&lt;p&gt;1. 快速了解一个开源项目是做什么的&lt;br&gt; 2. 了解开源项目中的某些具体实现&lt;br&gt; 3. 基于现有的代码生成新的代码&lt;br&gt; 在 devv.ai 中选择 GitHub 模式，即可体验，目前在 public beta 中，完全免费。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1240212845%2FOgIZ9ciC4&quot; target=&quot;_blank&quot;&gt;多篇关于 Android 虚拟化技术的研究论文和资料汇总&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;《pianpian315/VirtualAndroid: Android 虚拟化研究》&lt;br&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpianpian315%2FVirtualAndroid&quot; target=&quot;_blank&quot;&gt;https://github.com/pianpian315/VirtualAndroid&lt;/a&gt;&lt;/p&gt; 
  &lt;p&gt;一个关于 Android 虚拟化研究的仓库，提供了多篇关于 Android 虚拟化技术的研究论文和资料汇总，旨在为研究人员和开发者提供关于 Android 虚拟化的知识和实现资源。 &lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;Maeiee&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F3181671860%2FOgEp4gh20&quot; target=&quot;_blank&quot;&gt;还是干黑产挣钱啊...&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;还是干黑产挣钱啊...美司法部今天这个通告很有料,逮捕了一个中国籍恶意软件和代理服务网络提供者&lt;/p&gt; 
  &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.justice.gov%2Fopa%2Fpr%2F911-s5-botnet-dismantled-and-its-administrator-arrested-coordinated-international-operation&quot; target=&quot;_blank&quot;&gt;https://www.justice.gov/opa/pr/911-s5-botnet-dismantled-and-its-administrator-arrested-coordinated-international-operation&lt;/a&gt;&lt;/p&gt; 
  &lt;p&gt;起诉书指控，从 2018 年到 2022 年 7 月，王通过其 911 S5 操作出售被劫持的代理 IP 地址，获得了大约 9900 万美元的收益，这些收益通过加密货币或法定货币交易获得。王利用非法所得购买了位于美国、圣基茨和尼维斯、中国、新加坡、泰国和阿拉伯联合酋长国的房地产。起诉书列出了数十项待没收的资产和财产，包括一辆 2022 款法拉利 F8 Spider S-A、一辆宝马 i8、一辆宝马 X7 M50d、一辆劳斯莱斯、十几个国内外银行账户、二十多个加密货币钱包、几块奢华手表、21 处住宅或投资物业（分布在泰国、新加坡、阿联酋、圣基茨和尼维斯以及美国），以及 20 个域名&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;宫一鸣 cn&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn795061014&quot; target=&quot;_blank&quot;&gt;丰年资本对话达梦数据:激荡 40 年，国产数据库市占率 No.1 的坚守&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;40 年的时间内，国产数据的发展确实发生了很大的改变和进化。粗略而谈，可大致分为四个阶段：&lt;/p&gt; 
  &lt;p&gt;1980 年—1990 年是以课题组为主要形式的理论研究阶段。达梦创始人冯裕才老师也在此期间开始对数据库理论进行研究，1988 年中国第一个数据库管理系统模型 CRDS 诞生在达梦前身研究所。&lt;/p&gt; 
  &lt;p&gt;1990—2000 年是由高校与科研机构实现数据库原型产品的开发阶段。这期间，达梦在 1992 年成立数据库与多媒体研究所，随后推出了数据库管理系统 DM1、DM2。&lt;/p&gt; 
  &lt;p&gt;2000 年—2012 年最早一批国产数据库厂商逐渐成立，进行了部分产品的示范及应用推广，正式步入公司化运作阶段。包括达梦，成立于 2000 年。&lt;/p&gt; 
  &lt;p&gt;2013 年至今，国产数据库市场进入蓬勃发展时期。国产数据库全面推广应用，市场化竞争开始，加上云技术时代和开源社区兴起，诞生了许多数据库公司，大部分国产数据库开始弯道超车。这时候，基于 40 年技术沉淀和多年来自主创新的基础上，达梦逐步布局了完备的数据库系列产品，覆盖了 50 多个涉及国计民生的重要行业。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;读懂数字科技&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FOgLwUFmSb%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;YC 创始人保罗·格雷厄姆亲自辟谣 Sam 被 YC 炒鱿鱼的谣言&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;有人说 YC 解雇了 Sam Altman，这不是真的。实际情况是这样的：几年来，Sam 一直同时管理 YC 和 OpenAI。但当 OpenAI 宣布要成立一个营利性子公司，并由 Sam 担任 CEO 时，我们（具体是 Jessica）告诉他，如果他打算全职投入 OpenAI，我们应该找其他人来管理 YC，他同意了。如果他说要找人来当 OpenAI 的 CEO，好让他可以专注于 YC，我们也会同意。我们并不想让他离开，只是希望他能在这两者中做出选择。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;宝玉 xp&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1064649941%2FOgDwEmJlE&quot; target=&quot;_blank&quot;&gt;Scaling Law 其实是个经验公式&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;Scaling Law 其实是个经验公式，最初是 OpenAI 在 2020 年提出来的，现在大家遵循的应该是 DeepMind 在 22 年提出的 Chinchilla Scaling Laws（Chinchilla Scaling Laws：为了使模型达到最佳性能，模型参数量应与训练集的大小成等比例扩张。），尽管它被称为 Law，但它是通过大量的实验来得出的关于模型规模、训练数据增长和对应模型效果增长的关系公式。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;张俊林 say&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6004281123%2FOgFERAe0X%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;二娃奶爸 AI 复活旧玩具&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;身为两个孩子的爸爸，极客王乐动手改造了家里的火火兔，把即将淘汰的儿童故事机魔改成拥有 AI 智慧的陪伴玩具。无数工程师爸爸加入了他的二手玩具魔改社群，海外订单也纷至沓来。因为一个好奇念头，国内的 AI 玩具赛道出现了。重生吧，旧玩具们！&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;梨视频&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8a1q0xloKDc&quot; target=&quot;_blank&quot;&gt;罕见同台：xAI、Llama 3 和 Mistral 的核心科学家对谈，详解三家最强模型背后的一切&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;GenAI 旧金山峰会第一天，xAI 联合创始人 Tony Wu，Llama 2 和 Llama 3 联合作者 Sharan Narang，以及 Mistral AI 研究科学家 Devendra Chaplot 同场的小组讨论异常火爆，吸引了众多硅谷 AI 开发者。&lt;/p&gt; 
 &lt;p&gt;三位都是资深技术专家，也都是业内顶尖模型的缔造者，各自带领一支炙手可热的 AI 团队：马斯克旗下 xAI 刚刚宣布完成史上最大的 60 亿美元 B 轮融资，估值 180 亿美元风头正盛；Llama 独自顶起开源模型半边天，蓄势待发的 Llama3-400B 被视为「可能改写人工智能生态版图」；而欧洲最火 AI 公司 Mistral 凭实力获得微软垂青，在较小尺寸模型的开发上马不停蹄、一路狂奔。&lt;/p&gt; 
 &lt;p&gt;在这场时长 40 分钟、主题为「A Deep Dive into the State-of-Art LLMs」的分享中，Tony、Sharan 和 Devendra 透露了各自公司的最新动向，深入讨论了模型预训练、数据质量及合成数据、多模态模型挑战和 Transformer 创新替代架构，预测 2025 年的人工智能突破，也对观众关于小模型企业用例、杜绝幻觉与偏见和 Mamba 架构的提问进行了解答。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 硅星人&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-05-31%2Fdoc-inaxakrn0892992.shtml&quot; target=&quot;_blank&quot;&gt;中国工程院院士孙凝晖谈 AI：拼算法还是拼新型基础设施？中国如何选择智能计算发展道路&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;孙凝晖也指出，中国 AI 技术与智能计算产业过去几年虽然取得很大成绩，但依然面临诸多发展困境：&lt;/p&gt; 
 &lt;p&gt;困境一为美国在 AI 核心能力上长期处于领先地位，中国处于跟踪模式。&lt;/p&gt; 
 &lt;p&gt;困境二为高端算力产品禁售，高端芯片工艺长期被卡。&lt;/p&gt; 
 &lt;p&gt;困境三为国内智能计算生态孱弱，AI 开发框架渗透率不足。&lt;/p&gt; 
 &lt;p&gt;困境四为 AI 应用于行业时成本、门槛居高不下。&lt;/p&gt; 
 &lt;p&gt;困境五，中国在 AI 领域的人才数量与实际需求相比也明显不足。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#2b2b2b&quot;&gt;每日经济新闻&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-05-31%2Fdoc-inaxcfva0577560.shtml&quot; target=&quot;_blank&quot;&gt;一周市值涨超 1 个高通近 10 个惠普，英伟达凭什么赢麻了？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「DOCA 现在还是小 baby，可是今天的 DOCA 就跟 20 年前的 CUDA 一样。」英伟达网络市场部相关负责人表示，如果将企业购买 CPU、GPU 等比喻为买赛车，那么 CUDA、DOCA 就如同赛车的轮子，只有赛车的轮子够强够壮，才能承载起赛车在不同路面和更远距离上奔跑。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- &lt;strong&gt;时代周报-时代在线&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_5787529871_158f6b28f01901bq82.html&quot; target=&quot;_blank&quot;&gt;腾讯元宝，脸上写的是 APP，心里藏的是 OS&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;就像扫码支付一样，用户不再愿意随身携带现金，而是会想尽办法保证手机电量充足，这就是微信钱包培养用户的结果。如果腾讯元宝在腾讯的地位和微信类似，那么腾讯很可能会开始想办法来带领用户走进大模型时代，进而释放来自 AI 大模型那 99% 的潜力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;数据猿&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8a0l7kkmOAs&quot; target=&quot;_blank&quot;&gt;国产大模型破晓时，曙光全栈 AI 亮剑&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;随着大模型发展中的&lt;strong&gt;硬件瓶颈&lt;/strong&gt;凸显，&lt;strong&gt;软件优化&lt;/strong&gt;成为一条必由之路。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在近日举办的 2024 中国生成式 AI 大会上，国产算力龙头&lt;strong&gt;中科曙光&lt;/strong&gt;亮出 AI 软件「肌肉」，推出&lt;strong&gt;曙光 AI 基础软件系统 DAS&lt;/strong&gt;，为大模型迁移和优化提供了一条新捷径。&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;众所周知，中科曙光是国产算力之光的代表。在大模型的驱动下，曙光又建立起了&lt;strong&gt;软硬一体和 AI 全链路能力&lt;/strong&gt;，展现了算力玩家能力扩圈的新趋势。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;智东西&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chinastarmarket.cn%2Fdetail%2F1691897&quot; target=&quot;_blank&quot;&gt;自主内核 MCU 故事难讲？百亿估值芯片商芯旺微冲刺科创板失利&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;目前业内公认 MCU 产品技术门槛较低，并且走向高端化十分困难。在 2021 年芯片行情紧俏的市场信号下，众多厂商蜂拥而扩增产能，加剧了 MCU 行业的竞争。A 股市场知名度较高的公司包括兆易创新、中微半导、复旦微电、芯海科技等。&lt;/p&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;今年以来，MCU 产品需求仍未见明显起色。头部晶圆厂今年一季度表示，该公司还处于需求疲软的产品是 MCU，2024 年第一季度 MCU 订单依旧偏弱，希望能在今年下半年看到市场的全面复苏。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- &lt;strong&gt;科创板日报&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn795105927&quot; target=&quot;_blank&quot;&gt;新闻调查｜从 GPT-4o 看人工智能竞争的走向和挑战&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;人工智能（AI）的发展正以惊人速度向前推进。近期，全球多家公司推出的最新大模型让人目不暇接，特别是 GPT-4o 等产品备受关注。接下来全球这一领域竞争的焦点在哪里？各国人工智能发展将面临哪些挑战？&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- &lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;新华社&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_2357213493_8c80393502001ho8i.html&quot; target=&quot;_blank&quot;&gt;进击中 Sora&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;「世界模拟器」的激励之下，佼佼者众。继 2024 年 3 月 18 日的 Open&amp;nbsp;Sora&amp;nbsp;1.0 之后，Colossal&amp;nbsp;AI 再次推出了开源 Sora 中的尖子生——Open&amp;nbsp;Sora&amp;nbsp;1.1，在开源模型的艰难复现之路上迈了一大步。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;- &lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;虎嗅&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpdm-project%2Fpdm&quot; target=&quot;_blank&quot;&gt;pdm-project/pdm&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img height=&quot;252&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-17a12d2d6dc045ff9dd979f739babbce36d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpdm-project%2Fpdm&quot; target=&quot;_blank&quot;&gt;https://github.com/pdm-project/pdm&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;PDM 是一个现代的 Python 包管理器，支持 PEP 最新标准。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/oneflow/blog/11127355&quot; target=&quot;_blank&quot;&gt;LLM Serving 有效吞吐量的最大化实现&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#a0a0a0; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;本文说明了优化&lt;strong&gt;吞吐量&lt;strong&gt;（throughput）的&lt;/strong&gt;&lt;/strong&gt;现有 serving 系统&lt;strong&gt;，&lt;/strong&gt;在时延标准下并不是最优选择。作者主张使用&lt;strong&gt;有效吞吐量（goodput）&lt;/strong&gt;，即符合服务等级目标（SLO）的每秒完成请求数量，作为衡量 LLM serving 性能的改进指标，以考虑成本和用户满意度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/934cd901-58cf-411e-96e2-8d0cbeed9fe8.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FJdiDUtOBtdFDuCDSDa6B1Q&quot; target=&quot;_blank&quot;&gt;TikTok 将创建一套「美国特供版」推荐算法&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：【消息人士称，一旦拆分代码，就可能为剥离美国资产奠定基础，尽管目前还没有这样的计划。】这不就相当于变相「出口」了？ 《中国禁止出口限制出口技术目录》&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：有个问题，假设字节真亏贼了公司不打算继续办了程序员也不打算继续干了把「算法」这种列为「限制出口技术」的东西开源出来，那算不算「出口」啊？&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：其次想钻的话可以发掘漏洞。一个典型是，密码学是几个美国极客发明的，因为其国防意义美政府禁止软件出口。但是极客们认为密码学技术应当是无国界的，研究了法律后将写了密码学的书籍并附带了代码，绕过了出口限制将密码学带给了世界各地&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：岳不群要把葵花宝典免费送，想要的都可以领一本。大&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：开源好啊，不过不知道真要开的话该怎么开，如开的话就没意思了&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/295115&quot; target=&quot;_blank&quot;&gt;MybatisPlus「 漏洞 CVE-2024-35548 」申明 &amp;amp; 探讨&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：很多想从事网安的学生会提交 CVE 完善自己的简历*殊不知有时候是一些误报*这给开源项目带来了很大的麻烦*希望大家能够有辨别能力&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：&quot;数据库危机*JDBC 惊现漏洞*一键操作即可毁灭整个数据库*&quot;&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：简直是开源界的，噩梦&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：&quot;JDBC 漏洞引发数据灾难*企业损失惨重*集体诉讼 Oracle 索求赔偿*&quot;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：是的*感觉这只能算是个人项目中接口设计漏洞吧*要提也是提给使用者*跟 mybatis*plus 没有什么关系吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：终于让我看到商机了.照这个理论.我很快就要成为 CVE 之王了....可以的可以的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：靠情绪是没用的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：看见漏洞吓一跳，仔细一看原来是这......&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/294985&quot; target=&quot;_blank&quot;&gt;写字楼里写字间，写字间里程序员&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点:1：为诗点赞&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：持续更新了好几年，致敬&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：通用代码生成器是程序员的瑞士军刀，比坚持更新更重要的是实际的应用。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：当初你退出文坛*我是不同意的。而今看到你虽身为码农*依然不忘初心*甚是欣慰。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：UI 界面满满的复古怀旧风&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：我觉得我得让我妈来学学代码。这种风格她肯定会喜欢的&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：点赞，希望能来到 osc 做官方新闻的文案&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295224</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295224</guid>
            <pubDate>Fri, 31 May 2024 11:49:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>LLM Serving 有效吞吐量的最大化实现</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                            
                                                                                            &lt;div class=&quot;rich_media_content js_underline_content
                       defaultNoSetting
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section style=&quot;text-align: center;margin-left: 8px;margin-right: 8px;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;342&quot; data-backw=&quot;562&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100009705&quot; data-ratio=&quot;0.6091015169194866&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/9c6d279d-d9a6-43e9-b70f-becfb555ee96.jpg&quot; data-type=&quot;jpeg&quot; data-w=&quot;857&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-bottom: 0px;letter-spacing: 0.578px;white-space: normal;outline: 0px;&quot;&gt; 
  &lt;section style=&quot;outline: 0px;background-color: rgb(25, 25, 25);visibility: visible;&quot;&gt; 
   &lt;section data-style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;&quot; class=&quot;js_darkmode__0&quot; style=&quot;outline: 0px;background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt; 
    &lt;section style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
     &lt;section style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
      &lt;section style=&quot;margin-right: 8px;margin-left: 8px;outline: 0px;visibility: visible;line-height: 1.75em;&quot;&gt; 
       &lt;section data-style=&quot;padding: 10px; max-width: 100%; background-color: rgb(239, 239, 239); color: rgb(62, 62, 62); line-height: 25.6px; display: inline-block; width: 670px; border-width: 2px; border-style: dashed; border-color: transparent; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__1&quot; style=&quot;padding: 10px;outline: 0px;background-color: rgb(239, 239, 239);line-height: 25.6px;display: inline-block;width: 670px;border-width: 2px;border-style: dashed;border-color: transparent;visibility: visible;&quot;&gt; 
        &lt;section style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
         &lt;section style=&quot;margin-right: 8px;margin-left: 8px;outline: 0px;line-height: 1.6em;text-align: left;&quot;&gt; 
          &lt;span style=&quot;outline: 0px;letter-spacing: 2px;&quot;&gt; 
           &lt;section style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;outline: 0px;caret-color: rgba(0, 0, 0, 0);text-align: justify;&quot;&gt; 
            &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;如今的 LLM 应用具有多样化的时延要求。例如，聊天机器人可能需要快速的初始响应（例如，少于 0.2 秒），但在解码速度上只需要匹配人类阅读速度，而代码补全则需要快速的端到端生成时间，以实现实时代码建议。&lt;/span&gt; 
           &lt;/section&gt; 
           &lt;section style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;outline: 0px;caret-color: rgba(0, 0, 0, 0);text-align: justify;&quot;&gt; 
            &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
           &lt;/section&gt; 
           &lt;section style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;outline: 0px;caret-color: rgba(0, 0, 0, 0);text-align: justify;&quot;&gt; 
            &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;本文说明了&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;优&lt;/span&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;化&lt;/span&gt;&lt;strong style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;吞吐量&lt;strong style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;（throughput）的&lt;/strong&gt;&lt;/strong&gt;现有 serving 系统&lt;strong&gt;，&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;在时延标准下&lt;/span&gt;并不是最优选择。作者主张使用&lt;strong&gt;有效吞吐量（goodput）&lt;/strong&gt;，即符合服务等级目标（SLO）的&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;每&lt;/span&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;秒&lt;/span&gt;完成请求数量，作为衡量 LLM serving 性能的改进指标，以考虑成本和用户满意度。&lt;/span&gt; 
           &lt;/section&gt; 
           &lt;section style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;outline: 0px;caret-color: rgba(0, 0, 0, 0);text-align: justify;&quot;&gt; 
            &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
           &lt;/section&gt; 
           &lt;section style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;outline: 0px;caret-color: rgba(0, 0, 0, 0);text-align: justify;&quot;&gt; 
            &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;为优化有效吞吐量，作者引入了&lt;strong&gt;预填充-解码解耦&lt;/strong&gt;（prefill-decode disaggregation），也就是将预填充从解码中分离到不同的 GPU。他们还构建了一个系统原型&lt;strong style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;white-space: normal;&quot;&gt;DistServe&lt;/strong&gt;，能够实现高达 4.48 倍的吞吐量或&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;SLO 严格（tighter）&lt;/span&gt;10.2 倍，同时保持在严格的时延约束内。DistServe&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;caret-color: rgba(0, 0, 0, 0);text-wrap: wrap;background-color: rgb(239, 239, 239);&quot;&gt;正在&lt;/span&gt;集成到 vLLM 中。&lt;/span&gt; 
           &lt;/section&gt; 
           &lt;section style=&quot;margin-right: 8px;margin-left: 8px;outline: 0px;text-align: justify;&quot;&gt; 
            &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
           &lt;/section&gt;&lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;（&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);caret-color: rgba(0, 0, 0, 0);&quot;&gt;以下内容&lt;/span&gt;由 OneFlow 编译发布，转载请联系授权。原文：https://hao-ai-lab.github.io/blogs/distserve/）&lt;/span&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt; 
         &lt;/section&gt; 
        &lt;/section&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;outline: 0px;caret-color: rgba(0, 0, 0, 0);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;&lt;strong style=&quot;outline: 0px;font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.578px;caret-color: rgba(0, 0, 0, 0);&quot;&gt;作者&lt;/strong&gt;&amp;nbsp;|&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;text-decoration-style: solid;text-decoration-color: rgb(63, 63, 63);&quot;&gt;Yinmin Zhong, Junda Chen, Shengyu Liu, Yibo Zhu, Xin Jin, Hao Zhang&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;OneFlow 编译&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;翻译&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;｜张雪聃、杨婷、宛子琳&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; 
  &lt;span style=&quot;text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;&quot;&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);outline: 0px;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;232&quot; data-backw=&quot;426&quot; data-imgfileid=&quot;100010938&quot; data-ratio=&quot;0.5446009389671361&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/934cd901-58cf-411e-96e2-8d0cbeed9fe8.gif&quot; data-type=&quot;gif&quot; data-w=&quot;426&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;单次请求通过 LLM Serving 引擎并使用预填充（prefill）和解码（decode）解耦示意图&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 24px;color: rgb(246, 171, 0);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
 &lt;h2 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18px;color: rgb(30, 35, 128);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;背景：吞吐量与有效吞吐量&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;p&gt;&lt;span style=&quot;font-size: 18px;color: rgb(30, 35, 128);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;LLM 正在改变整个行业在其服务中采用 AI 技术的方式，但 LLM serving 的成本却仍然很高。为降低 serving 成本，目前许多公司专注于最大化整体 LLM serving 系统的整体&lt;strong&gt;吞吐量（throughput）&lt;/strong&gt;，即每秒服务的请求数量（或 rps），作为最小化&lt;strong&gt;每个请求的成本（$/req）&lt;/strong&gt;的代理。几乎所有流行的 LLM serving 引擎都把吞吐量作为比较性能的主要指标，如 vLLM 和 TensorRT-LLM。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;实际上，下游应用程序有不同类型，可能对用户体验有不同的时延要求，因此需要满足不同的 SLO。LLM 服务中最广泛使用的 SLO 包括：&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 2px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;首词元时间（&lt;strong&gt;TTFT&lt;/strong&gt;）：LLM 为用户输出第一个生成词元所需的时间。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 2px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;每个词元输出时间（&lt;strong&gt;TPOT&lt;/strong&gt;）：衡量两个连续生成的词元之间的平均时延。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;text-align: center;margin-left: 8px;margin-right: 8px;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;294&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010937&quot; data-ratio=&quot;0.5083333333333333&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/d408ddb5-b867-401c-9bc7-53a15944e15c.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;图 0：应用程序有多样化的 SLO。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;吞吐量衡量的是所有用户和请求中完成的请求或词元的数量，因此忽略了这些时延要求。我们引入了&lt;strong&gt;有效吞吐量（goodput）&lt;/strong&gt;，即每秒完成请求的遵守 SLO（TTFT 和 TPOT 要求）的数量，并展示了它是一个更优指标，因为它捕获了在 SLO 达成下的请求吞吐量——因此既考虑了成本又考虑了服务质量。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;为了简要说明有效吞吐量，可以假设一个应用要求至少 90% 的请求 TTFT &amp;lt; 200ms 以及 TPOT &amp;lt; 50ms，我们得到以下定义：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;有效吞吐量（P90 TTFT &amp;lt; 200ms 和 P90 TPOT &amp;lt; 50ms）= 当至少 90% 的请求同时满足 TTFT &amp;lt; 200ms 和 TPOT &amp;lt; 50ms 时，系统可以承受的每秒最大请求速率。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;图 1 展示了一个简单案例，一个具有高吞吐量的应用，其有效吞吐量可能很低。该应用的吞吐量为每秒 10 个请求。但由于时延限制，只有 3 个请求符合 SLO 约束，得到有效吞吐量为每秒 3 个请求。可以想象，这个 serving 系统吞吐量高但有效吞吐量低，用户仍然会遭受服务质量低下的困扰。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;text-align: center;margin-left: 8px;margin-right: 8px;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;337&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010939&quot; data-ratio=&quot;0.5833333333333334&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/7b78ba3f-741f-4dd1-acfa-9d6b1cc8b167.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;图 1：高吞吐量≠高有效吞吐量。优化吞吐量的系统在某些 SLO 约束下可能具有很低的有效吞吐量。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;让我们来总结下本小节引入的术语：&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;有效吞吐量&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;（good&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;put）: &lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;衡量 LLM serving 系统有效性的指标，同时考虑成本和用户满意度。它被定义为系统在满足指定 SLO 的同时，每秒可以保持的最大请求速率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;吞吐&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;量&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;（throughput）&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;: &lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;LLM serving 系统每秒处理的完成请求数量。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;服务等级目标（SLO&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;）：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;LLM serving 系统必须满足的一组目标，以提供满意的用户体验。常见的 SLO 包括首词元时间（TTFT）、每个词元输出时间（TPOT）、端到端时延（E2E）和指数移动平均（EMA）时延。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;预填充&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;LLM 推理的第一阶段，消化所有输入词元，填充 KV 缓存，并生成第一个输出词元。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;解码&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;：逐个生成词元直到终止的后续阶段。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;首词元时间（T&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;TFT）：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;LLM serving 系统生成响应用户请求的第一个词元所需的时间。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;每个输出词元时间（TPOT）：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;LLM serving 系统对用户请求生成后续词元的平均时间。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;span style=&quot;color: rgb(31, 35, 40);font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Noto Sans&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;;font-size: 16px;text-align: start;background-color: rgb(255, 255, 255);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 24px;color: rgb(246, 171, 0);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;2&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
 &lt;h2 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18px;color: rgb(30, 35, 128);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;为什么现有系统无法实现高有效吞吐量？&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;p&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
 &lt;h3 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;font-size: 18px;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 18px;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;LLM 请求是如何被处理的？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;在深入讨论之前，让我们回顾一下 LLM serving 中请求的生命周期。图 2 显示了这一过程。当一个请求进入 LLM 推理引擎时，系统首先会取用户输入生成第一个词元（&lt;strong&gt;预填充&lt;/strong&gt;），然后逐个自回归地生成输出（&lt;strong&gt;解码&lt;/strong&gt;）。一个请求通常由一个预填充步骤和多个解码步骤组成，直到终止。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;LLM serving 系统通常将预填充和解码一起批处理，用一种称为&lt;strong&gt;迭代级调度&lt;/strong&gt;（iteration-level scheduling）或&lt;strong&gt;连续批处理&lt;/strong&gt;（continuous batching）的技术，以便 GPU 处理尽可能大的批大小，运行一次迭代，并为所有这些请求生成一个词元。这种技术有效地提高了整体吞吐量（每秒词元数），并且被广泛应用于流行的 serving 系统，如 vLLM 和 TensorRT-LLM。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;100010940&quot; data-ratio=&quot;0.6417112299465241&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/df5c298b-b1fa-4c95-be8d-27771f4b5d4b.gif&quot; data-type=&quot;gif&quot; data-w=&quot;374&quot; style=&quot;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;图 2：传统 LLM serving 系统中请求的处理方式。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;然而，&lt;strong&gt;计算中的预填充和解码阶段各具独特属性&lt;/strong&gt;。预填充对计算资源的需求量极大，哪怕是小批次的预填充任务，甚至单个较长的预填充任务，都足以使 GPU 的计算能力达到饱和。与此相对，解码任务则需要更大的批大小才能充分利用计算资源，并且更容易受到 GPU 内存带宽限制的影响。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;由于这两个阶段的计算模式和 SLO 截然不同，将它们合并处理并不是实现高有效吞吐量的最佳策略。原因如下：&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 2px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;合并预填充和解码会导致它们之间相互干扰。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 2px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;合并预填充和解码会耦合它们的资源分配和并行策略。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;接下来，我们将进一步阐释这些问题。&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
 &lt;h3 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);font-size: 18px;&quot;&gt;合并预填充和解码导致的干扰&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;图 3&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;以简化形式展示了预填充和解码之间的干扰情况。在图的最左侧，我们将这两个请求在单个 GPU 上进行批处理。可以看到，连续批处理显著增加了解码任务（R1）的时延，并略微增加了预填充任务（R2）的时延。在图的右侧，我们展示了一个稳定的传入请求流。此时，处于解码阶段的请求在每次预填充请求进入系统时都会「卡住」，因此意外地增加了解码任务的时延。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color: rgb(31, 35, 40);font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Noto Sans&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;;font-size: 16px;text-align: start;background-color: rgb(255, 255, 255);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;237&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010942&quot; data-ratio=&quot;0.40925925925925927&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/146d765c-98a2-47bb-b97f-62fca1b493cc.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;height: auto;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;图 3：连续批处理引发的干扰。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;如图 4 所示，由于这种干扰，为同时满足 TTFT 和 TPOT 的 SLO，系统必须过度配置资源以满足时延目标，尤其是在 SLO 要求严格的情况下。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color: rgb(31, 35, 40);font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Noto Sans&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;;font-size: 16px;text-align: start;background-color: rgb(255, 255, 255);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;415&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010945&quot; data-ratio=&quot;0.7175925925925926&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/536d5c44-5aef-4076-8170-d76eb002a140.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;height: auto;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;图 4：为满足 SLO 目标，合并预填充和解码的系统必须过度配置资源。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
 &lt;h3 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);font-size: 18px;&quot;&gt;资源分配与并行策略紧密耦合&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;此外，由于合并，预填充和解码计算的并行策略（张量、流水线或数据并行）本质上是耦合的。如前所述，由于它们的计算模式和时延目标截然不同，预填充和解码阶段的最优并行策略通常也不同。例如，当实时吞吐量 (TTFT) 要求严格而总吞吐量 (TPOT) 要求宽松时，预填充阶段更倾向于使用张量并行 (TP) 来满足严格的时延目标，而解码阶段则更倾向于数据或流水线并行以提高吞吐量。接下来，我们将探讨解决这些问题的新方法。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 24px;color: rgb(246, 171, 0);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;3&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
 &lt;h2 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18px;color: rgb(30, 35, 128);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;解耦预填充和解码阶段&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;背后的逻辑很简单：将预填充和解码解耦到不同的 GPU 中，并为每个阶段定制并行策略。这自然解决了上述两个问题：&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ol dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 2px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;预填充和解码之间没有干扰，使得两个阶段都能更快地达到各自的 SLO。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 2px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;资源分配和并行策略解耦，从而为预填充和解码量身定制优化策略。&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;图 5 展示了请求在这种解耦系统中被处理的方式。当一个请求进入系统时，它首先被发送到一个预填充工作器，并完成其预填充阶段。然后，系统将其中间状态（主要是 KV 缓存）迁移到一个解码工作器，并且进行多个解码步骤以生成后续词元。一旦完成生成，请求就离开了系统。&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;100010946&quot; data-ratio=&quot;0.5911330049261084&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/5e860a33-c4bd-427e-956f-a669fa297a1c.gif&quot; data-type=&quot;gif&quot; data-w=&quot;406&quot; style=&quot;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;text-align: center;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);outline: 0px;font-size: 14px;&quot;&gt;图 5：当预填充/解码被解耦时，请求的处理方式。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;让我们通过一个简单的实验来看看为什么解耦是有用的。我们按照泊松到达过程（Poisson arrival），使用输入长度为 512、输出长度为 64 的合成工作负载，在单个 A100-80GB GPU 上运行一个 13B 参数的 LLM。我们逐渐增加请求率（x 轴），并测量两个时延（P90 TTFT 和 P90 TPOT，y 轴）的变化，如图 6 所示。&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;假设我们将 P90 TTFT 的 SLO 设定为 0.4 秒，P90 TPOT 设定为 0.04 秒（&lt;strong&gt;图 6&lt;/strong&gt;中的水平线）。我们观察到现有系统可以使用 1 个 GPU，在 TTFT 时延约束内支持大约 3RPS（请求率），而对于 TPOT，则可以维持在 1.6 RPS（&lt;strong&gt;图 6a&lt;/strong&gt;）。由于我们需要同时满足这两个约束，现有合并系统的有效吞吐量变为：有效吞吐量 (合并) = min(3,1.6) = 1.6 RPS（每 GPU）。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;可见解耦后的性能显著提升。如图 6 所示，如果各自仅处理一个阶段，预填充工作器和解码工作器都能达到比之前更高的 RPS。一个预填充工作器大约能够达到 5.6 RPS，而一个解码工作器大约能够达到 10 RPS。更为关键的是，现在我们可以灵活配置，将两个预填充工作器 (2P) 与一个解码工作器 (1D) 进行配对（记为 2P1D），总共使用 3 个 GPU。因此有效吞吐量变为：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;Goodput(2P1D) = min(5.6 x 2, 10) = 10 reqs/s / 3 GPUs ≈ 3.3 reqs/s (per GPU)&lt;/span&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;该实验表明，在没有使用任何并行策略的情况下，这种简单的解耦能产生 2 倍的有效吞吐量。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;423&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010947&quot; data-ratio=&quot;0.7314814814814815&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/faeebacb-1d7d-45f4-8345-a7d15749bcd5.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;height: auto;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14px;letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 14px;outline: 0px;color: rgb(136, 136, 136);&quot;&gt;图 6：合并处理 (a) 的灵活性比解耦（b）差，后者为预填充分配了 2 个 GPU，为解码分配了 1 个 GPU（计为 2P1D)。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;实际上，除了为每个阶段分配不同的资源外，解耦预填充和解码还能让我们为每个阶段选择最佳的并行策略，以优化有效吞吐量（称为「量身定制的并行策略」），我们&lt;/span&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);text-decoration: none;&quot;&gt;在&lt;/span&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;论文&lt;/span&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);text-decoration: none;&quot;&gt;中&lt;/span&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;详细研究了这一点。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);font-size: 18px;&quot;&gt;KV Cache 传输&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;解耦造成了在预填充和解码 GPU 之间传输中间状态（即 KV Cache）的成本。在 LLM 推理中，KV Cache 看似是一个巨大的内存开销，而在 GPU 之间传输 KV Cache 则像是一种瓶颈。然而，我们展示的情况恰恰相反：通过适当的放置（placement），KV Cache 传输开销可以有效地最小化，甚至低于一个解码步数的时间，这要归功于现在的高速网络，如 NVLink 和 PCI-e 5.0。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;为了更直观，假设我们有 8 通道 PCIe 5.0 x16（每个链路 64GB/s）作为 GPU 之间的节点内网络。给定一个 2048 词元的请求，当提供 OPT-175B 的请求时，传输的 KV Cache 预计如下：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;时延 = 2048 token *（4.5 MB/token）/（64GB/s * 8）= 17.6 ms&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;该时延小于 OPT-175B 的单个解码步数时间（在 A100 上约为 30-50ms）。对于更大的模型、更长的序列或更先进的网络（例如，带宽为 600GB/s 的 A100-NVLink），如图 7 所示，与单个解码步数相比，与 KV Cache 传输相关的比较性计算开销变得不那么显著。总之，通过精心放置预填充和解码工作器来利用高带宽网络，可以有效地隐藏 KV Cache 传输开销，这在我们的论文中有详细讨论。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;text-align: center;margin-left: 8px;margin-right: 8px;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;269&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010948&quot; data-ratio=&quot;0.46574074074074073&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/2cb7e6fc-077d-491b-8a29-50a228ada219.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;height: auto;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;text-align: center;margin-left: 8px;margin-right: 8px;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;图 7：KV cache 传输开销可以有效地最小化，直至低于解码步数的时间。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
 &lt;h3 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);font-size: 18px;&quot;&gt;DistServe：评估解耦的有效性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;我们在名为 DistServe 的系统原型中实现了这一技术，并将其与现有系统在三个具有不同时延约束的工作负载和数据集上进行了比较：聊天机器人、代码补全和摘要生成，如下表所示。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color: rgb(31, 35, 40);font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Noto Sans&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;;font-size: 16px;text-align: start;background-color: rgb(255, 255, 255);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;201&quot; data-backw=&quot;477&quot; data-imgfileid=&quot;100010949&quot; data-ratio=&quot;0.42138364779874216&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/847e3f39-b8e7-4465-a980-b9c05b292837.png&quot; data-type=&quot;png&quot; data-w=&quot;477&quot; style=&quot;height: auto;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14px;letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 14px;outline: 0px;color: rgb(136, 136, 136);&quot;&gt;表 8：我们评估中的工作负载和时延要求。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;图 9 展示了 DistServe 与 vLLM 的比较结果：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;聊天机器人：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;DistServe 的吞吐量比 vLLM 高 2.0 倍至 3.41 倍。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;代码补全：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;DistServe 的吞吐量比 vLLM 高 3.2 倍，其 SLO 比 vLLM 严格 1.5 倍。作为一个实时编码助手，代码补全任务所要求的 TTFT 比聊天机器人更低，这导致两个系统最终都受到 TTFT 要求的限制。然而，通过消除解码作业的干扰并为预填充定制张量并行性，DistServe 减少了预填充作业的平均时延，从而满足了更多请求的 TTFT 要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 2px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;总结：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;DistServe 的吞吐量比 vLLM 高 4.48 倍，其 SLO 比 vLLM 严格 10.2 倍。正如预期的那样，由于 vLLM 将预填充和解码合并在一起，其解码的降速幅度更大，无法满足 TPOT 的要求。请查看我们的技术报告获取更详细的实验结果。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;text-align: center;margin-left: 8px;margin-right: 8px;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;305&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;100010950&quot; data-ratio=&quot;0.5272177419354839&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/d8f1ed92-0bb7-481e-a12c-699e1c7445ed.png&quot; data-type=&quot;png&quot; data-w=&quot;992&quot; style=&quot;height: auto;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;p dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;white-space: normal;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14px;letter-spacing: 2px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;letter-spacing: 2px;font-size: 14px;outline: 0px;color: rgb(136, 136, 136);&quot;&gt;图 8：在各种数据集上评估 DistServe 与 vLLM 的性能。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
 &lt;h3 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-top: 24px;margin-bottom: 16px;font-size: 1.25em;font-weight: var(--base-text-weight-semibold, 600);line-height: 1.25;color: rgb(31, 35, 40);font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, &amp;quot;Noto Sans&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;;letter-spacing: normal;text-align: start;white-space: normal;background-color: rgb(255, 255, 255);&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;解耦与分块预填充&lt;/span&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;本节将预填充-解耦与动态分割（dynamic splitfuse）或称分块预填充（chunked prefill）和捎带确认（piggybacking）的最新方法进行比较，并讨论它们各自的优缺点。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;动态分割的关键是将较长的预填充分成更小的块（chunk），从而通过将预填充块与多个解码任务组合形成批处理，并充分调动 GPU，这个过程称为捎带确认（piggybacking）。&lt;strong&gt;块大小&lt;/strong&gt;是根据工作负载有意选择的，以便这种方法在所有步数上都能充分利用 GPU，从而提高整体的系统效率。然而，它可能会增加 TTFT 和 TPOT，进而在时延约束下减少吞吐量。这是由于动态分割无法完全解耦预填充和解码操作，导致资源争用以及 TTFT 与 TPOT 之间的妥协。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;对于&lt;strong&gt;TTFT&lt;/strong&gt;，分块预填充会导致预填充的计算开销（因此 TTFT 较高），不管块大小如何。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;首先，选择明显低于 GPU 饱和点的块大小会延长预填充任务的执行时间。例如，假设 GPU 在预填充长度为 512 时饱和，将块大小设置为 256 将使所有超过 512 的预填充的 TTFT 翻倍。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;color:#3f3f3f;&quot;&gt;&lt;span style=&quot;letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;letter-spacing: 2px;outline: 0px;color: rgb(63, 63, 63);&quot;&gt;其次，即使块大小被优化到几乎最大化 GPU 使用率，分块预填充也会显著增加预填充任务的内存访问量，因为需要将 KV Cache 从 GPU 的 HBM 加载到 SRM 以用于每个后续块。对于更长的预填充，这种情况更会加剧，导致 KV Cache 加载操作呈二次增长，而不是线性增长，由于解码词元槽的限制，附带的机会也会减少。至于 TPOT，正如之前所言，将预填充和解码在批次中合并实际上会降低所有这些解码任务的速度。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;总之，分块预填充可能有助于最大化整体吞吐量，但当应用程序无法在 TTFT 和 TPOT 之间进行权衡，而是要同时遵守这两者时，解耦就成为更好的选择。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 24px;color: rgb(246, 171, 0);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h2_9&quot;&gt;&lt;/span&gt; 
 &lt;h2 tabindex=&quot;-1&quot; dir=&quot;auto&quot; style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;line-height: 1.6em;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 18px;color: rgb(30, 35, 128);letter-spacing: 2px;&quot;&gt;&lt;strong&gt;DistServe 的现状&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;我们正在与 vLLM 社区合作，将所提出的技术整合到 vLLM 生态系统中。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;与此同时，Splitwise、TetriInfer 和 DéjàVu 也采用了这种解耦策略，将预填充与解码分开，以实现更好的 LLM serving 有效吞吐量。我们很高兴看到许多研究人员和公司都用解耦来优化系统吞吐量，我们相信，解耦很快将成为 LLM serving 引擎的首选。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;致谢：感谢 Vikranth Srivatsa、Lanxiang Hu 和 Will Lin 为这篇博客提供了独到的见解和反馈。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;line-height: 1.6em;margin-bottom: 0px;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;margin-bottom: 0px;letter-spacing: 0.578px;white-space: normal;text-align: left;&quot;&gt; 
  &lt;section style=&quot;outline: 0px;background-color: rgb(25, 25, 25);visibility: visible;&quot;&gt; 
   &lt;section data-style=&quot;max-width: 100%; background-color: rgb(255, 255, 255); letter-spacing: 0.544px; font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important; color: rgb(163, 163, 163) !important;&quot; class=&quot;js_darkmode__0&quot; style=&quot;outline: 0px;background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt; 
    &lt;section style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
     &lt;section style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
      &lt;section style=&quot;margin-right: 8px;margin-left: 8px;outline: 0px;visibility: visible;line-height: 1.75em;&quot;&gt; 
       &lt;section data-style=&quot;padding: 10px; max-width: 100%; background-color: rgb(239, 239, 239); color: rgb(62, 62, 62); line-height: 25.6px; display: inline-block; width: 670px; border-width: 2px; border-style: dashed; border-color: transparent; visibility: visible; box-sizing: border-box !important; overflow-wrap: break-word !important;&quot; class=&quot;js_darkmode__1&quot; style=&quot;padding: 10px;outline: 0px;background-color: rgb(239, 239, 239);line-height: 25.6px;display: inline-block;width: 670px;border-width: 2px;border-style: dashed;border-color: transparent;visibility: visible;&quot;&gt; 
        &lt;section style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
         &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;caret-color: rgba(0, 0, 0, 0);outline: 0px;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);font-size: var(--articleFontsize);letter-spacing: 2px;&quot;&gt;【语言大模型推理最高&lt;strong style=&quot;letter-spacing: 0.578px;&quot;&gt;&lt;span style=&quot;font-size: var(--articleFontsize);&quot;&gt;加速 11&lt;/span&gt;&lt;/strong&gt;倍】&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);font-size: var(--articleFontsize);letter-spacing: 2px;&quot;&gt;SiliconLLM 是由硅基流动开发的高效、易用、可扩展的 LLM 推理加速引擎，旨在为用户提供开箱即用的推理加速能力，显著降低大模型部署成本，加速生成式 AI 产品落地。（技术合作、交流请添加微信：SiliconFlow01）&lt;/span&gt;&lt;/p&gt; 
         &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;caret-color: rgba(0, 0, 0, 0);outline: 0px;line-height: 1.6em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
         &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;195&quot; data-backw=&quot;538&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100010954&quot; data-ratio=&quot;0.36203703703703705&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/6cd9fa66-8c5d-490b-82e7-9fef555f7e61.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
         &lt;p style=&quot;letter-spacing: 0.578px;&quot;&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;SiliconLLM 的吞吐最高提升&lt;strong&gt;2.5&lt;/strong&gt;倍，时延最高降低&lt;strong&gt;2.7&lt;/strong&gt;倍&lt;/span&gt;&lt;/p&gt; 
         &lt;p style=&quot;letter-spacing: 0.578px;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
         &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;181&quot; data-backw=&quot;538&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100010952&quot; data-ratio=&quot;0.337037037037037&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/7924d010-5c5a-4901-9e31-56ec2e0d7247.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
         &lt;p style=&quot;letter-spacing: 0.578px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;数据中心+PCIe&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;&quot;&gt;：SiliconLLM 的吞吐最高提升&lt;strong&gt;2.8&lt;/strong&gt;倍；&lt;strong&gt;消费卡场景&lt;/strong&gt;：SiliconLLM 的吞吐最高提升&lt;strong&gt;1.7&lt;/strong&gt;倍&lt;/span&gt;&lt;br&gt;&lt;/p&gt; 
         &lt;p style=&quot;letter-spacing: 0.578px;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
         &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;183&quot; data-backw=&quot;538&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100010951&quot; data-ratio=&quot;0.3398148148148148&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/200245e1-47ac-41b2-a95e-3a19f33dc389.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
         &lt;p style=&quot;margin-right: 8px;margin-left: 8px;letter-spacing: 0.578px;caret-color: rgba(0, 0, 0, 0);outline: 0px;line-height: 1.6em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;font-size: var(--articleFontsize);&quot;&gt;System Prompt 场景&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color: rgb(63, 63, 63);letter-spacing: 2px;font-size: var(--articleFontsize);&quot;&gt;：SiliconLLM 的吞吐最高提升&lt;strong&gt;11&lt;/strong&gt;倍；&lt;strong&gt;MoE 模型&lt;/strong&gt;：推理 SiliconLLM 的吞吐最高提升&lt;strong&gt;5&lt;/strong&gt;倍&lt;/span&gt;&lt;/p&gt; 
         &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt; 
          &lt;mp-common-profile class=&quot;custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;Mzk0NzYzNTMyMA==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/zuQbxew9jQGKcQicmsnRYl8fzR6zRiajG6WiamTyuKMxJdzfciaZIYPPCQibdiahE1WnwQ8CVd37AVQPXw3QWSexvdiaA/0?wx_fmt=png&quot; data-nickname=&quot;硅基流动&quot; data-alias=&quot;SiliconFlow&quot; data-signature=&quot;加速 AGI 普惠人类&quot; data-from=&quot;2&quot;&gt;&lt;/mp-common-profile&gt; 
         &lt;/section&gt; 
        &lt;/section&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;white-space: normal;text-align: left;line-height: 1.6em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 2px;color: rgb(63, 63, 63);&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-right: 8px;margin-bottom: 0px;margin-left: 8px;letter-spacing: 0.578px;text-wrap: wrap;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 14px;letter-spacing: 1px;background-color: rgb(255, 255, 255);font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;caret-color: rgba(0, 0, 0, 0.9);&quot;&gt;其他人都在看&lt;/span&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
 &lt;h3 style=&quot;letter-spacing: 0.578px;text-wrap: wrap;text-align: left;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);&quot;&gt; 
  &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;width: 577.422px;outline: 0px;&quot;&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247493221%26idx%3D1%26sn%3D0c75b8115f4d4a27c8a5d6505a0a4986%26chksm%3Dfe426853c935e145d21abd30e0ceb29486c9e306032dfcb3d071ce34d171425c11341a57d7bf%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;OneFlow 技术年货：800+页免费「大模型」电子书&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;800+页免费「大模型」电子书&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247494063%26idx%3D1%26sn%3D8473d3bf89579607264e13b726d3dc67%26chksm%3Dfe426799c935ee8f8b0110d4d08c0bed3d08cf58dde17fae18dfd3e3c991d691b6944a04a8a6%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;Stable Diffusion XL 优化终极指南&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;Stable Diffusion XL 优化终极指南&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247494392%26idx%3D1%26sn%3Df4ea9e008b5bf5a06e98bbf4e57464ba%26chksm%3Dfe4264cec935edd8a080b29ea0cdbd972b19c70b42457cbbb0ad002862a16ad5042309c9b947%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;LLM 推理入门指南③：剖析模型性能&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;LLM 推理入门指南③：剖析模型性能&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247493485%26idx%3D1%26sn%3Def41fe4edc151c41eb059622e09ad6f6%26chksm%3Dfe42695bc935e04d71e024bd6c7bf48da8e9bed189fd83e58f6b1cf52f07c626e2090a631f9d%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;LLM 推理入门指南①：文本生成的初始化与解码阶段&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247494581%26idx%3D1%26sn%3Dd79c1e403222be0452e176188a5abcc5%26chksm%3Dfe426583c935ec95ac17ad31dca1c80afd5a7b240c2506209c2593f170e1a53d6bb01c007fd1%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;GPT4o「全能」模型发布；2 人 AI 团队被收购；3 款 AI 搜索引擎&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;2 人 AI 团队被收购；3 款 AI 搜索引擎对比&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247494090%26idx%3D1%26sn%3D8e757eb0a113d7ccd76e8a2424b8e19e%26chksm%3Dfe4267fcc935eeea5ba5f348431f8524f2bf3e70520dce09fdb2eb5fa1423735b37fc94ab7ac%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;OneDiff 1.0 发布！生产环境稳定加速 SD/SVD 模型&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;OneDiff 1.0 发布！稳定加速 SD/SVD 模型&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247494090%26idx%3D1%26sn%3D8e757eb0a113d7ccd76e8a2424b8e19e%26chksm%3Dfe4267fcc935eeea5ba5f348431f8524f2bf3e70520dce09fdb2eb5fa1423735b37fc94ab7ac%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;OneDiff 1.0 发布！生产环境稳定加速 SD/SVD 模型&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247494289%26idx%3D1%26sn%3D18c37483717d5f93bacbce589ae3c2f5%26chksm%3Dfe4264a7c935edb1f33eab8f958e5fec9515253a0ab801db5f1d0f2c9b3474c2b21ee5564d93%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;生成式 AI 产业经济学：价值分配与利润结构&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;生成式 AI 产业经济学：价值分配与利润结构&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li style=&quot;outline: 0px;font-size: 14px;letter-spacing: 1px;&quot;&gt;&lt;p style=&quot;outline: 0px;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247493759%26idx%3D1%26sn%3D8c7940d3986245b56867de7c59023f28%26chksm%3Dfe426649c935ef5fdfbf92610a0cc949fcf5218c7549015b59bb9eefe4d6ccfe087854927e37%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;百万用户通话新风潮：仅需 50 秒，无界 AI 让彩铃变身短视频&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot;&gt;OneDiff 加速无界 AI，&lt;/a&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU5ODY2MTk3Nw%3D%3D%26mid%3D2247493759%26idx%3D1%26sn%3D8c7940d3986245b56867de7c59023f28%26chksm%3Dfe426649c935ef5fdfbf92610a0cc949fcf5218c7549015b59bb9eefe4d6ccfe087854927e37%26scene%3D21%23wechat_redirect&quot; textvalue=&quot;百万用户通话新风潮：仅需 50 秒，无界 AI 让彩铃变身短视频&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; data-itemshowtype=&quot;0&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;50s 让彩铃变身短视频&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt;&lt;/h3&gt; 
 &lt;p style=&quot;margin-bottom: 0px;letter-spacing: 0.578px;text-wrap: wrap;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-backh=&quot;238&quot; data-backw=&quot;578&quot; data-galleryid=&quot;&quot; data-imgfileid=&quot;100010958&quot; data-ratio=&quot;0.41203703703703703&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/15b6a3ab-88dd-415e-9391-b562757ab81b.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;10000&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - OneFlow（OneFlowTechnology）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/oneflow/blog/11127355</link>
            <guid isPermaLink="false">https://my.oschina.net/oneflow/blog/11127355</guid>
            <pubDate>Fri, 31 May 2024 09:20:24 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>State 微调、PointRWKV、中文文档上线……RWKV 社区 5 月最新动态来啦！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;大家好，这里是我们组织的新栏目：RWKV 社区最新动态，这个栏目会不定期播报 RWKV 社区的最新消息，以帮助 RWKV 的关注者、爱好者、开发者更好地了解 RWKV 的发展情况。&lt;/p&gt; 
&lt;p&gt;《RWKV 社区最新动态》是不定期更新，所以请保持关注我们的公众号（RWKV 元始智能）、QQ 频道（RWKV）等公开的消息平台，以获取最新的消息。&lt;/p&gt; 
&lt;p&gt;本期节目统计了 RWKV 社区 5 月的重要动态：&lt;/p&gt; 
&lt;h2&gt;RWKV 中文文档（测试版）已上线&lt;/h2&gt; 
&lt;p&gt;RWKV 中文文档 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frwkv.cn%2Fdocs&quot; target=&quot;_blank&quot;&gt;https://rwkv.cn/docs&lt;/a&gt; 已上线。&lt;/p&gt; 
&lt;p&gt;当前文档涵盖了 RWKV 百科、RWKV 模型微调、RWKV 本地部署和推理工具 RWKV Runner 和 Ai00 的使用教程。&lt;/p&gt; 
&lt;p&gt;RWKV 中文文档处于测试阶段，后续会继续完善内容并更新视觉风格，欢迎大家对文档提出改进意见。&lt;/p&gt; 
&lt;h2&gt;寻找基于 RWKV 的项目&lt;/h2&gt; 
&lt;p&gt;RWKV Foundation 想感谢大家对 RWKV 大模型的支持。我们特别准备了一些周边礼品，作为小小心意~&lt;/p&gt; 
&lt;p&gt;如果你曾经或正在使用 RWKV 大模型进行开源或商业项目的开发，请与我们联系！&lt;/p&gt; 
&lt;p&gt;（可以在下方留言或私信我们的微信公众号，告诉我们你的联系方式和项目信息。&lt;/p&gt; 
&lt;h2&gt;RWKV 参加澳门 BEYOND EXPO&lt;/h2&gt; 
&lt;p&gt;5 月 23 - 25 日，作为 NVIDIA Inception Program 成员之一， RWKV 受邀参加第四届 BEYOND 国际科技创新博览会（BEYOND Expo 2024），在大会现场中展示了 RWKV AI 作曲工具和 RWKV-6 7B 语言模型。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b5a26c563abb8d9790b7b910d455d2c9400.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;RWKV 作曲家兼顾生产力和趣味性，就连澳门特首都被动听的旋律吸引而来：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-93308396eb0d61aa0a34610148ca826d762.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;新微调方法：State tuning&lt;/h2&gt; 
&lt;p&gt;RWKV 推出了新的微调方法：state tuning。&lt;/p&gt; 
&lt;p&gt;RWKV 是纯 RNN，因此可以做 transformer 难以做到的事情。例如，作为 RNN 有固定大小的 state，所以，微调 RWKV 的初始 state，就相当于最彻底的 prompt tuning，甚至可以用于 alignment，因为迁移能力很强。&lt;/p&gt; 
&lt;p&gt;目前 RWKV Runner 和 Ai00 等 RWKV 模型推理工具都已支持挂载 state tuning 训练得到的 state 文件。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;注意：挂载 state 文件时，必须使用训练该 state 文件的同款 RWKV 模型。&lt;/p&gt; 
 &lt;p&gt;举个例子：这个 state 文件是基于 &lt;code&gt;RWKV-6-World-7B-v2.1&lt;/code&gt; 模型微调而来，那么你在 RWKV Runner 或 Ai00 等工具中必须启动 &lt;code&gt;RWKV-6-World-7B-v2.1&lt;/code&gt; 模型，挂载的 state 文件才会生效。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-43bbeca5c5ab2d32e1a1aa22b6e23397588.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;我们正在准备 RWKV state tuning 的教程，很快会为大家呈现！&lt;/p&gt; 
&lt;h2&gt;RWKV 的 MMLU 数据&lt;/h2&gt; 
&lt;p&gt;社区开发者在 FP16 下测试了 RWKV-6-World-7B-v2.1 模型的 benchmark， 得到以下数据：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MMLU 0-shot 42.88%&lt;/li&gt; 
 &lt;li&gt;CMMLU 0-shot 39.84%&lt;/li&gt; 
 &lt;li&gt;MMLU 5-shot 43.99%&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;作为对比， llama2 7B MMLU 数据为 45.3%。&lt;/p&gt; 
&lt;h2&gt;RWKV 社区新项目/项目更新&lt;/h2&gt; 
&lt;h3&gt;新的多模态项目：PointRWKV&lt;/h3&gt; 
&lt;p&gt;PointRWKV 项目是一种基于 RWKV 的 3D 点云学习框架，在下游点云任务上性能优于基于 Transformer 和 Mamba 的同类工作，显著节省了约 46% 的 FLOPS。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a8b19997a7c4807573aecc95ffac8c848bf.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;PointRWKV 项目由腾讯优图主导，计划逐步开源。&lt;/p&gt; 
&lt;p&gt;可以从下面的链接了解 PointRWKV ：&lt;/p&gt; 
&lt;p&gt;论文链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2405.15214&quot; target=&quot;_blank&quot;&gt;https://arxiv.org/pdf/2405.15214&lt;/a&gt; 《PointRWKV: Efficient RWKV-Like Model for Hierarchical Point Cloud Learning 》&lt;/p&gt; 
&lt;p&gt;仓库地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhithqd%2FPointRWKV&quot; target=&quot;_blank&quot;&gt;https://github.com/hithqd/PointRWKV&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;新项目：RWKV_LM_EXT&lt;/h3&gt; 
&lt;p&gt;RWKV_LM_EXT 旨在扩展 RWKV LM 的功能，包括序列分类/嵌入/peft/交叉编码器/双编码器/多模态等。&lt;/p&gt; 
&lt;p&gt;仓库地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyynil%2FRWKV_LM_EXT&quot; target=&quot;_blank&quot;&gt;https://github.com/yynil/RWKV_LM_EXT&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;RWKV Runner 发布新版本&lt;/h3&gt; 
&lt;p&gt;RWKV Runner 在 5 月发布了 v1.8.0 ~ v1.8.4 五个版本，其中需要注意的改进：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;支持动态挂载 state 文件&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复了因 setuptools 更新引起的兼容性问题，如果你还出现仍然出现下图中的问题，请更新 runner 版本！&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1ddc8b1c5fa95961d27b491730618346c68.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;Ai00 发布新版本&lt;/h3&gt; 
&lt;p&gt;RWKV Runner 在 5 月发布了 v0.4.7 ~ v0.5.1 五个版本，其中需要注意的改进：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持动态挂载 state 文件和 LoRA 文件&lt;/li&gt; 
 &lt;li&gt;支持 BNF (Backus-Naur Form) ，BNF 可以强制模型以您想要的格式输出（例如，JSON、带有指定字段的 markdown）&lt;/li&gt; 
 &lt;li&gt;支持以 prefab 格式导出量化模型&lt;/li&gt; 
 &lt;li&gt;新增 Ai00 在线文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai00-x.github.io%2Fai00_server%2F&quot; target=&quot;_blank&quot;&gt;https://ai00-x.github.io/ai00_server/&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Ai00 新功能的详情可以参考：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai00-x.github.io%2Fai00_server%2Fdoc-guide%2Ffeatures&quot; target=&quot;_blank&quot;&gt;https://ai00-x.github.io/ai00_server/doc-guide/features&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;RWKV-PEFT 发布新微调方法&lt;/h3&gt; 
&lt;p&gt;RWKV-PEFT 是 RWKV 模型的微调仓库，包含 Pissa、Lisa、Lora、State tuning 等多种微调方法。&lt;/p&gt; 
&lt;p&gt;RWKV-PEFT 在 5 月更新了 infctx train、State tunin、FLA（Flash Linear Attention） 等内容，更多细节可以在仓库中查看。&lt;/p&gt; 
&lt;p&gt;RWKV-PEFT 仓库地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJL-er%2FRWKV-PEFT&quot; target=&quot;_blank&quot;&gt;https://github.com/JL-er/RWKV-PEFT&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;6 月动态预告&lt;/h2&gt; 
&lt;h3&gt;RWKV-6 14B 即将发布&lt;/h3&gt; 
&lt;p&gt;RWKV-6 14B 模型预计在 6 月中旬完成训练并开源发布。&lt;/p&gt; 
&lt;h3&gt;RWKV 6 月线上分享会&lt;/h3&gt; 
&lt;p&gt;6 月中旬我们将开展一场线上分享会，会上将包含 RWKV-6 架构，RWKV-TS、Vision RWKV、Diffusion RWKV、RWKV-ASR 等 RWKV 多模态的论文分享和解析。&lt;/p&gt; 
&lt;p&gt;会议还包含了 RWKV 答疑环节，如果你想在分享会上进一步了解 RWKV 的架构、多模态工作等生态内容，可以关注我们的官方频道，随时掌握线上分享会的动态！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295192</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295192</guid>
            <pubDate>Fri, 31 May 2024 08:23:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Java 的 AI 前景光明</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;InfoWorld 特约编辑 Paul Krill 最近&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoworld.com%2Farticle%2F3715467%2Fazul-ceo-sees-javas-ai-future-as-bright.html&quot; target=&quot;_blank&quot;&gt;采访&lt;/a&gt;了 Azul 首席执行官 Scott Sellers，谈及 Java 在蓬勃发展的 AI 领域的地位以及在当今软件世界中的地位。Azul Systems 是一家专门提供 Java 技术的计算机软件开发公司，与&amp;nbsp;Oracle 保持着竞争关系。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;275&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bd022b71819985b9b6e329e45eea999201d.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;当谈论 AI 时，最常被提及的编程语言往往是 Python。但 Scott 认为，Python 的地位并非不可撼动。「看看 Python 在 AI 中的应用，再看看它的作用，你会发现它就像胶水代码一样。其实 Python 本身做的事情并不多。它实际上主要是调用本地库或 GPU 库。接口才是关键所在。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此 Scott 断言，随着时间的推移，Java 在 AI 领域将可以和 Python 匹敌。「AI 越多地融入传统业务逻辑和那些需要在真正的应用程序级别发生的事情，就越能达到 Java 的 sweet spot，Java 的受欢迎程度就越高。而 Python 在性能和规模等方面非常有限。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前的 Java 版本节奏是每六个月发布一次，同时将 Java 运行时和 Java 平台的快速发展与确定的长期支持版本相结合。相较于以前一个主要版本要花三四年多的时间，Scott 认为 Java 社区如今的这一转变相当之成功。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;也正是如此，Java 平台的创新速度非常快，可以不断发展以满足开发人员不断变化的需求。Scott 举例称，像 Java 22 中出现的 Foreign Function &amp;amp; Memory API 等功能，为 Java 平台继续解决某些局限性发挥了重要作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;另一方面，就即将发布的 JDK 23 版本中计划被移除的 sun.misc.Unsafe 方法而言，Scott 则表示「早就该这么做了，顾名思义，它非常不安全，泯灭了 Java 平台本身的许多优势」，这一举措无疑是解决了一个安全漏洞。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;「&lt;span style=&quot;color:#000000&quot;&gt;Java 平台本身是完全受保护的、健壮的、安全的，而且很难被渗透。Unsafe 创建了一个不安全的接口，在出现新的外部函数和内存 API 等 API 和接口之前，开发人员在需要在 Java 之外做某事时别无选择，只能通过这个非常不安全的接口。早就应该清理这个问题，让 Java 应用程序能够与非 Java 的东西交互。&lt;/span&gt;」&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但他也指出，这是一个具有挑战性的过渡，需要做很多工作才能真正实现。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295188/javas-ai-future</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295188/javas-ai-future</guid>
            <pubDate>Fri, 31 May 2024 08:20:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>这个 PHP 应用服务器看着有点新潮了！FrankenPHP</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                            &lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;FrankenPHP 是一个基于 Caddy Web 服务器构建的现代 PHP 应用服务器。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;img height=&quot;1546&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0531/155424_QZc7_3820517.png&quot; width=&quot;1142&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;FrankenPHP 特性包括：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;Early Hints&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、worker 模式、实时功能、自动 HTTPS、HTTP/2 和 HTTP/3 支持等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;Early Hints&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;FrankenPHP 原生支持 103 Early Hints 状态码，可以将网页的加载时间缩短 30%。在普通模式和 worker 模式下都支持。&lt;/span&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-php&quot;&gt;&amp;lt;?php

header(&#39;Link: &amp;lt;/style.css&amp;gt;; rel=preload; as=style&#39;);
headers_send(103);

// your slow algorithms and SQL queries 🤪

echo &amp;lt;&amp;lt;&amp;lt;&#39;HTML&#39;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;title&amp;gt;Hello FrankenPHP&amp;lt;/title&amp;gt;
&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&amp;gt;
HTML;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1e1e21&quot;&gt;&lt;a href=&quot;https://developer.chrome.com/docs/web-platform/early-hints&quot;&gt;Early Hints &lt;/a&gt;是一种 HTTP 状态代码 (&lt;/span&gt;&lt;a href=&quot;https://developer.chrome.com/docs/web-platform/early-hints&quot;&gt;&lt;code&gt;103 Early Hints&lt;/code&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#1e1e21&quot;&gt;)，用于在最终响应之前发送初步 HTTP 响应。这样，服务器可在服务器忙于生成主要资源时，向浏览器发送关于网页可能使用的关键子资源（例如网页的样式表、关键 JavaScript）或源的提示。在等待主要资源期间，浏览器可以使用这些提示来预热连接并请求子资源。也就是说，Early Hints 通过提前执行一些工作来帮助浏览器充分利用此类「服务器思考时间」，从而加快网页加载速度。&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;worker 模式：&lt;/strong&gt;&lt;span style=&quot;color:#374151&quot;&gt;启动应用程序并将其驻留在内存中，FrankenPHP 将在几毫秒内处理传入的请求。&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;实时功能：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;FrankenPHP 配有内置 Mercure Hub，Mercure 允许将事件实时推送到所有连接的设备，它们将立即收到 JavaScript 事件。无需 JS 库或 SDK。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height=&quot;616&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0531/154715_91DU_3820517.png&quot; width=&quot;1158&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;FrankenPHP 可与任何 PHP 应用配合使用，并且由于其与 worker 模式的官方集成，使得 Laravel 和 Symfony 项目比以往任何时候都快。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;FrankenPHP 还可以作为独立的 Go 库使用，通过&amp;nbsp;&lt;code&gt;net/http&lt;/code&gt;&amp;nbsp;在任何应用程序中嵌入 PHP。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/frankenphp</link>
            <guid isPermaLink="false">https://www.oschina.net/p/frankenphp</guid>
            <pubDate>Fri, 31 May 2024 08:05:04 GMT</pubDate>
        </item>
        <item>
            <title>盗版 Microsoft Office 中恶意软件横行</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AhnLab 安全情报中心（ASEC）报告&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasec.ahnlab.com%2Fen%2F66017%2F&quot; target=&quot;_blank&quot;&gt;发现&lt;/a&gt;网络犯罪分子正在通过种子网站上推广的破解版 Microsoft Office 来传播恶意软件。向用户传播的恶意软件包括远程访问木马 (RAT)、加密货币矿工、恶意软件下载器、代理工具和反 AV 程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;277&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-94cd3a24711b0b65ea4b28d9800f62a999d.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;研究人员发现，攻击者使用了多种诱饵，包括 Microsoft Office、Windows 等。破解版的 Microsoft Office 安装程序具有精心设计的界面，让用户可以选择要安装的版本、语言以及是否使用 32 位或 64 位版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;353&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3ad04939d71cb5e0d56e21dd139c5279aae.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;然而，安装程序会在后台启动一个混淆的 .NET 恶意软件，该恶意软件会联系 Telegram 或 Mastodon 频道以接收有效的下载 URL，并从中获取其他组件。该 URL 指向 Google Drive 或 GitHub，这两种合法服务都不太可能触发防病毒警告。但这些平台上托管的 base64 有效载荷包含 PowerShell 命令，使用 7Zip 解压缩后可将一系列恶意软件引入系统。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;140&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-591619b3d0882f7f896a1815b9f04af4aed.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;恶意软件组件「Updater」会在 Windows Task Scheduler 中注册任务，以确保在系统重启期间持续运行。据 ASEC 称，恶意软件会在被入侵系统上安装以下类型的恶意软件：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Orcus RAT：实现全面的远程控制，包括键盘记录、网络摄像头访问、屏幕捕获和系统操作以进行数据泄露。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;XMRig：利用系统资源挖掘 Monero 的加密货币挖矿程序。它会在资源使用率较高时（例如受害者正在玩游戏时）停止挖掘，以避免被发现。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;3Proxy：通过打开 3306 端口将受感染系统转换为代理服务器，并将其注入合法进程，允许攻击者路由恶意流量。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;PureCrypter：下载并执行来自外部的额外恶意有效载荷，确保系统持续感染最新威胁。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;AntiAV：通过修改配置文件破坏和禁用安全软件，阻止软件正常运行，使系统易受其他组件的影响。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;即使用户发现并删除了上述任何恶意软件，系统启动时执行的「Updater」模块也会重新引入它。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295153/pirated-microsoft-office-malware</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295153/pirated-microsoft-office-malware</guid>
            <pubDate>Fri, 31 May 2024 05:58:55 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Fedora 传统艺能——默认 Web UI 安装程序 Anaconda 再度跳票</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;去年红帽工程师曾&lt;a href=&quot;https://www.oschina.net/news/246922/fedora39-workstation-anaconda-plan&quot;&gt;透露&lt;/a&gt;将在 Fedora Workstation 39 默认使用 Anaconda WebUI——基于 Web 的操作系统安装界面，旨在提供一个更现代、更灵活、更易于集成的安装体验。&lt;/p&gt; 
&lt;p&gt;但该计划没有按预期进行，今年二月，Fedora 40 的 Anaconda Web UI 获得批准后，他们将其推迟到了 Fedora 41。&lt;/p&gt; 
&lt;p&gt;虽然 Fedora 41 要到 10 月份才会发布，但相关开发者最近表示目前没有足够的时间来做好准备。因此在 Fedora 上默认使用 Anaconda WebUI 将至少推迟到明年春天的 Fedora 42。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-558dee71aa9bc7edd1b8a79d01bd701da26.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Anaconda 安装程序团队解释推迟的理由是：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;原因是我们没有足够的时间根据收集到的反馈意见将项目成形并交付给用户。&lt;/p&gt; 
 &lt;p&gt;我们、FESCO 和 Fedora QE 需要决定如何在 Rawhide 中处理这个问题。&lt;/p&gt; 
 &lt;p&gt;很抱歉让您久等了。我真心希望 Web UI 做好后您会喜欢！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Anaconda 团队为 Fedora 41 所做的工作之一就是让 Anaconda 成为一个原生 Web 应用程序，而不是依赖 X11。原生 Wayland 支持还将把远程图形用户界面安装从 VNC 切换到 RDP。&lt;/p&gt; 
&lt;p&gt;因此，如果运气好的话，Fedora Linux 的 Anaconda 安装程序网络用户界面将在 2025 年的 Fedora 42 中准备就绪。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295129/fedora42-workstation-anaconda-plan</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295129/fedora42-workstation-anaconda-plan</guid>
            <pubDate>Fri, 31 May 2024 03:43:12 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>PDM —— 现代 Python 包管理器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                            &lt;p&gt;PDM 是一个现代的 Python 包管理器，支持 PEP 最新标准。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主要特性&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;支持&amp;nbsp;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0582&quot;&gt;PEP 582&lt;/a&gt;，完全不需要虚拟环境。&lt;/li&gt;
&lt;li&gt;一个简单且相对快速的依赖解析器，特别是对于大的二进制包发布。&lt;/li&gt;
&lt;li&gt;兼容&amp;nbsp;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0517&quot;&gt;PEP 517&lt;/a&gt;&amp;nbsp;的构建后端，用于构建发布包 (源码格式与 wheel 格式)&lt;/li&gt;
&lt;li&gt;灵活且强大的插件系统&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0621&quot;&gt;PEP 621&lt;/a&gt;&amp;nbsp;元数据格式&lt;/li&gt;
&lt;li&gt;功能强大的用户脚本&lt;/li&gt;
&lt;li&gt;像&amp;nbsp;&lt;a href=&quot;https://pnpm.io/motivation#saving-disk-space-and-boosting-installation-speed&quot;&gt;pnpm&lt;/a&gt;&amp;nbsp;一样的中心化安装缓存，节省磁盘空间&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/pdm-project</link>
            <guid isPermaLink="false">https://www.oschina.net/p/pdm-project</guid>
            <pubDate>Fri, 31 May 2024 03:17:12 GMT</pubDate>
        </item>
        <item>
            <title>TikTok 准备在美国复制一套该应用的核心算法</title>
            <description>路透社报道，据直接知情人士透露，TikTok 正在为其 1.7 亿美国用户开发克隆版推荐算法，该版本可能会独立于其中国母公司运营，并更容易被希望禁止该应用的美国国会议员接受。 TikTok 的中国母...</description>
            <link>http://osc.cool/1QqRE24y</link>
            <guid isPermaLink="false">http://osc.cool/1QqRE24y</guid>
            <pubDate>Fri, 31 May 2024 02:26:00 GMT</pubDate>
        </item>
        <item>
            <title>快手上线自研文生图大模型「可图」，参数规模达十亿级</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;界面新闻从多位知情人士处获悉，快手自研文生图大模型「可图」已于近日正式对外开放。「可图」大模型目前支持文生图和图生图两类功能，可用于 AI 创作图像以及 AI 形象定制。用户可通过「可图」微信小程序和网页版使用，这也是快手首次将其自研的系列大模型对外开放。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;530&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c47ae81caddf6414bbf8c18439d88e93da6.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;「可图」大模型的参数规模达十亿级，这些数据来自于开源社区、快手内部构建和自研 AI 技术合成，覆盖了常见的千万级中文实体概念，还引入强化学习和奖励模型技术（RLHF），解决了文生图大模型在长文本和复杂语义文本输入下的效果问题。&lt;/p&gt; 
&lt;p&gt;去年 9 月，「可图」大模型平台已在快手开启内测，面向内部业务团队提供支持。快手在 App 评论区内测的「AI 玩评」和「AI 小快」等多种互动玩法集合了文生图、图生图、扩图等多个功能，依托的也是「可图」大模型的能力。从已上线的功能来看，「可图」主要面向消费端用户，提供一系列互动玩法和热点应用。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295110</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295110</guid>
            <pubDate>Fri, 31 May 2024 02:24:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Canonical 发布实时内核 (Real-time) 版 Ubuntu 24.04 LTS</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Canonical 今天&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2F%2Fblog%2Freal-time-24-04&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;为 Ubuntu 24.04 LTS 提供新的实时内核 (Real-time)。与现有的 Ubuntu RT 内核一样，该特性仅面向 Ubuntu Pro 订阅用户。Canonical 工程师介绍称：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;通过确保首先执行高优先级进程并具有确定性的响应时间，与主线 Linux 相比，实时 Ubuntu 24.04 LTS 减少了延迟，增强了系统有效处理时间敏感操作的能力。&lt;/p&gt; 
 &lt;p&gt;实时内核版 Ubuntu 24.04 LTS 集成了 AMD64 和 ARM64 上的 PREEMPT_RT 补丁。作为事实上的 Linux 实时实现，PREEMPT_RT 通过修改现有内核代码来提高可预测性。通过对关键任务延迟要求的有时限响应，实时 Ubuntu 24.04 LTS 为从制造和汽车到电信运营商的关键基础设施等各行业最苛刻的工作负载提供确定性处理。&lt;/p&gt; 
 &lt;p&gt;基于上游 v6.8 内核，Real-time Ubuntu 24.04 版本还包括对 Raspberry Pi 硬件的优化支持，以在广泛的计算范围内提供增强的性能和兼容性。&lt;/p&gt; 
 &lt;p&gt;借助 Ubuntu 24.04 LTS，用户可以探索 Raspberry Pi 4 和 5 上优化实时计算的可能性，推动创新并释放嵌入式领域的新机遇。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;因此新的实时内核与 Ubuntu 24.04 本身一样基于 Linux 6.8 内核，但为那些需要实时计算的用户打上了所有&quot;PREEMPT_RT&quot;补丁。Ubuntu 24.04 LTS 实时内核版本适用于 x86_64 和 AArch64 架构。&lt;/p&gt; 
&lt;p&gt;Ubuntu 24.04 LTS 实时版通过 Ubuntu Pro（Canonical 提供的企业/订阅服务）提供。Ubuntu Pro 对个人或小规模商业使用也是免费的，最多可用于五套系统。除 Ubuntu Pro 外，实时内核不可用。&lt;/p&gt; 
&lt;p&gt;有关 Ubuntu 24.04 LTS 实时内核支持的更多详情，请访问&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2F%2Fblog%2Freal-time-24-04&quot; target=&quot;_blank&quot;&gt;Ubuntu.com&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;与此同时，实时&quot;PREEMPT_RT&quot;补丁也在继续向主线内核迈进，希望在这项工作拖延多年之后，我们能在 2024 年看到实时支持最终成为主线。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/224678/ubuntu-rt-kernel-ga-coming&quot; target=&quot;_blank&quot;&gt;Ubuntu 的实时内核 (Real-Time Kernel) 接近 GA 状态&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/228393/real-time-ubuntu-kernel-general-availability&quot; target=&quot;news&quot;&gt;Canonical 正式推出面向企业用户的实时 Ubuntu 内核&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295109/ubuntu-24-04-real-time</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295109/ubuntu-24-04-real-time</guid>
            <pubDate>Fri, 31 May 2024 02:19:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Bytebase 2.18.0 发布，支持创建用户组</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                            
                                                                                            &lt;h2&gt;* 新功能&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持创建用户组。&lt;/li&gt; 
 &lt;li&gt;支持 BigQuery。&lt;/li&gt; 
 &lt;li&gt;支持 SQL Server 库表同步。&lt;/li&gt; 
 &lt;li&gt;支持 MongoDB 集群并支持直接连接到集群中的节点。&lt;/li&gt; 
 &lt;li&gt;支持 SQL Server 和 Oracle 显示工单任务执行日志*如影响行数或错误。&lt;/li&gt; 
 &lt;li&gt;添加 SQL 审核规则: 
  &lt;ul&gt; 
   &lt;li&gt;禁止在 SQL Server 中进行跨库查询。&lt;/li&gt; 
   &lt;li&gt;禁止在 SQL Server 的 WHERE 子句中执行计算或调用函数。&lt;/li&gt; 
   &lt;li&gt;禁止在 SQL Server 中创建函数或存储过程。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;* 重大变更&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除了工单指派人。&lt;/li&gt; 
 &lt;li&gt;移除了表分组。&lt;/li&gt; 
 &lt;li&gt;Plan 相关的 gRPC 调用接口已经从 RolloutService 迁移至 PlanService。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;* 改进&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持在添加或更新实例时自动测试连接。&lt;/li&gt; 
 &lt;li&gt;在分支详情中显示表、存储过程和函数的最后更新者。&lt;/li&gt; 
 &lt;li&gt;优化 SQL Server parser 性能。&lt;/li&gt; 
 &lt;li&gt;Oracle parser 支持 Unicode。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;* 安装及升级&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新安装 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get&lt;/a&gt;&lt;em&gt;started/self&lt;/em&gt;host/&lt;/li&gt; 
 &lt;li&gt;升级 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bytebase.com%2Fdocs%2Fget*started%2Fupgrade%2F&quot; target=&quot;_blank&quot;&gt;https://www.bytebase.com/docs/get*started/upgrade/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;更多资讯&lt;em&gt;请关注 Bytebase 公号&lt;/em&gt;Bytebase&lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/6148470/blog/11197671</link>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11197671</guid>
            <pubDate>Fri, 31 May 2024 02:15:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>广州城市理工学院 openKylin 高校站正式揭牌成立</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;5 月 28 日下午，广州城市理工学院 openKylin 高校站成立揭牌仪式顺利举行。广州城市理工学院副校长魏德敏、计算机工程学院院长奚建清、副院长蔡沂，麒麟软件华南事业部总经理李滨、副总经理朱毅，openKylin 社区生态合作负责人马发俊，以及广州城市理工学院计算机工程学院学院相关领导，微专业负责人、教师和学生代表等出席活动，活动由计算机学院党总支书记张彩霞主持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1c566bcb03b2a57688cca8019fb793aa0b6.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;活动伊始，计算机工程学院学科基础课负责人邹云松老师就此次 openKylin 高校站成立以及合作的主要内容和重要意义进行了阐述。蔡沂副院长向与会人员介绍了微专业建设的情况，详细解读了学院在微专业建设方面的最新进展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e401515f13b5c778e4e8300cda4fbab234c.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f013a08792babe634ad241c4a29c60f306e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;随后，在魏徳敏、李滨等领导和师生的见证下，朱毅和奚建清共同为 openKylin 高校站揭牌。后续 openKylin 社区和广州城市理工学院将结合各自的优势资源，共同打造产学研一体化平台，为学生提供更多的实践机会和发展平台。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-89054307f672388e82225ae109173e0dd6b.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;最后，马发俊为学生们带来了《开源社区建设实践与思考》主题分享，帮助同学更好地了解科技前沿、开源行业发展趋势以及 openKylin 社区的建设发展情况，激发大家关注和投入开源操作系统创新研发的关键领域的热情。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fe6bd3fd6aaf496487fb1edcd3d05617ab1.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 高校站是 openKylin 社区在高校建立的合作站点，通过推进高校开源技术的产学研融合，构建起学生 Linux 的基础知识架构，再通过开源活动+项目实践的方式，为学生积累实践经验，并对职业规划等方面进行详细讲解，通过理论+实践的形式，培养卓越创新能力的开源人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，已有上海交通大学、南开大学、天津大学、新疆大学、东南大学、内蒙古大学、洛阳理工学院、深圳职业大学等 48 所 985、双一流、普通本科和职业院校加入 openKylin 社区并建立高校站，与社区开展了多种形式的合作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;未来，openKylin 欢迎更多高校合作伙伴加入，一起建立产学研融合的开源创新人才培养体系，为实现国内开源事业可持续发展蓄势储能。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295102</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295102</guid>
            <pubDate>Fri, 31 May 2024 01:42:25 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>赛风 Rust Web 框架 0.68 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Salvo 是 Rust 实现的简单好用且功能强大的 Web 后端框架。&lt;br&gt; &lt;br&gt; 不管你是刚刚 Rust 入门还是使用 Rust 做正规项目开发， Salvo 都很适合。近五年时间的持续维护改进，品质有保证。&lt;/p&gt; 
&lt;p&gt;同时 Rust 可以让你逃离 Axum 等框架无穷无尽的类型体操。更简单的类型系统，更强大的功能。&lt;/p&gt; 
&lt;p&gt;本次更新：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;quinn 更新至 0.11&lt;/li&gt; 
 &lt;li&gt;为 OpenAPI 添加 &lt;code&gt;FormFile&lt;/code&gt; 和&lt;code&gt;FormFiles&lt;/code&gt; 两种可以自动生成文档的类型。&lt;/li&gt; 
 &lt;li&gt;修复 otel-jaeger 不正常的问题。&lt;/li&gt; 
 &lt;li&gt;opentelemetry 相关的依赖更新到最新。&lt;/li&gt; 
 &lt;li&gt;移除不再维护的库 proc_macro_error 的依赖。&lt;/li&gt; 
 &lt;li&gt;允许定义全局重命名器重命名导出的 OpenAPI 的类型。&lt;/li&gt; 
 &lt;li&gt;添加 EC private keys 的支持。&lt;/li&gt; 
 &lt;li&gt;更新 swaggerUI 到 5.17.12。&lt;/li&gt; 
 &lt;li&gt;添加例子 logging-otlp。&lt;/li&gt; 
 &lt;li&gt;改进&amp;nbsp; OpenAPI 对 description and summary 的支持。&lt;/li&gt; 
 &lt;li&gt;为 OpenAPI 部分的 ToSchema 添加 description 属性。&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295066/salvo-0-68-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295066/salvo-0-68-released</guid>
            <pubDate>Thu, 30 May 2024 12:20:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | 马斯克给英伟达打工；扎克伯格因为 AI 开源又火了；横向对比各家 LLM 的长上下文；将.NET 移植到任天堂 NES；「腾讯元宝」</title>
            <description>欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。 # 2024.5.30 今日要点，最强开源编程大模型一夜易主 —— Mistral AI 发布 Codestral Mistral 发布了新的编程大模型 Codestral，并开...</description>
            <link>http://osc.cool/CzKY8ate</link>
            <guid isPermaLink="false">http://osc.cool/CzKY8ate</guid>
            <pubDate>Thu, 30 May 2024 11:34:00 GMT</pubDate>
        </item>
        <item>
            <title>Spring AI 1.0.0 M1 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;Spring AI 1.0.0 Milestone 1 版本现已发布，具有以下新功能和改进：&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ChatClient Fluent API&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Fluent API 提供了构造 Prompt 的方法，然后将其作为输入传递给 AI 模型。用户可以使用&lt;code&gt;ChatClient.Builder&lt;/code&gt;对象创建一个&lt;code&gt;ChatClient&lt;/code&gt;。可以从 Spring Boot 自动配置中获取自动配置的&lt;code&gt;ChatClient.Builder&lt;/code&gt;对象，也可以通过编程方式创建一个。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;示例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@RestController
class MyController {

    private final ChatClient chatClient;

    MyController(ChatClient.Builder chatClientBuilder) {
        this.chatClient = chatClientBuilder.build();
    }

    @GetMapping(&quot;/ai&quot;)
    String generation(String userInput) {
        return this.chatClient.prompt()
            .user(userInput)
            .call()
            .content();
    }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;code&gt;user&lt;/code&gt;方法设置 prompt 的用户文本。&lt;code&gt;call&lt;/code&gt;方法调用 AI 模型，提供各种重载以返回响应。在本例中，&lt;code&gt;content&lt;/code&gt;方法返回一个字符串。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;还可以响应式调用 AI 模型（using WebClient under the covers），如下所示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Flux&amp;lt;String&amp;gt; output = chatClient.prompt()
    .user(&quot;Tell me a joke&quot;)
    .stream()
    .content();&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;一个常见用例是从对 AI 模型的调用返回 JSON。使用&lt;code&gt;entity&lt;/code&gt;方法可以轻松实现这一点。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;record ActorFilms(String actor, List&amp;lt;String&amp;gt; movies) {
}

ActorFilms actorFilms = chatClient.prompt()
    .user(&quot;Generate the filmography for a random actor.&quot;)
    .call()
    .entity(ActorFilms.class);&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在&lt;code&gt;@Configuration&lt;/code&gt;类中创建时&lt;code&gt;ChatClient&lt;/code&gt;，可以指定默认值，例如系统文本。这种设计时和运行时的分离使得运行时代码最少，只需要属性占位符值。例如：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@Configuration
class Config {

    @Bean
    ChatClient chatClient(ChatClient.Builder builder) {
        return builder.defaultSystem(&quot;You are a friendly chat bot that answers question in the voice of a {voice}&quot;)
                .build();
    }

}

@RestController
class AIController {
private final ChatClient chatClient
AIController(ChatClient chatClient) {
this.chatClient = chatClient;
}
@GetMapping(&quot;/ai&quot;)
Map&amp;lt;String, String&amp;gt; completion(@RequestParam(value = &quot;message&quot;, defaultValue = &quot;Tell me a joke&quot;) String message, String voice) {
return Map.of(
&quot;completion&quot;,
chatClient.prompt()
.system(sp -&amp;gt; sp.param(&quot;voice&quot;, voice))
.user(message)
.call()
.content());
}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;评估（Evaluation）&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;帮助解决 AI 幻觉问题。用户可以使用一个 AI 模型来评估另一个 AI 模型的响应是否准确。初步使用的是一个简单的&lt;code&gt;RelevancyEvaluator&lt;/code&gt;，但事实证明也非常有用，在&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1.0 M2 中还会有所新增。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dataController.delete();
dataController.load();

String userText = &quot;What is the purpose of Carina?&quot;;

ChatResponse response = ChatClient.builder(chatModel)
        .build().prompt()
        .advisors(new QuestionAnswerAdvisor(vectorStore, SearchRequest.defaults()))
        .user(userText)
        .call()
        .chatResponse();

var relevancyEvaluator = new RelevancyEvaluator(ChatClient.builder(chatModel));

EvaluationRequest evaluationRequest = new EvaluationRequest(userText,
        (List&amp;lt;Content&amp;gt;) response.getMetadata().get(QuestionAnswerAdvisor.RETRIEVED_DOCUMENTS), response);

EvaluationResponse evaluationResponse = relevancyEvaluator.evaluate(evaluationRequest);

assertTrue(evaluationResponse.isPass(), &quot;Response is not relevant to the question&quot;);&lt;/code&gt;&lt;/pre&gt; 
&lt;h4 style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;&lt;strong&gt;新的 AI 模型&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bedrock Anthropic Claude 3 -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fben-gineer&quot; target=&quot;_blank&quot;&gt;ben-gineer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watson AI -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPabloSanchi&quot; target=&quot;_blank&quot;&gt;PabloSanchi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenAI Speech -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhemeda3&quot; target=&quot;_blank&quot;&gt;hemeda3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multi-modality support for OpenAI&lt;/li&gt; 
 &lt;li&gt;AWS Bedrock claude3&lt;/li&gt; 
 &lt;li&gt;MiniMax -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmxsl-gr&quot; target=&quot;_blank&quot;&gt;mxsl-gr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ZhiPu -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmxsl-gr&quot; target=&quot;_blank&quot;&gt;mxsl-gr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Azure Open AI image generation -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbmoussaud&quot; target=&quot;_blank&quot;&gt;bmoussaud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;更新模型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI - 支持 GPT4o 和多模态&lt;/li&gt; 
 &lt;li&gt;Google Gemini Pro 1.5 pro、flash 等&lt;/li&gt; 
 &lt;li&gt;Anthropic function calling&lt;/li&gt; 
 &lt;li&gt;Ollama 多模态支持&lt;/li&gt; 
 &lt;li&gt;改进了 streaming function calling 支持 -&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGrogdunn&quot; target=&quot;_blank&quot;&gt;Grogdunn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新的&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;Vector Stores&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Apache Cassandra -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmichaelsembwever&quot; target=&quot;_blank&quot;&gt;michaelsembwever&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Elastic Search -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJM-Lab&quot; target=&quot;_blank&quot;&gt;JM-Lab&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MongoDB Atlas -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKirbstomper&quot; target=&quot;_blank&quot;&gt;Kirbstomper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SAP HanaDB -&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frahulmitt&quot; target=&quot;_blank&quot;&gt;rahulmitt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Test Container&amp;nbsp;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;支持&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Spring AI 提供 Testcontainer 支持，用于在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2F1.0%2Fapi%2Ftestcontainers.html&quot; target=&quot;_blank&quot;&gt;测试&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;中或通过&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-ai%2Freference%2F1.0%2Fapi%2Fdocker-compose.html&quot; target=&quot;_blank&quot;&gt;docker compose&lt;/a&gt;&amp;nbsp;启动向量存储数据库。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;更多详情可&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2024%2F05%2F30%2Fspring-ai-1-0-0-m1-released&quot; target=&quot;_blank&quot;&gt;查看官方博客&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295036/spring-ai-1-0-0-m1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295036/spring-ai-1-0-0-m1-released</guid>
            <pubDate>Thu, 30 May 2024 08:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>微软工程师将 .NET 移植到任天堂 NES</title>
            <description>Jonathan Peppers 是微软 .NET for Android / .NET MAUI 团队的首席软件工程师，近日他在微软 Build 2024 开发者大会上分享了一个有趣的主题——在任天堂 NES 游戏机上运行 .NET，演示了 C#...</description>
            <link>http://osc.cool/DR5T6c8m</link>
            <guid isPermaLink="false">http://osc.cool/DR5T6c8m</guid>
            <pubDate>Thu, 30 May 2024 08:16:00 GMT</pubDate>
        </item>
        <item>
            <title>腾讯混元大模型 App「腾讯元宝」正式上线</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯混元大模型 App「腾讯元宝」现已正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FLSTq_GID1ZqLteCgmaEFzw&quot; target=&quot;_blank&quot;&gt;上线&lt;/a&gt;，支持文字、文件、图片输入，目前在安卓市场已经可以下载。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;302&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1c5f65c5b21741479a8fc47ad37f8d78d5d.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;相比此前测试阶段的混元小程序版本，面向工作效率场景，腾讯元宝提供了 AI 搜索、AI 总结、AI 写作等核心能力；面向日常生活场景，元宝提供了多个特色 AI 应用，并新增了创建个人智能体等玩法。据了解，元宝将于近期推出腾讯新闻哥、《庆余年》主题等特色智能体。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯元宝的核心竞争力是腾讯的生态。在 AI 搜索方面，腾讯元宝接入了微信搜一搜、搜狗搜索等搜索引擎，并通过 AI 搜索增强，提升时新类和知识类问题效果。内容覆盖微信公众号等腾讯生态内容及互联网权威信源。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯元宝产品能力升级的背后是腾讯混元底层模型的迭代。2023 年 9 月首次亮相以来，腾讯混元大模型的参数规模已从千亿升级至万亿，预训练语料从万亿升级至 7 万亿 tokens，并升级为多专家模型结构（MoE），整体性能相比 Dense 版本（稠密版本）提升超 50%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在多模态方面，腾讯混元文生图大模型是业内首个中文原生 DiT 架构模型，生成效果相比上代提升超 20%。目前，腾讯内部有超 600 个业务及场景都已经接入腾讯混元。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295007</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295007</guid>
            <pubDate>Thu, 30 May 2024 06:13:29 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Mistral AI 发布编程大模型 Codestral：220 亿参数、支持 80 多种语言</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Mistral 发布了新的编程大模型&amp;nbsp; Codestral，并开源模型参数权重。据称 Codestral 在代码基准测试中显著优于 Llama3 70B 等大模型。&lt;/p&gt; 
&lt;p&gt;Codestral 在 80 多种编程语言的不同数据集上进行了训练，其中包括最流行的语言，如 Python、Java、C、C++、JavaScript 和 Bash。对于不那么主流的语言比如 Swift 和 Fortran 同样表现出色。这种广泛的语言基础确保 Codestral 可以在各种编码环境和项目中为开发者提供帮助。&lt;/p&gt; 
&lt;p&gt;和其它编程 LLM 类似，Codestral 可以帮助开发者完成各种功能，包括完成函数、编写测试、填充代码等等，降低代码中出现错误和漏洞的风险。&lt;/p&gt; 
&lt;p&gt;Mistral AI 还通过图表，让 Codestral 22B 对比了 Code Llama 70B、DeepSeek Coder 33B 和 Llama 3 70B 同类大模型，表示 Codestral 的参数虽然只有 220 亿，但上下文长度达到 3.2 万个 tokens，根据进行的几项基准测试，它在 Python、SQL 和其他语言方面的表现普遍更好。&lt;/p&gt; 
&lt;p&gt;在 SQL spider 基准测试中，Llama 3 70B 的得分率为 67.1%，Codestral 22B 为 63.5%；在 MBPP Python 基准测试中，DeepSeek Code 33B 的得分率为 80.2%，Codestral 22B 为 78.2%。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1698&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1bff27b4135ef9eca5e2f9609fd0d43903a.png&quot; width=&quot;2138&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Codestral 目前处于 Beta 阶段，可以访问 chat.mistral.ai 免费使用。&lt;/p&gt; 
&lt;p&gt;文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.mistral.ai%2Fcapabilities%2Fcode_generation%2F&quot; target=&quot;_blank&quot;&gt;https://docs.mistral.ai/capabilities/code_generation/&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295005/mistral-ai-codestral-llm</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295005/mistral-ai-codestral-llm</guid>
            <pubDate>Thu, 30 May 2024 05:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>DuckDB 数据库不需要数据</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数据库的众多优点之一是它们通常试图将数据在内部的表示方式（例如在磁盘上）与数据使用方式分开。甚至，不将数据存储在运行查询的同一硬件上已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FDisaggregated_storage&quot; target=&quot;_blank&quot;&gt;成为常态。&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;数据库在这方面已经做得非常出色，以至于这个术语现在几乎具有误导性。「&lt;em&gt;数据库&lt;/em&gt;」暗示着某种坚固的东西，没有它数据就会消失。但数据始终存在，只是无名硬盘上的一些位。现代数据库提供的结构和可访问性完全独立于硬盘而存在。没错——大多数数据库中不再包含任何数据。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fduckdb.org%2F&quot; target=&quot;_blank&quot;&gt;DuckDB&lt;/a&gt;是为这个时代构建的数据库，并且是一个特别可爱的数据库。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;假设您运营一家自动驾驶出租车服务公司。并且您在 Blob 存储中维护着一个不断增长的有趣乘车模式数据集，您希望更好地了解这些模式。这些数据被拆分成每天的单独 Parquet 文件。您如何与分析师共享该数据集？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;你可以直接把所有东西都邮寄给他们，但这样数据集就太大了。而且它会立即过期。如果这是一篇博客文章，你只需发送一个链接，但这里实际上没有任何东西可以链接。而向某人发送一百个指向 S3 中的原始 blob 的链接可能会破坏任何工作关系。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;相反，你可以为他们建立一个小型数据库：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#42a2e2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#42a2e2&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#999988&quot;&gt;# Send &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;import&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#555555&quot;&gt;duckdb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;db&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;duckdb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;connect&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;weird_rides.db&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;db&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;sql&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;&quot;&quot; CREATE VIEW weird_rides AS SELECT pickup_at, dropoff_at, trip_distance, total_amount FROM &#39;s3://robotaxi-inc/daily-ride-data/*.parquet&#39; WHERE fare_amount &amp;gt; 100 AND trip_distance &amp;lt; 10.0 &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;db&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;close&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; &lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;这将生成一个名为，的小文件&lt;code class=&quot;language-plaintext&quot;&gt;weird_rides.db&lt;/code&gt;。它不包含任何实际数据。它包含的是上述有关如何处理这堆 blob 的说明，就好像它是相关数据点的单个表格一样。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;您还可以将此数据库文件发布到 Blob 存储，就在数据旁边。现在您有一个可以链接的内容：&lt;code class=&quot;language-plaintext&quot;&gt;s3://robotaxi-inc/virtual-datasets/weird_rides.db&lt;/code&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;链接的接收者无需打开网络浏览器，而是启动他们自己的本地 DuckDB 会话，并 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fduckdb.org%2Fdocs%2Fguides%2Fnetwork_cloud_storage%2Fduckdb_over_https_or_s3&quot; target=&quot;_blank&quot;&gt;连接&lt;/a&gt;到引用的数据库。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#42a2e2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#42a2e2&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#999988&quot;&gt;# Receive &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;import&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#555555&quot;&gt;duckdb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;conn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;duckdb&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;connect&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;()&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;conn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;sql&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;&quot;&quot; ATTACH &#39;s3://robotaxi-inc/virtual-datasets/weird_rides.db&#39; AS rides_db (READ_ONLY) &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt; &lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#42a2e2&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#42a2e2&quot;&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;conn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;sql&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;SELECT * FROM rides_db.weird_rides LIMIT 5&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#999988&quot;&gt;# ┌─────────────────────┬─────────────────────┬───────────────┬──────────────┐ # │ pickup_at │ dropoff_at │ trip_distance │ total_amount │ # │ timestamp │ timestamp │ float │ float │ # ├─────────────────────┼─────────────────────┼───────────────┼──────────────┤ # │ 2019-04-01 00:03:20 │ 2019-04-01 00:03:54 │ 0.0 │ 240.35 │ # │ 2019-04-01 00:16:16 │ 2019-04-01 00:16:21 │ 0.0 │ 138.36 │ # │ 2019-04-01 02:01:22 │ 2019-04-01 02:01:28 │ 0.0 │ 192.96 │ # │ 2019-04-01 06:26:44 │ 2019-04-01 06:27:14 │ 0.0 │ 115.3 │ # │ 2019-04-01 07:28:12 │ 2019-04-01 07:28:12 │ 0.0 │ 127.2 │ # └─────────────────────┴─────────────────────┴───────────────┴──────────────┘ &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt; 
      &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此查询是第一次从 S3 下载数据。DuckDB 支持 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fduckdb.org%2Fdocs%2Fdata%2Fparquet%2Foverview.html%23partial-reading&quot; target=&quot;_blank&quot;&gt;部分读取&lt;/a&gt;&lt;code class=&quot;language-plaintext&quot;&gt;weird_rides&lt;/code&gt;，这意味着只需要获取视图定义中使用的列，并且&lt;code class=&quot;language-plaintext&quot;&gt;fare_amount &amp;gt; 100&lt;/code&gt;可以使用类似的过滤器在下载过程中丢弃更多不相关的数据。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
      &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;从接收方的角度来看，这种访问数据的方式将保持不变，几乎无论底层数据发生什么变化。格式变化 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fduckdb.org%2Fdocs%2Fdata%2Fjson%2Foverview&quot; target=&quot;_blank&quot;&gt;、&lt;/a&gt;不同的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fduckdb.org%2Fdocs%2Fdata%2Fmultiple_files%2Foverview%23parquet&quot; target=&quot;_blank&quot;&gt;分区策略&lt;/a&gt;、架构变化——尽管如此，接收方的视图仍保持不变。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
      &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用 DuckDB 作为数据云的浏览器，关系数据集始终只需一个超链接即可。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
      &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;em&gt;&lt;span style=&quot;color:#95a5a6&quot;&gt;原文链接：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nikolasgoebel.com%2F2024%2F05%2F28%2Fduckdb-doesnt-need-data.html&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#95a5a6&quot;&gt;https://www.nikolasgoebel.com/2024/05/28/duckdb-doesnt-need-data.html&lt;/span&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/295187/duckdb-doesnt-need-data</link>
            <guid isPermaLink="false">https://www.oschina.net/news/295187/duckdb-doesnt-need-data</guid>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>