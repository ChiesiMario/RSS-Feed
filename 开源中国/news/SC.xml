<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 14 Apr 2025 21:36:36 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>高德发布全球首个地图领域 AI 导航智能体</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;高德地图今日宣布推出基于地图的 AI 导航智能体（NaviAgent）。据技术负责人介绍，其核心架构采用 Planner-Executor 模式，通过感知、规划、执行、表达四大模块构建智能闭环，集成多项高德核心技术。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/191004_ga7U_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;官方表示，该智能体「更像经验丰富的‘老司机’」，能实时感知路况、预判风险并主动调整策略。&lt;/p&gt; 
&lt;p&gt;据了解，以高速驾车场景为例，其支持通过&lt;strong&gt;感知车道级交通流变化、动态事件、事故占道等信息&lt;/strong&gt;，结合用户路线，AI 导航智能体会&lt;strong&gt;自动开启领航功能，推荐全局最优车道&lt;/strong&gt;，让变道决策更从容高效。&lt;/p&gt; 
&lt;p&gt;同时，在停车场景中，&lt;strong&gt;超视距感知能力可覆盖至「最后 100 米」&lt;/strong&gt;：当用户输入目的地后，系统会在距离终点 5 公里时启动智能分析，主动推荐目的地周边的空闲停车位；基于时空感知和推理能力，补全停车后的步行导航指引，直达目的地入口，实现无缝衔接。&lt;/p&gt; 
&lt;p&gt;其红绿灯 AI 领航功能已覆盖全国，可结合实时交通信息与超视距感知技术，动态提供车速建议、车道选择及起步提醒，大幅提升过灯效率。&lt;/p&gt; 
&lt;p&gt;AI 导航智能体还构建了包含情感识别、意图理解、情绪表达在内的三维交互体系，突破性地将服务拓展至情绪价值领域。譬如，当用户完成优质的驾驶操作时，还会&lt;strong&gt;收到导航智能体的及时赞许&lt;/strong&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344517</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344517</guid>
            <pubDate>Sun, 13 Apr 2025 11:10:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>一次提交更新两个仓库，Get 更优雅的 GitHub/Gitee 仓库镜像同步</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;现在很多开发者都不满足于只在一个代码托管平台活跃，将项目同时托管于 Gitee 和 GitHub 是目前国内很多开发者的选择，既拥有更快的访问和代码推拉速度，也可以和更多国际上的优秀开发者交流。&lt;/p&gt; 
&lt;p&gt;Gitee 的&lt;strong&gt;仓库镜像管理&lt;/strong&gt;功能在这两天重新受到了开发者们的关注，今天马建仓再次为大家介绍一下这个超方便的功能，方便各位开发者更优雅地将代码在世界上最大的两个代码托管平台之间同步。&lt;/p&gt; 
&lt;h2&gt;什么是仓库镜像管理&lt;/h2&gt; 
&lt;p&gt;仓库镜像管理功能用于配置和管理仓库镜像；配置仓库镜像可以实现不同平台之间仓库分支、标签和提交信息的自动同步。&lt;/p&gt; 
&lt;p&gt;简单来说，就是你可以&lt;strong&gt;通过仓库镜像管理功能实现 Gitee 和 GitHub 两个平台的双向自动同步&lt;/strong&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;将 Gitee 的仓库镜像至 GitHub&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;配置此镜像后，当你提交代码到 Gitee 的仓库时，Gitee 会自动向 GitHub 同步仓库。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/184829_hrc3_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;将 GitHub 的仓库镜像至 Gitee&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;你可以根据自身需求选择&lt;strong&gt;自动镜像&lt;/strong&gt;或&lt;strong&gt;手动镜像&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;自动镜像&lt;/strong&gt;：当你提交代码到 GitHub 镜像仓库时，Gitee 会自动从 GitHub 同步仓库。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;手动镜像&lt;/strong&gt;：只有你手动点击更新按键时，Gitee 才会从 GitHub 同步仓库。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/184845_9D4v_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;仓库镜像会同步以下内容：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;分支（Branches）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;标签（Tags）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;提交记录（Commits）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;如何为自己的仓库设置镜像&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;以将 GitHub 的仓库镜像至 Gitee 为例&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;进入需要使用镜像功能的仓库，进入「管理」找到「仓库镜像管理」选项，点击「添加镜像」按钮，如果你还没有绑定 GitHub 帐号，请根据弹窗提示绑定 GitHub 帐号；&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/184923_KLAZ_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;添加镜像&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/184946_8GX5_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在「镜像方向」中选择 Pull 方向；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在「镜像仓库」下拉列表中选择需要镜像的仓库；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在「私人令牌」中输入你的 GitHub 私人令牌；&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/184959_x8O7_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;私人令牌中必须包含对&amp;nbsp;&lt;code&gt;repo&lt;/code&gt;&amp;nbsp;的访问授权，否则添加后镜像不可用。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;根据自身需求选择是否勾选「自动从 GitHub 同步仓库」&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;勾选后，将会在镜像仓库中自动生成 webhook 用于实现自动镜像。此功能需要你的个人令牌中包含对 admin:repo_hook 的访问授权，否则会添加失败。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;点击「添加」保存镜像配置。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;配置完成后，可以通过&lt;strong&gt;提交代码到 Gitee 仓库&lt;/strong&gt;或&lt;strong&gt;手动更新镜像&lt;/strong&gt;的方式触发镜像操作。&lt;/p&gt; 
&lt;p&gt;一次提交，同步两个仓库，更优雅的仓库镜像姿势你 Get 到了吗？&lt;/p&gt; 
&lt;p&gt;点击后面的链接了解更多功能细节：&lt;a href=&quot;https://gitee.com/help/articles/4336&quot;&gt;https://gitee.com/help/articles/4336&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;注意事项&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;镜像触发的最短间隔时间为 5 分钟；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;只支持镜像已绑定 GitHub 帐号授权访问的仓库；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新请求一旦发出，除非强制停止，否则将无法中断；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;暂时不支持同步&lt;code&gt;Git-LFS&lt;/code&gt;；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;同步时间超过 30 分钟视为超时，大型仓库不建议使用镜像方式同步；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;镜像操作会覆盖目标仓库的分支、标签和提交记录；请注意备份并小心使用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;单向导入同样支持&lt;/h2&gt; 
&lt;p&gt;同时 Gitee 也支持从 GitHub 单向导入仓库的操作。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/185026_lLHt_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;点击右上角&lt;code&gt;+&lt;/code&gt;后选择&lt;code&gt;从 GitHub/GitLab 导入仓库&lt;/code&gt;，连接自己的 GitHub 账号即可实现仓库的一键导入。&lt;/p&gt; 
&lt;p&gt;欢迎使用 Gitee：&lt;a href=&quot;https://gitee.com/&quot;&gt;https://gitee.com/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344514</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344514</guid>
            <pubDate>Sun, 13 Apr 2025 10:51:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>SSL/TLS 证书最长有效期缩短至 47 天</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;苹果此前向 CA/B 论坛（负责管理 SSL/TLS 证书的行业组织）提议，将所有证书有效期缩短至 45 天。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;日前 CA/B 论坛服务器证书工作组投票通过 SC-081v3 提案，最终决定将 SSL/TLS 证书有效期从 398 天降至 47 天，SAN 数据重用周期缩短至 10 天。&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3fc44165410fc553ed10737b2c1f73744e1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgroups.google.com%2Fa%2Fgroups.cabforum.org%2Fg%2Fservercert-wg%2Fc%2F9768xgUUfhQ%3Fpli%3D1&quot; target=&quot;_blank&quot;&gt;https://groups.google.com/a/groups.cabforum.org/g/servercert-wg/c/9768xgUUfhQ?pli=1&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;SSL/TLS 证书是一种用于网站的安全协议，通过加密网络连接确保数据传输的安全性。&lt;/p&gt; 
&lt;p&gt;此前，SSL/TLS 证书最长有效期可达 8 年，经过多次调整，目前最长为 398 天，开发者和企业必须在这个时间内更新一次数字证书。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;苹果给出的理由也非常简单，有效期缩短后，即便证书泄露也很快就会过期而不会被长时间利用。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此次投票中，证书颁发机构（CA）25 票赞成、0 票反对、5 票弃权；证书消费者（包括苹果、谷歌、微软、Mozilla 主要浏览器开发商）4 票赞成、0 票反对、0 票弃权。&lt;/p&gt; 
&lt;p&gt;提案通过后，将进入知识产权审查阶段。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;该措施将从 2026 年 3 月开始逐步实施，到 2029 年 3 月结束，具体时间表如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2026 年 3 月 14 日前：证书有效期最长为 398 天&lt;/li&gt; 
 &lt;li&gt;2027 年 3 月 14 日前：证书有效期最长缩短至 200 天&lt;/li&gt; 
 &lt;li&gt;2028 年 3 月 14 日前：证书有效期最长缩短至 100 天&lt;/li&gt; 
 &lt;li&gt;2028 年 3 月 15 日后：证书有效期最长缩短至 47 天&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;尽管 SSL/TLS 证书已经有很多便捷的工具可以实现自动化续签，但并非每个网站和企业都可以轻松部署自动化续签流程，尤其是有些复杂的系统切换数字证书本身就是个麻烦的事情。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;在 Reddit 论坛上有数百名系统管理员抱怨苹果的这项提议，因为缩短证书有效期后剩余的工作都要系统管理员承担，尤其是如果管理多个网站那么工作量将会显著提升 (假如无法实现自动化续签)。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344509</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344509</guid>
            <pubDate>Sun, 13 Apr 2025 10:30:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>量子计算机可能帮助解决的三个现实世界问题</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;今天是世界量子日，为了纪念这一天，谷歌发文&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fresearch%2Fgoogle-quantum-computer-real-world-applications%2F&quot; target=&quot;_blank&quot;&gt;介绍&lt;/a&gt;了量子计算机可能帮助解决的三个现实世界问题。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1600&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b44eb7465984c4826a24491d5324ee91f30.png&quot; width=&quot;1910&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;世界量子日（World Quantum Day），即 4 月 14 日，是世界各地量子科学家发起的一项倡议，于 2021 年 4 月 14 日启动，并开始 2022 年 4 月 14 日首次全球庆祝活动的倒计时。&lt;/p&gt; 
 &lt;p&gt;「世界量子日」为什么选在 4 月 14 日，这是源自普朗克常数。普朗克常数是支配量子物理的基本常数，其大小为为 4.135667696 × 10-15eV·s，其前几位数字（四舍五入近似）即是「414」。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;药物研发&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Google 表示，量子计算机预计将带来的首个益处是药物研发，从而改善健康结果。借助这项技术，研究人员将能够测试不同候选药物的靶点和其他生物分子，从而帮助研发更有效的药物。&lt;/p&gt; 
&lt;p&gt;Google 最近与勃林格殷格翰公司联合发表了一篇研究论文，论文表明量子计算机将能够更准确地模拟细胞色素 P450，这是一种决定药物有效性的关键酶，因为它在血液中分解药物。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;改进电池&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Google 希望量子计算机能够造福人类的另一个途径是开发改进型电池。这对于清洁能源交通（例如电动汽车和公交车）以及电网至关重要，因为多余的能量可以储存起来，以备无风或无阳光时使用。&lt;/p&gt; 
&lt;p&gt;为了改进电池，Google 设想利用量子计算机辅助设计新材料。该公司已与化学公司巴斯夫合作，确定量子计算机将能够模拟锂镍氧化物 (LNO)，从而改善工业生产流程并生产出性能更佳的电池。目前，LNO 的生产难度较大，这阻碍了该领域的研究。LNO 的主要优势之一是，与更常用的钴酸锂相比，其环境足迹更小。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;聚变能&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Google 表示量子计算机将受益的第三个也是最后一个领域是能源生产。如今，清洁可再生能源指的是太阳能或风能，但未来将意味着核聚变能。核聚变反应堆的技术仍在研发中，但 Google 相信量子计算机将用于设计反应堆，从而释放核聚变能。&lt;/p&gt; 
&lt;p&gt;Google 表示，目前的计算机模型可能存在误差，需要运行数十亿个 CPU 小时。这家搜索巨头已与桑迪亚国家实验室合作，证明在容错量子计算机上运行的量子算法可以「更有效地模拟持续聚变反应所需的机制」。&lt;/p&gt; 
&lt;p&gt;以科学为中心的人工智能模型的引入已经加速了药物和材料的发现，因此，当它与量子计算机相结合时，这些发现的速度可能会进一步加快。&lt;/p&gt; 
&lt;p&gt;世界量子日快乐！&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;阅读更多&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/324343/google-willow-quantum-chip&quot; target=&quot;news&quot;&gt;谷歌发布 Willow 量子计算芯片&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/334836/microsofts-majorana-1-chip&quot; target=&quot;news&quot;&gt;微软发布首款量子计算芯片「Majorana 1」&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/336773/quantum-computing-aws-ocelot-chip&quot; target=&quot;news&quot;&gt;亚马逊发布首款量子计算芯片 「Ocelot」&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344503/google-quantum-computer-real-world-applications</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344503/google-quantum-computer-real-world-applications</guid>
            <pubDate>Sun, 13 Apr 2025 10:03:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Meilisearch 1.4 稳定版发布，Rust 高性能开源搜索引擎</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Meilisearch 是 Rust 实现的高性能开源搜索引擎，可作为 Elasticsearch 的替代方案，支持方便地集成到任何网站或应用程序，支持自托管 (self-hosting)，可作为 Algolia 和 Elasticsearch 的轻量替代方案。Meilisearch 内置了许多实用功能，比如：&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;快速的输入即搜索 (search-as-you-type) 体验，也称作 「即时搜索」&lt;/li&gt; 
 &lt;li&gt;支持冗错 / 纠错搜索 (typo tolerance)&lt;/li&gt; 
 &lt;li&gt;支持多面搜索 (faceted search)&lt;/li&gt; 
 &lt;li&gt;支持基于地理位置的搜索 (geosearch)&lt;/li&gt; 
 &lt;li&gt;支持多租户 (multi-tenancy)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Meilisearch 最新稳定版 1.4 已于今天发布，此版本引入了两个重要的实验性功能：&lt;strong&gt;向量存储和分数详情&lt;/strong&gt;，幷包含多项性能改进和错误修复。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;新功能 (实验性)&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;向量存储 (Vector Store)：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;允许存储和搜索向量 (Embeddings)。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;code&gt;embedders&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;prompt&lt;/code&gt;&amp;nbsp;索引设置。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;code&gt;/indexes/:index_uid/embeddings&lt;/code&gt;&amp;nbsp;API 端点用于添加向量。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;code&gt;/indexes/:index_uid/settings/embedders&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;/indexes/:index_uid/settings/prompt&lt;/code&gt;&amp;nbsp;API 端点用于配置嵌入器和提示。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;code&gt;vector&lt;/code&gt;&amp;nbsp;搜索参数用于纯向量搜索。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;code&gt;hybrid&lt;/code&gt;&amp;nbsp;搜索参数用于混合 (关键字 + 向量) 搜索。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;分数详情 (Score Details)：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;code&gt;showRankingScoreDetails&lt;/code&gt;&amp;nbsp;搜索参数 (设置为&amp;nbsp;&lt;code&gt;true&lt;/code&gt;)。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在搜索结果的&amp;nbsp;&lt;code&gt;_rankingScoreDetails&lt;/code&gt;&amp;nbsp;字段中返回每个文档详细的排名分数计算信息。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;性能改进&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;索引性能&lt;/strong&gt;：通过优化 Roaring Bitmaps 的内存使用，显著提高了大型文档的索引速度。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;内存使用&lt;/strong&gt;：降低了索引过程中的内存消耗。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;搜索性能&lt;/strong&gt;：通过优化 Roaring Bitmaps 的交集计算，提升了包含大量候选结果的搜索查询性能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;排名分数&lt;/strong&gt;：提高了排名分数计算的精确度。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;其他改进&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;/features&lt;/code&gt;&amp;nbsp;端点&lt;/strong&gt;：添加了&amp;nbsp;&lt;code&gt;vectorStore&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;scoreDetails&lt;/code&gt;&amp;nbsp;到&amp;nbsp;&lt;code&gt;/features&lt;/code&gt;&amp;nbsp;API 端点，以表明这些实验性功能是否启用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;错误信息&lt;/strong&gt;：改进了无效&amp;nbsp;&lt;code&gt;filter&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;sort&lt;/code&gt;&amp;nbsp;语法的错误提示信息。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Bug 修复&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修复了索引非常大的文档 (接近 4GB) 时可能发生的崩溃问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复了在大量文档上使用&amp;nbsp;&lt;code&gt;sort&lt;/code&gt;&amp;nbsp;时可能发生的崩溃问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复了同时使用&amp;nbsp;&lt;code&gt;sort&lt;/code&gt;&amp;nbsp;和&amp;nbsp;&lt;code&gt;distinct&lt;/code&gt;&amp;nbsp;时可能返回不正确结果的问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复了&amp;nbsp;&lt;code&gt;attributesToSearchOn&lt;/code&gt;&amp;nbsp;设置在某些情况下未正确应用的问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复了&amp;nbsp;&lt;code&gt;attributesToRetrieve&lt;/code&gt;&amp;nbsp;与&amp;nbsp;&lt;code&gt;distinct&lt;/code&gt;&amp;nbsp;结合使用时无法正常工作的问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修复了在索引过程中发生崩溃后可能导致索引损坏的问题。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下载地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmeilisearch%2Fmeilisearch%2Freleases%2Ftag%2Fv1.14.0&quot; target=&quot;_blank&quot;&gt;https://github.com/meilisearch/meilisearch/releases/tag/v1.14.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344497/meilisearch-1-4</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344497/meilisearch-1-4</guid>
            <pubDate>Sun, 13 Apr 2025 09:45:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>100% 议题火爆出炉！0425 GOPS 2025 · 深圳站即将启幕！</title>
            <description>GOPS 2025 · 深圳站即将启幕</description>
            <link>https://www.bagevent.com/event/8943887?bag_track=KYZG</link>
            <guid isPermaLink="false">https://www.bagevent.com/event/8943887?bag_track=KYZG</guid>
            <pubDate>Sun, 13 Apr 2025 09:19:00 GMT</pubDate>
        </item>
        <item>
            <title>顶级生成式 AI 用例揭晓：营销任务排名较低</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据最新的研究，生成性人工智能（Gen AI）在市场营销领域的应用远不如个人使用那么普遍。一份由 Marc Zao-Sanders 发布的《Top-100Gen AI Use Case》报告显示，尽管人们在日常生活中越来越多地利用 AI 来获得情感支持，市场营销的相关任务，如广告创作和社交媒体内容生成，却位居使用排名的后列。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;报告分析了人们对生成性 AI 的使用情况，并指出，过去一年中，使用重点从技术驱动转向了以情感和个人福祉为中心的应用。根据研究，前三名的应用包括:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;心理治疗和陪伴&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;生活组织&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;寻找生活目标&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;593&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-69816cfbe83380d0ed45a10da818b17fe37.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;报告指出，这一发现表明，用户更倾向于利用 AI 来满足自身的情感需求，而不是单纯提高工作效率。在营销领域，相关应用的排名较低，包括:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;广告 / 营销文案（第 64 位）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;撰写博客文章（第 97 位）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;社交媒体文案（第 98 位）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;社交媒体系统（第 99 位）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这种差距反映出市场营销人员尚未充分挖掘生成性 AI 的潜力。Zao-Sanders 在报告中指出，营销人员可能错误判断了 AI 的使用方向，很多专家原本预期 AI 将首先在技术领域取得成果，然而，研究表明 AI 在满足人类情感需求方面同样具有重要作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;用户对生成性 AI 的使用也在不断提高，特别是在撰写有效提示方面。报告中提到的高排名应用可为营销人员提供借鉴。人们喜爱能够与他们建立情感联系的 AI，营销工具可以更加注重对话性和同理心。除此之外，AI 在生活组织方面的应用也相当受欢迎，营销工具可以集中精力在优化工作流程上，而不仅仅是内容创作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在报告中，排名较高的营销相关用例是 「生成创意」，位列第六，表明头脑风暴可能是生成性 AI 的一个更佳切入点。营销人员分享了一些生成性 AI 在实际应用中的成功案例，比如利用 AI 进行行业痛点分析、快速生成案例研究报告等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;报告建议营销人员应关注 AI 工具的个人利益，而不仅仅是生产力提升。透明的数据隐私保护措施也非常重要，这有助于增强用户的信任。Zao-Sanders 总结道，现在正是营销人员学习和将这些工具融入日常工作中的最佳时机。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344484</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344484</guid>
            <pubDate>Sun, 13 Apr 2025 09:13:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Krillin AI —— 视频翻译和配音工具</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                            &lt;p&gt;Krillin AI 是一款全能型音视频本地化与增强解决方案。这款简约而强大的工具，集音视频翻译、配音、语音克隆于一身，支持横竖屏格式输出，确保在所有主流平台（哔哩哔哩，小红书，抖音，视频号，快手，YouTube，TikTok 等）都能完美呈现。通过端到端的工作流程，Krillin AI 仅需点击几次，就能将原始素材转化为精美即用的跨平台内容。&lt;/p&gt;

&lt;div style=&quot;text-align:start&quot;&gt;
&lt;h4&gt;&lt;strong&gt;主要特点与功能：&lt;/strong&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;一键启动&lt;/strong&gt;：无需复杂的环境配置，自动安装依赖，立即投入使用，新增桌面版本，使用更便捷！&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;视频获取&lt;/strong&gt;：支持 yt-dlp 下载或本地文件上传&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;精准识别&lt;/strong&gt;：基于 Whisper 的高准确度语音识别&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;智能分段&lt;/strong&gt;：使用 LLM 进行字幕分段和对齐&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;术语替换&lt;/strong&gt;：一键替换专业领域词汇&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;专业翻译&lt;/strong&gt;：基于 LLM，段落级翻译保持语义连贯性&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;配音克隆&lt;/strong&gt;：提供 CosyVoice 精选音色或自定义音色克隆&lt;/li&gt;
&lt;li style=&quot;color: rgb(31, 35, 40); text-align: start;&quot;&gt;&lt;strong&gt;视频合成&lt;/strong&gt;：自动处理横竖版视频和字幕排版&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&quot;text-align:start&quot;&gt;
&lt;h4&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;语言支持&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li style=&quot;text-align: start;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;输入语言：支持中文、英语、日语、德语、土耳其语（更多语言正在添加）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li style=&quot;text-align: start;&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;翻译语言：支持 56 种语言，包括英语、中文、俄语、西班牙语、法语等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/krillinai</link>
            <guid isPermaLink="false">https://www.oschina.net/p/krillinai</guid>
            <pubDate>Sun, 13 Apr 2025 08:56:00 GMT</pubDate>
        </item>
        <item>
            <title>Rust 1.86.0 稳定版发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Rust 团队发布了 Rust 1.86.0 版本，通过&lt;code&gt;rustup update stable&lt;/code&gt;&amp;nbsp;可更新。&lt;/p&gt; 
&lt;p&gt;该版本带来多项重要更新:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持 trait 向上转型&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HashMap&lt;/code&gt;&amp;nbsp;和切片可同时获取多个元素的可变引用&lt;/li&gt; 
 &lt;li&gt;安全函数可使用&amp;nbsp;&lt;code&gt;#[target_feature]&lt;/code&gt;&amp;nbsp;属性&lt;/li&gt; 
 &lt;li&gt;新增指针非空调试断言&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;missing_abi&lt;/code&gt;&amp;nbsp;lint 默认警告&lt;/li&gt; 
 &lt;li&gt;1.87.0 版本将弃用&amp;nbsp;&lt;code&gt;i586-pc-windows-msvc&lt;/code&gt;&amp;nbsp;目标平台&lt;/li&gt; 
 &lt;li&gt;一批 API 进入稳定&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;新特性&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;trait 向上转型&lt;/strong&gt;：实现了 trait 对象的向上转型，若 trait 存在上级 trait，可将该 trait 对象的引用强制转换为上级 trait 对象的引用，如&amp;nbsp;&lt;code&gt;Arc&amp;lt;dyn Trait&amp;gt; -&amp;gt; Arc&amp;lt;dyn Supertrait&amp;gt;&lt;/code&gt;&amp;nbsp;等。此前需在&amp;nbsp;&lt;code&gt;trait&lt;/code&gt;&amp;nbsp;内定义&amp;nbsp;&lt;code&gt;upcast&lt;/code&gt;&amp;nbsp;方法实现，且仅适用于一种引用 / 指针类型，现在不再需要。使用&amp;nbsp;&lt;code&gt;Any&lt;/code&gt;&amp;nbsp;trait 时，该特性可将 trait 对象向上转型为&amp;nbsp;&lt;code&gt;dyn Any&lt;/code&gt;，调用&amp;nbsp;&lt;code&gt;Any&lt;/code&gt;&amp;nbsp;的&amp;nbsp;&lt;code&gt;downcast&lt;/code&gt;&amp;nbsp;方法 。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;HashMap&lt;/code&gt;和切片支持多元素可变索引&lt;/strong&gt;：标准库提供&amp;nbsp;&lt;code&gt;get_disjoint_mut&lt;/code&gt;&amp;nbsp;辅助函数，切片和&amp;nbsp;&lt;code&gt;HashMap&lt;/code&gt;&amp;nbsp;可同时获取多个元素的可变引用，解决了借用检查器阻止重复调用&amp;nbsp;&lt;code&gt;get_mut&lt;/code&gt;&amp;nbsp;方法获取的引用同时使用的问题。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全函数使用&amp;nbsp;&lt;code&gt;#[target_feature]&lt;/code&gt;&amp;nbsp;属性&lt;/strong&gt;：稳定了&amp;nbsp;&lt;code&gt;target_feature_11&lt;/code&gt;&amp;nbsp;特性，允许安全函数使用&amp;nbsp;&lt;code&gt;#[target_feature]&lt;/code&gt;&amp;nbsp;属性。标记该属性的安全函数，只能在同样标记了该属性的函数中安全调用；在未标记的函数中调用时，需在&amp;nbsp;&lt;code&gt;unsafe&lt;/code&gt;&amp;nbsp;块内进行，且调用者要确保目标特性可用。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;增强与变更&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;指针非空调试断言&lt;/strong&gt;：编译器会在非零大小读写和指针重新借用为引用时，插入指针非空的调试断言。如&amp;nbsp;&lt;code&gt;let _x = *std::ptr::null::&amp;lt;u8&amp;gt;();&lt;/code&gt;&amp;nbsp;在启用调试断言时会触发非展开式 panic。该断言仅在启用调试断言时生效，不能依赖其保证程序正确性。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;missing_abi&lt;/code&gt;&amp;nbsp;lint 默认警告&lt;/strong&gt;：在&amp;nbsp;&lt;code&gt;extern&lt;/code&gt;&amp;nbsp;块和函数中省略 ABI（如&lt;code&gt;extern {}&lt;/code&gt;和&lt;code&gt;extern fn&lt;/code&gt;）会触发&amp;nbsp;&lt;code&gt;missing_abi&lt;/code&gt;&amp;nbsp;lint 警告。建议显式指定&amp;nbsp;&lt;code&gt;&quot;C&quot;&lt;/code&gt;&amp;nbsp;ABI（如&lt;code&gt;extern &quot;C&quot; {}&lt;/code&gt;和&lt;code&gt;extern &quot;C&quot; fn&lt;/code&gt;）。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;目标平台变更&lt;/strong&gt;：1.87.0 版本将移除&amp;nbsp;&lt;code&gt;tier-2&lt;/code&gt;&amp;nbsp;目标平台&amp;nbsp;&lt;code&gt;i586-pc-windows-msvc&lt;/code&gt;，因其与&amp;nbsp;&lt;code&gt;i686-pc-windows-msvc&lt;/code&gt;的区别在于不要求 SSE2 指令支持，但 Windows 10（除&lt;code&gt;win7&lt;/code&gt;&amp;nbsp;目标外所有&amp;nbsp;&lt;code&gt;windows&lt;/code&gt;&amp;nbsp;目标的最低要求操作系统版本）本身需要 SSE2 指令。使用该目标平台的用户应在 1.87.0 发布前迁移至&amp;nbsp;&lt;code&gt;i686-pc-windows-msvc&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;稳定的 API&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;新稳定 API&lt;/strong&gt;：包括&amp;nbsp;&lt;code&gt;{float}::next_down&lt;/code&gt;、&lt;code&gt;{float}::next_up&lt;/code&gt;、&lt;code&gt;[T]::get_disjoint_mut&lt;/code&gt;&amp;nbsp;等多个 API。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;const 上下文稳定的 API&lt;/strong&gt;：如&amp;nbsp;&lt;code&gt;hint::black_box&lt;/code&gt;、&lt;code&gt;io::Cursor::get_mut&lt;/code&gt;&amp;nbsp;等 API 在 const 上下文中稳定。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;原文：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2025%2F04%2F03%2FRust-1.86.0.html&quot; target=&quot;_blank&quot;&gt;https://blog.rust-lang.org/2025/04/03/Rust-1.86.0.html&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344478/rust-1-86-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344478/rust-1-86-released</guid>
            <pubDate>Sun, 13 Apr 2025 08:45:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>勒索软件受害者数量增加 102%，创历史新高</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;GuidePoint Security 最新&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.guidepointsecurity.com%2Fresources%2Fgrit-2025-q1-ransomware-and-cyber-threat-report%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;的「2025 年第一季度勒索软件和网络威胁报告」指出，今年第一季度勒索软件攻击数量达到历史最高水平，受害者人数达 2,063 人，较上年同期增长 102% —— 创下单季度历史新高。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;报告还记录了活跃威胁组织的数量，第一季度共发现 70 个，同比增长 55.5%。&lt;/li&gt; 
 &lt;li&gt;2025 年第一季度，Akira 勒索软件的受害者共有 213 名，活动量同比增长了惊人的 261%。&lt;/li&gt; 
 &lt;li&gt;美国是受灾最严重的地区，2025 年第一季度观察到的勒索软件受害者中有 59% 来自美国，这是迄今为止的最高比例。&lt;/li&gt; 
 &lt;li&gt;2025 年第一季度报告了 12,333 个漏洞，与 2024 年第一季度相比，主动利用的漏洞数量增加了 75%，总体同比增长 41%。&lt;/li&gt; 
 &lt;li&gt;非营利性袭击事件增加了一倍（+106%），教育领域事件增加了 16%，这表明人们对此前被视为禁区的领域的尊重正在减弱。&lt;/li&gt; 
 &lt;li&gt;2025 年第一季度，制造业、零售业和技术行业受到勒索软件的影响最为严重。值得注意的是，非营利部门的勒索软件攻击数量急剧增加，事件数量环比翻了一番。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;253&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-50fbf84dfcd29bf0d0c2362c5dfcaf95915.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;GuidePoint 研究与情报团队 (GRIT) 首席安全顾问 Grayson North 表示：「本季度创纪录并非巧合。我们追踪到的活跃勒索软件和敲诈勒索团体比以往任何时候都多，由 LockBit 和 AlphV 等受疫情影响的犯罪团伙组成的新兴势力发起的大规模攻击明显增多。现在亟待解决的问题是，这种激增究竟是短期内短暂的峰值，还是勒索软件受害者黑暗之年的开始。」&lt;/p&gt; 
&lt;p&gt;「虽然历史趋势表明，随着夏季临近，我们可能会看到季节性放缓，但威胁形势依然动荡。一次大规模的攻击——就像我们在 Clop 看到的那些——就可能再次改变生态系统的轨迹。今年再创纪录的条件已经具备。现在，要由防御者来改变这种局面了。」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344474/grit-2025-q1-ransomware-and-cyber-threat-report</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344474/grit-2025-q1-ransomware-and-cyber-threat-report</guid>
            <pubDate>Sun, 13 Apr 2025 08:35:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Java 开发，对标 Dify、Coze 等的 AI 工作流产品 AIFlowy 发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;大家好，AIFlowy 来了。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#40485b&quot;&gt;AIFlowy 是一个使用 Java 开发的 AI 产品的底座和基石，对标字节 Coze、腾讯元器和 Dify 等产品，但更加注重 toB 端的相关场景，AIFlowy 的定位在 ToB 的场景，未来会以 ToB 为重点，推出一系列的 ToB 能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1078&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8251cedaf1c71e851eeac4c4984c374db40.png&quot; width=&quot;1724&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1078&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3c87da117897b72005b9454ac2e465637bf.png&quot; width=&quot;1724&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;AI 功能&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 应用（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 插件（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Rag 知识库（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;AI 工作流编排（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型配置（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型市场（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;系统管理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;角色管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;菜单管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;部门管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岗位管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;日志管理（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;近期计划&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;完善文档（进行中...）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;增强稳定性（进行中...）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;优化用户体验（进行中...）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;git clone https://gitee.com/aiflowy/aiflowy.git

cd aiflowy
mvn clean package

cd aiflowy-ui-react
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;环境要求&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JDK 1.8+&lt;/li&gt; 
 &lt;li&gt;Node.js 20.0+&lt;/li&gt; 
 &lt;li&gt;MySQL 8.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开发及产品文档&lt;/h2&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Faiflowy.tech&quot; target=&quot;_blank&quot;&gt;https://aiflowy.tech&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(官网正在备案中... 暂未上线)&lt;/p&gt; 
&lt;p style=&quot;color:#40485b; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;开源地址：&lt;/strong&gt;&lt;a href=&quot;https://gitee.com/aiflowy/aiflowy&quot;&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344472/aiflowy-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344472/aiflowy-released</guid>
            <pubDate>Sun, 13 Apr 2025 08:32:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>DeepSeek 即将联合 vLLM 开源推理引擎 (DeepSeek Inference Engine)</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;DeepSeek 在其 GitHub 仓库&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2Fopen-infra-index%2Fblob%2Fmain%2FOpenSourcing_DeepSeek_Inference_Engine%2FREADME.md&quot; target=&quot;_blank&quot;&gt;发布预告称&lt;/a&gt;&lt;/u&gt;，即将开源推理引擎&amp;nbsp;&lt;strong&gt;DeepSeek Inference Engine&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;考虑到代码分支和维护资源等问题，他们选择了直接和 vLLM 等现有开源项目合作的方式进行开源。&lt;/p&gt; 
&lt;p&gt;下面是官方公告：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;几周前，在开源周期间，我们开源了几个库。社区的反应非常积极——激发了许多鼓舞人心的合作、富有成效的讨论和宝贵的错误修复。&lt;/p&gt; 
 &lt;p&gt;受到这一鼓舞，我们决定再迈出一大步：&lt;strong&gt;将我们的内部推理引擎贡献给开源社区&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p&gt;我们对开源生态系统深表感激，没有它，我们向通用人工智能（AGI）的进步将不可能实现。我们的训练框架依赖于 PyTorch，我们的推理引擎建立在 vLLM 之上，这两者都在加速深度探索模型的训练和部署方面发挥了至关重要的作用。&lt;/p&gt; 
 &lt;p&gt;随着对部署 DeepSeek-V3 和 DeepSeek-R1 等模型的需求不断增长，我们希望尽可能地为社区做出贡献。虽然我们最初考虑开源我们的完整内部推理引擎，但我们发现了一些挑战：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;代码库改动大&lt;/strong&gt;：我们的引擎基于一年多前的 vLLM 早期分支。尽管结构相似，但我们已经为 DeepSeek 模型进行了大量定制，这使得它难以扩展到更广泛的应用场景。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;基础设施依赖&lt;/strong&gt;：该引擎与我们的内部基础设施紧密耦合，包括集群管理工具，这使得在没有重大修改的情况下进行公开部署变得不切实际。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;维护资源有限&lt;/strong&gt;：作为一个专注于开发更好模型的中小研究团队，我们缺乏维护大型开源项目的资源。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;鉴于这些挑战，我们决定与现有的开源项目合作，作为更可持续的替代方案。&lt;/p&gt; 
 &lt;p&gt;未来，我们将与现有的开源项目紧密合作，以：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;提取独立功能&lt;/strong&gt;：模块化并贡献可重用的组件作为独立库。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;分享优化&lt;/strong&gt;：直接贡献设计改进和实现细节。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/155748_QMBN_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;详情查看：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2Fopen-infra-index%2Fblob%2Fmain%2FOpenSourcing_DeepSeek_Inference_Engine%2FREADME.md&quot; target=&quot;_blank&quot;&gt;https://github.com/deepseek-ai/open-infra-index/blob/main/OpenSourcing_DeepSeek_Inference_Engine/README.md&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344466</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344466</guid>
            <pubDate>Sun, 13 Apr 2025 08:07:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>谷歌开源 AI 智能体开发套件 (Agent SDK)，支持 MCP、A2A</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;谷歌&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevelopers.googleblog.com%2Fen%2Fagent-development-kit-easy-to-build-multi-agent-applications%2F&quot; target=&quot;_blank&quot;&gt;开源&lt;/a&gt;&lt;/u&gt;了首个 Agent 开发套件—ADK，这也是 OpenAI 之后第二家大厂发布的标准化智能体 SDK。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1638&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0414/153749_4yVz_2720166.png&quot; width=&quot;2016&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;ADK 能帮助开发人员极大简化开发超复杂流程的智能体，从大模型选择、自动化流程编排、测试到应用部署可一站式完成，并且支持双向音频、视频、MCP 和最新的 A2A 协议。&lt;/p&gt; 
&lt;p&gt;例如，通过 ADK 开发一个跨平台的语音客服智能体，大概只需要 100 多行甚至更少的代码就能全部完成。再也不用像以前那样，切换不同平台 API，模型选择或交互逻辑编写复杂代码，极大提升了开发效率。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;开源地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fadk-python&quot; target=&quot;_blank&quot;&gt;https://github.com/google/adk-python&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;ADK 介绍&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ADK 架构以 Python 为主，在参数定义、模型集成、工具整合和指令驱动方面非常好用。&lt;/p&gt; 
&lt;p&gt;例如，&lt;strong&gt;下面这个案例只用了&lt;strong&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/strong&gt;行代码，就完成了一个简单的问答智能体开发&lt;/strong&gt;。咱们只设置了使用的模型、智能体名称、功能描述、指令驱动和工具实例。其他的管理状态、协调工具调用以及和底层大模型的交互全部由 ADK 完成。&lt;/p&gt; 
&lt;p&gt;简单来说，用 ADK 开发就有点像拼乐高积木一样，喜欢哪块就拼哪个完全释放你的天马行空想法，再也不用为工具和底层技术发愁了。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;from google.adk.agents import Agent
from google.adk.tools import google_search

root_agent = Agent(
    name=&quot;search_assistant&quot;,
    model=&quot;gemini-2.0-flash&quot;, # Or your preferred Gemini model
    instruction=&quot;You are a helpful assistant. Answer user questions using Google Search when needed.&quot;,
    description=&quot;An assistant that can search the web.&quot;,
    tools=[google_search]
)&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;虽然 ADK 是谷歌开源的，但在大模型兼容方面还是非常灵活的，除了谷歌的 Gemini 系列模型之外，还支持 Anthropic、Meta、Mistral AI、AI21 Labs、CAMB.AI、Qodo 等 200 多个第三方开闭源模型。&lt;/p&gt; 
&lt;p&gt;ADK 的亮点之一便是轻松开发复杂智能体，支持多层级结构组合的智能体实现复杂的协调和委派。开发者可以构建一个主智能体来处理主要任务，并将特定子任务委派给其他专业智能体。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/153833_OCY4_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;简单来说，就是让主智能体指挥其他智能体来执行具体的任务。例如，你是一家电商公司需要开发客服智能体。希望能自动处理订单查询、商品推荐、售后服务等多种服务。&lt;/p&gt; 
&lt;p&gt;传统的方法会非常繁琐，你需要为不同的业务编写不同的逻辑代码并，且优化、重构也很麻烦。&lt;strong&gt;通过&lt;strong&gt;&lt;strong&gt;ADK&lt;/strong&gt;&lt;/strong&gt;你可以直接定义&lt;strong&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/strong&gt;个智能体&lt;/strong&gt;，主体负责接收用户问题，并根据问题类型委派给相应的子智能体；订单查询智能体，专门处理与订单相关的问题，如订单状态、物流信息等。&lt;/p&gt; 
&lt;p&gt;商品推荐智能体，根据用户的历史购买记录和浏览行为，推荐相关商品；售后服务智能体，处理退换货、退款等售后服务问题。&lt;/p&gt; 
&lt;p&gt;上面这些只是为大家简单讲解，其实实际用 ADK 开发更简单高效，因为它还集成了搜索、地图、代码执行、服务等很多实用工具，也支持 LangChain、CrewAI、MCP 等第三方服务。&lt;/p&gt; 
&lt;p&gt;更详细的示例开源地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fadk-samples&quot; target=&quot;_blank&quot;&gt;https://github.com/google/adk-samples&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;谷歌 ADK 详细文档：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgoogle.github.io%2Fadk-docs%2Fget-started%2Ftutorial%2F%23step-1-your-first-agent-basic-weather-lookup&quot; target=&quot;_blank&quot;&gt;https://google.github.io/adk-docs/get-started/tutorial/#step-1-your-first-agent-basic-weather-lookup&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;相关阅读：&lt;a href=&quot;https://www.oschina.net/news/343677/a2a-a-new-era-of-agent-interoperability&quot; target=&quot;_blank&quot;&gt;谷歌推出 A2A 开放协议，实现智能体间的自由 「对话」&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344460/google-agent-development-kit</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344460/google-agent-development-kit</guid>
            <pubDate>Sun, 13 Apr 2025 07:39:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>广州出现 AI 洗头，最低 10 元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;广州天河区体育西路出现了一家 AI 洗头店，工作人员只需要简单协助，顾客便可享受全自动机器洗头服务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据介绍，顾客躺上按摩床后，可选择速洗、普通、加时、淋水或养护模式，力度有低、中、高三档，还能根据发长选择长发或短发模式。机器通过红外感应定位头部，配合多角度出水口，约 13 分钟即可完成洗护全流程。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;374&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1d88c1085b5f967123b43baf557d3569ce4.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;开始洗头前，店员会先用仪器检测顾客的头皮健康情况，「我们会根据顾客的发质情况，在洗头时选用干性或油性模式，所对应的洗发水也不同。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;随后机器启动，每次服务前都会进行消毒，工作人员为顾客准备一次性毛巾、耳塞，并调节水温水压。根据顾客头皮状况选择干性或油性，并选择洗头模式后，系统便自动运作。可选模式包括速洗、普通、加时、淋水及养护，力度分为低、中、高三档，并可根据发长选择长发、短发模式。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;洗头过程中，机器通过多个出水口和红外线灯，在运作的过程中不断调节方位，以达到全方位冲洒、清洁头皮，全程包含两次洗发、一次护发，一共七次冲洗。该设备还配备按摩床功能，结合头发清洁与按摩体验，在普通模式下整个洗头流程约 13 分钟。洗后，店内设有负离子自动吹风机，顾客也可选择手持吹风机。至于价格，记者了解到，AI 洗头价格刚推出时，优惠价为 9.9 元，目前在平台购买价格则约为 19 元一次。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该店内共有 5 部洗头机器，配有 3 名店员。据店员介绍，该门店自去年 12 月起营业，高峰时期每日接待洗头人数超百人，目前平均每天接待 30 至 40 人。「AI 洗头最大解决了人手不足的问题，只需要 3 个店员，店内所有机器同时操作也没有问题。」记者在某点评网站搜索「AI 洗头」，发现目前在天河区、海珠区、白云区、黄埔区、花都区等都有相关业务的店铺。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于这种新颖的洗头方式，不少街坊都抱着好奇心前来体验。街坊李小姐表示，虽然第一次用机器洗头略感不适应，但整体清洗效果干净、过程新奇，值得尝试。对此，有网友表示，AI 洗头的确是新奇体验，水温调控智能，但「对症下痒」的能力有限，技术炫酷，适合头发的日常维护。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344456</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344456</guid>
            <pubDate>Sun, 13 Apr 2025 07:26:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>图解「模型上下文协议（MCP）」：从与传统 API 的比较入手</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;编者按：&lt;/strong&gt; AI 应用如何像智能终端连接配件一样，无缝集成多样化的工具和数据源？答案或许就藏在近期热议的「模型上下文协议（MCP）」中。&lt;/p&gt; 
 &lt;p&gt;我们今天带来的这篇文章，作者的核心观点是：MCP 通过标准化通信协议，让 AI 应用与外部工具、数据的交互如同 USB-C 接口一般高效且灵活，彻底改变传统 API 架构的僵化限制。&lt;/p&gt; 
 &lt;p&gt;文章详细介绍了 MCP 的核心架构，包括 Host（提供 AI 交互环境的应用程序）、Client（实现与 MCP Servers 通信）和 Server（提供特定能力和数据访问）三大组件。重点解释了 MCP 的 Capability Exchange（能力交换）机制如何使系统更加动态灵活，允许服务器随时更新其功能而无需客户端重写代码。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;作者 | Avi Chawla&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;编译 | 岳扬&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;最近，关于模型上下文协议（MCP）的讨论非常热烈。你一定听说过它。&lt;/p&gt; 
&lt;p&gt;今天，让我们一起来了解一下模型上下文协议（MCP）。&lt;/p&gt; 
&lt;p&gt;直观地说，&lt;strong&gt;MCP 就像 AI 应用的 USB-C 接口。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;正如 USB-C 为设备连接各种配件提供了标准化方案，MCP 也将 AI 应用连接到不同数据源和工具的方式标准化了。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f1dacc1d1bd01432a385231cb0e7b99d096.gif&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;接下来从技术角度进行深入探讨。&lt;/p&gt; 
&lt;p&gt;MCP 的核心遵循客户端-服务器（client-server）架构，Host 应用程序可以连接到多个 Server。&lt;/p&gt; 
&lt;p&gt;它包含三个主要组件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Host&lt;/li&gt; 
 &lt;li&gt;Client&lt;/li&gt; 
 &lt;li&gt;Server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在我们进行深入探讨之前，先来了解一下整体架构👇&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1dba78f10c6dc947f9af92ad90d795aa319.gif&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Host&lt;/strong&gt; 代表任何提供 AI 交互环境、访问外部工具和数据源并运行 MCP Client 的 AI 应用（如 Claude 桌面版、Cursor）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MCP Client&lt;/strong&gt; 在 Host 内运行，实现与 MCP Servers 的通信。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7296f5e1991309f3c2d85a6ba89900b2982.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;MCP Server&lt;/strong&gt; 对外开放特定能力，并提供对数据源的访问权限，包括：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-bcd2b143d2cdc131493f62cb33af3d96f0b.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Tools&lt;/strong&gt;：使大语言模型能够通过你的 Server 执行操作。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Resources&lt;/strong&gt;：将 Server 上的数据和内容开放给大语言模型。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompts&lt;/strong&gt;：创建可复用的提示词模板和工作流程。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;要构建属于你自己的 MCP 系统，理解客户端-服务器通信机制是必不可少的。&lt;/p&gt; 
&lt;p&gt;现在我们来解析客户端与服务器的通信流程。&lt;/p&gt; 
&lt;p&gt;本文将对该过程进行逐步拆解，请看下方这张示意图...&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-65e26893f801f2a4c07df4643ec7da221d5.gif&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;首先进行 Capability Exchange（译者注：Capability Exchange（能力交换）是一种动态服务发现与适配机制，是 MCP 连接建立的必经步骤，类似于&quot;握手协议&quot;。），流程如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;客户端发送初始请求，获取服务器能力信息&lt;/li&gt; 
 &lt;li&gt;服务器返回其能力信息详情&lt;/li&gt; 
 &lt;li&gt;例如当天气 API 服务器被调用时，它可以返回可用的&quot;tools&quot;、&quot;prompts templates&quot;及其他资源供客户端使用&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;交换完成后，客户端确认连接成功，然后继续交换消息。&lt;/p&gt; 
&lt;p&gt;这种机制非常强大，原因如下：&lt;/p&gt; 
&lt;p&gt;在传统的 API 架构中：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果你的 API 最初需要两个参数（例如，天气服务的 location 参数（译者注：地理位置）和 date 参数（译者注：日期）），用户需严格按此参数结构构建应用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-12bbe7a8af360add8d12d9000bf4ada58ce.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;之后，如果你决定为该 API 添加第三个必选参数（例如，unit 参数（译者注：温度单位）），将 API &quot;契约&quot;进行变更。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b0f2ec8cc0d906d5fca45b05bc10cddeab6.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;这意味着该 API 的所有用户都必须更新代码，增加对新参数的支持，如果未及时更新，他们的请求可能会失败、报错或提供不完整的结果。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-85adaca34cbe36e86c50d7d54dc1fe1e9a3.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;MCP 的设计解决了这个问题，具体方法如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP 引入了一种动态、灵活的方法，与传统 API 形成鲜明对比。&lt;/li&gt; 
 &lt;li&gt;当 Client（例如 Claude Desktop 这类 AI 应用）连接 MCP Server（例如天气服务）时，会发送初始请求，以便了解 Server 的能力。&lt;/li&gt; 
 &lt;li&gt;Server 的响应包含可用的 tools、resources、prompts 以及相关参数的详细信息。例如，若天气 API 最初仅支持 location 和 date 参数，服务器会通过能力交换告知这些信息。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;当新增 unit 参数时，MCP Server 可在下次进行能力交换时动态更新能力描述。Client 无需硬编码或预定义参数，只需查询 Server 的最新能力并自动适配。&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;这样，Client 就能使用更新后的新功能（例如在其请求中包含 unit 参数），实时调整行为，而无需重写或重新部署代码。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;希望本文能阐明 MCP 的作用。&lt;/p&gt; 
&lt;p&gt;后续我们将探索如何创建自定义的 MCP servers 并围绕它们构建实践演示，敬请期待！&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Hope you have enjoyed and learned new things from this blog!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本期互动内容 🍻&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;❓&lt;strong&gt;你认为标准化的 MCP 会加速 AI 创新还是限制创新？为什么？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.dailydoseofds.com%2Fp%2Fvisual-guide-to-model-context-protocol&quot; target=&quot;_blank&quot;&gt;https://blog.dailydoseofds.com/p/visual-guide-to-model-context-protocol&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/IDP/blog/18005889</link>
            <guid isPermaLink="false">https://my.oschina.net/IDP/blog/18005889</guid>
            <pubDate>Sun, 13 Apr 2025 07:18:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>法庭惊现 AI 虚拟发言人，74 岁创业者引发法官愤怒</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;近日，在纽约州&lt;span&gt;最高&lt;/span&gt;法院，一位 74 岁的创业者杰罗姆・德瓦尔（Jerome Dewald）因其在法庭上播放的 AI 生成视频而引发了法官的强烈不满。德瓦尔因与保险公司大都会人寿 (MassMutual Metro) 之间的劳动争议而出庭，他希望通过一个虚拟的 AI 头像来代表自己发言。然而，这一尝试却没有得到法官的认可，反而激怒了法官。&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;在法庭上，德瓦尔播放了一段由 AI 生成的男性头像视频。视频中的虚拟发言人衣着整齐，看起来比德瓦尔年轻三十岁，开口便说：「尊敬的法庭，我今天以谦卑的身份来到这里。」 但此时，法官萨莉・曼扎内特 - 丹尼尔斯（Sallie Manzanet-Daniels）显然感到困惑，立刻询问:「这是什么?这是案件的律师吗?」 德瓦尔在旁解释道：「这是我生成的。」 得知是虚拟形象后，法官愤怒地回应道：「您没有提前告知我这一点，先生。」&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;257&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b517932aef760be58401fabbbfa60ef6c23.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;德瓦尔随后被法官严厉批评，原因是他曾声称因为 25 年前的喉癌导致他无法直接在法庭上发言，然而法官指出，他已经和法庭工作人员进行了超过 30 分钟的口头交流，这与他所述的情况相矛盾。法官愤慨地表示：「我不喜欢被误导，您不能利用法庭来推广您的商业计划。」&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;德瓦尔经营的初创公司名为 Pro Se Pro，旨在帮助普通人通过创建逼真的视频头像来代表自己进行诉讼。德瓦尔在采访中表示，他认为法庭对这种技术的反应出乎意料。他原计划使用名为 Tavus 的服务制作一个自己的 AI 头像，但由于时间不够，只能选择一个现成的 AI 模型。「这位大帅哥，大家叫他吉姆（Jim）。」 德瓦尔幽默地说道。&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;尽管德瓦尔认为使用 AI 的方式可能会影响案件的结果，特别是在公众对 AI 产生的 「幻觉」 持有负面看法的情况下，他依然希望能在法庭上找到一种新的表达方式。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344449</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344449</guid>
            <pubDate>Sun, 13 Apr 2025 07:11:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>字节跳动最新思考模型 Seed-Thinking-v1.5 技术报告发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;字节跳动 Seed 最新思考模型 Seed-Thinking-v1.5 技术报告发布，涵盖在数据体系、奖励模型、RL 算法、基础设施等维度的探索：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;通过数据层面的精细化处理提升推理能力，融合可验证数据和非可验证数据，并提出全新的评测基准集合；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;构建双轨奖励体系，通过可验证问题的智能逻辑验证，融合非可验证问题的两两对比优化，实现数学推理与创意生成等全场景任务的精准训练；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 SFT 阶段的精准数据构造，和 RL 阶段的关键算法创新，提高大语言模型的推理上限；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;优化了 HybridFlow 编程模型和流式推理系统，并支持张量/专家/序列三层并行架构。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/151241_fPgV_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Seed-Thinking-v1.5 是字节跳动 Seed 团队即将推出的智能推理模型。该模型在数学、编程、科学推理等专业领域及创意写作等通用任务中表现突出，同时，模型采用 MoE 架构，总参数 200B，激活参数为 20B，具备显著的推理成本优势。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/151039_m8wm_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前 Seed-Thinking-v1.5 技术报告已公开，4 月 17 日将通过火山引擎开放接口供用户体验。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;技术报告链接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FByteDance-Seed%2FSeed-Thinking-v1.5&quot; target=&quot;_blank&quot;&gt;https://github.com/ByteDance-Seed/Seed-Thinking-v1.5&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344448/seed-thinking-v1-5-technical-report</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344448/seed-thinking-v1-5-technical-report</guid>
            <pubDate>Sun, 13 Apr 2025 07:10:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>软件开发的四大悖论</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Infoworld 特约撰稿人&amp;nbsp;Nick Hodges &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoworld.com%2Farticle%2F3957278%2Ffour-paradoxes-of-software-development.html&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;了一篇名为「Four paradoxes of software development」的文章，阐述了他眼中的软件开发领域的四大悖论。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;全文内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;桥梁建设 vs 软件开发：四个令人困惑的悖论&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;土木工程师可以理直气壮地说，世界上没有两座完全相同的桥梁。然而，桥梁共享许多已知特性，其建筑材料也有明确参数。桥梁建设涉及大量已知的已知项，未知的未知项远比人们想象的少得多。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我并非土木工程师，对设计和建造桥梁的杰出人士充满敬意。但我想通过这种对比说明：&lt;strong&gt;编写优秀、可运行的软件极其困难&lt;/strong&gt;。软件开发团队承接的每个项目都是独一无二的。尽管项目之间存在相似性，但每个软件项目都有其独特的细微差别、需求，以及大量的未知未知项。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;或者说，软件开发充满了难以处理的悖论。以下是四个典型案例：&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;悖论一：无人知晓工期，但客户坚持要交付日期&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;坦率地说，这可能是软件开发组织面临的最大挑战。我们根本无法确定任何项目需要多长时间。当然，我们可以估算，但结果几乎总是大错特错——有时严重高估，但更多时候是严重低估。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对客户而言，这既神秘又痛苦。由于不理解悖论的第一部分，他们不明白为何无法确定新软件的交付时间。当软件未能如期交付时，挫败感自然产生。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我们尝试使用 story points、planning poker 和其他敏捷方法来预测进度，但始终无法摆脱霍夫施塔特定律（Hofstadter’s Law）的魔咒：即使考虑了霍夫施塔特定律，事情总会比你预期的更久。&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;悖论二：向延期项目加派人手，只会让项目更晚&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这条被称为布鲁克斯定律（Brooks’s Law）的规则，对旁观者而言可能是最诡异的悖论。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通常，如果你发现无法按时完成牙膏管灌装任务，可以通过增加人手来赶上截止日期。如果你想在一年内建造双倍数量的房屋，通常只需双倍投入劳动力和材料即可实现（误差很小）。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;然而，正如弗雷德·布鲁克斯（Fred Brooks）在其著作《人月神话》中所揭示的：「向延期的软件项目增加人力，只会让它更晚。」 这是一个悖论，却是软件开发领域最接近定律的真理。布鲁克斯指出，新成员需要时间理解复杂系统的上下文，并增加沟通成本，因此无法立即贡献生产力——这反而会延长项目周期并推高成本。&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;悖论三：编码能力越强，编码量反而越少&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;成为一名经验丰富的软件开发者需要多年积累。学习正确的编码方式、设计方法，以及编写整洁可维护代码的规则与技巧，绝非一日之功。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但讽刺的是，随着经验增长，你往往会被推向领导岗位，实际编码量反而减少。你不再写代码，而是参加设计会议、审查他人代码、管理团队。有时，你甚至因晋升而彻底告别编码。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这并不意味着资深开发者的贡献减少。通过规划项目、指导新人、维护编码标准，并确保团队产出优质代码，资深开发者对团队和公司的成功至关重要。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但你的确会写更少的代码。&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;悖论四：开发工具日益强大，但开发效率并未提升&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对比当今使用 React、Astro、Next.js 等强大工具构建的 Web 应用，与 30 年前通过通用网关接口（CGI）处理数据和 HTML 的网站，你会发现我们已经比早期进步了数光年。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;然而，尽管工具日益先进、处理器速度飙升，软件开发效率似乎从未真正提高。工作量不仅总是超出时间预算，甚至超出了每个 CPU 周期的负荷。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我们的网站更美观了，但开发效率真的提升了吗？网站运行更快、数据处理更高效了吗？诚然，新框架和库抽象了许多复杂性（还有人想写 jQuery 代码吗？），但它们也带来了构建流程冗长、配置复杂、依赖膨胀等新问题。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;与桥梁的终极差异：软件永无「完工」之日&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这些悖论的存在并不意味着绝望。我指出它们，是为了让我们意识到其存在，学会接受并应对，从而避开潜在的陷阱。我们无法消除软件开发的陌生感和混乱，但可以预见并驾驭它们。我们的使命是：&lt;strong&gt;在悖论中交付&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;最后一个悖论或许是：&lt;strong&gt;软件开发永远没有真正完成之日&lt;/strong&gt;。总有新功能可以添加。而桥梁工程至少有一个明确的终点——当桥梁建成并按设计运行时，工作便宣告结束。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344445/four-paradoxes-of-software-development</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344445/four-paradoxes-of-software-development</guid>
            <pubDate>Sun, 13 Apr 2025 07:05:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>AI 智能体 Genspark 上线 9 天，收入近千万美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;AI 智能体 Genspark 创始人景鲲&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fericjing_ai%2Fstatus%2F1910169517155823952&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;，Genspark 在上线 9 天内，&lt;strong&gt;获得了 1000 万美元年度经常性收入&lt;/strong&gt;（Annual Recurring Revenue，包括来自订阅、合同和任何其他固定收入流的收入）。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0414/145924_Mvpu_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;景鲲还透露，Genspark 的推出仅是团队进步的 10%，在两周后还将公布一项令人兴奋的功能。&lt;/p&gt; 
&lt;p&gt;4 月 2 日晚，MainFunc 正式公布了其超级通用智能体「Genspark」，与此前大火的 Manus AI 类似，能够自主思考、规划并调用工具来帮助人们完成一些日常任务。Genspark 主打实时交互、幻觉和错误率更少，以及允许用户中途改进调整。而 Genspark 最大亮点是其「免费使用」和「无需邀请码」。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0403/182557_QE5z_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;值得一提的是，打造 Genspark 的 MainFunc 于 2024 年 6 月首曝，该公司由前百度集团副总裁、小度科技 CEO 景鲲携手前小度 CTO 朱凯华联合创立，总部位于加州和新加坡。&lt;/p&gt; 
&lt;p&gt;景鲲在百度曾任大搜索总产品架构师，据悉其技术职级已达到百度「天花板」T11；同时，曾是语音交互方向技术委员会主席的朱凯华，在百度职级也是 T11。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;相关阅读：&lt;a href=&quot;https://www.oschina.net/news/342709/mainfunc-ai-genspark-super-agent&quot; target=&quot;news&quot;&gt;百度前高管的 AI 创企发布通用智能体：Genspark Super Agent&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344443</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344443</guid>
            <pubDate>Sun, 13 Apr 2025 07:00:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>蚂蚁集团副总裁、前基础大模型负责人徐鹏离职</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;蚂蚁集团副总裁、前基础大模型负责人徐鹏已离职。徐鹏一直从事人工智能领域技术研究，曾在谷歌工作 11 年，负责和领导了谷歌翻译的核心技术研发，并参与了谷歌显示广告系统的算法研发。&lt;/p&gt; 
&lt;p&gt;此前蚂蚁成立 AI 创新研发与应用部门 NextEvo，由徐鹏担任负责人，承担了蚂蚁 AI 的所有核心技术研发，包括蚂蚁百灵大模型的所有研发工作。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.thepaper.cn%2FnewsDetail_forward_30623047&quot; target=&quot;_blank&quot;&gt;据媒体报道&lt;/a&gt;，NextEvo 部门几乎包揽了蚂蚁 AI 所有硬核研发任务——从底层技术到蚂蚁百灵大模型的全栈自研。此后，徐鹏也正式以「百灵一号位」身份对外亮相，成了蚂蚁 AI 牌桌上的门面人物。&lt;/p&gt; 
&lt;p&gt;就在上月，蚂蚁集团发布的最新研究论文，显示其推出了两款不同规模的 MoE 大语言模型——百灵轻量版（Ling-Lite）与百灵增强版（Ling-Plus），前者参数规模为 168 亿（激活参数 27.5 亿），Plus 基座模型参数规模高达 2900 亿（激活参数 288 亿）。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;实验表明，其 3000 亿参数的 MoE 大模型可在使用国产 GPU 的低性能设备上完成高效训练，性能与完全使用英伟达芯片、同规模的稠密模型及 MoE 模型相当。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;近期，蚂蚁集团也在加码&lt;a href=&quot;https://www.oschina.net/news/334747&quot;&gt;具身智能&lt;/a&gt;、AI 眼镜等新方向——显然，大模型之外，蚂蚁在寻找更多破局点。在当前这个节点上，它需要向市场甩出更多筹码，讲出比「百灵」更具想象力的 AI 新故事。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af588e63ca4b7228c8a7f06a89489f1b1eb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;相关阅读：&lt;a href=&quot;https://www.oschina.net/news/340658&quot; target=&quot;_blank&quot;&gt;蚂蚁集团采用国产 AI 芯片训练大模型，将计算成本降低约 20%&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344442</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344442</guid>
            <pubDate>Sun, 13 Apr 2025 06:55:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>