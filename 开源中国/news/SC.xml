<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 17 May 2025 14:00:03 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>又小又快截图软件：ScreenCapture（2.2.25）支持截长图</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img alt="" height="468" src="https://oscimg.oschina.net/oscnet//022b124220ead36d2a012eb7f97857ce.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;ScreenCapture&amp;nbsp;截图工具&amp;nbsp;&lt;strong&gt;体积小（8M 左右）&lt;/strong&gt;、仅一个可执行文件，无需安装，不依赖任何动态链接库。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;运行速度快、内存占用低、CPU 使用率低。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;开源地址：&lt;a href="https://gitee.com/horsejs_admin/ScreenCapture"&gt;https://gitee.com/horsejs_admin/ScreenCapture&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;近 9 个版本的更新内容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;增强：改进绘制标号元素的用户体验： 
  &lt;ul&gt; 
   &lt;li&gt;鼠标按下即绘制一个默认大小的标号；&lt;/li&gt; 
   &lt;li&gt;设置独立的移动标号元素的 Dragger（标号正中心）；&lt;/li&gt; 
   &lt;li&gt;设置独立的改变大小的 Dragger；&lt;/li&gt; 
   &lt;li&gt;设置独立的改变箭头位置的 Dragger；&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;增强：允许通过命令行控制工具栏各个按钮的位置、是否显示等： 
  &lt;ul&gt; 
   &lt;li&gt;指令：--tool:"rect,ellipse,arrow,number,line,text,mosaic,eraser,|,undo,redo,|,pin,clipboard,save,close"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;增强：截长图/滚动截图指令：--cap:long&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="592" src="https://oscimg.oschina.net/oscnet/up-48430184c33cb5918d43692c1d91214b88b.png" width="1016" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复：跨屏截图在特殊情况下无法覆盖全屏区域的问题。&lt;/li&gt; 
 &lt;li&gt;修复：工具栏按钮显示 tool tip 时，有时会导致 Hover 样式失效。&lt;/li&gt; 
 &lt;li&gt;修复：&lt;span style="background-color:#ffffff; color:#1f2328"&gt;--tools 指令传入的按钮与实际所能控制的按钮不符时，导致按钮出现错乱的问题。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;修复：&lt;/span&gt;绘制标号①，再 undo 此标号，再绘制新的标号，标号数字应该还是①，不应该是②。&lt;/li&gt; 
 &lt;li&gt;修复：undo 元素之后，再绘制新元素时应该先删除 undo 的元素。&lt;/li&gt; 
 &lt;li&gt;修复：主工具条位于截图区域内部或截图区域顶部时，显示子工具条，子工具条位置不准确的问题。&lt;/li&gt; 
 &lt;li&gt;修复：Ctrl+H 与 Ctrl+R 快捷键的行为搞反了的问题&lt;/li&gt; 
 &lt;li&gt;修复：工具条位置不准的问题（工具条不会自动寻找剩余空间定位）。&lt;/li&gt; 
 &lt;li&gt;修复：在 Win11 下无法通过命令行钉住剪切板内的图像的问题&lt;/li&gt; 
 &lt;li&gt;优化：保存文件，点击文件保存对话框的取消按钮，应用不应退出。&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;优化：绘制元素时优先使用红色。绘制箭头、标号元素时默认使用填充效果。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350353/screen-capture-2-2-25</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350353/screen-capture-2-2-25</guid>
      <pubDate>Sun, 11 May 2025 02:28:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>微软裁员风暴：软件工程岗成为 AI 冲击的重灾区</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;《财富》杂志近日发文对微软近日裁员进行了针对性报道，社评认为微软近日的大规模裁员计划引发科技行业对人工智能时代就业结构变革的广泛关注。&lt;/p&gt; 
&lt;p&gt;据华盛顿州官方文件披露，&lt;strong&gt;在微软总部所在地的裁员中，软件工程岗位成为受冲击最严重的领域，占该州约 2000 名被裁员工的 40% 以上。微软本周二确认，其全球裁员规模约 6000 人，华盛顿州裁员人数占总数的三分之一&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-28c5f1e9e5bbf3a6ed55da0a3a7e813d2ea.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此次裁员呈现显著的岗位结构性特征：除软件工程师外，软件项目管理岗位亦面临较大调整，华盛顿州被裁的产品管理和技术项目管理岗位合计约 600 人，占该州总裁员数的 30% 左右。&lt;/p&gt; 
&lt;p&gt;知情人士透露，部分参与人工智能项目的管理人员与员工也在裁员范围内，而客户服务类岗位（如销售和市场营销）受影响相对较小，微软对此未作公开置评。&lt;/p&gt; 
&lt;p&gt;行业分析指出，微软的裁员举措与科技企业在人工智能领域的战略转型直接相关。随着微软及其竞争对手持续加码人工智能投资，企业正通过严格审视运营成本、调整预算结构以优化资源配置。&lt;/p&gt; 
&lt;p&gt;微软高管近期承诺，在巨额数据中心建设投资背景下，将严控总体支出。值得关注的是，人工智能驱动的开发工具已展现出代码编写与分析能力，正逐步替代传统工程师手动完成的部分开发任务。微软首席执行官萨蒂亚·纳德拉今年 4 月透露，在公司部分项目中，已有 30% 的代码由 AI 生成。&lt;/p&gt; 
&lt;p&gt;这一现象并非微软独有，多家科技企业正同步推进人力结构重构以适应人工智能转型。例如，Salesforce 今年初宣布裁员逾 1000 人，同时计划持续招聘人工智能相关销售岗位，并明确到 2025 年将减少工程师招聘需求，因其认为人工智能已能替代部分岗位职能；Workday 今年 2 月裁员时，首席执行官卡尔·埃申巴赫亦强调将在人工智能等战略重点领域加大招聘力度。&lt;/p&gt; 
&lt;p&gt;对于裁员目的，微软方面表示主要是精简管理层级，但目前精简成效尚未明确。文件显示，华盛顿州被裁员工中约 17% 为管理职位，这与微软 2023 年底向美国平等就业机会委员会提交的人力资源报告中整体管理人员占比基本一致。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350287</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350287</guid>
      <pubDate>Sat, 10 May 2025 11:20:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>加速项目管理效率，Gitee PPM 驱动软件工厂的智能化转型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;作者：Gitee DevSecOps 产品经理，李颖萍&amp;nbsp;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在高速发展的软件开发时代，企业如何高效管理多个项目、协调团队合作、优化资源配置，已成为推动技术进步的关键。尤其是在多任务、多项目并行的复杂环境下，&lt;strong&gt;Gitee 项目组合管理（PPM）作为一款智能化工具，正成为软件工厂的重要推动力量&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;软件工厂：标准化与自动化的未来&lt;/h2&gt; 
&lt;p&gt;传统开发模式中，企业依赖多个独立工具支撑不同的开发任务和项目。随着软件工厂理念的提出，开发模式发生根本性转变：软件工厂强调的是一个完整的生产体系，由「标准化流程 + 自动化执行 + 可复用构件」构成的生产线。&lt;/p&gt; 
&lt;p&gt;在多项目并行背景下，如何通过高效的项目组合管理优化资源分配、提升执行效率，已成为企业面临的重要挑战。Gitee PPM 正是在此背景下应运而生，&lt;strong&gt;以全新的项目管理方式，推动软件工厂智能化转型&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;Gitee PPM：项目管理的智能调度与透明协作&lt;/h2&gt; 
&lt;p&gt;Gitee PPM 通过智能调度与跨团队协作机制，为软件工厂提供有力支撑。无论资源调度还是多项目并行推进，Gitee PPM 都能高效保障项目执行：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;实时任务进度跟踪：Gitee PPM 提供实时任务进度跟踪功能。通过清晰的进度条和状态标识，团队可随时掌握当前项目状态，管理者也能及时识别需要重点关注和调整的环节。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/161929_chRv_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;精准资源调配：用户可清晰查看每个项目的资源使用情况。系统根据需求智能调度资源，避免浪费与冲突，提升整体研发效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/161945_oCBD_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;风险预警与问题追踪：借助任务进度和风险管理模块，Gitee PPM 能及时识别潜在风险并发出预警，帮助项目经理在问题发生前做出调整，确保按时交付。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/162000_wLN0_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;全生命周期管理：从项目立项到交付，Gitee PPM 贯穿始终&lt;/h2&gt; 
&lt;p&gt;Gitee PPM 的亮点之一是全生命周期管理能力。从立项、排期、执行、监控，到最终交付，Gitee PPM 涵盖项目管理的每一环节，确保每个项目都能够高效且有序地推进。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;项目立项与资源规划：提供标准化立项流程，并通过资源规划功能助力前期准备。人员配置、时间安排、预算分配均可系统化管理。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;动态调整与进度追踪：在项目推进过程中，Gitee PPM 提供灵活的进度追踪与调整功能，通过直观的进度条与任务分配，管理者可以轻松地进行任务调度和进度优化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;协作与透明化：Gitee PPM 不仅支持项目经理和团队成员之间的沟通，还通过任务审批和资源访问权限的透明化管理，确保每个环节都能得到准确、及时的反馈。团队成员可以实时查看项目状态，随时参与决策，提升工作效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/162015_kOQP_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;未来趋势：智能化与自动化助力软件工厂的跨越式发展&lt;/h2&gt; 
&lt;p&gt;随着人工智能和自动化技术的迅速发展，未来的 PPM 更加注重智能与自动化融合。Gitee PPM 将持续深化智能分析与预测能力，提前识别风险并提供决策支持。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;无缝集成 DevSecOps 流程：Gitee PPM 将与 DevSecOps 深度融合，支持 CI/CD 等敏捷方法，提升软件交付速度与质量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全生命周期智能管理：随着项目规模与复杂性增长，Gitee PPM 将扩展管理范围，覆盖研发、测试、交付和运维等各环节的智能化管理。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Gitee PPM，赋能软件工厂的未来&lt;/h2&gt; 
&lt;p&gt;在软件工厂的智能化转型过程中，Gitee PPM 无疑是其中最为关键的一环。通过智能化的项目管理，精准的资源调配，全面的风险控制以及高效的跨部门协作，Gitee PPM 正在为软件开发行业带来革命性的变化。&lt;/p&gt; 
&lt;p&gt;未来，Gitee PPM 将继续不断创新，推动软件工厂向更高效、更智能、更安全的方向发展，成为企业实现研发目标、提升交付质量、加速业务增长的核心竞争力。&lt;/p&gt; 
&lt;h2&gt;Gitee DevSecOps 的现代化研发生态&lt;/h2&gt; 
&lt;p&gt;Gitee DevSecOps 是一站式国产化研发与交付平台，集成了代码托管（Code）、项目协作（Team）、持续集成（CI）、持续部署（CD）、代码安全（Scan）、数据洞察（Insight）等多项能力，致力于打造具备全生命周期管控能力的现代软件工厂。&lt;/p&gt; 
&lt;p&gt;&lt;img height="489" src="https://static.oschina.net/uploads/space/2025/0516/162034_3TT9_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitee.cn%2Ffactory" target="_blank"&gt;https://gitee.cn/factory&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;平台设计充分考虑关键领域行业对安全性、可控性、合规性的极高要求，具备以下核心特征：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;国产化适配与私有化部署能力：全面兼容国产操作系统与基础设施，支持灵活部署于内网环境，保障数据主权；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全流程 DevSecOps 管控体系：代码从提交、审核、构建、扫描、部署到发布全流程可视、可追溯、安全可控；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;模块化产品结构：各能力模块（如 Code、Team、Repo、Pipe、Scan、Insight 等）可灵活组合、渐进集成，适配多样化团队与流程要求；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;深度可观测与度量体系：内置研发效能度量与数据洞察引擎，支撑管理者宏观掌控项目态势与交付健康度。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="599" src="https://static.oschina.net/uploads/space/2025/0516/162046_MD15_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在多个国家级重大项目与关键领域单位落地实践中，Gitee DevSecOps 已成为构建「自主、可控、高效、安全」的软件工程体系的重要基石。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-825957ffbed1798ea7b6a37079fd6c99d18.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350255</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350255</guid>
      <pubDate>Sat, 10 May 2025 08:21:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>前端构建神器 Parcel 大「瘦身」：依赖项削减 25%，安装体积砍半！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;在前端工具链百花齐放的今天，知名构建工具 Parcel 带来了令人振奋的 2.15.0 版本更新。最让开发者兴奋的是：通过将核心功能改用 Rust 重写，新版本在保持全部功能的同时，node_modules 体积直接砍掉近一半，依赖包数量也减少了四分之一。这对于那些被庞大 node_modules 文件夹困扰的开发者来说无疑是一剂强心针。&lt;/p&gt; 
&lt;h3&gt;拥抱「重型武器」，构建再也不担心翻车&lt;/h3&gt; 
&lt;p&gt;本次更新最大的亮点是 HTML 处理链路的彻底重构。Parcel 团队放弃了此前使用的 PostHTML 方案。PostHTML 是什么？简单来说，它是一个用 JavaScript 编写的 HTML 处理工具，通过插件机制来完成 HTML 的解析和转换。虽然 PostHTML 生态丰富，有着大量现成的插件可用，但其解析能力始终无法企及浏览器级别。&lt;/p&gt; 
&lt;p&gt;为了彻底解决这个问题，Parcel 团队转向了「重型武器」——直接搬来了 Firefox 浏览器和 Servo 渲染引擎中的核心组件，用 Rust 语言重新打造了 HTML 处理模块。这就好比之前用的是「民用工具」，现在换成了「工业级设备」，解析准确性得到了质的飞跃。&lt;/p&gt; 
&lt;p&gt;举个例子：HTML 规范中关于解析的部分竟然有 100 多页之厚，里面包含了 20 多年来 Web 发展过程中积累的各种特殊情况。普通的解析器很难完美处理这些边界情况，但浏览器级的解析引擎在这方面已经过了无数实战检验。新版本采用 Servo 的 html5ever 解析器，意味着你的 HTML 文件将获得与 Chrome、Firefox 等主流浏览器完全一致的解析结果。&lt;/p&gt; 
&lt;h3&gt;更保守但更聪明的压缩策略&lt;/h3&gt; 
&lt;p&gt;在代码压缩方面，新版本的做法很有意思。与其他动辄追求极致压缩率的工具不同，Parcel 选择了更明智的「保守压缩」策略。比如说，过去很多工具都会激进地删除 HTML 中的空白字符，但实际上这可能会破坏页面样式，因为 CSS 中的&lt;code&gt;white-space: pre&lt;/code&gt;属性就需要保留这些空白。新版本在这类情况下会谨慎处理，宁可多留一些空白，也不破坏页面效果。&lt;/p&gt; 
&lt;p&gt;不过，在安全的优化场景下，新版本反而比之前更加智能。它能智能判断何时可以安全地移除属性引号、删除布尔属性的值，甚至利用 HTML 的容错机制移除一些可选的闭合标签。这些优化既保证了页面完整性，又能带来一定的体积收益。&lt;/p&gt; 
&lt;h3&gt;SVG 处理也来了次大换血&lt;/h3&gt; 
&lt;p&gt;SVG 处理模块同样迎来重大升级。新版本引入了名为 OXVG 的 Rust 工具替代了原有的 SVGO。测试显示，这一替换带来了数倍的性能提升。同时，得益于与新 HTML 解析器的无缝配合，现在处理网页中的内嵌 SVG 图标也变得更加高效可靠。&lt;/p&gt; 
&lt;p&gt;对于经常和 React 打交道的开发者来说，还有一个好消息：新版本重写了 SVG 转 JSX 的功能，直接将 SVG 转换为 JavaScript 语法树，省去了中间环节，处理效率得到显著提升。&lt;/p&gt; 
&lt;h3&gt;新版本值得升级吗？&lt;/h3&gt; 
&lt;p&gt;答案是肯定的。如果你正在使用 Parcel，升级到 2.15.0 版本将带来立竿见影的收益：更小的项目体积、更快的安装速度、更可靠的构建结果。而且，为了照顾现有项目，新版本保留了对 PostHTML 插件和 SVGO 配置的兼容支持，升级过程几乎不会带来任何副作用。&lt;/p&gt; 
&lt;p&gt;在当前前端工具链百家争鸣的背景下，Parcel 用这次更新展示了一个颇具前瞻性的发展方向：用更可靠的系统级语言重写核心功能，同时保持与现有生态的友好共存。这种演进思路值得其他工具借鉴。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350233/parceljs-2-5-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350233/parceljs-2-5-0</guid>
      <pubDate>Sat, 10 May 2025 07:24:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>【最后今天】LFOSSA 技能焕新季 85 折限时福利活动即将结束！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="微信图片_85 折.png" src="https://oscimg.oschina.net/oscnet//23abacdd7a61a2ef402c028b04dfb5a9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;Linux Foundation&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;开源软件&lt;/strong&gt;&lt;strong&gt;学园（LFOSSA） 于 5 月 7 日至 5 月 16 日，推出&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#ff0000"&gt;&lt;strong&gt;L&lt;/strong&gt;&lt;strong&gt;FOSSA 技能焕新季限时福利活动&lt;/strong&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff"&gt;，&lt;span style="color:#ff0000"&gt;&lt;strong&gt;全场 LF 官方认证考试及课程 &amp;nbsp;&lt;span style="color:#00b050"&gt;85 折&amp;nbsp;&lt;/span&gt;起&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;，&lt;/strong&gt;&lt;/span&gt;&lt;span style="background-color:#ffff00; color:#ff0000"&gt;&lt;strong&gt;活动仅剩最后&amp;nbsp;&lt;span style="color:#00b050"&gt;今&lt;/span&gt;&amp;nbsp;天，机会不容错过！&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;快速提升你的开源技能，抢跑&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;新时代&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;技能焕新季 · LF 认证限时福利详情&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;活动时间&lt;/strong&gt;：&lt;span style="background-color:#ffffff; color:#ff0000"&gt;&lt;strong&gt;5 月 7 日 - 5 月 16 日&lt;span style="background-color:#ffff00"&gt;（活动仅剩最后&amp;nbsp;&lt;span style="color:#00b050"&gt;1&amp;nbsp;&lt;/span&gt;天！）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;strong&gt;适用产品：&lt;/strong&gt;&lt;strong&gt;LF&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;官方认证考试及课程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#033fce"&gt;&lt;strong&gt;面向个人专属福利：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;部分机构热门课程低至&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00b050"&gt;7&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#00b050"&gt;折&lt;/span&gt;&lt;/strong&gt;，&lt;span style="background-color:#ffffff; color:#ff0000"&gt;&lt;strong&gt;添加 LFOSSA 官方微信，限时领取&amp;nbsp;&lt;span style="color:#00b050"&gt;认证培训首节课程免费试听&amp;nbsp;&lt;/span&gt;资格&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#033fce"&gt;&lt;strong&gt;面向企业专属福利（阶梯折扣）：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;1. 采购 5-20 个认证：&lt;/strong&gt;享&amp;nbsp;&lt;/span&gt;&lt;span style="color:#00b050"&gt;&lt;strong&gt;85&lt;/strong&gt;&lt;/span&gt;&lt;span style="color:#00b050"&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;折&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;优惠&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;2. 采购 21-50 个认证：&lt;/strong&gt;享&amp;nbsp;&lt;/span&gt;&lt;span style="color:#00b050"&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;/span&gt;&lt;span style="color:#00b050"&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;折&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;优惠&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;3. 采购 50 个以上认证：&lt;/strong&gt;联系官方客服，获取定制专属方案&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="1747368565314179.png" height="1000" src="https://oscimg.oschina.net/oscnet//dcb6214ff743fa4e8bbe17fc11a9cee5.png" width="600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;有关&amp;nbsp;&lt;/strong&gt;&lt;span style="color:#ff0000"&gt;&lt;strong&gt;LFOSSA 技能焕新季限时福利活动&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;，可点击以下链接了解详情：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzk0OTIwNTQzNA%3D%3D%26mid%3D2247542784%26idx%3D1%26sn%3D236a3bfdcf36dec0bf41f462cc0c91d8%26scene%3D21%23wechat_redirect" target="_blank"&gt;&lt;span&gt;抢跑 AI 时代，焕新开源技能！LFOSSA 技能焕新季 85 折限时福利活动开启！&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzk0OTIwNTQzNA%3D%3D%26mid%3D2247542805%26idx%3D1%26sn%3D4af4c9ac39d950df1de31477624b659e%26scene%3D21%23wechat_redirect" target="_blank"&gt;【最后 2 天】LFOSSA 技能焕新季｜企业采购折扣限时福利活动即将截止，抓紧最后机会！&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style="margin-left:0px; margin-right:0px"&gt;&lt;span style="color:#033fce"&gt;&lt;strong&gt;联系我们&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;如需&amp;nbsp;&lt;span style="color:#ff0000"&gt;&lt;strong&gt;体验&lt;/strong&gt;&lt;strong&gt;认证培训课程免费试听首节课&lt;/strong&gt;&lt;/span&gt;&amp;nbsp;，或为&lt;span style="color:#ff0000"&gt;&lt;strong&gt;贵单位定制认证学习路径以及批量采购方案&lt;/strong&gt;&lt;/span&gt;，欢迎扫码添加官方客服，我们将为你提供一对一的采购咨询与支持服务。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style="background-color:rgba(255, 246, 122, 0.8); color:#ff0000"&gt;&lt;strong&gt;活动截止时间：2025 年 5 月 16 日（仅剩最后&amp;nbsp;&lt;span style="color:#00b050"&gt;1&amp;nbsp;&lt;/span&gt;天）&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;限时折扣，错过不再，快来锁定优惠名额！&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="1747368673326323.jpeg" height="260" src="https://oscimg.oschina.net/oscnet//86a0e91efbe8dabcc8f184b71cdb50ad.jpeg" width="260" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span style="color:#8f959e"&gt;扫码添加客服&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="1747368808706235.png" height="311" src="https://oscimg.oschina.net/oscnet//6a2c4a0154fe65c0ed86ca1afc9639a8.png" width="1600" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#033fce"&gt;&lt;strong&gt;查看更多 LFOSSA 培训、认证及套购产品，请访问以下链接：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="margin-left: 0px; margin-right: 0px;"&gt;&lt;span&gt;&lt;strong&gt;培训：&lt;/strong&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftraining.linuxfoundation.cn%2Fcourses" target="_blank"&gt;https://training.linuxfoundation.cn/courses&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="margin-left: 0px; margin-right: 0px;"&gt;&lt;span&gt;&lt;strong&gt;认证：&lt;/strong&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftraining.linuxfoundation.cn%2Fcertificates" target="_blank"&gt;https://training.linuxfoundation.cn/certificates&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="margin-left: 0px; margin-right: 0px;"&gt;&lt;span&gt;&lt;strong&gt;套购：&lt;/strong&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftraining.linuxfoundation.cn%2Fpack" target="_blank"&gt;https://training.linuxfoundation.cn/pack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;立即点击&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftraining.linuxfoundation.cn%2F" target="_blank"&gt;&lt;span style="color:#ff0000"&gt;&lt;strong&gt;这里&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;进入 LFOSSA 官网，选购官方认证考试及培训课程产品。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350219</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350219</guid>
      <pubDate>Sat, 10 May 2025 06:35:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软 VS &amp; VS Code 每月活跃开发者数量达到 5000 万</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微软今天&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fblog%2Fcelebrating-50-million-developers-the-journey-of-visual-studio-and-visual-studio-code" target="_blank"&gt;宣布了&lt;/a&gt;其 Visual Studio 产品系列的一个重要里程碑：Visual Studio 和 Visual Studio Code 现在每月为超过 5000 万活跃开发人员提供服务。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.cnbetacdn.com/article/2025/0516/0b34a4bdf1bdfd2.jpg" referrerpolicy="no-referrer"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-51990187483c55d75a61f86af17b234b4ba.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fc7a64f6ab1f22d5860bdce786e8832ef8b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Visual Studio 于 28 年前首次推出，至今仍是领先的集成开发环境 (IDE)，这主要得益于 Windows 生态系统的普及。多年来，它不断发展，现已支持跨平台开发、云原生应用程序、游戏开发、数据科学工作流等。它仍然是少数几个开箱即用地包含编译器、调试器、分析器、设计器和语言服务的 IDE 之一。&lt;/p&gt; 
&lt;p&gt;Visual Studio 的数据：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;Visual Studio Marketplace 上有 25000 多个扩展可用&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;超过 100000 名开发人员贡献反馈、问题报告和功能创意&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;社区论坛中数十万个问答&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;每个季度更新平均修复 800 多个社区报告的问题&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;十年前，随着 Windows 开始被 iOS 和 Android 等移动平台蚕食，微软在当时推出了 Visual Studio Code，这一举动令许多人感到意外。与其功能齐全的兄弟版本不同，Visual Studio Code 采用轻量级开源模式。它并非提供所有开箱即用的功能，而是允许开发人员通过庞大的扩展生态系统自定义其开发环境。&lt;/p&gt; 
&lt;p&gt;Visual Studio Code 的数据：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;VS Code 市场中有 100000 多个扩展可用&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;VS Code 代码库已获得 37000 多个 GitHub 星标&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;来自世界各地的数千名贡献者&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;微软开发者部门 CVP 兼产品主管、微软第一方工程系统总经理 Amanda Silver 就这一里程碑写道：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;在我们庆祝这一里程碑的同时，我们也正站在软件开发新时代的开端。人工智能编程革命正在从根本上改变我们编写代码的方式，而我们仅仅触及了未来可能性的皮毛。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;为了庆祝 5000 万里程碑，微软还发布了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvisualstudiowallpapers.com%2F" target="_blank"&gt;Visual Studio 和 Visual Studio Code 的周年纪念特别壁纸&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-eaef23439a2406d17ad3b98418b1733e23a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;下载地址如下，分别用于桌面、手机与智能手表：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvisualstudiowallpapers.com%2Fdesktop" target="_blank"&gt;https://visualstudiowallpapers.com/desktop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvisualstudiowallpapers.com%2Fphone" target="_blank"&gt;https://visualstudiowallpapers.com/phone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvisualstudiowallpapers.com%2Fwatch" target="_blank"&gt;https://visualstudiowallpapers.com/watch&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在下周即将举行的 Build 开发者大会上，微软预计将发布这两款工具的更新，旨在进一步提升开发者体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350214/50-million-developers-the-journey-of-visual-studio-and-vscode</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350214/50-million-developers-the-journey-of-visual-studio-and-vscode</guid>
      <pubDate>Sat, 10 May 2025 06:05:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软将于 8 月 11 日关闭 Bing Search API 服务</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微软&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fbing%2Fapis%2Fbing-web-search-api" target="_blank"&gt;宣布&lt;/a&gt;&lt;/u&gt;将于 2025 年 8 月 11 日正式关闭 Bing Search API 服务，届时所有使用 Bing Search API 的实例将完全停用，同时不再接受新用户注册。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/135843_cSSP_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;微软建议用户考虑使用 Azure AI Agents 中的「Grounding with Bing Search」作为替代方案，但该替代方案并非完美。&lt;/p&gt; 
&lt;p&gt;「Grounding with Bing Search」可以在生成回应时引用实时公开网络数据，但开发者和用户无法直接访问 Bing 搜索的原始数据内容，这意味着它无法完全替代 Bing Search API 的功能。&lt;/p&gt; 
&lt;p&gt;此次停用决定主要影响 Bing Search F1 及 S1 到 S9 资源的用户，以及 Custom Search F0 与 S1 到 S4 资源的用户。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;不过受影响的主要为 Bing Search APIs 的自助式或小型用户，像 DuckDuckGo 这样的大型客户，由于与微软签署了直接协议，仍可继续使用这些 API。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;值得注意的是，微软在 ChatGPT 于 2022 年首次亮相后，已将 Bing Search APIs 的价格提高了 10 倍，此次直接关闭 API 服务，可能是微软在 AI 时代对搜索服务战略调整的一部分。&lt;/p&gt; 
&lt;p&gt;此外有分析指出，微软停用 Bing API 可能会对正在审理中的 Google 搜索垄断案产生影响。&lt;/p&gt; 
&lt;p&gt;由于 Google Search APIs 价格昂贵且限制较多，许多开发者更倾向于使用 Bing API，微软的这一决定可能会迫使 Google 在搜索 API 资源方面做出更多让步。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350213/bing-web-search-api-retired</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350213/bing-web-search-api-retired</guid>
      <pubDate>Sat, 10 May 2025 05:59:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>腾讯混元图像（Hunyuan Image）2.0 正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;腾讯混元图像 2.0 模型（Hunyuan Image2.0）已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FNEg5Wop9EPw3Z6Lx5ik7Mg" target="_blank"&gt;正式发布&lt;/a&gt;。该模型主要有两大特点：&lt;strong&gt;实时生图、超写实画质。&lt;/strong&gt;目前已在腾讯混元官方网站上线（https://hunyuan.tencent.com/），并对外开放注册体验。&lt;/p&gt; 
&lt;p&gt;&lt;img height="607" src="https://static.oschina.net/uploads/space/2025/0516/134524_sRBm_2720166.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;官方数据显示，在图像生成领域专门测试模型复杂文本指令理解与生成能力的评估基准 &amp;nbsp;GenEval（Geneval Bench）上，腾讯混元图像 2.0 模型准确率超过 95%，远超其他同类模型。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/134745_rlGs_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;下面是混元图像（Hunyuan Image）2.0 模型生成的图片：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;人像摄影风格&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="512" src="https://static.oschina.net/uploads/space/2025/0516/134725_ADPH_2720166.png" width="854" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;动漫风格&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="532" src="https://static.oschina.net/uploads/space/2025/0516/134738_PKYz_2720166.png" width="888" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;真实人物风格&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/134836_gwyW_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;本次模型升级还带来了发布了实时绘画板功能，基于模型的实时生图能力，用户在绘制线稿或调整参数时，预览区同步生成上色效果，突破了传统「绘制-等待-修改」的线性流程，可助力专业设计师的创作。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/135145_kura_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;实时绘画板支持多图融合，用户上传多图后，可将多个草图叠加至同一画布自由创作，经过 AI 自动协调透视与光影，按照提示词内容生成融合图像，进一步丰富了 AI 生图的交互体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350209</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350209</guid>
      <pubDate>Sat, 10 May 2025 05:48:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Windsurf 发布 Wave 9 模型家族</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Windsurf (原 Codeium) 发布了 Wave 9 模型家族，包括 SWE-1、SWE-1-Lite 和 SWE-1-Mini。&lt;/p&gt; 
&lt;p&gt;SWE-1 是一个前沿模型，专门为软件工程任务设计，在内部评估和产品使用中，其性能接近甚至超越现有前沿模型。&lt;/p&gt; 
&lt;p&gt;SWE-1-Lite 是一个更强大的新模型，将取代原有的 Cascade Base，对所有用户免费。SWE-1-Mini 是用于 Windsurf 中 tab 补全的改进模型。SWE-1 目前对 Pro 用户限时免费。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/133759_d7AQ_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据 Windsurf 介绍，SWE-1 是其中最大、能力最强的 AI 模型，旨在突破现有大模型在软件工程实际需求上的局限。&lt;/p&gt; 
&lt;p&gt;相比只关注代码生成和单元测试的传统模型，SWE-1 更强调对开发流程中多种状态和上下文的感知能力（flow awareness），它能够在人机协作、任务未完成等复杂场景下持续推进工作。&lt;/p&gt; 
&lt;p&gt;根据基准测试，SWE-1 在 「对话式 SWE 任务基准」 和 「端到端 SWE 任务基准」 这两项核心指标上，都已经接近目前行业最强的前沿模型。特别是独立的端到端任务中，它的表现几乎和 Claude 系列最新模型能力相当。&lt;/p&gt; 
&lt;p&gt;在对话式任务中（任务做到一半，用户和模型交替操作，模型需要接着用户的进度继续完成任务），它目前的能力相当于 Claude 3.5 Sonnet。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-80a326122f0a65adc98949e8bf1c2bc890e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-fcb9655b8e9ddf4084175265b446815c9f2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;参考来源：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwindsurf.com%2Fblog%2Fwindsurf-wave-9-swe-1" target="_blank"&gt;https://windsurf.com/blog/windsurf-wave-9-swe-1&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FOS6Tz1nfUxgi0n4Dcf3bvg" target="_blank"&gt;https://mp.weixin.qq.com/s/OS6Tz1nfUxgi0n4Dcf3bvg&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350207/windsurf-wave-9-swe-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350207/windsurf-wave-9-swe-1</guid>
      <pubDate>Sat, 10 May 2025 05:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>深入对比谷歌 A2A 与 ANP：找到协议的原点</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;作者：常高伟，智能体协议 ANP 发起人。&lt;/p&gt; 
 &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;关于 ANP：Agent Network Protocol (ANP) 是一个开源的智能体通信协议，目标是成为智能体互联网时代的 HTTP。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;谷歌的&lt;/span&gt;&lt;span&gt;A2A&lt;/span&gt;&lt;span&gt;协议出来后，很多关注 ANP 社区的朋友第一时间发来消息，问对我们影响大不大，并且给我们献言献策，再次感谢。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我认为 A2A 对&lt;/span&gt;&lt;span&gt;ANP&lt;/span&gt;&lt;span&gt;最大的影响是，有了谷歌的「盖章「 Follow：ANP 的路线是对的，ANP 看的很长远，我也来了&amp;nbsp;&lt;/span&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;我不用再去解释为什么智能体通信协作重要了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;当天我花了半天的时候研究，写了一篇文章：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA4NjIwOTM5Mw%3D%3D%26mid%3D2654085211%26idx%3D1%26sn%3D22d52145d41b02fc217469278c8857f5%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"&gt;多角度全面对比 Google 最新的 A2A、ANP、MCP&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;后来又花了一天的时间仔细研究了 A2A，与 ANP 做了一个深度的对比，我认为我应该找到了 A2A 的原点，我也看到了 A2A 与 ANP 的更深层次的差异&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;一句话总结：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;MCP 的原点是：&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;模型与工具、资源的连接&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;A2A 的原点是：&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;企业内部智能体之间的复杂协作&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;ANP 的原点是：&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;智能体在互联网上的连接与协&lt;/span&gt;作&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;技术层面的差异对比&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;虽然说 A2A 和 ANP 都是解决智能体通信与协作，但是从技术层面，A2A 与 ANP 还是有很大的差异。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_2"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;智能体描述与信息组织&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;在协议设计中，一个智能体如何对另外一个智能体暴露其信息，是一个关键的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;在智能体描述方面，A2A 使用了一个名为 Agent Card 的 JSON 格式的文档，用于描述智能体的能力、技能、身份认证方法等，Agent Card 的核心是技能（skill），表达智能体能够干什么事情，比如能够进行地图路径规划等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;ANP 也是用的 JSON，不过基于 JSON-LD（&lt;/span&gt;&lt;span&gt;Linked Data&lt;/span&gt;&lt;span&gt;）和 schema.org 描述智能体信息（基本信息、身份验证、对外产品/服务、交互 Interface），这是&lt;/span&gt;&lt;/span&gt;&lt;span&gt;语义网&lt;/span&gt;&lt;span&gt;的技术，目的是提高两个智能体对信息理解的一致性，以及让智能体的公开信息能够链接成一个数据网络，智能体描述文件是网络的入口：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="374" src="https://oscimg.oschina.net/oscnet/up-d01d5d7307d80461908b85ccbf5bf33a731.png" width="866" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;比如，一个酒店智能体，使用 ANP，可以将酒店的房间、设施、服务、交互接口等信息（包括图片）描述出来，并且链接成一个数据网络，让其他智能体能够爬取并且理解。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;这也导致，在智能体的交互上，A2A 与 ANP 有非常大的差异：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;A2A 通过 Agent Card 描述智能体的技能（skills），其他智能体获取 skills，然后通过 JSON-RPC 发送一个任务请求，任务使用自然语言描述，并且携带任务需要的相关信息。任务完成后返回结果。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="899" src="https://oscimg.oschina.net/oscnet/up-6520f035e7c07da9e2c01587383e4349789.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;ANP 则是通过智能体描述文档（Agent Description），将智能体对外提供的产品、服务、交互接口等信息用 URL 连接到一起，另外一个智能体像一个网络爬虫，通过 URL 不断的爬取自己需要的信息。这个过程中可以通过自然语言接口与智能体进行交互，也可以通过结构化接口与智能体进行交互。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1037" src="https://oscimg.oschina.net/oscnet/up-6b28fc14add696a2b8229dff90d88f23df6.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;这里的核心差异：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;A2A 是智能体对外公开自己的技能，另外一个智能体发送处理任务过来，处理完成后返回结果。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;ANP 是智能体对外公开自己信息（包含交互接口），其他智能体爬取信息进行处理，必要的时候通过自然语言接口或结构化接口与智能体进行交互&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_3"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;智能体发现&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;在智能体的发现上 A2A 的方案和 ANP 基本是一样的，都是在域名的.well-known 目录下增加一个元数据文档，A2A 的文件名是 agent.json，ANP 的文件名是 agent-descriptions。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;同时也都支持智能体主动注册到私有注册表，这个在局域网中的协作是非常有必要的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;不同的地方在于，A2A 是直接将 Agent Card 内容放到.well-known/agent.json 中，而 ANP 则是在.well-known/agent-descriptions 中存放智能体描述文件的 URL。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;A2A 目前看起来是一个域名一个 Agent Card（还要进一步确认），ANP 则是一个域名可以有很多个智能体。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;身份验证&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;在身份验证上，A2A 和 ANP 有所不同。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;A2A 智能体在 A2A 协议中并不交换身份信息。相反，它们通过带外方式获取认证材料（如 token），并通过 HTTP 头部传递这些材料。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;所谓的带外，是指通过 A2A 之外的其他协议获取认证材料。A2A 遵循 OpenAPI 的身份认证规范进行身份认证，支持包括 HTTP Basic Auth、API Key、OAuth 2.0 等多种认证方式，具体由每个智能体在其 Agent Card 中声明。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="480" src="https://oscimg.oschina.net/oscnet/up-d447565d2bd93d80f90c7ecb282f4ef5cc6.png" width="852" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;ANP 则基于 W3C DID 技术构建去中心化的身份认证，在协议中直接携带身份信息，包括身份验证信息。智能体使用自己的身份就能够和其他所有的智能体进行交互，不需要带外获得身份验证材料。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;不过，在某些场景中，带外获取身份验证材料是必要的，特别是在企业级应用中。ANP 未来会支持带外身份验证材料的获取，设计上预留了扩展性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="606" src="https://oscimg.oschina.net/oscnet/up-b3dfb6efb5e2de6b145ed311e0f9e726f08.png" width="948" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;核心差异：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;A2A 采用带外获取身份验证材料，是为了最大程度兼容美国主流企业应用生态的安全合规要求，复用现有的企业身份认证体系，确保协议本身轻量、灵活且安全。核心是为了解决企业级应用的身份问题，并且没有解决互联网上智能体互联互通的身份问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;ANP 则是未来解决智能体在互联网上如何进行身份认证的问题，核心是让互联网上任意两个智能体都能够互联互通，这需要一个互操作性更好的身份认证方案。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_5"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;核心概念&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;A2A 与 ANP 在协议的核心概念上有很大差异。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;A2A 的核心概念&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;包括 Skill（技能）、Task（任务）、Artifact（产物）、Message（消息）、Part（部分）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;同时，Task 又定义了多种状态，包括：submitted（已提交）、working（处理中）、input-required（需要输入）、completed（完成）、canceled（取消）、failed（失败）、unknown（未知）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;Task 也定义了一些操作，包括：Send（发送）、Get（获取）、Cancel（取消）等，以及一些通知相关的操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;ANP 的核心概念&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;包括描述信息与接口（Interface）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;描述信息主要是 JSON-LD 格式的文档，以及 JSON-LD 文档中通过 URL 链接到的其他资源，包括图片、音频、视频等多媒体文件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;Interface 又分为自然语言接口（Natural Language Interface）和结构化接口（Structured Interface）。结构化接口支持现有大部分的规范，比如 OpenAPI、JSON-RPC 等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;核心差异：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;A2A 在协议层面定义了详细的任务协作概念，包括任务的状态、操作等，这有助于解决智能体之间复杂任务的协作问题。缺点是会导致两个智能体之间的耦合度较高。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;ANP 简化了智能体之间的交互，降低了智能体之间的耦合度，在跨平台的智能体协作场景下有较大的优势。缺点是原生协议不支持复杂任务协作，需要自己定义 Interface 来实现。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_6"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;A2A 与 ANP 的原点&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;要想真正的理解一个协议的设计，必须找到这个协议的原点。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;比如，ANP 的原点一直都是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;智能体在互联网上的连接与协作&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。MCP 的原点一直都是&lt;/span&gt;&lt;strong&gt;&lt;span&gt;模型与工具、资源的连接&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;，构建更好的智能体。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;通过上面的技术分析，我们可以确认 A2A 的原点是：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;企业内部智能体之间的复杂协作&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;协议的官网并没有明确的说出这一点，但是谷歌的新闻发布稿中有提到过一些：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;AI 智能体为人们带来了独特的机会，能够通过自主处理许多日常重复性或复杂任务，帮助提升工作效率。如今，企业越来越多地构建并部署自主智能体，以帮助在整个工作场景中实现规模化、自动化并优化各类流程——从订购新笔记本电脑，到辅助客户服务代表，再到协助供应链规划。（https://developers.googleblog.com/en/a2a&lt;/span&gt;&lt;span&gt;&lt;span&gt;-a&lt;/span&gt;&lt;/span&gt;&lt;span&gt;-new-era-of-agent-interoperability/）&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;从 A2A 生态企业的分布也大概可以看出这一点，大部分都是 AI 平台与服务、软件、SaaS 和企业平台。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="606" src="https://oscimg.oschina.net/oscnet/up-2defdfdfeb005bbfae4fe07af3e72afe1a4.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="693" src="https://oscimg.oschina.net/oscnet/up-8026f8e9b8cc4e73963d2737dd793f74d30.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;从技术上看，目前&lt;strong&gt;A2A 的实现也不大适合智能体互联网的需求&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;以个人助手使用 A2A 去酒店智能体预订房间为例，按照目前 A2A 的实现，个人助手需要发送一个任务，用自然语言描述用户的要求（价格、房型、时间等）信息，酒店智能体处理后返回任务执行信息。在中间可能要经过多次的任务交互、任务状态的迁移等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;这会有两个问题：一个是用户的隐私可能会被泄露，因为个人助手要将任务发送给另外一个智能体执行；另外一个就是交互耦合度过高。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;ANP 的逻辑则是个人助手爬取酒店智能体的信息在本地进行处理，需要交互的时候才调用酒店智能体的接口。这是本质的区别。当然，除此之外 A2A 还有智能体在互联网上的身份互联互通问题没有解决。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;不过，&lt;strong&gt;也不排除未来 A2A 通过协议升级扩展到智能体互联网的场景&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_7"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;未来智能体协议的一些预判&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;短期内 MCP 成为模型连接工具和资源的事实标准，这个基本上已经确定，目前很难有第二个 MCP 出现。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;中长期来看，我认为有一个趋势大概率会发生：&lt;/span&gt;&lt;strong&gt;&lt;span&gt;工具智能体化，智能体工具化&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。如果这个趋势发生，那么智能体协议会挤压 MCP 的空间。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;更长期来看，AGI 实现后，也许人类设计的协议是 AI 的束缚而非助力，AI 有办法自己设计协议并达成共识。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;不过，在当下智能体协议是非常重要的，它是智能体的重要拼图，也是智能体与互联网交互最 AI 原生的方式，是比 Computer Use、Browser Use，甚至 AI 浏览器都更高效的连接方式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;无论如何，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;ANP 最有价值的部分，是社区对未来智能体互联网的设想，是社区独特的互联网理念（连接即权力），以及 DID+语义网的技术路线。这是支撑 ANP 走下去的核心动力&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;关于创新&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;A2A 出来之后看着"炸裂、一夜变天、颠覆"这些标题心情复杂，特别是我们做 ANP 做了一年，也推广了很长时间。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;我们都在说，我们需要"0 到 1"的创新——我们不单需要创新者，也需要媒体能够去发现这些创新者。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;最后感谢开源社区的每一位贡献者和开发者，现在已经有 40 多位开发者了。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;&lt;span&gt;也感谢公众号、社区对我们的支持，包括 RTE 开发者社区、OSC 开源社区、&lt;/span&gt;&lt;span&gt;Founder Park&lt;/span&gt;&lt;span&gt;、觉察流、侯宏文存、AIGCLink、智能体 AI 等等（可能不全），还有很多给我们提供分享机会的组织，以及为社区提供服务器资源的 AWS 和阿里云。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;最后&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;如果你也认可我们的理念，认可我们对未来智能体互联网的设想，欢迎加入我们，无论是以个人，还是以公司名义，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;我们需要你的支持&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;我们正在筹备 ANP 开源技术社区创始委员会，这是一个临时委员会，目的是为了让社区能够走向正轨，成长为一个更加开放的社区。感兴趣可以联系我。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;span&gt;联系方式：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;开源项目 GitHub：https://github.com/agent-network-protocol/AgentNetworkProtocol&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;Discord: https://discord.gg/sFjBKTY7sB&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;官网：https://agent-network-protocol.com/&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;微信：flow10240&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/9297178/blog/18398047</link>
      <guid isPermaLink="false">https://my.oschina.net/u/9297178/blog/18398047</guid>
      <pubDate>Sat, 10 May 2025 05:07:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>NebulaGraph 图数据库开源六周年</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;strong&gt;&lt;strong&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-347a643f66a66a9edf9d5760c1e8d2f4686.png" referrerpolicy="no-referrer"&gt;&lt;/strong&gt;&lt;/strong&gt;‍‍&lt;/p&gt; 
&lt;p&gt;2025 年 5 月 15 日，NebulaGraph 迎来开源六周年的里程碑。作为国产开源图数据库的标杆项目，回望 NebulaGraph 的六年发展历程，不仅是一部技术迭代的编年史，更是中国开源社区在全球基础软件领域崛起的缩影。&lt;/p&gt; 
&lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;一、诞生：在数据关系的浪潮中扬帆起航&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2018 年 8 月 31 日， @Sherman-the-tank 在 nebula 仓库中提出第一个 issue ‘Create a parser framework to process GQL.’&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2018 年 9 月 5 日， @dutor 提交了第一个 PR ‘Added some concurrent utilities, GenericThreadPool, etc.’&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;NebulaGraph PMC Sherman Ye 曾参与多个分布式数据库研发工作，当社交网络爆发式增长，引发数据关系挖掘需求井喷时，他敏锐地意识到：图数据库是表示和理解关系最天然的工具，然而当时的图数据库或受限於单机性能，或困于扩展性不足，难以承载千亿节点、万亿边级的超大规模数据。&lt;/p&gt; 
&lt;p&gt;「&lt;strong&gt;我们必须打造一款开源的、分布式的、支持线性扩容的世界级图数据库，能够容纳千亿顶点和万亿边。&lt;/strong&gt;」Sherman 的愿景，从一开始就超越了代码本身。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-4e970720b415322cc5254ac4b46dd587181.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（NebulaGraph 诞生于一间小公寓，初期核心团队在这里办公）&lt;/p&gt; 
&lt;p&gt;NebulaGraph 采用 Shared-Nothing 架构与存储计算分离设计，为 NebulaGraph 注入了宇宙级的基因——每个节点独立处理数据，如同星云中的星辰，既自由又协调；存储与计算分离，则让扩容像星云膨胀般自然。&lt;/p&gt; 
&lt;p&gt;「&lt;strong&gt;我们写下 NebulaGraph 第一行代码时，就认识到它必须是一款开源的图数据库&lt;/strong&gt;。」不忘开源初心，八个月后，NebulaGraph 遵循 Apache 2.0 开源协议，在 GitHub 开源 alpha 版本，从此开启了突破国产图数据库技术的星辰大海征程。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-a9d672008ac303c7c9a6d86aa9b3c44aa2e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（一张开源纪念截图）&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;二、应用：在产业实践的土壤中扎根&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2024 年 10 月 29 日，携程云原生技术总监周昕毅先生在上海 nMeetup 上充分肯定了 NebulaGraph 作为开源解决方案在企业中的应用。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;用户的选择是最好的背书。六年来，NebulaGraph 用户覆盖金融、互联网、通信、电商、保险、安全等多个行业。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-d2338012c10f02d334d817be194af6c777f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（NebulaGraph 部分用户）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;携程集团已有包括酒店、机票、金融在内的 16 个部门使用 NebulaGraph, 在风控场景，构建了实时图特征平台的应用逻辑闭环，额外获取了 55% 的关联业务信息，使得该场景下的覆盖率提升了 32%&amp;nbsp;；奇富科技打造了智能化的金融反欺诈系统系统，累计报送涉骗阻断预警 59 万次，拦截潜在被骗者 9.5 万人，帮助用户避免损失 11.35 亿元；OPPO 从 JanusGraph 切换到 NebulaGraph 后，导入性能提升了 10 倍，且查询性能以及并发能力都有 3-6 倍的提升。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NebulaGraph 是开源项目，用户在真实使用场景中，为解决业务需求，会自然地参与共建，这种集体智慧加快了 NebulaGraph 的迭代：企查查贡献了 Node 客户端，奇富科技阿旺把自己做的 nebula-console-intellij-plugin 捐给了社区，笃笃科技大叶开发了 NebulaGraph 图数据库客户端星影 StarShadow.&lt;/p&gt; 
&lt;p&gt;一幅技术扎根产业、需求反哺产品的共生图景已然成形。这正是 NebulaGraph 在真实商业土壤中向下扎根、向上生长的最佳注脚。&lt;/p&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;三、生态：在开源共治的生态中繁荣&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2024 年 3 月，NebulaGraph 在 GitHub star 数突破 10,000 大关&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;NebulaGraph 社区构建了一套自由且开放的「双轨成长体系」：开发者（Dev Group）聚焦代码贡献，用户（User Group）专注实践传播。细分来看，还有学习者、布道师、文档贡献者等角色，每种角色都能拥有自己的话语权，找到自己的存在价值，他们不会被统一地转化成某一类角色，他们被允许以某一种角色停留在社区里，比如仅仅作为用户，或者仅仅作为一次性的代码贡献者。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-4781abc41f59cc55d7d129c6444f502e901.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（NebulaGraph Community 成长体系）&lt;/p&gt; 
&lt;p&gt;作为开源项目，我们始终重视代码共建共享。连续 5 年参与中国科学院软件研究所发起的开源之夏，鼓励全球高校开发者参与开源贡献，为社区注入新鲜血液；举办 NebulaGraph Hackthon，设立 150,000 奖金池，从内核到周边，让广大图数据库及 NebulaGraph 爱好者尽情探索图世界。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-a5cadecf20779c82bcf80c9e7896d7e77cc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（来自开发者的认可）&lt;/p&gt; 
&lt;p&gt;线下活动同样精彩纷呈。从 NUC 2021、2022，到足迹遍布全国的 nMeetup，我们珍惜每次与用户、开发者面对面交流的机会。也许大家素未谋面，但因为同在 NebulaGraph 社区，见证了万星开源项目的崛起，每次线下探索图数据库的世界都能像老朋友一样碰撞出思维的火花和久违的默契。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-9d32d3464c875255314f68fc03f7487fc59.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（社区可爱的小伙伴们）&lt;/p&gt; 
&lt;p&gt;我们始终以包容的姿态，让每个社区参与者的独特贡献汇聚成生态繁荣的星河。&lt;/p&gt; 
&lt;span id="OSC_h1_4"&gt;&lt;/span&gt; 
&lt;h1&gt;四、未来：在云与 AI 的浪潮中领航&lt;/h1&gt; 
&lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
&lt;h2&gt;NebulaGraph Cloud&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2020 年，NebulaGraph 决定打造云产品&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;NebulaGraph 从诞生之初起，不仅坚定走开源路线，还坚持云原生理念。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;如今，NebulaGraph Cloud 作为一套集成了 NebulaGraph 数据库和数据服务的云上服务，支持一键部署 NebulaGraph 和相关可视化产品。用户可以在几分钟内创建一个图数据库，并快速扩展计算、存储等资源，无需在本地搭建和维护复杂的图数据库基础设施，从而能够更加专注于核心业务的发展。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-0f3996764f2cbb028787d68755889da4bdc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（NebulaGraph 控制枱界面）&lt;/p&gt; 
&lt;p&gt;NebulaGraph Cloud 除了在 AWS 上提供全托管服务，还计划全面支持 Azure 和 Google Cloud Platform (GCP) 等主流公有云厂商，企业可够根据自身需求和业务场景，选择最适合的云厂商。&lt;/p&gt; 
&lt;p&gt;申请试用⬇️&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.nebula-graph.io%2Flogin" target="_blank"&gt;https://cloud.nebula-graph.io/login&lt;/a&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_6"&gt;&lt;/span&gt; 
&lt;h2&gt;NebulaGraph AI 应用平台&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;2023 年 8 月 16 日，@wey-gu 与 LlamaIndex 联合发布 GraphRAG.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;正如 NebulaGraph 诞生之初，我们又一次站在高处看未来——洞察到图结构在知识处理中的革命性潜力。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;2023 年 8 月，在 RAG 技术还未被称为 RAG，而是上下文学习方法的时候，我们就意识到以图的方式处理知识会对解决「大海捞针」等特定问题有很大帮助，因此&amp;nbsp;@wey-gu 提出了将图数据库与 RAG 结合的想法，向 LlamaIndex 提了第一个 PR，将 KG-RAG 转变为 GraphRAG.&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-94fd0e2ef4e5265750786d1f60e9423f893.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（NebulaGraph GenAI Team Leader @wey-gu）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GraphRAG 仅仅是 NebulaGraph 探索 GenAI 的「第一步」。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;随后，我们和 Researcher: Diego 一起讨论，做了图索引之上 Chain of Exploration 的工作，这种探索链不仅可以帮助 Agent 理解图谱，还能从非结构化数据中提取出半结构化的知识图谱‌。&lt;/p&gt; 
&lt;p&gt;在一系列 Graph based RAG 的落地实践中，GenAI Team 又一次突破技术边界，提出了 Fusion GraphRAG：融合了高级 RAG 技术，通过图状结构存储文档层级、章节关系及特殊元素（如公式、表格），实现高效、灵活的检索。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-b04608e8eedc97b778355eed434fc9280f4.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（Fusion GraphRAG 是更高级的 RAG 技术）&lt;/p&gt; 
&lt;p&gt;但不止于此，NebulaGraph 把视角转向企业级应用，基于 FusionGraphRAG 与 Agentic RAG 技术，打造了一个全新的高级知识库与低门槛应用平台 —— NebulaGraph AI 应用平台（内部命名为 「Catalyst」，即催化剂），无需构建复杂 Workflow 和编写繁琐 Prompt，更智能地激活与应用企业内部知识。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-2cbc7e0b1c9bf670db137f17cbee8b6f5dd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（用户只需将对私有知识的理解转化为对不同「知识篮子」的定义）&lt;/p&gt; 
&lt;p&gt;从 GraphRAG 到 NebulaGraph AI 应用平台，我们始终相信：真正的技术革命，不在于创造更复杂的工具，而在于让复杂技术变得触手可及。当每个企业都能像调配催化剂一样轻松激活知识资产，我们离智能时代的真正到来，便又近了一步。&lt;/p&gt; 
&lt;span id="OSC_h1_7"&gt;&lt;/span&gt; 
&lt;h1&gt;六周年快乐🎉&lt;/h1&gt; 
&lt;p&gt;六载春秋，NebulaGraph 从一颗种子长成参天大树，其根系已深入全球开发者土壤，枝叶则伸向云与 AI 的星辰大海。NebulaGraph 的开源历程，证明了通过开源共治，我们能打造出一款世界一流的图数据库产品，更证明了这群活跃在开源社区的极客，有着无限的探索精神和创新能力。&lt;/p&gt; 
&lt;p&gt;因为开源，这场图数据库技术革命，没有终点，只有新的起点。&lt;/p&gt; 
&lt;p&gt;因为有你，这场开源协作的星辰征途，没有孤岛，只有携手同行的辽阔未来。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;开源最大的意义，莫过于代码开放，共建共享，以用户/开发者的力量推动产品迭代。&lt;/p&gt; 
&lt;p&gt;陪伴 NebulaGraph 共同成长的你，是使 NebulaGraph 愈发闪耀的星光。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" src="https://oscimg.oschina.net/oscnet/up-98d9a5b4f678bcb55a625b31b4cefe5e359.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscuss.nebula-graph.com.cn%2Ft%2Ftopic%2F16781" target="_blank"&gt;在 NebulaGraph 论坛&lt;/a&gt;&amp;nbsp;分享你与 NebulaGraph 的故事，让更多小伙伴感受到开源的力量。（分享即送星云仔 T 恤，点赞 top3 可获得全套社区周边）&lt;/p&gt; 
&lt;p&gt;六月，NebulaGraph 社区将在北京举办 nMeetup，欢迎扫码提交议题。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="图片" height="100" src="https://oscimg.oschina.net/oscnet/up-780ef5d7632ee90c872ab50c1333b6c1ddc.png" width="100" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;‍&lt;/p&gt; 
&lt;p&gt;✦&lt;/p&gt; 
&lt;p&gt;如果你觉得 NebulaGraph 能帮到你，或者你只是单纯支持开源精神，可以在 GitHub 上为 NebulaGraph 点个 Star！每一个 Star 都是对我们的支持和鼓励✨&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvesoft-inc%2Fnebula" target="_blank"&gt;https://github.com/vesoft-inc/nebula&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;✦&lt;/p&gt; 
&lt;p&gt;✦&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4169309/blog/18403236</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4169309/blog/18403236</guid>
      <pubDate>Sat, 10 May 2025 03:53:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Hugging Face 牵头推动 Transformers 库模型架构标准化</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Hugging Face &lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fblog%2Ftransformers-model-definition" target="_blank"&gt;宣布&lt;/a&gt;&lt;/u&gt;联合多家机构推动将&lt;code&gt;transformers&lt;/code&gt;库作为模型架构标准，提升 AI 生态兼容性。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height="1238" src="https://static.oschina.net/uploads/space/2025/0516/114028_tsZR_2720166.png" width="1718" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Hugging Face 表示正与 vLLM、LlamaCPP、SGLang、Mlx、Qwen、Glm、Unsloth、Axoloth、Deepspeed、IBM、Gemma、Llama、Deepseek、Microsoft、Nvidia、InternLM、Llava、AllenAI、Cohere、TogetherAI 等众多生态系统参与者共同努力，将&amp;nbsp;&lt;code&gt;transformers&lt;/code&gt;&amp;nbsp;库中的模型定义代码作为标准，旨在为所有模型提供一个统一的真实来源。&lt;/p&gt; 
&lt;p&gt;Hugging Face 目前正在与最流行的推理引擎（vLLM、SGLang、TGI、...）紧密合作，让它们使用&lt;code&gt;transformers&lt;/code&gt;作为后端：只要模型被添加到&lt;code&gt;transformers&lt;/code&gt;，便支持在这些推理引擎中使用，同时利用每个引擎的优势：推理优化、专用内核、动态批处理等。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-dc6ac94d98590b08d7bb511a05cf4e82e7e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;这项联合工作将极大地提高不同模型架构在整个 AI 生态系统中的兼容性和互操作性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350188/huggingface-transformers-model-definition</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350188/huggingface-transformers-model-definition</guid>
      <pubDate>Sat, 10 May 2025 03:44:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>得物自研 DSearch3.0 搜索核心引擎升级之路</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;h1&gt;&lt;span&gt;&lt;strong&gt;一、背景&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p style="text-align: left"&gt;&lt;span&gt;随着交易和社区搜索业务稳步快跑，基建侧引擎越来越复杂，之前搜索底层索引查询结构已经存在较为严重的性能瓶颈。成本和运维难度越来越高。在开发效率上和引擎的稳定性上，也暴露出了很多需要解决的运维稳定性和开发效率短板。而在引擎的业务层部分也需要逐步升级，来解决当前引擎中召回层和业务层中各个模块强耦合，难维护，迭代效率低下等问题。&lt;/span&gt;&lt;/p&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/de1274b479a3468eb2c8c9732f943b6d~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=yG8v2qkQHq9NYLqIZ%2Bfln4tsbMw%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;h1 style="text-align: left" class="pgc-p"&gt;&lt;span&gt;&lt;strong&gt;二、引擎开发技术方案&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;h2 style="text-align: left" class="pgc-p"&gt;&lt;span&gt;&lt;strong&gt;DSearch1.0 索引层整体结构&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;DSearch1.0 的索引结构比较特殊一些，总体上使用了全局 rcu 的设计思想，整体架构上单写多读，所以实现了并发高性能无锁读，内部数据结构都是无锁数据结构，所以查询性能高。在写操作上因为 rcu 机制实现写入无锁。整体上优点读性能高，没有传统段合并操作带来的磁盘抖动。缺点是索引地址和操作系统强相关，运维复杂，热更新受限。全局地址分配难以并行写入，构建瓶颈明显。无法对浪费的内存进行回收导致内存空间利用率低，索引空间占用大。总体结构如图所示：&lt;/span&gt;&lt;/p&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/90b13bdb5afb4c739e88babf772c494b~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=sBcaXhhCtFSFO6CLTcQ7Ldypf5o%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;h2 style="text-align: left"&gt;&lt;span&gt;&lt;strong&gt;DSearch2.0 的索引升级&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;DSearch2.0 分段索引整体设计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;引擎 2.0 索引升级采用经典段合并架构，除了继承了段合并中优异的高性能写入性能和查询已经索引合并等优势外，针对段合并中频繁的正排字段更新等带来的高 IO 缺点。我们设计了新的正排字段原地更新索引，使新的 DSearch2.0 引擎拥有 Redis 的高性能写入和查询，也拥有 lucene 的紧凑索引和索引合并带来的内存空间节省的优势。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 索引段结构&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;每个索引段包含了文档文件，用于紧凑存放 document 中的各个字段的详细信息。字符串池文件是对 document 中所有的字符串进行统一顺序存储，同时&lt;strong&gt;对字符串进行 ID 化&lt;/strong&gt;，每个字符串 ID 就是对应于字符串池中的&lt;strong&gt;offset 偏移&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;可变数组文件是专门存放数组类型的数据，紧凑型连续存放，当字段更新的时候采用文件追加 append 进行写。最终内存回收通过段&lt;strong&gt;之间的 compaction 进行&lt;/strong&gt;。FST 索引文件是专门存放 document 中全部字符串索引。每个 fst 的 node 节点存放了该字符串在字符串池中的偏移 offset。而通过字符串的 offset，能够快速在倒排 termoffset 数组上二分查找定位到 term 的倒排链。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;倒排文件是专门存放倒排 docid，词频信息、位置信息等倒排信息，其中 docid 倒排链数据结构会根据生成段的时候计算 docid 和总 doc 数的密度来做具体判断，&lt;strong&gt;如果密度高于一定阈值就会使用 bitmap 数据结构，如果小于一定阈值会使用 array 的数据结构&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;标记删除 delete 链主要是用于记录段中被删除的 document，删除操作是软删除，在最后查询逻辑操作的时候进行最后的过滤。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;实时增量的 trie 树结构，实时增量段中的前缀检索和静态段中的前缀检索数据结构不一样，trie 因为能够进行实时更新所以在内存中使用 trie 树。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;段中的 metadata 文件，metadata 文件是记录每个段中的核心数据的地方，主要记录段内 doc 数量，段内 delete 文档比例，实时段的 metadata 会记录 kafka 的 offset 等核心数据。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/24c940a2b35e4d15a162fe3ebf200d0f~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=%2BYmQsxTR%2FExv2AC40UdCJ0azAwA%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;Document 文档和索引结构&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ Document 文档数据结构&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;Document 文档使用紧凑型存储，其中 array 和字符串类型单独存放，其他字段连续存放，string 和 array 字段存放。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;array 字段类型数据直接存放在可变数组文件区，连续追加写。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;string 字符串池对所有字符串进行连续存放，多个 doc 中同一个字符串引用同一个字符串地址，节省大量字符串存放空间。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 倒排索引文件结构&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;倒排索引文件存放 docid 倒排和 Tf 以及位置 position 数据。其中内存实时段中的倒排索引数据结构是固定一种类型 array 类型。而内存实时段固化为静态段的时候，倒排数据结构会根据 docid 中的密度进行选择 array 和 bitmap 存储。当 docid 密度大于一定阈值是 bitmap，反之是 array 结构。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;Tf 数据结构是一个 uint16 的数组，数组长度和 docid 的数组长度一致，所以当确定了某个 docid 时候，也随即确定了它的 tf 信息。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;postion 信息存储是一个二维数组的格式，第一层数组存放的是对应于 term 的在字符串池的 offset，因为 term 在字符串池中已经 ID 化，所以 offset 可以表示唯一 term。第二层数组是该 term 在字段中多次出现的位置，使用 uint16 存储。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 前缀检索文件&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;FST 静态段文件&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;a. 静态段中前缀是 fst 的数据结构，因为 fst 一旦建立是不能够进行修改的，所以在段合并的时候需要对所有 term 进行排序然后再构建 fst 结构。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;b. fst 的 node 节点存放了对应于 term 的字符串池的 offset。当需要查询一个 term 的倒排结构时候，需要先查询该 term 的字符串池的 offset，然后拿该 offset 去倒排的 termoffset 文件中二分查找找到对应的倒排 positionlist 结构拿到对应倒排。所以一次 term 到倒排的查询需要查询一次 fst+一次二分查询。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;c. term 到倒排的查询一次 fst+一次二分查找效率不高，所以针对 term 到倒排查询，新增了第二种 HashMap 索引，直接通过 term 到倒排的 offset 索引，这个选项在建表的时候可以配置。&lt;/span&gt;&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;实时段 RcuTrie 树索引&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;a. 实时段中需要支持边写边读，前缀检索需要支持并发读写。引擎中 trie 树是 rcu 实现，单线程更新，多线程并发读，trie 树写更新节点内存延迟回收。&lt;/span&gt;&lt;/p&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/1a4ee53847174e60b8ac7df104a5d5b6~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=HOQHf%2Fr42ewivfi%2BZbf2pws0nLo%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;倒排索引和查询树逻辑&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 倒排链优化&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;DSearch1.0 的 roaringbimap 倒排索引在低密度数据量上存在一些瓶颈，比如对于倒排链比较短的情况下，roaringbitmap 的 container 大部分都是 array 结构，在倒排链查询和合并都会进行一次二分查找，在大面积的倒排链合并中是个相当大的性能瓶颈。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;针对上面所说的情况对 roaringbitmap 进行了精简，只存 array 或者 bitmap 合并的时候不需要查找，直接链式合并。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 逻辑树合并优化&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;DSearch2.0 重点从逻辑语法树和倒排入手，优化语法树，减少合并树高，从二叉树合并变成单层合并。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;优化倒排链合并方式，采用原地倒排链合并，消除倒排合并临时对象，同时引入多线程并行合并，减少长尾提高性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/a324c1263d7045f6a4346f99c7f97124~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=DxtCm2sohwPSMuxM%2Flr5%2BTSP4kg%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;增量更新逻辑&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 增量实时写入逻辑&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;引擎支持多个并发实时段，这个由配置文件通过配置来进行配置。多个实时段能够提升并发写入的性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;每个实时段对应一个写入队列，提高并发写入吞吐。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;每个段真实写入一条信息会同步原子更新消费的 kafka 的 offset，用于对后面进程重启等恢复数据做准备。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;当进程重启或者异常退出时候，会读取 metadata 文件中的最后一条 kafka offset 进行重新消费增量在内存中重新构建新的正排、文档和倒排等信息，完成数据的恢复。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p26-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/4a6eba83cdd74c1587d9aa76bf35ddbd~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=okNAsDWIX8ozfo9pqhZbj2DF39Q%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;实时段固化和段合并策略&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 实时段固化逻辑：&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;当实时段内随着增量写，doc 文件大小超过 128M 时候会进行内存实时段固化操作。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;固化操作开始时，会先生成新的内存实时段，老的内存实时段会变成只读内存段。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;遍历按整个只读内存段，构建新的索引和新的正排结构生成新的静态段。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 段合并策略：&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;实时段固化的小静态段因为大小比较小，会优先和之前固化后的小段进行合并，按照 1，2，4，8 进行合并，逐步合并成静态段最大的上限。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;静态段的合并触发策略是当静态段中 delete 的 doc 比例超过了 30% 会触发静态段之间的合并，合并会按照近邻合并原则，从左右近邻中选取一个最小 doc 数的段进行合并，进而新生成一个新的段。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/08582c715cbd47d0b298435e57bac25f~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=40FqkO626yUPY%2BI3uTtsbA1Ihwo%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;查询和更新中的并发控制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 查询流程&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;引擎查询时候，先遍历查询实时段，然后再查询静态段。实时段查询存在最大增量查询截断，当实时段查询到最大增量截断时实时段停止查询。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;实时段查询后，查询静态段。静态段中包含了全量构建索引的全量最大 offset 记录同时全量的 doc 是通过质量分进行排序，所以在全量段查询的时候，先遍历质量分最大的全量段，逐步往后面静态段查询，直到查询到全量截断。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;实时段查询和静态段查询结果进行 merge 作为最终的查询结果。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;/p&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ 更新并发控制&lt;/u&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;因为 DSearch2.0 的索引更新是直接在实时段或者静态段进行更新，所以存在多线程读写问题。尤其是正排字段更新写入量大更新频繁。同时更新涉及到所有的实时段和静态段，较为复杂。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;为了解决正排字段和倒排的更新问题，新版本引擎引入了 document 文档锁池，对每个 doc 进行 hash 计算落到锁池中具体一个锁上来减少锁冲突，当前锁池内有多个个文档锁。文档锁在文档进行拷贝和更新的时候会进行锁住。&lt;/span&gt;&lt;/p&gt; 
&lt;h2 style="text-align: left"&gt;&lt;span&gt;&lt;strong&gt;DSearch3.0 搜索核心升级&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;异步非阻塞图调度框架&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/7e1821341e54416a99384f4ae1016048~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=Ugikrdj%2Fc%2FMZkAFTUtc7L9JVcG0%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ &lt;/u&gt;引擎主要改造：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="color: rgb(62, 62, 62)"&gt;&lt;strong&gt;图框架支持 RPC 异步非阻塞请求：&lt;/strong&gt;&lt;/span&gt;&lt;span style="font-size: 0.882em"&gt;引擎图框架 RpcServer 服务使用 brpc 的异步处理无需同步阻塞等待调度完成，只需框架调度完算子返回结果，不阻塞 RpcServer 线程，例如：当前引擎调用 neuron 服务是同步调用，当 neuron 服务负载高阻塞时，同步调用会导致拖住引擎 RpcServer 处理线程，新的异步非阻塞模式引擎 client 在调用引擎后已经返回，等待引擎 RpcServer 中异步调度框架中 remote 异步算子回调，减少外部服务影响引擎。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;减少线程切换：&lt;/strong&gt;图框架调度器会优先调度当前运行线程，同时使用 M:N 类型的 bthread 线程池，线程切换会更小，执行效率高。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;RPC 服务和框架算子独立：&lt;/strong&gt;引擎 RPC 服务和框架算子完全解耦，跨集群部署算子服务无需任何改造，实现算子脱离运行环境。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;高效的算子异常处理和超时机制：&lt;/strong&gt;每个算子维护自己的运行超时时间和请求到算子调度执行的超时时间，对整个请求流程中各算子执行更加精准。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;动态图支持：&lt;/strong&gt;图框架支持静态图和动态图业务组合式调用。支持静态子图和动态子图调用等复杂业务组合。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;复杂子图支持：&lt;/strong&gt;图框架支持嵌套子图，支持自调用模型，可以实现复杂单节点多功能调用。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;算子间数据交换 Table 设计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/3bf931610dd74d5da3be98d3395310ab~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=n4lk8KDSCTKVPt6uIgyIxo9v%2FPw%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ &lt;/u&gt;引擎主要改造：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;列式数据共享优化：&lt;/strong&gt;算子交换数据全部存放在 Table 列中，Table 中全部共享列式数据，省去大面积数据拷贝，大幅提升引擎业务执行性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;兼容引擎索引中 doc 数据：&lt;/strong&gt;引擎索引中 doc 行式存储有很多优点，比如多字段访问效率高等，Table 设计中考虑了行式存储优点，不仅存高频的列字段也储存了引擎内部的 doc*以及对应 FieldDef*，能直接方便访问索引数据，接口统一，易于迭代。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;打通 FlatBuffer 序列化协议：&lt;/strong&gt;当前引擎 FlatBuffer 序列化传输协议和引擎内部数据出口需要多次遍历转换，需要拷贝很多数据，新 Table 的设计内部数据列和 FlatBuffer 内部的数据列互转互通，节省大量内部拷贝同时避免了字段兼容等问题。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;支持原地排序和标记删除：&lt;/strong&gt;Table 数据表，支持原地 sort 操作和标记删除操作，节省数据排序时大量数据的拷贝和删除操作中导致的数据重排等拷贝操作，提升性能。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;算子间数据交换 Table 设计&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div style="text-align:left"&gt; 
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/a96224208f0d46f2b9abffe520367ac1~tplv-obj.image?lk3s=ef143cfe&amp;amp;traceid=2025051410200631E315502D38AE1F6DD8&amp;amp;x-expires=2147483647&amp;amp;x-signature=zR%2B1sBPOMWcKSWcnoqSS3HtpR%2Bo%3D" data-align="left" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="line-height: 2; text-align: left"&gt;&lt;span&gt;&lt;strong&gt;&lt;u&gt;※ &lt;/u&gt;引擎主要改造：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;动态图支持：&lt;/strong&gt;DSsearch3.0 支持动态图编排，主要通过业务方通过动态编排请求来组织对应的算子编排逻辑，实现业务方自主编排调度逻辑，方便整体业务开发。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;Remote 远程调用支持：&lt;/strong&gt;通过开发远程异步调用算子，支持 DSearch3.0 跨集群调用，实现多机算子化互联互通。提高引擎的整体纵向拓展能力。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;引擎算子库复用：&lt;/strong&gt;通过设计统一的算子接口，开发基础的可复用框架算子，支持配置化组合运行图，实现业务逻辑快速复用和开发，提高整体引擎开发效率。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;&lt;span&gt;&lt;strong&gt;三、性能和效果提升&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;DSearch 在 2024 年 Q1 季度索引升级开发完成后逐步推全到交易和社区等各个主场景业务中，最后拿到了很多超预期结果：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;索引内存优化超出预期：&lt;/strong&gt;社区搜索和交易搜索总索引单分片优化 60%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;构建和写入性能优化超出预期：&lt;/strong&gt;社区搜索和交易搜索主表写入性能提升 10 倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;索引更新优化超预期：&lt;/strong&gt;社区和交易主表更新时间提升接近 10 倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;性能优化符合预期：&lt;/strong&gt;社区搜索平均 rt 降低一倍，P99 晚高峰降低 2 倍。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;&lt;strong&gt;四、总结&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;DSearch 引擎从开始的 DSearch1.0 的搜索引擎逐步经历了 DSearch2.0 的分段式索引改造升级，又经历了 DSearch3.0 的全图化引擎升级。逐步将 DSearch 引擎升级到业界较为领先的支持内存型、磁盘型多段式搜索引擎，为支持得物业务的发展做出了重要的贡献，后续 DSearch 会围绕着通用化、自迭代、高性能等多个方向继续升级，将 DSearch 引擎迭代到业界领先的引擎。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-size: 0.882em"&gt;&lt;strong&gt;算法团队大量 HC，欢迎加入我们：&lt;/strong&gt;得物技术大量算法岗位多地上线，「职」等你来！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;往期回顾&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2"&gt;&lt;span&gt;1. 以细节诠释专业，用成长定义价值——对话@孟同学 ｜得物技术&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2"&gt;&lt;span&gt;2. 最近爆火的 MCP 究竟有多大魅力？MCP 开发初体验｜得物技术&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2"&gt;&lt;span&gt;3. 得物可观测平台架构升级：基于 GreptimeDB 的全新监控体系实践&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2"&gt;&lt;span&gt;4. 得物自研 DGraph4.0 推荐核心引擎升级之路&lt;/span&gt;&lt;/p&gt; 
&lt;p style="line-height: 2"&gt;&lt;span&gt;5. 大语言模型的训练后量化算法综述 | 得物技术&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align: center"&gt;&lt;span&gt;文 / 苏黎&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align: center"&gt;&lt;span&gt;关注得物技术，每周更新技术干货&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align: center"&gt;&lt;span&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align: center"&gt;&lt;span&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18387813</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18387813</guid>
      <pubDate>Sat, 10 May 2025 03:36:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>开源 AI 客户端 Cherry Studio v1.3.3 正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Cherry Studio 是一款支持多个大语言模型（LLM）服务商的开源桌面客户端，兼容 Windows、Mac 和 Linux 系统。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-23dab8c50bfcc8126ab84229b00dbc2115c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该项目近日发布新版本 v1.3.0，包含了大量变更。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;一、新增功能亮点&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;v1.3.0 在模型支持、核心体验及界面交互等方面均有显著增强：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模型与服务商拓展：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;strong&gt;Grok / X&lt;/strong&gt;&amp;nbsp;（#5706）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增&amp;nbsp;&lt;strong&gt;n8n&lt;/strong&gt;&amp;nbsp;（含 Logo 及 URL） （#5776）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持用户&lt;strong&gt;自定义 Mini App&lt;/strong&gt;（#5731）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持&lt;strong&gt;图像编辑功能（&lt;/strong&gt;#5469）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;支持 OpenAI 最新的&amp;nbsp;&lt;strong&gt;Responses API&lt;/strong&gt;&amp;nbsp;（#5621）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;增强了 OpenRouter 中 Token 预算的计算逻辑 （#5625）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;新增 Qwen3 系列模型支持&lt;/strong&gt;&amp;nbsp;（#5533）: 紧跟模型发展趋势，集成最新的 Qwen3 系列大语言模型，为您提供更多先进模型选择。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;新增 AI Hub Mix 绘画服务商&lt;/strong&gt;&amp;nbsp;（#4503）: 绘画功能再添新翼，集成 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fideogram.ai" target="_blank"&gt;ideogram.ai&lt;/a&gt; 的商用级别模型，并有绘图，放大，混合等不同生图模式。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;新增 Bocha 网页搜索服务商&lt;/strong&gt;&amp;nbsp;（#5608）: 引入 Bocha 作为新的网页搜索选项，没错，就是 DeepSeek 官网背后的搜索提供商。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持 DashScope Reranker&lt;/strong&gt;&amp;nbsp;（#5725）: 集成 DashScope Reranker，提升搜索结果与知识匹配的相关性。后已进一步整合为通用 Reranker （#5818）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;OpenAI 服务商增强&lt;/strong&gt;：&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Claude 模型支持网页搜索&lt;/strong&gt;&amp;nbsp;（#5771）: 为 Claude 打通了网络搜索能力，确实又快又准。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gemini 安全设置调整&lt;/strong&gt;： Gemini 安全设置默认调整为关闭 （OFF），并升级了&amp;nbsp;@google/genai&amp;nbsp;依赖包 （#5763）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;MiniApps 生态扩展&lt;/strong&gt;：&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;核心交互与功能增强：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Cherry Studio 将有可能成为第一个同时支持&lt;strong&gt;函数调用 （Function Calling）&lt;/strong&gt;&amp;nbsp;和&lt;strong&gt;系统提示词 （System Prompt）&lt;/strong&gt;&amp;nbsp;（#5499）的 MCP 工具！&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;MCP 实现&lt;strong&gt;登录 Shell 环境检索&lt;/strong&gt;&amp;nbsp;（#5739），增强了与本地环境的交互能力。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;更新 MCP 自动安装服务名称及服务注册逻辑 （#5751）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;标准存储协议：FTP，HTTP，SFTP，WebDAV 等&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;对象存储服务：azblob，gcs，obs，oss，s3 等&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;文件存储服务：fs， azdfs，hdfs，webhdfs， ipfs 等&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;消费级存储服务（网盘）：Google Drive，OneDrive，Dropbox 等&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Key Value 存储服务：Memory，Redis，Rocksdb 等&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;缓存服务：Ghac，Memcached 等&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;优化知识库内容提取逻辑 （#5470） 和识别 （#5707）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;增强搜索功能，支持配置可选的 HTTP 选项 （#5765）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;网页搜索按钮新增「禁用网页搜索」选项 （#5717）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增「**导出助手 （Agent）」**功能 （#5789），方便用户分享和迁移个性化配置的助手。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;助手 （Agent） 支持配置「&lt;strong&gt;常用语」 （Regular Phrases）&lt;/strong&gt;&amp;nbsp;（#5775），并且这些常用语可以随助手一同导出 （#5836）。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;对话主题自动重命名&lt;/strong&gt;&amp;nbsp;（#5504）: MessageThunk 集成此功能，可根据助手的回答智能更新当前对话的主题名称，方便后续查找与管理。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;助手 （Agent） 能力提升&lt;/strong&gt;：&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;知识库与搜索优化&lt;/strong&gt;：&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;远程存储方案&lt;/strong&gt;：新增基于&amp;nbsp;&lt;strong&gt;OpenDAL 的远程存储类&lt;/strong&gt;&amp;nbsp;（#2700），为数据备份与同步提供了更强大和灵活的基础设施。以下方式都将成为可能：&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP （Model Control Program） 工具增强&lt;/strong&gt;：&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt 显示控制&lt;/strong&gt;&amp;nbsp;（#5439）: 新增选项，允许用户控制是否在界面中显示完整的 Prompt 内容。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;消息翻译功能增强&lt;/strong&gt;&amp;nbsp;（#5684）: 翻译后的消息旁新增了「复制」和「关闭」按钮，操作更便捷。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;模型健康检查支持流式响应&lt;/strong&gt;&amp;nbsp;（#5546）: 提升了检查效率和用户感知。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;多窗口数据同步&lt;/strong&gt;&amp;nbsp;（#5592）: 实现跨窗口状态同步，例如自定义 CSS （#5596），确保多窗口体验一致性。&lt;strong&gt;（划重点！！！多窗口！！！！！可以发挥想象了）&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;界面与视觉体验改进：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;新增界面缩放比例设置&lt;/strong&gt;&amp;nbsp;（#5665）: 用户可根据屏幕和偏好调整整体界面显示大小，同时提供本地化支持。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;引入 Motion 动画库&lt;/strong&gt;&amp;nbsp;（#5869）: 为加载指示器 （Spinner）、消息块等元素加入平滑动画效果，提升视觉反馈的细腻度。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;右键菜单新增「检查元素」选项&lt;/strong&gt;&amp;nbsp;（#5807）: 并支持本地化，方便开发者和高级用户调试。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;引用列表样式调整&lt;/strong&gt;&amp;nbsp;（#5516）: 对引用信息的展示样式进行了优化。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;工具调用结果展示样式优化&lt;/strong&gt;&amp;nbsp;（#5758）:&amp;nbsp;的结果显示更加清晰易读。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;开发者与高级用户选项：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;支持自定义助手地址&lt;/strong&gt;&amp;nbsp;（#5540）: 允许用户指定私有或第三方助手服务的 API 地址。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;新增开发文档&lt;/strong&gt;&amp;nbsp;（#5476）: 添加了&amp;nbsp;messageBlock、messageThunk&amp;nbsp;和&amp;nbsp;useMessageOperations&amp;nbsp;的使用指南，方便二次开发或插件贡献者。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;主窗口监视器&lt;/strong&gt;&amp;nbsp;（#5532）: WindowService 新增了对渲染进程事件的主窗口监视器功能。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;消息完成事件&lt;/strong&gt;&amp;nbsp;（#5696）: 现在会在消息处理完成时发出事件，供其他模块或插件监听。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;二、重要优化与重构&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;为了提升应用的整体性能和可维护性，我们进行了多项底层重构和专项优化：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;网络搜索模块重构&lt;/strong&gt;&amp;nbsp;（#5291）: 全面重构了网络搜索模块，显著提升了其易用性和稳定性，并支持通过快捷菜单快速切换搜索引擎。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;消息块 （Message Block） 结构与渲染优化&lt;/strong&gt;🎉&lt;/p&gt; &lt;p&gt;&lt;strong&gt;大活儿敲黑板！！&lt;/strong&gt;！Message Block 重构将为 MCP 调用，workflow/agent 运行，带来更强的扩展性，大家可以猜 Cherry Studio 接下来的方向了！&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;对消息块结构进行了重构 （#4660，&amp;nbsp;#5536），使其更加清晰和易于扩展。&lt;/li&gt; 
   &lt;li&gt;优化了消息块的渲染性能，例如通过&amp;nbsp;useMemo&amp;nbsp;缓存图像块组，减少不必要的重复渲染 （#5722）。&lt;/li&gt; 
   &lt;li&gt;增强了图片块的渲染逻辑和样式 （#5567）。&lt;/li&gt; 
   &lt;li&gt;优化主文本块 （MainTextBlock） 内容处理，如忽略&amp;nbsp;tool_use&amp;nbsp;标记以改善特定场景的显示 （#5483）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;性能提升专项&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;优化&amp;nbsp;标签的显示性能 （#5489）。&lt;/li&gt; 
   &lt;li&gt;改进输入框长文本粘贴性能 （#5580） 及按钮状态记忆 （#5577）。&lt;/li&gt; 
   &lt;li&gt;为快捷面板 （Quick Panel） 和模型选择弹窗 （SelectModelPopup） 引入&lt;strong&gt;虚拟列表 （Virtual List）&lt;/strong&gt; （#5594），大幅提升了在项目或模型数量较多时的加载和滚动性能。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;架构与代码质量&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;窗口管理优化&lt;/strong&gt;： 分离 MiniWindow 与 MainWindow 的加载逻辑 （#5581）；优化 WindowService 中右键菜单的设置 （#5589） 和标题栏样式及主题切换逻辑 （#5633）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;文本处理中间件&lt;/strong&gt;： 新增&amp;nbsp;extractReasoningMiddleware&amp;nbsp;（#5637） 以增强对文本中推理过程的提取与处理。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;代码清理&lt;/strong&gt;： 移除了未使用的选择窗口 （#5586）、冗余的局部变量 （#5654）、调试日志 （#5722） 及无用文档 （#5740），精简了代码库。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;自定义 CSS 功能简化&lt;/strong&gt;： 通过新引入的跨窗口状态同步机制，简化了自定义 CSS 的实现 （#5596）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;模型列表样式优化&lt;/strong&gt;： 改进了模型列表的视觉样式和分组逻辑 （#5674）。&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;API/模型检查逻辑优化&lt;/strong&gt;： 在检查 API 或模型可用性时，优先尝试启用流式传输的检查方式 （#5857）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;三、关键问题修复&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我们细致排查并修复了大量用户反馈及内部测试发现的问题，以下列举部分代表性修复：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;消息与知识库&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;修复了消息在特定情况下未使用到知识库内容的问题 （#5485）。&lt;/li&gt; 
   &lt;li&gt;修复了知识库 URL 错误 （#5735） 和引用列表加载相关问题 （#5742）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP 与工具调用&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;修复了 MCP 调用失败时，错误类型无法正确显示的问题 （#5492）。&lt;/li&gt; 
   &lt;li&gt;改进了 MCP 工具错误消息的格式化和响应处理 （#5565）。&lt;/li&gt; 
   &lt;li&gt;修复了连接 OAuth MCP 服务器失败的问题 （#5709）。&lt;/li&gt; 
   &lt;li&gt;修正了&amp;nbsp;MessageTools&amp;nbsp;中输入 schema 引用的问题，确保工具定义准确性 （#5804）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模型与服务商相关&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;修复了 Gemini 画图功能，并调整了默认图片高度 （#5585，&amp;nbsp;#5658）。&lt;/li&gt; 
   &lt;li&gt;修复了 Qwen3 模型检查逻辑 （#5811） 和思考模式切换的相关问题 （#5781&amp;nbsp;的补充修复）。&lt;/li&gt; 
   &lt;li&gt;修复了 OpenAI Provider 超时参数非整数的问题 （#5681）。&lt;/li&gt; 
   &lt;li&gt;处理了 Anthropic 服务商中 Base64 文件通过 IPC 和文件管理的问题 （#5595）。&lt;/li&gt; 
   &lt;li&gt;修复 Jina Embedding 错误 （#5839）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;界面与交互&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;修复了 TopicsTab 中使用&amp;nbsp;onMouseEnter&amp;nbsp;可能导致的问题，改为&amp;nbsp;onContextMenu&amp;nbsp;（#5459）。&lt;/li&gt; 
   &lt;li&gt;修复了中止操作时意外覆盖 Block 状态的问题 （#5547）。&lt;/li&gt; 
   &lt;li&gt;修复了流式响应中&amp;nbsp;thinking&amp;nbsp;状态刷新不及时的问题 （#5557），以及&amp;nbsp;resetHasReasoningContent&amp;nbsp;的逻辑 （#5563）。&lt;/li&gt; 
   &lt;li&gt;确保&amp;nbsp;messageThunk&amp;nbsp;中只有在响应中不存在用量信息时才估算用量 （#5553）。&lt;/li&gt; 
   &lt;li&gt;修复了暗黑主题下引用列表显示问题及 URL 重复请求的问题 （#5752）。&lt;/li&gt; 
   &lt;li&gt;修复了文件页面滚动条异常 （#5619， 对应 #5618）。&lt;/li&gt; 
   &lt;li&gt;修复了代码块不必要的边框和圆角 （#5773）。&lt;/li&gt; 
   &lt;li&gt;修复了输入框在特定情况下&amp;nbsp;isComposing&amp;nbsp;状态判断不准 （#5848） 及焦点获取 （#5860）、选区重置的问题 （#5866）。&lt;/li&gt; 
   &lt;li&gt;修复了 SelectModelPopup 中列表吸顶 （#5795） 和滚动行为 （#5812）。&lt;/li&gt; 
   &lt;li&gt;修复了条件性显示「加载更多」微调器 （spinner） 的逻辑 （#5670） 和无限滚动布局 （#5671）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;功能性修复&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;修复了&amp;nbsp;messageThunk&amp;nbsp;中重置消息逻辑，确保包含模型信息 （#5632）。&lt;/li&gt; 
   &lt;li&gt;修复了 WebDAV 本地备份文件存储路径错误的问题 （#5643）。&lt;/li&gt; 
   &lt;li&gt;规范化模型 ID 为小写，确保一致性 （#5642）。&lt;/li&gt; 
   &lt;li&gt;修复了「网页搜索」和「清除上下文」在某些情况下不工作的问题 （#5677）。&lt;/li&gt; 
   &lt;li&gt;修复了&amp;nbsp;StoreSyncService&amp;nbsp;在注册 IPC 处理器时设置标志的 bug （#5715）。&lt;/li&gt; 
   &lt;li&gt;修复了聊天消息翻译的问题 （#5682）。&lt;/li&gt; 
   &lt;li&gt;确保在创建消息块时包含&amp;nbsp;thinking_millsec&amp;nbsp;（#5685）。&lt;/li&gt; 
   &lt;li&gt;修复了记忆助手时未同时记忆所选模型的问题 （#5701）。&lt;/li&gt; 
   &lt;li&gt;修复了 MCP 服务器类型判断逻辑 （#5769）。&lt;/li&gt; 
   &lt;li&gt;修复了从 MCP 响应中显示图片的问题 （#5780）。&lt;/li&gt; 
   &lt;li&gt;修复了用户消息用量统计错误 （#5657）。&lt;/li&gt; 
   &lt;li&gt;修复了一系列下一版本（指 1.3.0）发布前的各类小问题 （#5801）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;四、其他更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;国际化 （i18n）&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;补充了俄语缺失的翻译 （#5631）。&lt;/li&gt; 
   &lt;li&gt;更新了多语言机器翻译文本，采用 Qwen3 236B 模型进行翻译 （#5840）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;升级&amp;nbsp;electron-updater&amp;nbsp;至 v6.6.4 并移除了相关补丁 （#5650）。&lt;/li&gt; 
   &lt;li&gt;升级&amp;nbsp;electron-builder&amp;nbsp;至 v26.0.15 （#5651）。&lt;/li&gt; 
   &lt;li&gt;这些更新有助于提升应用的底层稳定性和打包效率。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文档&lt;/strong&gt;： 
  &lt;ul&gt; 
   &lt;li&gt;新增了项目**架构概览文档** （#5824）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Cherry Studio v1.3.0 是一次包含了大量改进的综合性版本更新，不仅致力于新的功能，更持续投入前瞻的技术路线，并积极修复各类已知问题。都旨在提供一个更加先进，稳定，高效且易于使用的 AI 交互与管理平台。&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCherryHQ%2Fcherry-studio%2Freleases%2Ftag%2Fv1.3.3" target="_blank"&gt;https://github.com/CherryHQ/cherry-studio/releases/tag/v1.3.3&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350183/cherry-studio-1-3-3</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350183/cherry-studio-1-3-3</guid>
      <pubDate>Sat, 10 May 2025 03:27:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Dify.AI 开源两周年更新品牌形象，坚持「让每一个想法变成 AI Agent」的使命</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;开源 AI 应用开发平台 Dify.AI &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdify.ai%2Fblog%2Four-vision-takes-shape-imagine-if" target="_blank"&gt;迎来了两周年&lt;/a&gt;。在庆祝之际，Dify 发布了全新的品牌形象和外观。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/111845_qi60_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a96b9b86bb6e4f0894313ba038203e4ef27.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Dify 的使命保持不变，即让每一个想法都能变成 AI Agent。新的品牌口号强调&lt;strong&gt;「如果」你能想到，通过 Dify 你就能构建它&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/111557_HOat_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350181</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350181</guid>
      <pubDate>Sat, 10 May 2025 03:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Ollama 发布 v0.7.0，增强多模态能力并引入多项优化</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Ollama v0.7.0 已发布，带来了显著的功能增强和性能优化，引入了新引擎支持多模态模型，并支持 WebP 图像作为输入。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2Flibrary%2Fllama4" target="_blank"&gt;Meta Llama 4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2Flibrary%2Fgemma3" target="_blank"&gt;Google Gemma 3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2Flibrary%2Fqwen2.5vl" target="_blank"&gt;Qwen 2.5 VL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2Flibrary%2Fmistral-small3.1" target="_blank"&gt;Mistral Small 3.1&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2Fsearch%3Fc%3Dvision" target="_blank"&gt;以及更多视觉模型&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-1544228c9bc0e0796a2f5bdf0b0f977cc61.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;其他更新内容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 Windows 上运行模型出现的空白终端窗口&lt;/li&gt; 
 &lt;li&gt;修复&amp;nbsp;&lt;code&gt;NVIDIA GPU&lt;/code&gt;&amp;nbsp;运行&amp;nbsp;&lt;code&gt;Llama 4&lt;/code&gt;&amp;nbsp;的错误&lt;/li&gt; 
 &lt;li&gt;优化&amp;nbsp;&lt;code&gt;ollama run&lt;/code&gt;&amp;nbsp;发送图片时去除引号&lt;/li&gt; 
 &lt;li&gt;提升&amp;nbsp;&lt;code&gt;ollama create&lt;/code&gt;&amp;nbsp;导入&amp;nbsp;&lt;code&gt;safetensors&lt;/code&gt;&amp;nbsp;模型性能&lt;/li&gt; 
 &lt;li&gt;提升&amp;nbsp;&lt;code&gt;Qwen3 MoE&lt;/code&gt;&amp;nbsp;在&amp;nbsp;&lt;code&gt;macOS&lt;/code&gt;&amp;nbsp;上的提示处理速度&lt;/li&gt; 
 &lt;li&gt;修复结构化输出请求中大型&amp;nbsp;&lt;code&gt;JSON&lt;/code&gt;&amp;nbsp;模式导致错误&lt;/li&gt; 
 &lt;li&gt;API 对不允许方法返回&amp;nbsp;&lt;code&gt;405&lt;/code&gt;&amp;nbsp;错误码&lt;/li&gt; 
 &lt;li&gt;以及修复模型卸载后进程持续运行的问题&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;Ollama 是一个开源的本地大语言模型运行框架，简化了利用 llama.cpp 后端运行各种 LLM 以及与其他桌面软件方便集成的过程，为普通用户提供简单易用的大语言模型（LLM）的本地部署和管理。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;它支持多种先进的模型，如 LLaMA、DeepSeek、Mistral 等，并提供简单易用的界面和 API。Ollama 的特点包括轻量级设计、跨平台支持（Windows、Linux、macOS）、模型微调与自定义功能，以及高效的推理性能。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;由于其便捷性和开源特性，Ollama 获得了大量用户的青睐，被广泛用于本地部署 DeepSeek 等大模型。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0304/120325_4P9T_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;下载地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Follama%2Follama%2Freleases%2Ftag%2Fv0.7.0" target="_blank"&gt;https://github.com/ollama/ollama/releases/tag/v0.7.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350178/ollama-0-7-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350178/ollama-0-7-0</guid>
      <pubDate>Sat, 10 May 2025 03:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Meta 推迟发布旗舰级 AI 模型 Behemoth</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2FLocalLLaMA%2Fcomments%2F1knh1yd%2Fmeta_delaying_the_release_of_behemoth%2F" target="_blank"&gt;根据《华尔街日报》的独家报道&lt;/a&gt;&lt;/u&gt;，Meta 推迟了其旗舰级 AI 模型 Behemoth 的发布计划，因为担心它可能不足以超越之前的模型。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img height="728" src="https://static.oschina.net/uploads/space/2025/0516/110114_Pa6U_2720166.png" width="1264" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;报道称，《Behemoth》预计将于秋季甚至更晚发布。它原定于上个月与 Meta 的 Llamacon 活动同时发布，后来被推迟到六月。该公司也有可能加快 Behemoth 的有限发布速度。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-723de3325b3806234d8d9a1c426f8427caf.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Meta 在其人工智能项目上投入了数百亿美元，直到最近，它才取得了快速进展，赶上了谷歌和 OpenAI 等竞争对手。Meta 的失望反映了人工智能行业内部更广泛的担忧，即依赖于扩大模型的进步可能会陷入停滞。&lt;/p&gt; 
&lt;p style="color:#31424e; margin-left:0; margin-right:0; text-align:start"&gt;OpenAI 在推出 GPT 4.0 之后的一体化下一代大型模型方面面临着诸多障碍。因此，这家 ChatGPT 开发者推出了一系列独立的模型，其中一些专注于推理，另一些专注于编码和技术工作。据报道，谷歌和 Anthropic 在最近训练最大模型的努力中也遇到了挫折。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350173/meta-is-delaying-release-its-behemoth-ai-model</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350173/meta-is-delaying-release-its-behemoth-ai-model</guid>
      <pubDate>Sat, 10 May 2025 03:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>阿里：AI 将通过云端涉及各行各业</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;5 月 15 日，阿里巴巴集团公布 2025 财年第四季度及全年业绩。 &amp;nbsp; &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0516/104842_qqHa_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根据财报，截至 2025 年 3 月 31 日止季度，收入为人民币 2364.54 亿元（325.84 亿美元），同比增长 7%。经营利润为人民币 284.65 亿元（39.23 亿美元），同比增长 93%；归属于普通股股东的净利润为人民币 123.82 亿元（17.06 亿美元）；净利润为人民币 119.73 亿元（16.50 亿美元），同比增长 1203%。&lt;/p&gt; 
&lt;p&gt;截至 2025 年 3 月 31 日止财务年度，收入为人民币 9963.47 亿元（1373.00 亿美元），同比增长 6%；经营利润为人民币 1,409.05 亿元（194.17 亿美元），同比增长 24%；归属于普通股股东的净利润为人民币 1294.70 亿元（178.41 亿美元）；净利润为人民币 1259.76 亿元（173.60 亿美元），同比增长 77%。2025 财年的非公认会计准则净利润为人民币 1581.22 亿元（217.90 亿美元），相较于 2024 财年的人民币 1574.79 亿元保持平稳。&lt;/p&gt; 
&lt;p&gt;其中阿里云表现突出：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;截至 2025 年 3 月 31 日止的季度，阿里云收入 301.27 亿元同比增长 18%，AI 相关收入连续七个季度三位数增长。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;阿里方面表示，&lt;strong&gt;这一增长势头主要由更快的公共云收入增长带动，包括 AI 相关产品的采用增加&lt;/strong&gt;。AI 相关产品在众多的行业垂直领域获得更广泛应用，包括互联网、零售、制造业和媒体，并越来越侧重于增值应用。&lt;/p&gt; 
&lt;p&gt;而在随后的财报分析师电话会上，阿里云表示，目前仍有很多中小企业或者个人商户需要应用 AI，但本地布局成本较高，随着 AI 的强大动力搬迁至云端，像养殖业、制造业，甚至是义乌小商品城，都能够通过云端进行 AI 布局从而帮助自身。&lt;/p&gt; 
&lt;p&gt;阿里进一步表示，未来几个季度阿里云的营收增速还在处于一个上升通道。其认为，基于传统的 CPU 的计算在转向 AI 计算，就现在看到的情况而言，阿里云对未来几个季度阿里云的营收增速还在处于一个上升通道，还是抱有一个比较强的信心。&lt;/p&gt; 
&lt;p&gt;值得一提的是，今年 2 月阿里巴巴集团 CEO 吴泳铭宣布，未来三年，阿里将投入超过 3,800 亿元，用于建设云和 AI 硬件基础设施，总额超过去十年总和。&lt;/p&gt; 
&lt;p&gt;阿里云方面也强调，&lt;strong&gt;其正以 AI 为中心，全面重构底层硬件、计算、存储、大数据等各方面，并与 AI 场景有机适配、融合，加速模型的开发和应用，打造一个 AI 时代的最强 AI 基建&lt;/strong&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350167</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350167</guid>
      <pubDate>Sat, 10 May 2025 02:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软 Copilot 应用开始支持「Hey Copilot」语音唤醒词</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微软于 5 月 14 日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2025%2F05%2F14%2Fcopilot-on-windows-hey-copilot-begins-rolling-out-to-windows-insiders%2F" target="_blank"&gt;发布博文&lt;/a&gt;，邀请 Windows Insider 项目成员测试新版 Microsoft Copilot 应用程序（版本 1.25051.10.0 及以上）。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5a34382c61b9b7b18278a027534f39f7e0d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;用户在新版 Copilot 应用中启用相关选项后，可通过「Hey Copilot」唤醒词，在 PC 解锁且功能开启时、唤醒 Copilot 开启 AI 聊天，无需点击或输入。微软表示，用户在工作或思考时无需手动操作，即可获得帮助。&lt;/p&gt; 
&lt;p&gt;提问时，屏幕会显示 Copilot 麦克风图标，并伴随提示音，表明 Copilot 正在倾听。结束对话可点击 X 按钮，或在几秒无交互后自动结束，并发出确认音。&lt;/p&gt; 
&lt;p&gt;微软强调，设备仅在本地识别唤醒词，采用 10 秒内存音频缓冲区，不录音或本地存储数据。一旦识别到唤醒词，Copilot Voice 浮动界面将出现，随后音频会传输至云端处理用户请求。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350160/copilot-on-windows-hey-copilot</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350160/copilot-on-windows-hey-copilot</guid>
      <pubDate>Sat, 10 May 2025 02:17:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>雷军：小米自研手机 SoC 芯片「玄戒 O1」将于 5 月下旬发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;小米集团创始人雷军发布微博透露，造芯十年，小米自主研发设计的手机 SoC 芯片名字叫「玄戒 O1」，将在 5 月下旬发布。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;和大家分享一条消息：&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;小米自主研发设计的手机 SoC 芯片，名字叫，玄戒 O1，即将在 5 月下旬发布。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style="color:#000000"&gt;感谢大家支持！&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="266" src="https://oscimg.oschina.net/oscnet/up-a36d75d9b55368c7956744282be4ebb4cec.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="274" src="https://oscimg.oschina.net/oscnet/up-4d662277ff9587e8953da3929f020383f21.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;对此，人民网也发文点评称：「最近一年，小米在新能源汽车、国产芯片等领域接连带来突破创新。这证明了，只要坚定实干，就没有不可逾越的高山；只要奋起直追，后来者永远有机会。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="332" src="https://oscimg.oschina.net/oscnet/up-5bd8371176fd6755e7b2635cd8c858f5fce.png" width="500" referrerpolicy="no-referrer"&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/350157</link>
      <guid isPermaLink="false">https://www.oschina.net/news/350157</guid>
      <pubDate>Sat, 10 May 2025 02:13:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
