<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 01 May 2024 17:22:54 GMT</lastBuildDate>
        <ttl>1</ttl>
        <item>
            <title>兰雅 CorelDRAW 插件 2024.5.1 国际劳动节版，免费下载</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#3c4858; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;726&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-737741fe7c3ff886ec67d8e1f0c0b3b0b4a.png&quot; width=&quot;1102&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#3c4858; margin-left:0; margin-right:0; text-align:start&quot;&gt;我是兰雅，是一位开源软件作者，从事平面设计 23 年工作。&lt;br&gt; 我的业余爱好: 编写和分享代码，分享学习经验，驾驶手动挡以及分享驾驶经验。&lt;/p&gt; 
&lt;p style=&quot;color:#3c4858; margin-left:0; margin-right:0; text-align:start&quot;&gt;现在临近 2024 年五一劳动节，我很荣幸向大家介绍自己编写的一款开源软件:&lt;br&gt; 兰雅 CorelDRAW 插件，国际劳动节版&lt;br&gt; 这款插件结合了我从事平面设计多年操作习惯和群里很多行业专家的指导意见，&lt;br&gt; 以及倾注了大量的智慧和精力，编写大 2 年时间，才有这样的成果。&lt;br&gt; 同时我要感谢热心捐赠的许多网友，为开源软件项目的发展和持续改进做出贡献，&lt;br&gt; 并帮助保持插件的自由性和开放性。&lt;/p&gt; 
&lt;p style=&quot;color:#3c4858; margin-left:0; margin-right:0; text-align:start&quot;&gt;下面介绍这款永久免费开源开放软件的安装和简单使用。&lt;br&gt; 如视频看到，只要点击 Lanya_CorelVBA.exe 就可以安装到 CorelDRAW 的 GMS 目录.&lt;br&gt; 然后开启脚本管理面板，找到 LYVBA 项目下的 Start，就可以打开插件主工具栏。&lt;br&gt; 你也可以把 Start 设置成一个图标，拉到 CDR 软件的工具栏上。&lt;br&gt; 你也可以直接双击 LYVBA 项目下的其他模块，直接启动单独的工具。&lt;br&gt; 比如双击 Start_Dimension 就可以直接开启，批量标注尺寸增强版。&lt;/p&gt; 
&lt;p style=&quot;color:#3c4858; margin-left:0; margin-right:0; text-align:start&quot;&gt;兰雅 CorelVBA 插件目前支持中英文双语，可以点击彩色的多国语言图标切换。&lt;br&gt; 本介绍视频就是在 Windows11 英文系统下测试安装和测试使用&lt;/p&gt; 
&lt;p style=&quot;color:#3c4858; margin-left:0; margin-right:0; text-align:start&quot;&gt;本开源软件项目在 github 上开源，做到了同类软件中许多创新，而同时保持简单简洁。&lt;br&gt; 适合业余编程的爱好者用来学习提高。&lt;br&gt; 最后感谢大家的支持，它将有助于 &quot;兰雅 CorelVBA 工具&quot; 的后续开发。&lt;br&gt; 再次感谢您的支持， 兰雅 sRGB(兰公子)&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290427</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290427</guid>
            <pubDate>Wed, 01 May 2024 01:53:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Arc Browser for Windows 1.0 正式 GA</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Arc 浏览器正式面向所有 Windows 11 用户开放（&lt;span style=&quot;background-color:rgba(255, 255, 255, 0.65); color:#151631&quot;&gt;只支持 Windows 11，&lt;/span&gt;对 Windows 10 的支持还在开发中）。该浏览器开发商 The Browser Company 于去年 12 月开始测试 Windows 客户端，目前已有超过 15 万人在使用。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af74704e8366ce44ddedb856ac698b904b4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;下载地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farc.net%2Fdownloaded&quot; target=&quot;_blank&quot;&gt;https://arc.net/downloaded&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Arc 浏览器基于 Chromium 内核，默认采用竖直标签格局，支持 Chrom/Edge 扩展。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;按照官方介绍，Arc 旨在成为一个 「万维网的操作系统」，并试图将网页浏览与内置应用程序和功能整合在一起。其内置的功能包括虚拟记事本、拼贴风格的 「easel」 和 「boosts」，该功能允许用户美化和重新设计网站界面。Arc 的选项卡垂直排列在侧边栏中，侧边栏包含除浏览窗口之外的所有浏览器功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-34b7b76a856863e0f84e96557bd15c058e6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Arc 浏览器最大的不同就是引入了「Space」概念（类似于「Groups」），用户可以创建不同的 「Space」来满足不同场景的浏览需求，每个 Space 下的网址集合可以一次性分享给他人。&lt;/p&gt; 
&lt;p&gt;如果想从 Edge 切换到不同的浏览器，又不想使用 Chrome，那么可以试试 Arc。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3ba33bd9e2db671764e1e998eb0e604368e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Windows 版本功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Windows 上的 Arc 具有 Mac 版本的部分核心功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;侧边栏，可将最常用的网页固定在顶部&lt;/li&gt; 
 &lt;li&gt;&quot;空间&quot;，就像文件夹一样，可为不同任务设置不同的标签页，如&quot;工作&quot;、&quot;娱乐&quot;、&quot;度假&quot;和&quot;记事&quot;&lt;/li&gt; 
 &lt;li&gt;用于分离浏览数据和偏好设置的配置文件&lt;/li&gt; 
 &lt;li&gt;用于在单个窗口中打开多个标签页的分割视图&lt;/li&gt; 
 &lt;li&gt;以及对画中画视频播放器的支持，这样你就可以在观看视频片段时查看其他标签页。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;1006&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3f56be7250030dbc6c2082e925059c7fa5f.png&quot; width=&quot;1718&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4794ad9776bd349faabb19a88bddcff1503.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9bf0ab22f0a318ed3930ac1b3cdcf543d79.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-29b00944de6de2f49dc0f06f1d69ab232ac.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Arc Browser 开发商采用 Swift 构建 Windows 版本，目的是为了与 Mac 版本重用和共享大部分代码库。Swift 是苹果公司最初为开发 iPhone 和 Mac 应用程序而设计的编程语言。在 Windows 上使用 Swift 将使未来保持功能均等变得更加容易。该公司还撰写了大量文章介绍其在 Windows 上使用 Swift 构建应用程序的经验，以帮助开发人员移植 Mac 应用程序。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290493/arc-for-windows-1-0-ga</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290493/arc-for-windows-1-0-ga</guid>
            <pubDate>Tue, 30 Apr 2024 14:32:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>中国码农的「35 岁魔咒」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;34 岁的老白在短视频应用快手的工作岌岌可危的第一个迹象，是其一位 35 岁同事被解雇。&lt;/p&gt; 
&lt;p&gt;「既震惊又焦虑」， 老白说，他使用暱称以免遭到前雇主的报复。这位开发人员距离 35 岁生日只有几个月，就被解雇了，成为公司内部称为「石灰石」的重组的又一个牺牲品。据五名前任和现任员工透露，快手正在推出 35 岁左右的初级员工。快手被告知，他的解雇是公司整体裁员计划的一部分。快手拒绝置评。&lt;/p&gt; 
&lt;p&gt;所谓「35 岁门槛」长期困扰着白领职业的工人，人们普遍认为年长的员工由于家庭责任而更不愿意加班。&lt;/p&gt; 
&lt;p&gt;随着中国科技行业因北京的监管整顿和经济放缓而陷入困境，过去几个月来数以万计的就业岗位被裁撤，中年员工被认为尤其脆弱。科技公司毫不掩饰地更青睐年轻和未婚的员工。&lt;/p&gt; 
&lt;p&gt;「科技行业中的年龄歧视是一个大问题」，总部位于北京的劳工律师杨宝泉说，「一种观点认为，年长的员工无法跟上最新的技术发展，他们没有精力继续努力工作，而且他们太贵了。」&lt;/p&gt; 
&lt;p&gt;虽然中国劳动法禁止雇主基于种族、性别和宗教等属性歧视员工，但并未明确提及年龄。但杨律师表示，一些人将该法律解释得更广泛，禁止歧视老年人，这意味着雇主不会明确引用年龄作为解雇理由。&lt;/p&gt; 
&lt;p&gt;中国科技公司的高管们长期以来公开表示他们更喜欢年轻员工。2019 年，腾讯总裁刘炽平宣布了一项重组公司 10% 管理人员的计划，称「他们的工作将由更年轻的人、可能更富有激情的新同事接替」。百度首席执行官李彦宏在 2019 年的一封内部信中 (也于当年公开) 宣布了公司「通过提拔更多 1980 年后和 1990 年后出生的员工变得更加年轻」 的计划。&lt;/p&gt; 
&lt;p&gt;这种想法在大多数科技公司根深蒂固。&lt;/p&gt; 
&lt;p&gt;「20 到 30 岁之间，大多数人精力充沛。你更愿意为公司勇往直前、牺牲自己。但是一旦你成为父母，身体开始老化，你将如何跟上 996 的工作日程？」 一名前美团销售经理说，他指的是中国科技行业臭名昭著的每周工作六天，早上 9 点到晚上 9 点的工作制度。&lt;/p&gt; 
&lt;p&gt;数据显示， 字节跳动和电子商务巨头拼多多是中国科技公司中最年轻的招聘公司之一。据职场社交网站脉脉 2020 年的最新数据，其员工的平均年龄为 27 岁。脉脉数据还显示，快手员工的平均年龄为 28 岁，滴滴出行员工的平均年龄为 33 岁。据中华全国总工会统计，中国劳动者的平均年龄为 38.3 岁。&lt;/p&gt; 
&lt;p&gt;随着科技行业一波又一波的裁员潮 (由经济放缓和监管问题驱动)，这种趋势变得更加根深蒂固。&lt;/p&gt; 
&lt;p&gt;快手自 2021 年在香港上市以来的股价已下跌 88%，根据其最新财报，其员工总数在 2021 年 12 月 (当时拥有 2.8 万名员工) 和 2023 年 6 月之间减少了 16%。&lt;/p&gt; 
&lt;p&gt;「科技行业在疫情之前扩张得太快，然后政府的监管整顿开始了。我们现在正在削减昂贵的中层管理人员」， 另一家互联网公司的一位经理说。&lt;/p&gt; 
&lt;p&gt;「35 岁门槛」 是科技工作者焦虑的主要来源。招聘平台拉勾找聘去年的一项调查发现，87% 的程序员「非常担心」在 35 岁之后被解雇或找不到新工作。&lt;/p&gt; 
&lt;p&gt;杨律师表示，35 岁以上的人失业后很难找到新工作。&lt;/p&gt; 
&lt;p&gt;中国许多公务部门的录用考试都将年龄限制在 35 岁以下。服务行业 (包括餐馆和酒店) 的招聘广告也更想要年轻的求职者。这使得 30 多岁的科技员工在更换职业或在职位之间寻找临时工作机会时几乎没有选择余地。&lt;/p&gt; 
&lt;p&gt;一位 38 岁的程序员最近从一家主要叫车集团被解雇，他说找新工作很困难。「就业市场非常糟糕，甚至比去年还要糟糕，尤其是对我这样的老工程师来说」，他说。&lt;/p&gt; 
&lt;p&gt;最终，老白觉得自己是幸运的少数人之一。&lt;/p&gt; 
&lt;p&gt;「我有两个孩子，我的妻子不再工作。当时另一家科技公司只招聘一个管理职位，我很幸运地得到了它。如果没有这个机会，我就会像许多前快手员工一样失业。」&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本文转载自&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjandan.net%2Fp%2F116321%23%2F&quot; target=&quot;_blank&quot;&gt; 煎蛋&lt;/a&gt;，译者：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjandan.net%2Fp%2Fauthor%2Fbali&quot; target=&quot;_blank&quot;&gt;BALI&lt;/a&gt;&lt;br&gt; 英文原文：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2F5cf306ad-3a39-4357-b7b3-1d2644bb13a7&quot; target=&quot;_blank&quot;&gt;FT&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290381</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290381</guid>
            <pubDate>Tue, 30 Apr 2024 11:20:44 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>开源日报 | 微软挤兑 Chrome；阳痿中年的福报玩具；神秘 AI 能力太强被疑 GPT-4.5；通义千问 3 个月开源 8 模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.4.30&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F-ttauVzyVnFKij2jwNbWag&quot; target=&quot;_blank&quot;&gt;神秘大模型性能超越很多开源模型和 GPT-4&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;就在昨夜，整个 AI 社区都被一个神秘大模型震撼到了：它名为 gpt2-chatbot，性能直接超越很多开源模型和 GPT-4！网友们展开猜测，有说它是 GPT-4.5 的，有说是 GPT-5 的，还有人猜它是 GPT-4+Q*，或 GPT-2+Q*。奥特曼也卖起了关子：「我确实对 gpt-2gpt2 情有独钟。」&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8c67a4262b67d0cfce83895ad686bef60da.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/290276/ubuntu-24-10-codename-oracular-oriole&quot;&gt;Ubuntu 24.10 代号为 &quot;Oracular Oriole&quot;&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Ubuntu 24.04 LTS 才刚刚&lt;a href=&quot;https://www.oschina.net/news/289586/ubuntu-24-04-noble-numbat-lts&quot;&gt;发布&lt;/a&gt;，下一个版本 Ubuntu 24.10 近日也已确定了代号 ——&amp;nbsp;Oracular Oriole（神谕黄鹂）。Ubuntu 24.10 大概率会采用 Linux 6.11 内核、GNOME 47 桌面、GCC 14.1 编译器以及其他升级。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-534454039ec76beda91938adbea74fb9f06.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pingwest.com%2Fa%2F294639&quot; target=&quot;_blank&quot;&gt;通义千问开源王炸，1100 亿参数称霸开源榜单，中文能力全球第一&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;一款开源模型火不火，看生态中的产品对他的支持有多快就知道了。&lt;/p&gt; 
&lt;p&gt;4 月 26 日，通义千问一言不合又开源了，直接甩出 1100 亿参数的王炸模型 Qwen1.5-110B ，刷新开源模型性能新高。模型发布还不到 24 小时，Ollama 便火速上线了对 110B 的支持。这意味着你除了在魔搭社区和 HuggingFace 上白嫖 Demo 以外，能在模型发布的第一时间，就将它部署到你自己的电脑上。&lt;/p&gt; 
&lt;p&gt;在发布当天，Qwen1.5-110B 占领了 Hacker News 热度榜首一段时间，上一次有这么多热度和讨论，还是去年 8 月通义千问首次宣布开源的时候。不过，人们讨论的方向，已经从当时的「这是什么？」转变为认真的讨论「这有多强？」。质疑的噪声随着 Qwen 的实力增强逐渐消散。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-84d884b94aed857c096f07ed8db1c65faaa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOc5bSoLv0&quot; target=&quot;_blank&quot;&gt;神秘 AI 能力太强被疑 GPT-4.5&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;一个神秘模型突然杀入众人视野，能力超越一众开源模型，甚至包括 GPT-4。几乎所有人都在谈论它，服务器都被挤爆了。&lt;/p&gt; 
   &lt;p&gt;它就是「gpt2-chatbot」。（注意啊，是 gpt2 不是 GPT-2）&lt;/p&gt; 
   &lt;p&gt;它有多强？IMO 国际数学奥林匹克竞赛的题目，一次答对。&lt;/p&gt; 
   &lt;p&gt;在 GPT-4 标志性能力「画独角兽」上，还能轻松秒杀 LLaMA-3-70B。&lt;/p&gt; 
   &lt;p&gt;推理方面更是表现出了惊艳效果，常见逻辑陷阱可以轻松绕过，而且回答时还带有合适的语气。&lt;/p&gt; 
   &lt;p&gt;如此好的表现，但是又没明说身份……&lt;/p&gt; 
   &lt;p&gt;这不是更让大伙兴奋了！&lt;/p&gt; 
   &lt;p&gt;难道是传说中的 GPT-4.5？&lt;br&gt; &amp;nbsp;&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5955106173%2FOc1hU88Zh&quot; target=&quot;_blank&quot;&gt;阳痿中年的福报玩具&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4461a461b7399c4e4b4bf971466c325cc3f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;stage1st 宅社区&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOc74bhfqU&quot; target=&quot;_blank&quot;&gt;通义千问 3 个月开源 8 模型&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;开源大模型，已经开启大卷特卷模式。&lt;/p&gt; 
   &lt;p&gt;全球范围，太平洋两岸，双雄格局正在呼之欲出。&lt;/p&gt; 
   &lt;p&gt;Llama 3 中杯大杯刚惊艳亮相，国内通义千问就直接开源千亿级参数模型 Qwen1.5-110B，一把火上 Hacker News 榜首。&lt;/p&gt; 
   &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a3c42833259d703ffb1e7e26f56b8eb46d7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;p&gt;不仅相较于自家 720 亿参数模型性能明显提升，在 MMLU、C-Eval、HumanEval 等多个基准测试中，Qwen1.5-110B 都重返 SOTA 开源模型宝座，超越 Llama 3 70B，成最强开源大模型。&lt;/p&gt; 
   &lt;p&gt;值得关注的是，这已经是 3 个月内通义千问开源的第 8 款大模型。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1806446424%2FOc5AWqwxC%3F&quot; target=&quot;_blank&quot;&gt;微软利用平台霸主的地位挤兑 Chrome&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;微软 Edge 用着别人谷歌的 Chromium 开源引擎，又利用平台霸主的地位挤兑 Chrome，真的难怪火狐当时挤破脑袋都要自己开发系统平台，最起码谷歌有 Android 和 Google Chrome OS，后路都给自己留着呢。同样，这个说法也能延伸至华为的鸿蒙系统，有自己的系统平台真的可以硬气很多。 ​​​&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;小啤 Derek&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240430A021II00&quot; target=&quot;_blank&quot;&gt;从微盟再获融资，看中国 SaaS 企业如何正确过冬&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;从 SaaS 行业的需求侧、供给侧和资本市场来看，当前的 SaaS 行业正处于低谷期。&lt;/p&gt; 
   &lt;p&gt;需求侧，受宏观经济影响，企业或多或少缩减了数字化转型开支，SaaS 企业面临新客户增长放缓和现有客户订购量减少的风险。&lt;br&gt; 资本市场，SaaS 产业投融资环境正在变得更为成熟和理性。投资人从关注增长速度转向关注企业的盈利能力和持续性，更倾向于投资那些已经在市场上证明自身拥有清晰盈利路线图的企业。&lt;/p&gt; 
   &lt;p&gt;截至目前，SaaS 市场最新的融资消息来自于微盟。近日，微盟集团发布三则公告，其新股配售协议下的所有条件均已达成，公司成功完成配售，所得款项净额约为 3.08 亿港元；此外，微盟已成功发行 8500 万美元可转债。两者叠加，在原 21 年 cb 持有的投资者、公司现有股东腾讯及新投资者的合力支持下，微盟集团总计募得款项 1.25 亿美元。&lt;/p&gt; 
   &lt;p&gt;供给侧，SaaS 企业感受到行业寒潮，逐渐回归价值本质。「降本增效」成为 SaaS 企业普遍认同的策略，但不同的企业走出了不同的降本增效路径。有的 SaaS 企业只关注短期利益，手拿降本增效的大刀砍向「裁员」、「降薪」、「关停业务」。也有的 SaaS 企业注重长期价值，多措并举打好降本增效「组合拳」，而微盟正是其中的一员。&lt;/p&gt; 
   &lt;p&gt;微盟集团年度报告显示，2023 年微盟集团实现了总营收 22.28 亿元，同比增长 21.1%。毛利润达到 14.84 亿元，毛利率提升至 66.6%。经调整 EBITDA 大幅收窄至-0.75 亿元，同比减亏 93.1%；经调整净亏损同比大幅减少 73.4%。&lt;/p&gt; 
   &lt;p&gt;同一赛道，不同选择会有不同境遇，看来如何高质量的降本增效也是一门学问，微盟这个例子值得考量。&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;- &lt;strong&gt;刘旷&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5198011111%2FObYZoryxn&quot; target=&quot;_blank&quot;&gt;文档比较工具&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;1、WinMerge 是一个在 Windows 系统下运行的开源差异比较和合并工具。软件从官网（winmerge.org）下载，安装好以后，打开可以支持中文。它可以比较文件夹和文件，支持文本、图片、表格、网页、二进制文件等多种格式，并以可视化的方式呈现差异，非常易于理解和处理。&lt;/p&gt; 
   &lt;p&gt;2、Diffchecker：www.diffchecker.com，只需上传两个文件，即可进行文档对比。它支持文本、图像、PDF、Excel 等多种格式。对比文件夹需要用 Pro 版。&lt;/p&gt; 
   &lt;p&gt;3、Meld：meldmerge.org，是一款开源的跨平台文档对比软件，适用于 Windows、Linux 和 macOS 等操作系统，支持比较文本文件、文件夹和图像文件。&lt;/p&gt; 
   &lt;p&gt;4、KDiff3：kdiff3.sourceforge.net，也是一款跨平台的文档对比软件，同样支持文本文件、文件夹和图像文件的比较，适用于多种操作系统。&lt;/p&gt; 
   &lt;p&gt;5、ExamDiff：prestosoft.com，可用于比较文件夹、文件和文本内容。整体效果不如 WinMerge，可以留作本用的选择。&lt;/p&gt; 
   &lt;p&gt;6.云库工具：libkit.cn/compare，可以比较 PDF 和 Word。除了提供文档比较外，还可以转换文件格式和 CAD 预览。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;班叔&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.36kr.com%2Fp%2F2755342482373640&quot; target=&quot;_blank&quot;&gt;谷歌不行？股价却新高，Meta 逆天？蒸发 1.6 万亿…微软：都是弟弟&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;纵观 Meta、Alphabet、Microsoft 新一轮的财报表现，不难看出生成式人工智能已经全面渗透到业务管道的方方面面，成为驱动企业增长的核心引擎。&lt;/p&gt; 
 &lt;p&gt;微软的成功尤为典型，凭借多个 AI 软硬件前瞻布局稳居头把交椅，各项业务高速起飞。&lt;/p&gt; 
 &lt;p&gt;Meta 的巨额 AI 投入虽然令投资者心惊肉跳，能否尽快实现商业化盈利仍是未知数，但 AI 助推下广告收入已成效初显。有了 Llama 大模型和算力加持，扎克伯格打造全球 AI 领军企业的决心与雄心不容小觑。&lt;/p&gt; 
 &lt;p&gt;至于老大哥谷歌，终于在 AI 大战中找到了自己的节奏。Gemini、TPU 等武器已磨刀霍霍，准备在 AI 浪潮中加速寻找新的增长点。&lt;/p&gt; 
 &lt;p&gt;三大巨头对人工智能发展方向的判断出奇一致，且都祭出了真金白银投入这场未来科技变革的豪赌。站在时代风口，AI 最终能带他们飞得多高多远，全球科技行业的目光都将望向这里。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;硅星人&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-04-30%2Fdoc-inatqhcc2254451.shtml%3Fcref%3Dcj&quot; target=&quot;_blank&quot;&gt;深圳制造：画出「第二增长曲线」&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;今年一季度，深圳规模以上工业增加值同比增长 11.5%，比上年同期提高 7.0 个百分点。规模以上制造业增加值同比增长 11.8%，高技术制造业增加值同比增长 13.1%。作为全国「工业第一城」，在庞大基数下实现这一成就颇为不易。&lt;/p&gt; 
 &lt;p&gt;这得益于深圳牢牢扭住新型工业化这个关键任务，不断夯实市场主体、产业投资、产业生态基础，不断完善产业链，集聚创新资源，塑造新优势，注入新活力，勇闯新赛道，持续攀向全球产业链价值链高端，画出「第二增长曲线」。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;strong&gt;- 深圳特区报&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.21jingji.com%2Farticle%2F20240430%2Fherald%2Fb9fe34edbb4aa9520746c1d076dd6721.html&quot; target=&quot;_blank&quot;&gt;专访智谱 AI 王绍兰:技术派与市场派相辅相成，不能只研究技术也不能只关注变现 &lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;「技术派与市场派并不矛盾，他们是在创新链条的不同层面考虑问题。大家不能只做技术研究，也不能只关注市场变现，这两件事是相辅相成的。」4 月 26 日，在 2024 中关村论坛「硬科技投资与发展论坛」期间，智谱 AI 总裁王绍兰在接受 21 世纪经济报道记者专访时，谈到对这个时下热点话题的看法。他认为，整个创新的链条是从思想、理论、方法、技术到产品、市场。市场派关注后端的产品和市场，技术派关注前端的理论、方法和技术，这其实是整个链条上不同层面的事情，不存在说非此即彼的关系。&lt;/p&gt; 
 &lt;p&gt;只是有的公司会选择将大部分精力放到产品和市场上，有的公司会把精力放在整个链条上，重视理论、方法、技术、产品、市场的全链条创新。不同公司会从自身角度出发，做出不同的选择。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;21 世纪经济报道&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fimmersive-translate%2Fimmersive-translate&quot; target=&quot;_blank&quot;&gt;immersive-translate/immersive-translate&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;305&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1afadb3261d52dc2bf030e549ccb9277d3b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fimmersive-translate%2Fimmersive-translate&quot; target=&quot;_blank&quot;&gt;https://github.com/immersive-translate/immersive-translate&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;沉浸式网页双语翻译扩展，完全免费使用，支持 Deepl/Google/ 腾讯 / 火山翻译等多个翻译服务，支持 Firefox/Chrome/ 油猴脚本，亦可在 iOS Safari 上使用。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/11066139&quot; target=&quot;_blank&quot;&gt;模型量化与量化在 LLM 中的应用&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;关于 LLM 的量化工作目前的 SOTA performance，基本上都是基于 weight-only 的量化模式，模型在 GPU 运行所需的显存降低是其主要的贡献。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;总体来说，LLM 领域的量化工作还很初步，若在实际任务中对模型的表现精度要求十分高，更推荐单纯基于 KV cache 等方向提高单位显存吞吐量的算法和工具，如 Flash Attention-2、Paged Attention 等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;208&quot; src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/e0baba60e63449bcabb5eef69423fe09~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=ss3lUGzh0Zdpq1B3wVqt9n9hvJ8%3D&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/290261/google-lays-off-staff-flutter-dart-python&quot; target=&quot;_blank&quot;&gt;谷歌证实裁员，涉及 Flutter、Dart 和 Python 团队&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;近日，有关谷歌对 Flutter、Dart、Python 等关键团队进行了裁员一事在社交媒体上广为流传。对此，谷歌则向外媒&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F04%2F29%2Fgoogle-lays-off-staff-from-flutter-dart-python-weeks-before-its-developer-conference%2F&quot; target=&quot;_blank&quot;&gt;TechCrunch 证实&lt;/a&gt;，该公司确实已经进行了裁员，但没有透露具体的团队、角色以及裁员人数。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;但谷歌方面澄清道，此次裁员并非全公司范围内的裁员，而是正常业务过程中的重组，受影响的员工将能够申请谷歌的其他空缺职位。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;334&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0430/104944_yBq9_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这次裁员事件可能反映了科技行业内部的一些更广泛趋势，包括对效率和成本效益的追求，以及对特定技术或产品线的重新评估。同时，这也是谷歌在不断变化的市场环境中调整其资源分配和业务重点的一部分。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;裁员事件反映了科技行业快速变化和波动的特性。随着市场和技术的不断演变，公司需要灵活调整其资源分配和业务重点。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;而谷歌作为科技行业的领导者，其决策和战略调整受到市场的密切关注。这次裁员可能会影响投资者对谷歌未来发展和战略方向的看法。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/290311/google-play-rejected-228-million-risky-android-apps-2023&quot; target=&quot;_blank&quot;&gt;2023 年 Google Play 拒绝了 228 万款有风险的 Android 应用&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;谷歌&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsecurity.googleblog.com%2F2024%2F04%2Fhow-we-fought-bad-apps-and-bad-actors-in-2023.html&quot; target=&quot;_blank&quot;&gt;报告&lt;/a&gt;称，该公司在 2023 年共阻止了 228 万款违反政策的 Android 应用在 Google Play 上架。以及发现并屏蔽了 333,000 个上传恶意软件、欺诈性应用程序或多次严重违反政策的 Google Play 帐户。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;相较之下，在 2022 年谷歌共封杀了 150 万个 &quot;不良&quot; 应用，并封禁了 17.3 万个严重违反商店政策的开发者账户。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;264&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-065db484eb169bd9c9a6e57b419bca6ab83.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一数字反映了移动应用市场在安全、监管和用户信任方面面临的复杂挑战。随着移动设备的普及，移动应用市场迅速增长，但同时也带来了监管和安全的挑战。谷歌需要不断更新其审查机制，以应对新出现的威胁和违规行为。谷歌在保护用户安全的同时，也需要确保用户能够轻松获取所需的应用程序。这一事件显示了在安全性和用户便利性之间找到平衡点的重要性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于开发者来说，遵守 Google Play 的政策和标准是一个持续的挑战。谷歌对政策要求的更新和加强，意味着开发者需要不断学习和适应。虽然谷歌在 Google Play 上采取了严格的安全措施，但第三方应用商店可能没有类似的安全保障。这可能导致用户面临更高的安全风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;随着技术的发展，恶意软件和违规应用的开发者也在不断寻找新的方法来规避审查。谷歌必须持续更新其安全措施，以保持领先。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/290336/openai-financial-times&quot; target=&quot;_blank&quot;&gt;OpenAI 与英国《金融时报》签署内容许可协议&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;OpenAI&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fcontent-partnership-with-financial-times&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;与英国《金融时报》达成合作，使其大型语言模型获得对《金融时报》文章的访问权。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;作为合作的一部分，两家公司将向 ChatGPT 用户提供《金融时报》的一部分内容。 OpenAI 表示，&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;通过此次合作，ChatGPT 用户将能够看到&lt;/span&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;「精选的摘要、引述以及《金融时报》新闻报道的链接&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;，以回应相关查询&lt;/span&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;」。不过 OpenAI 没有具体说明内容何时可以访问或在哪些版本的 ChatGPT 中进行访问。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-06b25d557240271062545cebf0391473d0e.png&quot; width=&quot;356&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一合作不仅为 OpenAI 的用户提供了更丰富的内容来源，还标志着人工智能在新闻领域应用的一个重要里程碑。通过与《金融时报》的合作，OpenAI 能够提供更准确、更相关的信息检索服务，同时《金融时报》的内容也因此得到了更广泛的传播和利用。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;还可能对新闻行业的商业模式产生影响。随着越来越多的媒体公司与 AI 公司合作，新闻内容的生产和分发方式可能会发生改变。这种合作可能为新闻机构带来新的收入来源，同时也为 AI 公司提供了更高质量的数据集来训练其模型。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;以及可能促进 OpenAI 在人工智能领域的竞争。未来可能会出现更多类似的合作伙伴关系，推动人工智能和新闻行业的进一步融合和发展。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.huanqiu.com%2Farticle%2F4HavNyV7kMO&quot; target=&quot;_blank&quot;&gt;「天工」惊艳亮相，人形机器人距离生活还有多远？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通用智能的发展面临着技术性、生物性和社会性三大瓶颈。技术性瓶颈表现在人工智能系统需要具备更高的计算能力、更先进的算法和更有效的数据处理方法，以实现更复杂、更智能的功能；生物性瓶颈主要体现在我们对人类大脑认知能力运作机制的理解还非常有限，要实现类似的智能水平需要更深入的神经科学和认知研究；社会性瓶颈则包括了人工智能系统与人类社会的融合问题，例如文化差异、伦理道德、隐私保护等。「克服这些瓶颈需要跨学科的合作和持续的创新努力，只有在技术、生物和社会方面取得突破，通用智能才能迈向更加成熟和全面的发展，但极难实现。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;环球时报&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn786916350&quot; target=&quot;_blank&quot;&gt;投资者只想看 AI 赚钱，不想听 AI 烧钱&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 开年，海外互联网巨头开始兑现 AI 业务的商业化潜力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;过去一周，谷歌、微软、Meta 相继公布 2024 年一季度财报，三者有喜有忧。微软、谷歌财报发布后分别上涨 4%、15%，后者更是触及历史新高；相比之下 Meta 却遭遇滑铁卢，财报发布后股价一度跌幅达 19%。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;极客公园&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMTA3NDI5ODU0MQ%3D%3D%26mid%3D2656022029%26idx%3D1%26sn%3Dbebf1a0dc9ef6bfe2ebf9c6af833b5fc%26scene%3D0&quot; target=&quot;_blank&quot;&gt;资本高手周亚辉，能否守住 500 亿？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型时代到来，资本圈著名「风口捕手」周亚辉又毫不意外地将 AI 划入了自己的版图。他实控的昆仑万维股价在 2023 年扶摇直上，一度创下了暴涨四倍的「神话」。然而喧嚣之下，昆仑万维要在大模型市场中持续掘金，也并非易事。2024 年一季度，昆仑万维归母净利润同比大跌 188%，创下近十年最糟糕纪录。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;市界&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5ODAxMjU2MA%3D%3D%26mid%3D2649768479%26idx%3D1%26sn%3D0a28edd8a40cbbdef61358927a2b985d%26chksm%3Dbed5d1e089a258f643fedca2717d28f6a109d4b8e0f46148caf5e1cb9785a40c3f31c71afce2%23rd&quot; target=&quot;_blank&quot;&gt;字节跳动发起 AI 战争，寻找下一个 TikTok&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;现如今在字节跳动，已近乎隐退的张一鸣，只重点关注两件事：其一，是风暴中的 TikTok；其二，就是字节跳动正在全力追赶的 AI 战略业务。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;提及字节的 AI 战略远望，多个接近字节的人士均认为，以 Flow 部门出品最为「正统」，「虽然很多子业务都在做相关的事情，比如飞书，但管理层层面还是认为 AGI 之战还是以 Flow 为主」。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;凤凰网科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/290261/google-lays-off-staff-flutter-dart-python&quot; target=&quot;_blank&quot;&gt;谷歌证实裁员，涉及 Flutter、Dart 和 Python 团队&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：把 flutter 和 compose 团队合并，发力 compose 吧，flutter 的绘制引擎也可以移植到 compose 了&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：这个是最靠谱的&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：flutter 不应该走邪门歪道，用个 dart&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：本来就是半只脚进入棺材的语言，硬是拽出来，现在来这一出，前景又变得不明朗。不知道谷歌那帮人是怎么想的。&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：因为可控啊，dart 自己说了算，如果 ts 没那么快那么火，dart 还是有机会的，但是败给了 ts&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：&quot;Flutter EngProd team 整个被裁了。劈柴真有你的👍&quot; / ...&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：其实从 2 前 flutter 总部团队的大部分招聘工作就已经停止了，但 flutter 和 dart 不会消亡&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：还不如收购 uniapp&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_alkdk1PBxbh88qzbVB4gw&quot; target=&quot;_blank&quot;&gt;华为立大功、为中国工业软件里程碑贡献全部开源代码&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：虽然法国是 OCCT 母社区，但 GitHub 上 OCCT 的核心开发者都是俄罗斯人，离了俄罗斯人，法国母社区也运营不下去。于是华为出手收编，迁移到中国，修改名字恢复开源和社区运营，有什么问题呢？平时很少夸华为，但这个工作的确做得不错。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：华子这波是白嫖计算机皇冠上的明珠啊&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：懂开源世界不， 请保持谦虚，否则暴露的就是自己的无知，自己像个小丑在众目睽睽下乱蹦哒，还不自知。&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：这个就是捡漏，算不上什么自研&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：有什么精神洁癖，虽然中途接手，但是团队是花钱养着专职写代码，讲道理可以闭源转商用专供自己卖产品&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：华为：来得早不如来得巧，感谢美国老铁送来的助攻&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：我这两年就在用 OCCT 搞开发，资料少，布尔操作性能差，缺少一些关键算法等问题，需要自己去搞，如果华为能把这些问题解决了，中国的工业软件发展会更顺利&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：这个是牛掰了&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FE3t4pzr-OH02Du7eNXS7hQ&quot; target=&quot;_blank&quot;&gt;Go 新提案：返回值应该明确使用或忽略？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：完备的语言是不存在的&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：处理可能存在的错误是必须的，语言层面上没有问题。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：这个提法本就有问题，一个不愿意处理错误的人，你只要有忽略的办法他总是会忽略，而且这个增加会让忽略变得更复杂，代码看起来也更复杂，_就已经是最好的方案&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：简单有效的，各取所需的解决方案：用检查工具或者编译器属性来检查&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290370</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290370</guid>
            <pubDate>Tue, 30 Apr 2024 10:21:02 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>​MySQL 的第一个长期支持版 8.4 GA</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;MySQL 的第一个长期支持版 8.4&amp;nbsp;GA，一些具体变更内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;功能增加/更改&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;认证插件：默认情况下，「mysql_native_password」认证插件被禁用，如果用户需要兼容旧的应用程序，需要在启动 MySQL 服务器时，启用该插件 「--mysql-native-password=on」&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;克隆插件：克隆插件对于版本的要求放宽，允许在同一个大版本内进行克隆，不再要求小版本必须一致。例如，可以从 8.4.0 克隆至 8.4.14。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持在 Windows 上使用基于 SASL 的 LDAP 认证，Windows 的客户端可以使用 GSSAP/Kerberos 和「authentication_ldap_sasl_client」插件进行认证。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;主从复制中「SOURCE_RETRY_COUNT」选项值变更为 10，默认情况下，主从复制将在 10 分钟内，每 60 秒尝试一次重新连接。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;主从复制中的「START REPLICA」的「SQL_AFTER_GTIDS 」选项支持多线程回放（MTA）。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;主从复制中使用的大量 「MASTER」/」SLAVE」被删除，用户需要使用「SOURCE」/「REPLICA」替代。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;「mysqldump」中增加「--output-as-version」选项，支持从 8.2 以后版本的 MySQL 服务器兼容旧的 MySQL 服务器。该选项值为「SERVER」，「BEFORE_8_2_0」，和「BEFORE_8_0_23」。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;组复制的「group_replication_set_as_primary()」函数在选择新的主要成员时，将等待正在进行的 DDL 结束。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;「group_replication_consistency」系统变量的默认值从「EVENTUAL」改为「BEFORE_ON_PRIMARY_FAILOVER」。「group_replication_exit_state_action 」系统变量的默认值改为「OFFLINE_MODE」。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;增加自动更新直方图功能。当启用该功能后，无论是否执行「ANALYZE TABLE」，都将自动更新直方图。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;在「Performance_Schema」中增加线程池的连接信息，并增加「tp_connections」表，用以显示每个线程池的连接。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;除了上面的部分增加内容，在该版本中还对一部分功能进行了删除和降级，包括去除了大量的「MASTER/SLAVE」等等，想要了解详细内容，&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;可访问&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fmysql%2Fcategory%2Fmsq-announcements&quot; target=&quot;_blank&quot;&gt;MySQL 官网&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;。&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;稿源：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fd-4LL0efkXYgcaFrNeQ-eQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/d-4LL0efkXYgcaFrNeQ-eQ&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290362/mysql-8-4-0-ga</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290362/mysql-8-4-0-ga</guid>
            <pubDate>Tue, 30 Apr 2024 09:23:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>模型量化与量化在 LLM 中的应用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p style=&quot;color:#222222; margin-left:0px; margin-right:0px; text-align:justify&quot;&gt;&lt;span&gt;&lt;strong&gt;一、&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#000000&quot;&gt;模型推理优化&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;随着模型在各种场景中的落地实践，模型的推理加速早已成为 AI 工程化的重要内容。而近年基于 Transformer 架构的大模型继而成为主流，在各项任务中取得 SoTA 成绩，它们在训练和推理中的昂贵成本使得其在合理的成本下的部署实践显得愈加重要。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;大模型推理所面临的挑战主要有以下两点：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;巨大的内存（显存）需求，主要来自于模型本身参数和推理的即时需求。&lt;/span&gt;&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;对于一个 LLaMA2-30B 的模型，载入显存其模型本身需要约 60GiB 的显存，推理过程中，单个 token 的 KV cache 需要 1.6MiB 左右的显存：6656(layer dim) * 52(layer num) *2 (K &amp;amp; V) * 2(fp16, 2bytes)；对于一个 2048 个 token 的请求则需要 3.3GiB 的显存。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;并行性较差，因为生成过程通常在时序上是一个串行的过程，导致 decoding 的过程较难并行，成为计算的瓶颈。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;常见的推理优化方式有知识蒸馏（Knowledge Distillation,KD），剪枝（Pruning）和量化（Quantization），以及针对 LLM 的内存优化而提出的各种方案（如 Flash Attention、Paged Attention 等）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;蒸馏指通过直接构造小模型，作为学生模型，通过软标签与原标签结合的方式监督学习原模型的知识，从而使小模型具备与原模型相当的性能，最终用小模型代替大模型从而提高推理效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/e0baba60e63449bcabb5eef69423fe09~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=ss3lUGzh0Zdpq1B3wVqt9n9hvJ8%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：Knowledge Distillation: A survey,2021,p2】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;剪枝则是通过靠剪除模型中不重要的权重从而给模型「瘦身」，提高模型的推理效率，为了保证模型的能力，通常剪枝过程也需要伴随着模型基于训练数据的微调。根据剪除权重的维度不同，可以分为结构化剪枝（structured pruning）和非结构化剪枝（unstructured pruning）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;结构化剪枝：通常按权重张量的某一或多个维度成块剪除不重要的通道，并保持正常的矩阵乘法；但因剪除的通道影响上下层的推理，需要检查网络的逻辑准确性。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;非结构化剪枝：随机剪除权重张量中的不重要的元素，因而它通常会保持原本的权重结构，而造成稀疏的乘法计算，但并不能适配于通用的硬件，因而需要专用的硬件才能实现加速。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前剪枝在 LLM 中的应用较少，如以下基于 Activation-aware 的剪枝工作[1]，主要是基于权重本身的的绝对值大小和输入张量的绝对值大小做非结构化剪枝，使权重张量本身稀疏化，而模型的精度损失也并不能达到工程化的要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/e7e5508004b24cdeb0bd154e990418d0~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=Qdo%2BZ1tLIvF9fKdV4VUiTqWdqJw%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：A simple and effective pruning approach for large language models,2021,p2】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;再如下图最近结构化剪枝的工作[2]，通过搜索的方法寻找模型中的子结构，并通过重训练以保持模型精度，剪枝后的模型的精度相比原模型有很大的降低，只能跟同等参数量（剪枝后）的其他较小模型比较以显示其方法的意义。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/7b6c620e09e74c9abcbd33fff9a6dd49~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=U%2FUWwQ4VWrgyqwq6CjMMUA4RWnA%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处: Sheared LLaMA: accelerating language model pre-training via structured pruning,2023,p3】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/00134831ed024be48c1ac72f1aec84e6~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=WnkyFfSYyVwUAHk2XOR%2BBwMMpJY%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处: huggingface/Sheared-llama-1.3B】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;而量化之所以会成为神经网络以及 LLM 的首选，主要有以下的优点：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;降低显存的直观体现。&lt;/span&gt;&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;一般 LLM 权重用 FP16 存储，而权重量化为 int4 之后，则直观上体积减小为原本的 1/4（实际可能由于 embeddings 不量化，内存分配等一些原因会稍多一些），对显存的资源需求大大降低。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;W4A16、W8A16 等算子的加速，从而提升计算速度。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;strong&gt;二、&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#000000&quot;&gt;量化简介&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;base&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;量化的本质通常是将模型的参数，或整个模型的推理过程从浮点转化为整型。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;量化参数通常由 scale 和 zero-point 两个值构成，前者为浮点，后者为整型。设 x 为一个张量（它可以为权重，也可以是推理的中间变量），其量化过程可以表示如下，&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/eb26ac1a556c4c79899c16992cfbe617~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=H9DiJOMJVp8iBCdLszMvREmXJRM%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;用 b 表示量化位宽，q{min}与 q{max}分别表示整型值域的范围，例如 int-8 量化可以取[-128,127]，即 q{min}=-2^(b-1)=-128，q{max}=2^(b-1)-1=127，clamp(a;q{min},q{max}) 表示输入值 a 基于[q{min}, q{max}]范围的截断操作，x{int}表示量化后的结果，s 和 z 表示量化参数 scale 和 zero-point。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/1675fd7b528140b8a270d5bada578e82~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=8FGiFlmbGrG%2Blv%2B86O%2FqysMR1HU%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/71a6e1af1b41487095957ea901bbda5a~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=Ws%2B%2B7MieS1VxHnY3Q0NNdN%2F%2BJR4%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：A Survey of Quantization Methods for Efficient Neural Network Inference,2021,p5；An Introduction to Quantization of Large Language Models,p12】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;而从整型到浮点的反量化过程如下，&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/2259456a815c45c285c7a8aaf9b5566c~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=T3YO%2BM5nphkYMJH%2BupT8rGmQdYw%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;关于量化参数，有很多算法基于搜索，最优化，LKD(layer-by-layer 蒸馏) 等各类算法计算其较优解，从而尽可能减少量化引起的精度损失；而最直接的计算 scale 和方法即是基于张量元素 min/max。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/d1ed6e3e667c4ca6a654413379885748~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=06n%2BOoD53lNRxKdPH6NFeNHh6Hk%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;以下是一段简单的代码表示张量 x 从 fp32 量化到 int8 整型，再反量化回 fp32 的示例：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;x-&amp;gt;x{int}-&amp;gt;x_hat 的过程的一个示例如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/568b26b30940408098e8f0b09324a262~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=Xj9H9kSlhMCye1mewEEV3QNd2wE%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;量化前 x：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/5556edfac226493f912d51e80ae2b29a~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=bIFt9g%2BMTrFYB3jEjxdQs1jFHL0%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;量化后 x_hat：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/d181acb387324033a7adefe417094d66~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=IoF605%2FPK4%2FQ6uKrGKL0e3%2FiqVU%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;对称/非对称&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;相比于非对称量化，对称量化的定义是量化所映射的整型值域基于 0 值对称，即上述公式的 zero-point 为 0，qmax = -qmin，从而使量化的表达形式更为简化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;非对称量化有利于充分利用量化范围。例如 Conv+ReLU 输出的激励张量，其值皆为正值，若使用对称量化，则浮点将全部映射到[0~127]范围，有一半的范围未使用，其量化精度不如非对称量化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/efc84790d1d649a2bb3e7c34533fb2b1~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=%2B8rIgSC28fC0FlRxazrbuUEJzjA%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：A Survey of Quantization Methods for Efficient Neural Network Inference,2021,p5】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;实际中往往选择对权重张量做对称量化，而对输入张量做非对称量化。以下是来自 qualcomm 的量化白皮书中的分析，如权重和输入都选择非对称量化时，以 Linear 层的矩阵乘法为例，将表达式展开如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/bba17e921657409bb77c4d7f2c888d0e~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=jBZ15Juhy5am%2FUAvoidMIIwggyk%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;第一项是整型张量的乘法操作，是必须的即时操作；&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;第三、四项的操作包含了 scale，zero 和整型权重的乘法，这些都是提前预知的，因而可以事先计算作为偏置加上；&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;第二项的计算依赖 x{int}，是每次推理需要即时计算的，而这会造成额外算力。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;因而当我们将权重量化改为对称量化时 (zW=0)，则上式简化为如下，即时计算时，只需要计算第一项的矩阵乘法，第二项是预先算好的偏置项：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/87a8d6decd7541a98c409fdf7bb3c479~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=r%2BrBsTbVupMzDdI63wVc5PU04UQ%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;而当两者都是对称量化时的表达式，则简化如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/43fd186d8bb64c26a67a641015e8ab7c~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=AOG7ZT4q08TA9muSr%2FjjfjyrzQI%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;对比原模型中的浮点计算 W{x}，W{int}x{int}是整型与整型之间的乘法，后者在 Nvidia GPU 上的运算速度远快于前者，这是量化模型的推理速度大大加快的原因。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;strong&gt;三、&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#000000&quot;&gt;LLM 的量化&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;Challenges in LLM Quantization&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;从模型表现的角度来讲，量化自始至终要解决的一个前提是，如何保持量化后模型的精度，即让模型的使用者觉得量化后的模型在推理效率提高的同时，还能保持原来的性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;神经网络中需要量化的操作主要是卷积层 Conv(x;W) 和全连接层 Wx，即主要是按上一部分描述的操作分别对 W 和 x 做的权重量化（Weight Quantization,WQ）和激励量化 (Activation Quantization,AQ)。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;而不同于 CNN 模型或者小型 Transformer 模型，基于 Transformer 的大模型的矩阵乘法产生的激励张量通常有较多的离群值 (outliers)，即离值分布的大多数点形成的点群较远的值, 这些绝对值较大但占比较低的元素值增加了量化难度。而如何取舍 outliers 通常是量化工作中的一大难点，若过分考虑之，则会因量化范围过大而降低量化的表达范围，若过分截断之，通常会因这些绝对值较大的值，在模型推理中对结果有较大影响，而导致模型效果变差，而后者在 LLM 的量化则尤为明显。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;下图分别是 Resnet18 与 Opt-13B 的某层输入张量的元素值统计，sigma 表示各自分布的标准差，Resnet18 输入的极大值约为 28sigma，且绝对值 6sigma 以外的比例在 0.05%；而 Opt-13B 网络输入的极大值越为 325sigma，且绝对值 6sigma 以外的比例在 0.2%。从量化效果而言，Resnet18 的 int-8 精度基本无损失，而 Opt-13B 的 int-8 模型的精度已崩塌。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/62a089bc8e43407b8ee03b38edcf626c~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=I0Dt0oVUi9hz%2FZnn4WH%2BVpXLdYM%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：An Introduction to Quantization of Large Language Models,p20 】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;在应对激励量化的挑战这方面，有一些方案尝试降低量化精度，比如 SmoothQuant 提出的思路。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p9-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/e6c2e258ac024e08bbf9f7fd81d03e83~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=AzHTM%2B9uYkzKcGUOHi8C%2BxJP6jI%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/3a9c38e024e6422280129e814a4aeca2~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=yq9JtiqjcY8BJwTbqfso7KMHyuE%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：SmoothQuant,p4】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;在矩阵乘法中，他们通过按比例缩小输入张量 X 的值，而将缩小的比例补偿给权重张量 W，即把问题从量化 X 和 W 转化为了量化 X·diag(s^(-1)) 和 diag(s)·W。从而在保证乘法运算的积保持不变的前提下，降低张量 X 的量化难度。而在实际工程中，这种量化方案引起的量化误差对大模型的推理效果仍然有比较明显的影响，即使在 int-8 精度量化亦有明显的误差。如以下对 Llama2-7B 的 SmoothQuant 应用结果显示其 perplexity 非常糟糕，难以在实际中应用。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/71eb305e3acb4673a80b4792bbca806d~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=%2BbSXCFt1O4odl66V1R3jezUgUMQ%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;所以在目前工程部署中的实用方案，大多以 weight-only 的量化方案为主，即放弃 activation 的量化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;GPTQ&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;GPTQ 是最早被工程化部署所接受的量化方案，W8A16 或 W4A16 的量化效果在多数场景中都有与原模型较为接近的表现，而且其量化过程非常快。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;量化过程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;以矩阵乘法的基本单元操作为例，基于 weight-only 量化前后的乘积的均方差，可以写出如下优化函数，&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/a5cd5d41f540405eb42324067e46aa2c~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=u8kaZuqe7SOumKhUstBski7FFOo%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;W 是在 Transformer 中的 Linear 层权重，X 表示其对应的输入。离线量化的过程是逐模块（Transformer）逐层（Q,K,V,O,Fc1,Fc2）做量化。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;参数和数据定义如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;W∈R^{K×M}，X∈R^{M×N}，Y=W×X∈R^{K ×N}&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;calibrate set：部分数据用作推理，用于查看各层输入张量的值范围，并基于此量化。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;具体量化过程如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;计算 Hessian（上述优化函数对于 W_hat 的 Hessian，而非反向传播中的 Hessian），加入扰动项：&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/a78d6c029c874f1689cbc1e82ea8785b~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=J9OIVlDpvL5sRPe5cvVfvoQmEYw%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;act order sort（desc_act，值范围相近的 column 一起做量化），基于 diag(H) 对 W 基于 M 维度作列重排，同理，对应地 H 在两个维度上重排。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;求逆 H^(-1)（cholesky 分解）。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;对 W 沿维度 M，从左到右逐块量化，block size B=128，其右侧还未量化部分基于 H^(-1) 更新，以补偿量化损失。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/b6c909bbd5d6445399014ef65a66ca98~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=PgxGwM9Cqlj9H%2F6hc%2BEYuozi9%2FM%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;（inner loop）针对每个 block 内部，逐列量化，计算误差，并对该 block 内部未量化的列，基于误差更新。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p9-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/64ea79dcdd514eaa8b55f4cf907b49ce~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=J9Md5yF6z9lCFTz1RrYEuNBQgSk%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/3022c0f765ab46a8aaf91139f559bf8e~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=68wVwHcBSbJMpAm7sGRtxa9OUjQ%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;（outer loop）操作完该 block，更新其后面的所有列：&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/eb77bf9934e74467a27c2aec35d7d3a5~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=03dG7UlbbxO8rELFZbOXV7oBD2E%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;group_size&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;若不指定 group size，默认 g=-1，以所有列为单位统计量化参数，并对每一行的权重做量化，对于 W∈R^{K×M}，量化参数的数量为 K×1。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/9dad125242ef4d1393016bdb5c03622f~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=wgLGrfS%2FTmR7XjKB%2BudV8Vr%2Bw5s%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;若指定 group size，例如 g=128，则会以每 128 列为单位统计量化参数，并对每一行的权重做量化，对于 W∈R^{K×M}，量化参数的数量为 K×(M/g)。&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/831078c1a62647fab0711a995bba2163~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=%2FLc1On%2BSZX4TmDmXtwNQmfsYsjw%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;重排 desc_act&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据 Hessian Matrix H，基于 diag(H) 对 W 基于 M 维度作列重排。其目的是优先量化绝对值较大的 activaiton 对应的 weight 的列，这些列在推理中被视为更为影响结果的重要的列，因而希望在量化这些列时尽可能产生较小的误差，而将更多的量化误差转移到后面相对不重要的列中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;部分实验表明 desc_act 对量化损失的效果在多数的任务中是有效的 trick。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/569fb2134fea41c283ee83532ed14a12~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=jrOY9VPB9bGHO6v6XiK6wUeeJhs%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Perplexity of Pygmalion-7B with GPTQ [7]&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：https://huggingface.co/reeducator/vicuna-13b-free/discussions/22】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;算子&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;严格来说基于 weight-only 的 W4A16 相比于原本的 W16A16 并没有太多效率的提升，而且推理中还加入了 quant/dequant 过程；而随着 weight-only 成为 LLM 量化的主流且应用越来越多，有很多开源的工作基于 W4A16 高效算子的编写为量化算法的推理提速赋能，比如 GPTQ 的 python package&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;AutoGPTQ&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;已集成于开源工具 exllama，后者基于 triton 和 CUDA 重写了量化乘法的并行计算。在&lt;br&gt; exllama/exllama_ext/matrix.cuh 可以看到 dot_product8_h 对 out=W_hat·x=(W{int}-z)s·x=(W{int}-z)x·s 的实现。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p26-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/f1f90fa11110402192cb4e13342d1a76~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=x%2FxnheZUPAuPfbxKSCyW9kVy0RA%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：https://github.com/turboderp/exllama/blob/3b013cd53c7d413cf99ca04c7c28dd5c95117c0d/exllama_ext/matrix.cuh#L86】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;AWQ&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;相比于 GPTQ 从最优化问题出发设计方案，AWQ 是基于搜索提出的量化方案。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;用 Q(·) 表示量化反量化过程，则修改前的量化过程如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p26-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/0f5d296635ce44bf9d2fdf74dc0d31ca~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=wq6Gw3k9shMWbTnqbrRLBTCf7SE%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;修改后，量化过程如下，加入了对 W 的缩放：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/2edd98e5fd2442c6a05bba31e7899097~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=xtQvs56hNP%2FauaSucMUrlGKevZk%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;搜索&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;AWQ 的全称为 Activation-aware Weight Quantization, 即对 Weight 的量化过程考虑 Activation 的值的影响。其出发点也是基于在 Weight 的各个通道中，处理对应的 Activtion 的值较大的通道则相对重要，反之则相对不重要，进而通过乘以一个缩放系数Δ去体现其重要性，而Δ的值和范围则通过输入的 activation 的张量值设计。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/d5a8a7765dbd41509b62eebe7e9197df~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=Uy9QQBCyeydLxhi0aqshqq2KIjY%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;搜索的衡量标准依据 Linear 层量化前后输出结果的比较，取 MSE 结果最小者为最优解。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/fd77ad5a9eb245eda3f8fcf07fa6c612~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=aRCXEGMk7Za%2BzIAMALpMst35lgk%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;效果&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;从模型表现效果方面，通过逐层 scale search 寻找最优的缩放系数，从而取量化误差最小的解，以下来自 AWQ paper 的效果比较，从 Perplexity 的角度，显示在两代 Llama 的测试上其量化结果稍优于 GPTQ 及 GPTQ 的排序版。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/84137c5e3dbd4feea68a08ff3a45d239~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=RS%2BYTzWwD%2BW%2FZvgPWoXE7%2BD%2FSeM%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：AWQ, p6】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;从实际任务的准确率来看，AWQ 的准确率与 GPTQ 的 act_order 版本（GPTQ-R）相当，而速度优于后者。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/152c055c7eae4615a06127c89b0e53c4~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=202404291655296C600F10B5B0FA08EC5A&amp;amp;x-expires=2147483647&amp;amp;x-signature=N%2BqrQMWSVT1ngWZ2fIoYmOlk2rM%3D&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;【图片出处：AWQ, p5】&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;从模型的计算性能方面，GPTQ 因为有 reorder 操作，矩阵乘法是 MV（matrix×vector），为不连续的内存访问，而 AWQ 不存在 reorder 操作，矩阵乘法为（matrix×matrix），速度更快。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;strong&gt;四、&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#000000&quot;&gt;总结&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;关于 LLM 的量化工作目前的 SOTA performance，基本上都是基于 weight-only 的量化模式，模型在 GPU 运行所需的显存降低是其主要的贡献。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;从模型的表现来看，因为存在不可避免的量化损失，且 LLM 模型通常比传统的 CNN 模型对量化要敏感得多，虽然在很多任务上量化后的 LLM 表现与量化前差距不大，但是在一部分任务上可能依然无法胜任。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;从模型的加速来看，weight-only 的量化促使底层加速的工作基本上都在 W4A16、W3A16、W8A16 等乘法算子上的加速，从 paper 上提供的理论数据上来看通常相较于 FP16 模型只有 1.x ~3.x 倍速度的提升，而实际部署效果可能低于此数值，其加速效果远不如传统量化方法的 W4A4、W8A8 等全整型的乘法算子。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;总体来说，LLM 领域的量化工作还很初步，若在实际任务中对模型的表现精度要求十分高，更推荐单纯基于 KV cache 等方向提高单位显存吞吐量的算法和工具，如 Flash Attention-2、Paged Attention 等。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;strong&gt;五、&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#000000&quot;&gt;Reference&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;1. A Simple and Effective Pruning Approach for Large Language Models, 2023.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;2. Sheared LLaMA: Accelerating Language Model Pre-training via Structured Pruning, 2023.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;3. A White Paper on Neural Network Quantization, 2021.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;4. SmoothQuant: Accurate and Efficient Post-Training Quantization for Large Language Models, 2023.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;5. GPTQ: Accurate Post-Training Quantization for Generative Pre-trained Transformers, 2023.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;6. AWQ: Activation-aware Weight Quantization for LLM Compression and Acceleration, 2023.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;7. Some evaluation on GPTQ performance.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;*文/&lt;/strong&gt;xujiong&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0; margin-right:0; text-align:justify&quot;&gt;本文属得物技术原创，更多精彩文章请看：得物技术官网&lt;/p&gt; 
&lt;p style=&quot;color:#222222; margin-left:0px; margin-right:0px; text-align:justify&quot;&gt;未经得物技术许可严禁转载，否则依法追究法律责任！&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5783135/blog/11066139</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/11066139</guid>
            <pubDate>Tue, 30 Apr 2024 08:30:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>OpenAI 与英国《金融时报》签署内容许可协议</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;OpenAI &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fcontent-partnership-with-financial-times&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;与英国《金融时报》达成合作，使其大型语言模型获得对《金融时报》文章的访问权。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;作为合作的一部分，两家公司将向 ChatGPT 用户提供《金融时报》的一部分内容。 OpenAI 表示，&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;通过此次合作，ChatGPT 用户将能够看到&lt;/span&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;「精选的摘要、引述以及《金融时报》新闻报道的链接&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;，以回应相关查询&lt;/span&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;」。不过 OpenAI 没有具体说明内容何时可以访问或在哪些版本的 ChatGPT 中进行访问。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img height=&quot;422&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-06b25d557240271062545cebf0391473d0e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;除了将《金融时报》的文章引入聊天机器人之外，OpenAI 还将使用这些内容来训练新的 AI 模型。OpenAI 没有透露与《金融时报》交易的条款。去年 12 月，在与 Axel Springer&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2023%2F12%2F13%2Fopenai-inks-content-licensing-deal-axel-springer%2F&quot; target=&quot;_blank&quot;&gt;签署了&lt;/a&gt;类似的许可协议后，《华尔街日报》&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wsj.com%2Fbusiness%2Fmedia%2Fopenai-to-pay-politico-parent-axel-springer-for-using-its-content-bdc33332%3Fmod%3Dfollowamazon&quot; target=&quot;_blank&quot;&gt;报道称&lt;/a&gt;，该合同预计将为这家德国出版商带来「可观的收入」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;与《金融时报》一样，Axel Springer 授予 OpenAI 在 ChatGPT 中显示精选文章摘要的权利，并就其内容对 LLM 进行培训。此外， OpenAI&amp;nbsp;还与其他几家媒体公司签署了类似的许可协议，如法国《世界报》和总部位于马德里的 Prisa Media，以及美联社&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2023%2F07%2F13%2Fap-partners-openai-explore-news-industry-use-cases-generative-ai%2F&quot; target=&quot;_blank&quot;&gt;。&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;该公司向&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F04%2F29%2Fopenai-inks-strategic-tie-up-with-uks-financial-times-including-content-use&quot; target=&quot;_blank&quot;&gt;TechCrunch&lt;/a&gt;&amp;nbsp;透露，迄今为止已经签署了大约十几份此类许可协议，且计划未来签署「更多」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;OpenAI 这一举措可能促使竞争对手进行效仿。谷歌公司也在进行大量投资，以扩大其语言模型可用的文本数量；其今年早些时候就披露了与 Reddit 的一项协议，授权该社交网络的内容用于 AI 培训项目。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Freddit-ai-content-licensing-deal-with-google-sources-say-2024-02-22%2F&quot; target=&quot;_blank&quot;&gt;据报道，&lt;/a&gt;该合同每年价值超过 6000 万美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#4a4a4a&quot;&gt;在 OpenAI 与《金融时报》的合作中，内容授权只是交易的一部分。两家公司还将合作为报纸读者开发新的 AI 功能。上月底，《金融时报》推出了一项生成式 AI 功能，使用户能够使用自然语言提示浏览其档案。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290336/openai-financial-times</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290336/openai-financial-times</guid>
            <pubDate>Tue, 30 Apr 2024 07:43:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>2023 年 Google Play 拒绝了 228 万款有风险的 Android 应用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;谷歌&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsecurity.googleblog.com%2F2024%2F04%2Fhow-we-fought-bad-apps-and-bad-actors-in-2023.html&quot; target=&quot;_blank&quot;&gt;报告&lt;/a&gt;称，该公司在 2023 年共阻止了 228 万款违反政策的 Android 应用在 Google Play 上架。以及发现并屏蔽了 333,000 个上传恶意软件、欺诈性应用程序或多次严重违反政策的 Google Play 帐户。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;相较之下，在 2022 年谷歌共封杀了 150 万个&quot;不良&quot;应用，并封禁了 17.3 万个严重违反商店政策的开发者账户。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;264&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-065db484eb169bd9c9a6e57b419bca6ab83.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该公司强调，他们的审查和安全举措都是基于 SAFE 原则所实施的，即：(S) 保护用户、(A) 倡导开发者保护、(F) 加强负责任的创新、(E) 推动平台防御。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年还在此基础上，进行了改进并推出了新措施，加强了对恶意提交内容的识别和删除 Google Play 上已有的危险内容的能力，其中包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;更严格的开发者注册和身份验证流程。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;引入针对 Android VPN 应用程序的独立 security reviews 和 badges。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;增加实时扫描功能，阻止恶意软件执行。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;固件强化 ，使 SoC 级缺陷更难被利用。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;扩展 SDK 索引 （现已覆盖 600 万个应用），帮助开发者为其项目选择安全的 SDK。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;除了屏蔽近 230 万个应用程序并封禁 333000 个违规发布者之外，谷歌还拒绝或纠正了 200,000 个应用程序提交的请求，以确保正确使用后台位置或短信访问等敏感权限。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，谷歌与 31 个 SDK 提供商合作，确保仅从安装了使用这些 SDK 的应用程序的设备中收集和共享最少量的敏感信息。该科技公司表示，这一举措直接影响了 Google Play 上的 79 万个应用程序，涵盖潜在的数千万甚至更多用户。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290311/google-play-rejected-228-million-risky-android-apps-2023</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290311/google-play-rejected-228-million-risky-android-apps-2023</guid>
            <pubDate>Tue, 30 Apr 2024 06:18:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>🎉劳动节献礼：Zadig V2.3 震撼上线，基础版免费放送大量新功能！🚀</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;div&gt;
  &lt;img height=&quot;1596&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c9717e89a521b34d40876f4fc97bc234726.png&quot; width=&quot;3750&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;亲爱的开发者们，劳动节将至，Zadig 团队送上特别礼物——全新 Zadig V2.3 版本！这不仅是一次稳定的升级，更是向广大开发者献上的一份厚礼。我们不仅推出了一系列新功能和优化，还进一步免费开放了基础功能，延续了自开源 2.0 架构发布以来的开放革新之路。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;Zadig 团队真诚期待每位用户都能享受到更高效、更稳定的开发体验。本次升级，我们特别增强了生产发布能力和稳定性。同时，优化了工作流执行效率，首屏加载性能有了显著提升，并大幅提高企业级规范治理能力和业务扩展性。以下是我们为您精心准备的升级亮点：&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span style=&quot;color:#fd2968&quot;&gt;文末更有周边好礼相赠&lt;/span&gt;&lt;/strong&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;span&gt;新功能亮点：&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· 生产发布增强&lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;：新增生产服务从命名空间导入和代码库同步功能，让发布更灵活。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-be4725ab6511dbdc93e248fe79c48313e8f.png&quot; width=&quot;2954&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;生产服务从 NS 导入和代码库同步&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· 工作流性能飞跃&lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;：优化工作流执行器性能，降低 API 请求数量，执行工作流页面首屏加载性能显著提升。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;2323&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ce8f43aa4fb29398b89998e046ed13ffbe7.png&quot; width=&quot;2685&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        性能提升示意图
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b53d07567fc6a32159d07fa3618d9f3fcef.png&quot; width=&quot;2954&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        执行工作流页面
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· 基础版功能大放送&lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;：免费开放交付物追踪、代码扫描模板库，支持 Windows 主机构建和部署。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dac1498fb3365bec28470cfd86c3baedbe6.png&quot; width=&quot;2954&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        开放交付物追踪
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1522&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-294ffff0ef6d87057e9ce58607c07d17cea.png&quot; width=&quot;2908&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        代码扫描模板配置
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1522&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6971f5026d9f36468460a616162e1a68409.png&quot; width=&quot;2908&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        开放 Windows 主机构建部署
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;span&gt;功能增强详情：&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· 基础模块&lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;：新增协作模式和发布计划配置用户组、全局项目角色管理等，实现更高效权限分配。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-20a67b19e9eb49b6d4214998bd5b0346146.png&quot; width=&quot;2954&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        配置全局项目角色
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-82f2888697909542620b2cde7563ed03ef1.png&quot; width=&quot;2954&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        使用全局项目角色
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· 工作流能力&lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;：支持更新 Istio 灰度策略，构建任务支持全选服务组件，部署任务支持输出聚合服务变量，满足多样化流程编排需求。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;1518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a6d1af4f72ceb39c40678f0cf49df382caf.png&quot; width=&quot;2954&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
       &lt;div&gt;
        更新 Istio 灰度策略任务
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;span&gt;基础版功能开放：&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;支持 Windows 主机的构建和部署。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;交付物追踪和代码扫描模板库支持。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;Helm Chart 实例化部署和环境命名空间共享。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;工作流新增了对象存储缓存，可按需编排服务部署顺序。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;服务支持 GitOps 自动更新&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;span&gt;其他修复及优化：&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;镜像列表加载性能提升。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;自定义账号系统字段校验增强。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;span&gt;&lt;span&gt;修复多项关键问题，提升系统稳定性。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;span&gt;社区动态：&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;感谢社区和伙伴的支持！许多用户已完成 Zadig v2.3 升级，享受新功能带来的便捷。&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;span&gt;了解更多：&lt;/span&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com%2Fzadig%2FZadig%2520v2.3%2Frelease-notes%2Fv2.3.1%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;Zadig v2.3.1 版本说明&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;strong&gt;&lt;span&gt;· &lt;/span&gt;&lt;/strong&gt;
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com%2Fzadig%2FZadig%2520v2.3%2Frelease-notes%2Fv2.3.0%2F&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&lt;span&gt;Zadig v2.3.0 版本说明&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
  &lt;span&gt;&lt;span&gt;Zadig 团队将持续努力，为社区和客户带来更优质的产品和服务。立即体验 Zadig V2.3，开启您的高效开发之旅！&lt;/span&gt;&lt;/span&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#fd2968&quot;&gt;&lt;strong&gt;即日起至 5 月 15 日&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#fd2968&quot;&gt;&lt;strong&gt;成功&lt;/strong&gt;&lt;strong&gt;申请&lt;/strong&gt;&lt;strong&gt;试用的用户&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#fd2968&quot;&gt;&lt;strong&gt;扫码留言您的注册 ID&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#fd2968&quot;&gt;&lt;strong&gt;可获 Zadig 限量周边组合一份&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#fd2968&quot;&gt;&lt;strong&gt;伴您开启五月新征程！&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;img height=&quot;942&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-218ea2fa1b00a6696d4b5e84d9f1f7d0e11.png&quot; width=&quot;1796&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
   &lt;/div&gt; 
   &lt;div&gt;
    &lt;img height=&quot;1158&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5b210d00f4884203c533341bb9e0af303f8.png&quot; width=&quot;2000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
    &lt;img height=&quot;1141&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-44783ef351611ef977821769c1bddc021a9.png&quot; width=&quot;2000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig&quot; target=&quot;_blank&quot;&gt;Zadig 在 Github&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://gitee.com/koderover/zadig&quot;&gt;Zadig 在 Gitee&lt;/a&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      &lt;strong&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/strong&gt;
     &lt;/div&gt; 
     &lt;div&gt; 
      &lt;p style=&quot;color:#002a64; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11059761&quot; target=&quot;_blank&quot;&gt;Zadig 与 GitOps：推动高效持续交付，加速产品迭代&lt;/a&gt;&amp;nbsp;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/10926966&quot; target=&quot;_blank&quot;&gt;DevOps 选型指南：Zadig / 云效 / Coding/Jenkins/GitLab/Argo/Tekton&lt;/a&gt;&amp;nbsp;/&lt;span style=&quot;background-color:#ffffff; color:#002a64&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/10316143&quot; target=&quot;_blank&quot;&gt;Jenkins 迁移 Zadig，新项目实施上线效率提升 6 倍&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#002a64&quot;&gt;&amp;nbsp;/&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/10093925&quot; target=&quot;_blank&quot;&gt;Zadig vs. Jenkins 详细比对：时代的选择与开发者之选&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/10322927&quot; target=&quot;_blank&quot;&gt;ZADIG 专家版倾情上线：一键高效发布，119 元 / 人月起，社区老友享年终福利&lt;/a&gt;&lt;/p&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290306/zadig-2-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290306/zadig-2-3-released</guid>
            <pubDate>Tue, 30 Apr 2024 06:05:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>【Java orm 框架使用性能比较】八</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h3&gt;orm 框架使用性能比较&lt;/h3&gt; 
&lt;h4&gt;比较 mybatis-plus、lazy、sqltoy、mybatis-flex、easy-query、mybatis-mp、jpa、dbvisitor、beetlsql、dream_orm 操作数据&lt;/h4&gt; 
&lt;h4&gt;环境：&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;idea 
jdk17
spring boot 3.0.7
mysql 8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;测试条件常规对象&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;orm 框架&lt;/th&gt; 
   &lt;th&gt;是否支持 xml&lt;/th&gt; 
   &lt;th&gt;是否支持 Lambda&lt;/th&gt; 
   &lt;th&gt;对比版本&lt;/th&gt; 
   &lt;th&gt;编码方式&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mybatis&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;3.5.4&lt;/td&gt; 
   &lt;td&gt;lambda +xml 优化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sqltoy&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;5.2.98&lt;/td&gt; 
   &lt;td&gt;lambda&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;lazy&lt;/td&gt; 
   &lt;td&gt;✖️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;1.2.4-JDK17-SNAPSHOT&lt;/td&gt; 
   &lt;td&gt;lambda&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mybatis-flex&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;1.8.0&lt;/td&gt; 
   &lt;td&gt;lambda +xml 优化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;easy-query&lt;/td&gt; 
   &lt;td&gt;✖️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;1.10.31&lt;/td&gt; 
   &lt;td&gt;lambda&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mybatis-mp&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;1.4.1&lt;/td&gt; 
   &lt;td&gt;xml 优化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;jpa&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;3.0.7&lt;/td&gt; 
   &lt;td&gt;----------------------&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dbvisitor&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;5.4.1&lt;/td&gt; 
   &lt;td&gt;xml 优化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;beetlsql&lt;/td&gt; 
   &lt;td&gt;支持 md&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;3.26.0-RELEASE&lt;/td&gt; 
   &lt;td&gt;insert ignore into 优化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dream_orm&lt;/td&gt; 
   &lt;td&gt;✖️&lt;/td&gt; 
   &lt;td&gt;☑️&lt;/td&gt; 
   &lt;td&gt;1.3.0&lt;/td&gt; 
   &lt;td&gt;insert ignore into (当前版本不支持)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;数据库表 (含有唯一性索引 s_u)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-sql&quot;&gt;CREATE TABLE `sys_user`
(
    `column_name` varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT &#39;额外字段&#39;,
    `create_time` datetime                                DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;创建时间&#39;,
    `id`          bigint NOT NULL AUTO_INCREMENT COMMENT &#39;用户 ID&#39;,
    `is_deleted`  tinyint(1) DEFAULT NULL COMMENT &#39;null&#39;,
    `password`    varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT &#39;密码&#39;,
    `scope`       varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT &#39;null&#39;,
    `status`      tinyint(1) DEFAULT NULL COMMENT &#39;状态&#39;,
    `update_time` datetime                                DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;更新时间&#39;,
    `username`    varchar(255) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT &#39;用户名&#39;,
    PRIMARY KEY (`id`) USING BTREE,
    UNIQUE KEY `s_u` (`scope`,`username`)
) ENGINE=InnoDB AUTO_INCREMENT=9223371632070323791 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;比较方法:增加、修改、删除、分页查询（当前项目暂时只比较批量新增和分页）&lt;/h3&gt; 
&lt;h4&gt;项目设计&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;声明 ORMRepository 接口提供对应增删改查方法&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;img height=&quot;310&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-44c4fe74dda549838bafdeb8d2fd0905b39.png&quot; width=&quot;624&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;声明 ORMComparisonRepository 接口，继承 ORMRepository 下游由不同 ORM 实现&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;声明 SysUserRepository 接口，继承 ORMRepository 用于循环调用不同 orm 实现方法执行方法测试产生测试结果&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;声明抽象类 SysUserRepositoryAbstractRecord 继承 ORMComparisonRepository 并且提供对应的框架执行结果存储&amp;nbsp;&lt;/p&gt; &lt;p&gt;&lt;img height=&quot;287&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6edf23e8665a4c7aba9e0456fbf623e5bb8.png&quot; width=&quot;774&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;不同 ORM 框架 mybatis-plus、sqltoy、Lazy、easy-query、mybatis-mp、jpa、dbvisitor、beetlsql、dream_orm 创建 ORMComparisonRepository 的实现&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;img height=&quot;554&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9e5ed5457d69121214d25605d6cc6165d64.png&quot; width=&quot;409&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;不同 ORM 操作数据的实现&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;测试条件，批量插入数据 10、100、1000、10000、100000 ，分页查询数据 10、100、1000、10000、100000&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;项目启动后使用浏览器打开 http://localhost:1003/sys/user/run-compare
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;测试条件（细节比较） 批量插入数据 1～10000，分页查询数据 1～10000&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;项目启动后使用浏览器打开 http://localhost:1003/sys/user/run-particulars-compare
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;测试执行过程&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;清空需要插入表中所有数据
通过 ORM 框架进行数据批量新增、而后进行分页查询，记录消耗时间，输出 md 文档
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%3A1003%2F&quot; target=&quot;_blank&quot;&gt;查看结果曲线图&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;919&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1ec30e91284236239ed26d773c90b139830.png&quot; width=&quot;1897&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;测试结果（结果只提供参考）&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;MYBATIS_FLEX(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;84 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;827 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;7199 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;LAZY(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;51 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;367 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3429 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;MYBATIS_MP(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;2 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;77 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;677 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;7177 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;DB_VISITOR(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;24 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;166 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1609 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;16990 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;MYBATIS_PLUS(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;131 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;714 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;7349 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;JPA(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;13 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;30 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1247 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9894 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;99568 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;EASY_QUERY(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;10 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;21 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;202 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1574 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;15692 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;SQLTOY(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;5 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;17 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;189 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1537 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;15918 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;DREAM_ORM(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;12 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;19 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;159 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1543 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;15437 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;BEETL_SQL(batchStory)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;17 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;30 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;174 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1719 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;16831 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;MYBATIS_FLEX(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;5 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;19 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;153 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1388 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;LAZY(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;6 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;11 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;93 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;700 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;MYBATIS_MP(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;12 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;111 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;988 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;DB_VISITOR(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;4 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;8 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;70 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;782 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;MYBATIS_PLUS(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;25 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;152 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1309 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;JPA(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;15 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;3 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;25 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;108 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1082 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;EASY_QUERY(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;7 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;61 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;637 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;SQLTOY(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;14 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;5 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;16 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;80 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;602 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;DREAM_ORM(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;7 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;1 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;13 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;62 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;719 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;BEETL_SQL(findPage)&lt;/th&gt; 
   &lt;th&gt;影响行数:10&lt;/th&gt; 
   &lt;th&gt;影响行数:100&lt;/th&gt; 
   &lt;th&gt;影响行数:1000&lt;/th&gt; 
   &lt;th&gt;影响行数:10000&lt;/th&gt; 
   &lt;th&gt;影响行数:100000&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;执行时间:&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;18 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;2 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;14 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;89 毫秒&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;861 毫秒&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;写在最后&lt;/h4&gt; 
&lt;p&gt;经过将近一周时间的框架收集、学习、实验、编码、测试市面上常见的 ORM 框架，过程中拜读了很多作者的博文、样例，学习很多收获很多。 重新梳理下整理的框架：mybatis-plus、lazy、sqltoy、mybatis-flex、easy-query、mybatis-mp、jpa、dbvisitor、beetlsql、dream_rom&lt;/p&gt; 
&lt;p&gt;下面从一下几点出发作出总结&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;文档方面：学习过程中 mybatis-plus、jpa 提供的文档资料是比较全和完善，经得住市场的考验&lt;/li&gt; 
 &lt;li&gt;技术方面：beetlsql、easy-query、mybatis 系列，三类框架都已经支持 spring 和 solon 生态，其技术架构设计可以推荐大家学习&lt;/li&gt; 
 &lt;li&gt;并发方面：jpa、db_visitor 还需要开发时候深度优化处理&lt;/li&gt; 
 &lt;li&gt;大数据存储方面： Lazy 具有一定优势&lt;/li&gt; 
 &lt;li&gt;大数据查询方面：sqltoy、dream_orm、Easy_query、lazy、db_visitor 反射处理的比较优秀&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;以上是个人整理的观点，如果大家有不同的想法和意见可以在&lt;a href=&quot;https://gitee.com/wujiawei1207537021&quot;&gt;gitee&lt;/a&gt;或者个人博客留言&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.csdn.net%2Fqq_22903677%3Ftype%3Dblog&quot; target=&quot;_blank&quot;&gt;CSDN&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;细节数据对比（一万以内基本相差不大）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;细节数据对比，数据属于并发行测试数据，如果测试总数是一百，那么会执行一百次 batchStory，一百次 findPage 每次执行的条数在之前数据的基础上+1&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;从形成的折线图看（具体趋势看排名与测试结果）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;存储性能对比: lazy、mybatis-flex、mybatis-mp、mybatis-plus、easy-query、dream_rom、sqltoy、beetlSql 更适合并发性数据存储。jpa、db_visitor 处理耗时较长&lt;/li&gt; 
 &lt;li&gt;分页查询性能对比: lazy、mybatis-flex、mybatis-mp、mybatis-plus、 dream_rom、easy-query、sqltoy、db_visitor、beetlSql 都比较稳定。jpa 处理时间明显起伏&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;921&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-348d957a41325a2dbeb1a1d5b327c97ab78.png&quot; width=&quot;1915&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;批量保存：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;一万条数据以内 lazy、mybatis-flex、mybatis-mp、mybatis-plus、easy-query、sqltoy、beetlSql、jpa、db_visitor 性能趋于一致&lt;/li&gt; 
 &lt;li&gt;十万数据时，处理时间由快到慢依次是: 
  &lt;ul&gt; 
   &lt;li&gt;一万毫秒以内:lazy、mybatis-flex、mybatis-mp、mybatis-plus、&lt;/li&gt; 
   &lt;li&gt;一万毫秒以上: easy-query、dream_rom、sqltoy、beetlSql、db_visitor、jpa，其中 db_visitor、jpa 处理时间明显起伏&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;分页查询：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;一万条数据以内，几款 ORM 均保持在 200 毫秒内&lt;/li&gt; 
 &lt;li&gt;十万数据时，处理时间由快到慢依次是: 
  &lt;ul&gt; 
   &lt;li&gt;一千毫秒以内：sqltoy、dream_rom、db_visitor、easy-query、lazy、beetlSql、mybatis-plus&lt;/li&gt; 
   &lt;li&gt;一千毫秒以上：mybatis-mp、jpa、mybatis-flex&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;快速数据对比 (大数据曲线图)&lt;/h3&gt; 
&lt;p&gt;&lt;img height=&quot;651&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1aac9a8c9f98c823bb94e6c8cc120b67cb9.png&quot; width=&quot;1413&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;650&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f3593ad8a85e78f34b7bce353ac20bab679.png&quot; width=&quot;1402&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/wujiawei1207537021/spring-orm-integration-compare&quot;&gt;当前项目地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/wujiawei1207537021/wu-framework-parent/tree/master/wu-database-parent&quot;&gt;lazy-orm 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/baomidou/mybatis-plus&quot;&gt;mybatis 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/sagacity/sagacity-sqltoy&quot;&gt;sqltoy 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/mybatis-flex/mybatis-flex&quot;&gt;mybatis-flex 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/xuejm/easy-query&quot;&gt;easy-query 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/mybatis-mp/mybatis-mp&quot;&gt;mybatis-mp 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/zycgit/dbvisitor&quot;&gt;dbvisitor 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/xiandafu/beetlsql&quot;&gt;beetlsql 地址&lt;/a&gt;&lt;/h4&gt; 
&lt;h4&gt;&lt;a href=&quot;https://gitee.com/moxiaoai/dream-orm&quot;&gt;dream-orm 地址&lt;/a&gt;&lt;/h4&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290292</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290292</guid>
            <pubDate>Tue, 30 Apr 2024 04:22:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>「星光不问赶路人，时光不负有心人」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;五一假期来临之际，开放签电子签章团队祝大家劳动节快乐！愿这个五一小长假带给你轻松愉悦的心情，工作之余享受生活的美好。愿你的每一分努力都有回报，每一个梦想都逐渐实现。休息是为了走更长远的路，愿你假期归来，能量满满，继续在自己的领域里发光发热。五一劳动节，向所有辛勤工作的你致以最诚挚的敬意！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4a661ea02c936e94fa5133506414cbc3406.png&quot; width=&quot;961&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;PS：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;「计划赶不上变化」高度紧张的两个半月内，我们将电子签章系统版本升至 2.0 版本。这两周目标计划全面优化用户体验《&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/288941&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;开放签电子签章：停止新增，优化体验，前进更进（五一假期前工作）&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;》。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#ff0000&quot;&gt;结果团队成员接连生病了.....&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;417&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56069cc90801c734f6e5e176bae77c8a0e3.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;北京这一周的天气忽冷忽热，四位同事接连感冒发烧，预计下个版本上线时间要晚一周上线，等待上线的用户深感抱歉，五一假期后我们会以全新面貌加班加点赶工程。五月份开源工具版会以用户提出的需求将源代码开放至仓库。六月份后计划在我们经济承受范围内向一部分用户开放高级版本，助力小微企业，大家敬请期待！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开放签电子签章团队五一放假期间，如遇到集成联调问题可以正常联系客服～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290286</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290286</guid>
            <pubDate>Tue, 30 Apr 2024 03:55:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Ubuntu 24.10 代号为</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Ubuntu 24.04 LTS 才刚刚&lt;a href=&quot;https://www.oschina.net/news/289586/ubuntu-24-04-noble-numbat-lts&quot;&gt;发布&lt;/a&gt;，下一个版本 Ubuntu 24.10 近日也已确定了代号 ——&amp;nbsp;Oracular Oriole（神谕黄鹂）。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-534454039ec76beda91938adbea74fb9f06.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Ubuntu 24.10 大概率会采用 Linux 6.11 内核、GNOME 47 桌面、GCC 14.1 编译器以及其他升级。&lt;/p&gt; 
&lt;p&gt;当然我们也期待在这一发布周期内 Canonical 继续完善新的桌面安装程序，以及可能计划开展的其他工作。硬件方面，Ubuntu 24.10 有望能支持即将到来的英特尔 Lunar Lake 平台、英特尔 Battlemage 显卡、AMD Zen 5、AMD RDNA4 显卡以及其他即将到来的硬件。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290276/ubuntu-24-10-codename-oracular-oriole</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290276/ubuntu-24-10-codename-oracular-oriole</guid>
            <pubDate>Tue, 30 Apr 2024 03:32:36 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Xshell 8 开启 Beta 公测：支持 RDP 协议、可远程连接 Windows 10/11</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Xshell 8 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xshell.com%2Fzh%2Fversion-8-open-beta%2F&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;开启 Beta 公测。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;下载地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.xshell.com%2Fzh%2Fversion-8-open-beta%2F%23download&quot; target=&quot;_blank&quot;&gt;https://www.xshell.com/zh/version-8-open-beta/#download&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;新功能亮点如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;身份验证配置文件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;触发器&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1b59373c3dc5ddec6e723c3acd4790c455c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;电脑通知&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-59191b82b8b4c741d95bbe74b0bd64cd942.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;快速命令管理器&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6e730e41abedacc9bbd4f1ebd6edd0af384.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;十六进制查看器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RDP 支持&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3f0db73f62c75b5386e0db775024d579cf3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;快速启动&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bc0488ec2cfe7bda598babf88ed4a3397b4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;集成日志查看器&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ada4985eeadb19d48ebb5451b4f11c3baf0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自定义会话图标&lt;/li&gt; 
 &lt;li&gt;脚本参数支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnetsarang.atlassian.net%2Fwiki%2Fspaces%2FENSUP%2Fpages%2F2236514305%2FOpen%2BBeta%2B8%2BNew%2BFeatures&quot; target=&quot;_blank&quot;&gt;点此查看详情&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290267/xshell-8-beta</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290267/xshell-8-beta</guid>
            <pubDate>Tue, 30 Apr 2024 03:02:09 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>谷歌证实裁员，涉及 Flutter、Dart 和 Python 团队</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;近日，有关谷歌对 Flutter、Dart、Python 等关键团队进行了裁员一事在社交媒体上广为流传。对此，谷歌则向外媒 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F04%2F29%2Fgoogle-lays-off-staff-from-flutter-dart-python-weeks-before-its-developer-conference%2F&quot; target=&quot;_blank&quot;&gt;TechCrunch 证实&lt;/a&gt;，该公司确实已经进行了裁员，但没有透露具体的团队、角色以及裁员人数。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;334&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0430/104944_yBq9_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;谷歌发言人 Alex García-Kummert 称：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「正如我们曾说过的，我们正在负责任地投资于公司最重要的优先事项和未来的重大机遇。 为了让我们更好地抓住这些机会，从 2023 年下半年到 2024 年，我们的许多团队进行了变革，以提高效率、更好地工作、消除层级，并将资源调整到最重要的产品优先事项。通过这些措施，我们正在简化我们的结构，让员工有更多机会从事最具创新性和最重要的进展以及公司最大的优先事项，同时减少官僚作风和层级。」&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但谷歌方面澄清道，此次裁员并非全公司范围内的裁员，而是正常业务过程中的重组，受影响的员工将能够申请谷歌的其他空缺职位。他们将根据当地要求为所有受影响的员工提供支持，为他们提供时间在谷歌或其他地方寻找不同的职位，获得再就业服务和遣散费。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Flutter 和 Dart 的一位 PM 在 X 平台上发帖透露，此次裁员影响了很多团队，并且「很多伟大的项目都失去了人员」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Google PM Kevin Moore 在 Reddit 上的 Flutter 开发社区中写道：「我们很难过，但仍在为 I/O 及以后的工作努力。Flutter 和 Dart 所受到的影响并不比其他团队多或少。我们知道你们非常关心这个项目和团队，以及我们共同建立的令人敬畏的生态系统......你们把赌注押在 Flutter 和 Dart 上。我也是，谷歌也是。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;谷歌也向 TechCrunch 表示，Flutter 将在今年 5 月份的 I/O 大会上分享新的更新内容。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;尽管谷歌没有详细说明裁员人数，但其部分裁员名单可能已经在 4 月 24 日提交的 WARN 通知中得到了确认。WARN，即 《加州工人调整和再培训通知法》，要求拥有 100 名以上员工的雇主在裁员前 60 天发出通知。在这份文件中，谷歌表示将在桑尼维尔的三个地点裁员共 50 人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/289891/google-lays-off-its-python-team&quot; target=&quot;_blank&quot;&gt;谷歌 Python 基金会团队被裁员&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290261/google-lays-off-staff-flutter-dart-python</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290261/google-lays-off-staff-flutter-dart-python</guid>
            <pubDate>Tue, 30 Apr 2024 02:45:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>GitHub 发布 AI 原生开发工具 GitHub Copilot Workspace</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;GitHub 宣布&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.blog%2F2024-04-29-github-copilot-workspace%2F&quot; target=&quot;_blank&quot;&gt;推出 &lt;/a&gt;GitHub Copilot Workspace 技术预览版。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1e4676539680fb8735b79534a446581cf7c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通过 Copilot Workspace，开发者可以用自然语言进行&lt;strong&gt;头脑风暴、规划、构建、测试和运行代码&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;其工作原理如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;一切从任务开始&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;从一个 GitHub Issue、Pull Request 或仓库中打开 GitHub Copilot Workspace。（截图显示了 octoacademy 仓库中的一个 Issue。）&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-922a47cc10b4c3895e494724ddc02913486.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;计划的制定&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;从任务进展到规范化步骤，概述你想通过 Copilot Workspace 实现的目标。这些步骤是可编辑的，允许你反复迭代。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-41b43b7d7c4d1a0f22979582ba8fb9b6373.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;全面可编辑&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Copilot Workspace 提供的所有内容，从计划到代码，都可以完全编辑，使你能不断调整，直到对计划满意。你也可以通过集成终端运行测试、构建等步骤。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-17cd26b37ff046e6c966ab1c6b7b14843ca.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;直接运行&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;计划完善后，你可以在 Copilot Workspace 中运行代码，并在 Codespace 中调整，直到对最终结果满意。你还可以通过链接分享 Workspace，使团队成员查看你的工作并进行迭代。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-99f31d9fbefa7c1e54ac65b690b2ba20303.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;提交与审查&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;完成后，提交 Pull Request，运行 GitHub Actions 和代码扫描，并请求团队成员进行审查。他们可以通过 Copilot Workspace 查看你从构思到代码的全过程。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;移动兼容&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;GitHub Copilot Workspace 支持在任何设备上使用，使你可以随时随地进行开发。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290253/github-copilot-workspace</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290253/github-copilot-workspace</guid>
            <pubDate>Tue, 30 Apr 2024 02:13:09 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>【小白课程】openKylin 系统监视器新功能介绍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;openKylin 系统监视器是一款面向 openKylin 操作系统用户的桌面应用，它满足了用户对于各种系统资源的监控和管理。在前面&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg2MDc5MDU1OQ%3D%3D%26mid%3D2247490584%26idx%3D1%26sn%3D17c37291c332e0ab9cc736d6721e4f1e%26chksm%3Dce205668f957df7e30f2ca9e79118fa4d9c88d0681e912f41aad846bed45c1ca5d6fdeee5d92%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;章节&lt;/a&gt;中，我们为大家讲解介绍了 openKylin 系统监视器的功能作用，包括处理器、交换空间、网络、磁盘、进程和服务等。今天我们就来讲一讲它即将在 openKylin 2.0 版本上新的那些好用功能。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;一、最小化到托盘显示&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;以前大家点击右上角的「X」按钮，系统监视器将直接退出；现在 UKUI SIG 增加了最小化到托盘显示的功能，点击右上角的「X」按钮会在任务栏显示一个系统监视器图标，将鼠标悬浮上去可显示 CPU 占用率、网络上传与下载速率、&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;内存占用率&lt;/span&gt;&lt;span&gt;、磁盘占用率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;179&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-326f98318ea2fcefd906b5db885dcb0e9f1.png&quot; width=&quot;332&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;鼠标右键菜单可退出系统监视器或激活系统监视器窗口，鼠标左键单击激活系统监视器窗口。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;199&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-80f01b154bc9cf2b21a2286aa7a4ce351a0.png&quot; width=&quot;323&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;二、处理器、内存、网络历史等详情页显示&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;openKylin 系统监视器新增处理器、内存、网络历史三个模块的详情显示界面，可以通过点击主界面左侧的处理器、内存、网络历史模块，在主界面右边进行详情显示，并可以通过点击右上角的「隐藏详情」按钮返回进程页面。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;新增处理器详情页展示处理器总利用率、当前频率、频率、插槽、逻辑处理器、虚拟化、L1 缓存（指令）、L1 缓存（数据）、L2 缓存、L3 缓存、负载均衡、文件描述符数、进程数、线程数、计算机名等信息。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;961&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-37f820d3f173d4586f0d3ecdfae67cdda98.png&quot; width=&quot;1529&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;新增内存、交换空间详情页，展示已使用内存、可用内存、共享内存、高速缓存、数据缓存、交换缓存区、活跃的缓冲文件、不活跃的缓冲文件、脏页、映射大小、交换空间大小、可用交换空间、内核数据结构缓存等信息。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;961&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7afae66d561da8abd05c09b9a6807cc2c9b.png&quot; width=&quot;1529&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;新增网络历史详情页，分别展示各个网卡接收与发送网速波动图、IPv4（已连接）、IPv6（已连接）、连接类型、网络名称（已连接的 WIFI）、信号质量（已连接的 WIFI）、信号强度（已连接的 WIFI）、底噪（已连接的 WIFI）、MAC、速率、接收包数量、总计接收、接收（错误包）、接收（丢弃包）、接收 FIFO、分组帧错误、发送包数量、总计发送、发送（错误包）、发送（丢弃包）、发送 FIFO、载波损耗等 22 项信息，&lt;span style=&quot;background-color:#ffffff&quot;&gt;点击曲线图可切换网卡信息。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;674&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9ea3dfe1a69ae307ae505012d3565668110.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;三、快捷键&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;新增两个快捷键功能，提高键盘易用性。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;快捷激活搜索框&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在系统监视器界面可通过 Ctrl + E 快速激活搜索框。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;快捷激活右键菜单&lt;/span&gt;&lt;/h3&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;系统监视器中含有右键菜单的位置，均可在获取焦点后通过 Shift+F10 激活右键菜单。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;以上就是 openKylin 系统监视器即将上新的全部功能介绍啦，后续将会推出更多的功能，以便提高用户对系统资源的管理效率。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290246</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290246</guid>
            <pubDate>Tue, 30 Apr 2024 01:45:06 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>JAVA 下唯一一款搞定 OLTP+OLAP 的强类型查询这就是最好用的 ORM 相见恨晚</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;JAVA 下唯一一款搞定 OLTP+OLAP 的强类型查询这就是最好用的 ORM 相见恨晚&lt;/h1&gt; 
&lt;h2&gt;介绍&lt;/h2&gt; 
&lt;p&gt;首先非常感谢 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnetcore%2FFreeSql&quot; target=&quot;_blank&quot;&gt;FreeSQL&lt;/a&gt; 提供的部分源码,让我借鉴了不少功能点,整体设计并没有参考&lt;code&gt;FreeSQL&lt;/code&gt;(因为 java 压根没有 expression 所以没办法参考) 只是在数据库方言上&lt;code&gt;FreeSQL&lt;/code&gt;提供的 SQL 让我少走了很多弯路,所以才让&lt;code&gt;easy-query&lt;/code&gt;可以走的这么迅速&lt;/p&gt; 
&lt;p&gt;丑话说在前头,这是 java 下面唯一一款可以完全替代&lt;code&gt;SQL&lt;/code&gt;的强类型 ORM,完美支持 OLTP 和 OLAP 语法筛选记住是唯一一款&lt;/p&gt; 
&lt;p&gt;想体验完整版请查看文档博客篇幅有限见谅本次仅展示 OLTP 的对象关联查询&lt;/p&gt; 
&lt;h3&gt;easy-query&lt;/h3&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxuejmnet.github.io%2Feasy-query-doc%2F&quot; target=&quot;_blank&quot;&gt;文档地址&lt;/a&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxuejmnet.github.io%2Feasy-query-doc%2F&quot; target=&quot;_blank&quot;&gt;https://xuejmnet.github.io/easy-query-doc/&lt;/a&gt; (为什么没有 gitee 的文档因为 gitee pages 挂掉了目前没办法更新)&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuejmnet%2Feasy-query&quot; target=&quot;_blank&quot;&gt;GITHUB 地址&lt;/a&gt; &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxuejmnet%2Feasy-query&quot; target=&quot;_blank&quot;&gt;https://github.com/xuejmnet/easy-query&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://gitee.com/xuejm/easy-query&quot;&gt;GITEE 地址&lt;/a&gt; &lt;a href=&quot;https://gitee.com/xuejm/easy-query&quot;&gt;https://gitee.com/xuejm/easy-query&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;java 下面唯一一款支持强类型 OLTP 和 OLAP 语法并且支持分表分库的最好用的 ORM,为什么是最好用的 OLTP 那么我们先来看一个简单的例子&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户、角色、菜单典型的多对多关联关系 (隐式子查询)&lt;/li&gt; 
 &lt;li&gt;其中用户和用户所在地址为一对一关系 (隐式 join)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
@Table(&quot;t_user&quot;)
@Data
@EntityProxy
public class SysUser implements ProxyEntityAvailable&amp;lt;SysUser , SysUserProxy&amp;gt; {
    @Column(primaryKey = true)
    private String id;
    private String name;
    private LocalDateTime createTime;

    @Navigate(value = RelationTypeEnum.ManyToMany,
            mappingClass = UserRole.class,
            selfMappingProperty = &quot;userId&quot;,
            targetMappingProperty = &quot;roleId&quot;)
    private List&amp;lt;SysRole&amp;gt; roles;

    @Navigate(value = RelationTypeEnum.OneToOne,targetProperty = &quot;userId&quot;)
    private SysUserAddress address;

    @Override
    public Class&amp;lt;SysUserProxy&amp;gt; proxyTableClass() {
        return SysUserProxy.class;
    }
}


@Table(&quot;t_role&quot;)
@Data
@EntityProxy
public class SysRole implements ProxyEntityAvailable&amp;lt;SysRole, SysRoleProxy&amp;gt; {
    @Column(primaryKey = true)
    private String id;
    private String name;
    private LocalDateTime createTime;

    @Navigate(value = RelationTypeEnum.ManyToMany,
            mappingClass = UserRole.class,
            selfMappingProperty = &quot;roleId&quot;,
            targetMappingProperty = &quot;userId&quot;)
    private List&amp;lt;SysUser&amp;gt; users;

    @Navigate(value = RelationTypeEnum.ManyToMany,
            mappingClass = RoleMenu.class,
            selfMappingProperty = &quot;roleId&quot;,
            targetMappingProperty = &quot;menuId&quot;)
    private List&amp;lt;SysMenu&amp;gt; menus;

    @Override
    public Class&amp;lt;SysRoleProxy&amp;gt; proxyTableClass() {
        return SysRoleProxy.class;
    }
}


@Table(&quot;t_user_role&quot;)
@Data
@EntityProxy
public class UserRole implements ProxyEntityAvailable&amp;lt;UserRole , UserRoleProxy&amp;gt; {
    @Column(primaryKey = true)
    private String id;
    private String userId;
    private String roleId;

    @Override
    public Class&amp;lt;UserRoleProxy&amp;gt; proxyTableClass() {
        return UserRoleProxy.class;
    }
}


@Table(&quot;t_menu&quot;)
@Data
@EntityProxy
public class SysMenu implements ProxyEntityAvailable&amp;lt;SysMenu , SysMenuProxy&amp;gt; {
    @Column(primaryKey = true)
    private String id;
    private String name;
    private String route;
    private String icon;

    @Navigate(value = RelationTypeEnum.ManyToMany,
            mappingClass = RoleMenu.class,
            selfMappingProperty = &quot;menuId&quot;,
            targetMappingProperty = &quot;roleId&quot;)
    private List&amp;lt;SysRole&amp;gt; roles;

    @Override
    public Class&amp;lt;SysMenuProxy&amp;gt; proxyTableClass() {
        return SysMenuProxy.class;
    }
}


@Table(&quot;t_role_menu&quot;)
@Data
@EntityProxy
public class RoleMenu implements ProxyEntityAvailable&amp;lt;RoleMenu , RoleMenuProxy&amp;gt; {
    @Column(primaryKey = true)
    private String id;
    private String roleId;
    private String menuId;

    @Override
    public Class&amp;lt;RoleMenuProxy&amp;gt; proxyTableClass() {
        return RoleMenuProxy.class;
    }
}
@Table(&quot;t_user_address&quot;)
@Data
@EntityProxy
public class SysUserAddress implements ProxyEntityAvailable&amp;lt;SysUserAddress , SysUserAddressProxy&amp;gt; {
    @Column(primaryKey = true)
    private String id;
    private String userId;
    private String province;
    private String city;
    private String area;
    private String addr;

    @Override
    public Class&amp;lt;SysUserAddressProxy&amp;gt; proxyTableClass() {
        return SysUserAddressProxy.class;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;对应关系为用户和角色是多对多,角色和菜单也是多对多&lt;/p&gt; 
&lt;h2&gt;案例 1&lt;/h2&gt; 
&lt;p&gt;查询杭州或绍兴的用户&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
        List&amp;lt;SysUser&amp;gt; userInHz = easyEntityQuery.queryable(SysUser.class)
                .where(s -&amp;gt; {
                    //隐式子查询会自动 join 用户表和地址表
                    s.or(()-&amp;gt;{
                        s.address().city().eq(&quot;杭州市&quot;);
                        s.address().city().eq(&quot;绍兴市&quot;);
                    });
                }).toList();
SELECT
    t.`id`,
    t.`name`,
    t.`create_time` 
FROM
    `t_user` t 
LEFT JOIN
    `t_user_address` t1 
        ON t1.`user_id` = t.`id` 
WHERE
    (
        t1.`city` = &#39;杭州市&#39; 
        OR t1.`city` = &#39;绍兴市&#39;
    )
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;查询用户叫做小明的返回小明的姓名和小明所在地址&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
        List&amp;lt;Draft2&amp;lt;String, String&amp;gt;&amp;gt; userNameAndAddr = easyEntityQuery.queryable(SysUser.class)
                .where(s -&amp;gt; {
                    s.name().eq(&quot;小明&quot;);
                }).select(s -&amp;gt; Select.DRAFT.of(
                        s.name(),
                        s.address().addr()//隐式 join 因为用户返回了地址标的地址信息
                )).toList();

SELECT
    t.`name` AS `value1`,
    t1.`addr` AS `value2` 
FROM
    `t_user` t 
LEFT JOIN
    `t_user_address` t1 
        ON t1.`user_id` = t.`id` 
WHERE
    t.`name` = &#39;小明&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;案例 2&lt;/h2&gt; 
&lt;p&gt;查询用户下面存在角色是&lt;code&gt;收货员&lt;/code&gt;的用户&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
        List&amp;lt;SysUser&amp;gt; 收货员 = easyEntityQuery.queryable(SysUser.class)
                .where(s -&amp;gt; {
                    s.roles().where(role -&amp;gt; {
                        role.name().eq(&quot;收货员&quot;);
                    }).any();
                }).toList();

SELECT
    t.`id`,
    t.`name`,
    t.`create_time` 
FROM
    `t_user` t 
WHERE
    EXISTS (
        SELECT
            1 
        FROM
            `t_role` t1 
        WHERE
            EXISTS (
                SELECT
                    1 
                FROM
                    `t_user_role` t2 
                WHERE
                    t2.`role_id` = t1.`id` 
                    AND t2.`user_id` = t.`id` LIMIT 1
            ) 
            AND t1.`name` = &#39;收货员&#39; LIMIT 1
        )
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;案例 3&lt;/h2&gt; 
&lt;p&gt;查询用户下面存在角色是&lt;code&gt;XX 员&lt;/code&gt;,并且存在个数大于 5 个的用户,就是说需要满足用户下面的角色是&lt;code&gt;xx 员&lt;/code&gt;的起码有 5 个及以上的&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
        List&amp;lt;SysUser&amp;gt; 收货员 = easyEntityQuery.queryable(SysUser.class)
                .where(s -&amp;gt; {
                    //筛选条件为角色集合里面有角色名称叫做 xx 员的
                    s.roles().where(role -&amp;gt; {
                        role.name().likeMatchRight(&quot;员&quot;);
                    }).count().gt(5L);//count 数量大于 5 个
                }).toList();


-- 第 1 条 sql 数据
SELECT
    t.`id`,
    t.`name`,
    t.`create_time` 
FROM
    `t_user` t 
WHERE
    (
        SELECT
            COUNT(*) 
        FROM
            `t_role` t1 
        WHERE
            EXISTS (
                SELECT
                    1 
                FROM
                    `t_user_role` t2 
                WHERE
                    t2.`role_id` = t1.`id` 
                    AND t2.`user_id` = t.`id` LIMIT 1
            ) 
            AND t1.`name` LIKE &#39;% 员&#39;
        ) &amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;案例 4&lt;/h2&gt; 
&lt;p&gt;查询用户下面存在的任意角色不大于 2022 年创建的&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;

LocalDateTime localDateTime = LocalDateTime.of(2022, 1, 1, 0, 0);
List&amp;lt;SysUser&amp;gt; 收货员 = easyEntityQuery.queryable(SysUser.class)
        .where(s -&amp;gt; {
            //筛选条件为角色集合里面有角色最大时间不能大于 2022 年的
            s.roles().max(role -&amp;gt; role.createTime()).lt(localDateTime);
        }).toList();

SELECT
    t.`id`,
    t.`name`,
    t.`create_time` 
FROM
    `t_user` t 
WHERE
    (
        SELECT
            MAX(t1.`create_time`) 
        FROM
            `t_role` t1 
        WHERE
            EXISTS (
                SELECT
                    1 
                FROM
                    `t_user_role` t2 
                WHERE
                    t2.`role_id` = t1.`id` 
                    AND t2.`user_id` = t.`id` LIMIT 1
            )
        ) &amp;lt; &#39;2022-01-01 00:00&#39;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;案例 5&lt;/h2&gt; 
&lt;p&gt;查询每个用户和前 3 个最早创建的角色 (支持分页) 适用于评论和评论子表前 N 个&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
        List&amp;lt;SysUser&amp;gt; 收货员 = easyEntityQuery.queryable(SysUser.class)
                //前面的表达式表示要返回 roles 后面的表示如何返回返回按时间正序的 3 个
                .includes(s -&amp;gt; s.roles(),x-&amp;gt;{
                    x.orderBy(r-&amp;gt;r.createTime().asc()).limit(3);
                })
                .toList();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;案例 6&lt;/h2&gt; 
&lt;p&gt;查询用户小明下面的菜单&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;
//方式 1 多次查询
        List&amp;lt;SysMenu&amp;gt; menus = easyEntityQuery.queryable(SysUser.class)
                .where(s -&amp;gt; {
                    s.name().eq(&quot;小明&quot;);
                })
                .toList(x -&amp;gt; x.roles().flatElement().menus().flatElement());


//方式 2 一次次查询
        List&amp;lt;SysMenu&amp;gt; menus = easyEntityQuery.queryable(SysMenu.class)
                .where(s -&amp;gt; {
                    //判断菜单下的角色存在角色的用户叫做小明的
                    s.roles().any(role -&amp;gt; {
                        role.users().any(user -&amp;gt; {
                            user.name().eq(&quot;小明&quot;);
                        });
                    });
                }).toList();


-- 第 1 条 sql 数据
SELECT
    t.`id`,
    t.`name`,
    t.`route`,
    t.`icon` 
FROM
    `t_menu` t 
WHERE
    EXISTS (
        SELECT
            1 
        FROM
            `t_role` t1 
        WHERE
            EXISTS (
                SELECT
                    1 
                FROM
                    `t_role_menu` t2 
                WHERE
                    t2.`role_id` = t1.`id` 
                    AND t2.`menu_id` = t.`id` LIMIT 1
            ) 
            AND EXISTS (
                SELECT
                    1 
                FROM
                    `t_user` t3 
                WHERE
                    EXISTS (
                        SELECT
                            1 
                        FROM
                            `t_user_role` t4 
                        WHERE
                            t4.`user_id` = t3.`id` 
                            AND t4.`role_id` = t1.`id` LIMIT 1
                    ) 
                    AND t3.`name` = &#39;小明&#39; LIMIT 1
                ) LIMIT 1
        )
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;最后&lt;/h2&gt; 
&lt;p&gt;这边展示了非常强大的 OLTP 查询模式,OLAP 也是非常强大可以 group+join，实现 from (匿名 sql) 也可以 join (匿名 sql)&lt;/p&gt; 
&lt;p&gt;一款具有强类型 OLTP+OLAP 的完美解决方案,并且完美支持 mybatis 系列的任意架构逐步构建迁移,不会产生任何冲突,因为 easy-query 本身就是零依赖,并且完全免费,完全开源 (包括文档！！！包括文档！！！包括文档！！！)&lt;/p&gt; 
&lt;p&gt;我相信&lt;code&gt;easy-query&lt;/code&gt;是一款可以完完全全打动您的 ORM 作品,也是全 java 唯一一款全 sql 替代性产品&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290239</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290239</guid>
            <pubDate>Mon, 29 Apr 2024 23:18:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | 大模型竞技场排名动态变化；AI 智能终端行业研究报告；「清华系」的大模型江湖；开源在线版 office</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.4.29&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要点&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/290093&quot; target=&quot;_blank&quot;&gt;AI 搜索工具 Perplexica：完全开源免费、Perplexity 的开源替代品&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Perplexica 是 AI 驱动的问答搜索引擎，声称可作为 Perplexity (perplexity.ai) 的开源替代方案。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5f866eedf1a3e1203ec18d9ca5ef1f91a2c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Perplexica 最大特点是设计了多种搜索模式，包括学术搜索、YouTube 视频搜索、学术搜索和计算等专用模式，这些模式根据用户的具体需求调整搜索算法的行为，提供更为精确和相关的搜索结果。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Perplexica 还支持使用本地部署的大语言模型，如 Llama3 和 Mixtral。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;GitHub 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FItzCrazyKns%2FPerplexica&quot; target=&quot;_blank&quot;&gt;https://github.com/ItzCrazyKns/Perplexica&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2194035935%2FObLMcrfV0&quot; target=&quot;_blank&quot;&gt;开源在线办公套件：Univer （在线版 office）&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Univer 提供了一个全面的企业级文档与数据协同的解决方案，支持电子表格、文本文档和演示幻灯片三大核心文档类型。通过灵活的 API 和插件机制，开发者可以在 Univer 的基础上进行个性化功能的定制和扩展，以适应不同用户在不同场景下的特定需求。&lt;/p&gt; 
&lt;p&gt;Univer 实现了基于 canvas 的，渲染引擎，能够高效地渲染不同类型的文档。渲染引擎支持，标点挤压，盘古之白，图文混排，滚动贴图，等高级特性。&lt;br&gt; 自研的，公式引擎，拥有超快的计算速度，还能在 Web Worker 中运行，未来将会支持服务端计算。&lt;/p&gt; 
&lt;p&gt;项目地址：github.com/dream-num/univer&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-df4f9c040b03fb659d52a0c8101ab2c32dd.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F3146485692%2FObPv92vqf&quot; target=&quot;_blank&quot;&gt;真·开源版老乡鸡菜谱&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;真·开源版老乡鸡菜谱，已整理版本，不是一整个 pdf：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGar-b-age%2FCookLikeHOC&quot; target=&quot;_blank&quot;&gt;https://github.com/Gar-b-age/CookLikeHOC&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1883d7b443000019e33200b94a331de9364.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6974787068%2FObRiFAqtt&quot; target=&quot;_blank&quot;&gt;Bazel 这个名字是 Blaze 的 anagram&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;流行的软件构建和测试工具 Bazel 是谷歌内部工具 Blaze 的开源版本。&lt;/p&gt; 
   &lt;p&gt;今天才知道 Bazel 这个名字是 Blaze 的 anagram（一个单词打乱字母顺序后重新排列生成的新单词）。这开启了给软件取名字的新思路，比如把开源大模型 Llama(辣麻）包装一下，新模型可以取名叫 Malla(麻辣）。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;硅谷陈源博士&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FObWC6BC1a&quot; target=&quot;_blank&quot;&gt;火爆全球的 AI 小镇可以本地化部署了&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;投资机构 a16z 有一个非常网红的开源项目——AI 小镇（创意最早来源于斯坦福），可以实现让一群 AI 角色在模拟小镇中交流互动。&lt;/p&gt; 
   &lt;p&gt;不过这是个需要 Token 实时消耗的东西，如果用 ChatGPT 的 API 跑就太贵了，但是刚刚，这个项目可以本地化运行了，成本降到 0 元。而且部署非常简单，感兴趣的可以访问：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpinokio.computer%2F&quot; target=&quot;_blank&quot;&gt;https://pinokio.computer/&lt;/a&gt;。点击安装就行，不过好像目前仅适用于 Mac 和 Linux 系统。&lt;/p&gt; 
   &lt;p&gt;AI 小镇的基本组成：&lt;br&gt; 1、虚拟城镇：创建一个真实的虚拟城镇，包含各种 AI 角色和背景环境。&lt;br&gt; 2、AI 角色互动：AI 角色能够自由聊天、社交和互动，模拟真实的人类行为。&lt;br&gt; 3、可定制性：用户可以根据自己的需求和喜好，定制和扩展 AI Town，包括角色、故事和环境等方面。&lt;/p&gt; 
   &lt;p&gt;现在端侧 AI 逐渐成为一个主流赛道，但是可玩的东西还是少，这个 AI 小镇没准以后是手机端游的一个形态。&lt;/p&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;高飞&lt;/strong&gt;&lt;/p&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FObOnq1O9D&quot; target=&quot;_blank&quot;&gt;4 大主流 AI 搜索工具测评，秘塔超越 Perplexity&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;AI 搜索工具哪家强？（秘塔？Perplexity？iAsk？……）废话不多说，先看网友提供的最新测评结果，主要有三大结论：&lt;/p&gt; 
   &lt;p&gt;1.整体而言，各参评产品的表现均未及预期，但国内的秘塔以微弱优势超越了 Perplexity。&lt;/p&gt; 
   &lt;p&gt;2.各参评产品在多语言问题的回答准确率上，英文最高、俄文最低，日文也相对较低。&lt;/p&gt; 
   &lt;p&gt;3.各参评产品在细分语种的表现上：&lt;/p&gt; 
   &lt;p&gt;- Perplexity 在英文问题的回答上遥遥领先，而其简体中文的表现也相当不俗&lt;/p&gt; 
   &lt;p&gt;- 秘塔在简中和繁中的表现上同样令人瞩目，但在其他语种上均未及格&lt;/p&gt; 
   &lt;p&gt;- iAsk 在各语种表现中相对均衡，但整体上属于中等水平&lt;/p&gt; 
   &lt;p&gt;- You.com 则仅在英文问题回答上有较好的表现&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FObVwEe7re&quot; target=&quot;_blank&quot;&gt;大模型竞技场近 1 年排名动态变化&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;刚刚看了 Jianqi Pan（jannchie.com/zh-CN）做的 Lmsys 排行榜的一年动态变化视频，信息量不小。&lt;br&gt; 1、模型性能差距缩小。一年前，OpenAI 还是一骑绝尘。上榜的第一名和最后一名的分数差距大概是 30%。一年后，差距不到 10% 了，ChatGPT 这一年有点挤牙膏。&lt;br&gt; 2、产业公司掌控市场。之前这个榜单里还有一些学术机构，和第三方组织。但是到今年 4 月份，基本都是商业公司，特别是大公司在主导这个市场了。Top4 力量分别是 OpenAI、Anthropic、Google 和 Meta。其他还包括 Cohere、Rika 等初创公司。当然，可以特别说的是阿里巴巴的@通义 AI。&lt;br&gt; 3、开源模型中。Mistral 和 Llama 完成位置交换。Mistral AI 是仅有的纯欧洲模型公司，在 Meta 的 Llama3 攻势之下，要加倍努力了。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;高飞&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-04-29%2Fdoc-inatmfyr3580830.shtml&quot; target=&quot;_blank&quot;&gt;专访邬贺铨：手机嵌入大模型后可以不上云就使用很多应用，将带来万亿元规模换机潮&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;NBD：您之前提到，未来我们的手机中也会嵌入大模型，手机嵌入大模型后，会出现哪些颠覆性的功能？&lt;/p&gt; 
 &lt;p&gt;邬贺铨：手机嵌入大模型之后，可以不上云就使用很多应用。为什么不上云？因为很多时候手机涉及隐私，不上云就可以比较好地保护隐私。另外，不上云也减少了时延，很多处理就可以在手机上操作，比如以文生图、以文生曲、以文生视频，不上云就可以做。也就是说，用户可以在没有云、没有网的时候用手机进行相应的操作。当然，也可以上云来协同。&lt;/p&gt; 
 &lt;p&gt;另外，手机嵌入大模型，在有网的时候，用户可以实现很好的交流。比如与外国人特别是小语种的外国人交流，现在网上所谓的同声传译，实际上并不是同声，需要他讲一句，你等他翻译完了以后你再讲。而将来手机如果嵌入大模型就可以真正实现同声传译。&lt;/p&gt; 
 &lt;p&gt;又比如跟聋哑人交流，他只会用手语，一般人并不懂，如果手机嵌入大模型，你用手机对准他，他的手语就可以翻译成你能懂的语言了。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;每日经济新闻&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-04-29%2Fdoc-inatnyiv2942392.shtml&quot; target=&quot;_blank&quot;&gt;「清华系」的大模型江湖&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;2023 年 4 月 27 日，清华大学人工智能学院宣布成立。清华人工智能学院将聚焦「人工智能核心基础理论与架构」和「人工智能+X」两个重点方向。图灵奖获得者、中国科学院院士姚期智说，学院以人工智能基础理论人才为主、兼顾「人工智能+X」复合型人才的培养体系；在实现基础研究和关键核心技术的突破，培养顶尖的人工智能人才。&lt;/p&gt; 
 &lt;p&gt;站在清华大学成立 113 年周年的节点上，人工智能学院的成立无疑被寄予厚望。首任院长由姚期智担任，中国科学院院士张钹担任名誉院长。二人对中国人工智能的发展有着不可磨灭的贡献，也是中国在人工智能学科的奠基人。&lt;/p&gt; 
 &lt;p&gt;姚期智早期求学于台湾大学、哈佛大学、伊利诺伊大学，曾在美国的麻省理工大学、加利福尼亚大学伯克利分校、斯坦福大学、普林斯顿大学任教。&lt;/p&gt; 
 &lt;p&gt;2004 年，姚期智辞去普林斯顿终身教职，毅然回国。2005 年，清华「姚班」成立，从这里走出一大批中国的学者和创业者。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;界面新闻&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_1750070171_684ff39b020019rwu.html&quot; target=&quot;_blank&quot;&gt;2024 年 AI 智能终端行业研究报告&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;2024 年 2 月 26 日至 29 日，MWC（世界移动通信大会）在巴塞罗那盛大开幕，科技巨头们齐聚一堂，上演了一番「AI+硬件」的「战国时代」。&lt;/p&gt; 
 &lt;p&gt;在此期间，多家手机厂商公布了旗下 AI 业务的最新进展，如荣耀发布了魔法 OS 8.0、魔法大模型、Magic6 Pro 手机、Magic V2 RSR 保时捷设计款折叠屏旗舰机等多款新品。手机芯片厂商高通和联发科，也在芯片层加入了更多 AI 能力。&lt;/p&gt; 
 &lt;p&gt;此外，AIPC 产品也成为大会的焦点之一。联想公司发布了全球首款 17.3 英寸 Micro-LED 透明屏笔记本概念机，利用生成式 AI 技术，透明屏幕能够将物理对象与数字信息相结合，让设备自然融入周围环境。&lt;/p&gt; 
 &lt;p&gt;经过 2023 年 AI 浪潮的洗礼，硬件厂商已经深刻意识到 AI 技术的重要性，并加速将其应用于自家产品。如果说 2023 年是 ChatGPT 等 AI 软件的元年，那么 2024 年就是「AI+硬件」的元年。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;- &lt;strong&gt;36 氪&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSanderMertens%2Fflecs&quot; target=&quot;_blank&quot;&gt;SanderMertens/flecs&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;325&quot; src=&quot;https://static.oschina.net/uploads/space/2023/0330/114723_Hzow_5430600.png&quot; width=&quot;600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FSanderMertens%2Fflecs&quot; target=&quot;_blank&quot;&gt;https://github.com/SanderMertens/flecs&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Flecs 是用于 C 和 C++ 的轻量级实体组件系统，有助于构建游戏等模拟场景。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Flecs 从一开始就以便携性为设计理念。它不仅可以在所有主要平台上运行，项目还可以将它与不同的编程语言一起使用。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5359019/blog/11047505&quot; target=&quot;_blank&quot;&gt;基于 service mesh 的服务治理体系实现详解&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;随着微服务和容器化技术的迅速发展，传统的基于 SDK 和服务框架的微服务架构在面对多元化的技术和逐步增多的服务数量时弊端逐渐显现，为了解决这些问题，service mesh 作为新一代的微服务框架逐渐展露头角。这种架构模式可以将其视为微服务时代的 TCP/IP 协议，通过将网络通信层下沉，来屏蔽分布式系统带来的复杂性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;因此各大厂纷纷向这种微服务架构模式升级，用该种模式解决东西向流量（server-server）和南北向流量（client-server）问题，期望可以让开发者回归业务，更聚焦业务。但在软件开发中并没有银弹，从传统微服务模式升级到 service mesh 架构模式可谓困难重重。​&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;289&quot; src=&quot;https://oscimg.oschina.net/oscnet/26cc8f09-4aae-4c0c-9635-3e48fea748bd.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;事件点评&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/290079/elektrobit-open-source-eb-corbos-linux-for-safety-applications&quot; target=&quot;_blank&quot;&gt;德国车用软件公司 Elektrobit 开源基于 Ubuntu 的汽车操作系统解决方案&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Elektrobit 是德国运输行业制造商大陆集团的全资独立子公司，致力于为汽车行业提供嵌入式互联软件产品和服务，&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Elektrobit 最近&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.elektrobit.cn%2Fnewsroom%2Felektrobit-open-source-breakthrough-accelerates-transition-to-software-defined-mobility%2F&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;推出了面向功能安全应用的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;EB corbos Linux for Safety Applications&lt;/strong&gt;，这是全球首个符合汽车功能安全标准的开源操作系统（OS）解决方案，包括全生命周期维护。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;210&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4c0a7bd78ab147f4291cb8b96cdb326cdb6.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;EB corbos Linux for Safety Applications 的推出，意味着汽车制造商和供应商现在可以在安全关键的高性能计算功能中安全地使用 Linux，对于推动汽车行业的安全标准提升具有重要意义。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Elektrobit 与 Canonical 合作将 Ubuntu 集成到 EB corbos Linux 中，这是业界首次将最大的开源 Linux 社区引入汽车软件领域。展示了开源社区在推动汽车行业技术进步中的重要作用。而 EB corbos Linux 的开源特性意味着汽车制造商可以利用由世界级开源开发者组建的庞大社区所取得的先进成果，从而降低开发成本和时间。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/290134&quot; target=&quot;_blank&quot;&gt;深圳发布重大开源项目申报指南&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 4 月 28 日，深圳市工业和信息化局发布《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgxj.sz.gov.cn%2Fxxgk%2Fxxgkml%2Fqt%2Ftzgg%2Fcontent%2Fpost_11265251.html&quot; target=&quot;_blank&quot;&gt;市工业和信息化局关于发布 2024 年软件产业高质量发展项目重大开源项目相关申请指南的通知&lt;/a&gt;》，宣布组织开展 2024 年软件产业高质量发展项目重大开源项目相关申请指南的申报工作。包含应用推广体系扶持计划的两个项目：1.重大开源项目商业发行版软件推广应用项目；2.重大开源项目芯片模组采购项目。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;224&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ba0c1181c75135effd9c15c998d737f6102.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这一举措对于深圳市的软件产业具有重要意义。首先，它表明了深圳市政府对软件产业高质量发展的重视，特别是在开源项目方面。通过资助重大开源项目，政府旨在促进技术创新和产业升级，从而提升深圳市在全球软件产业中的竞争力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其次，这一政策对于软件企业来说是一个巨大的机遇。获得资助不仅可以帮助企业提升自身技术实力，还可以加速其产品在市场中的推广和应用。此外，最高可达 1000 万元的资助额度对于许多企业来说是一个极具吸引力的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;最后，这一政策还可能对深圳市乃至整个中国的软件产业发展产生深远影响。通过支持开源项目，深圳市可能会成为技术创新和软件开发的领先城市，吸引更多企业和人才加入。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/290140&quot; target=&quot;_blank&quot;&gt;《美国对全球网络空间安全与发展的威胁和破坏》报告发布&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;中国网络安全产业联盟（CCIA）组织发布了《美国对全球网络空间安全与发展的威胁和破坏》报告，以揭露美国在网络空间的霸权霸道霸凌行为。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;233&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0a9a8017159988b163fd49fb4f3d602edf3.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;点评&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;这份报告的发布可能会对国际关系和网络安全领域产生多方面的影响。首先，它可能加剧中美之间的网络空间竞争和紧张关系。其次，这份报告可能会引发全球范围内对网络空间安全和发展的关注和讨论。此外，这份报告还可能促使其他国家加强自身的网络防御能力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#1f2328; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;总之，这份报告不仅揭示了美国在网络空间的行为，还可能对国际网络安全环境产生深远影响，并促使全球各国在网络空间安全和治理方面采取更加谨慎和积极的措施。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.chinadaily.com.cn%2Fa%2F202404%2F28%2FWS662e25eba3109f7860ddb88b.html&quot; target=&quot;_blank&quot;&gt;中国移动董事长杨杰：算力网络点亮 AI 新时代&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;杨杰指出，历次工业革命表明，基础设施在支撑前沿科技突破、生产要素配置和产业转型升级中发挥着关键作用，是推动社会生产力整体跃升的重要物质基础和先决条件。随着新一轮科技革命和产业变革深入发展，人工智能成为新生产工具、数据成为新生产要素、算力成为新基础能源，三者共同构成新质生产力的重要驱动因素。特别是近期，通用人工智能取得突破式进展，引发算力需求爆发式增长。加快构建高科技、高效能、高质量的算力基础设施，对于发展新质生产力至关重要。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;strong&gt;中国青年网&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_2357213493_8c80393502001h3ja.html&quot; target=&quot;_blank&quot;&gt;我的公司，还没被 OpenAI 杀死&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenAI 每发布一个功能，就消灭了一家初创公司。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AI 创业者们，如何在遮天蔽日的 OpenAI 狂野浪潮中幸存？AI 面试这个赛道，或许可以带来一些启示。2014 年伊始的 AI 面试，历经十年，大浪淘沙，曾经 30 多家存在过的公司，如今在国内只剩下 6 家左右。穿越 AI1.0 时代和 AI2.0 时代的幸存者发现：&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;第一，真正有价值的产品在大模型时代来临之前就已经得到验证，这个价值是不依赖于大模型的，大模型只是在原有基础上提升了价值。第二，务必做特定垂直领域的专门人工智能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;这也是这些公司能够存活至今的根本原因。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;虎嗅 APP&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwMDQ2NDU2Nw%3D%3D%26mid%3D2247501067%26idx%3D1%26sn%3D0c6bf86690ad01e841d9a9d15e5df5b8%26scene%3D0&quot; target=&quot;_blank&quot;&gt;中国 AI，全球掘金&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在今天，尽管创业环境更加严峻，无法与十年前水大鱼大的时期相比，但生成式 AI 带来十倍、百倍的生产力提升，会对公司的组织形式产生深远影响。智能涌现观察到，如今不少 AI 出海的项目，都选择在国内招聘研发、产品团队，仅在海外招聘少量销售，就能支撑起项目运转。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;对 AI 创业者而言，确定的事实在于：一个人能撬动的资源将会越来越多，创业机会将会长期存在。OpenAI 掌门人 Sam Altman 抛出的观点更加乐观：「AI 时代会创造出一种全新的创业公司：一个人的独角兽公司，并且，出现的时间不会太远。」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;智能涌现&lt;/strong&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240428A09R8300&quot; target=&quot;_blank&quot;&gt;RTX 40 系列 GPU 算力奠基，PC 迎来 AI 生产力进化革命&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#626262; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;业界全体 AI 化的进化方向似乎已经不可避免，尽管行业整体都在暗自发育发力，也呈现出了一点百花齐放的苗头，但目前来看地位最超然的仍然还是在此领域内耕耘许久且占据了先机的 NVIDIA。基于 RTX GPU 的 AI 应用计算加速俨然已经走在了一众厂商的最前列，也得到了最广泛的应用支持。基于此，我们认为 RTX AI 有很大机会能掀起一场 AI PC 的生产力革命，并快速带动 AI 应用高速前行。&lt;/span&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;微型计算机&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/290069&quot; target=&quot;_blank&quot;&gt;旅客连接高铁 WiFi 时弹出骂人脏话&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：长时间受压迫的国企外包&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：不就是程序员调 BUG 调得恼火了，打印提示语句用来做断点的，然后忘记删掉就发布上线了，体现了 code review 的重要性。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：笑死，调试信息忘删了 07 年写过个代码，如果出错就会报个 fxxk 直到离职都没出过&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289980&quot; target=&quot;_blank&quot;&gt;华为高管评价开源鸿蒙价值：被国外持续打压仍有自己的操作系统&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：安卓是开源的，谁都可以用，谁也都可以改，如何卡脖子？这话以其说是说给韭菜听的，不如说是给上面听的&lt;/span&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：你是一点不看安卓开源内容啊，就抓着开源哔哔机🤣，你甚至不知道谷歌卡华为脖子是卡了啥🤣&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：震惊，你是不知道，阿里 yunos 怎么死的吧？改版 ，但只能改一点点。 改多了会被告的，阿里 yunos 就是改得太多！&lt;/span&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：随华为怎么改，只要最后不要强制所有国产手机必须用鸿蒙就行&lt;/span&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：直接用也喷，套了也喷，独立了还喷。。。「将用户加入加灰名单后，对方将不可评论你的动态，同时你也不能看到对方的动态。」 加灰是个好功能啊&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：当我们被国外打压 「卡脖子」 的时候，仍然有自己的操作系统可以用，不至于倒下。而先进性是指，我们不仅要有自己的操作系统，还要有一个面向下一代、更先进、更有竞争力、更好用的操作系统，没错，说的就是统信 UOS。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：要是阿里 yunos 有华为一半营销手段，就没有鸿蒙什么事了。&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：看别人的消息，阿里 yunos 系统一出来，谷歌下场禁止（哪些供应商，你要做阿里 yunos，就不准做安卓）。。。华为那改版系统都没这待遇。。。后来魅族出的那个其实叫阿里 yunos by 安卓。。不算真正最初的阿里 yunos&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/289952/risc-v-impact-on-technology-and-innovation&quot; target=&quot;_blank&quot;&gt;RISC-V 对技术和创新的影响&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：RISC，Linux，TCP/IP，HTTP 这些开放技术是真正的人类文明之光！&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：RISC-V 还是嵌入式吧，论通用还得 Loongarch。&lt;/span&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290174</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290174</guid>
            <pubDate>Mon, 29 Apr 2024 10:23:15 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>【开源中国社区团队直播首秀】以分享为名讲述开源中国社区背后的故事</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                        
                                                                                            &lt;p&gt;开源中国社区团队直播首秀——以分享为名讲述开源中国社区背后的故事。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;直播时间：&lt;/strong&gt;5&amp;nbsp;月 25 日 14:00&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;直播平台：&lt;/strong&gt;「OSC 开源社区」 视频号&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;预约方式：&lt;/strong&gt;微信扫码预约直播&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;194&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-29b51c19d050dd615c72a194ec4e31d6f73.png&quot; width=&quot;194&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;直播日程：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;14:00-14:10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;【开场】—— 林师授 OSCHINA&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;14:10-14:40&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;【我对开源中国社区产品的思考】—— 林日华 OSCHINA 社区总编&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;14:40-15:10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;【人人有 AI 用-AI 时代低成本软硬件搭建策略】—— 白洋 OSCHINA 社区技术负责人&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;15:10-15:40&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;【3 个月，从 0 到 1 重写 OSCHINA APP 思考】—— 郭，盼 OSCHINA 社区前端负责人&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;15:40-16:10&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;【开源人才培养现状与 2024 年发展机遇】—— 崔传朋 OSCHINA 社区培训负责人&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1120&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-098db47f9ff47caea2421ea4f8f3991bbf7.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4700705/blog/11063442</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4700705/blog/11063442</guid>
            <pubDate>Mon, 29 Apr 2024 09:26:47 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>《美国对全球网络空间安全与发展的威胁和破坏》报告发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;中国网络安全产业联盟（CCIA）组织发布了《美国对全球网络空间安全与发展的威胁和破坏》报告，以揭露美国在网络空间的霸权霸道霸凌行为。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《报告》立足网络安全专业视角，以实证分析的方式，密切跟踪美国对全球网络空间安全与发展的威胁和破坏的具体行为，结合近年来各国政府部门、全球网络安全企业、研究机构和新闻媒体发布的报告报道，综合各方分析过程和研究成果，系统梳理分析美国对全球网络空间安全与发展乃至世界和平与稳定、人类社会文明与进步造成的严重威胁和破坏。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《报告》按照行为和时间脉络，共分为 6 篇，主要包括美国利用互联网渗透颠覆他国政权、实施无差别网络监控和窃密、对他国施行网络攻击与威慑、挑起网络空间军备竞赛、滥用政治手段扰乱全球产业链供应链、破坏网络空间规则与秩序等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;报告结语指出，网络空间是人类共同的活动空间，各国在网络空间利益休戚与共、命运紧密相连。建设和维护一个和平、安全、开放、合作、有序的网络空间，是人类社会的共同期盼和美好愿望。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但是，美国不择手段、不计后果维护网络霸权，以牺牲他国安全片面追求自身「绝对安全」，甚至走上了破坏、割裂网络空间的道路。美国在网络空间的种种恶行阻碍了数字世界的发展进步，与时代潮流背道而驰，应当受到国际社会的公开谴责与强烈反对。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;为了全人类的共同利益，世界各国有良知的政府和追求公平正义自由的企业、社会组织、学者和广大网民应加强对话与合作，在网络空间共同推进发展、共同维护安全、共同参与治理、共同分享成果，构建网络空间命运共同体，携手创造人类更加美好的未来。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;点击下载：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.china-cia.org.cn%2FAQLMWebManage%2FResources%2Fkindeditor%2Fattached%2Ffile%2F20240428%2F20240428104210_7972.pdf&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《报告》中文版：《美国对全球网络空间安全与发展的威胁和破坏》&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:justify&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.china-cia.org.cn%2FAQLMWebManage%2FResources%2Fkindeditor%2Fattached%2Ffile%2F20240428%2F20240428102256_9554.pdf&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;《报告》英文版：《US Threats and Sabotage to the Security and Development of Global Cyberspace》&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/290140</link>
            <guid isPermaLink="false">https://www.oschina.net/news/290140</guid>
            <pubDate>Mon, 29 Apr 2024 08:24:45 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>