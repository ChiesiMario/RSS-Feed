<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 17 Jul 2025 16:59:01 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>从依赖到可控：开源基础设施的国家命题</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;在过去十年里，代码托管平台经历了从开发工具向基础设施的演化。不仅仅是开发者日常协作的载体，更成为支撑科研、产业、信创工程和开源生态建设的根本平台。&lt;/p&gt; 
&lt;p&gt;随着国家数字化战略的深入推进，「代码平台是否自主可控」这一问题，已从技术议题上升为现实战略问题。平台的稳定性、安全性、治理权，决定了其能否承担长期、关键的系统角色。&lt;/p&gt; 
&lt;p&gt;Gitee 正是在这一战略背景下，逐步从代码协作平台走向国家级开源基础设施的定位。而这一趋势的现实依据，也在最近的一次广泛关注的事件中被进一步印证。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#c0392b"&gt;&lt;strong&gt;GitHub 403 事件说明了什么&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;2025 年 4 月 12 日晚起，中国大陆部分用户在未登录状态下访问 GitHub 时遇到 403 拒绝访问错误。GitHub 后续在状态页发布说明，称此次中断源于一次配置变更造成的「非预期影响」，问题在次日下午被修复。&lt;/p&gt; 
&lt;p&gt;虽然这是一次技术事件，并非平台刻意封锁，但它再次揭示了一个不容忽视的结构性事实：&lt;strong&gt;当前中国开发者对全球主流托管平台仍缺乏访问控制权、预警机制与服务协商能力。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;哪怕一次无意操作，也可能导致全链条的访问中断。而这正是基础设施「可控性」的核心：不能仅仅依赖对方「不出问题」，而要拥有面对突发事件时的缓冲机制与替代路径。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#c0392b"&gt;&lt;strong&gt;代码平台是战略基础设施，不是功能网站&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;现代软件工程全流程——从源代码托管、分支管理，到协作开发、依赖声明、版本发布、安全审计——都依赖代码平台构建。对国家而言，平台不仅关乎开发效率，更关乎研发主权与生态稳定。&lt;/p&gt; 
&lt;p&gt;尤其在国产操作系统、AI 框架、基础开发工具链不断推进替代的当下，大量信创工程与科研系统都要求在可信平台中进行代码协作。&lt;strong&gt;一旦平台不可用，影响的不只是某个项目，而是整个体系的运转稳定性。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;这正是「代码即国力」的现实语境：平台决定协作是否可持续，生态决定技术是否能演进。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#c0392b"&gt;&lt;strong&gt;历史上已有多次「平台不可用」的现实案例&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;GitHub 的 403 事件不是第一次访问异常事件。2019 年，GitHub 曾因出口管制限制了伊朗、敍利亚、克里米亚等地的访问权限，相关账号遭冻结；2022 年后，部分俄罗斯高校与企业的组织账号也被限制访问。&lt;/p&gt; 
&lt;p&gt;这些先例说明：&lt;strong&gt;开源平台无法始终保持政治中立，其可用性具有现实边界&lt;/strong&gt;。中国作为全球开发者最活跃的国家之一，不能在战略支撑设施层面对外部平台形成绝对依赖。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#c0392b"&gt;&lt;strong&gt;Gitee 的职责，是保障国家技术生态的连续性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;Gitee 目前已承担国家代码库的备份任务，并为信创工程、AI 模型项目、工业软件协同等场景提供国产托管服务。平台支持主流开发协议与工具链，具备依赖安全审计、开源合规报告、模型项目适配等基础能力。&lt;/p&gt; 
&lt;p&gt;更重要的是，Gitee 并不以「替代 GitHub」为目标，而是以建设中国本土长期可用、制度可托管、生态可沉淀的开源基础设施为使命。这意味着即使外部平台可访问，中国开发者也始终拥有一个&lt;strong&gt;主场能力完整、风险容忍度高、制度合规的备选方案。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;马建仓写在最后：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;任何平台都可能出现技术异常，但当基础设施不可控时，问题的本质不是技术，而是体系风险。我们并不怀疑全球协作的价值，但必须正视，在不确定性上升的时代背景下，一个国家应具备自主的开源基础设施，才能为技术发展提供确定性空间。&lt;/p&gt; 
&lt;p&gt;Gitee 的建设，是在为这种确定性提供基础支持。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;真正可持续的开放协作，不应只有一个平台、一个路径。基础设施建设的本质，是为开发者提供在关键时刻不被动、不掉线、不失联的保障能力。&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360890</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360890</guid>
      <pubDate>Wed, 16 Jul 2025 10:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>字节视觉大模型负责人今日内部官宣「暂时休息」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.163.com%2Ftech%2Farticle%2FK4M5GU1B00098IEO.html" target="_blank"&gt;根据网易科技的独家报道&lt;/a&gt;&lt;/u&gt;，7 月 17 日上午，字节跳动豆包大模型视觉多模态生成方向负责人杨建朝在公司内部宣布「暂时休息」，相关工作已完成交接，其职务由周畅（花名「时光」）接手。&lt;/p&gt; 
&lt;p&gt;周畅所在架构为「多模态交互与世界模型」部门，向 Seed 基础研究负责人吴永辉汇报 。&lt;/p&gt; 
&lt;p&gt;此次人事变动原因未明确，有知情人士称是「家庭因素」，也有传言称杨建朝因长期高强度工作身心俱疲，甚至有「提前退休」的说法 。&lt;/p&gt; 
&lt;p&gt;杨建朝是字节 AI 体系内公认的「技术大牛」，曾师从「计算机视觉之父」Thomas Huang，2018 年加入字节跳动，2023 年起带领 Seed 视觉部门 。&lt;/p&gt; 
&lt;p&gt;接任者周畅本科毕业于复旦大学，博士就读于北京大学，曾任阿里巴巴通义千问大模型技术负责人，主导开发了 M6 多模态预训练模型，2025 年 7 月从阿里离职后加入字节跳动 Seed 团队 。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360880</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360880</guid>
      <pubDate>Wed, 16 Jul 2025 09:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌高管澄清 Chrome OS 合并到 Android 的报道</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;谷歌 Android 生态系统负责人 Sameer Samat 最近确认，谷歌计划将 Chrome OS 与 Android &lt;a href="https://www.oschina.net/news/360389/google-says-chromeos-will-merge-into-android"&gt;合并&lt;/a&gt;为一个统一平台，未来 Chromebook 和 Android 平板电脑将运行基于 Android 的桌面优化版本，从而提供跨设备的无缝体验。&lt;/p&gt; 
&lt;p&gt;不过，Samat 随后在社交媒体上&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fssamat%2Fstatus%2F1944822333811970336" target="_blank"&gt;澄清表示&lt;/a&gt;&lt;/strong&gt;，他只是重申了 2024 年谷歌博客中的&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.chromium.org%2F2024%2F06%2Fbuilding-faster-smarter-chromebook.html" target="_blank"&gt;公告&lt;/a&gt;&lt;/u&gt;，即 Chrome OS 将基于 Android 底层技术（如 Android 内核）构建，以提升性能、加快开发速度，并让笔记本电脑和手机更好地协同工作。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1652" src="https://static.oschina.net/uploads/space/2025/0717/173104_cc16_2720166.png" width="1276" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;尽管 Samat 的澄清强调 Chrome OS 体验将基于 Android 技术构建，而非字面意义上的「合并」，但外界普遍认为这暗示了 Chrome OS 和 Android 将走向深度融合，未来二者将更紧密地整合。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360879</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360879</guid>
      <pubDate>Wed, 16 Jul 2025 09:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Python 核心开发者对 Rust 的期望</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;PyO3 维护者 David Hewitt 在 2025 年 Python 语言峰会上探讨了对 Rust 的期望。&lt;/p&gt; 
&lt;p&gt;David Hewitt 指出：「根据对 PyPI 上传包中原生扩展的统计估算，有约 1/4 到 1/3 的新项目选择 Rust 实现本地扩展。」&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;他展示了 PyO3 如何简化 Python 中的 Rust 使用，并讨论了 Rust 在支持 Python 自由线程方面的优势，以及在 GCC 后端和子解释器隔离方面的挑战。他还提出了 Python 核心开发者是否应投资 Rust 的问题，认为 Rust 的采用可能增加开发者人才库，并建议开发更高层次的 Rust API 以替代 C API。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;对于是否要&lt;/span&gt;投入 Rust，David Hewitt 认为可借鉴如 Linux 内核「Rust for Linux」的策略：先从隔离模块切入，逐步推行。&lt;/p&gt; 
&lt;p&gt;当然也存在一些挑战，比如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;社区中对平台兼容、调试体验、二进制膨胀都表达担忧。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rust 目前尚无稳定 ABI，panic 行为也可能增加体积（David 建议关闭 panic 并禁用 std 库以缓解）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;总的来说，David Hewitt 并非完全反对 Rust，而是在「可选、渐进、工具链完善」的框架下持审慎开放态度。Rust 的吸引力在于扩展人才库、提升安全性和模块化能力，但要落地则需构建系统与平台支持上的配合。下一步若能拆解边界、验证原型，就有可能慢慢形成「Rust for Python」的生态愿景。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpyfound.blogspot.com%2F2025%2F06%2Fpython-language-summit-2025-what-do-core-developers-want-from-rust.html" target="_blank"&gt;详情查看原文。&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360855/core-python-developers-want-from-rust</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360855/core-python-developers-want-from-rust</guid>
      <pubDate>Wed, 16 Jul 2025 07:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>《自然》网站：中国 AI 模型「又一个 DeepSeek 时刻」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;英国《自然》杂志网站 16 日发表文章说，中国人工智能（AI）模型 Kimi K2 发布后引发轰动，世界迎来「又一个 DeepSeek 时刻」。中国在 6 个月内推出第二款令人印象深刻的模型，表明这一成功并非偶然。文章摘要如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;继今年 1 月 DeepSeek-R1 震惊世界之后，全球研究人员对中国推出的第二个强大的 AI 模型越来越感到兴奋。北京月之暗面科技有限公司于 7 月 11 日推出了 Kimi K2。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="298" src="https://oscimg.oschina.net/oscnet/up-fa03af77a29513f15fe583488e9a54394d3.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Kimi K2 在编程方面的表现尤其出色，在 LiveCodeBench（一个专门用于评估大型语言模型编码能力的数据集）等测试中取得了高分。此外，Kimi K2 似乎还颇具写作天赋，在一些专业测试中名列前茅。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，包括硅谷的开源社区等在内的 AI 开发者都在热议 Kimi K2。官方数据显示，其总参数规模达到了万亿级别（1T），不过由于采用混合专家架构，每次任务仅动态激活 320 亿参数，只需调用模型中相关模块，从而有助于控制所需算力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;与 DeepSeek 系列模型类似，Kimi K2 采用开源协议发布，允许研究人员免费下载并进行本地部署与二次开发。同时，该模型支持通过应用程序接口调用，其定价显著低于「克劳德 4」等主流闭源模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;美国艾伦人工智能研究所机器学习研究员纳坦·兰伯特说：「今年早些时候发布的 DeepSeek-R1 更像是 AI 发展轨迹中的前传，而非昙花一现。Kimi K2 是全球最佳的全新开源模型。」（新华社）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/360215/kimi-k2" target="_blank"&gt;月之暗面发布并开源 Kimi K2：擅长代码与 Agentic 任务&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360853</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360853</guid>
      <pubDate>Wed, 16 Jul 2025 07:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>QuestDB 9.0 正式发布，高性能开源时序数据库</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;QuestDB 是一款开源的时序数据库，提供了超低延迟、高吞吐量和多层存储引擎，支持多种协议（如 InfluxDB 行协议、PostgreSQL 协议、REST API），并与许多工具和语言集成，非常适合金融市场数据、实时分析等场景。&lt;/p&gt; 
&lt;p&gt;QuestDB 近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fquestdb%2Fquestdb%2Freleases%2Ftag%2F9.0.0" target="_blank"&gt;发布&lt;/a&gt;重大版本 9.0，增加了 N 维数组、日历感知的物化视图 (materialized views)、提高了数据去重效率、实现了更智能的 JOIN，并重构了 Web 控制枱的 UX。&lt;/p&gt; 
&lt;p&gt;下面介绍&amp;nbsp;QuestDB 9.0 值得关注的新特性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;支持 N 维数组&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;引入真正的 N 维数组（类似 NumPy 的数组），支持零拷贝切片、转置、累积操作和聚合，适用于市场数据订单簿深度或机器学习权重快照，目前支持 &lt;code&gt;DOUBLE[]&lt;/code&gt; 类型，更多数据类型即将推出。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-bcb957ee2bfc9035579b27e3cc9e5e477f7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;二进制行协议&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;支持二进制 &lt;code&gt;DOUBLE[]&lt;/code&gt; / &lt;code&gt;DOUBLE&lt;/code&gt; 协议，提升高吞吐量摄取效率，降低带宽使用，加快服务器端处理速度。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;import pandas as pd
from questdb.ingress import Sender

df = pd.DataFrame({
    'symbol': pd.Categorical(['ETH-USD', 'BTC-USD']),
    'side': pd.Categorical(['sell', 'sell']),
    'price': [2615.54, 39269.98],
    'amount': [0.00044, 0.001],
    'ord_book_bids': [
        np.array([2615.54, 2618.63]),
        np.array([39269.98, 39270.00])
    ],
    'timestamp': pd.to_datetime(['2021-01-01', '2021-01-02'])})

conf = f'http::addr=localhost:9000;'
with Sender.from_conf(conf) as sender:
    sender.dataframe(df, table_name='trades', at='timestamp')&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;升级物化视图&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新增高效的 &lt;code&gt;replace commit&lt;/code&gt; 机制、支持自 &lt;code&gt;UNION&lt;/code&gt; 查询、延迟或推迟刷新，并引入三种新的视图刷新模式（&lt;code&gt;TIMER&lt;/code&gt;、&lt;code&gt;MANUAL&lt;/code&gt; 和 &lt;code&gt;PERIOD&lt;/code&gt;），后者支持时区感知、日历调度的刷新。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;优化数据去重&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;提高数据去重效率，新增优化以跳过未更改的数据，减少 I/O 开销。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;import pandas as pd
from questdb.ingress import Sender

df = pd.DataFrame({
    'symbol': pd.Categorical(['ETH-USD', 'BTC-USD']),
    'side': pd.Categorical(['sell', 'sell']),
    'price': [2615.54, 39269.98],
    'amount': [0.00044, 0.001],
    'ord_book_bids': [
        np.array([2615.54, 2618.63]),
        np.array([39269.98, 39270.00])
    ],
    'timestamp': pd.to_datetime(['2021-01-01', '2021-01-02'])})

conf = f'http::addr=localhost:9000;'
with Sender.from_conf(conf) as sender:
    sender.dataframe(df, table_name='trades', at='timestamp')&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;改进 Web 控制枱&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;界面焕然一新，支持多行查询同时执行、查询日志记录，以及通过右键点击运行箭头获取查询计划，便于调试。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5a75647747a5801a5b947e40d9934391525.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e2d5e0df806acc6ec114c042c70fad3489e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ASOF JOIN with TOLERANCE&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新增 &lt;code&gt;TOLERANCE&lt;/code&gt; 参数，允许为匹配设置合理的时间范围，便于处理特定时间后「过期」的数据。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sql"&gt;DECLARE
  @level := insertion_point(bids[2], bid_volume),
  @price := bids[1][@level]
SELECT
  md.timestamp market_time,
  @level level,
  @price market_price,
  cp.timestamp core_time,
  cp.bid_price core_price
FROM  (
  core_price
  WHERE timestamp IN today()
  AND symbol = 'GBPUSD'
  LIMIT -6
) cp
-- Match the bid to its nearest price within one second.
ASOF JOIN market_data md
ON symbol TOLERANCE 1s;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fquestdb.com%2Fblog%2Fquestdb-9-release%2F" target="_blank"&gt;详情查看发布公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360851/questdb-9-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360851/questdb-9-released</guid>
      <pubDate>Wed, 16 Jul 2025 06:50:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>​Anthropic 估值飙升至 1000 亿美元，年收入增长四倍</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;据知情人士透露，Anthropic 的最新估值已突破 1000 亿美元，较四个月前的 580 亿美元几乎翻了一番。这一估值的提升，主要得益于 Anthropic 近期向部分投资者披露的财务表现，尤其是其年化收入在 2023 年上半年增长了四倍，已超过 40 亿美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="283" src="https://oscimg.oschina.net/oscnet/up-2b2cb044977b9978c1bd2df664e5717d5e0.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;为了支持这一增长，Anthropic 在 3 月完成了 35 亿美元的股权融资，并计划在今年总计融资 55 亿美元。尽管整个 AI 行业仍在进行巨额投入，但头部公司如 Anthropic 已经展示出强大的商业化能力，吸引了投资者的关注，特别是在 AI 编码等高利润领域的表现。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;从盈利能力的角度来看，Anthropic 的财务状况相对复杂。公司通过直接向客户销售其 AI 模型和 Claude 聊天机器人，实现了约 60% 的毛利率，未来有望提高到 70%。不过，Anthropic 还通过亚马逊云和谷歌云进行销售，这部分业务的毛利率却为负 30%。截至 2023 年底，该公司的 70% 收入来自直销，整体毛利率在 50% 至 55% 之间，未见显著改善。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;作为大型语言模型的成功应用之一，自动化编码任务也为 Anthropic 带来了丰厚的收益。其编码助手 Claude Code 自 5 月全面上线以来，下载量每周增长六倍，目前已达到 300 万次。该产品也成为公司的重要收入来源，贡献了超过 2 亿美元的年化收入。此外，Anthropic 的增长还间接推动了其他初创公司的发展，如竞争对手 Cursor，其年收入自去年 11 月以来增长了 10 倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在资金消耗方面，Anthropic 与 OpenAI 面临着相似的挑战。预计 Anthropic 在今年的现金消耗为 30 亿美元，而 OpenAI 预计为 68 亿美元。尽管 OpenAI 的收入是 Anthropic 的数倍，但其现金消耗却更少。总体而言，两家公司的惊人收入增长让投资者感到乐观，预计都会超越年初设定的目标。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360846</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360846</guid>
      <pubDate>Wed, 16 Jul 2025 06:25:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Firefox 141 在 Windows 平台正式支持 WebGPU</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Mozilla Gfx 团队&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmozillagfx.wordpress.com%2F2025%2F07%2F15%2Fshipping-webgpu-on-windows-in-firefox-141%2F"&gt;宣布&lt;/a&gt;，在即将发布的 Firefox 141 中，会面向 Windows 平台正式发布对高性能 Web API&amp;nbsp;WebGPU 的支持。WebGPU 赋能网页高性能图形和计算，将有效提升游戏、3D 可视化、AI 本地推理等场景的体验。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;WebGPU 是由 W3C GPU for the Web 社区组所发布的规范，目标是允许网页代码以高性能且安全可靠的方式访问 GPU 功能。WebGPU 是一套为浏览器设计的图形 API 标准，为了弥合各个平台图形 API 的差异性，它对 DirectX12、Vulkan、Metal 进行了融合和封装。借助 WebGPU，可以充分释放现代 GPU 硬件的强大能力，让开发者可以用 TS/JS 在 Web 端也开发媲美原生表现力的场景，实现更大型更复杂的 3D 场景表现，甚至使用现代 GPU 的通用计算能力完成之前无法想像的复杂计算任务。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0717/141115_hVCB_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Firefox 的 WebGPU 实现基于 WGPU，这是一个开源 Rust 库（&lt;em&gt;https://github.com/gfx-rs/wgpu&lt;/em&gt;），Mozilla 是 WGPU&amp;nbsp;主要的贡献者之一。它提供了一个统一的、可移植的接口来访问平台的底层图形 API：Direct3D 12、Metal 和 Vulkan。&lt;/p&gt; 
&lt;p&gt;Mozilla 计划在未来几个月内将 WebGPU 支持扩展到 Mac 和 Linux 平台，并最终支持 Android。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360845/shipping-webgpu-on-windows-in-firefox-141</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360845/shipping-webgpu-on-windows-in-firefox-141</guid>
      <pubDate>Wed, 16 Jul 2025 06:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>四川某科技公司未落实网安保护义务致数据泄露被罚</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;四川网安部门近日在工作中发现，成都某科技公司开发的购票管理系统因未落实网络安全防护要求，致使系统内部分数据发生泄露，被不法分子利用实施违法犯罪活动。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;经查，该公司作为涉案信息系统的开发主体及实际运营单位，负有网络安全保护工作的法定职责，但未依法履行《中华人民共和国网络安全法》规定的网络安全保护义务，未落实网络安全等级保护制度，未采取必要的技术防护措施，最终引发数据泄露。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;四川公安网安部门已依法对涉事企业及直接责任人作出行政处罚。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="217" src="https://oscimg.oschina.net/oscnet/up-8856b3aa8abb212e686d2ac047e7813d795.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;《网络安全法》第二十一条规定，网络运营者应当按照网络安全等级保护制度的要求，履行安全保护义务，保障网络免受干扰、破坏或者未经授权的访问，防止网络数据泄露或者被窃取、篡改。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360844</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360844</guid>
      <pubDate>Wed, 16 Jul 2025 06:08:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenCV 4.12.0 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenCV 2025 年的夏季更新现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FbM9JtB6kk3dxuO2LKLEchQ" target="_blank"&gt;发布&lt;/a&gt;。此次更新涵盖了&lt;strong&gt;Core&lt;/strong&gt;、&lt;strong&gt;Imgproc&lt;/strong&gt;、&lt;strong&gt;Calib3d&lt;/strong&gt;、&lt;strong&gt;DNN&lt;/strong&gt;、&lt;strong&gt;Objdetect&lt;/strong&gt;、&lt;strong&gt;Photo&lt;/strong&gt;、&lt;strong&gt;VideoIO&lt;/strong&gt;、&lt;strong&gt;Imgcodecs&lt;/strong&gt;、&lt;strong&gt;Highgui&lt;/strong&gt;、&lt;strong&gt;G-API&lt;/strong&gt;、&lt;strong&gt;Video&lt;/strong&gt;和&lt;strong&gt;HAL&lt;/strong&gt;模块，以及 Python、Java 和 JavaScript 语言绑定等众多内容。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;此次更新的亮点包括：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;imgcodecs&lt;/code&gt;添加了对&amp;nbsp;&lt;strong&gt;GIF 的编解码支持&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;显著提升了&lt;strong&gt;PNG 和 Animated PNG&lt;/strong&gt;文件的处理能力&lt;/li&gt; 
 &lt;li&gt;增加了对&lt;strong&gt;Animated WebP&lt;/strong&gt;的支持&lt;/li&gt; 
 &lt;li&gt;特别值得一提的是对&amp;nbsp;&lt;strong&gt;RISC-V RVV 1.0 的新 HAL 实现&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;完整的更新日志如下：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style="color:rgba(0, 0, 0, 0.9)"&gt;Core 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加了用户自定义的日志回调功能（&lt;a href="javascript:;"&gt;#27154&lt;/a&gt;）&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;`cv::Mat` 添加了 `reinterpret()` 方法（&lt;a href="javascript:;"&gt;#25394&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了空的 N 维数组构造问题（&lt;a href="javascript:;"&gt;#27362&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 `FileStorage` 对 `int64` 支持的 bug（&lt;a href="javascript:;"&gt;#26846&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了大图像中 `cv::meanStdDev` 的溢出问题（&lt;a href="javascript:;"&gt;#26867&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;`cv::mean` 函数的 HAL 加速（&lt;a href="javascript:;"&gt;#26895&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;向量化加速 `cv::normalize` 和 `cv::norm`（&lt;a href="javascript:;"&gt;#26885&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为 `exp` 和 `sqrt` 启用了 `SIMD_SCALABLE`（&lt;a href="javascript:;"&gt;#26886&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;使用通用指令向量化 `normDiff`（&lt;a href="javascript:;"&gt;#27042&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;重构了 `hal_rvv` 中的 `normDiff`，并扩展支持更多数据类型（&lt;a href="javascript:;"&gt;#27115&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;进一步向量化加速带掩码的 `copyTo`（&lt;a href="javascript:;"&gt;#27145&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 `POWN` 的 OpenCL 实现（&lt;a href="javascript:;"&gt;#27274&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;将遗留的 universal intrinsics 恢复为独立头文件（&lt;a href="javascript:;"&gt;#27327&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;提高了解析三次方程 (`solveCubic`) 的精度（&lt;a href="javascript:;"&gt;#27331&lt;/a&gt;,&amp;nbsp;&lt;a href="javascript:;"&gt;#27347&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;弃用了在 `cv::UMat` 从 `std::vector` 构造时的 `copyData` 参数，并始终复制数据（&lt;a href="javascript:;"&gt;#27408&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Imgproc 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;优化并减少了 `cv::findContours` 的内存使用（&lt;a href="javascript:;"&gt;#26690&lt;/a&gt;,&amp;nbsp;&lt;a href="javascript:;"&gt;#26834&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了超大图像中 `cv::HoughLinesProbabilistic` 的整数溢出问题（&lt;a href="javascript:;"&gt;#26744&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了图像变换中多个可能的溢出问题（&lt;a href="javascript:;"&gt;#26765&lt;/a&gt;,&amp;nbsp;&lt;a href="javascript:;"&gt;#26776&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;增强了椭圆拟合的鲁棒性（&lt;a href="javascript:;"&gt;#26773&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加 `cv::THRESH_DRYRUN` 标志以在不实际阈值化的情况下获取自适应阈值（&lt;a href="javascript:;"&gt;#26836&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了奇异情况中 `cv::getPerspectiveTransform` 的行为（&lt;a href="javascript:;"&gt;#26926&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;使用 universal intrinsics 优化了 `bayer2Gray`（&lt;a href="javascript:;"&gt;#26868&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为 `cv::threshold` 添加了可选掩码参数（&lt;a href="javascript:;"&gt;#26842&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在使用 `cv::WARP_INVERSE_MAP` 时，通过多线程加速 `cv::remap` 计算（&lt;a href="javascript:;"&gt;#27108&lt;/a&gt;）&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;重构了 OpenCL 中 HSV 色彩转换表的初始化以避免数据错误（&lt;a href="javascript:;"&gt;#27287&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了双边滤波中 `sigmaColor` 和 `sigmaSpace` 的问题（&lt;a href="javascript:;"&gt;#27309&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;提升了中值滤波 (`medianBlur`) 的性能（&lt;a href="javascript:;"&gt;#27299&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 `cv::getClosestEllipsePoints` 用于获取椭圆上最近的点（&lt;a href="javascript:;"&gt;#26299&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修正了 `cv::distanceTransform` 在单线程下的 IPP 实现（&lt;a href="javascript:;"&gt;#27432&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了带掩码时 `cv::matchTemplate` 的崩溃（&lt;a href="javascript:;"&gt;#26703&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为形态学操作添加了菱形结构元素（&lt;a href="javascript:;"&gt;#27441&lt;/a&gt;,&amp;nbsp;&lt;a href="javascript:;"&gt;#27492&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;提升了 `cv::intersectConvexConvex` 在极端情况中的精度（&lt;a href="javascript:;"&gt;#26974&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Calib3d 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了单应性估计中的内点更新问题（&lt;a href="javascript:;"&gt;#26742&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为鱼眼相机模型添加了 `cv::solvePnPRansac` 实现（&lt;a href="javascript:;"&gt;#26669&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 `cv::findChessboardCornersSBWithMeta` 在使用 `cv::CALIB_CB_LARGER` 标志时的角点顺序问题&lt;/li&gt; 
 &lt;li&gt;修复了 `FilterSpecklesImpl` 中的逻辑错误（&lt;a href="javascript:;"&gt;#26996&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;优化了鱼眼模型下的反畸变点计算（&lt;a href="javascript:;"&gt;#26988&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;优化了新相机矩阵估计及相关函数（&lt;a href="javascript:;"&gt;#27001&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为 `cv::drawAxes` 投影轴超出相机视野时添加了警告（&lt;a href="javascript:;"&gt;#27311&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加图像尺寸检查以避免 `StereoSGBM` 的非正定（&lt;a href="javascript:;"&gt;#27305&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 SQPNP 正交化相关 bug 并简化了列向量复制（&lt;a href="javascript:;"&gt;#27437&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;DNN 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 TFLite 解析器中添加了对 `StridedSlice`（无 strides，仅切片）的支持，同时支持 TF 的 strides（&lt;a href="javascript:;"&gt;#27273&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;增加了 conv+eltwise 融合的处理器，适用于多输出节点（如 Split）（&lt;a href="javascript:;"&gt;#27326&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在 TFLite 解析器中新增了若干操作的导入：SUB、SQRT、DIV、NEG、SQUARED\_DIFFERENCE、SUM（&lt;a href="javascript:;"&gt;#27307&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 TFLite 解析器中标量和一维张量的支持（&lt;a href="javascript:;"&gt;#27307&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;减少了 NHWC&amp;lt;-&amp;gt;NCHW 转换次数（&lt;a href="javascript:;"&gt;#27307&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在获取网络中最新 layer pin 之前增加了检查（&lt;a href="javascript:;"&gt;#27353&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 OpenVINO NPU 支持（&lt;a href="javascript:;"&gt;#27363&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;向 CANN 后端添加了更多操作（&lt;a href="javascript:;"&gt;#24756&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Objdetect 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;扩展 `ArUcoDetector` 以更高效地支持多字典（&lt;a href="javascript:;"&gt;#26934&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Aruco 标记板旋转生成问题（&lt;a href="javascript:;"&gt;#26753&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了图像边缘附近 Aruco 标记检测错误（&lt;a href="javascript:;"&gt;#26968&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 QR 编码器/解码器中无效向量访问问题（&lt;a href="javascript:;"&gt;#26532&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 QR 码编码器的自动版本选择（&lt;a href="javascript:;"&gt;#27244&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 QRCode 的 ECI 编码支持（&lt;a href="javascript:;"&gt;#24426&lt;/a&gt;,&amp;nbsp;&lt;a href="javascript:;"&gt;#27486&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;`ChAruco` 棋盘一致性检查现在可选（#26824）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Photo 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;为 `cv::fastNlMeansDenoising` 添加了 16 位支持并更新了测试（&lt;a href="javascript:;"&gt;#26831&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;优化了本地去色流程（&lt;a href="javascript:;"&gt;#27041&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Debevec 算法使用的三角权重在边缘处不为零的问题（&lt;a href="javascript:;"&gt;#27270&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 HDR 三角权重和色调映射中的 NaN，并更新了教程中的 LDR Ground Truth（#27396）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;VideoIO 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了通过环境变量提供的 FFmpeg 自定义参数处理无效的问题（&lt;a href="javascript:;"&gt;#26793&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 `cv::CAP_PROP_ORIENTATION_AUTO` 的默认行为（&lt;a href="javascript:;"&gt;#26800&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在使用 DShow 后端并提供自定义参数时提高了相机打开性能（&lt;a href="javascript:;"&gt;#26601&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为安卓原生相机捕捉添加了缩放支持（&lt;a href="javascript:;"&gt;#26837&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了非 BGR 输出时的 V4L 帧尺寸问题（&lt;a href="javascript:;"&gt;#27193&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了对 Orbbec Gemini 330 相机的支持（&lt;a href="javascript:;"&gt;#27230&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 `cv::VideoWriter` 写入无颜色图像时失败的问题（&lt;a href="javascript:;"&gt;#27153&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Android 中 `setCameraIndex` 的问题（#27419）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Imgcodecs 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;扩展图像 I/O API，支持元数据（&lt;a href="javascript:;"&gt;#27499&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了内存中动画编码和解码功能（&lt;a href="javascript:;"&gt;#27013&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 Animated PNG 的隐藏帧支持（&lt;a href="javascript:;"&gt;#27127&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为 imgcodecs 添加了 GIF 编解码支持（多个 PR）&lt;/li&gt; 
 &lt;li&gt;添加了 Animated WebP 支持（&lt;a href="javascript:;"&gt;#25608&lt;/a&gt;,&amp;nbsp;&lt;a href="javascript:;"&gt;#27457&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 GDAL 多通道支持（&lt;a href="javascript:;"&gt;#27458&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Windows 下 AVIF 链接问题（&lt;a href="javascript:;"&gt;#26762&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;显著改进了 PNG 和 Animated PNG 文件的处理（多个 PR）&lt;/li&gt; 
 &lt;li&gt;添加了 libspng 集成的多个修复（&lt;a href="javascript:;"&gt;#27314&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 JpegXL 解码器中的内存泄漏（&lt;a href="javascript:;"&gt;#26787&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为 JpegXL 添加了 `cv::IMREAD_UNCHANGED` 和其他标志的支持（&lt;a href="javascript:;"&gt;#26788&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;实现了 JpegXL 的 `imdecode()`，支持从内存直接读取（&lt;a href="javascript:;"&gt;#26844&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 JpegXL 的无损压缩支持（&lt;a href="javascript:;"&gt;#27384&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了使用 libspng 后端读取 16 位 PNG 的问题（&lt;a href="javascript:;"&gt;#27113&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Highgui 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;`displayOverlay` 超时后不再自动消失（&lt;a href="javascript:;"&gt;#27082&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Qt 后端关闭窗口的问题（&lt;a href="javascript:;"&gt;#27170&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Qt 窗口调整大小的回归问题（#27282）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;G-API 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;为 OpenVINO Execution Provider 的顺利添加引入了绕过方案：提前创建 `Ort::Env`（&lt;a href="javascript:;"&gt;#26983&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了 `AddRgbFeature()`，提升了 `ComputeRgbDistance` 的鲁棒性（&lt;a href="javascript:;"&gt;#26682&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;在 G-API 中添加了 MS Media Foundation 的可用性检查（#27355）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Video 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加了预加载 DNN 模型的追踪器工厂（#26875）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;HAL 模块&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;将 HAL 实现抽出为独立文件夹（&lt;a href="javascript:;"&gt;#27252&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;RISC-V RVV 1.0 实现了新的 HAL&lt;/li&gt; 
 &lt;li&gt;重构 OpenVX 实现为 HAL（多个 PR）&lt;/li&gt; 
 &lt;li&gt;部分重构了 Intel IPP 集成为 HAL（多个 PR）&lt;/li&gt; 
 &lt;li&gt;修复了 HAL 中对 `cv` 命名空间的依赖（&lt;a href="javascript:;"&gt;#26878&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;更新了 ARM 上的 KleidiCV HAL 至版本 0.5&lt;/li&gt; 
 &lt;li&gt;扩展了 Qualcomm 平台的 FastCV HAL（多个 PR）&lt;/li&gt; 
 &lt;li&gt;添加了多个新 HAL 实现（如 `cv::sum`, `copyTo`, `cv::DFT`, `cv::DCT`, `convert`, `cv::norm`, `minMaxIdx`, `cv::calcHist`, `cv::pyrUp`, `cv::remap` 等）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Python, Java, JavaScript 绑定&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;添加了头文件解析器的条件包含支持（&lt;a href="javascript:;"&gt;#27325&lt;/a&gt;&amp;nbsp;等）&lt;/li&gt; 
 &lt;li&gt;更新了 `predefined_types.py`（&lt;a href="javascript:;"&gt;#26826&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了动画绑定（&lt;a href="javascript:;"&gt;#26813&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 `cv::imread` 的错误 Python 类型提示（&lt;a href="javascript:;"&gt;#26890&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;将 `tostring()` 和 `fromstring()` 替换为现代 Python 兼容用法（&lt;a href="javascript:;"&gt;#26932&lt;/a&gt;&amp;nbsp;等）&lt;/li&gt; 
 &lt;li&gt;替换 `ndarray.ptp()` 为 `np.ptp()` 以兼容 NumPy 2.0（&lt;a href="javascript:;"&gt;#27133&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;扩展了 Java DNN、Features2d 的绑定（多个 PR）&lt;/li&gt; 
 &lt;li&gt;修复了 JS 中 `std::vector&amp;lt;Point3f&amp;gt;` 的处理（&lt;a href="javascript:;"&gt;#27291&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;为 Java 添加了带缓冲流的 `cv::VideoCapture` 构造器（&lt;a href="javascript:;"&gt;#27284&lt;/a&gt;&amp;nbsp;等）&lt;/li&gt; 
 &lt;li&gt;扩展了 `cv::HoughLinesWithAccumulator` 的绑定（&lt;a href="javascript:;"&gt;#27377&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复 Kotlin 2.0 中的不安全强制类型转换错误（&lt;a href="javascript:;"&gt;#26354&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;平台支持&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复了 Linux 上 OpenBLAS 的检测（&lt;a href="javascript:;"&gt;#27029&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;兼容 CMake 4（&lt;a href="javascript:;"&gt;#27192&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了支持 Vulkan 的 Android 构建问题（&lt;a href="javascript:;"&gt;#26765&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Power 架构上的 VSX 指令实现（&lt;a href="javascript:;"&gt;#26750&lt;/a&gt;&amp;nbsp;等）&lt;/li&gt; 
 &lt;li&gt;为 POWER 架构添加了 `getauxval` 和 `elf_aux_info` 的 CMake 检查（&lt;a href="javascript:;"&gt;#26798&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 OpenBSD 的构建问题（&lt;a href="javascript:;"&gt;#26803&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;添加了对 Nvidia Blackwell GPU 架构的初步支持（&lt;a href="javascript:;"&gt;#26820&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Carotene HAL 中对 `cv` 命名空间的依赖（&lt;a href="javascript:;"&gt;#26878&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;统一了各模块的 `_DEBUG/NDEBUG` 处理（&lt;a href="javascript:;"&gt;#26151&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 QNX 7.0 的构建问题（&lt;a href="javascript:;"&gt;#26985&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;切换为静态链接 FastCV（&lt;a href="javascript:;"&gt;#26917&lt;/a&gt;&amp;nbsp;等）&lt;/li&gt; 
 &lt;li&gt;在 CUDA 工具包 ≥ 12.8 时强制启用 C++17 标准（&lt;a href="javascript:;"&gt;#27112&lt;/a&gt;&amp;nbsp;等）&lt;/li&gt; 
 &lt;li&gt;修复了 Windows ARM64EC 的构建（&lt;a href="javascript:;"&gt;#27416&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;修复了 Cygwin 环境下的文件系统支持（&lt;a href="javascript:;"&gt;#27484&lt;/a&gt;）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详细信息可参考：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopencv%2Fopencv%2Fwiki%2FOpenCV-Change-Logs%23version4120" target="_blank"&gt;https://github.com/opencv/opencv/wiki/OpenCV-Change-Logs#version4120&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360842/opencv-4-12-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360842/opencv-4-12-released</guid>
      <pubDate>Wed, 16 Jul 2025 05:54:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AI 编程工具 Windsurf 重新上线 Claude Sonnet 4 模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AI 编程工具&amp;nbsp;Windsurf&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fwindsurf_ai%2Fstatus%2F1945599013954490523"&gt;宣布&lt;/a&gt;，Anthropic 官方支持的 Claude Sonnet 4 模型已在该平台重新上线。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0717/104801_7g3W_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Pro 和 Teams 用户现在可以使用该模型，在限时折扣期间，每次请求消耗 2 个积分，相当于每月可进行 250 次请求。&lt;/p&gt; 
&lt;p&gt;就在上个月，Anthropic 在几乎没有预先通知的情况下切断了 Windsurf 的 API 访问权限。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/143502_jh84_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;根据 Windsurf 的声明，Anthropic 在提前不到一周的通知时间内，切断了其几乎所有 Claude 3.x 模型的直接访问权限 (first-party capacity)，具体涉及的模型包括：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;Claude 3.5 Sonnet&lt;/li&gt; 
 &lt;li&gt;Claude 3.7 Sonnet&lt;/li&gt; 
 &lt;li&gt;Claude 3.7 Sonnet Thinking&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360817</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360817</guid>
      <pubDate>Wed, 16 Jul 2025 02:51:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>MiniMax Agent 全栈开发功能正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;国产 AI 公司 MiniMax&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F5vPnhZW_j0diRqGvLQ663A" target="_blank"&gt;正式发布&lt;/a&gt;Agent 全栈开发功能，允许用户通过自然语言对话一键构建包含前端和后端的完整应用。&lt;/p&gt; 
&lt;p&gt;该功能支持 Supabase 后端托管、Stripe 支付集成、cron job 定时任务和长链接维持等技术，能够实现 API 调用、实时数据处理、支付、LLM 集成、定时任务和用户认证等复杂操作，且无需人工编写代码。&lt;/p&gt; 
&lt;p&gt;Minimax 提供的一个案例如下：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;投资者需要跟踪全球 50 只科技股票的最新价格和行业新闻？任何实时看板，Agent 都可以为你随手定制了，全部是真实、准确、实时的金融数据，还能每天 07:00、12:00 和 17:00 更新。&lt;/p&gt; 
 &lt;p&gt;&lt;img height="1790" src="https://static.oschina.net/uploads/space/2025/0717/104317_AQ4J_2720166.png" width="3294" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p&gt;https://pza7q8sbnm.space.minimax.io/&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MiniMax 透露，该系统采用模块化 Agent 架构，包含三个核心子 Agent：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;负责需求分析和方案生成的调研子 Agent&lt;/li&gt; 
 &lt;li&gt;负责代码生成和功能开发的全栈开发 Agent&lt;/li&gt; 
 &lt;li&gt;负责测试和调试的测试子 Agent。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;同时，MiniMax 还上线了 MCP builder 功能，支持企业级应用开发。&lt;/p&gt; 
&lt;p&gt;体验：https://agent.minimax.io/&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360816</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360816</guid>
      <pubDate>Wed, 16 Jul 2025 02:40:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>月之暗面回应 Kimi K2 API 速度慢：访问量大+模型体积大，正全力优化</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;月之暗面 Kimi 官方近日回应了 Kimi K2 API 速度慢的情况。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-979c4d5772660ea80d3a413ebfefa4d4d33.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;月之暗面表示，主要问题是访问量大 +模型体积大。月之暗面正在全力优化推理效率，也在加卡加机器。预计这几天内速度会有明显提升。同时，Kimi K2 是完全开源的，大家也可以通过其他模型供应商接入使用（比如硅基流动、无问芯穹等），欢迎自行部署。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;模力方舟现已上线 Kimi-K2-Instruct，开发者可以直接接入使用：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ai.gitee.com/serverless-api?model=kimi-k2-instruct"&gt;https://ai.gitee.com/serverless-api?model=kimi-k2-instruct&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360812</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360812</guid>
      <pubDate>Wed, 16 Jul 2025 02:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Scale AI 裁员 14%、终止 500 名承包商</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;彭博社报道称，美国数据标注初创公司 Scale AI 正面临重大调整，宣布裁员约 14%（约 200 人），同时终止与 500 名全球承包商的合作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-db7f23d7bc3401a608555d74ac26b7a14d0.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此次调整正值高层人事巨变之后——上月，Meta 以 143 亿美元，的估值聘请了 Scale AI 原首席执行官亚历山大·王（Alexandr Wang），引发外界对其公司未来走向的猜测。现任临时 CEO Jason Droege 在内部备忘录中坦言，公司核心数据标注业务扩张过快，已不再适应当下市场节奏。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;备忘录指出，Scale AI 将转向加强企业和政府销售部门，聚焦更高附加值的 B 端服务。这意味着，公司将逐步摆脱其曾经引以为傲的数据标注「流水线」模式。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这一动向也与近期多家 AI 初创公司「反向收购」后的战略调整如出一辙。例如 Inflection AI 被微软收购后，其技术和团队也被整合进大厂体系，原有产品线逐渐被边缘化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;值得注意的是，有消息称 Meta 的入局导致 Scale AI 部分大客户终止合作关系。作为数据服务商，Scale AI 面临的不仅是 AI 模型训练方式的变化，更是合作信任和中立地位的动摇。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360809/scale-ai-lays-off-14-of-staff</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360809/scale-ai-lays-off-14-of-staff</guid>
      <pubDate>Wed, 16 Jul 2025 02:18:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Zadig 支持 Microsoft Teams 集成，实时通知触手可及</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;&lt;img height="798" src="https://oscimg.oschina.net/oscnet/up-750406a973e02f1db05b87c2d7948324716.png" width="1876" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在现代开发流程里，实时掌握系统状态与接收通知，是保障团队高效协作的关键要素。Zadig 作为功能强大的 DevOps 平台，如今已支持与 Microsoft Teams 进行集成，开发者可以通过 Teams 实时获取 Zadig 的工作流动态，团队成员能够实时掌握最新信息，进而提升整体协作效率。&lt;/p&gt; 
&lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;Zadig 与 Microsoft Teams 集成的优势&lt;/h1&gt; 
&lt;p&gt;通过将 Zadig 与 Microsoft Teams 集成，团队可以享受以下优势：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;实时通知&lt;/strong&gt;：Zadig 的工作流状态和关键事件会实时推送到 Teams 频道，确保团队成员第一时间获取信息。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;灵活配置&lt;/strong&gt;：支持自定义通知内容和接收人，满足不同团队的需求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;无缝集成&lt;/strong&gt;：无需复杂配置，快速实现 Zadig 与 Teams 的对接。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;集成步骤详解&lt;/h1&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;步骤 1：在 Teams 中创建 Workflow&lt;/h2&gt; 
&lt;div&gt; 
 &lt;div&gt;
   在 Microsoft Teams 中，进入频道或者聊天，找到 Workflow App，基于「Post to a channel when a webhook request is received」模板创建新的 Workflow，按照 Teams 官方文档（ 
  &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.microsoft.com%2Fen-us%2Foffice%2Fcreate-incoming-webhooks-with-workflows-for-microsoft-teams-8ae491c7-0394-4861-ba59-055e33f75498" rel="nofollow" target="_blank"&gt;https://support.microsoft.com/en-us/office/create-incoming-webhooks-with-workflows-for-microsoft-teams-8ae491c7-0394-4861-ba59-055e33f75498&lt;/a&gt;）的指引完成基本配置。 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img height="1580" src="https://oscimg.oschina.net/oscnet/up-8712ed5a81aa970827b6285f30c46c21c6d.png" width="2176" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img height="1680" src="https://oscimg.oschina.net/oscnet/up-6efae2a5954d14474dc732ec9b0bfe54387.png" width="2944" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;步骤 2：获取 Webhook 地址&lt;/h2&gt; 
&lt;p&gt;在 Workflow 创建完成后，系统会生成一个唯一的 Webhook 地址，将此地址保存，后续将用于 Zadig 的配置。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1680" src="https://oscimg.oschina.net/oscnet/up-3977eef0e7b8941a9eba70827be88c650fe.png" width="2944" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
&lt;h2&gt;步骤 3：在 Zadig 中配置 Teams 通知&lt;/h2&gt; 
&lt;p&gt;访问 Zadig 系统，进入需要配置通知的工作流。在工作流配置页面，找到通知设置，选择「Microsoft Teams」作为通知方式。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1516" src="https://oscimg.oschina.net/oscnet/up-3c411beebb12ef62619ac79eb8178c48f26.png" width="2944" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Webhook 地址&lt;/strong&gt;：填写从步骤 2 中获取的 Webhook 地址。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;@指定成员（可选）&lt;/strong&gt; ：如需通知特定成员，输入 Teams 用户的 email，多个用户用 &lt;code&gt;;&lt;/code&gt; 分隔。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;通知事件&lt;/strong&gt;：根据工作流状态（如成功、失败等）配置触发通知的事件。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id="OSC_h1_6"&gt;&lt;/span&gt; 
&lt;h1&gt;通知效果&lt;/h1&gt; 
&lt;p&gt;配置完成后，当 Zadig 的工作流状态满足触发事件时，相关通知会实时推送到 Teams 的指定频道。通知内容清晰明了，团队成员可以快速了解工作流的状态，及时采取行动。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1580" src="https://oscimg.oschina.net/oscnet/up-a5fdf1d9928bc6a0f577eca8d91b44add0a.png" width="2176" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_7"&gt;&lt;/span&gt; 
&lt;h1&gt;结语&lt;/h1&gt; 
&lt;p&gt;通过 Zadig 与 Microsoft Teams 的深度集成，团队能够实时获取工作流状态，快速响应问题，提升协作效率。未来，Zadig 将持续探索更多协作工具的集成可能性，为企业打造更智能、更高效的开发与交付生态。&lt;/p&gt; 
&lt;p style="color:#ff4c88; margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;即日起，Zadig 新版发布&lt;br&gt; 扫码咨询抢先体验&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#191b1f; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img height="943" src="https://oscimg.oschina.net/oscnet/up-0c7876673ed701ed97107bb53b607d661dd.png" width="1797" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank" rel="nofollow"&gt;Zadig 在 Github&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href="https://gitee.com/koderover/zadig" rel="nofollow"&gt;Zadig 在 Gitee&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;&lt;span&gt;推荐阅读：&lt;/span&gt;&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style="color:#002a64; margin-left:0; margin-right:0"&gt;&lt;a href="https://my.oschina.net/koderover/blog/17622087" target="_blank" rel="nofollow"&gt;Zadig：首个深度集成 DeepSeek 的 DevOps 平台&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href="https://my.oschina.net/koderover/blog/11210095" target="_blank" rel="nofollow"&gt;Zadig 官网博客正式发布，技术干货实践管饱&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href="https://my.oschina.net/koderover/blog/16492101" target="_blank" rel="nofollow"&gt;流水线早已 out 了？你需要更高效能的工作流&lt;/a&gt;&amp;nbsp;/&lt;span style="background-color:#ffffff; color:#002a64"&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://my.oschina.net/koderover/blog/10316143" target="_blank" rel="nofollow"&gt;Jenkins 迁移 Zadig，新项目实施上线效率提升 6 倍&lt;/a&gt;&amp;nbsp;/&lt;a href="https://my.oschina.net/koderover/blog/17644385" target="_blank" rel="nofollow"&gt;Zadig 辞旧迎新发布 V3.3，更好看更好用超稳定&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/koderover/blog/18044129</link>
      <guid isPermaLink="false">https://my.oschina.net/koderover/blog/18044129</guid>
      <pubDate>Wed, 16 Jul 2025 01:56:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>🎉 对标 Coze 和 Dify，Java 开发的 AIFlowy v1.1.1 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1023" src="https://oscimg.oschina.net/oscnet/up-f38e8d2f28faea373ab6b092edc8c77784f.png" width="2700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;AIFlowy v1.1.1 正式发布了！ 🎉&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;如果你也在使用 AIFlowy，欢迎为我们点个 Star 支持一下🌟：&lt;br&gt; 🔗 Gitee 地址：&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;你的每一个 Star 都是对我们最大的鼓励，也是让更多人看到 AIFlowy 的关键一步！&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们的愿景始终如一：&lt;br&gt; &lt;strong&gt;🔹 成为中国最具影响力的人工智能品牌之一&lt;br&gt; 🔹 引领核心技术自主创新&lt;br&gt; 🔹 推动中国 AI 生态繁荣发展，助力科技自立&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;让我们一起见证 AIFlowy 的成长，也欢迎更多伙伴加入我们，共建更强大的 AI 开源生态🚀！&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;AIFlowy v1.1.1 更新详情：&lt;a href="https://gitee.com/aiflowy/aiflowy/releases/tag/v1.1.1"&gt;https://gitee.com/aiflowy/aiflowy/releases/tag/v1.1.1&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1080" src="https://oscimg.oschina.net/oscnet/up-c50d9f84345e3d4b5cea71073f0b996aa03.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="1800" src="https://oscimg.oschina.net/oscnet/up-f79a2712a7c33bc0f0a91f5096775aac0fd.png" width="2880" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;功能列表&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;AI 功能&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 应用（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Bot 插件（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Rag 知识库（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;AI 工作流编排（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型配置（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;大模型市场（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;系统管理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;用户管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;角色管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;菜单管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;部门管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岗位管理（已完成）&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;日志管理（已完成）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;git&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;clone https://gitee.com/aiflowy/aiflowy.git&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;aiflowy&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;mvn&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;clean package&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;aiflowy-ui-react&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;install&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;&lt;span style="color:#6f42c1"&gt;npm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;&lt;span style="color:#032f62"&gt;run dev&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;环境要求&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JDK 1.8+&lt;/li&gt; 
 &lt;li&gt;Node.js 20.0+&lt;/li&gt; 
 &lt;li&gt;MySQL 8.0+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;v1.1.1&amp;nbsp; 更新内容&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：用户确认节点&lt;/li&gt; 
 &lt;li&gt;新增：新增从缓存中取音频数据接口&lt;/li&gt; 
 &lt;li&gt;新增：bot 聊天新增语音播报暂停/播放按钮&lt;/li&gt; 
 &lt;li&gt;新增：bot 聊天接口实现文本转语音并通过 websocket 发送到前端&lt;/li&gt; 
 &lt;li&gt;新增：接入火山引擎文字转语音&lt;/li&gt; 
 &lt;li&gt;优化：优化 bot 页面&lt;/li&gt; 
 &lt;li&gt;优化：升级 agents-flex 和 TinyFlow 到最新版本&lt;/li&gt; 
 &lt;li&gt;优化：优化知识库页面&lt;/li&gt; 
 &lt;li&gt;优化：增加搜索框隐藏功能， 统一 table 风格&lt;/li&gt; 
 &lt;li&gt;修复：修复知识库不能选择模型问题&lt;/li&gt; 
 &lt;li&gt;修复：优化语音播报吞字问题&lt;/li&gt; 
 &lt;li&gt;修复：修复 bot 聊天语音播报播放/暂停按钮的状态问题&lt;/li&gt; 
 &lt;li&gt;修复：解决 bot 聊天语音播报卡顿的问题&lt;/li&gt; 
 &lt;li&gt;修复：修复菜单栏收起不显示菜单文字问题&lt;/li&gt; 
 &lt;li&gt;文档：动态代码节点内置对象 _result 的说明&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;开发及产品文档&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;官方网站：&lt;/strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Faiflowy.tech" target="_blank"&gt;https://aiflowy.tech&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开源地址：&lt;/strong&gt;&lt;a href="https://gitee.com/aiflowy/aiflowy"&gt;https://gitee.com/aiflowy/aiflowy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360795/aiflowy-1-1-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360795/aiflowy-1-1-1</guid>
      <pubDate>Wed, 16 Jul 2025 01:52:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>LinkAndroid v0.7.0 系统兼容性提升，底层基础库优化</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;在日常工作与生活中，频繁在安卓手机与电脑间切换操作是不是让你感到头疼不已？&lt;br&gt; 文件传输繁琐、应用管理不便、投屏体验不佳…… 这些困扰，&lt;code&gt; LinkAndroid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;帮你统统解决！作为一款强大的连接工具，&lt;code&gt;LinkAndroid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;致力于轻松连接安卓与电脑，为大家带来投屏、文件管理、应用管理、截屏、录屏、安装应用等一站式便捷体验，全面提升工作效率。&lt;br&gt; 现在，我们激动地宣布，&lt;code&gt; LinkAndroid v0.7.0&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;新版正式发布啦，一起来看看都有哪些惊喜更新吧！&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//73b456f166bf9d2b27700372fcf983ba.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;code&gt;LinkAndroid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个全能手机连接助手，方便快捷的连接&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Android&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和电脑，连接手机后可投屏、&lt;code&gt; GIF/MP4&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;录屏、截屏、文件管理、手机操作等功能。&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//dfaa6784064517655e9a3a13af967232.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;功能特性&lt;/h3&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;支持多手机连接，方便快捷控制多个手机&lt;br&gt; 支持投屏，基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt; scrcpy&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，支持手机操作&lt;br&gt; 支持截屏，截屏后会自动打开截屏美化工具&lt;br&gt; 支持&lt;code&gt; GIF/MP4&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;录屏，支持录制手机屏幕为&lt;code&gt; GIF 或 MP4&lt;/code&gt;&lt;br&gt; 支持应用管理，支持安装、卸载、启动应用&lt;br&gt; 支持文件管理，支持文件上传、下载、删除&lt;br&gt; 支持命令行，支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt; adb、screen&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;命令行和手机&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt; shell&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;命令行&lt;br&gt; 支持国际化，支持简体中文、英语&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//52898f7eb4ffd61d9547e7b19ea210e2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;版本更新 v0.7.0&lt;/h3&gt; 
&lt;p&gt;系统兼容性提升，底层基础库优化&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;新增：请求重试功能，避免查询失败问题&lt;br&gt; 新增：基础库函数功能升级&lt;br&gt; 修复：&lt;code&gt; windows 11&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;最新版本获取系统信息异常&lt;br&gt; 修复：多语言参数为 0 时异常问题&lt;br&gt; 优化：主窗口界面&lt;code&gt; Mac&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持信号灯按钮&lt;br&gt; 优化：&lt;code&gt;Toast&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;弹窗字体设置，避免字体丢失显示异常问题&lt;/p&gt; 
&lt;h3&gt;功能特性&lt;/h3&gt; 
&lt;p&gt;高清投屏&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;支持键盘直接输入，支持多设备同时投屏，基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt; scrcpy&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;开源投屏软件&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//8f7507e20801dfcbf6f3c715b859a116.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;截图美化&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;一键截取当前手机屏幕，默认进入截图编辑美化界面，基于&lt;code&gt; &amp;nbsp;image-beautifier&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;开源软件&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//b32003c4eddbd34ab25823a35db888a1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;屏幕录制&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;GIF、MP4&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;格式屏幕录制，&lt;code&gt;MP4&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;录制视频导出自动压缩，更多录制参数自定义设置&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//78753cd2b12045d1c9931aeb1422baeb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;高级命令&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;adb scrcpy&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;常见命令运行，一键点击进入手机，&lt;code&gt;shell &lt;/code&gt;交互方式更友好&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//67c86bf407ff60e896603fa149ecda90.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;应用管理&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;支持软件列表查看和搜索，快速安装 APK 软件，常见软件包自动识别名称&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//cbf9c929e04f1440cc21c9232c169d13.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;code&gt;LinkAndroid v0.7.0&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;从功能新增、细节优化到问题修复，全方位提升使用体验。还没下载的朋友，可前往官网下载。&lt;br&gt; 正在使用的用户，记得及时更新，享受新功能。若使用中有疑问或建议，欢迎随时反馈，我们会持续优化，让&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;LinkAndroid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;成为你得力的助手！&lt;/p&gt; 
&lt;h3&gt;系统演示与文档&lt;/h3&gt; 
&lt;p&gt;开源官网：&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;https://linkandroid.com&lt;/p&gt; 
&lt;p&gt;Github 仓库：&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;https://github.com/modstart-lib/linkandroid&lt;/p&gt; 
&lt;p&gt;Gitee 仓库：&lt;/p&gt; 
&lt;p style="color:#3f3f3f; margin-left:8px; margin-right:8px; text-align:justify"&gt;https://gitee.com/modstart-lib/linkandroid&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360754/linkandroid-0-7-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360754/linkandroid-0-7-0</guid>
      <pubDate>Tue, 15 Jul 2025 15:20:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>前 OpenAI 工程师长文回顾工作一年经历</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Calvin French-Oven 是前 OpenAI 工程师，曾参与开发编程 Agent「Codex」项目，三周前从 OpenAI 离职。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0716/191337_xiwe_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;近日，Calvin 通过一篇博客长文&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcalv.info%2Fopenai-reflections" target="_blank"&gt;回顾&lt;/a&gt;了自己在老东家工作一年的经历，包括为了打造编程产品 Codex 而经历的高强度开发过程。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0716/191652_sQJB_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;French-Owen 强调，他离职&lt;strong&gt;并非因为任何「内部矛盾」&lt;/strong&gt;，而是因为他希望&lt;strong&gt;重新踏上创业之路&lt;/strong&gt;。在入职 OpenAI 之前，他曾是客户数据公司 Segment 的联合创始人。&lt;/p&gt; 
&lt;p&gt;在他 OpenAI 期间，OpenAI 的员工人数&lt;strong&gt;从 1000 人激增至 3000 人&lt;/strong&gt;。OpenAI 拥有史上增长最快的消费产品之一，而其竞争对手也在迅猛发展。今年 3 月，公司宣布 ChatGPT 的活跃用户已突破 5 亿，并仍在快速增长。&lt;/p&gt; 
&lt;p&gt;他提到：「当你以如此速度扩张时，&lt;strong&gt;几乎所有系统都会失效&lt;/strong&gt;：公司内部的沟通机制、汇报结构、产品发布流程、人员管理方式、招聘流程等等，都会出现问题。」&lt;/p&gt; 
&lt;p&gt;尽管如此，OpenAI 仍然&lt;strong&gt;保留着初创公司的自由文化&lt;/strong&gt;，员工可以快速推进自己的想法，几乎不受流程限制。但这也带来了重复劳动的问题。「我至少看到过&lt;strong&gt;六七个用于队列管理或代理循环的代码库&lt;/strong&gt;。」&lt;/p&gt; 
&lt;p&gt;工程师的&lt;strong&gt;水平也参差不齐&lt;/strong&gt;，从能处理十亿级用户系统的资深谷歌工程师，到刚毕业的博士都有。再加上 Python 语言本身的灵活性，导致整个后端系统「&lt;strong&gt;更像是一个代码垃圾场&lt;/strong&gt;」：系统经常出错，运行效率也不高。但他也指出，公司高层已经意识到问题，并在积极优化。&lt;/p&gt; 
&lt;p&gt;他指出，OpenAI 还&lt;strong&gt;未完全适应自己作为大公司&lt;/strong&gt;的身份，甚至连内部沟通都完全依赖 Slack。他形容这家公司像早期 Facebook 时期的 Meta，&lt;strong&gt;充满「快速推进、打破常规」的风格&lt;/strong&gt;，而且公司中也有不少来自 Meta 的员工。&lt;/p&gt; 
&lt;p&gt;据了解，French-Owen 所在的高级团队拥有&lt;strong&gt;八名工程师、四名研究人员、两名设计师、两名市场人员和一名产品经理&lt;/strong&gt;。据其回忆，团队仅用七周时间且「几乎没怎么睡觉」，就&lt;strong&gt;完成了 Codex 从开发到上线的全过程&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;但这次发布堪称奇迹。产品一上线就迅速获得用户。「我从没见过一个产品&lt;strong&gt;仅因出现在左侧边栏就能获得如此迅速的采纳率&lt;/strong&gt;，这正是 ChatGPT 的魔力。」&lt;/p&gt; 
&lt;p&gt;作为一家备受瞩目的公司，OpenAI 对信息保密极为重视，内部形成了浓厚的保密文化，以防止信息外泄。与此同时，公司也&lt;strong&gt;密切关注 X 上的动态&lt;/strong&gt;。一旦某条推文爆火，OpenAI 很可能会看到并作出回应。「一位朋友开玩笑说，这家公司靠&lt;strong&gt;推特情绪&lt;/strong&gt;运转。」&lt;/p&gt; 
&lt;p&gt;French-Owen 认为，外界对 OpenAI 最大的误解是&lt;strong&gt;它不重视 AI 安全&lt;/strong&gt;。「事实上，包括前员工在内的许多 AI 安全专家都曾对 OpenAI 的安全机制提出过批评。」&lt;/p&gt; 
&lt;p&gt;虽然外界关注的是「AI 会毁灭人类」这类理论性风险，但在公司内部，员工更关注&lt;strong&gt;现实层面的安全问题&lt;/strong&gt;，比如「仇恨言论、滥用、政治偏见操控、生物武器生成、自残行为、提示注入攻击」等。&lt;/p&gt; 
&lt;p&gt;他强调，OpenAI 并未忽视 AI 的长期影响。公司有专门的研究团队在研究这些潜在风险，并意识到其语言模型如今已被数亿人用于各种场景，从医疗建议到心理治疗都有。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360714/openai-reflections</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360714/openai-reflections</guid>
      <pubDate>Tue, 15 Jul 2025 11:21:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Browserless —— 将没有 UI 界面的浏览器部署在 Docker 中</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;Browserless 允许远程客户端连接并执行 headless 工作，所有这些都在 docker 内部完成。它支持标准的、未分叉的 Puppeteer 和 Playwright 库，并提供基于 REST 的 API 用于数据收集、PDF 生成等常见操作。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;特性&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;并行性和请求排队是内置的+可配置的。&lt;/li&gt;
&lt;li&gt;字体和表情符号开箱即用。&lt;/li&gt;
&lt;li&gt;调试查看器用于主动查看/调试正在运行的会话。&lt;/li&gt;
&lt;li&gt;交互式 &lt;span style="background-color:#ffffff; color:#1f2328"&gt;puppeteer debugger&lt;/span&gt;，因此你可以看到 headless 浏览器正在做什么并使用其 DevTools。&lt;/li&gt;
&lt;li&gt;与未分叉的 Puppeteer 和 Playwright 合作。&lt;/li&gt;
&lt;li&gt;可配置的会话计时器和健康检查以确保一切顺利运行。&lt;/li&gt;
&lt;li&gt;容错：如果 Chrome 死机，它不会。&lt;/li&gt;
&lt;li&gt;支持在 Apple M1 机器上运行和开发&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;p style="text-align:start"&gt;&lt;strong&gt;Cloud-only&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.browserless.io/pricing/"&gt;云帐户&lt;/a&gt;包含所有常规功能以及附加功能，例如：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用于避免检测器和解决验证码&lt;a href="https://www.browserless.io/feature/browserql"&gt;的 BrowserQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;脚本期间流式登录窗口的&lt;a href="https://www.browserless.io/blog/hybrid-automations-for-puppeteer/"&gt;混合自动化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.browserless.io/blog/reconnect-api"&gt;/reconnect API&lt;/a&gt;&amp;nbsp;用于保持浏览器处于活动状态以供重复使用&lt;/li&gt;
&lt;li&gt;用于检索 HTML、PDF 或 Lighthouse 指标等任务的&lt;a href="https://www.browserless.io/feature/rest-apis"&gt;REST API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;内置&lt;span style="background-color:#ffffff; color:#1f2328"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.browserless.io/blog/residential-proxying/"&gt;residential proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSO、令牌和用户角色&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/browserless</link>
      <guid isPermaLink="false">https://www.oschina.net/p/browserless</guid>
      <pubDate>Tue, 15 Jul 2025 10:42:00 GMT</pubDate>
    </item>
    <item>
      <title>AI 操作系统 NeuralOS 开源，完美模拟 Windows 界面</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;来自华人团队的开源 AI 操作系统 NeuralOS 已经开源发布。这一系统的设计灵感源于&lt;span&gt;著名&lt;/span&gt;科学家卡帕西对未来图形用户界面（GUI）的大胆预言，令人瞩目的是，它能够实时预测并模拟 Windows 操作界面，甚至能准确显示每个用户的操作反馈。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;在线体验地址：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fneural-os.com%2F" target="_blank"&gt;https://neural-os.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在 NeuralOS 中，用户只需轻松移动鼠标、点击图标或输入文字，神经网络便能迅速反应，展示出与我们熟悉的电脑界面几乎一模一样的效果。这一创新实现了卡帕西在今年早些时候提出的 「AI 时代 GUI」 构想，他认为，未来的 GUI 将会是一个个性化的、流动的、互动的画布。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-aad2e4a05f90a720a30a88e8fbe8bec0ecc.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;NeuralOS 的运作机制相当独特，依赖于两个核心模块:循环神经网络（RNN）和基于扩散的神经渲染器 (Renderer)。RNN 负责实时跟踪计算机状态变化，确保系统反应灵敏且流畅，而 Renderer 则将用户的操作转化为屏幕上的具体视觉表现，例如窗口的弹出和图标的变化。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;为了让 NeuralOS 高效学习，开发团队使用了大量的操作录像，分为随机交互和真实交互两种类型。经过精心训练，NeuralOS 现在可以准确预测用户的每一次操作，但在处理快速键盘输入时仍存在一些挑战。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;目前，NeuralOS 的团队已经提供了在线体验版本，用户可以通过简单的操作与 AI 进行互动，实时感受这个新兴操作系统的魅力。尽管目前系统仍在不断优化，但它展示了未来操作系统将不再是简单的按钮和菜单，而是能够由 AI 动态生成的全新体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/360706</link>
      <guid isPermaLink="false">https://www.oschina.net/news/360706</guid>
      <pubDate>Tue, 15 Jul 2025 10:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
