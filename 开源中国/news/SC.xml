<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Tue, 20 Aug 2024 13:23:24 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>开源日报 | Mozilla 准备更换 Logo；Windows 11 取消 FAT32 分区大小限制；谷歌想创造第二个 Transformer；云音乐「崩了」或与网易 Curve 系统有关</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.19&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307999/ms-fat32-partition-size-limit-windows-11&quot;&gt;微软终于在 Windows 11 中取消了 FAT32 分区的 32GB 限制&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;微软在官方博客宣布，最新 Windows 11 测试版中取消了 FAT32 分区大小限制 ——&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;最大可设置为 2TB&lt;/strong&gt;。&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/162714_Lyoh_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;「用 format 命令从命令行格式化磁盘时，我们将 FAT32 的大小限制从 32GB 提高到 2TB。」&lt;/p&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;via&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2024%2F08%2F15%2Fannouncing-windows-11-insider-preview-build-27686-canary-channel%2F&quot; target=&quot;_blank&quot;&gt;https://blogs.windows.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;要注意，这项变化仅面向命令行生效。因此&lt;strong&gt;图形界面里的格式化对话框仍然有 32GB 的 FAT32 分区大小限制&lt;/strong&gt;。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307921&quot;&gt;「网易云音乐」回应 8.19 服务器故障：业务扩容中出现技术事故&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;8 月 19 日下午 2 点半左右，大量网友反馈「网易云音乐」App 无法正常使用，与此同时网页端也出现 502 Bad Gateway 报错信息。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;19 日下午 15 点&lt;/strong&gt;，「网易云音乐」在官方微博&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1721030997%2FOsZDanTC7&quot; target=&quot;_blank&quot;&gt;回应称&lt;/a&gt;&lt;/u&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;「&lt;strong&gt;因基础设施故障，导致网易云音乐各端无法正常使用&lt;/strong&gt;」。&lt;strong&gt;到了 17 点左右&lt;/strong&gt;，服务已基本恢复正常。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;17:30&lt;/strong&gt;，「网易云音乐」发布微博&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1721030997%2FOt0yKvWuL&quot; target=&quot;_blank&quot;&gt;称 「故障已陆续修复」&lt;/a&gt;&lt;/u&gt;，否认了 「删库跑路」 的传言，并公布了针对此次事故的补偿权益。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;19 日晚&lt;/strong&gt;，「网易云音乐」在微博&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1216431741%2FOt0IrcRKF&quot; target=&quot;_blank&quot;&gt;回复&lt;/a&gt;了媒体的报道，称 「&lt;strong&gt;今天下午在业务扩容中出现了技术事故&lt;/strong&gt;」。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114633_Tvn4_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307523/rust-project-goals-2024h2&quot;&gt;Rust 团队公布 2024 年发展目标&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Rust 团队公布了 2024 年下半年的 26 个项目目标。其中 3 个被指定为 flagship 目标，代表预计将产生最广泛整体影响的目标。包括：&lt;/p&gt; 
  &lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
   &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FRust-2024-Edition.html&quot; target=&quot;_blank&quot;&gt;发布 Rust 2024 版本&lt;/a&gt;。2024 版计划进行的修改包括：通过调整捕获行为，支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;-&amp;gt; impl Trait&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;async fn&lt;/code&gt;；通过保留&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;gen&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;keyword&lt;/span&gt;，允许在未来添加（async）生成器，以及更改&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;!&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;类&lt;/span&gt;型的回退。计划在今年晚些时候完成 Rust 2024 版本功能的开发。并于 2025 年 1 月 3 日发布测试版 Rust v1.85，2 月 20 日发布稳定版 Rust v1.85。&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;164&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f0540caebdcee20a9556eabbdb6fbb6db00.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1442721.htm&quot; target=&quot;_blank&quot;&gt;Mozilla 准备更换 Logo&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&amp;nbsp;Mozilla 准备更换新 Logo，此次更换的新 Logo 还未被宣布，但部分网页和代码中已经能看到样式了。德国网友 Sören Hentzschel 最新发现了变化，因为在 Mozilla 的某些页面里，Firefox Logo 下方被追加了 by Mozilla 的字样，随后检查发现还有更多变化。&lt;/p&gt; 
&lt;p&gt;从 Mozilla 在 GitHub 提交的代码中可以看到更多素材，其中就包括 Mozilla 准备更换的新 LOGO，这个新 LOGO 挺有意思的，就是 Mozilla 后面使用 ASCII 符号，类似于小旗子。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c7b40ce36c9cb59fa6c14338c5700ea94e4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FOt7ARsE7K&quot; target=&quot;_blank&quot;&gt;Google 每天为开发者免费提供 15 亿个 Token&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;Gemini 1.5 Flash 免费套餐包含：&lt;br&gt; - 每分钟 15 次请求（RPM）&lt;br&gt; - 每分钟 100 万个 Token（TPM）&lt;br&gt; - 每天 1,500 次 Token（RPD）&lt;br&gt; - 免费上下文缓存服务，每小时最多可存储 100 万个 Token&lt;br&gt; - 免费微调&lt;/p&gt; 
     &lt;p&gt;Gemini 1.5 Pro 免费套餐包含：&lt;br&gt; - 每分钟 2 次请求（RPM）&lt;br&gt; - 每分钟 32,000 个 Token（TPM）&lt;br&gt; - 每天 50 次请求（RPD）&lt;/p&gt; 
     &lt;p&gt;微调模型 text-embedding-004 提供：&lt;br&gt; - 每分钟 1,500 次请求（RPM）&lt;/p&gt; 
     &lt;p&gt;除了前面说的 API，Google AI Studio 还为开发者提供免费访问，其中 Gemini 1.5 Pro 有 2M Token 上下文窗口。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;宝玉 xp&lt;/strong&gt;&lt;/span&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOt0KLqZ3w&quot; target=&quot;_blank&quot;&gt;开源跨平台 IPTV 播放器：IPTVnator&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;GitHub 上开源的一款界面简洁且功能强大的跨平台 IPTV 播放器：IPTVnator。&lt;/p&gt; 
    &lt;p&gt;允许通过文件系统或远程 URL 导入 IPTV 播放列表，具备自动更新播放列表、频道搜索、电视存档、分组频道列表、多种主题等功能。&lt;/p&gt; 
    &lt;p&gt;支持外部播放器，如 mvp 和 VLC，并提供 HTML 视频播放器选项；支持包括中文在内的八种多语言。&lt;/p&gt; 
    &lt;p&gt;GitHub：github.com/4gray/iptvnator&lt;/p&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;GitHubDaily&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2194035935%2FOsX1ycw92%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;上海人工智能实验室开源的 PDF 文档提取工具：MinerU&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;上海人工智能实验室开源的 PDF 文档提取工具：MinerU。这是一款将 PDF 转化为机器可读格式的工具（如 markdown、json），可以很方便地抽取为任意格式。&lt;br&gt; 项目地址：github.com/opendatalab/MinerU/&lt;/p&gt; 
     &lt;p&gt;「 MinerU 诞生于书生-浦语的预训练过程中，我们将会集中精力解决科技文献中的符号转化问题，希望在大模型时代为科技发展做出贡献。 」&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;蚁工厂&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc.m.163.com%2Fnews%2Fa%2FJ9VJ4K9L0550HKM7.html&quot; target=&quot;_blank&quot;&gt;工业互联网平台加速成势&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;2023 年，中国工业互联网市场规模达 9849.5 亿元，同比增长 13.9%。其中，工业互联网平台保持高速增长，市场规模达 1467.6 亿元，市场增速达 34.7%。专家表示，工业互联网平台正释放出巨大的产业能量，成为赋能生产企业高质量制造和智改数转的重要帮手。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#222222&quot;&gt;中国战略新兴产业&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.21jingji.com%2Farticle%2F20240819%2Fherald%2F2cddf20326e60fda185259245a7fe0cd.html&quot; target=&quot;_blank&quot;&gt;云音乐「崩了」：或与网易 Curve 系统有关，该团队曾裁员&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;另据 21 世纪经济报道记者从多位有过网易工作经历的技术人员处了解到，此番网易云音乐出现技术故障， 或与 Curve 存储系统有关。该系统由网易开发，团队曾经历过裁员。&lt;/p&gt; 
 &lt;p&gt;对此，网易云音乐方面向 21 世纪经济报道记者回应称，「没有删库，没有跑路， 正在加速修复」。但对于涉及 Curve 团队问题，相关工作人员表示并不清楚。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;21 世纪经济报道&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_6161688951_16f43e97701901ub4o.html&quot; target=&quot;_blank&quot;&gt;硅谷 AI「围剿」与「反围剿」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;狼群会在必要时候进行狩猎，每一次都是精心策划，其往往会采取尾随之势，让猎物跑起来，伺机而动，一击即中。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;硅谷里的「狩猎」亦是如此。短短四天内，就有三家科技巨头不约而同对生成式 AI 创企动手。8 月 3 日，谷歌斥巨资 25 亿美元「买回」Character.AI 30 人团队。8 月 1 日，微软正式宣布 OpenAI 是其搜索业务和广告业务的竞争对手之一。7 月 31 日，Canva 则宣布将生成式 AI 创企 Leonardo.ai 收编。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;硅兔赛跑&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F2357213493%2F8c80393502001joju&quot; target=&quot;_blank&quot;&gt;这家 70 亿估值独角兽，要对标特斯拉&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#4d4f53&quot;&gt;在 8 月 18 日的发布会前夕，智元机器人合伙人姜青松这样对虎嗅描述他们的路线愿景。特斯拉的人形机器人擎天柱最初的应用场景在工厂，这也是智元重点押注的场景。姜青松认为，工业场景的市场空间是最大的，进入难度也是最大的。智元的商业化场景以展厅、4S 店等交付服务场景和 3C、半导体制造工厂工业场景为主，并能在今年达到 300 台（双足 200 台 、轮式 100 台）左右的预估发货量。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#212121&quot;&gt;虎嗅&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn814714410%3FserialId%3D85b5eb08ec4b316d28ecac917d46aa16&quot; target=&quot;_blank&quot;&gt;国产 AI 芯片厂商如何打破英伟达 CUDA 生态垄断？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;对于国产 RISC-V+AI 生态来说，目前也是机遇与挑战并存。谢涛指出，主要的挑战包括：生态碎片化；资源投入严重不足；缺少组织统筹；产学研协同不紧。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;芯智讯&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn814966997%3FserialId%3Df466ce443abe3ca11e71e2d1f0635d88&quot; target=&quot;_blank&quot;&gt;哈萨比斯：谷歌想创造第二个 Transformer，还想把 AlphaGo 和 Gemini 强强联合&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;从短期来看，AI 被过度炒作了，但从长期来看，它是被低估的。至于如何分辨 AI 领域哪些是炒作，哪些是可以实现的，哈萨比斯表示，除了做调研，你还得看看发表言论的人是什么背景，有多懂技术，是不是去年才从别的方向转到 AI 的。如果发表言论的人只是跟风，那 ta 贡献好点子的概率就会像彩票开奖一样。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;机器之心&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_1699432410_654b47da02001a76e.html&quot; target=&quot;_blank&quot;&gt;瞭望 | 从 0 到 1 造一个人形机器人，需要哪些关键技术？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;拥有 43 个自由度的「青龙」，代表了目前人形机器人行业比较顶尖的硬件设计水平&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;「‘青龙’平台的核心技术经过了十多年的技术沉淀，标志着我们的人形机器人平台技术实现从无到有的突破。」&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;新华社&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2FEmbarkStudios%2Fkajiya&quot; target=&quot;_blank&quot;&gt;EmbarkStudios/kajiya&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-be7d658c9073217c925d19a91c4159a0071.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FEmbarkStudios%2Fkajiya&quot; target=&quot;_blank&quot;&gt;https://github.com/EmbarkStudios/kajiya&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;kajiya 是 Rust 和 Vulkan 实现的实时全局光照渲染器。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/15155929&quot; target=&quot;_blank&quot;&gt;「JVM」 上的 AOP：Java Agent 实战&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;在软件开发领域，面向切面编程（AOP）作为一种强大的技术手段，极大地促进了代码的模块化与可维护性，尤其在处理横切关注点方面表现出色。本文将深入探讨 Java 平台上的 AOP 实现，聚焦于 Spring AOP 框架及其在实际项目中的应用限制，以团队内部广泛应用的日志框架 Diagnose 为例，揭示了 Spring AOP 在处理非 Bean 类方法、静态方法及内部调用时的局限性。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;227&quot; src=&quot;https://oscimg.oschina.net/oscnet/c6cc9bda-9a87-4c4f-9baf-2f771e31424e.png&quot; width=&quot;620&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;开源之声&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户观点&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FeEk58Y-z3lYSUapaUpTylw&quot; target=&quot;_blank&quot;&gt;开源下载工具 Aria 被诈骗份子使用，开发者无奈清空代码仓库&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：不太理解，这难道不是帽子叔叔的问题吗，歹徒今天吃饱了饭去杀人，难道要怪做饭的厨师&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：说白了人有风险管不住就先把工具管控住防止扩大化。之后慢慢再说。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：不是，为什么开源项目作者要连坐啊？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：真的连坐他都发不出消息。无非就是吓坏了&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：是不是开源的太干净，没有 backdoor，不方便追踪使用者吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：应该是警察屡试不爽的操作，加上程序员怕麻烦，一吓唬就删库。如果他们碰到多了这种就是杠的，没办法就是不同意，警察其实也没办法。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：好奇，一个下载工具怎么被用来诈骗？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：评论区一堆九漏鱼，他提供的工具被恶意使用当然要找他了解情况看他是故意的还是水平不行，明显这个人水平不行加吓坏了所以才直接清了，他要是水平足够的话打个补丁杜绝被再次利用也可以。有人举例子菜刀跟银行的，嫌犯用菜刀杀人肯定要追查菜刀来源，有必要肯定要追到卖菜刀的商家那里，你们随便看个刑侦电视剧都有可能看到的剧情这会隔这装小白呢，银行向来有义务给公安机关提供诈骗资金流向现在多少人银行卡被冻结限额的消息你们是一点没注意过吗？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：他这就像有人去五金店买水管做了 1.8 焦，然后案情调查的时候要求五金店老板配合调查。流程是正常流程，但五金店老板的角度也是真的冤，属于是无妄之灾&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：跨省，但又没有 D 捕你，只是协助调查罢了。说明你无罪，清空代码只是防止别人使用，但别人有存档啊，感觉没啥用。应该在代码里面加入反诈宣传。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：这就是删库免麻烦，保留起可能没事，但是经常被找的话心累&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/307523/rust-project-goals-2024h2&quot; target=&quot;_blank&quot;&gt;Rust 团队公布 2024 年发展目标&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;我能说 rust 设计太复杂了吗？哈哈哈，写业务逻辑还是比较简单，最近用 rust 这框架，真是难受啊，各种限制都在设计底层架构的时候给整自闭了😰，毕竟写 D 语言是那么从容舒服！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;使 Async Rust 体验更接近 sync Rust。最关键的是标准库直接支持异步，而不是使用第三方库。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;前几天打算写一个 web proxy 代理命令行，采用 tokio+hyper，结果发现难以实现（而且花费了好几天）。发现 rust 的开发流程是，先实现功能（不管代码能否编译通过），最后编译调整（时间很长）。所谓的与编译器做斗争。比如不同 Error 之间的转换，非编译不了。没办法最后使用 go 替代，因为时间紧，酸爽😁&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Rust 2024 edition 竟然要在 2025 年发？ 它们也是过农历是吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Rust 入门到放弃，Rust 放弃到入门...无限循环中....&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;这破玩意早晚步 C++的后尘，越来越复杂&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;关键字多的可怕&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;与编译器做斗争，差点没牺牲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Rust 的复杂程度不输 C++，与其花精力学习一个新生的，尚不成熟的，生态薄弱的 rust，还不如死磕 C++更现实，更划算。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_2-hECrxsZXviOtS7V3WFQ&quot; target=&quot;_blank&quot;&gt;月入 8 万的程序员不如月入 8 千的快乐？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 1：为资本家干活，就是个出卖劳动力的，挣得再多也是被资本剥削了剩余价值。为国家干活，除了账面工资还有隐形的福利，剩余价值只要不被贪腐都成为全民或集体公共财富的一部分。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 2：可以把 8w 分给我，我快乐，你也快乐&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 3：厂里上两天班就老实了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 4：按照这个逻辑，可以得出：倒贴钱上班才最快乐&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 5：这世间有很多充满意义的工作，譬如去做支教，譬如去敬老院或者孤儿院做义工，什么？你说你申请不到。那你贴钱去做总可以吧？既然你觉得当前工作空虚，为啥不尝试更换工作？凡尔赛没意思&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 6：起笔就写下「曾经有一位程序员跟我说……」，小学生都敢写，弟兄们敢信？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 7：一个月 8 万够支助 10-20 个儿童了，意义是自己赋予的，捐出去 7 万 2 就可以了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 8：都空虚成这样了不搞点开源？搞了开源不仅能造福他人充实你的内心，还能见证某些白嫖怪的生物多样性进而让你卸下一些不必要的心理负担。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 9：要么是编的段子，要么是炫耀月薪 8 万工资，没有第三种可能。月薪 8 万，整个中国都不会很多。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 10：说明他的 8 万没花自己身上，人家的 8 千也未必都是开心&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 11：拉倒吧，对我来说，挣钱就是最大的乐趣&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 12：你羡慕人家，人家也羡慕你，都一样。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 13：格局不同，理解不了。用马斯洛的七层需求理论来说，芸芸众生大部分都在努力解决温饱需求，而月入 8w 的码农考虑的是自我实现的需求。七层需求虽然有高低之分，但人们的需求其实也不是完全按照从低到高来逐步升级的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 14：应该还是收入大于欲望才会幸福吧。如果收入跟不上个人的欲望，八百万一样会不痛快。我身边很多人收入还算不错的人，欲望小点的就感觉比较满足也比较幸福，欲望高的就各种抱怨各种难受&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 15：先让我感受感受 80 万的不快了吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;观点 16：&lt;/span&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;工作是否有意义？这个是没有标准的&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/308012</link>
            <guid isPermaLink="false">https://www.oschina.net/news/308012</guid>
            <pubDate>Tue, 20 Aug 2024 11:12:12 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>微软终于在 Windows 11 中取消了 FAT32 分区的 32GB 限制</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;微软在官方博客宣布，最新 Windows 11 测试版中取消了 FAT32 分区大小限制——&lt;strong&gt;最大可设置为 2TB&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/162714_Lyoh_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;「用 format 命令从命令行格式化磁盘时，我们将 FAT32 的大小限制从 32GB 提高到 2TB。」&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;via&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2024%2F08%2F15%2Fannouncing-windows-11-insider-preview-build-27686-canary-channel%2F&quot; target=&quot;_blank&quot;&gt;https://blogs.windows.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;要注意，这项变化仅面向命令行生效。因此&lt;strong&gt;图形界面里的格式化对话框仍然有 32GB 的 FAT32 分区大小限制&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-69f20eac2f2420db787959b62fd24c49987.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;事实上，&amp;nbsp;FAT32 分区大小限制在 32GB 是在近 30 年前微软开发者随手设定的。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;戴夫 - 普卢默（Dave Plummer）是微软的资深工程师，曾创造了任务管理器、Windows 弹球、原生 ZIP 支持（微软出钱买断该功能后，他用这笔钱购买了一辆红色克尔维特）等传奇软件。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;今年早些时候，他在自己的 X 账户上&lt;a href=&quot;https://www.oschina.net/news/284757&quot;&gt;分享&lt;/a&gt;了创建 &quot;格式化&quot; 对话框的故事 —— 称其是一个使用了长达 30 年的 「临时解决方案」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;故事还要追溯到 1994 年，当时 Dave 和其他软件工程师们正忙于将 &quot;海量的代码&quot; 从 Windows 95 迁移到 Windows NT 系统上。由于后者引入了许多改动，格式化对话框的界面也亟待重新设计。&lt;/p&gt; 
&lt;p&gt;Dave 拿起纸笔，列出了一些必要的功能，并使用 VC++ 2.0 的资源编辑器快速搭建了一个简单的纵向列表界面。选择垂直布局是为了让用户可以按照大致正确的顺序勾选所有选项。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-94c12885f8f91ab589c030879f7914d81f2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Dave 表示，&lt;strong&gt;这个设计的初衷并不是为了美观，仅仅是为了在 「更优雅的界面」 到来之前先用着&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;然而让人没想到的是，这个「临时解决方案」一用就是 30 年。即使是最新版本的 Windows 11 预览版，在格式化对话框仍然维持着当年的样式，没有任何升级的迹象。&lt;/p&gt; 
&lt;p&gt;Dave 还提到，「30 年前我做的那个星期四上午做出来的临时方案，现在还在使用！」 他还感慨：「在开发软件时，可要当心‘临时’这两个字眼儿啊！」&lt;/p&gt; 
&lt;p&gt;此外，Dave 当时凭直觉决定了 cluster slack 大小的限制，这直接导致了 FAT 卷的格式化最大容量为 32GB。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307999/ms-fat32-partition-size-limit-windows-11</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307999/ms-fat32-partition-size-limit-windows-11</guid>
            <pubDate>Tue, 20 Aug 2024 09:41:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>「JVM」 上的 AOP：Java Agent 实战</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-backh=&quot;96&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-imgfileid=&quot;503051919&quot; data-ratio=&quot;0.16666666666666666&quot; src=&quot;https://oscimg.oschina.net/oscnet/e50f9222-371a-4c1e-acf0-442d2de74179.gif&quot; data-type=&quot;gif&quot; data-w=&quot;636&quot; style=&quot;outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 677px !important;visibility: visible !important;background-size: 16px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-template=&quot;t&quot; data-mpa-template-id=&quot;502&quot; data-mpa-category=&quot;模板&quot; style=&quot;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt; 
  &lt;section data-mpa-category=&quot;模板&quot; data-mid=&quot;&quot; style=&quot;padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;&quot;&gt; 
   &lt;section data-mid=&quot;&quot; style=&quot;outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;&quot;&gt; 
    &lt;section data-mid=&quot;&quot; style=&quot;outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;&quot;&gt; 
     &lt;br style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
    &lt;/section&gt; 
    &lt;section data-mid=&quot;&quot; style=&quot;padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;&quot;&gt; 
     &lt;section data-mid=&quot;&quot; style=&quot;margin-right: 7px;outline: 0px;text-align: left;visibility: visible;&quot;&gt; 
      &lt;p data-mid=&quot;&quot; style=&quot;outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &amp;quot;PingFang SC&amp;quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;&quot;&gt;&lt;br style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;/p&gt; 
     &lt;/section&gt; 
     &lt;section data-mid=&quot;&quot; style=&quot;margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;&quot;&gt; 
      &lt;br style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section data-mid=&quot;&quot; style=&quot;padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;&quot;&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;visibility: visible;line-height: 1.75em;&quot;&gt; 
     &lt;span style=&quot;outline: 0px;visibility: visible;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;在软件开发领域，面向切面编程（AOP）作为一种强大的技术手段，极大地促进了代码的模块化与可维护性，尤其在处理横切关注点方面表现出色。本文将深入探讨 Java 平台上的 AOP 实现，聚焦于 Spring AOP 框架及其在实际项目中的应用限制，以团队内部广泛应用的日志框架 Diagnose 为例，揭示了 Spring AOP 在处理非 Bean 类方法、静态方法及内部调用时的局限性。&lt;/span&gt; 
     &lt;br style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;&quot;&gt; 
  &lt;br style=&quot;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503051918&quot; data-ratio=&quot;0.3161764705882353&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/7925b1b4-93d2-488f-b5e1-308396eaffbc.png&quot; data-type=&quot;png&quot; data-w=&quot;408&quot; style=&quot;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;&quot;&gt; 
  &lt;span style=&quot;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;AOP 概述：以 Diagnose 为例&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;说起 AOP 的实现方式，大家可能第一时间想到的是 Spring AOP。Spring AOP 通过封装 Cglib 和 JDK 动态代理的相关逻辑，提供给我们方便的途径来生成动态代理对象，从而轻松实现方法执行前后的切面逻辑。很多常见的日志框架、权限校验框架（Apache Shiro）、RPC 调用框架（Apache Dubbo）的切面逻辑都是通过集成 Spring AOP 来实现的。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;我们组内也有一个被广泛使用的日志框架：Diagnose，其相关的切面逻辑实现也是通过 Spring AOP 的方式来完成的。简而言之，使用 AOP 达到的效果是：针对那些被@Diagnosed 注解标注的方法，在执行完之后，会将方法执行的入参，返回值，过程中的日志打印等信息都记录下来，最终将调用堆栈串联起来，展示在前端，方便问题排查和溯源。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如下图所示，当一个 Bean 对象的某个方法被@Diagnosed 注解标注之后，一旦该方法被执行，就会在前端打印出相关的调用信息。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;211&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051921&quot; data-ratio=&quot;0.36574074074074076&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/c6cc9bda-9a87-4c4f-9baf-2f771e31424e.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;152&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051922&quot; data-ratio=&quot;0.26296296296296295&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/aa6b2e07-d7ab-465e-9904-b4a16490d69d.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最终，当越来越多的方法@Diagnosed 注解所标注，一个业务流程的调用信息就会被串联起&lt;/span&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;来。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;当然，Diagnose 会通过用户、诊断场景等方式来区分每条调用链路。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;pre style=&quot;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;code&gt;&lt;p style=&quot;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;visibility: visible;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503051923&quot; data-ratio=&quot;0.3056872037914692&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/65de0de5-ea8b-4496-a180-065c076a11cc.png&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; style=&quot;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;&lt;p style=&quot;outline: 0px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);visibility: visible;line-height: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;Spring AOP 的三大局限性&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;outline: 0px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);visibility: visible;line-height: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;Diagnose 可以满足绝大多数场景，但是，使用 Spring AOP 方式实现的 Diagnose 还是存在不可避免的局限性：&lt;/span&gt;&lt;/p&gt; 
 &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;list-style-type: decimal;&quot;&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;@Diagnosed 注解所在的方法，&lt;strong&gt;必须是一个 Bean 对象的方法&lt;/strong&gt;。这个很好理解，因为是通过 BeanPostProcessor 的方式，在创建 Bean 的时候进行切面逻辑的操作。如果不是一个 Bean，就无法委托给 BeanPostProcessor，也就谈不上切面了。这就导致一些非 Bean 类的方法无法被 Diagnose 记录调用信息。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;@Diagnosed 注解所在的方法，&lt;strong&gt;不能是静态方法&lt;/strong&gt;。这是因为 Spring AOP 的两种实现方式：Cglib 和 JDK 动态代理，分别是通过生成目标类的子类和实现目标接口的方式来创建动态代理的，而静态方法不能被子类重写，更谈不上接口实现。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;@Diagnosed 注解所在的方法，&lt;strong&gt;必须从外部被调用才可以使切面逻辑生效，内部的 this.xxx() 无法使 AOP 生效&lt;/strong&gt;。这个是本文重点要讨论的场景。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;前两个局限性很好理解，下面，我们着重针对第三个局限性进行分析。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;首先来讲一下何谓「从外部被调用」。假设有以下 Bean A，他有三个方法，分别是公有方法 foo，bar 和私有方法 wof。其中 foo 方法在&lt;strong&gt;A 类内部&lt;/strong&gt;对 bar 和 wof 进行了调用。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;A&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Diagnosed&lt;/span&gt;(name = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;foo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        bar();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        wof();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Diagnosed&lt;/span&gt;(name = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;wof&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;wof&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        System.out.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;A.wof&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Diagnosed&lt;/span&gt;(name = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;bar&quot;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        System.out.println(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;A.bar&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;再假设有以下 Bean B，他注入了 Bean A，并在 A 类外部对 foo 方法进行调用，如下所示：&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;B&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__meta&quot;&gt;@Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;private&lt;/span&gt; A a;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;invokeA&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        a.foo();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;那么，A 中的 foo，wof，bar 三个方法都会被调用，而且它们三个都被@Diagnose 注解所标注，哪个方法的诊断日志会被打印呢？换言之，哪个方法的 AOP 切面逻辑会生效呢？&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;答案是，只有 foo 的切面逻辑会生效，wof 和 bar 的都不会生效。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;其中，通过反编译，在 A 的动态代理的生成类中，wof 方法压根就没有切面逻辑；而 bar 方法有切面逻辑，但是没有生效。因此，可以抛出两个问题：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;list-style-type: decimal;&quot;&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;为什么反编译的类中，wof 方法没有被织入 AOP 相关的切面逻辑？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;为什么 bar 中有 AOP 相关的切面逻辑，但是没有生效？&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;首先分析第一个问题，这个问题是所有的运行时 AOP 方案都不可避免的问题。因为不管是 Cglib，还是 JDK 自带的动态代理，本质上是通过在运行时定义新的 Class 来实现的，而这个 Class&lt;strong&gt;必须是原 Class 的接口实现类或者子类&lt;/strong&gt;，因为如果不是接口实现类、子类的关系，就无法被注入到代码的引用中。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;拿我们最常使用的 HSF 举例来说，在代码中，我们会通过以下方式来引用一个 HSF 远程服务。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;css&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;@&lt;span class=&quot;code-snippet__keyword&quot;&gt;Resource&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;MyHsfRemoteService myHsfRemoteService;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;HSF 会针对 MyHsfRemoteService 接口进行动态代理类的生成，在运行时定义一个新的 Class 对象，同样实现 MyHsfRemoteService 接口，只不过接口方法的调用被拦截，改为远程调用。这个过程其实严格限制了动态代理所定义的新的 Class 对象必须是 MyHsfRemoteService 的实现类，否则就&lt;strong&gt;无法被注入给 myHsfRemoteService 这个 bean 引用&lt;/strong&gt;。Cglib 这种通过继承方式来实现的动态代理也存在同样的局限性。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;回到问题本身， 由于 wof 方法是 A 的私有方法，生成的目标 Class 对象作为 A 的子类，无法感知到父类私有方法 wof 的存在，因此也就不会将相关的切面逻辑织入 wof。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;解释完 wof 之后，再来看下 bar。bar 作为一个公有方法，通过反编译能证明生成 Class 的 bar 方法中也有 AOP 相关的切面逻辑，那为什么相关的切面逻辑还是没有生效？这个问题需要从动态代理类的生成原理来解释。简而言之，通过动态代理生成的类，会在方法调用前、后执行定义好的织入逻辑，并最终&lt;strong&gt;将方法的执行转发给源对象&lt;/strong&gt;，而源对象是没有相关的切面逻辑的。如下图所示：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;266&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051924&quot; data-ratio=&quot;0.4600577478344562&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/6166bbf4-48ef-423b-821a-360267866fab.jpg&quot; data-type=&quot;jpeg&quot; data-w=&quot;1039&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;因此，第三个局限性可以被进一步扩展，即：&lt;strong&gt;所有被 AOP 增强的方法，必须从外部被调用才可以使切面逻辑生效，内部通过 this 的方式进行调用是无效的&lt;/strong&gt;。&lt;/span&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;pre style=&quot;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt;&lt;code&gt;&lt;p style=&quot;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;text-wrap: wrap;text-align: center;visibility: visible;color: rgb(34, 34, 34);line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503051925&quot; data-ratio=&quot;0.3056872037914692&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/f65b64bd-6de8-4240-b9e5-ab70ec9da746.png&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; style=&quot;outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;&lt;p style=&quot;outline: 0px;text-wrap: wrap;text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;Java Agent：&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;治病的良药&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;outline: 0px;text-wrap: wrap;text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;Spring AOP 之所以具有上述的三个缺陷，本质上是因为 Spring AOP 是一个 JVM 运行时的技术，此时 class 文件已经被加载完成，Spring AOP 无法对源 class 文件进行修改，只能通过子类继承、接口类实现的方式再重新定义一个类，随后再用这个新生成的类替换掉原有的 bean。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;而 Java agent 可以完美的避开这一缺陷。Java agent 并不是什么新技术，早在 jdk 1.5 就已经被推出。简单概括，Java agent 提供给开发者一个 JVM 级别的扩展点，可以在 JVM 启动时，直接对类的字节码做一次修改。使用 Java agent 不需要再新生成一个 Class，而是直接在启动时修改原有的 Class，这样就不必再受继承/接口实现的制约以及静态方法，内部方法调用等限制。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;Java agent 的使用步骤可以分为以下几步：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;list-style-type: decimal;&quot;&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;定义一个对象，包含方法名为 premain，方法参数为 String agentArgs, Instrumentation instrumentation 的静态方法；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;在 resources 文件夹里，定义 META-INF/MANIFEST.MF 文件，里面指定具体的 Premain-Class:，指向刚刚定义的对象；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;将上述 MANIFEST.MF 文件和 premain 对象打成一个 jar 包，并在 JVM 启动时通过-javaagent 参数指定该 jar 文件。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如此一来，JVM 会在启动时执行 jar 包中的 premain 方法，我们可以在 premain 方法中修改特定类，特定方法的字节码文件，来实现在 JVM 启动时的「AOP」了。实践中，Java Agent 经常与 Bytebuddy（一个用于创建和修改 Java 类的库，通常应用于字节码操作场景）组合，从而更便捷的实现修改字节码的目的。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;下面是我使用 Java Agent + Bytebuddy 对 Diagnose 的改造实践，目的是让@Diagnose 注解能够对类内部的 this 调用以及外部的静态方法调用生效。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_1&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;Premain&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;Premain 的 agentArgs 参数可以在启动时传入参数。我们可以借助这个特性，传入一些包名前缀，目的是只对我们关心的类执行后续的 transform 操作。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;508&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051926&quot; data-ratio=&quot;0.8787037037037037&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/665cedab-9b35-444e-8190-f3bef2b5810c.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;匹配好之后，通过.transform 指定一个 Transformer，我在这里定义了一个 DiagnoseTransformer，完成 Class 的字节码修改操作。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_2&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;DiagnoseTransformer&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/h4&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;DiagnoseTransformer 需要再对方法进行一次过滤，匹配带有@Diagnosed 注解的方法，并通过.intercept 进行方法执行的委托。我这里定义了一个 SelfInvokeMethodInterceptor，并将方法的执行委托给它。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;187&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051927&quot; data-ratio=&quot;0.32314814814814813&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/ac3c1102-95fd-4e80-8e25-80b8fa49ecf5.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;SelfInvokeMethodInterceptor 里面可以执行具体的 AOP 逻辑，这里就是每个 AOP 业务相关的操作了。针对 Diagnose，我会从 ApplicationContext 中取出 DiagnosedMethodInterceptor Bean 对象，这个 Bean 对象是由 Diagnose 框架自身定义的方法拦截器，里面是具体的方法执行信息的解析和保存逻辑，这里就不再展示。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;318&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051928&quot; data-ratio=&quot;0.5509259259259259&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/2a9f978a-5c61-4069-bb48-0bcf431805a4.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最终的包结构如下所示：&lt;/span&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;311&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051929&quot; data-ratio=&quot;0.537962962962963&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/2fb42225-cb0c-479f-ad10-0835cd4c1208.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_3&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;打包过程&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在打包时，需要注意，由于 premain 方法是在打出的 jar 包中执行的，不是在业务 jar 包中执行的。因此需要打出的 jar 包中具有相关的依赖。这里使用「jar-with-dependencies」的方式，将相关的依赖也打入 jar 包。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;387&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051930&quot; data-ratio=&quot;0.6694444444444444&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e204fd59-b47f-42b3-bece-80ecb529b4cd.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_4&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;指定 JVM 参数&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在需要使用 Java Agent 的应用的 APP-META/docker-config/environment/common/bin/setenv.sh 文件中，添加一行：&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;SERVICE_OPTS=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;&lt;span class=&quot;code-snippet__variable&quot;&gt;${SERVICE_OPTS}&lt;/span&gt; -javaagent:/home/admin/&lt;span class=&quot;code-snippet__variable&quot;&gt;${APP_NAME}&lt;/span&gt;/target/&lt;span class=&quot;code-snippet__variable&quot;&gt;${APP_NAME}&lt;/span&gt;/BOOT-INF/lib/diagnose-agent-1.3.0-SNAPSHOT-jar-with-dependencies.jar=com.taobao.gearfactory,com.taobao.message&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;其中，com.taobao.gearfactory,com.taobao.message 是指定需要进行字节码 transform 的包路径，每个应用需自行定义。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_5&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;类加载器陷阱分析&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/h4&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;经过上述操作之后，会发现应用启动过程中报错：ClassNotFoundException&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;这是因为 premain 方法是在 AppClassLoader 中执行的，打出的 Java agent jar 包也会被加载入 AppClassloader，而我们的应用都是 SpringBoot 应用，SpringBoot 为了实现 &lt;strong&gt;一个 jar 文件包含全部依赖&lt;/strong&gt; 的效果，特别定义了 AppClassloader 的子类加载器 LaunchedURLClassLoader，用于解析 jar 中的 jar。也就是说我们的业务代码实际上是运行在 LaunchedURLClassLoader 中的。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;而一旦我们在 AppClassloader 中引入了与业务相关的依赖，就会导致&lt;strong&gt;本应由 LaunchedURLClassLoader 加载的类被双亲委派给 AppClassloader 加载&lt;/strong&gt;。比如，在 Java Agent jar 的 DiagnoseTransformer 类中，定义的 Diagonse 类、log4j、ApplicationContext 等类都会被 AppClassloader 加载，而由于我们的&lt;/span&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;AppClassloader 仅仅有类定义，却没有足够多的依赖去加载这些类（因为相关依赖都在 LaunchedURLClassLoader 中），所以会报错 ClassNotFoundException&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;那怎么解决这个问题呢？分为两个步骤：&lt;/span&gt;&lt;/p&gt; 
 &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;list-style-type: decimal;&quot;&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;字节码操作过程中，但凡涉及到与业务相关的依赖，如 Diagonse 类、log4j、ApplicationContext 等，都将相关依赖和逻辑定义在业务 jar 包中，即由 LaunchedURLClassLoader 加载。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li style=&quot;font-size: 15px;&quot;&gt;&lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;outline: 0px;visibility: visible;letter-spacing: 1px;&quot;&gt;在 agent 的 jar 中，通过&lt;strong&gt;反射&lt;/strong&gt;的方式获取这部分与业务有关的类。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如下图，将涉及到其他依赖的 SelfInvokeMethodInterceptor 类从 diagnose-agent 包中分离出来，放入到 diagnose-client 包，并让应用依赖这个 jar 包（应用目前已经依赖了 diagnose-client）&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;diagnose-agent 包只定义了与业务无关的依赖，如 ByteBuddy。diagnose-client 中定义了 Spring，log 相关的依赖。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;603&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051931&quot; data-ratio=&quot;1.0425925925925925&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/35c7be7c-c69d-4840-9e4e-a3a31d302ded.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;业务应用依赖如下图所示：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;221&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051932&quot; data-ratio=&quot;0.3824074074074074&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/b5f46b95-2c8c-47ea-a68f-d6fb50892658.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在 diagnose-agent 中，调用 SelfInvokeMethodInterceptor，以及 Diagnose 相关类时，通过反射的方式获取。transform 方法的 classLoader 参数就是 LaunchedURLClassLoader&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;274&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051933&quot; data-ratio=&quot;0.4740740740740741&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/ef076eaa-e6c9-44cb-8c5a-05eaed03d72f.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如此一来，diagnose-agent 中不会对任何其他业务相关的类产生依赖，业务相关的类交给 LaunchedURLClassLoader 进行加载。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503051934&quot; data-ratio=&quot;0.328125&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/c8bc27da-8981-482a-9b11-8171d9eb6603.png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot; style=&quot;outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;效果展示：&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;实现对私有方法及静态方法的拦截&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如下图，对两个私有方法 decryptBuyerId 和 getAndCheckOrder 加上@Diagnosed 注解。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;340&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051937&quot; data-ratio=&quot;0.5879629629629629&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/6f621668-5596-4b03-a2fd-d06ce3e4409c.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503051938&quot; data-ratio=&quot;0.5925925925925926&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/7d6aee1f-d85b-42ca-838e-5b05c9aab0e5.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;对静态方法 ResultDTO.fail 也加上@Diagnosed 注解。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503051939&quot; data-ratio=&quot;0.5879629629629629&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e34e279a-706a-4120-87e2-82c8597511f9.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最终相关的 AOP 逻辑都可以生效。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;337&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503051940&quot; data-ratio=&quot;0.5833333333333334&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/4d026b03-74b6-4a83-9b72-22b01fe239d2.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;margin-bottom: 0px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503051941&quot; data-ratio=&quot;0.328125&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/df9231f4-0c29-47a4-98e7-95e0f2beeaa8.png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot; style=&quot;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt; 
  &lt;span style=&quot;outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;结语&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本文深入探讨了在 Java 平台上利用 AOP 进行方法监控的挑战与解决方案，特别是聚焦于 Spring AOP 的局限性及其在处理内部方法调用与静态方法时的不足。通过一个实际案例——日志框架 Diagnose 的使用，文章揭示了 Spring AOP 在非 Bean 对象方法、静态方法以及内部调用场景下的应用局限，并详细分析了这些局限性的技术原因。总之，本文不仅是一次技术探索之旅，更是对如何克服现有技术框架限制、持续优化和创新的一次生动示范，展现了 Java 平台下 AOP 技术深度与广度的无限可能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503051942&quot; data-ratio=&quot;0.328125&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/b2f12c09-7dca-4f39-899e-fe0b30fa8b1d.png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot; style=&quot;outline: 0px;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;团队介绍&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;我们是大淘宝技术用户消息与社交团队，负责淘宝消息、客服、Push、分享、我淘、关系、社交互动等业务，涵盖淘宝 APP 中两个一级 Tab，第三个消息 tab 和第五个我的淘宝 tab，这里有一流的产品技术，为消费者提供更好的消息与社交服务；丰富的业务场景，为淘系业务增加助力；几十万 QPS 的高并发流量，可以与淘系各位技术大牛合作，思想激荡碰撞，共同提升。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; style=&quot;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;&quot;&gt; 
  &lt;section style=&quot;margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;&quot;&gt; 
   &lt;span style=&quot;outline: 0px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;¤&lt;/strong&gt;&lt;/span&gt; 
   &lt;span style=&quot;outline: 0px;&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;&amp;nbsp;拓展阅读&amp;nbsp;&lt;/strong&gt;&lt;/span&gt; 
   &lt;span style=&quot;outline: 0px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;outline: 0px;&quot;&gt;¤&lt;/strong&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;&quot;&gt; 
   &lt;br style=&quot;outline: 0px;&quot;&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;&quot;&gt; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect&quot; textvalue=&quot;3DXR 技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;3DXR 技术&lt;/a&gt;&amp;nbsp;|&amp;nbsp; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect&quot; textvalue=&quot;终端技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;终端技术&lt;/a&gt;&amp;nbsp;|&amp;nbsp; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect&quot; textvalue=&quot;音视频技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;音视频技术&lt;/a&gt; 
  &lt;/section&gt; 
  &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect&quot; textvalue=&quot;服务端技术&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;服务端技术&lt;/a&gt;&lt;span style=&quot;outline: 0px;letter-spacing: 0.544px;&quot;&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect&quot; textvalue=&quot;技术质量&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;技术质量&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect&quot; textvalue=&quot;数据算法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;数据算法&lt;/a&gt;&lt;/p&gt; 
  &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;&quot;&gt;&lt;br style=&quot;outline: 0px;&quot;&gt;&lt;/p&gt; 
  &lt;section class=&quot;mp_profile_iframe_wrp&quot; style=&quot;margin-bottom: 24px;outline: 0px;&quot;&gt; 
   &lt;mp-common-profile class=&quot;custom_select_card mp_profile_iframe js_wx_tap_highlight&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAxNDEwNjk5OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;amp;wxfrom=19&quot; data-nickname=&quot;大淘宝技术&quot; data-alias=&quot;AlibabaMTT&quot; data-signature=&quot;大淘宝技术官方账号&quot; data-from=&quot;2&quot; data-index=&quot;0&quot; data-origin_num=&quot;742&quot; data-isban=&quot;0&quot; data-biz_account_status=&quot;0&quot; data-weuitheme=&quot;light&quot; data-is_biz_ban=&quot;0&quot;&gt;&lt;/mp-common-profile&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-bottom: 0px;outline: 0px;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4662964/blog/15155929</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/15155929</guid>
            <pubDate>Tue, 20 Aug 2024 08:44:29 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>通用汽车裁减 1000 个软件岗位</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通用汽车正在全球裁减约 1000 名软件岗位，以专注于更多「高优先级」计划，例如改进其超级巡航驾驶辅助系统、提高其信息娱乐平台的质量以及探索 AI 的使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通用汽车发言人 Stuart Fowle 向 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F08%2F19%2Fgm-cuts-1000-software-jobs-as-it-prioritizes-quality-and-ai%2F&quot; target=&quot;_blank&quot;&gt;TechCrunch&lt;/a&gt; 表示，裁员与削减成本或个人业绩无关。相反，裁员是为了帮助公司在「软件定义汽车（software-defined vehicles）」领域的竞争中更快地发展。他指出，这可能意味着公司不再开发许多不同的信息娱乐功能，而是专注于对消费者最重要的功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;334&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5005185b8c9b559f8db7d09501fd1afeb41.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次人事变动发生在通用汽车最近陷入软件困境之后。由于早期车型出现故障，这家汽车制造商于 2023 年底暂时停止了新款 Blazer EV 的销售。今年 6 月，通用汽车提拔了两名前苹果高管，负责其软件和服务部门。此次提拔旨在填补另一位苹果资深人士 Mike Abbott 留下的空缺，他曾加入通用汽车担任软件和服务执行副总裁，但于 3 月因健康原因离开通用汽车。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该公司在一份声明中表示，「在打造通用汽车的未来时，我们必须化繁为简，追求速度和卓越，做出大胆的选择，并优先考虑那些将产生最大影响的投资。因此，我们正在裁减软件和服务部门的某些团队。我们非常感谢那些帮助通用汽车打下坚实基础，使其能够继续保持领先地位的人。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307961/gm-cuts-1000-software-jobs</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307961/gm-cuts-1000-software-jobs</guid>
            <pubDate>Tue, 20 Aug 2024 06:52:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>议题揭晓 | 8 月 24 日，deepin 23 Release Party 暨武汉 LUG 等你来！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2F2024-08-whlug%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi，Linuxer！&lt;/p&gt; 
&lt;p&gt;历经三年的精心打磨和无数次的迭代测试，deepin 23 已正式发布，不少伙伴已上手体验，我们也收到了诸多积极反馈。&lt;/p&gt; 
&lt;p&gt;为了庆祝这一里程碑，本次武汉 LUG 暨 deepin 23 线下发布活动，我们将为大家介绍 deepin 23 目前的技术实现及后续版本规划。同时，我们也邀请了行业内的专家和资深工程师，一同探讨 Linux 的最新动态和未来趋势。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;435&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/party.jpg&quot; width=&quot;1024&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;本次活动由 deepin（深度）社区主办，感谢龙芯中科的鼎力支持。我们相信，这将是一个充满启发和交流的盛会，是每一位 Linux 爱好者和技术探索者不容错过的机会。&lt;/p&gt; 
&lt;p&gt;以下是各位嘉宾将要分享的主题内容，欢迎大家到现场面对面交流探讨，畅谈技术潜心之道，分享您的所思所想！&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;议程剧透&lt;/strong&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;table border=&quot;1&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;时间&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;议题&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;分享者&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;14:00-14:20&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;签到、暖场欢迎&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;14:20-14:50&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;《UOS AI for Everyone》&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;贺晓东 / 统信软件桌面研发工程师&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;14:50-15:20&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;《托盘插件分进程方案》&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;刘亨 / deepin（深度）社区桌面研发工程师&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;15:20-15:40&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;茶歇&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;15:40-16:10&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;《LoongArch 内核走过的这些年》&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;陈华才 / 龙芯中科内核社区负责人、高级工程师&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;16:10-16:40&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;《deepin 23 多架构适配之路》&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;longlong / deepin（深度）社区系统研发工程师&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;16:40-17:00&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;闪电演讲（短分享）&lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;17:00-17:30&lt;/td&gt; 
     &lt;td style=&quot;vertical-align:top&quot;&gt;合影+自由讨论&lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;Ps. 现场超多惊喜环节，更有 deepin 精美周边等你来！&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;议题分享&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;《UOS AI for Everyone》&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;分享者&lt;/strong&gt;：贺晓东（统信软件桌面研发工程师）&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;分享简介&lt;/strong&gt;：AI 领域给大众的感觉一直是高难度、高门槛、高硬件要求，普通人如果想要在自己的系统上用 AI 来帮自己完成一些辅助工作，需要花费大量时间精力来学习 AI 配置相关知识。deepin 本着因理想而出生，为责任而成长的态度，想要把 AI 拉回到每个普通人面前，近距离体验这个新时代革命性工具，由此分享主题《UOS AI for Everyone》 。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;《托盘插件分进程方案》&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;分享者&lt;/strong&gt;：刘亨（deepin（深度）社区桌面研发工程师）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;分享简介&lt;/strong&gt;：介绍使用 Wayland 合成器，将托盘相关插件与 dock 本身的进程分离，解决插件的兼容性以及插件代码质量导致的卡死，崩溃等稳定性问题。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;《LoongArch 内核走过的这些年》&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;分享者&lt;/strong&gt;：陈华才（龙芯中科内核社区负责人、高级工程师）&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;分享简介&lt;/strong&gt;：&amp;nbsp;从龙芯新架构 LoongArch 的特征简介谈起，回顾 LoongArch 在 Linux 内核社区走过的这些年，包括出世、成长和腾飞三个阶段，也包括所谓「旧世界」与「新世界」的由来和现状，最后介绍 LoongArch 与 deepin 的合作与互动。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;《deepin 23 多架构适配之路》&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;分享者&lt;/strong&gt;：longlong（deepin（深度）社区系统研发工程师）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;分享简介&lt;/strong&gt;：deepin 23 在多架构适配方面取得了显著成果，现已成功支持了 X86、ARM、LoongArch64、RISC-V 各类主流 CPU 架构，为用户提供了更加广泛的硬件支持和更优的操作系统体验，主要为大家讲解适配背后的历程及后续规划。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;活动信息&amp;nbsp;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;活动时间&lt;/strong&gt;：2024 年 8 月 24 日（周六）14:00-17:30&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;活动地点&lt;/strong&gt;：龙芯中科（武汉）技术有限公司，龙芯-4 楼录演厅&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;为了确保您顺利进入活动场地，请您提前完成以下步骤：&lt;/p&gt; 
&lt;p&gt;（1）扫描下方问卷填写报名表&lt;/p&gt; 
&lt;p&gt;（2）报名成功后，工作人员将与您联系，提供参会提示&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;228&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/8%E6%9C%88%E6%AD%A6%E6%B1%89%E6%8A%A5%E5%90%8D.png&quot; width=&quot;228&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;本次活动还特设了「闪电演讲」环节，我们鼓励所有的企业及个人开发者在这里分享你们基于 Linux 的新玩法、新思路和新实践，任何你想聊的，我们都想听~&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;小彩蛋：&amp;nbsp;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;邀请身边的开发者朋友一起参会，即有机会获取 deepin 周边 T 恤或帆布袋！&lt;/p&gt; 
&lt;p&gt;参与规则：&lt;/p&gt; 
&lt;p&gt;（1）发送活动报名链接给开发者好友，邀请 TA 一起参会；&lt;/p&gt; 
&lt;p&gt;（2）被邀请人需在报名表单 「邀请人姓名」 一栏中填写邀请人的名称；&lt;/p&gt; 
&lt;p&gt;（3）8 月 24 日活动现场，超 3 名被邀请人完成签到，则邀请人可获得 deepin 周边 T 恤或帆布袋 1 件。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;我们诚挚邀请每一位对 Linux、对开源、对技术创新充满热情的朋友，加入我们。8 月 24 日，让我们相约武汉，共赴这场精彩的线下之约！&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;（1） &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Ftable.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本镜像（含 deepin V15）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fwelcome-to-whlug%2F&quot; target=&quot;_blank&quot;&gt;什么是 WHLUG（武汉 Linux 用户组）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-whlug%2F&quot; target=&quot;_blank&quot;&gt;往期 WHLUG 活动&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307945</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307945</guid>
            <pubDate>Tue, 20 Aug 2024 06:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>「网易云音乐」回应 8.19 服务器故障：业务扩容中出现技术事故</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;8 月 19 日下午 2 点半左右，大量网友反馈「网易云音乐」App 无法正常使用，与此同时网页端也出现 502 Bad Gateway 报错信息。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114330_4MZh_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114210_iJ4b_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;随后「网易云音乐崩了」词条迅速登顶微博热搜。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-30bc827534dfb94d0710c4ff02f1ca035ee.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;对于如此大面积的故障，网上很快出现了各种猜测事故原因的传言，比如删库跑路、服务器迁移、机房起火等等。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114506_QEN9_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9677df8cc5e64cb90c0f3b7e716ae2e0633.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;19 日下午 15 点&lt;/strong&gt;，「网易云音乐」在官方微博&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1721030997%2FOsZDanTC7&quot; target=&quot;_blank&quot;&gt;回应称&lt;/a&gt;&lt;/u&gt;「&lt;strong&gt;因基础设施故障，导致网易云音乐各端无法正常使用&lt;/strong&gt;」。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114607_ouQF_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;到了 17 点左右&lt;/strong&gt;，服务已基本恢复正常。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;17:30&lt;/strong&gt;，「网易云音乐」发布微博&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1721030997%2FOt0yKvWuL&quot; target=&quot;_blank&quot;&gt;称「故障已陆续修复」&lt;/a&gt;&lt;/u&gt;，否认了「删库跑路」的传言，并公布了针对此次事故的补偿权益。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114551_uzhS_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;19 日晚&lt;/strong&gt;，「网易云音乐」在微博&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1216431741%2FOt0IrcRKF&quot; target=&quot;_blank&quot;&gt;回复&lt;/a&gt;了媒体的报道，称「&lt;strong&gt;今天下午在业务扩容中出现了技术事故&lt;/strong&gt;」。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0820/114633_Tvn4_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;根据「凤凰网科技」的独家报道&lt;br&gt; （&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5ODAxMjU2MA%3D%3D%26mid%3D2649777699%26idx%3D1%26sn%3D0fd079acdec16389dba79d6df9c41ecd%26chksm%3Dbed5f5dc89a27cca61cd48fe36eeabdb027fd6e3dce61c298c886bc561a277084ee17e453558%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;独家｜网易云音乐故障真相：技术降本增效，人手不足排查了半天&lt;/a&gt;）：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;从网易内部相关技术人员处获悉，此次宕机事件或与今年二季度的机房搬迁有关。「&lt;strong&gt;网易在贵州建立了机房，旗下业务分阶段搬迁，2024 年 Q2 网易云音乐刚刚完成了贵州机房的迁移。&lt;/strong&gt;」&lt;/p&gt; 
 &lt;p&gt;据前述知情人士表述，这次搬迁内部曾评估难度极大，稍有不慎就有重大事故发生的可能性。「前几天刚说这次完成的不错，结果就打脸了。」&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e6ed13572bc62d6b9e412d3b0daa8488450.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;图｜来自《云音乐贵州机房迁移总体方案回顾》&lt;br&gt; （2024 年 7 月 11 日）&lt;/p&gt; 
 &lt;p&gt;其认为，近几年互联网公司多出现大型技术事故，多与降本增效相关。而网易此次搬迁，内部也称实现了大幅的成本下降。「再加上裁员，连故障排查都要很长时间」。&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307921</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307921</guid>
            <pubDate>Tue, 20 Aug 2024 03:49:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>FreeBSD 发布 Q2 报告，与 AMD 合作改进操作系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreeBSD &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Fstatus%2Freport-2024-04-2024-06%2F&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;了一份迟到的 2024 年第二季度状态报告，概述了该项目正在进行的一些有趣工作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在过去一个季度的工作中，FreeBSD 基金会一直在赞助一些项目，以增强音频堆栈、OpenZFS 的分层速率限制、将 Vector Packet Processor (VPP) 移植到 FreeBSD 以及改进 FreeBSD 上的无线网络支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreeBSD 的音频堆栈工作包括启用异步音频设备分离、声音崩溃和修复、对「snd_hda」笔记本音频硬件提供更多开箱即用的支持、围绕 OSS API 的修复，并开始开发 audio OSS audio / MIDI library。FreeBSD 承认他们的音频支持没有得到应有的重视，但有开发人员正在努力改善这种情况。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;214&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-672fe970bc4368a4dd8f75b351b08219b96.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;值得一提的是，AMD 和 FreeBSD 基金会一直在合作开发完整的 FreeBSD AMD IOMMU 驱动程序。目的是让 FreeBSD 更好地支持超过 256 个 CPU 核心、Bhyve 集成以及 FreeBSD 上 AMD EPYC 服务器的其他改进。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「Konstantin Belousov 一直致力于该项目的各个部分，包括驱动程序附件、寄存器定义、ACPI 表解析器和实用程序功能。需要完成的两个关键组件是上下文处理（主要是 Intel DMAR 代码的泛化）和页表创建。在此之后，可以打开 AMD 驱动程序的 enable bit 进行测试。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，FreeBSD 将继续推进更多围绕 RISC-V 支持的工作，包括对 StarFive JH7110 SoC / VisionFive v2 和 T-HEAD/XuanTie CPU 的支持。Bhyve 中还提供了对 RISC-V hypervisor 的实验性支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreeBSD 内核的一项创新工作是开发了「Zcond 」作为一种低成本的条件执行机制，类似于 Linux 的 static_key 接口。其目的是减少对性能敏感的内核代码路径中很少使用的功能的开销，目前该项目仍处于早期阶段。&lt;/span&gt;&lt;/p&gt; 
&lt;pre style=&quot;text-align:left&quot;&gt;&lt;code&gt;&lt;span&gt;if&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;some_global_flag&lt;/span&gt; &lt;span&gt;==&lt;/span&gt; &lt;span&gt;true&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;do_some_additional_task&lt;/span&gt;&lt;span&gt;();&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreeBSD 的 2024 年第三季度报告计划于 2024 年 10 月发布。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307910/freebsd-q2-2024</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307910/freebsd-q2-2024</guid>
            <pubDate>Tue, 20 Aug 2024 03:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>RustDesk 1.3.0 发布，远程桌面</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;RustDesk 1.3.0 版本发布，&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Freleases%2Ftag%2F1.3.0&quot; target=&quot;_blank&quot;&gt;https://github.com/rustdesk/rustdesk/releases/tag/1.3.0&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;720&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-38d82c68c388744d981cfa53bfe95f0b845.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;新加&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;剪贴板多格式支持, html/rtf (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F8733&quot; target=&quot;_blank&quot;&gt;#8733&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;发送剪贴板字符 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F5451&quot; target=&quot;_blank&quot;&gt;#5451&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;活动标签边框&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F8832&quot; target=&quot;_blank&quot;&gt;#8832&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MSI 创建桌面和开始菜单快捷方式的选项 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F8829&quot; target=&quot;_blank&quot;&gt;#8829&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通过命令行将客户端添加到地址簿/标签&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F7866&quot; target=&quot;_blank&quot;&gt;#7866&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通用&amp;nbsp;&lt;span&gt;apk, ARM64 / ARM32 / X86_64 (&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F8941&quot; target=&quot;_blank&quot;&gt;#8941&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;PIN 解锁 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F7656&quot; target=&quot;_blank&quot;&gt;#7656&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#f6f6f6&quot;&gt;信任当前设备&lt;/span&gt;&amp;nbsp;&amp;nbsp;2FA 选项 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F8513&quot; target=&quot;_blank&quot;&gt;#8513&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在文件传输窗口中重命名文件和文件夹&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F7758&quot; target=&quot;_blank&quot;&gt;#7758&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;修改&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;新连接后保持窗口位置&amp;nbsp;&lt;span&gt;&amp;nbsp;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F8834&quot; target=&quot;_blank&quot;&gt;#8834&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Vcpkg ffmpeg (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F8764&quot; target=&quot;_blank&quot;&gt;#8764&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在 Linux 上删除 --tray 的自动启动条目&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F4863&quot; target=&quot;_blank&quot;&gt;#4863&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在 Android 上使用 JNI MediaCodec 支持的硬件编解码器，这可能会解决一些等待图像的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F8985&quot; target=&quot;_blank&quot;&gt;#8985&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;断开连接时删除虚拟显示器&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F8044&quot; target=&quot;_blank&quot;&gt;#8044&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;修复&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;左右滚轮反转&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F1169&quot; target=&quot;_blank&quot;&gt;#1169&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;存占用巨大&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F8883&quot; target=&quot;_blank&quot;&gt;#8883&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;音频延迟累积&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F534&quot; target=&quot;_blank&quot;&gt;#534&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Sciter 与 Rust 不兼容&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F8856&quot; target=&quot;_blank&quot;&gt;#8856&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;默认情况下不选择乌克兰语翻译&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F8923&quot; target=&quot;_blank&quot;&gt;#8923&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;触控板，反向水平滚动&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F8827&quot; target=&quot;_blank&quot;&gt;#8827&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Debian 无法解锁设置&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F8719&quot; target=&quot;_blank&quot;&gt;#8719&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;最大化控制窗口后，无法看到 Windows 任务栏图标的活动栏&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F8979&quot; target=&quot;_blank&quot;&gt;#8979&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;隐私模式 2 不起作用&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F8994&quot; target=&quot;_blank&quot;&gt;#8994&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;启用允许删除壁纸后无法连接&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fdiscussions%2F9053&quot; target=&quot;_blank&quot;&gt;#9053&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Windows 上的顶部边缘调整大小&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fpull%2F9081&quot; target=&quot;_blank&quot;&gt;#9081&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;macOS 上的 Dock 图标频繁弹跳&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F9088&quot; target=&quot;_blank&quot;&gt;#9088&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;剪贴板逻辑仍然损坏（多个连接）&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F7321&quot; target=&quot;_blank&quot;&gt;#7321&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;Fedora 上崩溃&amp;nbsp;&lt;span&gt;(&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk%2Fissues%2F9051&quot; target=&quot;_blank&quot;&gt;#9051&lt;/a&gt;&lt;span&gt;)&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;另外，我们团队正在 [招聘](&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frustcc.cn%2Farticle%3Fid%3D6eb4b4d9-f629-4f0a-ace7-1a3f7b5c8fff&quot; target=&quot;_blank&quot;&gt;https://rustcc.cn/article?id=6eb4b4d9-f629-4f0a-ace7-1a3f7b5c8fff&lt;/a&gt;）&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307892/rustdesk-1-3-0</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307892/rustdesk-1-3-0</guid>
            <pubDate>Tue, 20 Aug 2024 02:19:18 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源赋能，引领数智新时代 | openKylin 亮相第十九届「开源中国开源世界」大会</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 8 月 19 日，以「开源赋能，引领数智新时代」为主题的&lt;strong&gt;第十九届「开源中国开源世界」大会&lt;/strong&gt;在北京召开。openKylin 社区理事长朱晨受邀出席，与来自 Linux 基金会、华为、CSDN 、沙特开源程序员协会、中兴、Intel 等国内外开源领域的院士专家、企业领袖和技术精英，聚焦开源热点议题和行业创新应用，分享开源领域的相关工作经验，共同探索国内外开源组织的合作之道，为推动我国开源事业发展贡献力量。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-85a1105eac675788bfb7aadb84ca10ad2ab.jpg&quot; width=&quot;3000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;随着新一代信息技术的普及应用加快，全面推进数字化变革已经成为大势所趋。开源所蕴含的开放、共享、协同精神能够吸引、汇聚更多英才，使其发挥创新潜力，提升技术发展水平、科技成果转化率，推动数字经济逐渐蓬勃发展，而 AI 技术的快速迭代使得智能世界的开源共建正成为产业讨论的关键议题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;会上，&lt;strong&gt;openKylin 社区理事长朱晨&lt;/strong&gt;带来&lt;strong&gt;《openKylin 社区与 AI 应用实践》&lt;/strong&gt;主题分享。他介绍到，面对 AI 技术的迅猛发展与应用场景的日益丰富，openKylin 社区将通过&lt;strong&gt;技术创新、生态发展、人才培养&lt;/strong&gt;三个维度，致力于打造一个全面、开放和创新的 AI 操作系统生态。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0271883f747a8ad0d0a83f12df95e14a863.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;技术创新层面&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;，openKylin 积极响应&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;AIPC&lt;/span&gt;&lt;span&gt;发展趋势，提供统一的 AI 芯片移植工具，方便各大 AI 芯片适配移植；并深化 AI 中间层能力，提供一套标准的 AI 应用开发 SDK，解决模型部署难，跨模型接口不统一的问题；同时，推动 AI+OS 融合发展，利用 AI 实现 OS 智能调优、丰富&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;AI Agent&lt;/span&gt;&lt;span&gt;应用场景，探索新型硬件 RISC 和 AI 的融合。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;生态发展层面&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;，openKylin 联合 AI 产业上下游厂商加入社区共建中，完成包括 Intel 最新 14 代 Meteor Lake 平台等在内的主流 AI 芯片、AI 模型、AI 应用的适配，构建完整的 AI 生态。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;人才培养层面&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;，openKylin 成立高校专区，推动开源文化在高校中传播与交流,为高校老师和同学们提供的开源技术创新和开源项目实践平台。截至目前已招募北邮、北航、上海交大、天津大学、南开大学、东南大学等 50+所高校加入社区，共同培养开源人才。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 作为中国领先的开源操作系统根社区，积极布局 AI 前沿科技，探索创新，在近期发布的 openKylin 2.0 版本中，深度融合技术，打造 AI 子系统，为上层提供统一 AI 接口能力，并全面上线麒麟 AI 助手、跨应用智能图文处理、系统智能数据管理等 AI 功能，开启智能操作系统的新体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;未来，openKylin 社区将持续秉持开放合作的原则，积极与产业链上下游伙伴建立紧密合作关系，共同构建开放共赢的 AI 操作系统生态，书写开源操作系统与 AI 技术融合发展的新篇章。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307871</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307871</guid>
            <pubDate>Tue, 20 Aug 2024 01:18:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源日报 | 网易云音乐崩了；MoonBit 发布 beta；稚晖君要做开源机器人；LLM 数学性能暴涨 168%；CockroachDB 变更开源协议</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.19&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要闻&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;「网易云音乐崩了」冲上热搜，官方回应「基础设施故障」&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt;
  19 日下午，大量网友反映网易云音乐「崩了」，相关话题登上热搜第一。此时「网易云音乐」App 弹窗提示：获取数据失败，请重试。期间网友称「一直显示加载失败、播放失败、网络错误」、「重启也不行，一度以为手机坏了」。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;br&gt; 下午 3 点左右，@网易云音乐对此回应：「大家好，因基础设施故障，导致网易云音乐各端无法正常使用，我们正在加紧修复，非常抱歉。感谢大家的等待。」
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0819/220655_RHJN_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307723/moonbit-beta&quot;&gt;IDEA 研究院编程语言 MoonBit 发布 beta 预览版&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;MoonBit beta 预览版比大部分主流语言更早推出现代化泛型、精准错误处理和高效迭代器等重要特性，在云计算、边缘计算、人工智能和教育等领域快速实现落地应用。Beta 预览版标志着 MoonBit 生态进入全新阶段，为用户提供更稳定、流畅的创新操作体验。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;MoonBit 自去年发布 alpha 版后，反响热烈。经过一年的高速迭代，MoonBit 到达了 beta 预览版的里程碑：在核心语言特性上，MoonBit 媲美、甚至超越了大部分主流语言的 1.0 版本；语言特性的开发稳定，开发者可以更广泛地参与到生态建设中来。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307530&quot;&gt;开源下载工具 Aria 被诈骗份子使用，开发者无奈清空代码仓库&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;开源下载工具 Aria 开发者昨日删除了该项目在 GitHub 仓库中的全部源代码。Aria 开发者写道：「&lt;strong&gt;&lt;em&gt;因 Aria 被诈骗分子使用，导致我被跨省，因此本项目源码永久删除。&lt;/em&gt;&lt;/strong&gt;」&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0817/123724_l2gM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日观察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1678157684%2FOsNI2Bhrf&quot; target=&quot;_blank&quot;&gt;脑机接口新案例&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;马斯克在捣鼓脑机接口，就是用电极植入人类大脑，提取脑电信号，然后用计算机处理这些信号，实现某种功能。&lt;/p&gt; 
     &lt;p&gt;在官网介绍他这个研究的时候，马斯克惯例是不提此前的类似研究，所以许多人得到的印象是，他正单枪匹马开创一种崭新的技术，肩负解放人类的重担。&lt;/p&gt; 
     &lt;p&gt;实际上，医学界做这种研究已经超过十年，而且已经有不错的成果。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;苦丁山&lt;/strong&gt;&lt;/span&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1721030997%2FOsZDanTC7%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;网易云音乐称基础设施故障&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2baef55c36dca285010afac7649e66cc847.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;网易云音乐&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6QPqQpfiS0wlrVwUaBu4OQ&quot; target=&quot;_blank&quot;&gt;我们收到了知网 28 页的侵权告知函&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt;
   &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e8b2c3c71ad49be4cdad701dcaadf6bb6a7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;秘塔官方&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6444741184%2FOsPyE2KrX&quot; target=&quot;_blank&quot;&gt;稚晖君要做开源机器人 &lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2d8a07d26b5fc6e7209d20cd2e94b13351f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    - 微博&amp;nbsp; 
    &lt;strong&gt;林亦 LYi&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240819A03YN800&quot; target=&quot;_blank&quot;&gt;LLM 数学性能暴涨 168%&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     合成数据 2.0 秘诀曝光了！来自微软的研究人员们提出了智能体框架 AgentInstruct，能够自动创建大量、多样化的合成数据。经过合成数据微调后的模型 Orca-3，在多项基准上刷新了 SOTA。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;新智元&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒体观察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1442704.htm&quot; target=&quot;_blank&quot;&gt;百度李彦宏：不一定非要学 AI 专业，任何行业都能与 AI 结合&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;在第 28 届百度 hackathon 黑客马拉松比赛上，百度创始人李彦宏在接受采访时表示，在 AI 时代年轻人也不一定非选 AI 专业。李彦宏表示：「其实很多专业都跟 AI 是有关系的，AI 之所以有这么大的潜力，它就是对任何一个行业可能都会有很大的影响。」他进一步解释道，不过还是要学一些 AI 相关的东西，特别是 AI 相关的新的思维方式，比如说大模型提示词工程师等等。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;快科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cAfAxkLsEI&quot; target=&quot;_blank&quot;&gt;CockroachDB 宣布开源协议重大变更&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;CockroachDB 是全球开源分布式数据库领导者，简称为 CRDB，国内又称为小强数据库或蟑螂数据库，走兼容 PostgreSQL 协议路线。&lt;/p&gt; 
  &lt;p&gt;CockroachDB 最开始的开源协议是 Apache2.0，后来基于商业发展目标考虑，在 2019 年核心代码改为 BSL(Business Source License)，目的和 MongoDB 的 SSPL 类似，防止第三方提供 CockroachDB 的托管服务。CockroachDB 的 BSL 协议声明，产品发布后 3 年后会自动从 BSL 协议转换为 Apache2.0 的协议，这对于那些新特性不感兴趣的企业是非常友好的。&lt;/p&gt; 
  &lt;p&gt;开源软件最大的挑战是商业转换，2024.08.15 号，CockroachDB 官方再次宣布计划将从 2024.11.18 号开始关闭 BSL 协议，所有客户都转换为 CockroachDB 的企业版产品协议。企业版分为 2 种类型，年收入 1000 万美金以下企业可以免费使用，年收入超过 1000 万美金的企业可以试用 30 天，后面需要付费。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;IT168&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.thepaper.cn%2FnewsDetail_forward_28448690&quot; target=&quot;_blank&quot;&gt;稚晖君的人形机器人上新了，还有开源、免费彩蛋&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;在这场发布会中，稚晖君一口气推出了三款远征系列机器人产品：交互服务机器人「远征 A2」、柔性智造机器人「远征 A2-W」、重载特种机器人「远征 A2-Max」。最后的 One more thing 环节，智元 X-Lab 孵化的模块化机器人系列产品「灵犀 X1」和「灵犀 X1-W」也作为「彩蛋」正式亮相。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;机器之心&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.36kr.com%2Fp%2F2909785454287747&quot; target=&quot;_blank&quot;&gt;强攻 GPU，TPU 芯片一夜蹿红&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;当下，英伟达大约掌控着 80% 的人工智能数据中心芯片市场，而其余 20% 的大部分则由不同版本的谷歌 TPU 把控。未来，TPU 所占的市场份额会不会持续上扬？会增长几何？是否会有其他架构的 AI 芯片将现有的市场格局一分为三？这些悬念预计在接下来的数年间将逐步揭晓。&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;半导体产业纵横&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240819A0356O00&quot; target=&quot;_blank&quot;&gt;9 岁小学生用大模型写书赚 2 万元&lt;/a&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;许萌萌（笔名），就读于北京市西城区一所实验小学，是一个上三年级的小男生。今年 4 月，由他创作的《AI 少年：火星生存大挑战》一书，终于正式出版，全文 7、8 万字，定价 49.90 元，首印 5000 册。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;该书讲述了一个名为「萌萌」（与自己同名）的小朋友，和他另外两个朋友球球、番茄一起去科技馆参加「火星生存挑战营」活动，在现场人工智能助手「聪聪」的提示下，萌萌戴上 VR 设备进入「火星」这一虚拟世界后，如何独自成功脱险，返回地球的故事。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;出版后，该书 1 个月内加印，截至当月底共售出 6000 余册。负责该书的策划编辑晓晓表示：「正在向卖 1 万册努力。」&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#212121&quot;&gt;腾讯网&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推荐&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;开源项目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdidi%2FUnify&quot; target=&quot;_blank&quot;&gt;didi/Unify&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 是一个 Flutter 混合开发框架，由滴滴出行国际化外卖团队自研，目前已经广泛应用于滴滴国际化外卖及国际化出行业务。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 的亮点特性包括:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;平台无关的模块抽象&lt;/strong&gt;: 允许开发者使用 Dart 语言声明与平台无关的模块接口与实体。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;灵活的实现注入&lt;/strong&gt;: 开发者可以灵活地选择注入原生实现（Android/iOS）或 Flutter 实现。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;自动代码生成&lt;/strong&gt;: 借助强大的代码生成引擎，Unify 可以自动生成 Flutter、Android、iOS 多平台下统一调用的 SDK。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 的整体原理如下：&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-105ff4761152e62ed960a0d0c772a2309af.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/p/unify-didi&quot;&gt;https://www.oschina.net/p/unify-didi&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最后，欢迎扫码下载「开源中国 APP」，阅读海量技术报告、程序员极客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307832</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307832</guid>
            <pubDate>Mon, 19 Aug 2024 12:15:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Jmix 2.3 发布 - 企业级 Java Web RAD 平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;img alt=&quot;Jmix2.3 发布&quot; src=&quot;https://oscimg.oschina.net/oscnet/jmix_2.3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我们最近发布了 Jmix 的 2.3 版本。这篇博客中，我们将介绍这个新版本中增加的新功能和改进。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;有关完整的详细信息和升级说明，请参阅文档中的&lt;span style=&quot;color:#595959&quot;&gt;最近更新&lt;/span&gt;[1]页面。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjmix.cn&quot; target=&quot;_blank&quot;&gt;Jmix&lt;/a&gt; 是一个企业级 Java Web 快速开发平台，包括：核心开源框架、特定的 IDE，称为 Studio 以及一组开箱即用的扩展组件。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#0451a5&quot;&gt;1.&lt;/span&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt; 开源框架基于 Spring 和其他主流 Java 技术栈构建，使用 Jmix，只需 Java 或 Kotlin 单一开发语言即可完成业务逻辑和 Web UI 的开发。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#0451a5&quot;&gt;2.&lt;/span&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt; Jmix Studio 是 IntelliJ IDEA 插件，可以辅助项目开发，极大地提升开发效率。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#0451a5&quot;&gt;3.&lt;/span&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt; Jmix 扩展组件为典型的业务需求提供解决方案，例如，数据审计、REST API、电子邮件，报表生成、BPM 等。&lt;/span&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Superset 扩展组件&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#595959&quot;&gt;Apache Superset&lt;/span&gt;[2] 是领先的数据探索和可视化开源解决方案。支持创建高度可定制的仪表板，其中可以包含多种图表。图表通过数据集填充数据，而数据是使用 SQL 从数据库中获取。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;通过 Jmix Superset 扩展组件，在应用程序中可以很容易集成 Superset 服务，并将仪表板嵌入到 Jmix 视图中。例如，Bookstore 应用程序的主视图中包含了一个仪表板，展示客户订单的相关信息：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Superset 示例&quot; src=&quot;https://oscimg.oschina.net/oscnet/superset_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;连接到 Superset 服务时只需指定 URL 和用户凭证，在显示嵌入的仪表板时，由扩展组件负责请求、刷新和使用安全 token。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在 Superset 中创建好仪表板后，需要一些配置以便能在 Jmix 中嵌入。Superset 会生成一个 ID，外部应用可以通过这个 ID 引用该仪表板。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;扩展组件提供的 &lt;code&gt;dashboard&lt;/code&gt; UI 组件可以用于在应用程序视图中嵌入仪表板。只需在 &lt;code&gt;embeddedId&lt;/code&gt; 属性中指定仪表板 ID：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;superset:dashboard&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;ordersDashboard&quot;&lt;/span&gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;embeddedId&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;4bc14bf5-a3ec-4151-979e-a920420e1f66&quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;height&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;100%&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;width&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;100%&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;maxWidth&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;50em&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Superset 服务直接与应用程序数据库相连。为了根据用户权限或其他条件筛选仪表板上显示的数据，可以在视图中将约束列表传递给仪表板。以下示例中，仪表板仅显示当前租户的数据：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@Install&lt;/span&gt;(to&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;ordersDashboard&quot;&lt;/span&gt;,&amp;nbsp;subject&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;datasetConstraintsProvider&quot;&lt;/span&gt;)&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;List&amp;lt;DatasetConstraint&amp;gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;ordersDashboardDatasetConstraintsProvider&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;()&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DatasetConstraint&amp;nbsp;constraint&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;new&lt;/span&gt;&amp;nbsp;DatasetConstraint(&lt;span style=&quot;color:#1c00cf&quot;&gt;25&lt;/span&gt;,&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;tenant&amp;nbsp;=&amp;nbsp;&#39;&quot;&lt;/span&gt;&amp;nbsp;+&amp;nbsp;tenantProvider.getCurrentUserTenantId()&amp;nbsp;+&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;return&lt;/span&gt;&amp;nbsp;List.of(constraint);&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;有关如何在 Jmix 应用程序中使用 Superset 扩展组件的详细信息，请参考 &lt;span style=&quot;color:#595959&quot;&gt;Superset 文档&lt;/span&gt;[3]。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;支持 OpenSearch&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Jmix Search 扩展组件现在可以使用 &lt;span style=&quot;color:#595959&quot;&gt;OpenSearch&lt;/span&gt;[4] 服务了。无论使用的是 OpenSearch 还是 Elasticsearch 引擎，扩展组件中的所有功能（声明式索引定义、索引队列、UI 搜索控件等）均行为一致。通过在 &lt;code&gt;build.gradle&lt;/code&gt; 中指定依赖的 starter 来区分使用的搜索引擎。从市场安装扩展组件时，默认情况下会使用 OpenSearch。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Fragments&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Fragment 是一种新的 UI 构建块，可以分解复杂的 UI 结构，从而减少重复代码。就其特性而言，Fragment 介于视图和组合组件之间。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;一方面，与视图一样，Fragment 的 XML 中可以包含数据组件和操作。并支持在 fragment 类中进行组件注入和事件处理。Studio 提供了一个用于创建空 fragment 的模板，以及与视图相同的 UI 设计器。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;而另一方面，fragment 又可用作视图或其他 fragment 中的组件。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;使用 Fragment 可以在构建和重用绑定了数据模型的 UI 代码时提供更大的灵活性。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;通过下面的示例可以了解如何创建和使用 fragment。这个简单的 fragment 展示一个名为 &lt;code&gt;Money&lt;/code&gt; 的可嵌入实体的数据。在 UI 设计器中可以显示 XML 和预览，如下所示：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Fragment 示例&quot; src=&quot;https://oscimg.oschina.net/oscnet/fragment_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Fragment 的类（也称为控制器）可以定义 setter 接收来自外部的参数。在我们的例子中，接收一个 &lt;code&gt;Money&lt;/code&gt; 实例并将其保存到数据容器中：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@FragmentDescriptor&lt;/span&gt;(&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;money-fragment.xml&quot;&lt;/span&gt;)&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#5c2699&quot;&gt;MoneyFragment&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;extends&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#5c2699&quot;&gt;Fragment&lt;/span&gt;&amp;lt;&lt;span style=&quot;color:#5c2699&quot;&gt;JmixFormLayout&lt;/span&gt;&amp;gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;InstanceContainer&amp;lt;Money&amp;gt;&amp;nbsp;moneyDc;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;setMoney&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(Money&amp;nbsp;money)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;moneyDc.setItem(money);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在视图中包含 fragment 时，我们使用 &lt;code&gt;fragment&lt;/code&gt; 元素并指定 fragment 的类。例如，父视图可以包含同一 fragment 的两个实例：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;h4&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;text&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;msg://price&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;fragment&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;unitPriceFragment&quot;&lt;/span&gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;io.jmix.bookstore.view.moneyfragment.MoneyFragment&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;h4&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;text&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;msg://discount&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;fragment&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;discountFragment&quot;&lt;/span&gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;io.jmix.bookstore.view.moneyfragment.MoneyFragment&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在父视图的控制器内可以调用 fragment 的 API 来传递 &lt;code&gt;Money&lt;/code&gt; 实例：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;MoneyFragment&amp;nbsp;unitPriceFragment;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;MoneyFragment&amp;nbsp;discountFragment;

&lt;span style=&quot;color:#643820&quot;&gt;@Subscribe&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;onReady&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(&lt;span style=&quot;color:#aa0d91&quot;&gt;final&lt;/span&gt;&amp;nbsp;ReadyEvent&amp;nbsp;event)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unitPriceFragment.setMoney(orderLineDc.getItem().getUnitPrice());&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;discountFragment.setMoney(orderLineDc.getItem().getDiscount());&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Data Repositories&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;该版本完成了对 Spring Data Repository 作为 Jmix 生态系统中一等公民的支持。现在，视图中可以很方便地使用它们来加载和保存数据，同时兼容所有标准 Jmix UI 功能，如过滤、分页和排序等。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;当使用向导创建视图时，在 &lt;em&gt;Advanced&lt;/em&gt; 部分有 &lt;em&gt;Use Data Repository&lt;/em&gt; 复选框。如果勾选，则可以选择已有的 Data Repository。向导生成的视图中，数据的读写都代理给了 Data Repository 的方法。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;列表数据的加载代理中，从 Jmix &lt;code&gt;LoadContext&lt;/code&gt; 对象中提取了 Spring Data &lt;code&gt;PageRequest&lt;/code&gt;，然后通过 &lt;code&gt;JmixDataRepositoryContext&lt;/code&gt; 对象为 Data Repository 提供过滤条件和其他选项。这里可以按需修改，例如，可以设置初始的排序：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@Install&lt;/span&gt;(to&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;customersDl&quot;&lt;/span&gt;,&amp;nbsp;target&amp;nbsp;=&amp;nbsp;Target.DATA_LOADER)&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;List&amp;lt;Customer&amp;gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;loadDelegate&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(LoadContext&amp;lt;Customer&amp;gt;&amp;nbsp;context)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;将&amp;nbsp;Jmix&amp;nbsp;分页和排参数转换为&amp;nbsp;Spring&amp;nbsp;Data&amp;nbsp;PageRequest&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PageRequest&amp;nbsp;pageable&amp;nbsp;=&amp;nbsp;JmixDataRepositoryUtils.buildPageRequest(context);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;if&lt;/span&gt;&amp;nbsp;(pageable.getSort().isEmpty())&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;设置初始排序&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pageable&amp;nbsp;=&amp;nbsp;pageable.withSort(Direction.ASC,&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;firstName&quot;&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;lastName&quot;&lt;/span&gt;);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;提供&amp;nbsp;Jmix&amp;nbsp;条件，fetch&amp;nbsp;plan&amp;nbsp;以及&amp;nbsp;hints&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JmixDataRepositoryContext&amp;nbsp;jmixContext&amp;nbsp;=&amp;nbsp;JmixDataRepositoryUtils.buildRepositoryContext(context);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;调用&amp;nbsp;repository&amp;nbsp;方法并返回分页内容&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;return&lt;/span&gt;&amp;nbsp;repository.findAll(pageable,&amp;nbsp;jmixContext).getContent();&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;上面的代码与下面加载器中的 JPQL 功能相同：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;loader&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;customersDl&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;readOnly&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;query&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;![CDATA[select&amp;nbsp;e&amp;nbsp;from&amp;nbsp;bookstore_Customer&amp;nbsp;e&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;order&amp;nbsp;by&amp;nbsp;e.firstName&amp;nbsp;asc,&amp;nbsp;e.lastName&amp;nbsp;asc]]&amp;gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;query&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;loader&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;所有继承 &lt;code&gt;JmixDataRepository&lt;/code&gt; 了的 Repository 方法现在都支持 &lt;code&gt;JmixDataRepositoryContext&lt;/code&gt; 作为附加参数。因此 Data Repository 能兼容 &lt;code&gt;genericFilter&lt;/code&gt;、&lt;code&gt;propertyFilter&lt;/code&gt; 组件以及声明式数据加载器。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;TabSheet 标签页的延迟加载&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;当视图中有许多 UI 控件并且需要通过标签页进行分组时，我们通常使用 TabSheet 组件。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在该版本中，我们增加了将标签页标记为 &lt;code&gt;lazy&lt;/code&gt; 的功能。打开视图时，不会自动加载这种标签页的内容。如果标签页包含大量组件并需要加载其他数据，那么使用该功能可以显著提高性能。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;延迟标签页的数据加载和其他初始化内容需要在 TabSheet 的 &lt;code&gt;SelectedChangeEvent&lt;/code&gt; 监听器中完成，例如：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;CollectionLoader&amp;lt;Position&amp;gt;&amp;nbsp;positionsDl;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;boolean&lt;/span&gt;&amp;nbsp;positionsInitialized;

&lt;span style=&quot;color:#643820&quot;&gt;@Subscribe&lt;/span&gt;(&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;tabSheet&quot;&lt;/span&gt;)&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;onTabSheetSelectedChange&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(&lt;span style=&quot;color:#aa0d91&quot;&gt;final&lt;/span&gt;&amp;nbsp;JmixTabSheet.SelectedChangeEvent&amp;nbsp;event)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;positionTab&quot;&lt;/span&gt;.equals(event.getSelectedTab().getId().orElse(&lt;span style=&quot;color:#aa0d91&quot;&gt;null&lt;/span&gt;))&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;!positionsInitialized)&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;positionsDl.load();&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;positionsInitialized&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;true&lt;/span&gt;;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;还有一点，延迟标签页内的组件不能注入到视图类中，因为在视图初始化时还不存在。因此，只能在标签页完成初始化之后通过 &lt;code&gt;UiComponentUtils.getComponent()&lt;/code&gt; 方法获取。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;TwinColumn 组件&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;新的 &lt;code&gt;twinColumn&lt;/code&gt; 组件为用户提供了一种熟悉且方便的方式来从列表中选择内容：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;双列组件示例&quot; src=&quot;https://oscimg.oschina.net/oscnet/twincolumn_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;授权服务扩展组件&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我们已将授权服务（Authorization Server）模块提炼成了一个单独的扩展组件，有单独的&lt;span style=&quot;color:#595959&quot;&gt;文档&lt;/span&gt;[5]和安装流程。这个组件之前是与通用 REST 扩展组件一起安装。因此，现在如果需要安装通用 REST 组件时，需要考虑如何保护 REST 端点：使用授权服务或 OIDC 组件还是通过其他方式。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;授权服务扩展组件提供了一个新的功能，可以实现资源所有者密码凭证授权（即原来的用户名密码授权）。OAuth 规范现在不推荐使用这种授权类型，但我们收到了很多开发人员的请求，于是决定在组件中实现并提供。可以在受信任的、老系统的或高度受控的环境中使用，使用已注册的 Jmix 应用程序用户对 REST 客户端进行简单的身份验证。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Liquibase changelog 合并&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;新版本中，Studio 最突出的新功能是能够合并已有的 Liquibase changelog。支持开发人员将几个最新的 changelog 合并为一个，并删除 changeset 中的重复操作。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;比如这个场景：由于数据模型的迭代开发，有三个 changelog。第一个在表格中添加了 &lt;code&gt;ALPHA&lt;/code&gt; 列，第二个添加 &lt;code&gt;BETA&lt;/code&gt; 列，第三个添加 &lt;code&gt;GAMMA&lt;/code&gt; 并删除 &lt;code&gt;ALPHA&lt;/code&gt;。因此，在第一个 changelog 中引入的更改将被第三个 changelog 覆盖。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;Aggregate Liquibase Changelogs&lt;/strong&gt; 的操作在数据存储的右键菜单中。可以选择任意数量的新添加的 changelog 进行合并。比如我们选择上述三个 changelog：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Liquibase changelog 合并&quot; src=&quot;https://oscimg.oschina.net/oscnet/aggregate_changelogs_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;新生成的 changelog 将仅包含真正使数据库结构与数据模型同步的更改，即添加 &lt;code&gt;BETA&lt;/code&gt; 和 &lt;code&gt;GAMMA&lt;/code&gt; 列：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Liquibase changelog 合并&quot; src=&quot;https://oscimg.oschina.net/oscnet/aggregate_changelogs_2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Studio 会删除选定的 changelog 文件，并添加新的合并文件。为了使新的 changelog 集合与已执行了旧 changelog 的数据库兼容，Studio 会为新的 changeset 添加一个前提条件。这个条件指示 Liquibase 不要执行新的 changeset，例如，如果替换列表中的第一个 changelog 已经执行：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;preConditions&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;onFail&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;MARK_RAN&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;not&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;changeSetExecuted&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;1&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;author&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;bookstore&quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;changeLogFile&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;io/jmix/bookstore/liquibase/changelog/2024/06/27-1-add-alpha.xml&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;not&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;preConditions&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;执行 changelog 合并时需小心，因为合并 changelog 并不是对已有 changelog 进行分析和重新生成。而是依据第一个选定的 changelog 之前的数据库结构与当前模型之间的差异生成一个新的 changelog。因此，如果合并的 changelog 包含一些未反映在模型中的数据更新或结构更改（例如，存储过程），则可能丢失。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;总的来看，使用此功能最自然、最安全的方法是在将最新更改提交到共享代码仓库或将功能合并到公共分支之前对 changelog 进行合并。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Studio 的其他改进&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;该版本还引入了多项能提升开发者体验的 Studio 功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Jmix 工具窗口提供了一个用于生成 UI 异常处理方法的操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Jmix UI 结构右键菜单中的 &lt;strong&gt;Convert to&lt;/strong&gt; 操作可以将一个组件一键转换为另一个组件。&lt;strong&gt;Wrap into&lt;/strong&gt; 操作可以将多个选定的组件包含至 TabSheet 的标签页中。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改进了 JPQL Designer 布局。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改进了 Dockerfile 生成。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;所有 Studio 的改进内容，请参考 &lt;span style=&quot;color:#595959&quot;&gt;Issue tracker&lt;/span&gt;[6]。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;下一步？&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我们计划在 2024 年 10 月发布下一个功能版本，其中包括 Jmix UI 中几个非常重要的功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;集成一些第三方 JavaScript 组件：日历、数据透视表（PivotTable）和看板（Kanban）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以使用 fragment 定义 &lt;code&gt;VirtualList&lt;/code&gt; 条目的内部布局。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;标签式主窗口模式，视图在主窗口内的标签页中打开，而不是在浏览器标签页中打开。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;最后一个功能是从迁移经典 UI 的开发人员最需要的功能。因此，我们将提供一个解决方案，可以在单个浏览器标签页中打开多个视图，而同时会牺牲一些浏览器功能，例如历史记录和深度链接。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我们计划的另一个可以帮助从旧版本的平台迁移的功能是声明试 UI 权限。这个功能在 CUBA 平台就已经有了，支持开发者和管理员通过配置限制用户对 UI 中内容（控件、按钮、动作）的访问，而无需编写任何代码。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在 Studio 方面，我们将改进 Jmix UI 组件属性面板的可用性，并为 UI 组件属性提供更多编辑器（例如，对于 &lt;code&gt;formLayout.responsiveSteps&lt;/code&gt;）。此外，我们还会提供与外部数据源集成方面工作的初步成果。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;像往常一样，我们仍将为错误修复、添加小功能和性能增强分配一定的时间。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;未来版本的详细路线图以&lt;span style=&quot;color:#595959&quot;&gt;GitHub 项目&lt;/span&gt;[7]的形式提供。当前版本 2.3 的补丁将大约每月发布一次，大家可以定期更新。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;如果有任何问题，欢迎到我们&lt;span style=&quot;color:#595959&quot;&gt;论坛&lt;/span&gt;[8]进行反馈，感谢所有提供想法、建议和错误报告的亲们！&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[1] &lt;/span&gt;最近更新: &lt;em&gt;https://docs.jmix.cn/jmix/whats-new/index.html&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[2] &lt;/span&gt;Apache Superset: &lt;em&gt;https://superset.apache.org/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[3] &lt;/span&gt;Superset 文档: &lt;em&gt;https://docs.jmix.cn/jmix/superset/index.html&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[4] &lt;/span&gt;OpenSearch: &lt;em&gt;https://opensearch.org/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[5] &lt;/span&gt;文档: &lt;em&gt;https://docs.jmix.cn/jmix/authorization-server/index.html&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[6] &lt;/span&gt;Issue tracker: &lt;em&gt;https://youtrack.jmix.io/issues/JST?q=Fixed%20in%20builds:%202.3.0,-2.2.&lt;/em&gt;%20type:%20Feature,Improvement,Usability*&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[7] &lt;/span&gt;GitHub 项目: &lt;em&gt;https://github.com/orgs/jmix-framework/projects/23/views/1&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[8] &lt;/span&gt;论坛: &lt;em&gt;https://forum.jmix.cn/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307786/jmix-2-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307786/jmix-2-3-released</guid>
            <pubDate>Mon, 19 Aug 2024 07:40:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>墨干 V1.2.9 LTS: 支持中文的 TMU 文档格式</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;div&gt; 
 &lt;h2&gt;重要信息&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt;墨干 v1.2.9 LTS 是一个长期支持版本，支持周期至少一年。在未来的一年内，我们会发布补丁版本（v1.2.9.2, v1.2.9.3, v1.2.9.5, v1.2.9.7) 等，补丁版本的版本编号我们采用质数 :)&lt;/li&gt; 
  &lt;li&gt;默认格式已经调整 TMU 格式，TMU 格式是 TM 格式的 Unicode 版。TM 格式长期依赖的通点是无法显示中文，TMU 格式解决了这个问题。&lt;/li&gt; 
  &lt;li&gt;在 macOS 和 Windows 内置 Noto CJK 字体是为了让同一个文档，在不同的平台所采用的字体（在未指定字体的情况下）尽可能一致。&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h2&gt;重要变更&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmogan.app%2Fzh%2Fguide%2Fchangelog%2Fv1.2.9.html%23%25E9%2587%258D%25E8%25A6%2581%25E5%258F%2598%25E6%259B%25B4&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;TMU: 默认格式已经调整为 TMU&lt;/strong&gt;，使用&lt;code&gt;文件-&amp;gt;导出-&amp;gt;TM 文档&lt;/code&gt;可以导出 TM 文档&lt;/li&gt; 
  &lt;li&gt;字体：在 macOS 和 Windows 上内置 Noto CJK 字体&lt;/li&gt; 
  &lt;li&gt;字体：在文档语言是中文的情况下，改善数学公式中括号等符号的渲染（开源之夏 2024）&lt;/li&gt; 
  &lt;li&gt;多语言支持：修复法语等语言的翻译编码错乱问题&lt;/li&gt; 
  &lt;li&gt;默认配置：&lt;code&gt;编辑-&amp;gt;首选项-&amp;gt;键盘-&amp;gt;文本中的空格键&lt;/code&gt;调整为允许输入多个空格&lt;/li&gt; 
  &lt;li&gt;Emacs 风格快捷键：修复无法在数学公式中使用&lt;code&gt;Alt+[&lt;/code&gt;和&lt;code&gt;Alt+]&lt;/code&gt;撤销和重做的问题&lt;/li&gt; 
  &lt;li&gt;插件： 
   &lt;ul&gt; 
    &lt;li&gt;Gnuplot: 基于金鱼 Scheme 重新实现，不再依赖于 Python&lt;/li&gt; 
    &lt;li&gt;Goldfish: 新增 sicp 启动器，适合学习 SICP，内置 false,true,nil 等兼容 SICP 示例代码的函数和常量&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;社区： 
   &lt;ul&gt; 
    &lt;li&gt;墨客星球：按照界面语言，选择不同的墨客星球入：w 口&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;开发者相关&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmogan.app%2Fzh%2Fguide%2Fchangelog%2Fv1.2.9.html%23%25E5%25BC%2580%25E5%258F%2591%25E8%2580%2585%25E7%259B%25B8%25E5%2585%25B3&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;内置金鱼 Scheme v17.10.4，将 S7 Scheme 升级至 v10.12-20240813&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307771/mogan-1-2-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307771/mogan-1-2-9-released</guid>
            <pubDate>Mon, 19 Aug 2024 06:43:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>凌鲨 0.9.9 版本更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h1&gt;2024 年 08 月 19 日&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linksaas.pro%2Fdownload&quot; target=&quot;_blank&quot;&gt;软件下载地址&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;服务端版本: 0.3.7&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;新增: 服务器列表新增 GRPC 类型&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改进: 服务器信息增加安全提示&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;相关截图&lt;/h1&gt; 
&lt;p&gt;&lt;img height=&quot;750&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ec6d6697ef0e935285b17ebe9d2dfb3111c.png&quot; width=&quot;1500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;750&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9fc114d7cd361ed0f5d309ac693937eee73.png&quot; width=&quot;1500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;750&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f0a46798742fb3059ba6e03262e701bed7.png&quot; width=&quot;1500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;750&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8c538eb80465661301482df316d3fe222f2.png&quot; width=&quot;1500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;750&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-275f4bd0963b6b8f0d0c5a4037c963364dc.png&quot; width=&quot;1500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307757/linksaas-0-9-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307757/linksaas-0-9-9-released</guid>
            <pubDate>Mon, 19 Aug 2024 05:36:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>昆仑万维发布 AI 短剧平台 SkyReels</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;昆仑万维发布全球首个集成视频大模型与 3D 大模型的 AI 短剧平台 SkyReels。集剧本生成、角色定制、分镜、剧情、对白/BGM 及影片合成于一体，旨在让创作者「一键成剧」，轻松制作高质量 AI 视频。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;SkyReels 平台集成了昆仑万维自研剧本大模型 SkyScript、自研分镜大模型 StoryboardGen、自研 3D 生成大模型 Sky3DGen、以及业界首个将 AI 3D 引擎与视频大模型深度融合的创新平台 WorldEngine。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;能够通过 AI 一键生成完整剧本、分镜、人物对白与 BGM，支持角色形象、音色与分镜的自定义调整，并能够自动将内容转换为 1080P 60 帧的高清视频，单次可生成视频长度达 180 秒，相比 Sora 单次可生成 60 秒视频、可灵单次可生成 10 秒视频，有显著突破。一键整合所有创作成果，极大提高视频的创作效率，降低创作成本，推动「一人一剧」时代加速来临。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，WorldEngine 结合了引擎的精确可控能力（如光照模拟、物理模拟、3D 空间、实时交互等） 以及 AI 视频大模型的幻想生成能力，提供了全新的线上混合视频创作模式，让视频创作从模糊生成迈向更加精确可控。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;322&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3b3b3b445168d40ab69df8c897c8338c7da.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;320&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-eac79e0ac7170420b90bf78129749788624.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;325&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3d47ee3ede6253924a5cdd051754b807835.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;SkyReels 亮点&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;全自动化剧本生成：用户输入概念或创意，AI 将一键生成一份结构完整、情节丰富的剧本，并支持已有剧本的自动整理与润色，提高创作效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高质量情节设计：系统通过分析大量剧本情节，生成高质量的故事情节、戏剧冲突、爽点及情感表达，保证剧本的丰富性与吸引力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;智能分镜生成：根据剧本内容，一键生成分镜图片和对应的文字脚本，用户还可自由调整分镜、镜头角度、运镜方式等参数，确保创意的精确实现。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;情感化对白/BGM：通过情感化语音合成技术，赋予角色自然的句间停顿、情感表达、抑扬顿挫，并基于视频内容自动生成 AI BGM，让画面与音乐完美融合。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;个性化定制：支持角色形象、音色和分镜的智能生成与自定义调整，满足创作者的个性化需求，并提供动漫、卡通、真人 3D 等多种视觉风格选择，适应不同创作者的偏好和内容表达需求。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;内容一致性与精确性：确保角色与场景在不同分镜中的一致性，同时根据故事描述自动推演角色表演，实现人物表情、动作、台词的协调一致，提升故事表现力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高效视频生成：自动将分镜转换为连续高清视频，提供 1080P 60 帧输出，确保流畅的观看体验。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;便捷的后期合成：一键整合所有创作成果，并可快速导出和分享，支持多种格式下载，方便后期编辑。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307743</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307743</guid>
            <pubDate>Mon, 19 Aug 2024 03:49:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>统信软件推出综合型开源自动化测试框架 「YouQu」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;统信软件宣布推出 「YouQu」 （有趣）综合型自动化测试框架。该框架紧密贴合实际需求，专为 Linux 操作系统量身定制，集管理、分发调度、驱动执行等核心功能于一体，实现了测试流程的全方位覆盖。&lt;/p&gt; 
&lt;p&gt;YouQu 支持 UI、WEB、接口及命令行等多种自动化测试场景。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux 桌面应用 UI 自动化测试&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基于 Qt 属性查找、图像识别、OCR 识别、相对位移方案获取元素位置，通过键鼠模拟操控元素进行 UI 操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web UI 自动化测试&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基于 PlayWright 控制浏览器（可自定义）进行 Web UI 自动化测试。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux DBus 接口自动化测试&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;通过框架内置的 DBus 操控功能，实现对 DBus 接口访问及获取数据。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;命令行自动化测试&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基于 subprocess、pexpect 实现命令行交互。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HTTP 接口自动化测试&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基于 Python 标准库 urllib，实现网络接口自动化测试流程。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;YouQu 采用工程化架构设计，其核心封装层提供基础能力，业务层根据实际业务需求（测试用例）动态加载核心封装层，执行层加载相应的用例集并控制执行流程。&lt;/p&gt; 
&lt;p&gt;测试平台可以根据实际测试策略组装配置，通过执行层接口驱动框架完成自动化测试执行。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0819/113328_rwU3_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;开源仓库地址&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;linuxdeepin 开源仓库：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fyouqu&quot; target=&quot;_blank&quot;&gt;https://github.com/linuxdeepin/youqu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;openEuler 开源仓库：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://gitee.com/src-openeuler/youqu&quot;&gt;https://gitee.com/src-openeuler/youqu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;YouQu 官网地址：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyouqu.uniontech.com&quot; target=&quot;_blank&quot;&gt;https://youqu.uniontech.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;统信开发者平台 YouQu 地址：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuosdn.uniontech.com%2F%23document2%3Fdirid%3D66a7735a36fced0b0bdb3139&quot; target=&quot;_blank&quot;&gt;https://uosdn.uniontech.com/#document2?dirid=66a7735a36fced0b0bdb3139&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307741/uniontech-youqu</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307741/uniontech-youqu</guid>
            <pubDate>Mon, 19 Aug 2024 03:34:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>IDEA 研究院编程语言 MoonBit 发布 beta 预览版，快速实现多领域应用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;MoonBit beta 预览版比大部分主流语言更早推出现代化泛型、精准错误处理和高效迭代器等重要特性，在云计算、边缘计算、人工智能和教育等领域快速实现落地应用。Beta 预览版标志着 MoonBit 生态进入全新阶段，为用户提供更稳定、流畅的创新操作体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 自去年发布 alpha 版后，反响热烈。经过一年的高速迭代，MoonBit 到达了 beta 预览版的里程碑：在核心语言特性上，MoonBit 媲美、甚至超越了大部分主流语言的 1.0 版本；语言特性的开发稳定，开发者可以更广泛地参与到生态建设中来。这里列举几个 MoonBit 的核心特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;现代化的泛型系统&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;现代语言复杂性的很大一部分在于类型系统的设计，很多主流工业语言，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;比如 Java，Go 在 1.0 版本推出很多年以后才会渐渐完善泛型的支持&lt;/strong&gt;&lt;/span&gt;，但是这会对生态造成撕裂。MoonBit 在 beta 预览版本已经完成了泛型和 ad-hoc polymoprhism，而且 MoonBit 在保持极快的编译速度的同时，提供了零开销的泛型支持。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;准确的错误处理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;错误处理是现代语言设计中的重要组成部分，大部分编程语言在静态分析中，彻底放弃错误处理的支持，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;这意味着任何函数都可以抛出异常，很难写出高可靠性的代码。&lt;/strong&gt;&lt;/span&gt;MoonBit 通过准确的控制流分析，可以完全在编译时期跟踪函数的错误。这一过程几乎完全由编译器自行推导，且不像 Java checked exception 那样过于繁琐，降低用户的心智负担。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;高效的迭代器&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;传统的编程语言的迭代器会产生频繁的装箱操作，导致其性能比普通的循环要糟糕很多。MoonBit 创新地使用了零开销的迭代器设计，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;可以让用户写出优雅代码的同时保持程序的性能。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;多应用场景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 是一个全场景覆盖的开发者平台，紧跟科技前沿和行业趋势，侧重于云计算、边缘计算、人工智能以及教学领域的发展，并在每个领域做到极致，确保在性能上领先其他语言至少一个数量级。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在云计算领域，MoonBit 近期已支持 Wasm 组件模型，并有海外用户实现了与 Spin 框架集成的 MoonBit SDK。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通过将应用程序拆分成独立的、可重用的组件，MoonBit 可以在云计算开发中更好地利用模块化开发、灵活的部署和更新、资源优化、防止单点故障提高安全性、易于扩展和集成等特性，实现云计算应用场景中的突出优势，提高系统的灵活性和安全性，简化扩展和集成过程，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;从而显著提高云计算开发效率并降低运营成本。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;435&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bf98ab690dba421fe8346209213d5a72b29.jpg&quot; width=&quot;934&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在边缘计算领域，目前已有 MoonBit PDK 插件，&lt;span style=&quot;color:#000000&quot;&gt;并被 Extism 收入官方 PDK 库。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;通过 PDK 的支持，MoonBit 能够在边缘计算应用中更高效地利用硬件资源，实现分布式计算和本地处理，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;提&lt;/strong&gt;&lt;strong&gt;升性能和响应速度，同时确保设备兼容性和数据安全性&lt;/strong&gt;，&lt;/span&gt;从而大大提升开发和部署效率，满足低延迟和高效能的需求。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;564&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-02d8e0e917b3011382b6706c9827aa4d7a8.jpg&quot; width=&quot;937&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在 MoonBit 的应用生态发展中，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;注重为学生群体以及编程语言初学者提供简单易学的入门环境&lt;/strong&gt;&lt;/span&gt;，并以游戏的形式打造轻松愉悦的学习体验。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 现已支持使用 WebAssembly 开发小型复古游戏的 WASM-4 框架。凭借 MoonBit 的高效工具链和简洁设计，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;入门级开发者可以在官方教程的指导下轻松创作属于自己的第一款游戏&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;同时，框架内置的多玩家支持功能能够让至多四名玩家共同体验游戏的乐趣。无论是创作过程还是开发体验，MoonBit 都能让初学者体验前所未有的简单与高效。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;不仅如此，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;由于 MoonBit 支持实时可视化开发，同时编译速度极快，&lt;/strong&gt;&lt;/span&gt;开发者还能够实时更改代码来灵活调整游戏参数。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 团队正在开发 MiniMoonBit 编译器教学项目。学生可以用 MoonBit 实现 MoonBit 语言的一个子集。由于 MoonBit 强大的表达力，相较传统的用 C/C++ 实现的编译器项目，学生可以更轻松地上手实现。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;同时，MiniMoonBit 项目采用了模块化的设计，多层 IR 都有对应的 JSON 文本表示，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;学生不再需要从头实现编译器的每个环节，而是可以选择感兴趣的模块来学习。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;快、小、安全、&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;最佳数据处理体验&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 于 2022 年启动开发计划，凭借团队在 ReScript、OCaml、Flow 等工业编程语言研发中的十多年经验，迅速在两年内完成了整套工具链的开发，致力于成为第一个走向国际的中国编程语言。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;2023 年 8 月 18 日，MoonBit 首次在海外发布后，迅速引起了国际技术社区的广泛关注，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;并登上了 HackerNews 的头条&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;。&lt;/span&gt;HackerNews 作为硅谷最具影响力的科技社区之一，对 MoonBit 的每一次重大特性更新都给予了高度关注。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;此外，MoonBit 还在全球 DevOps 领域权威媒体平台 The News Stack、日本顶尖科技社区 Zenn 等知科技媒体上频频出现，进一步巩固了其全球影响力。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;同时，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 在工业应用方面进展迅速&lt;/strong&gt;，&lt;/span&gt;包括多家海外创业公司的应用、在国内拥有数据库领域的商业合作伙伴等。这一过程中，MoonBit 一直致力于发挥其在语言速度、代码精简和数据处理等方面的卓越优势。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 致力于实现全栈性能的卓越表现，&lt;span style=&quot;color:#000000&quot;&gt;包括编译性能和运行时性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;通过专为多级中间表示（IR）定制的全局优化，不仅改善了内存布局，减少了缓存未命中率，还为数据和控制流分析提供了一个优越的环境，从而确保了编译和运行时的高性能。&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;从编译速度来看，MoonBit 编译 626 个包（package）只需 1.06 秒&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;比 Rust 快了近 9 倍，运行时间仅为 Go 的 35 分之一。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;534&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7c6b63d405a7f4bdf984f0ba7fb0075a5f4.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;strong&gt;小&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 在输出 Wasm 代码体积上相较于传统语言有显著优势&lt;/strong&gt;。&lt;/span&gt;MoonBit 通过 WebAssembly（Wasm）组件模型，在生成代码时实现了显著的体积优化。相比其他编程语言，MoonBit 编写的 Wasm 组件代码体积大幅减少。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;例如，在编译一个简单的「Hello World」 HTTP 服务器时，MoonBit 的输出文件大小仅为 27KB，而 WasmCloud 提供的 http-hello-world 模板中 Rust 的输出为 100KB，TypeScript 为 8.7MB，Python 更是高达 17MB。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;380&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-48c358622b0cbde6b0df723a7440c927520.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;借助前文提到的创新错误处理机制，MoonBit 有效解决了传统编译技术在错误处理机制转换中遇到的适用范围有限和内存开销大的问题。通过静态分析源程序中的错误处理代码，并根据目标编程语言的特性进行转换，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 扩大了适用语言范围，减少了内存开销，同时提升了代码的安全性和稳定性。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;健壮的类型系统是 MoonBit 保障其安全的重要设计之一。MoonBit 采用了强大的类型系统，并内置静态检测工具，在编译期检查类型错误，从而提高代码的正确性和可靠性。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;&lt;span&gt;MoonBit 的安全保障得益于其对 WebAssembly 的原生支持&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;，这一特性使得 MoonBit 能够深度挖掘 Wasm 在沙箱环境、内存隔离以及默认的无权限机制（deny-by-default）等方面的安全架构优势。通过这些先进的安全特性，&lt;span style=&quot;color:#000000&quot;&gt;释放其在云计算和边缘计算安全问题上的潜力。&lt;span style=&quot;color:#000000&quot;&gt;同时结合语言自身类型系统安全，删减无用代码（DCE）、编译为经过验证的 Wasm 指令等三层保障，确保代码可信与数据隐私安全。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 作为一门多范式编程语言，在保持语言简单性的同时，也侧重于提供数据处理的最佳体验。MoonBit 通过原生支持 JSON 处理、Iter 类型和模式匹配实现高效数据处理，在语法设计上兼具动态语言的灵活性和静态语言的安全高效，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;直观而简洁地进行对数据的解析和转换&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;603&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d1a73b776bd8b028cca5b0dde1ffee2c8ee.jpg&quot; width=&quot;863&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;JSON 处理&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 在数据处理上的语法设计旨在优化常见的数据处理场景，解决传统方法中由于生成多个中间数组而导致的性能问题。&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;在 Iter 性能对比中，MoonBit 的数据处理速度达到了 JavaScript 的 25 倍之多。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;132&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6ed7286674f6bca7819fb515186692f9848.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#3498db&quot;&gt;一站式解决方案&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;相较于传统的编程语言设计路线，MoonBit 从一开始就提供全套开发、调试、部署的一站式解决方案。MoonBit 不仅提供多后端支持、通用程序语言设计，还涵盖了编译器、构建系统、集成开发环境（IDE）、调试器，部署工具等。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;这个全面的设计使得 MoonBit 能够实现高度垂直整合，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;而且&lt;/strong&gt;&lt;strong&gt;可以同时在云端和边缘端执行，更好地与各种资源进行交互&lt;/strong&gt;，&lt;/span&gt;从而为用户提供极致的开发体验和性能。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;与其他云 IDE 不同，&lt;/span&gt;MoonBit 对 IDE 的支持不仅包含了现代 IDE 的所有功能，&lt;span style=&quot;color:#000000&quot;&gt;且 MoonBit 无需依赖容器。快速语义分析技术可处理大量的代码库，&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;并且在更大规模的代码库中也能在百毫秒级别完成 IDE 响应&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;现今大多数编程语言的 IDE 是为桌面操作系统设计的，未能很好地适应云原生环境和边缘端的需求。MoonBit 则通过采用高度并行化的架构和对分离编译的原生支持，使得云 IDE 可以直接在边缘端运行。&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;这在现今大多数语言的云 IDE 中是首次。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;除了传统 IDE 的功能以外，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit AI 助手现已内置于 MoonBit IDE&lt;/strong&gt;&lt;/span&gt;，并实现了自动化测试生成、文档生成，以及代码解释功能，为应用的开发、测试和文档编写提供了全方位的支持，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;使得开发者能够更加专注于业务逻辑的实现&lt;/strong&gt;&lt;/span&gt;，而不必担心底层的复杂性和维护工作。&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      MoonBit 在初始阶段已经提供其他语言通常在成熟阶段才拥有的调试工具。MoonBit 目前已提供 sourcemap 支持，支持源码映射、基于源码设置断点、输出 sourcemap 等，可以在浏览器中进行源码调试。
      &lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;这项功能的推出不仅减轻了开发者在代码调试方面的负担，还显著提升了开发和调试的流畅性。&lt;/strong&gt;&lt;/span&gt;
     &lt;/div&gt; 
     &lt;div&gt;
      &amp;nbsp;
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;对于 JavaScript 后端，用户仅需在 JavaScript Debug Terminal 上执行 moon run --target js --debug，即可立刻进入调试。MoonBit 的 sourcemap 和调试支持显著优化开发者的调试体验，确保 JavaScript 代码的生成尽可能贴近源码，变量名和字段名保持一致，便于使用浏览器的 DevTools 进行源码检查和调试。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 作为一门从 0 到 1 的编程语言，对于生态建设尤为重视，其中一个关键在于构建高效且功能丰富的包管理系统。我们搭建了一个中心化的 MoonBit 包管理平台 mooncakes.io，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;提升包的获取速度和编译效率，从而为开发者提供一个高效的工作环境。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;393&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e06f9551d39294ab7837bbbe075fe867ff4.png&quot; width=&quot;949&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;此外，我们注重文档的管理和维护。为了让第三方包更加易于开发者理解和使用，我们提供了文档生成工具 moondoc，并在 mooncakes.io 集成了每个包的文档，以帮助开发者编写和分发包的文档、帮助包的使用者创造高质量的应用。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d5687b779e646b8e3c4a4aa52eff121b143.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-aad8ed1afeb1f4ebb5c977b5a8f0f8b12ee.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;AI 时代下的编程语言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;这个世界是否还需要一门新的编程语言？答案是，是。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;编程语言的发展经历了 60 年代时，结构化编程的兴起。到 70 年代，则是面向对象编程与 C 语言。90 年代，是脚本语言与互联网 。而 00 年代，是语言的统一与多样性。到了 10 年代，是现代语言与大数据。编程语言在不断进步，同时也有大量的编程语言渐渐销声匿迹。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;大模型时代浩浩荡荡的浪潮卷席了万事万物。编程语言作为计算机核心组件、&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;且是软件开发者创造技术世界最重要的工具&lt;/strong&gt;&lt;/span&gt;，自然被顶上风口浪尖。整个技术行业都对编程语言提出了更高的要求。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在大模型时代，工具重塑了开发者的工作方式，&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;同时也降低了学习新语言的门槛。&lt;/strong&gt;&lt;/span&gt;开发者将更专注于创意和设计，代码的实现和优化则由编程工具完成。这一转变推动编程工具从简单的代码生成器进化为复杂问题解决平台。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit AI 云原生开发者平台——MoonBit 编程语言及工具链，就在这个机遇与挑战并存的时代应运而生。&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 的目标，是重塑软件开发生态。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;MoonBit 的未来路线&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit AI 云原生开发者平台是一个「道阻且长，行则将至」的系统工程。MoonBit 正在马不停蹄地扩大 MoonBit 的社区力量、培养社区人才。2 年的时间里 ，MoonBit 工具链已有几百名社区贡献者和近万人的全球的用户，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;增长速度遥遥领先。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;目前，MoonBit 已支持 Wasm 与 JS 后端。未来，MoonBit 计划支持 native 后端。这意味着无论是 UI、客户端、边缘计算还是系统编程，用户都能在 MoonBit 平台上找到适合自己的使用场景，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;从而使生态能够覆盖所有可能的应用场景。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;608&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-377ff22639054e8f2effaa82573ced91634.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307723/moonbit-beta</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307723/moonbit-beta</guid>
            <pubDate>Mon, 19 Aug 2024 02:37:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>GOGC 2024 | openKylin 首个园区站—浦东软件园站正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;8 月 15 日至 16 日，由&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;开源中国&lt;/span&gt;&lt;span&gt;&lt;span&gt;与上海浦东软件园联合举办的 2024 全球开源极客嘉年华 GOGCxGOTC 全球开源技术峰会于上海张江&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;科学会堂&lt;/span&gt;&lt;span&gt;举行。openKylin 作为中国领先的开源操作系统根社区，受邀参加此次大会高峰论坛，并携 openKylin 2.0 亮相活动展区，同来自世界各地的顶尖开发者、开源爱好者、企业家和技术领袖，共同探讨开源技术的最新进展及其对未来的影响。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2117&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5a08821e5b92ddd67d3802ccd02a933973c.jpg&quot; width=&quot;3175&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;高峰论坛：openKylin 全球首个园区站正式发布&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;大会高峰论坛环节，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社区生态合作负责人马发俊&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;带来&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;《openKylin 园区运营战略发布》&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;主题分享，向大家展示 openKylin 园区站运营发展新蓝图。同时，在所有嘉宾的共同见证下，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 全球首个园区站-浦东软件园站正式发布&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，由 openKylin 社区生态合作负责人马发俊、上海浦东软件园股份有限公司总经理助理/董事会秘书郑赟、广东赛昉科技有限公司，软件副总裁赵向伟、飞腾信息技术有限公司上海行业拓展总监王婷共同上台揭幕。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1998&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-853f9ee38a103e17c226230ff7b60cce4bd.jpg&quot; width=&quot;3000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 园区站运营策略，旨在推进开源生态体系建设，以开源之力赋能产业园区价值重塑。此次浦东软件园站的发布不仅是对 openKylin 社区生态发展战略的深入实践，更是对技术创新与产业合作深度融合的积极探索。未来，openKylin 将在更加广阔的舞台上，携手合作伙伴共绘生态发展新篇章。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;展区互动：openKylin 2.0 版本惊艳亮相&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;大会展区同样热闹非凡，openKylin 携最新操作系统 2.0 版本亮相大会展区，吸引了众多对开源技术满怀热情的开发者、社区成员，以及来自各开源项目应用场景的产业精英与跨界才俊驻足交流。通过现场演示与互动，展示开源技术的独特魅力，激发了创新活力，共同见证开源技术的蓬勃生机。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1066&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-872cf4641473a89d96604ce948cb96c7280.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dd96fd3cc9a2beeb3f196df5d3f945dfc77.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;为期两天的盛会，不仅是一场技术的盛宴，更是一次思想的深刻碰撞。openKylin 以开放、包容、创新的姿态，向世界展示了中国开源力量的崛起与担当。展望未来，openKylin 将继续携手全球合作伙伴，共同推动开源技术的普及与发展，为构建一个更加开放、协同、创新的数字世界贡献自己的力量，让开源精神的光芒照亮前行的道路。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307711</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307711</guid>
            <pubDate>Mon, 19 Aug 2024 01:40:32 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>RISC-V 初创公司 Akeana 获 1 亿美元融资</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana USA Inc. 是一家开发基于 RISC-V 处理器架构的芯片的初创公司，于 2021 年创立。该公司发布&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.akeana.com%2Fakeana-exits-stealth-mode-with-comprehensive-risc-v-processor-portfolio-challenging-the-semiconductor-industry-status-quo%2F&quot; target=&quot;_blank&quot;&gt;公告称&lt;/a&gt;，在 Kleiner Perkins、Mayfield 和 Fidelity 等 A 级投资者的支持下，已筹集到超过 1 亿美元的资金，将正式推出可针对任何工作负载或应用进行独特定制的 IP 解决方案产品线。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 由设计 Marvell ThunderX2 服务器芯片的同一团队组建，提供各种 IP 解决方案，包括微控制器、Android clusters、AI vector cores 和子系统，以及用于网络和数据中心的计算集群。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;279&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7015887b068390f02e1affae87d8561c3f7.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该公司发布了三条处理器产品线和 SoC IP，包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 100 系列： 一系列高度可配置的处理器，具有 32 位 RISC-V 内核，支持从嵌入式微控制器到边缘网关再到个人计算设备的应用程序。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 1000 系列： 包含 64 位 RISC-V 内核和 MMU 的处理器系列，可支持多种操作系统，同时保持低功耗和低芯片面积要求。这些处理器支持有序或无序流水线、多线程、矢量扩展、虚拟机管理程序扩展和其他扩展（属于最近和即将推出的 RISC-V 配置文件的一部分），以及可选的 AI 计算扩展。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 5000 系列： 一系列极致性能处理器，代表了行业性能领先地位，超越了老牌竞争对手和 RISC-V 生态系统。该系列采用 64 位 RISC-V 内核，针对下一代设备、笔记本电脑、数据中心和云基础设施中的苛刻应用进行了优化，从而实现了终极差异化。这些处理器与 Akeana 1000 系列兼容，但单线程性能要高得多。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Processor System IP： 创建&amp;nbsp;processor SoC 所需的 IP 块集合，包括一致性集群缓存、I/O MMU 和中断控制器 IP。此外，Akeana 还提供可扩展网格和一致性中心 IP（与 AMBA CHI 兼容），用于为数据中心和其他用例构建大型一致性计算子系统。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;AI 矩阵计算引擎： 旨在卸载矩阵乘法运算以实现 AI 加速。它的大小可配置，支持各种数据类型，可以像核心一样连接到连贯集群缓存块，以实现最佳数据共享。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 首席执行官 Rabin Sugumar 表示：「我们的团队在设计世界一流的服务器芯片方面拥有丰富的经验，现在，随着我们正式进入市场，我们正在将这些专业知识应用于更广泛的半导体市场。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307613/risc-v-akeana-100m-funding</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307613/risc-v-akeana-100m-funding</guid>
            <pubDate>Sun, 18 Aug 2024 03:17:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>开源下载工具 Aria 被诈骗份子使用，开发者无奈清空代码仓库</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;开源下载工具 Aria 开发者昨日删除了该项目在 GitHub 仓库中的全部源代码。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0817/124242_UnZM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Aria 开发者写道：「&lt;strong&gt;&lt;em&gt;因 Aria 被诈骗分子使用，导致我被跨省，因此本项目源码永久删除。&lt;/em&gt;&lt;/strong&gt;」&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0817/123724_l2gM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;via&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAriaLyy%2FAria%2Fcommit%2F16e1fddca5996c1b2aba8b3284a0389f372ccf0b&quot; target=&quot;_blank&quot;&gt;https://github.com/AriaLyy/Aria&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Aria 是一个高性能、轻量级、易于使用的文件下载框架，主要应用于 Android 平台，目前在 GitHub 上有超过 5600 个 Star。&lt;/p&gt; 
&lt;p&gt;Aria 提供了丰富的 API，让用户可以方便地管理下载任务，包括添加、暂停、取消以及查询等操作，支持断点续传、限速下载、多线程下载等功能，旨在提升用户的下载体验。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307530</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307530</guid>
            <pubDate>Sat, 17 Aug 2024 04:45:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Rust 团队公布 2024 年发展目标</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Rust 团队公布了 2024 年下半年的 26 个项目目标。其中 3 个被指定为 flagship 目标，代表预计将产生最广泛整体影响的目标。包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FRust-2024-Edition.html&quot; target=&quot;_blank&quot;&gt;发布 Rust 2024 版本&lt;/a&gt;。2024 版计划进行的修改包括：通过调整捕获行为，支持&lt;code&gt;-&amp;gt; impl Trait&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;async fn&lt;/code&gt;；通过保留&lt;code&gt;gen&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;keyword&lt;/span&gt;，允许在未来添加（async）生成器，以及更改&lt;code&gt;!&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;类&lt;/span&gt;型的回退。计划在今年晚些时候完成 Rust 2024 版本功能的开发。并于 2025 年 1 月 3 日发布测试版 Rust v1.85，2 月 20 日发布稳定版 Rust v1.85。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;164&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f0540caebdcee20a9556eabbdb6fbb6db00.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fasync.html&quot; target=&quot;_blank&quot;&gt;使 Async Rust 体验更接近 sync Rust&lt;/a&gt;。&lt;span style=&quot;color:#0c0c0c&quot;&gt;计划提供几个异步构建块功能，其中最值得注意的是对 async closures 和&lt;/span&gt;&lt;code&gt;Send&lt;/code&gt;&amp;nbsp;bounds&amp;nbsp;&lt;span style=&quot;color:#0c0c0c&quot;&gt;的支持。这是将&amp;nbsp;async Rust 的体验提升到与&amp;nbsp;sync Rust 相同质量水平的计划的一部分。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Frfl_stable.html&quot; target=&quot;_blank&quot;&gt;解决在稳定的 Rust 上构建 Linux 的一些障碍&lt;/a&gt;。Linux 内核对 Rust 开发的实验性支持被认为是&amp;nbsp;Rust&amp;nbsp;的一个分水岭，表明 Rust 确实有能力开发各种低级系统应用。但目前相关支持工作还停留在实验性阶段，项目团队计划在 2024H2 中努力扫清障碍。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;其余 23 个目标分别是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fmin_generic_const_arguments.html&quot; target=&quot;_blank&quot;&gt;扩展 const 泛型的「可稳定」原型&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fyank-crates-with-a-reason.html&quot; target=&quot;_blank&quot;&gt;管理员提供的 yanked crates 的原因&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FProject-goal-slate.html&quot; target=&quot;_blank&quot;&gt;制定项目目标清单&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FATPIT.html&quot; target=&quot;_blank&quot;&gt;关联类型位置 impl trait&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fcargo-semver-checks.html&quot; target=&quot;_blank&quot;&gt;开始解决 merging into cargo 中的&lt;code&gt;cargo-semver-checks&lt;/code&gt;blockers 问题&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fconst-traits.html&quot; target=&quot;_blank&quot;&gt;Const traits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fergonomic-rc.html&quot; target=&quot;_blank&quot;&gt;Ergonomic ref-counting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fsandboxed-build-script.html&quot; target=&quot;_blank&quot;&gt;探索沙盒构建脚本&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FRust-for-SciComp.html&quot; target=&quot;_blank&quot;&gt;公开实验性的 LLVM 功能以实现 automatic differentiation 和 GPU offloading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fpubgrub-in-cargo.html&quot; target=&quot;_blank&quot;&gt;扩展 pubgrub 以匹配 Cargo 的依赖解析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fmerged-doctests.html&quot; target=&quot;_blank&quot;&gt;实施「merged doctests」以节省文档测试时间&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Frustdoc-search.html&quot; target=&quot;_blank&quot;&gt;让 Rustdoc Search 更易于学习&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fnext-solver.html&quot; target=&quot;_blank&quot;&gt;下一代 trait solver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Foptimize-clippy.html&quot; target=&quot;_blank&quot;&gt;优化 Clippy 和 linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FPatterns-of-empty-types.html&quot; target=&quot;_blank&quot;&gt;空类型的模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FPolonius.html&quot; target=&quot;_blank&quot;&gt;nightly 可扩展的 Polonius 支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fcargo-script.html&quot; target=&quot;_blank&quot;&gt;稳定&lt;code&gt;cargo-script&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fdoc_cfg.html&quot; target=&quot;_blank&quot;&gt;稳定&lt;code&gt;doc_cfg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fparallel-front-end.html&quot; target=&quot;_blank&quot;&gt;稳定 parallel front end&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fstd-verification.html&quot; target=&quot;_blank&quot;&gt;调查工具对标准安全性验证的适用性&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fa-mir-formality.html&quot; target=&quot;_blank&quot;&gt;Testing infra + contributors for a-mir-formality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fannotate-snippets.html&quot; target=&quot;_blank&quot;&gt;为 rustc diagnostic output&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fannotate-snippets.html&quot; target=&quot;_blank&quot;&gt;使用 annotate-snippet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fuser-wide-cache.html&quot; target=&quot;_blank&quot;&gt;User-wide 的构建缓存&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;公告称，这些目标旨在&lt;span style=&quot;color:#000000&quot;&gt;进一步实现 Rust 的使命，&lt;/span&gt;即&lt;strong style=&quot;color:#000000&quot;&gt;让每个人都能构建可靠、高效的软件&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;更多详情可查看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://rust-lang.github.io/rust-project-goals/2024h2/index.html&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307523/rust-project-goals-2024h2</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307523/rust-project-goals-2024h2</guid>
            <pubDate>Sat, 17 Aug 2024 03:30:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>