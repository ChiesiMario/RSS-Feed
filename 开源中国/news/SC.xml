<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 30 Apr 2025 02:38:34 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>中科院软件所开源流式机器学习新框架 FreewayML</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;近日，中国科学院软件研究所软件工程技术研究开发中心分布式计算与系统工程研究团队&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FWdJhOtK903SaQu0te1ZpDQ&quot; target=&quot;_blank&quot;&gt;提出&lt;/a&gt;了一种新的流式机器学习框架 FreewayML，为复杂场景数据流的高效分析提供了创新解决方案。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;现有典型流式学习框架如 Flink ML、River、Alink、StreamDM 等存在稳定性和通用性不足两个难题。在稳定性方面，现有框架一般采用简单直接的模型更新方法，没有充分考虑数据动态变化对训练和预测的影响，导致实时正确率波动较大。在通用性方面，这些框架大多只能支持少量传统机器学习算法，如流式 Logistic Regression、流式 K-Means 聚类等，难以支持流式深度学习等复杂数据分析算法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;针对上述问题，研究团队提出了一种新的流式机器学习框架 FreewayML。团队首先通过实证研究深入分析数据动态变化（非独立同分布）对流式学习稳定性的影响，定义了三种典型的数据偏移模式——轻微偏移、严重偏移和重现型偏移，并相应提出三重自适应调节机制，即多时间粒度模型组合机制、协同经验聚类机制和历史知识重用机制，通过优化框架处理流程，实现模型准确率与稳定性的协同提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreewayML 还设计了数据训练流和预测流，可以同时支持传统机器学习算法和深度学习算法，突破了现有框架通用性上的局限。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;269&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-16f104508e372a912fb4310b0ae2797353c.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;FreewayML 框架能广泛适用于现有流式机器学习模型，相关成果已经在南方电网合作项目开展实际应用。在电力、交通、网络安全等典型流式数据集上的实验表明，相较现有框架，FreewayML 的平均准确率提升 3% 至 7%，实时准确率最高提升 45%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;203&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-55c2b7fc18c64841023eba7fbd7bf6ffa6c.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347484</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347484</guid>
            <pubDate>Wed, 30 Apr 2025 02:11:15 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>腾讯重构混元大模型研发体系，加大 AI 投入</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯对其混元大模型研发体系进行了全面重构，围绕算力、算法和数据三大核心板块，刷新团队部署，加码研发投入。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;278&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d4cf8514493b1f5cf7a929c33b8abb6c2e7.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;调整后，腾讯成立两个新的部门：大语言模型部和多模态模型部，分别负责探索大语言模型和多模态大模型的前沿技术，持续迭代基础模型，提升模型能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同时，进一步加强大模型数据能力和平台底座建设，其中数据平台部专注大模型数据全流程管理与建设，机器学习平台部则聚焦机器学习与大数据融合平台建设，为 AI 模型训练推理、大数据业务提供全面高效的 PaaS 平台底座，共同支撑腾讯混元大模型技术研发。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;腾讯相关人士表示，这意味着腾讯在快速调整组织架构以应对日新月异的大模型行业发展，这次调整有利于整合资源，优化研发流程，进一步提升腾讯在 AI 领域的长期技术作战能力。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347476</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347476</guid>
            <pubDate>Wed, 30 Apr 2025 02:03:15 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>GFast 开发 MCP 服务器之 mark3labs/mcp-go 库接入（一）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;这将是一个系列文章，我们将从简到繁开发一套基于 GFast 框架下 MCP 服务工具&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;github.com/mark3labs/mcp-go 介绍&lt;/h2&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;code&gt;github.com/mark3labs/mcp-go&lt;/code&gt;&lt;span&gt; &lt;/span&gt;是一个基于 Go 语言实现的&lt;span&gt; &lt;/span&gt;&lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;的开源项目，旨在为大语言模型&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;LLM&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;与外部系统的交互提供标准化协议支持。以下是综合搜索结果的关键信息&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;1.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;项目功能与定位&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;该项目实现了 MCP 协议的完整规范，提供&lt;span&gt; &lt;/span&gt;&lt;strong&gt;客户端和服务端能力&lt;/strong&gt;，用于 LLM 与数据资源、工具的集成。例如，支持通过标准化方式暴露资源、提示词和工具，便于 LLM 调用外部 API 或执行操作。&lt;/li&gt; 
 &lt;li&gt;目前支持&lt;span&gt; &lt;/span&gt;&lt;strong&gt;stdio&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;和&lt;span&gt; &lt;/span&gt;&lt;strong&gt;SSE&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Server-Sent Events&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;作为传输协议，未来可能扩展其他通信方式（如 WebSocket 或 gRPC&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;技术特点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Go 语言优势&lt;/strong&gt;：与 Python 或 TypeScript 实现的 MCP SDK 相比，Go 版本强调强类型检查、高并发性能和简易部署，适合生产环境的高可靠性需求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模块化设计&lt;/strong&gt;：分层架构（传输层、协议层、用户层）确保扩展性和维护性，开发者可自定义传输方式或协议扩展。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;与其他 MCP 实现的对比&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ThinkInAI 的 Go-MCP&lt;/strong&gt;（另一个 Go 实现）更注重生态建设（如 Marketplace 和工具链），而&lt;span&gt; &lt;/span&gt;&lt;code&gt;mark3labs/mcp-go&lt;/code&gt;&lt;span&gt; &lt;/span&gt;目前功能更聚焦于协议基础实现。&lt;/li&gt; 
 &lt;li&gt;Python/TypeScript SDK 动态语言的灵活性更高，但长期维护成本可能更高。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4.&lt;span&gt; &lt;/span&gt;&lt;strong&gt;安全与维护状态&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;根据 GitHub 页面，该项目&lt;span&gt; &lt;/span&gt;&lt;strong&gt;未设置安全策略文件&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;SECURITY.md&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;，且无公开的安全公告，需注意潜在风险。&lt;/li&gt; 
 &lt;li&gt;项目活跃度未明确提及，但代码示例和协议支持显示其具备实际可用性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;总结&lt;/h3&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;code&gt;mark3labs/mcp-go&lt;/code&gt;&lt;span&gt; &lt;/span&gt;是一个轻量级的 MCP 协议 Go 实现，适合需要高性能、强类型支持的 LLM 集成场景。若需更完整的生态工具（如服务发现、调试面板），可参考 ThinkInAI 的 Go-MCP 项目。建议进一步查阅其 GitHub 仓库的文档和示例以评估适用性。&lt;/p&gt; 
&lt;h2&gt;MCP Server 的业务能力&lt;/h2&gt; 
&lt;table cellspacing=&quot;0&quot; style=&quot;--fonts-override:var(--fonts-default-override-zh-cn); --fonts-regular:var(--fonts-override, var(--fonts-proportional)),&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Request Method&lt;/th&gt; 
   &lt;th&gt;发起方&lt;/th&gt; 
   &lt;th&gt;响应方&lt;/th&gt; 
   &lt;th&gt;描述&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;initialized&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;初始化会话&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;tools-list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的工具&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;tools/call&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;调用工具&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的资源&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/read&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;获取资源内容&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/templates&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的参数化资源&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;resources/subscribe&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;订阅特定资源，监听其变化事件&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;prompts/list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;发现可用的提示词&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;prompts/get&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;获取特定提示词&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;roots/list&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;列出服务器有权访问的客户端文件系统根节点（暴露目录和文件）&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;sampling/create&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Server&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;Client&lt;/td&gt; 
   &lt;td style=&quot;border-style:solid; border-width:1px&quot;&gt;启用服务器的 AI 生成能力（ sampling creation&lt;span&gt; &lt;/span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;一、简单的 MCP 服务器 demo 实现 (stdio 方式)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;import&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;context&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;errors&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;fmt&quot;&lt;/span&gt;

&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/mcp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/server&quot;&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建 MCP 服务器&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;Demo 🚀&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器名称&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;  &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器版本&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 添加工具&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Say hello to someone&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数是必需的&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Name of the person to greet&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 为工具添加处理器&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 启动标准输入输出服务器&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;);&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Printf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Server error: %v\\n&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 打印服务器错误&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 从请求参数中获取名字参数，并断言为字符串类型&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 如果断言失败，返回错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;errors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;New&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name must be a string&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回包含问候语的结果&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, %s!&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;这段代码实现了一个简单的&lt;span&gt; &lt;/span&gt;&lt;strong&gt;MCP&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Model Context Protocol&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;服务器&lt;/strong&gt;，它通过标准输入/输出&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;stdio&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;与客户端交互，提供了一个名为&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;&lt;span&gt; &lt;/span&gt;的工具，用于向指定的人打招呼。以下是详细解析：&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;1. 核心功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;工具注册&lt;/strong&gt;：服务器注册了一个工具&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;，接收一个字符串参数&lt;span&gt; &lt;/span&gt;&lt;code&gt;name&lt;/code&gt;，返回问候语。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;标准输入/输出通信&lt;/strong&gt;：通过&lt;span&gt; &lt;/span&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt; &lt;/span&gt;与客户端交互（适合命令行或管道调用）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：验证参数类型，返回明确的错误信息。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;2. 代码逐层解析&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;(1) 初始化 MCP 服务器&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
    &lt;span style=&quot;color:#106303&quot;&gt;&quot;Demo 🚀&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器名称（显示标识）&lt;/span&gt;
    &lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;  &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器版本&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;创建一个 MCP 服务器实例，指定名称和版本（用于元信息标识）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(2) 定义工具&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
    &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Say hello to someone&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具功能描述&lt;/span&gt;
    &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;                      &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数名&lt;/span&gt;
        &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt;                         &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数必填&lt;/span&gt;
        &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Name of the person to greet&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
    &lt;span&gt;),&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;工具名称&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;参数配置&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;name&lt;/code&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;字符串类型，必填字段，描述为「Name of the person to greet」。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;通过&lt;span&gt; &lt;/span&gt;&lt;code&gt;mcp.WithString&lt;/code&gt;&lt;span&gt; &lt;/span&gt;和链式方法声明参数约束。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(3) 注册工具处理器&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;将工具&lt;span&gt; &lt;/span&gt;&lt;code&gt;hello_world&lt;/code&gt;&lt;span&gt; &lt;/span&gt;绑定到处理函数&lt;span&gt; &lt;/span&gt;&lt;code&gt;helloHandler&lt;/code&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(4) 启动服务器&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;启动标准输入/输出模式，监听来自客户端的请求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(5) 工具处理函数&lt;span&gt; &lt;/span&gt;&lt;code&gt;helloHandler&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;helloHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 获取参数&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;errors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;New&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name must be a string&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 类型检查&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, %s!&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 返回结果&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;参数提取&lt;/strong&gt;：从&lt;span&gt; &lt;/span&gt;&lt;code&gt;request.Params.Arguments&lt;/code&gt;&lt;span&gt; &lt;/span&gt;中获取&lt;span&gt; &lt;/span&gt;&lt;code&gt;name&lt;/code&gt;&lt;span&gt; &lt;/span&gt;参数，并验证是否为字符串。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;错误处理&lt;/strong&gt;：若类型不符，返回错误。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;结果生成&lt;/strong&gt;：使用&lt;span&gt; &lt;/span&gt;&lt;code&gt;mcp.NewToolResultText&lt;/code&gt;&lt;span&gt; &lt;/span&gt;封装文本响应。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;3. 数据流示例&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;客户端请求&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;JSON 输入）&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span&gt;{&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;tool&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#22863a&quot;&gt;&quot;arguments&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span style=&quot;color:#22863a&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;Alice&quot;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;服务器响应&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span&gt;{&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;result&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#22863a&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, Alice!&quot;&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;错误场景（非字符串参数）&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span&gt;{&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;tool&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
  &lt;span style=&quot;color:#22863a&quot;&gt;&quot;params&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span style=&quot;color:#22863a&quot;&gt;&quot;arguments&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
      &lt;span style=&quot;color:#22863a&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#009999&quot;&gt;123&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
  &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;响应错误&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;name must be a string
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;4. 关键设计点&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;工具化架构&lt;/strong&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;每个功能（如问候）封装为独立工具，通过名称调用，支持灵活扩展。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;强类型校验&amp;lt;/strong&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;使用 Go 的类型断言确保参数合法性。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;标准化协议&amp;lt;/strong&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;输入/输出遵循 MCP 格式，兼容不同客户端（如 CLI、Web 前端）。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;轻量级通信&amp;lt;/strong&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;code&amp;gt;stdio&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;模式无需网络依赖，适合集成到脚本或管道。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;5. 如何运行？&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;编译服务器&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go build -v -o server &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;再启动 mcp inspetor&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;（通过标准输入）：&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx -y @modelcontextprotocol/inspector ./server &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-14%2F20250414234917.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;20250414234917&quot; src=&quot;https://oscimg.oschina.net/oscnet//1b8523b60cfc72ad9f182af4bb80f6fc.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;点击&amp;lt;code&amp;gt;connect&amp;lt;/code&amp;gt;:

&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;&amp;lt;a href=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-14/20250414235059.png&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img alt=&quot;20250414235059&quot; src=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-14/20250414235059.png&quot; /&amp;gt;&amp;lt;/a&amp;gt;

&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;连接后可以列出相关工具，此时显示&amp;lt;code&amp;gt;hello_world&amp;lt;/code&amp;gt;,可以进行&amp;lt;code&amp;gt;run tool&amp;lt;/code&amp;gt;测试
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;二、简单的 MCP 服务器 demo 实现 (同时支持 stdio 和 SSE 方式)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;import&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;context&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;encoding/json&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;flag&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;io&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;log&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;net/http&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;os&quot;&lt;/span&gt;

&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/mcp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/server&quot;&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// authKey 是用于在 context 中存储认证令牌的自定义键类型&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;authKey&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;struct&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// withAuthKey 将认证令牌添加到 context 中&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 原始 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// auth: 要存储的认证令牌&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 包含令牌的新 context&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;withAuthKey&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithValue&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;authKey&lt;/span&gt;&lt;span&gt;{},&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// authFromRequest 从 HTTP 请求头中提取认证令牌并存入 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 原始 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// r: HTTP 请求对象&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 包含认证令牌的新 context&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;authFromRequest&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;http&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;withAuthKey&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Header&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// authFromEnv 从环境变量中提取认证令牌并存入 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 原始 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 包含认证令牌的新 context&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;authFromEnv&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;withAuthKey&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;os&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Getenv&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;API_KEY&quot;&lt;/span&gt;&lt;span&gt;))&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// tokenFromContext 从 context 中提取认证令牌&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 包含令牌的 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 令牌字符串或错误 (如果令牌不存在或类型不符)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 注意: 此方法不关心令牌来源 (HTTP 头或环境变量)，统一通过 context 获取&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;tokenFromContext&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Value&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;authKey&lt;/span&gt;&lt;span&gt;{}).(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;missing auth&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;auth&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// response 定义 httpbin.org 返回的数据结构&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;response&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;struct&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;Args&lt;/span&gt;    &lt;span style=&quot;color:#d73a49&quot;&gt;map&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;interface&lt;/span&gt;&lt;span&gt;{}&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;`json:&quot;args&quot;`&lt;/span&gt;    &lt;span style=&quot;color:#6a737d&quot;&gt;// 请求参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;Headers&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;map&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;]&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;      &lt;span style=&quot;color:#106303&quot;&gt;`json:&quot;headers&quot;`&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 请求头&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// makeRequest 向 httpbin.org 发起带认证的 GET 请求&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: context 对象 (用于超时控制等)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// message: 要发送的消息 (会作为查询参数)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// token: 认证令牌 (会添加到请求头)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 响应数据或错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;makeRequest&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;response&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建 HTTP 请求&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;http&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewRequestWithContext&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;https://httpbin.org/anything&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;创建请求失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 设置认证头&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Header&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 添加查询参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;query&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;URL&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Query&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;query&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Add&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;URL&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;RawQuery&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;query&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Encode&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 发送请求&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;http&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;DefaultClient&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Do&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;req&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;请求失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;defer&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Body&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Close&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 读取响应体&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;body&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;io&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ReadAll&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Body&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;读取响应失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 解析 JSON 响应&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;response&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;json&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Unmarshal&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;body&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;);&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;解析 JSON 失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// handleMakeAuthenticatedRequestTool 认证请求工具的处理函数&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// ctx: 包含认证令牌的 context&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// request: MCP 工具调用请求&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 工具调用结果或错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;handleMakeAuthenticatedRequestTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 从请求参数中获取 message 参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;缺少 message 参数或参数类型错误&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 从 context 中提取认证令牌&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;tokenFromContext&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;获取认证令牌失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 发起带认证的请求&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;makeRequest&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;message&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;token&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Errorf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;执行请求失败: %w&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回格式化后的响应&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;%+v&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;resp&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// MCPServer 封装 MCP 服务器的结构体&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;type&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;struct&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// NewMCPServer 创建并配置 MCP 服务器实例&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 初始化好的 MCPServer 指针&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建基础服务器实例&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;example-server&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器名称&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;         &lt;span style=&quot;color:#6a737d&quot;&gt;// 服务器版本&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithResourceCapabilities&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 启用资源能力&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithPromptCapabilities&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;        &lt;span style=&quot;color:#6a737d&quot;&gt;// 启用提示词能力&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithToolCapabilities&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;true&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;          &lt;span style=&quot;color:#6a737d&quot;&gt;// 启用工具能力&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 注册认证请求工具&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;make_authenticated_request&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;执行带认证的 HTTP 请求&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;             &lt;span style=&quot;color:#6a737d&quot;&gt;// 字符串参数&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;要发送的消息内容&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;     &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt;                   &lt;span style=&quot;color:#6a737d&quot;&gt;// 必填参数&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;handleMakeAuthenticatedRequestTool&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;&lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;:&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// ServeSSE 启动 SSE 模式的服务&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// addr: 监听地址 (如&quot;localhost:8080&quot;)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: SSEServer 实例&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;ServeSSE&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;addr&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;SSEServer&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewSSEServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;,&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithBaseURL&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;http://%s&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;addr&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 基础 URL&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithSSEContextFunc&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;authFromRequest&lt;/span&gt;&lt;span&gt;),&lt;/span&gt;         &lt;span style=&quot;color:#6a737d&quot;&gt;// 使用请求头认证&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// ServeStdio 启动标准输入输出模式的服务&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回: 错误信息 (如果有)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;MCPServer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; 
&lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithStdioContextFunc&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;authFromEnv&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 使用环境变量认证&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 解析命令行参数&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;var&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;flag&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;StringVar&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;t&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;stdio&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;传输协议类型 (stdio 或 sse)&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;flag&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;StringVar&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;transport&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;stdio&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;传输协议类型 (stdio 或 sse)&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;flag&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Parse&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建服务器实例&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 根据参数启动对应模式&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;switch&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;stdio&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 标准输入输出模式&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeStdio&lt;/span&gt;&lt;span&gt;();&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Fatalf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;服务器错误: %v&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;case&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;sse&quot;&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// SSE 服务器模式&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeSSE&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;localhost:8080&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Printf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;SSE 服务启动，监听 :8080 端口&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Start&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;:8080&quot;&lt;/span&gt;&lt;span&gt;);&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;!=&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Fatalf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;服务器错误: %v&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;err&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;default&lt;/span&gt;&lt;span&gt;:&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;log&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Fatalf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;无效的传输协议: %s。必须是&#39;stdio&#39;或&#39;sse&#39;&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;transport&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#181c21; margin-left:0; margin-right:0; text-align:start&quot;&gt;这段代码实现了一个基于&lt;span&gt; &lt;/span&gt;&lt;strong&gt;MCP&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Model Context Protocol&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;的服务器，支持通过&lt;span&gt; &lt;/span&gt;&lt;strong&gt;SSE&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;Server-Sent Events&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;或&lt;span&gt; &lt;/span&gt;&lt;strong&gt;标准输入/输出&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;stdio&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt; &lt;/span&gt;两种方式与客户端交互。以下是代码的详细解析：&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;1. 核心功能&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;认证管理&lt;/strong&gt;：从 HTTP 请求头或环境变量中提取认证令牌（&lt;code&gt;Authorization&lt;/code&gt;），并通过上下文（&lt;code&gt;context.Context&lt;/code&gt;）传递。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;工具调用&lt;/strong&gt;：注册一个名为&lt;span&gt; &lt;/span&gt;&lt;code&gt;make_authenticated_request&lt;/code&gt;&lt;span&gt; &lt;/span&gt;的工具，用于向外部 API&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;code&gt;httpbin.org&lt;/code&gt;）发送带认证的请求。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多传输协议支持&lt;/strong&gt;：支持&lt;span&gt; &lt;/span&gt;&lt;code&gt;SSE&lt;/code&gt;&lt;span&gt; &lt;/span&gt;和&lt;span&gt; &lt;/span&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt; &lt;/span&gt;两种通信方式（通过命令行参数切换）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;2. 代码结构解析&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;(1) 认证管理&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;authKey&lt;/code&gt;&lt;span&gt; &lt;/span&gt;类型&lt;/strong&gt;：自定义的上下文键，用于存储认证令牌。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;withAuthKey&lt;/code&gt;&lt;/strong&gt;：将令牌注入上下文。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;authFromRequest&lt;/code&gt;&lt;/strong&gt;：从 HTTP 请求头提取&lt;span&gt; &lt;/span&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;span&gt; &lt;/span&gt;字段并存入上下文。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;authFromEnv&lt;/code&gt;&lt;/strong&gt;：从环境变量&lt;span&gt; &lt;/span&gt;&lt;code&gt;API_KEY&lt;/code&gt;&lt;span&gt; &lt;/span&gt;中读取令牌并存入上下文。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tokenFromContext&lt;/code&gt;&lt;/strong&gt;：从上下文中提取令牌，供工具函数使用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(2) 工具实现&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;makeRequest&lt;/code&gt;&lt;span&gt; &lt;/span&gt;函数&lt;/strong&gt;：向&lt;span&gt; &lt;/span&gt;&lt;code&gt;httpbin.org/anything&lt;/code&gt;&lt;span&gt; &lt;/span&gt;发送 GET 请求，附带认证令牌和查询参数&lt;span&gt; &lt;/span&gt;&lt;code&gt;message&lt;/code&gt;，返回响应数据。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;handleMakeAuthenticatedRequestTool&lt;/code&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;MCP 工具的核心逻辑： 
  &lt;ul&gt; 
   &lt;li&gt;从请求参数中提取&lt;span&gt; &lt;/span&gt;&lt;code&gt;message&lt;/code&gt;。&lt;/li&gt; 
   &lt;li&gt;从上下文中获取认证令牌。&lt;/li&gt; 
   &lt;li&gt;调用&lt;span&gt; &lt;/span&gt;&lt;code&gt;makeRequest&lt;/code&gt;&lt;span&gt; &lt;/span&gt;发送请求，返回格式化后的响应。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(3) MCP 服务器配置&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;NewMCPServer&lt;/code&gt;&lt;/strong&gt;：初始化 MCP 服务器： &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;设置服务器名称和版本。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;启用资源、提示词和工具能力。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;注册工具&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;make_authenticated_request&amp;lt;/code&amp;gt;，绑定处理函数&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;handleMakeAuthenticatedRequestTool&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;ServeSSE&amp;lt;/code&amp;gt;&amp;lt;/strong&amp;gt;：启动 SSE 服务器，绑定认证函数&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;authFromRequest&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;ServeStdio&amp;lt;/code&amp;gt;&amp;lt;/strong&amp;gt;：启动 stdio 模式，从环境变量获取认证令牌。&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;(4) 主函数&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;通过命令行参数&lt;span&gt; &lt;/span&gt;&lt;code&gt;-t&lt;/code&gt;&lt;span&gt; &lt;/span&gt;选择传输协议（&lt;code&gt;stdio&lt;/code&gt;&lt;span&gt; &lt;/span&gt;或&lt;span&gt; &lt;/span&gt;&lt;code&gt;sse&lt;/code&gt;）。 &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;stdio&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;模式&amp;lt;/strong&amp;gt;：直接通过标准输入/输出交互（适合 CLI 或管道调用）。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;&amp;lt;code&amp;gt;sse&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;模式&amp;lt;/strong&amp;gt;：启动 HTTP 服务（默认端口&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;8080&amp;lt;/code&amp;gt;），通过 SSE 协议通信。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;3. 关键逻辑流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;客户端发起请求&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;若为 SSE 模式，HTTP 请求头需包含&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;Authorization&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;若为 stdio 模式，需设置环境变量&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;API_KEY&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;认证令牌传递&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;服务器通过&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;authFromRequest&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;或&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;authFromEnv&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;提取令牌，存入上下文。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;工具调用&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;客户端发送 MCP 格式的请求，指定工具名&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;make_authenticated_request&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;和参数&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;message&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;服务器调用&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;handleMakeAuthenticatedRequestTool&amp;lt;/code&amp;gt;，从上下文中获取令牌并发送到&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;httpbin.org&amp;lt;/code&amp;gt;。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;&amp;lt;strong&amp;gt;返回结果&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;
&amp;lt;ul&amp;gt;
&amp;lt;li&amp;gt;工具将&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;code&amp;gt;httpbin.org&amp;lt;/code&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;的响应封装为 MCP 格式返回给客户端。&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;4. 示例用法&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;(1) SSE 模式&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;# 启动服务器&lt;/span&gt;
go run main.go -t sse

&lt;span style=&quot;color:#6a737d&quot;&gt;# 客户端请求示例（使用 curl&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
curl -N -H &lt;span style=&quot;color:#106303&quot;&gt;&quot;Accept: text/event-stream&quot;&lt;/span&gt; &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  -H &lt;span style=&quot;color:#106303&quot;&gt;&quot;Authorization: Bearer YOUR_TOKEN&quot;&lt;/span&gt; &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  -X POST &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  -d &lt;span style=&quot;color:#106303&quot;&gt;&#39;{&quot;tool&quot;:&quot;make_authenticated_request&quot;, &quot;params&quot;:{&quot;arguments&quot;:{&quot;message&quot;:&quot;hello&quot;}}}&#39;&lt;/span&gt; &lt;span style=&quot;color:#994400&quot;&gt;\\
&lt;/span&gt;  http://localhost:8080/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;(2) Stdio 模式&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;# 设置环境变量并启动&lt;/span&gt;
&lt;span style=&quot;color:#005cc5&quot;&gt;export&lt;/span&gt; &lt;span style=&quot;color:teal&quot;&gt;API_KEY&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;YOUR_TOKEN&quot;&lt;/span&gt;
go run main.go -t stdio

&lt;span style=&quot;color:#6a737d&quot;&gt;# 通过标准输入发送请求（示例 JSON&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#005cc5&quot;&gt;echo&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&#39;{&quot;tool&quot;:&quot;make_authenticated_request&quot;, &quot;params&quot;:{&quot;arguments&quot;:{&quot;message&quot;:&quot;hello&quot;}}}&#39;&lt;/span&gt; &lt;span&gt;|&lt;/span&gt; go run main.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;5. 如何运行？&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;启动 SSE 服务器&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go run sse.go -t sse &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;再启动 mcp inspetor&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx -y @modelcontextprotocol/inspector &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;&amp;lt;a href=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-15/20250415000301.png&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img alt=&quot;20250415000301&quot; src=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-15/20250415000301.png&quot; /&amp;gt;&amp;lt;/a&amp;gt;

&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;连接后可以列出相关工具，此时显示&amp;lt;code&amp;gt;make_authenticated_request&amp;lt;/code&amp;gt;,可以进行&amp;lt;code&amp;gt;run tool&amp;lt;/code&amp;gt;测试
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;h2&gt;三、GFast 集成&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在实际开发中，很多公司内部的业务有自己的框架，集成了许许多多的独特功能。总不能为了使用 MCP 重写一套 Web 框架，此时就需要使用到 mark3labs/mcp-go 集成到 Web 框架下。因 GFast 使用的是 GoFrame 框架，下面以 GoFrame 框架为例：&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class=&quot;language-go&quot;&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;package&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;main&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;import&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;context&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;errors&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;fmt&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/gogf/gf/v2/frame/g&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/gogf/gf/v2/net/ghttp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/mcp&quot;&lt;/span&gt;
&lt;span style=&quot;color:#106303&quot;&gt;&quot;github.com/mark3labs/mcp-go/server&quot;&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;helloHandler2&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ctx&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;context&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Context&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolRequest&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;CallToolResult&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#445588&quot;&gt;error&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 从请求参数中获取名字参数，并断言为字符串类型&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;request&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Params&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Arguments&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;].(&lt;/span&gt;&lt;span style=&quot;color:#445588&quot;&gt;string&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;if&lt;/span&gt; &lt;span&gt;!&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ok&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 如果断言失败，返回错误&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;errors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;New&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name must be a string&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 返回包含问候语的结果&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewToolResultText&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;fmt&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Sprintf&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Hello, %s!&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;name&lt;/span&gt;&lt;span&gt;)),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;nil&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt; &lt;span style=&quot;color:#005cc5&quot;&gt;main&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建一个新的 MCPServer 实例（假设这是 SSEServer 所需的）&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewMCPServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;gf-mcp-server&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#106303&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 根据你的实际代码调整&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// mcpServer 新加 Tool、Resource、Prompt&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 添加工具&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithDescription&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Say hello to someone&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 工具描述&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;WithString&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数名称&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Required&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数是必需的&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Description&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#106303&quot;&gt;&quot;Name of the person to greet&quot;&lt;/span&gt;&lt;span&gt;),&lt;/span&gt; &lt;span style=&quot;color:#6a737d&quot;&gt;// 参数描述&lt;/span&gt;
&lt;span&gt;),&lt;/span&gt;
&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;// 为工具添加处理器&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;AddTool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;tool&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;helloHandler2&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 创建一个新的 SSEServer 实例，并传入 MCPServer&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;server&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;NewSSEServer&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;mcpServer&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;

&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;:=&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;g&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Server&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 将 SSEServer 的 SSE 端点和处理函数集成到 GoFrame 路由中&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;BindHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;CompleteSsePath&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ghttp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Response&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Writer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;})&lt;/span&gt;

&lt;span style=&quot;color:#6a737d&quot;&gt;// 将 SSEServer 的消息端点和处理函数集成到 GoFrame 路由中&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;BindHandler&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;CompleteMessagePath&lt;/span&gt;&lt;span&gt;(),&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;func&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;*&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;ghttp&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;sseServer&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Response&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Writer&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; &lt;span style=&quot;color:#24292e&quot;&gt;r&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#24292e&quot;&gt;Request&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;})&lt;/span&gt;

&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;SetPort&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span style=&quot;color:#009999&quot;&gt;8000&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
&lt;span style=&quot;color:#24292e&quot;&gt;s&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span style=&quot;color:#005cc5&quot;&gt;Run&lt;/span&gt;&lt;span&gt;()&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt; 
&lt;hr&gt; 
&lt;h3&gt;&lt;strong&gt;运行&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;启动 SSE 服务器&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ go run main.go &lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;此时 MCPServer 请求响应将被 GoFrame 接管，并绑定如下路由&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;a href=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-16/20250416104437.png&quot; target=&quot;_blank&quot;&amp;gt;&amp;lt;img alt=&quot;20250416104437&quot; src=&quot;https://yxh-1301841944.cos.ap-chongqing.myqcloud.com/markdown/2025-04-16/20250416104437.png&quot; /&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;
&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;&amp;lt;strong&amp;gt;再启动 mcp inspetor&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;：&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;

&amp;lt;pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code class=&quot;language-bash&quot;&gt;$ npx -y @modelcontextprotocol/inspector &lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;运行结果&lt;/strong&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyxh-1301841944.cos.ap-chongqing.myqcloud.com%2Fmarkdown%2F2025-04-16%2F20250416104240.png&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;20250416104240&quot; src=&quot;https://oscimg.oschina.net/oscnet//3940ea2feac26ad7773006e63d4932ec.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;p style=&quot;margin-left:0; margin-right:0&quot;&amp;gt;连接后可以列出相关工具，此时显示&amp;lt;code&amp;gt;hello_world&amp;lt;/code&amp;gt;工具,可以进行&amp;lt;code&amp;gt;run tool&amp;lt;/code&amp;gt;测试
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347466</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347466</guid>
            <pubDate>Mon, 28 Apr 2025 01:28:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Linus 痛恨大小写不敏感的文件系统</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Linus 近日在内核邮件列表（LKML）上发表&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwjajMJyoTv2KZdpVRoPn0LFZ94Loci37WLVXmMxDbLOjg%40mail.gmail.com%2F&quot; target=&quot;_blank&quot;&gt;长文&lt;/a&gt;&lt;/u&gt;，「怒斥」&lt;strong&gt;文件系统中的大小写不敏感（case-insensitive）功能。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;他明确表示，&lt;strong&gt;这种设计是个「巨大的错误」&lt;/strong&gt;，文件系统开发者从未吸取教训。问题的核心不在于测试不足，而在于一开始就不该实现这种功能。&lt;/p&gt; 
&lt;p&gt;Linus 表示，大小写不敏感功能会带来严重的安全风险。他举例说明，许多用户空间程序会检查文件名是否符合安全敏感模式，但文件系统可能无视不可打印字符，导致原本不应匹配的文件名被错误匹配。这种「忽略其他因素」的做法，让安全检查形同虚设。&lt;/p&gt; 
&lt;p&gt;他举了一个例子：&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;❤&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;和 ❤️&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;表面上看非常相似，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;但实际上是不同的编码。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;如果大小写折叠逻辑一刀切地忽略这类细节，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;那么这两个文件名就会被错误地认为是「相同的」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;——&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;这不仅仅是名字混淆，更会让原本基于字符串检查机制（如验证路径是否安全）的用户空间程序失效，引发安全漏洞。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;482&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/195826_9tDN_2720166.png&quot; width=&quot;1212&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwjajMJyoTv2KZdpVRoPn0LFZ94Loci37WLVXmMxDbLOjg%40mail.gmail.com%2F&quot; target=&quot;_blank&quot;&gt;https://lore.kernel.org/lkml/CAHk-=wjajMJyoTv2KZdpVRoPn0LFZ94Loci37WLVXmMxDbLOjg@mail.gmail.com/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Linus 还顺势讽刺了那些怀念老式 FAT 文件系统的人（FAT 文件系统是早期 PC 时代常见的文件系统，但在现代计算环境中，这种设计早已被证明存在大量问题，尤其在安全性和一致性方面表现糟糕）：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;真是见鬼了。大小写不敏感，本质上就是个 BUG，文件系统开发者们居然到今天还把它当作一个‘特性’，我完全无法理解&lt;/strong&gt;。这种行为简直像是，他们对古老的 FAT 文件系统怀有一种变态的崇拜，非得一遍又一遍地把这种糟糕设计复制出来——而且每次都做得更烂。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;总的来说，在 Linus 看来，所谓「正确实现大小写不敏感」，本质上就是无解的。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347415/linus-torvalds-anti-case-fold</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347415/linus-torvalds-anti-case-fold</guid>
            <pubDate>Sun, 27 Apr 2025 12:04:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>马斯克预告下周发布 Grok 3.5 早期测试版，基于第一性原理进行推理</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:start&quot;&gt;Qwen 3 发布才一天，Grok 3.5 就要来了。马斯克宣布：&lt;strong&gt;下周即将发布 Grok 3.5 的早期&lt;strong&gt;&lt;strong&gt;测&lt;/strong&gt;&lt;/strong&gt;试版&lt;/strong&gt;——仅限 SuperGrok 订阅用户体验。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Grok 3.5 是首个能准确回答火箭引擎或电化学等复杂技术问题的 AI，它从第一性原理出发，甚至能给出互联网上不存在的答案。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-165fb0d36ecc72914c1fda95eedaa1b73c1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据了解，SuperGrok 是付费订阅的高阶服务，享受优先体验新功能的特权。&lt;/p&gt; 
&lt;p&gt;马斯克强调，这次 Grok 3.5 的突出之处在于它能推理出网络上根本不存在的新知识。用人话讲，就是马斯克让 Grok 学会了「原创」。这意味着你再也不是简单地问一个 AI 它在网上查到的答案，而是让它通过自身的理解和推理能力，帮你解答火箭发动机设计、电化学反应机制等极度专业的问题——这将直面宇宙的奥秘，探索世界上最基础和前沿的根本性问题。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347413</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347413</guid>
            <pubDate>Sun, 27 Apr 2025 11:44:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>2024 年 MaaS + AI 大模型解决方案市场规模翻倍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;国际数据公司 （IDC）最新发布的《中国模型即服务 (MaaS) 及 AI 大模型解决方案市场追踪，2024H2》&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FiU2lLbZmhmzI4gxf5SCpug&quot; target=&quot;_blank&quot;&gt;报告显示&lt;/a&gt;&lt;/u&gt;，2024 年中国 MaaS 市场呈现爆发式增长，全年规模达 7.1 亿元人民币，较 2023 年实现 215.7% 的同比激增，其中 2024 下半年市场规模达 4.6 亿元人民币。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;IDC 所定义的中国模型即服务（MaaS）及 AI 大模型解决方案市场由两个子市场构成，分别是模型即服务（MaaS）市场和 AI 大模型解决方案市场。&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;模型即服务（MaaS）&lt;/strong&gt;：提供以服务/云模式交付的全流程 AI 大模型生命周期工具链、大模型应用开发平台以及 AI 大模型服务。主要以 API 访问、模型中枢或会话接口来提供服务。不包含单独销售的云基础资源层（IaaS）和算力的收入。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;AI 大模型解决方案&lt;/strong&gt;：提供包括模型框架，大模型，大模型生命周期工具链，模型训练和调优的软件和服务，在企业自己或第三方的数据中心部署，支持企业客户构建和训练自己的企业或行业大模型以及行业应用。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;538&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/193331_ufEE_2720166.png&quot; width=&quot;677&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/193431_sTN0_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;展望 2024-2029 年，该市场将以 66.1% 的年均复合增长率高速扩容，预计 2029 年市场规模将达到 90 亿元人民币。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;545&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/193401_6JqC_2720166.png&quot; width=&quot;704&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/193446_Fs0Z_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;AI 大模型解决方案市场同样保持高位增长态势。2024 年全年市场规模达 34.9 亿元人民币，同比增长 126.4%，其中 2024 下半年市场规模达为 21.0 亿元人民币。&lt;/p&gt; 
&lt;p&gt;未来五年，该市场将以 54.5% 的年均复合增长率持续扩张，预计 2029 年整体规模达 306 亿元人民币。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347412</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347412</guid>
            <pubDate>Sun, 27 Apr 2025 11:35:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Kali Linux 紧急更换仓库签名密钥，用户需手动更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Kali Linux 官网于 4 月 28 日&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kali.org%2Fblog%2Fnew-kali-archive-signing-key%2F&quot; target=&quot;_blank&quot;&gt;发布公告称&lt;/a&gt;，由于官方意外丢失对仓库签名密钥的访问权限，apt update 功能将暂时失效。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5e06ca94835b9910c04f2b5bb669faccde7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;为确保安全，官方已冻结仓库并启用新密钥，用户需手动下载更新。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;用户可通过运行指定命令安装新密钥（使用 `wget` 或 `curl`），旧密钥仍有效但将被逐步替换。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;wget 命令：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo&amp;nbsp;wget&amp;nbsp;https://archive.kali.org/archive-keyring.gpg&amp;nbsp;-O&amp;nbsp;/usr/share/keyrings/kali-archive-keyring.gpg&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;curl 命令：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo&amp;nbsp;curl&amp;nbsp;https://archive.kali.org/archive-keyring.gpg&amp;nbsp;-o&amp;nbsp;/usr/share/keyrings/kali-archive-keyring.gpg&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Kali Linux 强调密钥未泄露，新密钥包将同时包含新旧签名密钥（ED444FF07D8D0BF6 和 ED65462EC8D5E4C5），以平滑过渡。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347410/new-kali-archive-signing-key</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347410/new-kali-archive-signing-key</guid>
            <pubDate>Sun, 27 Apr 2025 11:28:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>阿里云对 .COM 等域名注册、续费、转入价格进行调整，5 月 7 日生效</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;阿里云上周发布公告，宣布自 2025 年 5 月 7 日起，对 COM、NET、XYZ、TOP 等多个主流域名的注册、续费及转入价格进行调整。&lt;/p&gt; 
&lt;p&gt;以.COM 域名为例，注册价涨至 85 元，续费价达 95 元。部分域名如 XYZ 续费价格高达 98 元。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;影响时间&lt;/h3&gt; 
 &lt;p&gt;北京时间 2025-05-07 00:00:00&lt;/p&gt; 
 &lt;h3&gt;调价原因&lt;/h3&gt; 
 &lt;p&gt;因域名上游成本上调、汇率波动及域名合规治理成本增加，经慎重考虑，现决定于 2025 年 5 月 7 日零时，将域名调整为如下价格。&lt;/p&gt; 
 &lt;h3&gt;调价内容&lt;/h3&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6dca13884686ba6d96b6b53e15e5f7b969f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;相关域名的预释放抢注保证金也会进行调整，具体以页面显示为准。其余后缀也会视实际情况不定期调整价格，如无特殊情况，将不再另行公告通知，请以阿里云域名价格总览页、域名抢注预订页面等展示价格为准。&lt;/p&gt; 
 &lt;p&gt;温馨提示：阿里云域名不定期开展优惠口令、批量优惠包、注册优惠、周三转入日等优惠活动，优惠价格以实际活动规则或订单结算价格为准。&lt;/p&gt; 
 &lt;p&gt;阿里云域名致力于为用户提供优质超值的域名服务，后续我们也将继续根据域名成本的变化，及时合理地调整（下调 / 上涨）域名价格，并始终为您提供高品质的专业服务！您的满意是我们的动力，感谢您的理解与支持！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据了解，阿里云已于今年 4 月 1 日对部分小众域名价格进行了初步调整：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;影响时间&lt;/h3&gt; 
 &lt;p&gt;北京时间 2025-04-01 00:00:00&lt;/p&gt; 
 &lt;h3&gt;调价原因&lt;/h3&gt; 
 &lt;p&gt;因注册局成本上涨，经慎重考虑，现决定于 2025 年 4 月 1 日零时，进行如下域名价格调整。&lt;/p&gt; 
 &lt;h3&gt;调价内容&lt;/h3&gt; 
 &lt;p&gt;.beer 域名：新注价格 108 元 / 首年，续费 / 转入价格 108 元。&lt;/p&gt; 
 &lt;p&gt;.biz 域名：新注价格 52 元 / 首年，续费 / 转入价格 135 元。&lt;/p&gt; 
 &lt;p&gt;.club 域名：新注价格 14 元 / 首年，续费 / 转入价格 108 元。&lt;/p&gt; 
 &lt;p&gt;.fit 域名：新注价格 15 元 / 首年，续费 / 转入价格 108 元。&lt;/p&gt; 
 &lt;p&gt;.ink 域名：新注价格 15 元 / 首年，续费 / 转入价格 68 元。&lt;/p&gt; 
 &lt;p&gt;.vip 域名：新注价格 32 元 / 首年，续费 / 转入价格 39 元。&lt;/p&gt; 
 &lt;p&gt;.wiki 域名：新注价格 15 元 / 首年，续费 / 转入价格 92 元。&lt;/p&gt; 
 &lt;p&gt;.work 域名：新注价格 15 元 / 首年，续费 / 转入价格 39 元。&lt;/p&gt; 
 &lt;p&gt;.yoga 域名：新注价格 195 元 / 首年，续费 / 转入价格 195 元。&lt;/p&gt; 
 &lt;p&gt;.co 域名：新注价格 79 元 / 首年，续费 / 转入价格 199 元。&lt;/p&gt; 
 &lt;p&gt;.xin 域名：新注价格 88 元 / 首年（优惠后价格 18 元），续费 / 转入价格 88 元。&lt;/p&gt; 
 &lt;p&gt;阿里云域名致力于为用户提供优质超值的域名服务，后续我们也将继续根据域名成本的变化，及时合理地调整（下调 / 上涨）域名价格，始终为您提供高品质的专业服务！感谢您的理解与支持！&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347409</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347409</guid>
            <pubDate>Sun, 27 Apr 2025 11:24:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>中国已形成完整人工智能产业体系</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;今年以来，中国持续加强人工智能基础研究，同时突出应用导向，新技术正不断向具体应用场景纵深渗透。目前，中国已形成覆盖基础层、框架层、模型层、应用层的完整人工智能产业体系。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c2288d9d5879f83df834cc25fafca2b812d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;最新数据显示，截至 2025 年 4 月 9 日，我国人工智能专利申请量达 1576379 件，占全球申请量的 38.58%，位居全球首位。目前，我国已累计培育 400 余家人工智能领域国家级专精特新「小巨人」企业，占据了全球十分之一的人工智能产业规模，形成了完整的人工智能产业体系。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;今年，我国进一步设立了 600 亿元规模的国家人工智能基金，加快推进各地人工智能科技创新、产业发展和赋能应用。同时，完善人工智能监管体制机制，目前已累计制定了 40 余项行业关键标准和 10 余项国际标准，推动产业生态持续优化。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347407</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347407</guid>
            <pubDate>Sun, 27 Apr 2025 11:19:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>阶跃星辰图像编辑模型 Step1X-Edit 登上 Hugging Face 趋势热榜</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;阶跃星辰昨天发布并开源了全新的通用图像编辑模型 Step1X-Edit，上线次日就在海外开源社区平台 Hugging Face 登上 Spaces 趋势热榜，该榜单反映了模型实际应用价值的受欢迎程度。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-973cf289e69a594563f32a510c5d94e66b9.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Step1X-Edit 提供强大的改图能力，可以帮用户完成日常工作和生活中最高频的 11 类图像编辑任务：包括替换图片中的文字、为人物做美化修图、对画面进行风格迁移和材质变换等。据了解，目前这项功能已经可以在阶跃 AI App 和网页端免费使用。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-af0264c03e5be7f6f01ece9ee927956dfd5.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;据了解，在国内通用大模型公司中，阶跃星辰以多模态能力强著称，多模态模型在其自研的 Step 系列基座模型矩阵中占比超过 7 成，且多款模型曾在 LMSYS、OpenCompass 等国内外权威大模型评测榜单上位列中国大模型第一，并被 OPPO、茶百道等各行业头部厂商接入打造全新的消费场景产品体验。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347406</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347406</guid>
            <pubDate>Sun, 27 Apr 2025 11:14:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>携手创未来，「HarmonyOS 协同・创新」 技术沙龙在济南顺利举办</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4 月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;27 日&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;「HarmonyOS 协同·创新」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;软件行业专场&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在济南顺利举行。本次会议由开源中国&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主办，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;山东省软件行业协会&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;协办&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，吸引了来自全国各地的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;近&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;百名鸿蒙开发者、技术团队负责人及生态企业代表齐聚&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;济南&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，围绕 HarmonyOS 技术创新与产业实践展开深度研讨，为鸿蒙生态发展注入新动能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//0023bd6ba845a82144468ff633801cb7.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;会议伊始，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;华为云 HCDE 专家姚圣伟&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共建未来：HarmonyOS 生态全景与开发者新机遇&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;》&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为主题发表演讲，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;系统阐述了 HarmonyOS 的生态发展现状与技术前景：截至 2025 年 3 月，鸿蒙设备突破 10 亿台，以 17% 市占率成为中国第二大移动操作系统&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;吸引 720 万开发者，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;超 2 万款应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;覆盖 18 个行业，腾讯、阿里等头部企业已深度参与；其全栈自研的分布式架构通过「一次开发、多端部署」实现跨终端协同，并深度融合 AI 技术优化全场景体验&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;将持续推动&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;跨终端生态协同创新&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;助力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS NEXT 向更智慧、高效的全场景操作系统演进，持续引领万物互联时代。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6af8b6ef399a57005f9eb3d7c983ab57.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在智能终端加速向全域协同演进的时代背景下，HarmonyOS 通过分布式技术打破硬件边界的能力已成为行业焦点。在《鸿蒙分布式架构详解，跨端协同开发》演讲中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;姚圣伟通过拆解分布式架构核心技术，揭示了跨端协同开发的关键路径&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分布式架构依托自主研发的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分布式软总线技术，通过毫秒级设备连接、跨端数据强一致性和微内核安全隔离机制，实现多终端无缝协同；「一次开发，多端部署」理念借助 ArkTS 语言与 DevEco Studio 工具，解决屏幕适配与功能兼容问题，简化跨设备应用开发流程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如自适应布局、数据同步安全等；生态层面，华为联合 300+高校及行业伙伴构建智能家居、汽车等场景的跨端应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;将&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通过 AI Agent 和元服务深化设备协同能力，推动 HarmonyOS 在万物互联时代的技术普惠与生态繁荣。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//0924b9ce0ea7a7b23d48a852985fc9e0.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;刘张豪在《AI 赋能鸿蒙生产力》演讲中聚焦 AI 技术与 HarmonyOS 的深度融合&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;作为鸿蒙&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开发者与多届技术竞赛获奖者，他展示了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DevEco CodeGenie 工具如何通过智能问答、代码生成及元服务卡片生成大幅提升开发效率；系统层集成 Vision Kit 与跨设备朗读控件 Speech Kit 等原生 AI 能力，以「端侧稳定、接入简捷」优化用户交互体验；案例部分详解通用文字识别技术，实现从图片选择、OCR 识别到结果编辑的全流程应用；未来&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;HarmonyOS 将深化 AI 本地推理与隐私保护、推动分布式算力共享，并通过轻量化元服务、全球化布局及智能家居、工业物联网&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业垂直场景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;持续扩展生态，构建更开放、智能的全场景操作系统。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//1c805cfd61aaae8f2600d03e69acc54a.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;互联网医疗企业大前端负责人&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;黄沅在《HarmonyOS 开发避坑指南&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高频问题解析与实战优化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;》中针对常见开发痛点提出实战优化方案&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。他&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;指出，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;状态管理需优先使用类对象而非字面量对象，结合@Track 装饰器精准触发 UI 刷新，避免属性修改后界面无响应；Foreach 循环因 key 生成不当导致列表项刷新异常时，建议迁移至状态管理 V2，通过动态 key 计算强制重绘；自绘制编辑框需注意输入法配置，解决键盘弹起错误时采用延时弹起或主动隐藏策略；Hvigor 构建工具支持命令行打包与自定义 BuildProfile 类属性，实现动态配置修改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如全局变量注入、模块元数据适配&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;他最后还&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;强调&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通过规范对象使用、升级状态管理版本、优化输入法交互及构建流程定制，有效规避开发陷阱，提升鸿蒙应用性能与部署效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6dc127fee296d4537644ca60ec3c512f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;会议特别设立的「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;互动时刻&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;与会者围绕鸿蒙生态实践中的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;共性挑战展开深度探讨。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在长达 40 分钟的零距离交流中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;专家团队集中解答了分布式数据同步延迟、跨端安全认证机制等&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;十多&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;项技术难题。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;比如，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;针对跨设备性能差异影响协同流畅度的痛点，专家团队解析了动态资源调度方案，通过智能分配机制确保异构设备高效协作；对于小型开发团队资源有限的现状，现场推介了低代码工具链及开源社区支持计划&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在 AI 技术融合方面，专家分享了可快速集成的轻量化模型库，助力开发者提升智能化开发效率；针对多端屏幕适配这一高频问题，则重点讲解了自适应布局框架的标准化应用策略。此外，围绕网络请求优化、多线程管理及测试兼容性等关键技术环节，专家团结合行业案例给出了可落地的实践方法论。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:center&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//dc5f3927b844a19c2638a07cd3930af4.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此次「HarmonyOS 协同·创新」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;软件行业专场&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在济南成功举办，不仅为全国近百名开发者、技术团队及生态企业代表搭建了深度交流的平台，更通过一线技术分享与实战案例解析，为鸿蒙生态的落地实践提供了切实可行的思路&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;展现了 HarmonyOS 在跨端协同、开发效率与生态适配上的独特优势。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0.0001pt; margin-right:0px; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;展望&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未来，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;鸿蒙&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;生态的成长离不开每一位开发者的实践反馈与创新尝试——通过优化工具链、深化 AI 能力、拓展垂直场景，逐步实现从技术突破到产业普惠的跨越。期待更多开发者在鸿蒙生态中携手同行，以务实的技术探索与开放的协作精神，共同推动智能终端与行业数字化的深度融合，让创新真正扎根于需求，服务于未来。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3859945/blog/18268969</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18268969</guid>
            <pubDate>Sun, 27 Apr 2025 09:25:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>GPT-4o 出现「谄媚烦人」倾向，突变「赛博舔狗」，奥尔特曼称在一周内修复</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 首席执行官 Sam Altman 近日&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fsama%2Fstatus%2F1916625892123742290&quot; target=&quot;_blank&quot;&gt;发文&lt;/a&gt;&lt;/u&gt;，回应了有关用户近期反馈关于 GPT-4o 情感的问题。他表示，最新版 GPT-4o 在最近几次更新后出现了「过度谄媚」的交互倾向，并承诺将在一周内推出修复方案。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;856&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/145130_2663_2720166.png&quot; width=&quot;1284&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/news/346982/openai-updated-gpt-4o&quot;&gt;OpenAI 发行说明显示&lt;/a&gt;&lt;/u&gt;，GPT-4o 在 3 月 27 日迎来了全面更新，而且在 4 月 25 日发布了进一步的更新，重点改进其记忆存储时机的选择机制，并显著增强其在科学、技术、工程及数学（STEM）领域的问题解决能力。OpenAI 在此期间对 GPT-4o 的对话响应模式进行了细微调整，使其在交互中更加主动，并能更精准地引导对话达成有效结论。&lt;/p&gt; 
&lt;p&gt;也就是在此次更新后，GPT-4o 表现出了令人不悦的「谄媚」属性。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1460&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/145535_Oqjk_2720166.png&quot; width=&quot;1332&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;比如下面这个例子，网友声称自己想要打造一个永动机，结果得到了 GPT-4o 一本正经的无脑夸赞，物理学常识也被按在地上摩擦。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56bb98433f09aeb7e7c9f1f21df233954b4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;这与学术研究发现的 LLM「谄媚倾向」（Sycophancy）高度吻合 —— 模型为获得用户认可，可能违背事实或伦理准则。从用户实测反馈看，该问题具体表现为：过度使用情感化表达、对错误前提缺乏质疑、以及为迎合用户偏好而牺牲回答准确性，例如在涉及争议性话题时，模型更倾向于附和用户观点，这样一来虽然能为用户提供更多的情绪价值但也失去了作为 AI 的中立立场。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;推荐阅读：&lt;a href=&quot;https://www.oschina.net/news/334508/large-language-models-show-concerning&quot; target=&quot;news&quot;&gt;大语言模型显示出令人担忧的「奉承」用户倾向&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347339</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347339</guid>
            <pubDate>Sun, 27 Apr 2025 06:56:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Spring Cloud Data Flow 未来仅限商业版本</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;近日，Spring 官方宣布 &lt;strong&gt;Spring Cloud Data Flow&lt;/strong&gt;、&lt;strong&gt;Spring Cloud Deployer&lt;/strong&gt; 和 &lt;strong&gt;Spring Statemachine&lt;/strong&gt; 将不再作为开源项目进行维护。从此以后，这些工具的未来版本只会对 Tanzu Spring 商业客户开放。&lt;/p&gt; 
&lt;p&gt;目前最后的开源版本分别是：Spring Cloud Data Flow 2.11.x、Spring Cloud Deployer 2.9.x 和 Spring Statemachine 4.0.x。这一变化不会影响其他 Spring 开源项目或现有开源版本对用户的支持义务。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Spring Cloud Data Flow 的历史与未来&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Spring Cloud Data Flow 起源于八年前的 Spring XD，专注于批处理与流式工作负载的编排。多年来，凭借客户的高度认可，该项目取得了显著成效。为了实现持续发展，Spring 决定将其转为纯商业产品，以更好地满足企业用户的需求。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;为何做出这一决定？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;根据官方说明，大多数 Spring Cloud Data Flow 的使用场景都源自 Tanzu 企业客户，而开源社区的使用及贡献量极为有限。近两年，Spring Cloud Data Flow 的维护几乎完全由 Tanzu 的研发团队承担，这与其他活跃且拥有广泛社区贡献的 Spring 项目形成鲜明对比。Spring Statemachine 和 Spring Cloud Deployer 的使用模式也与之类似，主要通过与 Spring Cloud Data Flow 的集成得到驱动。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;更专注的未来&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Spring 表示，维持开源项目与商业产品的双重需求所需的巨大成本不再合理，因此此举将使团队能够集中资源，为用户提供更有价值的服务。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;现有用户的支持与展望&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;对 Tanzu 商业客户而言，Spring Cloud Data Flow 最新补丁版本 2.11.7 已上线，并在 Spring Enterprise 工件库中提供。同时，基于 2.11.7 的 Spring Cloud Data Flow Tile 1.14.5 和 Kubernetes 发行版 1.6.5 也已发布。预计今年秋季会推出基于 Spring Boot 3.5 的新产品版本。&lt;/p&gt; 
&lt;p&gt;尽管如此，Spring 开源生态仍然活跃，60 多个完全支持的开源项目、数十位提交者以及上百位社区贡献者共同推动了 Spring 的持续发展。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347318/spring-cloud-data-flow-commercial</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347318/spring-cloud-data-flow-commercial</guid>
            <pubDate>Sun, 27 Apr 2025 06:13:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>OpenAI 更新 ChatGPT 搜索功能，周搜索量达 10 亿次</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 今天对 ChatGPT 搜索进行了大&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FOpenAI%2Fstatus%2F1916947241086095434&quot; target=&quot;_blank&quot;&gt;更新&lt;/a&gt;，对网购搜索进行了大幅度优化。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/113444_5DgM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;现在，搜索的产品可以直接显示详情、价格以及用户评价，并且可以直接跳转到购买链接，例如，你想购买一个新的平板电脑，可以在 ChatGPT 完成所有参数比对，并跳转到亚马逊购买。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-732cc10c9a539fd31f67d4cf7db52314e46.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;具体更新如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;购物体验：ChatGPT 中购物变得更简单、更快捷，方便查找、比较和购买产品。 
  &lt;ul&gt; 
   &lt;li&gt;优化产品推荐结果，提升商品相关性和展示效果&lt;/li&gt; 
   &lt;li&gt;可视化呈现，包括产品介绍、实时价格和用户评价&lt;/li&gt; 
   &lt;li&gt;用户可点击购买链接直接达到购买页面&lt;/li&gt; 
   &lt;li&gt;官方强调，所有商品搜索结果保持独立客观，并非广告植入&lt;/li&gt; 
   &lt;li&gt;购物体验的更新今天开始向所有可使用 ChatGPT 的地区的 Plus、Pro、免费及未登录用户，预计几天内完成部署&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;引用功能更靠谱：一个回答可以引用多个来源；高亮显示，超清晰地告诉你引用了哪部分内容。&lt;/li&gt; 
 &lt;li&gt;搜索界面优化：热门搜索趋势；自动补全搜索建议。&lt;/li&gt; 
 &lt;li&gt;WhatsApp 一键搜索：给 + 1-800-242-8478 发消息，就能实时获取各种信息：如体育比分、热点新闻。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;同时，OpenAI 同时还表示，ChatGPT 搜索已经成为 OpenAI 最重要功能之一，仅过去一周使用量就超过 10 亿次，成为最受欢迎且增长最快的功能之一。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347296</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347296</guid>
            <pubDate>Sun, 27 Apr 2025 03:33:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>前月之暗面海外产品负责人推出 AI 编程平台「Yourware」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;据蓝鲸新闻此前报道，由前月之暗面海外产品 Noisee 创始人明超平发起的 AI Coding 项目「新言意码」已完成两轮融资，而在近日，明超平在 AI 产品方向的新动作悄悄推进中。&lt;/p&gt; 
&lt;p&gt;据博主「四木相对论」爆料，明超平团队近期悄悄上线新的 AI 产品，名为「Yourware」，定位 Vibe Coder‘s Instagram。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/102635_rdHV_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;据博主介绍，Yourware 功能主要有一键部署网页、展示 AI 编程用例，以及一个包含各种用户展示形成的社区。博主还表示，AI Coding 社区也正是此前传言明超平团队要做的业务。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1b9497e7ba7d26ff874a63e5cbeac994d3b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;2516&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0429/102624_QOIq_2720166.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;此前消息显示，「新言意码」上述的两轮融资，令其估值已达到 8000 万美元。此次融资吸引了包括五源资本、高榕资本、真格基金、高瓴创投和 IDG 资本等多家一线基金参与了投资。&lt;/p&gt; 
&lt;p&gt;值得一提的是，有投资人表示，因 2024 年基础模型能力取得巨大进展，因此国内外 AI Coding 项目再次火热，同时其预测，AI Coding 在 2025 年将成为一个投资热点。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347278</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347278</guid>
            <pubDate>Sun, 27 Apr 2025 02:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Dora-rs：下一代机器人开发框架</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#404040; margin-left:0; margin-right:0; text-align:start&quot;&gt;在&lt;strong&gt;AI&lt;/strong&gt;与机器人技术深度融合的今天，传统机器人框架的性能瓶颈和开发效率问题日益凸显。&lt;strong&gt;dora-rs（Dataflow Oriented Robotics Architecture）&lt;/strong&gt;应运而生，成为一款基于&lt;strong&gt;Rust&lt;/strong&gt;语言的高性能、现代化机器人框架。其核心目标是通过数据流驱动的设计范式，解决机器人开发中低效通信、跨语言集成困难等问题，并在性能上实现对&lt;strong&gt;ROS/ROS2&lt;/strong&gt;等传统框架的超越。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;一、技术架构：数据流驱动与模块化设计&lt;/h2&gt; 
&lt;h3&gt;1.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;数据流模型&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#404040; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;dora-rs&lt;/strong&gt;采用&lt;strong&gt;有向图数据流范式&lt;/strong&gt;，将机器人应用建模为节点（&lt;strong&gt;Node&lt;/strong&gt;）和边（&lt;strong&gt;Edge&lt;/strong&gt;）组成的网络。节点代表独立任务（如传感器处理、运动控制），边定义数据流向，支持动态组合与分布式部署。这种设计使得系统模块化程度高，开发者可通过 YAML 配置文件快速调整数据流逻辑，无需修改底层代码。&lt;/p&gt; 
&lt;h3&gt;2.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;核心组件&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;节点（Node）&lt;/strong&gt;：独立进程，通过共享内存或&lt;strong&gt;TCP&lt;/strong&gt;通信，支持&lt;strong&gt;Python&lt;/strong&gt;、&lt;strong&gt;Rust&lt;/strong&gt;、&lt;strong&gt;C/C++&lt;/strong&gt;等多种语言实现。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;算子（Operators）&lt;/strong&gt;：轻量级协作组件，由运行时调度，支持优先级任务和本地截止时间管理。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;协调器（Coordinator）&lt;/strong&gt;：负责解析数据流配置、部署节点，并监控运行状态，支持集群管理与自动扩缩容。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;通信机制&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;零拷贝传输&lt;/strong&gt;：基于自研共享内存服务器和&lt;strong&gt;Apache Arrow&lt;/strong&gt;内存格式，跨进程传递数据时避免拷贝开销，单机通信延迟低至 4.49ms（40MB 数据）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;跨平台支持&lt;/strong&gt;：本地通信采用共享内存，分布式场景通过&lt;strong&gt;Zenoh&lt;/strong&gt;中间件或 TCP 实现，兼容&lt;strong&gt;Windows、Linux、macOS&lt;/strong&gt;及&lt;strong&gt;ARM&lt;/strong&gt;架构。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;二、性能优势：突破传统框架瓶颈&lt;/h2&gt; 
&lt;h3&gt;1.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;速度对比&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;Python 接口&lt;/strong&gt;：传输 40MB 数据时，&lt;strong&gt;dora-rs&lt;/strong&gt;耗时 8.94ms，比&lt;strong&gt;ROS2 Python&lt;/strong&gt;快 17 倍。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;Rust/C++接口&lt;/strong&gt;：与&lt;strong&gt;ROS2 C++&lt;/strong&gt;性能相当（4.49ms），但通过零拷贝设计进一步降低资源占用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;技术优化&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;Apache Arrow 集成&lt;/strong&gt;：列式存储格式支持跨语言高效数据交换，无需序列化，尤其适合&lt;strong&gt;AI&lt;/strong&gt;模型与机器人系统的实时交互。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;热重载功能&lt;/strong&gt;：&lt;strong&gt;Python&lt;/strong&gt;代码修改后无需重启节点，保持状态不变，显著提升调试效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;三、应用场景：从实验室到工业落地&lt;/h2&gt; 
&lt;h3&gt;1.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;机器人控制与导航&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;支持运动规划、避障算法（如路径规划库）及传感器数据处理，适用于工业自动化与仓储机器人。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;自动驾驶与仿真&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;与&lt;strong&gt;Carla&lt;/strong&gt;仿真系统深度集成，提供基线算法开发环境。例如，&lt;strong&gt;dora-drives&lt;/strong&gt;套件为自动驾驶开发者提供从仿真到真实车辆的代码无缝迁移能力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;具身智能&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;结合大语言模型，实现自然语言指令到机器人动作的转化。典型案例包括基于大疆&lt;strong&gt;RoboMaster&lt;/strong&gt;的具身智能项目，通过&lt;strong&gt;dora-rs&lt;/strong&gt;框架将多模态模型与硬件控制高效结合。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;四、生态系统与社区支持&lt;/h2&gt; 
&lt;h3&gt;1.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;多语言兼容&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;Python 优先&lt;/strong&gt;：提供简洁&lt;strong&gt;API&lt;/strong&gt;，方便 AI 开发者快速原型开发，同时支持&lt;strong&gt;Rust&lt;/strong&gt;的高性能需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;跨语言互操作&lt;/strong&gt;：通过&lt;strong&gt;PyO3&lt;/strong&gt;等工具实现&lt;strong&gt;Rust-Python&lt;/strong&gt;无缝绑定，并利用&lt;strong&gt;Arrow&lt;/strong&gt;格式解决跨语言数据交换的性能损耗问题。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;工具链完善&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;CLI 工具&lt;/strong&gt;：支持一键安装（&lt;code&gt;pip install dora-cli&lt;/code&gt;或&lt;code&gt;cargo install dora-cli&lt;/code&gt;），内置示例数据流和调试工具。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;&lt;strong&gt;可视化与日志&lt;/strong&gt;：集成&lt;strong&gt;Rust&lt;/strong&gt;开发的&lt;strong&gt;rerun&lt;/strong&gt;实现实时可观测性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;社区驱动&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0px; margin-right:0px&quot;&gt;开源社区活跃，2024 年&lt;strong&gt;GOSIM Workshop&lt;/strong&gt;曾专题探讨其技术细节。项目已进入开放原子基金会，已经举办第一期具身智能机器人大赛，推动行业应用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;五、全国产化解决方案与中文社区的建设&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dora&lt;/strong&gt;技术与&lt;strong&gt;OpenHarmony&lt;/strong&gt;深入合作，&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;中文社区可依托&lt;strong&gt;OpenHarmony&lt;/strong&gt;的国产化生态，提供&lt;/span&gt;&lt;strong&gt;硬件兼容性适配指南&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;（如&lt;/span&gt;升腾&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;、传感器接口），降低开发者硬件接入门槛。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;针对中文开发者偏好，强化&lt;strong&gt;Dora API&lt;/strong&gt;的文档本地化，&lt;strong&gt;Python&lt;/strong&gt;可通过优化&lt;strong&gt;PyO3&lt;/strong&gt;与&lt;strong&gt;Rust-Python&lt;/strong&gt;互操作性。参考&lt;strong&gt;Hadoop&lt;/strong&gt;中文社区的经验，开发&lt;/span&gt;&lt;strong&gt;中文版 CLI 工具&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;，集成一键部署、调试插件等功能，简化开发流程。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#404040&quot;&gt;&lt;strong&gt;Dora 中文社区&lt;/strong&gt;提供中文版&lt;strong&gt;Dora SDK&lt;/strong&gt;&lt;/span&gt;、教学视频、开源项目及模板等。&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#404040&quot;&gt;联合高校和机器人企业，&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;举办开发者大赛，提供硬件支持与商业孵化机会。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;background-color:#ffffff; color:#404040&quot;&gt;开发适配儿童、学生教育的交互式应用，结合中文学习资源，吸引教育领域开发者。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;dora-rs&lt;/strong&gt;正持续优化其通信层设计，计划引入零拷贝&lt;strong&gt;GPU IPC&lt;/strong&gt;技术，并扩展对&lt;strong&gt;ROS2&lt;/strong&gt;桥接的稳定性支持。随着具身智能和边缘计算的发展，其低延迟、高并发的特性将更受青睐。对于开发者而言，掌握&lt;strong&gt;dora-rs&lt;/strong&gt;不仅是拥抱&lt;strong&gt;Rust&lt;/strong&gt;生态的契机，更是参与机器人技术革新的关键一步。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Dora-rs&lt;/strong&gt;官网：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdora-rs.ai&quot; target=&quot;_blank&quot;&gt;https://dora-rs.ai/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GitHub&lt;/strong&gt;：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdora-rs%2Fdora&quot; target=&quot;_blank&quot;&gt;https://github.com/dora-rs/dora&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dora 中文社区&lt;/strong&gt;官网：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoracc.com&quot; target=&quot;_blank&quot;&gt;https://doracc.com/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347272</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347272</guid>
            <pubDate>Sun, 27 Apr 2025 02:16:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>Qwen3 正式发布！模力方舟首发上线体验，升腾算力全面适配</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;2025 年 4 月 29 日，Qwen 家族新成员 Qwen3 正式发布，包含多种模型版本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 模型类型与参数&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MoE 模型&lt;/strong&gt;：有 Qwen3-235B-A22B（总参数 2350 亿，激活参数 220 亿）和 Qwen3-30B-A3B（总参数 300 亿，激活参数 30 亿）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;密集模型&lt;/strong&gt;：包括 Qwen3-32B、14B、8B、4B、1.7B、0.6B，均为 Apache 2.0 开源协议。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. 上下文长度：&lt;/strong&gt;密集模型中，0.6B、1.7B、4B 为 32K，8B 及以上为 128K；MoE 模型均为 128K。&lt;/p&gt; 
&lt;p&gt;模力方舟上的升腾算力已为您准备好首批&lt;code&gt;0.6B&lt;/code&gt;、&lt;code&gt;8B&lt;/code&gt;、&lt;code&gt;30B&lt;/code&gt;三款模型，其中 30B 为 Mixture-of-Experts（MoE）模型，覆盖从轻量部署到高性能推理的多元应用需求，助力开发者轻松拥抱新一代大模型能力。&lt;/p&gt; 
&lt;p&gt;在线体验：&lt;a href=&quot;https://ai.gitee.com/serverless-api?model=Qwen3-30B-A3B&quot;&gt;https://ai.gitee.com/serverless-api?model=Qwen3-30B-A3B&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;全面升级的 Qwen3 模型性能表现&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. 基准测试结果&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Qwen3-235B-A22B&lt;/strong&gt;：在 ArenaHard（95.6）、AIME&#39;24（85.7）、LiveCodeBench v5（70.7）等测试中，优于 DeepSeek-R1、o1、Grok-3 等模型，仅在 AIME&#39;25（81.5）略低于 Gemini-2.5-Pro（86.7）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qwen3-30B-A3B&lt;/strong&gt;：在 ArenaHard（91.0）、AIME&#39;24（80.4）等测试中，超越 QwQ-32B（激活参数为其 10 倍）。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Qwen3-4B&lt;/strong&gt;：性能可与 Qwen2.5-72B-Instruct 媲美，如在 ArenaHard 中为 76.6，Qwen2.5-72B-Instruct 为 81.2。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. 优势领域：&lt;/strong&gt;在编码（如 CodeForces Elo Rating）、数学（AIME 系列）、多语言（MultilF 8 Languages）任务中表现突出。&lt;/p&gt; 
&lt;h2&gt;Qwen3 关键特性&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. 混合思维模式&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;思考模式&lt;/strong&gt;：适合复杂问题，支持逐步推理，性能随计算预算（token 量）提升而线性增长。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;非思考模式&lt;/strong&gt;：响应快速，适用于简单任务，可通过参数 enable_thinking 或指令 /no_think / /think 动态切换。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. 多语言支持&lt;/strong&gt;：覆盖 119 种语言和方言，包括印欧语系、汉藏语系、阿拉伯语、日语、韩语等。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. 增强的代理能力&lt;/strong&gt;：优化了编码和工具调用能力，推荐搭配 Qwen-Agent 使用，支持 MCP 协议和自定义工具集成。&lt;/p&gt; 
&lt;h2&gt;Qwen3 训练与架构&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. 预训练数据&lt;/strong&gt;：使用 36 万亿 token，是 Qwen2.5 的 2 倍，涵盖网页、PDF 文档（通过 Qwen2.5-VL 提取文本），并通过 Qwen2.5-Math/Code 生成数学和代码合成数据。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 训练阶段&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;S1：基于 30 万亿 token、4K 上下文，构建基础语言能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;S2：增加 STEM、编码等知识密集型数据，新增 5 万亿 token 训练。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;S3：使用长上下文数据，将上下文扩展至 32K（最终支持 128K）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3. 架构优化&lt;/strong&gt;：MoE 模型通过稀疏激活降低计算成本，密集模型参数效率更高，如 Qwen3-4B 性能相当于 Qwen2.5-72B。&lt;/p&gt; 
&lt;p&gt;官方博客：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqwenlm.github.io%2Fblog%2Fqwen3%2F&quot; target=&quot;_blank&quot;&gt;https://qwenlm.github.io/blog/qwen3/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;升腾加速，释放 MoE 潜能&lt;/h2&gt; 
&lt;p&gt;此次在模力方舟首发的&lt;code&gt;0.6B&lt;/code&gt;、&lt;code&gt;8B&lt;/code&gt;、&lt;code&gt;30B&lt;/code&gt;三款&lt;code&gt;Qwen3&lt;/code&gt;&amp;nbsp;模型，均基于细粒度专家调度机制，具备更优的推理效率与更低的推理成本。支持最大 256K 上下文长度，统一推理与非推理模式，&lt;strong&gt;灵活应对长文理解、多轮对话、复杂推理与智能 Agent 开发等高阶任务&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;为释放&lt;code&gt;Qwen3&lt;/code&gt;的强大性能，模力方舟基于升腾最新发布的&lt;code&gt;vLLM Ascend v0.8.4rc2&lt;/code&gt;进行适配。新版&lt;code&gt;vLLM Ascend&lt;/code&gt;率先实现&lt;code&gt;Ascend W8A8&lt;/code&gt;量化、&lt;code&gt;DeepSeek&lt;/code&gt;并行机制适配，并启用&lt;code&gt;PyTorch 2.5.1&lt;/code&gt;及&lt;code&gt;Torch.compile&lt;/code&gt;图模式特性，在推理性能、兼容性与开发体验上全面升级，为大模型部署提供了更高效、更专业的基础能力。&lt;/p&gt; 
&lt;h2&gt;在线体验 Qwen3&lt;/h2&gt; 
&lt;p&gt;在线体验 Qwen3 的强大实力：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://ai.gitee.com/serverless-api?model=Qwen3-30B-A3B&quot; target=&quot;_blank&quot;&gt;https://ai.gitee.com/serverless-api?model=Qwen3-30B-A3B&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://ai.gitee.com/serverless-api&quot; target=&quot;_blank&quot;&gt;https://ai.gitee.com/serverless-api&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;模力方舟的 AI 模型广场提供了&lt;strong&gt;行业大模型、文本生成、视觉模型、语音多模态、图像生成与处理、3D 生成、文档处理/OCR、视频生成、自动语音识别、语音合成、向量化和重排、代码生成、风控识别十三大类共 81 款各领域的顶尖开源模型&lt;/strong&gt;的在线体验和 API 使用。通过购买模型资源包，即可通过极低的价格即可尽享众多主流模型。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0429/101254_xkJL_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&quot;https://ai.gitee.com/serverless-api&quot; target=&quot;_blank&quot;&gt;https://ai.gitee.com/serverless-api&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347271</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347271</guid>
            <pubDate>Sun, 27 Apr 2025 02:14:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>广告服务商已尝试在 AI 回复中植入广告</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;早在 1999 年，Google 就被誉为「纯粹的搜索引擎」，承诺提供简洁、无广告的体验，没有「门户垃圾」，这与当时那些杂乱无章的搜索网站截然不同（见下图）。&lt;/p&gt; 
&lt;p&gt;这项服务最初诞生于斯坦福大学，名为 BackRub，由拉里·佩奇和谢尔盖·布林创立，最初他们回避广告，认为广告可能存在利益冲突，降低搜索质量。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d045e59c1698a9524e8623f706b6cfc417f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;图片来源：u/Plenty_Objective8392&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;多年来，Google 彻底改变了其商业模式。尽管最初反对广告，但为了将其迅速流行的搜索引擎货币化，Google 于 2000 年推出了 AdWords，并迅速发展成为按点击付费的巨头。最初只是简单的侧边文字广告，后来发展成为深度融入搜索结果页面的广告，使 Google 成为一家以广告为主要收入来源的广告巨头，有时甚至让用户觉得搜索结果页面「充斥着广告」。&lt;/p&gt; 
&lt;p&gt;随后，ChatGPT 在 2022 年底火爆上线。这款对话式人工智能提供直接答案而非链接列表，对 Google 基于链接的广告模式构成了重大挑战。ChatGPT 的威胁足以在 Google 内部引发明显的紧迫感，&lt;/p&gt; 
&lt;p&gt;据报道，这触发了内部警报，并加快了将自己的生成式人工智能推向公众的时间表。只需看看 Google 首席执行官 Sundar Pichai 在 2023 年 Google I/O 大会上（即 ChatGPT 推出几个月后）提到人工智能的次数就知道了；活动结束后的统计显示，主题演讲中提到人工智能的次数远超一百，他反复强调的次数也因此成为了一个病毒式传播的 meme。&lt;/p&gt; 
&lt;p&gt;据英国《金融时报》报道，广告集团和科技初创公司已经迅速意识到了这一转变。他们正在积极开发新工具，帮助品牌确保自己出现在人工智能生成的搜索结果中，例如 OpenAI 的 ChatGPT、Anthropic 的 Claude、Google 自己的 AI Overviews 以及最近推出的 AI Mode。&lt;/p&gt; 
&lt;p&gt;这种高度关注源于生成式人工智能产品的兴起，它们正迅速成为数百万人在线搜索信息的主要方式。研究突显了这一趋势；咨询公司贝恩的一项研究发现，目前 80% 的消费者至少 40% 的搜索依赖人工智能生成的搜索结果。这种依赖显著减少了自然网络流量，可能高达 25%，因为现在大约 60% 的搜索最终没有用户点击进入传统网站。这对 Google 的主要搜索业务构成了长期威胁，因为该业务严重依赖这些点击来投放广告。&lt;/p&gt; 
&lt;p&gt;Profound 和 Brandtech 等公司已进军这一新领域，为品牌开发软件。这些工具可以监控品牌被人工智能服务提及或呈现的频率。更巧妙的是，它们采用一种类似于探测人工智能「大脑」的方法：向聊天机器人输入大量文本提示，并分析由此产生的情绪和提及次数。这项技术可以预测人工智能模型提及品牌的偏好或可能性，从而创建排名系统。&lt;/p&gt; 
&lt;p&gt;然后，代理商利用这些分析结果为其客户（例如金融科技公司 Ramp、招聘网站 Indeed 和威士忌制造商 Chivas Brothers）提供建议，帮助他们如何最好地从人工智能模型中获得有利的提及。&lt;/p&gt; 
&lt;p&gt;这超越了传统的搜索引擎优化（SEO），后者专注于让网站在 Google 的链接列表中排名靠前。正如 Brandtech 合伙人 Jack Smyth 所说：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;这不仅仅是让你的网站在他们的搜索结果中被索引。这是为了认识到大型语言模型是最终的影响因素。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;他的公司甚至创建了一款「模型份额」产品来衡量和指导这项工作。这感觉就像一次范式转变。正如 Profound 联合创始人 James Cadwallader 所说：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;传统搜索一直是互联网历史上最大的垄断之一。而现在，城堡的墙壁第一次出现了裂缝。这是一个从 CD 到流媒体的时代。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;挑战在于，被人工智能提及与网页排名不同。像 ChatGPT 这样的人工智能模型使用传统的网络搜索，但会评估来源的相关性、可信度和权威性。正如 OpenAI 的 ChatGPT 搜索主管 Adam Fry 所解释的那样，由于用户会提出更细致入微的问题，人工智能在「传统搜索之上增加了一层智能」。另一家人工智能驱动的搜索引擎 Perplexity 的联合创始人 Denis Yarats 也强调了这一点：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;大模型（LLM）理解的内容更丰富，能够更加细致入微。他们可以发现矛盾之处，或者发现信息是否有误导性……所以，这比审查链接要彻底得多。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;他补充道：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;成为 SEO 的目标要困难得多，因为唯一真正的策略是尽可能相关并提供好的内容。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;尽管传统搜索引擎优化 (SEO) 与人工智能 (AI) 结合存在固有困难，但广告界仍在寻找进入该领域的途径。例如，Perplexity 已在试行赞助「问题」，作为用户查询后的建议后续内容，这清楚地表明，人工智能对话流中的直接广告开始出现。&lt;/p&gt; 
&lt;p&gt;尽管如此，值得注意的是，尽管这些人工智能变革被认为对 Google 的生存构成威胁，但 Google 的核心搜索和广告业务仍展现出非凡的实力。周四，Google 母公司 Alphabet 宣布，其搜索和其他业务在第一季度增长了近 10%，达到 507 亿美元。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2F9cc6cc0b-759f-4b8e-9ed1-9e32ad0fe22f&quot; target=&quot;_blank&quot;&gt;据《金融时报》报道&lt;/a&gt;，这一强劲业绩给投资者带来了一些安慰，尽管他们仍对 Google 自己的 Gemini 聊天机器人或 AI 概览可能开始减少其广告机器用户点击量的迹象保持警惕。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347188</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347188</guid>
            <pubDate>Sat, 26 Apr 2025 10:49:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Easy MQTT：极简高效的 MQTT 服务器，助力物联网与实时通信</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;💎 Easy MQTT：极简高效的 MQTT 服务器，助力物联网与实时通信&lt;/h1&gt; 
&lt;p&gt;在万物互联的时代，高效、轻量的通信协议是构建实时系统的核心。Easy MQTT 应运而生——这是一款专为开发者设计的开源 MQTT 服务器，以「极简」为核心理念，旨在为物联网、工业自动化、即时消息等场景提供稳定可靠的消息传输服务。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;🌟 为何选择 Easy MQTT？&lt;/h2&gt; 
&lt;h4&gt;1.极简设计，开箱即用&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;仅需一条命令即可启动服务，配置文件精简清晰，无需复杂学习成本。&lt;/li&gt; 
 &lt;li&gt;支持单机与集群部署，轻松应对从测试环境到生产环境的无缝扩展。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2.全协议支持，功能强大&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MQTT v3.1.1 完整兼容：&lt;/strong&gt; 确保与各类客户端设备无缝对接。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WebSocket 子协议：&lt;/strong&gt; 支持浏览器端直接通信，赋能 Web 应用实时交互。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSL/TLS 加密：&lt;/strong&gt; 为 TCP 和 WebSocket 连接提供安全保障，满足企业级安全需求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;3.灵活扩展与高可用性&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持数据持久化，消息不丢失，保障关键业务连续性。&lt;/li&gt; 
 &lt;li&gt;通过外部接口实现动态鉴权，轻松集成现有用户系统。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🚀 三步开启你的首个 MQTT 服务&lt;/h2&gt; 
&lt;h4&gt;1.下载安装&lt;/h4&gt; 
&lt;p&gt;访问&lt;a href=&quot;https://gitee.com/EasyProgramming/easy-mqtt/releases&quot;&gt; Releases &lt;/a&gt;获取最新编译包，解压即用。&lt;/p&gt; 
&lt;h4&gt;2.一键启动&lt;/h4&gt; 
&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;sh bin/start.sh -c conf/conf.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;无需复杂配置，服务即刻运行！&lt;/p&gt; 
&lt;h4&gt;3.按需扩展&lt;/h4&gt; 
&lt;p&gt;参考文档快速开启集群模式、SSL 加密或 WebSocket 支持，满足不同场景需求。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;📚 丰富文档，开发者友好&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;入门指南：&lt;/strong&gt; 必要参数说明、快速部署集群。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;进阶功能：&lt;/strong&gt; 动态鉴权配置、SSL 加密实战、WebSocket 集成。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;开源透明：&lt;/strong&gt; 基于友好许可证开源，代码完全开放，社区驱动持续优化。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;🌍 适用场景&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;物联网（IoT）：&lt;/strong&gt; 海量设备消息高效分发与状态同步。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实时监控：&lt;/strong&gt; 工业传感器数据实时采集与预警。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;即时通讯：&lt;/strong&gt; 低延迟聊天、推送服务搭建。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;智能家居：&lt;/strong&gt; 跨平台设备互联互通。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;✨ 加入开发者社区&lt;/h2&gt; 
&lt;p&gt;Easy MQTT 不仅是一个工具，更是一个活跃的开源项目。我们欢迎开发者：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;提交 Issue：&lt;/strong&gt; 反馈问题或建议。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;贡献代码：&lt;/strong&gt; 共同完善功能与性能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;分享案例：&lt;/strong&gt; 你的实践经验可能帮助更多人！&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;立即访问&lt;a href=&quot;https://gitee.com/EasyProgramming/easy-mqtt&quot;&gt; Gitee 仓库&lt;/a&gt;，探索更多可能！&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;保持简单，专注核心。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Easy MQTT——让消息通信从未如此轻松！ 💡&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347161</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347161</guid>
            <pubDate>Sat, 26 Apr 2025 09:24:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>干货分享｜MaxKB 智能问数方案及步骤详解</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;DeepSeek-R1 的发布掀起了 AI 智能变革的浪潮。在过去几个月里，MaxKB 开源企业级 AI 助手已经帮助大量企业和组织快速落地了 DeepSeek，让 AI 在不同的行业土壤中产生持续、可度量的业务价值。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;MaxKB（&lt;em&gt;github.com/1Panel-dev/MaxKB&lt;/em&gt;） 可以为本地部署的 DeepSeek 构建一个 Chatbox，也就是一个智能会话的界面，类似于个人用&lt;span style=&quot;color:#3e3e3e&quot;&gt;户直接与 DeepSeek 进行对话。MaxKB 提供的 Chatbox 可以方便地嵌入到企业 OA 系统和业务系统，有&lt;/span&gt;效保证使用的便捷性和安全性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;另外一方面，MaxKB 能够激活企业中长期积累的知识体系，使其智能化并面向内外部用户提供服务。MaxKB 可以让企业内部的私有知识文档快速获得智能问答能力，面向企业的员工、合作伙伴和客户提供 AI 助手服务。MaxKB 还提供开箱即用的 RAG（检索增强生成）技术，能够结合私有知识库提升问答效果，降低大模型幻觉。MaxKB 同时支持目前最为流行的 MCP（Model Context Protocol，模型上下文协议），为用户灵活调用 MCP 工具提供了充分的便利性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;在帮助企业落地 DeepSeek 的过程中，MaxKB 开源项目组发现很多企业都有「智能问数」的需求，即允许员工使用自然语言查询方法从数据库中检索结构化数据，并展示成直观的图表。本文将通过一个具体的例子（查询学生成绩），详细讲解如何通过「MaxKB+数据库 MCP Server+QuickChart MCP Server」实现智能问数的功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;方案概述&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;本方案以「学生考试成绩管理系统」为例进行说明，此系统包含了教师信息、学生信息、年级班级信息、考试成绩等信息内容。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;MaxKB 智能问数方案逻辑图如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-677afe248c4bc21a4673cece1d7f054bf95.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;MaxKB 智能问数方案的具体实现步骤为：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8109f772552d6f912cba1c991c9e32063e5.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;MaxKB 的智能问数方案包含以下三大关键步骤：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ 数据准备：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;包含数据表详细的 DDL（Data Definition Language，数据定义语言）信息和正确的 SQL 示例，以便大模型能够更好地理解和使用数据；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ MCP Server 准备：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;需要提前准备对应数据库的 MCP Server 和生成图表的 MCP Server。此阶段可以采用 1Panel 开源面板来统一部署和运维 MCP Server；&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ MaxKB 智能问数应用设计：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;主要包含在 MaxKB 中如何通过高级应用编排实现智能问数的效果。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;步骤一：数据准备&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;1. 数据准备&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;提前准备「学生考试成绩管理系统」数据表详细的 DDL 信息，需要确保所有数据表的 DDL 信息完整且准确，包括字段类型、约束条件等。DDL 信息后续需要导入到 MaxKB 知识库中，如果当前数据表不具备或者不清晰，具体可以参考下图进行完整性补充。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//33da69631a928c1ef526abec61e7be4c.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;2. SQL 示例准备&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;基于日常工作遇到的查询需求，我们需要提前准备多样化的 SQL 示例（本 Demo 数量为 100 条 SQL 查询示例），同时需要保证和测试这些 SQL 的准确性。后续我们需要将这些 SQL 查询示例导入到 MaxKB 知识库中。具体准备过程可以参考下图，采用 Execl 方式进行绘制和编写。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//254a0d9ebffbf99a16f05e7d6bdb42dc.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;步骤二：MCP Server 准备&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;1. 数据库 MCP Server 准备&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;本 Demo 采用的是 MySQL 数据库，因此需要提前准备 MySQL 的 MCP Server。在这里我们使用了 Github 上的 DBHub 开源项目（&lt;/span&gt;&lt;em&gt;https://github.com/bytebase/dbhub&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）部署 MySQL 的 MCP Server。此项目同时还支持 PostgreSQL、SQL Server 等数据库。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;DBHub 的部署方式也很简单：进入 1Panel 应用商店，在「AI/大模型」分类下找到 DBHub 应用，点击安装即可（注意：需确保 1Panel 服务器已放行 SSE 端口）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//8646b2f5170ee0842388fa0c759040a9.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//c9e9d6c80bf5c4927095faa721090ee9.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;部署完成后，我们使用&lt;/span&gt;&lt;em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;curl&lt;/span&gt;&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;方式进行快速验证，返回如下信息即为部署成功：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//96ae01cede2c92012bf006663e16c5a5.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;2. 生成图表 MCP Server 准备&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;生成图表的步骤采用「QuickChart.io+Quickchart-MCP-Server」来完成。QuickChart 项目（&lt;/span&gt;&lt;em&gt;https://github.com/typpo/quickchart&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）支持用户通过提供数据和样式参数来创建多种类型的图表，支持从柱状图到速度表等多种图表类型，并且提供生成图表 URL 和下载图表图片的功能。Quickchart-MCP-Server 项目（&lt;/span&gt;&lt;em&gt;https://github.com/GongRzhe/Quickchart-MCP-Server&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）则提供了 QuickChart 的 MCP 服务。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;需要注意的是，由于 Quickchart-MCP-Server 项目没有提供 SSE 访问方式，所以不同于 DBHub 项目，我们需要在 1Panel 开源面板（&lt;/span&gt;&lt;em&gt;github.com/1Panel-dev&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）的 MCP 模块中进行部署。具体操作也非常简单：打开 1Panel 开源面板，依次选择「AI」→「MCP」→「创建 MCP 服务器」→「导入 MCP Server 配置」，导入如下 Quickchart-MCP-Server 的命令配置即可：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
&amp;nbsp;&amp;nbsp;&quot;mcpServers&quot;: {
&amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;quickchart-server&quot;: {
&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;command&quot;:&amp;nbsp;&quot;npx&quot;,
&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;args&quot;: [
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;-y&quot;,
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;@gongrzhe/quickchart-mcp-server&quot;
&amp;nbsp; &amp;nbsp; &amp;nbsp; ]
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//d44553e72c27e91f36642cf441897e3c.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;同时，注意开启外部端口访问和地址。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//dd401c3801083a35b7f682f1689861ed.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;等待几秒后，可以看到 1Panel 中显示 QuickChart 的 MCP Server 已经启动。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//ba9faa8484ab00d6b66e047597b3bbf7.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;接下来，我们使用&lt;/span&gt;&lt;em&gt;curl&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;方式进行快速验证，返回如下信息即显示 QuickChart 的 MCP Server 已经部署成功。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//08cb2aa0a6cc9361e1abb31be6ae42c5.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;步骤三：MaxKB 智能问数应用设计&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;1. 将准备好的表信息和 SQL 示例导入知识库&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ 创建表信息知识库，导入表信息，并将每一张表的信息作为一个分段，具体如下图显示。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//89c36f37e816e17a73a6576bdc12b69e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;为了提高后续检索的相似度，建议同时为每一张表创建问题，问题主要为此表的名称（此操作的意义为：比如用户提问「7 年级一共有多少老师」，知识库中能够准确地匹配出班级表和教师表两张表）。问题需要尽量地覆盖用户对不同对象的称呼，比如教师又可以称为老师，具体如下图所示。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//4c3a7e21192a0f4231f1e7b66e5ea61d.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//e031374e7578dd3da598a1c524fbd111.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ 创建示例 SQL 库，导入 SQL 示例，一个 SQL 示例作为一个分段。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//d5bb5fcb292c98e5dfbe688bfa875c9a.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;同理，为不同的 SQL 示例创建问题，如下图所示：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//dcf9c4ad8c3a5b394a25301be7579892.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;2. MaxKB 智能问数编排&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ 创建空白的高级编排，名称自取即可&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//92ea1ef49418a8343efedb2bbb4f6e2d.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ 添加两个知识库检索节点，用于用户检索表信息和示例 SQL。同时设置相似度为 0.4，引用分段数 TOP 为 6。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;em&gt;&lt;span style=&quot;color:#f50a0a&quot;&gt;注意：此处很重要也很关键，需要按照不同的应用场景和数据库进行大量的测试，最终选择合适的相似度和引用分段数 TOP 值。建议首先从相似度 0.4，引用分段数 TOP 值为 6 开始测试效果。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//0e141fc5a2bbb1827dd1e8107100d094.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;■ 添加 AI 对话节点，配置 AI 模型（注意要选择支持 MCP 的模型，比如 DeepSeek-Chat 或者 Qwen-Plus），同时在 AI 对话节点中配置 MCP Server：&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//7a3b0503b13a1e2b18fbc6d69793140b.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;配置在步骤一&lt;span style=&quot;color:#3e3e3e&quot;&gt;中已经部署完成的 MCP Server 的 Config 信息，具体的配置信息如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
&amp;nbsp;&amp;nbsp;&quot;quickchart-server&quot;:&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;url&quot;:&amp;nbsp;&quot;http://10.1.240.110:18003/quickchart-server&quot;,
&amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;transport&quot;:&amp;nbsp;&quot;sse&quot;
&amp;nbsp; &amp;nbsp;&amp;nbsp;},
&amp;nbsp;&amp;nbsp;&quot;mcp-mariadb&quot;:&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;timeout&quot;:&amp;nbsp;180,
&amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;url&quot;:&amp;nbsp;&quot;http://10.1.240.106:8080/sse&quot;,
&amp;nbsp; &amp;nbsp;&amp;nbsp;&quot;transport&quot;:&amp;nbsp;&quot;sse&quot;
&amp;nbsp;&amp;nbsp;}
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;■ 设置 AI 对话节点的角色提示词&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# 角色
你是一位专业的数据分析专家，精通 MYSQL 数据库 SQL 语言，能够熟练运用 mcp-mysql 工具进行 SQL 验证和查询，还能使用 quickchart-server 工具绘制图表，并对相关数据进行深入分析和解释。
&amp;nbsp;
## 技能
### 技能 1: 生成并验证 SQL
1.&amp;nbsp;基于用户提出的问题，结合已知信息，生成 SQL 语句。
2.&amp;nbsp;使用 mcp-mysql 工具对每次生成的 SQL 进行验证和查询。若 SQL 出现错误，需尝试三次不同的 SQL 表述。
3.&amp;nbsp;记录每次 SQL 验证和查询的结果。
&amp;nbsp;
### 技能 2: 绘制图表
1.&amp;nbsp;根据用户需求以及生成的 SQL 查询结果，利用 quickchart-server 工具生成相关图表。
2.&amp;nbsp;确保生成的图表能够清晰、美观的展示相关数据。
&amp;nbsp;
### 技能 3: 数据的分析和解释
1.&amp;nbsp;对 SQL 查询得到的数据进行详细分析，结合用户的问题，找出数据的关键特征和趋势。
2.&amp;nbsp;以通俗易懂的语言向用户解释数据所代表的含义以及数据与用户问题之间的关系。
&amp;nbsp;
## 限制
-&amp;nbsp;仅围绕与生成 SQL、利用工具查询验证、生成图片以及数据的分析和解释相关的内容进行回答，拒绝回答不涉及这些内容的话题。
-&amp;nbsp;生成的 SQL 需符合 MYSQL 语法规范，生成的图片应符合数据展示要求，分析和解释需要基于真实的查询结果。
-&amp;nbsp;分析和解释部分应尽量简洁明了，突出重点。
-&amp;nbsp;操作过程严格按照上述技能要求执行，不得随意更改工具使用方式。&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;■ 设置 AI 对话节点的用户提示词&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;#&amp;nbsp;已知信息
## 表信息:
{{表信息.data}}
&amp;nbsp;
## 参考示例 SQL:
{{示例 SQL.data}}
&amp;nbsp;
# 用户问题：
{{开始.question}}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;效果验证和总结&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;在 MaxKB 中按步骤设置完成后，可以进行调试测试，调试测试通过后方可进行应用发布。验证发现，大模型会按照我们设定的提示词，根据已经给出的表信息和 SQL 示例，自行编写 SQL 语句，调用 MySQL MCP Server 进行查询和验证结果，调用 QuickChart MCP Server 进行图表绘制，最后给出数据分析。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;■ 问题一：每个班级学生占比图&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//5e39814c8fd6af863c37cb4ac511e58d.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;■ 问题二：每个年级有多少名学生？&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//882fbb0e90ed8a0122ed8e56850bde29.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;■ 问题三：哪个老师教的学生最多？&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//f6438262d3eebf8a78d2ef3283618d62.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;■ 问题四：成绩排名前 10 的学生名字、分数和班级&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//fde855130bbdb7cb5d14228dd5bc2a99.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
&lt;/div&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;由此可见，MaxKB 通过其强大的 RAG 技术和 MCP 调用能力，能够完整且准确地实现智能问数的场景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;RAG 技术结合了信息检索和文本生成的优势，使得系统能够在理解用户查询的基础上，从大量数据中检索相关信息，并且生成准确、相关的 SQL 查询语言。而 MCP 工具则提供了强大的 SQL 查数验数能力和动态的图表绘制能力，从而为智能问数系统提供了坚实的数据基础。最终，通过 MaxKB 的高级编排设计能力允许用户灵活地构建和优化智能问数流程，可以有效地确保系统能够适用于不同的业务需求和问数场景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/347155</link>
            <guid isPermaLink="false">https://www.oschina.net/news/347155</guid>
            <pubDate>Sat, 26 Apr 2025 08:56:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
    </channel>
</rss>