<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 13 Jun 2025 07:48:30 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>微软 Office 版本控制从 Source Depot 迁移到 Git 的经验和教训</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;曾参与 OneNote 开发的微软工程师&amp;nbsp;Daniel Sada 近日&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdanielsada.tech%2Fblog%2Fcarreer-part-7-how-office-moved-to-git-and-i-loved-devex%2F" target="_blank"&gt;发文&lt;/a&gt;&lt;/u&gt;，介绍了微软 Office 团队将项目的版本控制系统从 Source Depot 迁移到 Git 的经历。&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;Source Depot 是微软早期基于 Perforce 开发的版本控制系统，随着 Windows 代码规模的扩大，它逐渐显现出诸多问题，如操作缓慢、分支切换困难、集中化导致网络问题时生产力停滞等，且维护成本高昂，员工也希望能掌握更具通用性的技能。 &lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;Office 团队面临着规模与复杂性挑战：Office 团队庞大，约有 4000 名工程师，且服务于不同客户群体，有 LTSC、半年度更新、月度更新、内部测试等不同更新节奏，此外其版本号构成复杂，需保证版本间的一致性及测试验证。 &lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a46514721f6024f1a096ccade7ff654fc86.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;数百名微软工程师耗时数年终于将 Office 项目的版本控制从 Source Depot 迁移到了 Git。四千名工程师工作的 MS Office 办公软件项目切换到了 Git。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;迁移过程&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;第一阶段：建立「平行宇宙」&lt;/strong&gt;：创建一个同步 Source Depot 和 Git 的桥梁，将 Source Depot 的分支层次结构映射到 Git 的 DAG 结构，同时保留提交者信息和时间戳，并确保反向整合和正向整合的一致性。初期尝试失败，经历了三次不同年份的尝试才成功建立稳定的同步服务。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;第二阶段：验证等效性&lt;/strong&gt;：对两个代码库运行完整的测试套件，每天进行对比，花费数月时间解决语义差异、行尾处理、大小写敏感和测试输出不匹配等问题，直至实现所有测试在两种系统中完全相同通过。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;迁移策略&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;人员沟通与协作&lt;/strong&gt;：采用「冠军」枢纽辐射模式，每个团队指定一名「冠军」作为联络人，在中心工程团队与各团队间建立桥梁，通过多种渠道反复传达信息，确保重要信息被充分接收。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;培训与技术支持&lt;/strong&gt;：为开发者提供培训环境，模拟常见工作流程，创建视频库展示真实开发者解决问题的过程，帮助他们熟悉 Git 操作，消除对出错的担忧。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;回滚策略&lt;/strong&gt;：制定明确的回滚策略，赋予领导「红色按钮」权力，可在迁移影响生产力时随时停止，以确保迁移过程可控。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;原文：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdanielsada.tech%2Fblog%2Fcarreer-part-7-how-office-moved-to-git-and-i-loved-devex%2F" target="_blank"&gt;https://danielsada.tech/blog/carreer-part-7-how-office-moved-to-git-and-i-loved-devex/&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355211</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355211</guid>
      <pubDate>Fri, 13 Jun 2025 07:44:29 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenZFS 2.2.8 发布，支持更新版本的 Linux 内核</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;在 OpenZFS 2.3 系列&lt;a href="https://www.oschina.net/news/338141/openzfs-2-3-1"&gt;发布&lt;/a&gt;稳定版更新几个月后，该团队为仍然依赖 OpenZFS 2.2 系列的用户推出了新的稳定版本 2.2.8。&lt;/p&gt; 
&lt;p&gt;OpenZFS 2.2.8 支持 Linux 4.18 至 Linux 6.15 内核，比 OpenZFS 2.2.7 之前的 Linux 6.12 上限有所提升。FreeBSD 13.3 及更新版本也继续得到支持。&lt;/p&gt; 
&lt;p&gt;OpenZFS 2.2.8 还带来了测试套件的更新，例如添加了 AlmaLinux 10，各种持续集成（CI）更新，以及其他各种错误修复。&lt;/p&gt; 
&lt;p&gt;详情查看&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenzfs%2Fzfs%2Freleases%2Ftag%2Fzfs-2.2.8" target="_blank"&gt;https://github.com/openzfs/zfs/releases/tag/zfs-2.2.8&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355205/openzfs-2-2-8</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355205/openzfs-2-2-8</guid>
      <pubDate>Fri, 13 Jun 2025 07:22:12 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Rocky Linux 10.0 正式 GA</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;我们很高兴地宣布&amp;nbsp;&lt;strong&gt;Rocky Linux 10&lt;/strong&gt;&amp;nbsp;正式发布。新版安装镜像、容器、云镜像和 Live 镜像现已可在 &lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frockylinux.org%2Fzh-CN%2Fdownload" target="_blank"&gt;Rocky Linux 下载页面&lt;/a&gt;&lt;/u&gt; 获取。关于此版本的重要信息、已知问题与详细更改，请参考 Rocky Linux 文档，中发布的，发行说明。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-511112743f319eede3302bf75800acde6e1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;重要公告&lt;/h1&gt; 
&lt;h2&gt;支持的微架构级别&lt;/h2&gt; 
&lt;p&gt;Rocky Linux 10 最重大变化是移除了对 x86-64-v2 架构的支持。现在仅支持 x86-64-v3 的 AMD 和 Intel 64 位架构。&lt;/p&gt; 
&lt;p&gt;Rocky Linux 10 支持以下处理器架构：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;64-bit AMD/Intel x86-64-v3 (x86_64)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;64-bit RISC-V (riscv64)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;64-bit ARMv8.0-A (aarch64)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IBM POWER, little endian (ppc64le)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IBM z (s390x)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：所有 32 位软件包已从 Rocky Linux 10 移除。这意味着 32 位应用程序将无法在此版本上运行。请使用包含 32 位依赖的 64 位库或容器。&lt;/p&gt; 
&lt;h2&gt;安装程序&lt;/h2&gt; 
&lt;p&gt;用户默认将拥有管理员权限，除非您取消该选项。&lt;br&gt; 图形远程访问默认采用远程桌面协议（RDP），取代了原有的 VNC。&lt;/p&gt; 
&lt;h2&gt;DHCP 客户端与服务器&lt;/h2&gt; 
&lt;p&gt;RL 10 的 DHCP 客户端作为 NetworkManager 的内部子系统实现。传统的 dhcp-client 软件包已不再获得上游支持并被移除。&lt;br&gt; ISC DHCP 服务器上游已生命周期结束，在 RL 10 中被其继任者 Kea DHCP 所取代。&lt;/p&gt; 
&lt;h2&gt;桌面环境&lt;/h2&gt; 
&lt;p&gt;RL 10 中，Wayland 取代了 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FX.Org" target="_blank"&gt;X.Org&lt;/a&gt; Server。Xwayland 可支持尚未移植到 Wayland 的大部分 X11 客户端。本次还有部分桌面应用及组件也在 RL 10 中进行了替换。&lt;/p&gt; 
&lt;h1&gt;亮点功能&lt;/h1&gt; 
&lt;h2&gt;主要新特性和变化&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;动态编程语言、Web 与数据库服务器&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;PHP 8.3&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Python 3.12&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;nginx 1.26&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;PostgreSQL 16.8&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;MySQL 8.4&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Valkey 8.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;MariaDB 10.11&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;性能工具与调试器&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;GDB 14.2&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Valgrind 3.23.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;SystemTap 5.1&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Dyninst 12.3.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;elfutils 0.192&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;libabigail 2.6&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;性能监控工具&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Performance Co-pilot 6.3.0&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Grafana 10.2.6&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;编译器工具集&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;LLVM Toolset 19.1.7&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Rust Toolset 1.84.1&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Go Toolset 1.23&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;RISC-V 架构支持&lt;/h2&gt; 
&lt;p&gt;Rocky Linux 10 引入了对 RISC-V 架构的支持，进一步拓宽了 Rocky Linux 的可用硬件平台。这是 Rocky Linux 变得更加多元与普惠的重要一步。&lt;br&gt; 更多关于本次里程碑及 Rocky Linux 10 的 RISC-V 支持，请见此链接。&lt;br&gt; 如果您有兴趣让 RISC-V 硬件运行 Rocky Linux，欢迎加入 Rocky Linux Mattermost 的 ~SIG/AltArch &amp;nbsp;频道。&lt;/p&gt; 
&lt;h1&gt;测试&lt;/h1&gt; 
&lt;p&gt;每一个 Rocky Linux 发行版都经过严格的准确性和稳定性测试，Rocky Linux 10 也不例外。测试流程涵盖了多种环境与配置下的手动和自动检查。我们在正式开放下载前，对本次发布进行了为期两周的验证。测试成果、讨论与发布检查表详见 Rocky Release (v10) Playbook。&lt;br&gt; 如想参与未来发行版的测试，请加入 Rocky Linux Mattermost 的 ~Testing 频道。我们期待您的加入！&lt;/p&gt; 
&lt;h1&gt;升级与转换流程&lt;/h1&gt; 
&lt;p&gt;Rocky Linux 不支持各大主版本之间的直接升级。若需从 8.x 或 9.x 迁移到 Rocky Linux 10，建议全新安装操作系统。&lt;/p&gt; 
&lt;h1&gt;已知问题&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;SELinux 与已安装 passt 主机上的问题&lt;/strong&gt;&amp;nbsp;如果在安装了&amp;nbsp;&lt;code&gt;passt&lt;/code&gt;&amp;nbsp;后端的工作站、服务器或虚拟主机上启用了 SELinux，接口将无法启动。更多信息请参见，相关上游 Issue。&lt;/p&gt; 
&lt;h1&gt;版本工程更新&lt;/h1&gt; 
&lt;p&gt;Rocky Linux 10 带来一项重要变化：构建不再基于我们的 Peridot 构建系统，而是采用&amp;nbsp;&lt;strong&gt;Koji&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;原因如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Peridot Two 尚未准备就绪（我们也接受这一点）。&lt;/strong&gt;&amp;nbsp;在 Rocky Linux 早期，我们就曾意识到，在主要版本发布期间对未完成的系统进行内部测试风险高且效率低下。这一次，我们将构建得更智能。Peridot Two 将在 gRPC 后端之上，对 Koji 的 XML-RPC 接口进行简洁、现代化的重新实现——一旦准备就绪，现有 Koji 用户即可开箱即用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;IMA 签名优先级极高。&lt;/strong&gt;&amp;nbsp;RHEL 推出的核心特性之一——我们也打算支持的是&amp;nbsp;&lt;strong&gt;IMA（完整性度量架构）&lt;/strong&gt;。它已集成至 Rocky Linux 9 内核中，通过专用签名 CA 提供内核级文件验证。要正确实现此功能需精确集成，而 Keykeeper（Peridot 的签名工具）当前尚不支持。因此，当前 Koji 能满足我们对这一需求的控制。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;兼容性与平滑迁移。&lt;/strong&gt;&amp;nbsp;现在用 Koji 构建 Rocky 10，为后续顺利迁移到 Peridot Two 打下基础，它届时可无缝导入 Koji 实例的构建与元数据。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;总体而言，这一决策反映了我们对长期可维护性、社区透明度和安全、生产级基础设施的承诺。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;转载自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F93KEfxV8THxrHlARHLJq_g" target="_blank"&gt;https://mp.weixin.qq.com/s/93KEfxV8THxrHlARHLJq_g&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355204/rocky-linux-10-0-ga-release</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355204/rocky-linux-10-0-ga-release</guid>
      <pubDate>Fri, 13 Jun 2025 07:15:12 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>华为增资至 410.4 亿</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;天眼查资料显示，华为技术有限公司近日发生工商变更，注册资本由约 409.4 亿人民币增至约 410.4 亿人民币。该公司成立于 1987 年 9 月，由华为投资控股有限公司全资持股。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="253" src="https://oscimg.oschina.net/oscnet/up-ad68a7e8a2b0bf20916fb28b37703e1f33a.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;华为技术有限公司 (曾用名：深圳市华为技术有限公司) ，成立于 1987 年，位于广东省深圳市，法定代表人为赵明路，由华为投资控股有限公司全资持股。是一家以从事计算机、通信和其他电子设备制造业为主的企业。企业注册资本 4104113.182 万人民币，超过了 100% 的广东省同行，实缴资本 4054113.18 万人民币。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;变更记录表明，该公司近一年已进行了多次增资，前几次分别发生于 2024 年 4 月、2024 年 6 月以及 2025 年 3 月。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355203</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355203</guid>
      <pubDate>Fri, 13 Jun 2025 07:14:57 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>陆首群评 DeepSeek 英文版在 Hugging Face 上发表了</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;「&lt;/span&gt;&lt;a href="https://www.oschina.net/news/355187/lu-shouquns-view-of-deepseek"&gt;&lt;span&gt;陆主席评 DeepSeek&lt;/span&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;」（英文版）在 Hugging Face 上发表了！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1138" src="https://static.oschina.net/uploads/space/2025/0613/142550_jtr6_3820517.png" width="1792" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:oklch(0.21 0.034 264.665); margin-left:0; margin-right:0; text-align:start"&gt;链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fblog%2FCOPU2004%2Flu-shouquns-view-of-deepseek" target="_blank"&gt;https://huggingface.co/blog/COPU2004/lu-shouquns-view-of-deepseek&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:oklch(0.21 0.034 264.665); margin-left:0; margin-right:0; text-align:start"&gt;&lt;em&gt;以下为英文版全文：&lt;/em&gt;&lt;/p&gt; 
&lt;p style="color:oklch(0.21 0.034 264.665); margin-left:0; margin-right:0; text-align:start"&gt;Honorary Chairman of China OSS (Open Source Software) Promotion Union (COPU)&lt;/p&gt; 
&lt;p style="color:oklch(0.21 0.034 264.665); margin-left:0; margin-right:0; text-align:start"&gt;Abstract&lt;/p&gt; 
&lt;p style="color:oklch(0.21 0.034 264.665); margin-left:0; margin-right:0; text-align:start"&gt;DeepSeek can be seen as a representative work of China's current AI, exploring a new path for the development of AI, which may change the development pattern of AI in the world and trigger a fierce competition in global AI. DeepSeek insists on open source innovation. At present, it is also a generative autoregressive language model, which inevitably has negative defects such as limitations and hallucinations of common language models. The author of this article proposes that DeepSeek should make corrections and transition towards the development of AI.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;DeepSeek’s greatest success is that Liang Wenfeng’s team has developed a new path for developing AI with an innovative attitude: 「low investment, low cost, limited resources, high efficiency, and high cost performance (output)」.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;DeepSeek can be regarded as a representative work of China's current AI and is changing the development pattern of AI in the world. It lowered the bar for the public and enterprises globally to use AI. Open up a smooth road for emerging forces to develop AI. Negating the old path to develop AI with "huge investment, high cost, massive resources, low efficiency, and low cost performance (output)".&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;It is not an exaggeration to call Liang Wenfeng’s team a group of wizards or geniuses who have achieved 「national destiny」 innovation!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Liang Wenfeng's team insists on open source innovation. Open source helps the iterative innovation, stability and upgrade of AI, and the development of the ecosystem. DeepSeek integrates the full open source of the C-end of the large model and the implementation of an open source business model on the B-end. It not only implements open source innovation, but also supports the development of the open source industry. This is also a major creation of DeepSeek.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Some people use this to suppress DeepSeek by rating according to the current output product rankings. In fact, the output performance of DeepSeek and other large generative language models is on par with each other, and there is no exaggerated situation of one being higher than the other. If we compare them in a more scientific way based on cost-effectiveness, DeepSeek is definitely the best in the world.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Currently, there are not many secrets about DeepSeek’s key technology. Some large generative language models in China and abroad have basically learned DeepSeek’s key technology. When it comes to the next stage of AI competition, it can be said that everyone is on the same starting line.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;The advent of DeepSeek has triggered a fierce competition in global AI.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;The current DeepSeek model, like other large language models, are a generative autoregressive large language model. Limitations and negative defects exists in DeepSeek, affecting its performance. In DeepSeek’s development, it is important to overcome limitations, root out defects, greatly improve intelligence, save energy and increase efficiency, and expand applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;For the generative autoregressive language model, since language cannot replace the real world, it lacks world knowledge, or cannot generate new knowledge to truly understand the physical world. In addition, language is not equal to thinking, and it also limits the depth of thinking during operation, which ultimately limits the level of intelligence produced. The autoregressive mechanism of the language model training architecture is based on Tokens and the signal processing and statistics it supports, which is the root cause of the hallucination.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;DeepSeek, like other standard and inclusive base models, is difficult to directly transform into high-quality productivity for enterprises and industries. It still needs to improve its temporarily missing commercial value. They lack a deep understanding of enterprises and industries. While they are really applied in the business scenarios of enterprises and industries (such as finance, manufacturing, medical care, etc.), to generate value for enterprises and industries, they must capture the data of enterprises and industries and then apply them to fill the gaps.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;It is suggested that an important task for DeepSeek’s development is to solve its problem of deviation and transition, and strive to win in the fierce global competition.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;The goal of calibrating DeepSeek is to develop real and advanced AI - Artificial General Intelligence (AGI). When developing AGI, we must avoid being impatient for quick success. To achieve AGI, we must first develop the tasks of AI in the transition stage (such as multimodality, embodiment, agents and world models, etc.). AGI is an AI with an autonomous system. AGI is at a crossroads of whether AI intelligence can surpass humans. This is related to whether it affects human safety and even affects the extremely serious problem of whether humans can survive on the earth. When developing AGI to ensure preventive measures for human safety, it also requires countries around the world to take unified actions on the basis of mutual trust and implement the policy of combining technology and management (regulation). The task is extremely severe and arduous.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;中文版：&lt;a href="https://www.oschina.net/news/355187/lu-shouquns-view-of-deepseek"&gt;https://www.oschina.net/news/355187/lu-shouquns-view-of-deepseek&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355188/lu-shouquns-view-of-deepseek-en</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355188/lu-shouquns-view-of-deepseek-en</guid>
      <pubDate>Sun, 11 May 2025 06:26:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>陆首群评 DeepSeek</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 获得最大的成功是梁文锋团队以创新的姿态研发出一条「低投资&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;低成本&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有限资源，高效率，高性价比（产出）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」发展人工智能的新路径。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;二&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 堪称为当前中国人工智能的代表作，正在改变世界人工智能的发展格局。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;打击美国在人工智能领域的霸权，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;为中国发展人工智能开辟了康庄大道，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;*&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;否定美西方以&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;「巨额投资&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;高成本&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;海量资源，低效率，低性价比（产出）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;」发展人工智能的老路。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;三&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;称梁文锋团队是一群奇才或天才，实现了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;「国运式」的创新，并不为过！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;四&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;梁文锋团队坚持开源创新，开源有助于人工智能的迭代创新&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;维稳升级&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;开拓生态；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 将大模型 C 端全开源和 B 端实行开源商业模式铸成一体，不但有实行开源创新，并可支持开源产业的发展，这也是 DeepSeek 一大创造。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;五&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;按现行产出产品排行榜排队，有人以此来打压&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek，其实 DeepSeek 与其他生成式语言大模型的产出性能处于对等状态，不存在过分夸张的你高我低情况，如以更科学的性价比对比，DeepSeek 肯定是天下第一。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;六&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目前&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 的主要技术没有多少秘密可言，国内外一些生成式语言大模型基本上也将 DeepSeek 的主要技术学到了手，在开展下一阶段人工智能竞赛时，可以说大家处于同一起跑线上。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;八&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目前&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大模型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;像其他大模型一样都是一种生成式自&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;回归&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;语言大模型，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 也不可避免存在语言大模型那些局限性和负面缺陷，影响到 DeepSeek 在发展中要克服局限&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;根治缺陷&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大幅度提升智能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;节能增效，并扩大应用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;九&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;对生成式&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;自回归&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;语言大模型而言，由于语言不能取代世界，因而它缺乏世界知识，或者不能产生新知，无法真正理解物理世界，加上语言不等于思维，它在运行时也限制了思维深度，最终限制了产出的智能水平；语言大模型训练架构的自&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;回归&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;机制是基于&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Tokens 及其支持的信号处理和统计学，这是产生幻觉的根源。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;十&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 像其他标准的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;普惠的基座模型一样，难以直接转变为企业&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业的优质生产力，尚需提升其暂时缺失的商业价值，它们对企业&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业是缺乏深度理解的，它们真的在落入企业&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业（如&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;金融&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;制造&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;医疗等），要产生企业&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业的价值，必须把企业&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;行业的数据抓起来，进而进行应用补缺。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;十一&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;建议&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 发展的重要任务是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;应&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解决其纠偏转轨问题，力争在全球白热化竞赛中制胜。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;十二&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;DeepSeek 纠偏转轨的目标是研发真实的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;先进的人工智能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;——通用人工智能（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AGI&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）。研发&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AGI 切忌急功近利，而欲达 AGI 先要研发过渡阶段 AI 的任务（如多模态&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;具身&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Agen&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;s 和世界模型等），&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AGI&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;是一个具有自主系统的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AI，AGI 正处于 AI 的智能是否可能超越人类的十字路口，这关系到是否影响人类的安全，甚至影响到人类能否在地球上生存极端严重的问题，在研发 AGI 以保障人类安全的预防措施时，还要求全球各国在相互增进信任的基础上进行统一行动，并实行技术&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;、&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;管理（监管）并举的方针，任务极其严峻和艰巨。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;英文版：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/news/355188/lu-shouquns-view-of-deepseek-en"&gt;https://www.oschina.net/news/355188/lu-shouquns-view-of-deepseek-en&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355187/lu-shouquns-view-of-deepseek</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355187/lu-shouquns-view-of-deepseek</guid>
      <pubDate>Sun, 11 May 2025 06:23:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AMD 与 OpenAI 联合发布 AI 芯片：推理性能提升 35 倍</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在刚刚结束的 2025 全球 AI 发展大会上，AMD 与 OpenAI 联合推出了&lt;span&gt;最新&lt;/span&gt;的 Instinct MI400 和 MI350 系列 AI 芯片。这次发布会吸引了众多行业人士的关注，OpenAI 首席执行官 Sam Altman 也亲自出席，分享了与 AMD 在芯片研发过程中的合作经验。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="227" src="https://oscimg.oschina.net/oscnet/up-b3b7ef9357b973afe0e756b45242dfdd5bd.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;强大的 AI 计算能力&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;AMD 新发布的 Instinct MI350 系列 GPU 基于 CDNA4 架构，专为现代 AI 基础设施设计。其中，MI350X 和 MI355X 两款 GPU 显著提升了 AI 计算性能。MI350 系列配备 288GB HBM3E 内存，内存带宽高达 8TB/s，相较于上一代产品，AI 计算能力提升了 4 倍，推理性能更是提升了 35 倍。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;与竞争对手英伟达的芯片相比，MI355X 每美元能提供多达 40% 的额外 tokens，表现出色。MI355X 的 FP4 性能可达到 161PFLOPS，而 MI350X 在 FP16 性能上可达到 36.8PFLOPS，确保了在 AI 应用中的高效运行。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;灵活的冷却与部署方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;AMD 的 GPU 设计不仅关注性能，还提供多种灵活的冷却配置，支持大规模部署。例如，在风冷机架中最多可以支持 64 个 GPU，而在直接液体冷却环境中则可支持多达 128 个 GPU，极大地增强了其应用的灵活性。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;开源 AI 加速平台 ROCm7&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;为进一步提升 GPU 性能，AMD 还推出了开源 AI 加速平台 ROCm7。经过一年的发展，ROCm 现已成熟，并与多个&lt;span&gt;世界领先&lt;/span&gt;的 AI 平台深度整合，如 LLaMA 和 DeepSeek。即将发布的 ROCm7 版本将提供超过 3.5 倍的推理性能提升，为 AI 开发者提供了强大的技术支持。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;下一代旗舰 AI 芯片 MI400&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;Instinct MI400 系列是 AMD 下一代旗舰 AI 芯片，预计将搭载高达 432GB 的 HBM4 高速显存，内存带宽可达 300GB/s。MI400 在 FP4 精度下的计算性能可达到 40petaflops，专为 AI 训练中的低精度计算进行优化。此外，MI400 系列通过 UALink 技术实现 72 个 GPU 的无缝互联，使其成为一个统一的计算单元，打破传统架构的通信瓶颈。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="286" src="https://oscimg.oschina.net/oscnet/up-cd036885379b375f0f3125e5fb4349a3191.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&amp;nbsp;多家企业的合作前景&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;目前，Oracle、微软、Meta、xAI 等多家企业正在与 AMD 合作使用其 AI 芯片，Oracle 将在其云基础设施中首批采用 Instinct MI355X 驱动的解决方案。Oracle 云基础设施执行副总裁 Mahesh Thiagarajan 表示，与 AMD 的合作极大提升了其服务的可扩展性和可靠性，未来将继续深化合作。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355186</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355186</guid>
      <pubDate>Sun, 11 May 2025 06:19:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>清源 SCA 社区版每日漏洞情报、新增 CVE 及投毒情报推送</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;2025 年 6 月 12 日新增漏洞情报&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CVE 暂未收录高危以上漏洞：3&lt;/li&gt; 
 &lt;li&gt;CVE 热点漏洞精选：3&lt;/li&gt; 
 &lt;li&gt;投毒情报：2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;漏洞感知情报（CVE 暂未收录）&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;1.&amp;nbsp;&lt;strong&gt;MinIO 未授权访问漏洞致多部分上传元数据泄露&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;该漏洞源于 S3 API 接口 list-multipart-uploads 缺失资源级权限校验机制，攻击者可构造恶意 GET 请求遍历检索全实例范围内所有活跃分片上传会话记录。由于无需身份凭证即可直接访问受保护资源，成功利用后能够非法获取包含上传者标识、文件路径等关键元数据信息，进一步形成基于业务上下文的关系推断攻击面。CVSS 评分依据显示攻击代价极低且作用域维持不变，仅需单次网络请求即可同步造成机密性与完整性双重破坏。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;MinIO 是兼容 Amazon S3 协议的分布式对象存储系统，专为云原生环境优化设计其高可用架构提供大规模非结构化数据管理能力。组件通过实现标准 RESTful API 完成数据生命周期治理，采用分布式存储引擎保障跨节点数据一致性与弹性扩展特性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞详情&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;漏洞威胁性评级: 9.1 (超危)&lt;/p&gt; 
&lt;p&gt;漏洞类型: Broken Access Control (CWE-285)&lt;/p&gt; 
&lt;p&gt;受影响组件仓库地址: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fminio%2Fminio" target="_blank"&gt;https://github.com/minio/minio&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Star 数: 53072&lt;/p&gt; 
&lt;p&gt;漏洞详情链接: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fminio%2Fminio%2Fissues%2F21375" target="_blank"&gt;https://github.com/minio/minio/issues/21375&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;2.&amp;nbsp;&lt;strong&gt;PostgREST API Server 因 JWT 身份验证缺陷引发横向移动及数据泄露风险&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;该漏洞源于 JWT 校验逻辑违背 RFC 7519 规范要求，默认配置完全忽略 aud（受众）声明字段的存在性判断。攻击者可利用此缺陷在跨服务调用场景中劫持合法 JWT，通过调整 iss（签发方）或 sub（主题）字段值实施身份伪装，进而突破同源策略限制完成横向渗透。由于无需用户交互即可经网络路径触发，且直接影响保密性（HIGH）和完整性（HIGH），可能造成整个数据平面的越权访问与篡改风险。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PostgREST 是一款将 PostgreSQL 数据库直接暴露为 RESTful API 的服务框架，采用零配置模式实现 SQL 到 JSON 的数据交互，其核心特性包括自动表结构映射、行级安全策略与 OAuth 2.0 身份验证支持。组件通过中间件层抽象数据库操作，适用于微服务架构中快速构建数据接口场景，默认启用 JWT 身份验证但依赖第三方库解析声明字段。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞详情&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;漏洞威胁性评级: 9.1 (超危)&lt;/p&gt; 
&lt;p&gt;漏洞类型: Improper Authorization (CWE-285)&lt;/p&gt; 
&lt;p&gt;受影响组件仓库地址: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPostgREST%2Fpostgrest" target="_blank"&gt;https://github.com/PostgREST/postgrest&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Star 数: 25385&lt;/p&gt; 
&lt;p&gt;漏洞详情链接: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FPostgREST%2Fpostgrest%2Fissues%2F4134" target="_blank"&gt;https://github.com/PostgREST/postgrest/issues/4134&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;3.&amp;nbsp;&lt;strong&gt;Zizmor 组件符号引用时间竞争漏洞允许攻击者远程执行任意代码&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;该漏洞源于时间竞争检查缺陷（TOCTOU），攻击者可构造包含双阶段载荷的分支。首阶段以无风险提交诱导维护人员发起`workflow_dispatch`事件，随后立即更新符号引用指向嵌有隐蔽 payload 的新提交。由于工作流引擎在接收事件指令时尚未完成分支快照冻结，攻击者可在代码拉取与脚本解析间隙注入恶意文件（如植入 shell 命令或第三方库）。CVSS 9.6 评分映射出漏洞具备远程代码执行（RCE）、完全破坏机密性、完整性和可用性的潜力，且攻击链涉及用户交互环节增加社会工程维度威胁。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;zizmor 作为一个基于 GitHub Actions 的持续集成组件，其核心功能是通过工作流定义实现自动化构建与部署。组件采用符号引用（symbolic reference）绑定分支/拉取请求上下文的方式触发执行，设计目标在于简化多源代码协同开发场景下的流程编排。然而这种动态执行机制依赖于事件驱动模型与维护人员手动触发逻辑，导致执行前后的上下文一致性难以保障。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞详情&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;漏洞威胁性评级: 9.6 (超危)&lt;/p&gt; 
&lt;p&gt;漏洞类型: TOCTOU (CWE-362)&lt;/p&gt; 
&lt;p&gt;受影响组件仓库地址: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzizmorcore%2Fzizmor" target="_blank"&gt;https://github.com/zizmorcore/zizmor&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Star 数: 2684&lt;/p&gt; 
&lt;p&gt;漏洞详情链接: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzizmorcore%2Fzizmor%2Fissues%2F935" target="_blank"&gt;https://github.com/zizmorcore/zizmor/issues/935&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;新增 CVE 情报&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;1.&amp;nbsp;&lt;strong&gt;Firefox Canvas 渲染恶意绘图指令越界内存写漏洞导致远程代码执行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;漏洞编号：CVE-2025-49709&lt;/p&gt; 
&lt;p&gt;发布日期：2025 年 06 月 11 日&lt;/p&gt; 
&lt;p&gt;CVSS v3.1 评分为 9.8（超危）&lt;/p&gt; 
&lt;p&gt;参考链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2025-49709" target="_blank"&gt;https://nvd.nist.gov/vuln/detail/CVE-2025-49709&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;在 139.0.4 版本前，其 HTML Canvas 渲染模块因边界校验不足，存在，越界内存写（CWE-787） 安全缺陷。特定序列化绘图指令（如位图合成、像素缓冲区操作）可能引发堆内存覆盖，威胁进程稳定性与安全性。Firefox 浏览器在特定画布操作场景下存在内存损坏漏洞，攻击者可通过构造恶意页面触发，导致远程代码执行或服务中断。该漏洞已被证实存在公开利用证据。漏洞影响所有未更新至 139.0.4 的 Firefox 用户，包括桌面版与移动设备部署场景。攻击者仅需诱导目标访问特制网页即可完成漏洞利用，无须用户交互且可远程操控。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Firefox 是一款跨平台开源网络浏览器，支持复杂图形渲染与 Web 技术交互。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;潜在风险&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;攻击复杂度低：非专业攻击者亦可构造 PoC&lt;/p&gt; 
&lt;p&gt;已检测到实际利用尝试：攻防对抗窗口紧缩&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;修复建议&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 紧急升级至 Firefox 139.0.4 或更高版本&lt;/p&gt; 
&lt;p&gt;2. 对运行环境启用沙箱隔离机制&lt;/p&gt; 
&lt;p&gt;3. 阻断不可信来源的 Canvas 脚本加载&lt;/p&gt; 
&lt;p&gt;4. 监控异常内存访问行为日志&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2.&amp;nbsp;&lt;strong&gt;Firefox JS 引擎 OrderedHashTable 构造数据处理整数溢出漏洞致任意代码执行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;漏洞编号：CVE-2025-49710&lt;/p&gt; 
&lt;p&gt;发布时间：2025 年 06 月 11 日&lt;/p&gt; 
&lt;p&gt;CVSS v3.1 评分为 9.8（超危）&lt;/p&gt; 
&lt;p&gt;参考链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2025-49710" target="_blank"&gt;https://nvd.nist.gov/vuln/detail/CVE-2025-49710&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;在 Firefox &amp;lt; 139.0.4 版本中，JavaScript 引擎使用的 `OrderedHashTable` 组件存在整数溢出漏洞。当处理特定构造的表数据时，整数运算结果超出变量表示范围可能导致内存越界行为，攻击者可通过远程恶意网站触发该漏洞，进而造成任意代码执行或服务中断风险。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Mozilla Firefox 是由 Mozilla 基金会开发的开源网页浏览器，其内置 JavaScript 引擎负责解析和执行 Web 页面中的脚本逻辑。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;潜在风险&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;该漏洞攻击门槛极低，无需用户交互即可实现远程利用，泄露内容可能涵盖敏感内存状态并破坏系统稳定性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;修复建议&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;建议受影响用户立即升级至 Firefox 139.0.4 及以上版本，开发者需优先审查动态数组大小计算逻辑，采用边界检查机制防范类似问题。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;3.&amp;nbsp;&lt;strong&gt;Microsoft 365 Copilot AI 命令解析恶意指令注入漏洞致系统命令执行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;漏洞编号：CVE-2025-32711&lt;/p&gt; 
&lt;p&gt;发布时间：2025 年 06 月 11 日&lt;/p&gt; 
&lt;p&gt;CVSS v3.1 评分为 9.3（超危）&lt;/p&gt; 
&lt;p&gt;参考链接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2025-32711" target="_blank"&gt;https://nvd.nist.gov/vuln/detail/CVE-2025-32711&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;其 AI 命令解析组件，存在严重安全缺陷：攻击者可通过构造恶意输入向系统注入未经验证的命令参数，绕过默认的安全校验逻辑，在目标服务器上执行任意操作系统指令。具体而言，当用户提交特定格式的查询请求时，系统未能有效区分合法的自然语言指令与潜在危险的操作符组合（如分号 &lt;code&gt;;&lt;/code&gt;、管道符 &lt;code&gt;|&lt;/code&gt; 等），导致攻击者能够触发底层脚本引擎执行非预期操作。该漏洞无需用户交互即可远程利用，成功入侵后可读取本地文件、劫持内部服务通信或横向渗透企业内网资源。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;组件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Microsoft 365 Copilot 是微软推出的集成式人工智能协作平台，旨在通过自然语言交互协助企业管理文档、数据分析、会议记录等核心业务流程。该系统基于云端部署，提供跨设备的实时协同能力，广泛应用于企业知识库构建与智能决策场景。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;潜在风险&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此漏洞攻击成本极低（CVSS 可利用性得分 3.9），且因涉及敏感数据泄露（CVSS 机密性影响 HIGH），已被证实具备实战化利用价值。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;修复建议&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;建议受影响用户立即关注微软官方公告，部署紧急修复方案，并通过最小权限原则限制 Copilot 的 API 调用范围。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;投毒情报&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;1. npm 投毒事件&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;事件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;npm 中 frontend-tests 组件的 1.0.0 版本被标记为存在恶意性。该组件被发现与一个与恶意活动相关的域名进行通信并且执行了一个或多个与恶意行为相关的命令。该组件版本的 md5 值为 f4bbbbff85459bdfe65848726d941a6f&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;发布日期&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;2025 年 06 月 12 日&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;2.&lt;strong&gt;npm 投毒事件&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;事件描述&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;npm 中 os-apps-ui-curvelibrary 组件的 11.1.9 版本被标记为存在恶意性。该组件被发现与一个与恶意活动相关的域名进行通信并且执行了一个或多个与恶意行为相关的命令。该组件版本的 md5 值为 f66ee3328243970488d7bf8c995a4cdc&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;发布日期&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;2025 年 06 月 12 日&lt;/p&gt; 
&lt;hr&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;转载自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FjwlReh-wdM-pULp-UPX-kA" target="_blank"&gt;安势信息&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;上海安势信息技术有限公司是国内先进的软件供应链安全治理解决方案提供商，核心团队来自 Synopsys、华为、阿里巴巴、腾讯、中兴等国内外企业。安势信息始终坚持 DevSecOps 的理念和实践，以 AI、多维探测和底层引擎开发等技术为核心，提供包括清源 CleanSource SCA（软件成分分析）、清源 SCA 开源版、清正 CleanBinary (二进制代码扫描)、清流 PureStream（AI 风险治理平台）、清本 CleanCode SAST（企业级白盒静态代码扫描）、可信开源软件服务平台、开源治理服务等产品和解决方案，覆盖央企、高科技、互联网、ICT、汽车、高端制造、半导体&amp;amp;软件、金融等多元化场景的软件供应链安全治理最佳实践。&lt;/p&gt; 
 &lt;p&gt;欢迎访问安势信息官网 www.sectrend.com.cn 或发送邮件至 info@sectrend.com.cn 垂询。&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355181</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355181</guid>
      <pubDate>Sun, 11 May 2025 06:07:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 员工套现潮达 30 亿美元，软银成最大「接盘侠」</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;The Information 报道指出，自 2021 年以来，人工智能巨头 OpenAI 的员工和前员工已通过多次股权出售，累计套现近 30 亿美元。对于这家成立仅六年的公司而言，如此大规模的员工财富变现实属罕见，甚至逼近埃隆·马斯克旗下 SpaceX 的员工套现水平。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;报道披露，日本投资巨头软银已成为 OpenAI 员工股票的&lt;span&gt;最大&lt;/span&gt;买家。今年春季，软银从一小批现任和前任员工手中收购了约 2.4 亿美元的股票。此前在今年 1 月，软银在 OpenAI 完成 1500 亿美元估值的 66 亿美元融资后，斥资 15 亿美元收购了现任和前任员工股票。综合历次交易，软银已买下近 30 亿美元员工套现股票中的约一半份额，成为这场估值游戏中最激进的玩家。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="240" src="https://oscimg.oschina.net/oscnet/up-abfcc1a59e7e09d6d6f32eaacc504904ab3.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;数据显示，OpenAI 基本保持着每年两次的员工股票出售频率，这一节奏甚至超过了多数成熟科技公司。更值得关注的是员工的参与热情:在 2021 年 8 月的&lt;span&gt;首次&lt;/span&gt;股票出售中，90% 符合条件的员工选择以每股 52 美元的价格套现;到今年 1 月，仍有 74% 的符合条件员工以近 210 美元每股的价格出售股票。如今，随着公司&lt;span&gt;最新&lt;/span&gt;一轮融资将估值推至 2600 亿美元，股权价格已超过每股 250 美元，不少员工或许在后悔当初的「早卖」，而市场也在期待公司是否会很快以新价格组织新一轮套现。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;员工股权变现被许多 CEO 视为留住人才的关键工具，尤其是在 OpenAI 与 Anthropic、xAI 等 AI 初创公司，以及 Meta Platforms 等科技巨头之间激烈的人才争夺战中。然而，套现的另一面是可能加速员工离职——财富自由后，他们或许选择创业，甚至直接「退休」。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;据报道，Anthropic 和 xAI 等年轻公司也安排了大规模员工股票出售。AI 云服务提供商 CoreWeave 也在 2023 年和 2024 年举行了两次大型二级股票出售，创始人和其他股东向富达、贝莱德和 Coatue Management 等投资者出售了总计 13 亿美元的现有股票。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 面临的竞争压力尤为严峻，前 CTO Mira Murati 创立的 Thinking Machines Lab 等新兴力量正在分流&lt;span&gt;顶尖&lt;/span&gt;研究人才。股权套现虽然短期内缓解了员工的经济焦虑，但长期来看，能否留住核心团队，仍是公司必须直面的挑战。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355173</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355173</guid>
      <pubDate>Sun, 11 May 2025 05:41:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Ubuntu 25.10 的 GNOME 桌面环境停止支持 X11</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Ubuntu 桌面团队成员 Jean Baptiste Lallement &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fubuntu-25-10-drops-support-for-gnome-on-xorg%2F62538" target="_blank"&gt;宣布&lt;/a&gt;，计划今年 10 月发布的 Ubuntu 25.10 将针对桌面环境进行一项重大变化——&lt;strong&gt;移除基于 Xorg 的 Ubuntu 会话&lt;/strong&gt;。从该版本开始，GDM 中的「Ubuntu」会话将仅在 Wayland 上运行。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height="922" src="https://static.oschina.net/uploads/space/2025/0613/115133_dRB8_2720166.png" width="1594" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;GNOME 项目已计划在 GNOME 49 中移除对 X11 的支持，而 GNOME 49 计划于 9 月发布，Ubuntu 此举旨在未雨绸缪，为下个 LTS（长期支持）版本 Ubuntu 26.04 做好准备。&lt;/p&gt; 
&lt;p&gt;Jean Baptiste Lallement 写道：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;在过去的几个周期中，Wayland 的体验已显著成熟，包括改进了对 NVIDIA 驱动程序的支持，提供了更强大的安全模型，对大多数日常工作流程提供了稳定的支持，更好的图形堆栈隔离以及改进了触摸和 hiDPI 支持。&lt;/p&gt; 
 &lt;p&gt;同时，同时维护 X11 和 Wayland 会话会带来技术负担并增加维护负担，从而限制了我们高效创新的能力。GNOME 计划在 GNOME 49 中移除 Xorg 支持。我们将在 25.10 中采取积极措施，以便在截止日期之前为我们的用户和生态系统做好准备。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Ubuntu 25.10 是 26.04 前的一个过渡版本，让 25.10 和 26.04 保持一致有助于减少碎片化，让开发者和用户有更多时间准备和适应。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;相关阅读：&lt;a href="https://www.oschina.net/news/351239" target="news"&gt;Fedora 43 GNOME 桌面将取消对 X11 会话的支持&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355165/ubuntu-25-10-drops-support-for-gnome-on-xorg</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355165/ubuntu-25-10-drops-support-for-gnome-on-xorg</guid>
      <pubDate>Sun, 11 May 2025 03:59:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>得物研发自测 &amp; 前端自动化测试体系建设</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;一、背景 &amp;amp; 现状&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在得物技术团队双周迭代模式下，前端自动化测试体系的建设已成为提升研发效能的关键突破口。当前技术部门推行研发自测的核心诉求，其核心诉求在于通过建立可信的质量保障机制释放测试资源，以此承接更多的业务需求，提升需求吞吐率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;双周迭代的机制对研发流程提出了双重挑战：&lt;strong&gt;既要保障两周内完成需求开发、测试验证到交付上线的完整闭环，又需保障研发交付的代码质量稳定可靠且经过充分的测试验证。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;服务端已通过流量回放、代码覆盖率检测等成熟方案构建质量护城河。我们统计了各个前端业务域在 2025 年 Q1 中的自测率，服务端实际自测率为：&lt;strong&gt;24.45%&lt;/strong&gt;，而前端的实际自测率仅有：&lt;strong&gt;15.35%&amp;nbsp;&lt;/strong&gt;。因此，在完成技术部研发自测率&lt;strong&gt;25%&lt;/strong&gt;&amp;nbsp;的目标的情况下，前端是一个较大的短板。而制约前端实际自测率提升的一个重要的因素就是缺乏像服务端流量回放和代码覆盖率检测技术这样的自动化代码质量保障技术，导致测试同学对于前端自测质量的置信度存疑，无法检测和衡量负责该需求的前端是否已经完成了足够详尽的自测。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;因此，如果需要提升前端的研发自测率，我们首先需要从这些质量保障技术出发，夯实地基，构建属于前端的质量保障护城河。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;二、意义何在&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;上面我们说了，目前得物的前端领域缺乏自动化代码的质量保障技术，我们想知道这些技术是否真的具有必要性呢？如果有了这些技术，真的能够带来研发效能的提升吗？要回答这个问题，首先需要分析一下各种质量保障方式的优劣：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//d3d52c62223e52c4ea3d5c1bf88439fa.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从上表的分析中，我们可以看到，不同的质量保障方式各有优劣，每种方式都有各自适合的场景，而研发自测场景和前端代码覆盖率相互结合，便可以解决前端研发自测置信度低的问题，再加上 E2E 自动化测试，就可以补充全量用例自动化回归的缺口。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;因此，补齐前端自动化测试能力对于提升研发自测比例有着相当大的正向作用。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;三、方案详情&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;正如上文所述，我们是通过补齐前端场景缺失的质量保障工具的方法作为支点撬动技术部研发自测比例的天平，让更多符合研发自测标准的需求既能进行研发自测释放测试资源，又能有一定的质量保障机制，确保前端交付代码的质量，稳定生产。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为了方便大家更加理解这个项目，我们将会从技术实现方向、运营方向、各域推广这几个方面具体聊一下在这个项目的具体操作原因和过程。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;技术方案&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//87a607389d9b04700b6a59f418cf6300.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//9a5c2212a3c705f7003be1d7f6d3489e.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;前端代码运行时覆盖率&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;插桩技术&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//cb68c9d264cac25f70684fe405281cc3.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;前端代码覆盖率检测最核心的点，就是需要想办法检测出我们修改的每一行代码（JS 代码）在运行时是否被执行过，只要想办法拿到这个数据，我们就可以在这个数据的系统上进行一定的清洗、整理、合并，来得到我们想要的前端代码运行时覆盖率的报告了。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;经过调研，想要知道某一行 JS 是否被运行过，其实市面上已经有比较成熟的方案了，例如：著名的 JS 前端测试框架 Jest 就是基于&lt;strong&gt;&amp;nbsp;istanbul&amp;nbsp;&lt;/strong&gt;对需要检测的代码进行&lt;strong&gt;插桩&lt;/strong&gt;并收集代码的运行数据。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;代码插桩&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;代码编译过程中，在代码的抽象语法树（AST）每个语句节点中插入特定代码，从而改变最终生成产物的一种非侵入性代码修正方案。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//351e9d0848fdafd4e410633f90673456.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// code.js
var&amp;nbsp;a =&amp;nbsp;1;
var&amp;nbsp;b =&amp;nbsp;2;
var&amp;nbsp;c = a + b;
var&amp;nbsp;d = a &amp;lt; b ? a : b;
function&amp;nbsp;test() {
&amp;nbsp;&amp;nbsp;return&amp;nbsp;a + b;
}
if&amp;nbsp;(Math.random() &amp;gt;&amp;nbsp;0.5) {
&amp;nbsp;&amp;nbsp;test();
}&amp;nbsp;else&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;console.log("done");
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;上述代码是一份简易版本的插桩 SDK 和测试代码段，通过左侧插桩逻辑处理右侧的代码后，我们就可以得到以下代码：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//1d093f6d9c8ae40e3ba2fa2d022f505a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;接下来我们在页面中进行测试，没有执行到的代码就可以被检测出来。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e82f171fbe82bc3127e3bc7955fe28c2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e15a2ab64f6bb16804b0fc7bd2c2407e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;当然，上述只是一个简易版的插桩代码，仅用于演示，如果要在实际项目中使用，可以考虑使用：&lt;strong&gt;&amp;nbsp;babel-plugin-istanbul&amp;nbsp;&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;有了插桩能力之后，SDK 剩下的逻辑就简单了，只需要按照一定规则收集相关的覆盖率报告并上报到指定服务器即可实现。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;覆盖率服务&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//0af1f78a46f2cb2604b99005f89607c0.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//6316b3f0e1ede2d8025abef2a8d69f97.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;覆盖率服务是整个前端代码覆盖率体系的核心，起到&lt;strong&gt;「承上启下」&lt;/strong&gt;的作用。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;上则与接入了覆盖率 SDK 的业务系统相通，接收各个业务系统的原始覆盖率数据，并进行清洗、整理、合并、存储的操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;下则与其他关联系统（覆盖率报告展示平台、覆盖率平台、发布平台、流水线等）连通，为各个关联系统提供核心覆盖能力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;覆盖率服务核心能力&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;收集处理报告：&lt;/strong&gt;&amp;nbsp;收集浏览器上报的测试覆盖率数据，按「应用」、「分支」、「Color」、「时间段」做数据合并和存储。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;版本发布处理：&lt;/strong&gt;版本发布后仅删除「当前应用 + 当前环境 + 当前分支」，改动文件的报告数据。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;覆盖率报告：&lt;/strong&gt;&amp;nbsp;覆盖率数据展示数据支持和备份能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;桥接覆盖率平台：&lt;/strong&gt;提供必要的接口，比如权限对接、报告管理、任务调度、流水线编排（发布拦截读取覆盖率平台指标）等交互。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;报告机器人：&lt;/strong&gt;通过报告机器人在特定时机通过飞书消息形式向特定群组发送覆盖率报告。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;覆盖率服务旨在实现「应用维度」，未来会支持「需求维度」、「人员维度」、「页面维度」的覆盖率：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//1616e70377cefbb7d871df077ed8560d.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//afb3b2767e616274c24fff34b4413878.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//cf64c7f933fecaf9b076ca32d109b3d7.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e62397cdb368208485f0ef41177800e9.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;报告展示&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//5430333e46c666d086a56b16f1b4a760.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//3398abf5e245417f61093d88b08b11a5.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//768f00d0e4e44bca19f0d24f6ab5ecd9.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为了让开发同学能够更加清晰且实时的知道哪一行代码没有被覆盖，我们提供了两种报告形式：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;实时覆盖率报告：&lt;/strong&gt;与&lt;strong&gt;Master&lt;/strong&gt;分支对比，得到测试分支与主干分支的差异，并过滤出增量变动代码的覆盖率情况，且报告是实时更新的，无需反复生成报告，测试完刷新即可查看最新覆盖情况。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;覆盖率报告快照：&lt;/strong&gt;每个版本准入和准出阶段，我们会保存一份覆盖率报告的快照，这个快照会固定与生成快照时的 commit 进行对比，生成之后不会改变，方便我们查看不同版本各个应用的覆盖率情况。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;此外，我们也支持目录维度的覆盖率情况，方便开发同学快速查看未覆盖代码的定位。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;目前，我们也支持&lt;strong&gt;「需求维度覆盖率报告」&lt;/strong&gt;、&lt;strong&gt;「人员维度覆盖率报告」&lt;/strong&gt;，将每行代码的改动与具体的需求和人员关联上，支持这个功能以后，我们可以更好地衡量某个需求的的代码测试质量，开发同学也可以利用人员维度的覆盖率报告更加高效地处理各自负责代码的未覆盖问题，提升自测和测试效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;覆盖率平台 &amp;amp; 协同流水线&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//383858fdee6a5b634ea4d8a5b916502a.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//0143f3186eb7e03747165a833986c9de.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;有了针对指定应用和环境生成覆盖率报告的基础能力后，我们就可以将我们的能力对接到覆盖率平台，这样可以借助覆盖率平台现有的管理能力：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;应用注册&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;环境管理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;报告管理&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任务管理&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;除此之外，我们还可以复用覆盖率平台与协同流水线之间现成的通信协议和能力，快速对接到协同流水线当中，实现需求、应用的「准入」和「准出」卡口，让覆盖率不达标的应用无法操作提测和上线，以此筑起质量保障的长城，为稳定生产保驾护航。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;E2E 自动化测试&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;上面我们简单聊了整个前端代码覆盖率的各个模块，细心的同学应该发现了，我们一直说的都是&lt;strong&gt;「增量代码覆盖率」&lt;/strong&gt;，但没有提到&lt;strong&gt;「全量代码覆盖率」&lt;/strong&gt;。难道全量代码覆盖率对我们来说可有可无吗？其实不然！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;上文我们主要聊的都是增量代码的场景，其原因是我们之前还不具备全量代码覆盖率收集的能力。很多同学可能会问了，代码覆盖率不是就是代码插桩收集吗？那全量和增量似乎也没区别呀，为什么增量可以实现，全量不行呢？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;其实，这并不是我们技术能力上达不到，而是我们不可能要求测试或开发同学每次测试都把这个系统回归一边，要知道，一个成熟的业务系统，动辄就是几十万行代码级别的，我们不可能依靠人工进行全量回归。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;所以，就到了另一个前端质量保障的主角登场了，那就是&amp;nbsp;&lt;strong&gt;「E2E 自动化测试」&lt;/strong&gt;，只要有了自动化测试的能力，只要录制（自动分析）一次，下次需求开发之后，就可以直接全量自动化回归了。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;关于 E2E 自动化测试是前端平台增长域的同学负责推进的，在这里就不过多展开 E2E 的技术细节了。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;推广方案&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;至此，我们已经大概地过了一遍整个前端自动化测试体系的技术方案了。但光是把东西做出来，如果没人用或者用户基数低，那么这些工具的 ROI 也是非常有限的。因此，我们借助技术部推行研发自测的契机，也制定了前端代码覆盖率体系的推广计划。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;应用接入&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 Q1 在实验域的应用内试点运行几个版本后，覆盖率相关功能已相对比较稳定，因此 Q2 正式开始在前端平台内部的其他业务域中推广，各个业务域根据各自应用的情况，按照以下标准对应用设定接入优先级。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;接入优先级&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;P0 应用：&lt;/strong&gt;应用可接入且优先级高（中后台类应用）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;P1 应用：&lt;/strong&gt;应用可接入但是相对优先级较低，或改动频率较低，对于收集覆盖率诉求不高。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;P2 应用：&lt;/strong&gt;应用不可接入或者暂不支持接入，未来考虑实现支持收集覆盖率功能。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为确保应用接入顺利，我们保证绝大部分应用可以开箱即用地接入 SDK，除了少数 RsPack 和 MF 架构的应用需要特殊接入外，其他应用的接入成本均相当低廉。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;统一标准&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;应用接入完成之后，各域的已接入应用就可以通过代码覆盖率来衡量研发自测的质量了，那么接下来就要正式对我们的终极目标&lt;strong&gt;「研发自测率」&lt;/strong&gt;发起进攻了。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;各个域对于「可研发自测需求」的颗粒度标准是参差不齐的，但如果要在技术部范围内将研发自测顺利的推行起来，方便后期统一出具相关报告，并根据情况调整科研发自测标准，那么，摆在我们面前的一个最大的难题就是：&lt;strong&gt;统一研发自测颗粒度标准&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在进行标准统一的讨论的过程中，我们也遇到了很多问题，其中反馈最多的问题就是：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;有些业务域一旦按照统一标准判定可自测需求的话，可自测需求池子就会比原先多出很多可自测需求，虽然可自测需求不代表必须自测，但也需要相关的研发同学和测试同学进行一定的沟通，确认该需求是否能够实际自测并打标，这会增加沟通成本。如果需要反复去 「需求管理平台」 筛选确认，效率太低。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;针对这种问题，我们前期通过脚本，按照最新标准将各业务域每个版本的应自测需求都导出到多维表格，并将可以辅助判断需求是否可以自测的一些信息（如当前需求名称、链接、预计是否可自测、实际是否自测、需求总估时[含测试]、需求总估时[不含测试]等）都一同导出，方便各域负责人快速确认（后期研发效能同学会统一开发相关研发自测的数据统计报表和需求明细，方便各域进行分析和确认）：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//fbb8d93996df4f80d735598f8eea4857.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;自测需求确认表&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;此外，我们还确定下来，由于各域的实操标准目前参差不齐，可自测需求可以统一标准。但各域实操时，还是按照各域现行标准实行，即目前这个阶段，我们仅扩大可自测需求的池子，但最终是否自测，还是按照各域实操标准来，后续再根据运营情况调整策略，逐步逼近目标。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;目标制定&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//fd7e8f3afc97f3b3d453070bdf167392.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们通过对前端平台各域 Q1 的自测数据进行分析，得到了当前各域的现状：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;实际自测率：&lt;/strong&gt;15.29%&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;可自测完成率：&lt;/strong&gt;42.22%&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;可见，无论是实际自测率还是自测完成率都是较低的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;基于这种现状，如果想要一蹴而就直接打到 25% 是不太可能的，因此，我们将战线拉长，分两个季度来逐步完成目标：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Q2：统一可自测标准、提升可自测完成率，通过自测完成率的提升带动实际自测率的提升，因此确定下来：Q2 自测率：&lt;strong&gt;21%&lt;/strong&gt;Q2 完成率：&lt;strong&gt;65%&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Q3：加强自测能力，提高可自测标准，通过扩大池子来整体提升自测率，因此确定下来：Q3 自测率：&lt;strong&gt;25%&lt;/strong&gt;Q3 完成率：&lt;strong&gt;80%&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以上为前端平台整体的目标，上面也说了，各域由于业务特性，存在不同的情况，如果一概而论，对于某些域来说难度堪比登天，对于某些域来说又是轻而易举。因此我们还针对各域 Q2 的现状，为各域量身定制的一套差异化目标：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;实际自测率：在高位，持续保持（30%）在中低位，但是空间大 （25%）在低位，空间有限的，取可自测率为目标&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;自测完成率：原本处于低位（9.52%）：设定特殊目标 25% 原本处于中位（27%～41%）：设定最低目标 65% 原本处于高位，在原基础上提升一定比例即可&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;需求研发自测影响因素分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在标准完成统一以及目标完成制定之后，我们进一步下钻数据，想要通过各版本的自测数据分析，找出可能影响研发自测率的因素。首先，我们先预设了几个可能影响研发自测的因素：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;需求全栈率：&lt;/strong&gt;由于全栈开发的目标需求也是简单的小颗粒度需求，跟研发自测的目标需求有一定重合，而如果一个需求是完全全栈的话，就不需要前端参与了，会导致需要前端参与的小颗粒度简单需求数量减少。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;全栈&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;即通过可视化配置的页面来替代人工源码开发的一种解决方案，若某个需求完全推行全栈策略，则无需前端参与，由服务端同学直接配置即可。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//cf698f7803dd62409ceebe6744382156.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;大颗粒度需求占比：&lt;/strong&gt;由于前端总体资源是相对固定的，一个版本中，如果大颗粒度需求比较多，那么前端能够承接的小颗粒度需求自然就会变少，从而导致前端整体可自测需求比较少，直接影响自测率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//26c14db50380bfad5a8e063c3d5671e6.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;小颗粒度需求占比：&lt;/strong&gt;有些版本，即使大颗粒度的版本不多，小颗粒度的需求也不见得会变多，需求有可能集中在不大不小的区间内，因此小颗粒度需求的多少也会影响到自测率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//7e7479a9c4d483d99596a617bb9433c4.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;版本平均颗粒度：&lt;/strong&gt;除了大颗粒度需求和小颗粒度需求外，整个版本的平均颗粒度的高低也会一定程度上影响到可自测需求的多少，通常来说，平均颗粒度越高，可自测需求就会相对越少，反之亦然。当然版本平均颗粒度并不会直接影响「实际自测率」，而是通过「可自测率」影响可自测需求池的大小，从而最终影响「实际自测率」。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;但由于是间接影响，中间可能受到「自测完成率」以及「额外自测需求数」等其他因素的影响，「版本平均颗粒度」和「实际自测率」之间，并不总是成负相关的关系，因此需要进一步下钻分析。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//5d78910cd0bf3b9b8a9ee86759d3c384.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//17c73c2b6965bcfd4a5c7b88219372a5.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//b76b2cf2387c5e69aeeb54eb2c890b7b.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//5c30b8be6f189073b68663f2d5ca2647.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;【平均颗粒度】【应自测率】：&lt;/strong&gt;通常成反比关系&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;【自测完成率】【实际自测率】：&lt;/strong&gt;通常成正比关系&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;纯前端需求占比：&lt;/strong&gt;根据过往数据分析，纯前端需求自测占比相较于非纯前端需求自测占比会高很多，因此，一个迭代当中，纯前端需求的多少也会影响自测率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//62ad27891862a4f8a5343020a9704b33.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;版本周期：&lt;/strong&gt;受到各种节假日的影响，得物每个迭代周期可能都不太一样，如 567 由于有五一假期，因此该迭代周期为 13 天，而 569 由于有端午假期，版本周期只有 9 天。版本周期不一样，能够承接的需求数量、难易程度、颗粒度也都会有差异，也会影响自测率。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;独立项目占比：&lt;/strong&gt;目前很多域都有不断提升独立项目在迭代需求中的占比的趋势，由于项目管理相对独立，且存在需求庞大，时间周期长，基本不可能自测的特点，如果一个版本中独立项目的占比提升了，那么势必会挤占正常迭代需求的时间，导致可承接的需求数量变小，可研发自测的需求也会变小，影响自测率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//12f35b14cf60d65f901d77b9a00a6ccc.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;基于上述的集中可能影响研发自测的因素，我们拉取了 560～568 的 9 个版本的迭代数据进行了细致分析。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从数据分析中我们发现，版本周期和独立项目占比对需求自测率占比的影响是比较明显的，通常版本周期变长，自测率会提升，反之则降低。而独立项目占比提升通常会导致自测率降低，反之提升。其他条件没有太明显的有规律变化，但不代表他们不会对自测率造成影响，应该是还有一些其他未知因素暗中影响导致的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;因此，我们后续推进时，可以重点关注一下版本周期和独立项目两个影响因素，其他因素也可以看情况加强关注。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_6"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;运营方案&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;工具开发好了不代表就完事了，如果不用心去运营的话，肯定也是无法达到技术部 25% 的需求研发自测目标的，我们需要一个详尽的运营策略持续跟进覆盖率的运营。当覆盖率有保障了，才能够提升前端自测置信度，让测试放心将更多的小颗粒度需求给研发测试。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;简单来说我们会在每个版本需求提测之前，要求负责需求开发的研发在指定环境完成自测，如果未自测或自测不达标，可以直接通过「前端代码覆盖率」工具监控出来并实时提醒。在需求上线之前，我们也会观察待上线应用的准出代码覆盖率情况，用来衡量或辅助判定测试是否充分，是否存在漏测场景，以此保证生产质量和稳定。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_7"&gt;&lt;/span&gt; 
&lt;h1&gt;四、现阶段成果&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//8c33ccae8fcb98a4bb45c5b604a1e2bc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;基础能力&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;完成了包括应用维度覆盖率、实时覆盖率报告、覆盖率报告快照、覆盖率准出卡口等基础能力的建设，初步搭建起了前端代码覆盖率体系。Q2 预计完成需求维度覆盖率报告、人员维度覆盖率报告、自动化报告推送机器人等能力。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;应用接入情况&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们在 Q2 进行了一次集中的各域应用接入，接入完成率达 126.67%，远超预期。虽然后续不会再集中接入了，但还会逐渐单独接入其他支持应用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//67e0477c5d489e95bb9d41b6b5639dd9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;接入应用数和生成报告情况&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_10"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;覆盖率运营&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们对接入的部分应用代码覆盖率进行了抽样统计和分析：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//e02cb9fca68644c0716b852317ab7afc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从覆盖率数据上来看，统计的应用在正式启动运营之后，相较于 566 有较大幅度的提升，无论是准入覆盖率还是准出覆盖率都远远超出了目标标准，其中平均准入覆盖率为：&lt;strong&gt;78.58%&lt;/strong&gt;，准出覆盖率为：&lt;strong&gt;87.06%&lt;/strong&gt;（准入目标：60%，准出：80%）。可见只要我们运营得当，主动推进，是能够得到直接的正向反馈的。但从代码覆盖率来说，先不说覆盖率的提升对于研发自测率的影响，就单是对于前端代码交付质量的提升的收益而言，已经比较喜人了。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_11"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;研发自测&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们抽样查看了实验业务域的研发自测情况，我们可以看到，实验域实际自测率已经超出了 Q1 的目标（21%）3 个百分点，可见实际投入运营后给研发自测率带来的正向效果。（当然，每个版本受限于一些不可控因素，如：需求特性、版本周期、独立项目占比等影响，数据会有一定程度的波动，我们每个版本需要通过数据下钻分析原因，保证顺利向目标进发）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//6d73281d3a9da75e797385c827ddbd19.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_12"&gt;&lt;/span&gt; 
&lt;h1&gt;五、未来规划&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//2cc37e4002d19724c0d3f0ae627d41b9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们在 Q1 和 Q2 分别完成了「基础能力建设」「研发自测标准化&amp;amp;全域项目试点运营」，基础能力和标准都已经确定下来了，那么后续我们就要从以下两个方向努力了：&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_13"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;构建质量保障矩阵&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//53d83ba224a8ba8ef2e3123effae8a27.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们当前已经支持了中后台应用的代码覆盖率检测了，已经支持了公司内部很大一部分的前端应用，但 C 端应用和 NodeJs 应用也占了不小的比重，后续需要补齐这一部分能力，让代码覆盖率将这一部分应用都囊括进来，整体提升前端项目的交付质量。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//84b5de12fdff5aba3d8833d761403ccc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;除此之外，我们也会进一步联动 E2E 自动化工具和影响面评估工具，进一步提升测试完整度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;此外，我们还可以通过支持覆盖率评论、页面维度覆盖率报告、AI 智能推荐最佳测试路径、以及影响面评估工具等，提升研发和测试快速精准地找到漏测页面和潜在风险点，提升自测和测试效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在测试质量方面，我们打算利用 AI 能力，分析 PRD 并生成核心自测用例，补齐研发自测没有测试用例这一短板，提升研发自测的测试质量。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_14"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;覆盖率数据精细化运营&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;通过搭建前端代码覆盖率大盘，观测各域各应用以及前端平台全域的覆盖率变化曲线，针对覆盖率较低的业务域和应用，进行专项推进与提升，整体提升前端平台接入应用的交付质量。并通过机器人告警等方式实时通知未达覆盖率最低标准应用的覆盖率情况，针对性分析需求、人员因素的影响。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;通过对各域覆盖率、自测率等核心指标的精确分析，不断的优化推行策略和运营策略，可以更早地发现我们在推进的过程中遇到的阻碍和瓶颈，提前制定合适的备案，保障完成最终目标。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_15"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;常态化运营&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在完成了所有的能力建设后，我们就需要针对每个版本的需求进行精细化运营了。每个版本迭代结束，及时对上个版本的数据进行复盘和分析，看一下有哪些地方没做好，导致原本可以研发自测的需求，最终没有自测。并根据上一个 Q 的运营情况，实时调整研发自测的标准和各域的差异化目标，确保研发自测的正常健康推进。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_16"&gt;&lt;/span&gt; 
&lt;h1&gt;六、结语&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在数字化进程加速的产业背景下，前端工程的质量保障已从单一功能验证演进为体系化工程实践。上文通过技术架构、运营机制、推广策略三个维度，系统解构了我们在推进前端自动化测试体系的建设路径与研发自测的实践价值，为前端构建起质量护城河，提升前端代码交付质量，并以此撬动研发自测的杠杆，向着整体提升需求吞吐率的目标发起冲锋。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;作为现代前端工程师，质量保障责任不能完全委托于测试团队。有研究表明，经过严格自测的代码提测后无论是缺陷密度还是代码回滚率都会有较大幅度的下降。前端开发者通过浏览器中对于功能的详尽自测，能够深度理解业务逻辑边界条件；在覆盖率报告分析过程中，可常发现未覆盖的异常分支或冗余代码，这对代码可维护性提升具有显著价值。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;通过覆盖率报告建立个人/需求质量档案，持续跟踪自测覆盖率、缺陷引入率等指标，遇到问题时能够精准快速溯源，快速判断 Bug 逃逸原因是否是因为功能点漏测导致的。之前曾看过这样一句话：&lt;strong&gt;"优秀的代码不仅是能运行的代码，更是经得起反复验证的代码"&lt;/strong&gt;，这种严谨的工程态度正是专业开发者的核心素养。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;通过上述体系建设，可使前端质量保障从被动发现转向主动检测&amp;amp;防御，从个体实践升级为团队能力，最终实现研发效能与产品质量的双重提升。这既是应对复杂前端工程的必然选择，也是项目在高速迭代过程中保障交付代码质量，稳定生产的关键路径。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;1.&lt;/span&gt;从 CPU 冒烟到丝滑体验：算法 SRE 性能优化实战全揭秘｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;2.&lt;/span&gt;得物自研 DScript2.0 脚本能力从 0 到 1 演进&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;3.&lt;/span&gt;社区造数服务接入 MCP｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;4.&lt;/span&gt;CSS 闯关指南：从手写地狱到「类」积木之旅｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;5.&lt;/span&gt;从零实现模块级代码影响面分析方案｜得物技术&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;文 / 康辉&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;关注得物技术，每周更新技术干货&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18619454</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18619454</guid>
      <pubDate>Sun, 11 May 2025 03:53:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Go 1.25 新功能</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h2&gt;&lt;strong&gt;&lt;span&gt;Go 1.25 概览&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go 1.25 标志着 Go 语言向前迈出了重要一步，其核心在于提升性能、优化开发者体验以及增强云原生就绪能力。此次发布在工具链、运行时、编译器和标准库等多个方面引入了一系列增强功能，旨在使 Go 应用程序更快、更高效，并更易于开发和部署，尤其是在容器化环境中。它还凸显了对安全性的承诺以及语言规范的持续完善。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;本次发布围绕以下关键主题展开：性能优化、增强型开发者工具、云原生就绪、安全强化以及语言成熟度。以下表格概述了 Go1.25 的主要亮点，为繁忙的专业人士提供了快速参考，以便立即了解最关键的变更。&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; visibility:visible; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;类别&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;特性/变更&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;简要描述&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;影响/益处&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;性能优化&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;实验性垃圾回收器 (greenteagc)&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;标记和扫描小对象性能提升，预计减少 0-40% GC 开销&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;降低运营成本，提升应用吞吐量和降低延迟&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;工具增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go vet&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;新分析器&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升代码质量，帮助发现常见并发和网络地址构建错误&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;并发/测试&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;包&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提供测试并发代码的支持，包括伪造时钟和 goroutine 等待机制&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;编写更可靠、确定性的并发应用测试&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;云原生&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;容器感知&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;在 Linux 上自动根据 cgroup CPU 限制调整&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并动态更新&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;优化容器资源利用，减少 CPU 节流，提升云环境性能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全强化&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;TLS SHA-1 禁用&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;TLS.2 握手默认禁用 SHA-1 签名算法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强默认安全态势，符合行业最佳实践&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;语言/运行时精炼&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;DWARF v5 调试信息&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;编译器和链接器生成 DWARF v5 调试信息&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;减少调试信息大小，缩短大型二进制文件的链接时间&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;平台&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;macOS2+ 要求&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Go.25 要求 macOS2 Monterey 或更高版本&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Darwin 用户需要升级操作系统才能使用 Go.25&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;Go 1.25 简介&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 是 Go 编程语言即将发布的版本，预计于 2025 年 8 月推出。此次发布延续了 Go 的演进，在先前版本的基础上，着重于核心组件的精炼和开发者体验的提升。它表明 Go 语言已趋于成熟，并积极应对当代软件开发中的挑战，尤其是在性能敏感和云原生领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;本次发布展现了一种平衡的方法，既引入了重要的新功能（如实验性垃圾回收器和 JSON v2），又完善了现有功能（工具、运行时优化、标准库改进）。明确呼吁社区对实验性功能提供反馈，这突显了 Go 协作的开发模式。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;语言变更&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 并没有对 Go 语言本身进行任何会影响现有 Go 程序的更改。然而，语言规范中「核心类型」的概念已被&lt;/span&gt;&lt;strong&gt;&lt;span&gt;移除&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;[1]&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;这一变化虽然不会影响现有的 Go 程序，但它反映了对语言规范本身的微妙而重要的完善。这表明 Go 团队持续致力于澄清和简化 Go 的正式定义，使其对语言实现者和高级用户来说更加精确和不含糊。语言规范对于编译器之间的一致性以及对语言的精确理解至关重要。移除一个概念并用更清晰的散文取代它，暗示了之前的定义可能存在模糊、混淆或不够精确的问题。这关乎于「精炼语言的定义」，而非其在实践中的语法或语义。这种做法表明，即使是基础文档也在不断改进，以提高清晰度和严谨性。这确保了语言在演进过程中保持良好定义，避免了因不够精确的规范而可能出现的未来歧义或不一致性。这最终使编译器开发者、语言研究人员以及任何需要深入理解 Go 正式结构的人受益。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;工具增强&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 在其工具链中引入了多项显著增强，旨在提升开发者效率、代码质量和项目管理能力。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Go 命令更新&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令获得了多项新功能和行为调整：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go build -asan&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;内存泄漏检测：&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span&gt;go build -asan&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项现在默认在程序退出时执行内存泄漏检测。如果 C 分配的内存未被释放且未被其他 C 或 Go 分配的内存引用，它将报告错误。此功能可以通过设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;ASAN_OPTIONS=detect_leaks=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;来禁用。这对调试 Go 程序中 C/C++ 互操作性问题（特别是使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;cgo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的程序）来说是一个重要的增强。C 语言分配的内存泄漏通常难以追踪。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;减少预构建工具二进制文件：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;Go 发行版将包含更少的预构建工具二进制文件。核心工具链二进制文件（编译器、链接器）仍将包含在内，但其他工具将由&lt;/span&gt;&lt;code&gt;&lt;span&gt;go tool&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;在需要时构建和运行。此项更改旨在减小 Go 发行版的大小，可能导致更快的下载速度和更小的安装占用空间。它将不常用工具的构建负担转移到按需进行。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;指令：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;新增的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;指令允许指定&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令在匹配&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;all&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;./...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等包模式时忽略的目录。这些被忽略的文件仍将包含在模块 zip 文件中。这提供了对&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令如何解释包模式的更细粒度控制，在大型仓库或单体仓库中尤其有用，因为某些子目录可能包含非 Go 代码或不打算用于通用包模式匹配的实验性模块。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;新的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项将为请求的对象启动一个文档服务器并在浏览器中打开。这极大地提升了开发者的体验，使得无需离开终端即可更快、更方便地浏览本地 Go 文档。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;go version -m -json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;选项：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;此选项将打印 Go 二进制文件中嵌入的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;runtime/debug.BuildInfo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;结构的 JSON 编码。它提供了一种以编程方式从已编译二进制文件中提取构建信息（如模块版本、Go 版本、构建标志）的方法，这对于自动化、CI/CD 流水线以及审计已部署应用程序而言具有不可估量的价值。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;子目录模块根支持：&lt;/span&gt;&lt;/strong&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令现在支持使用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;&amp;lt;meta name="go-import" content="root-path vcs repo-url subdir"&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;语法解析模块路径时，将仓库的子目录作为模块根。这增强了 Go 模块托管的灵活性，允许单个仓库包含多个模块，或模块位于大型项目的特定子目录中，这与常见的单体仓库模式相符。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包模式：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;新的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包模式匹配工作模块中的所有包（模块模式下的单个工作模块，或工作区模式下的工作区模块）。这简化了跨 Go 工作区中所有模块的操作，简化了诸如&lt;/span&gt;&lt;code&gt;&lt;span&gt;go test./work...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go build./work...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等命令。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;不再添加工具链行：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;当更新&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;文件中的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;行时，&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令将不再添加指定其当前版本的工具链行。这减少了&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;文件中的噪音和不必要的修改，简化了版本控制，并可能避免在升级 Go 版本时出现虚假差异。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;下表总结了 Go1.25 中引入的新&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令选项及其典型用例：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;选项&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;描述&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;用例/益处&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go build -asan&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;程序退出时默认执行内存泄漏检测&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;调试 CGo 内存泄漏，确保 C 分配内存的正确释放&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;允许指定&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令在匹配包模式时忽略的目录&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;管理大型单体仓库或包含非 Go 代码的复杂项目结构&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;启动请求对象的文档服务器并在浏览器中打开&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;快速本地文档查找，提升开发效率&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go version -m -json&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;以 JSON 格式打印 Go 二进制文件中嵌入的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;runtime/debug.BuildInfo&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;结构&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;自动化构建信息提取，方便 CI/CD 流水线和部署审计&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;包模式&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;匹配工作区中所有模块的包&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;简化工作区操作，如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go test./work...&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go build./work...&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Vet 分析器&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;go vet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令包含了两个新的分析器，进一步提升了代码质量检查能力：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;报告对&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;sync.WaitGroup.Add&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的错误调用位置。&lt;/span&gt;&lt;code&gt;&lt;span&gt;sync.WaitGroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;是常见的并发 bug 来源，如果&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Add&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;在&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Wait&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;之后或在可能在&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Wait&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;之后启动的 goroutine 中调用，就可能导致微妙的错误。此分析器有助于及早捕获此类错误。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;报告使用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;fmt.Sprintf("%s:%d", host, port)&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;构造&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;net.Dial&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;地址（不适用于 IPv6）的情况，并建议改用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;net.JoinHostPort&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。此分析器推广网络地址构造的最佳实践，确保 IPv6 兼容性并防止处理主机和端口组合时常见的错误。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;go vet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令新功能的持续增加，例如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;模式，表明 Go 团队对开发者生产力、代码质量以及支持日益复杂的项目结构（如单体仓库、微服务）的战略性投入。这些新工具直接为开发者提供了更强大的构建、调试和管理 Go 项目的能力。例如，&lt;/span&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器直接针对常见的陷阱和最佳实践，从而带来更健壮和安全的应用程序。这反映了一种主动预防常见错误的方法。同时，&lt;/span&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go version -m -json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;简化了日常任务，减少了摩擦并提高了效率。此外，&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、子目录模块根和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;模式明确解决了大型复杂项目和单体仓库中面临的挑战。这表明 Go 作为一种适用于企业级开发的语言正在走向成熟。这些发展趋势表明，Go 不仅在语言功能上取得进展，还在提供一个更全面、更具指导性且高度集成的开发环境，引导开发者采用惯用且健壮的解决方案，尤其是在项目规模和复杂性增长时。这有助于减轻开发者的认知负担，并提高整个生态系统的整体代码质量。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;运行时改进&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 在运行时方面进行了多项关键改进，旨在优化资源管理、提升性能以及增强调试能力。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;容器感知&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的默认行为发生了变化。在 Linux 上，运行时现在会考虑包含进程的 cgroup 的 CPU 带宽限制。如果此限制低于逻辑 CPU 数量，&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;将默认为较低的限制。这与 Kubernetes 的「CPU 限制」选项相对应，而非「CPU 请求」。在所有操作系统上，如果逻辑 CPU 数量或 cgroup CPU 带宽限制发生变化，运行时将定期更新&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。如果手动设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或通过&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GODEBUG&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;设置&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;containermaxprocs=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;updatemaxprocs=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;明确禁用，这些行为将自动禁用。运行时将为 cgroup 文件保持缓存的文件描述符，以支持读取更新的限制。这是在容器化环境（尤其是 Kubernetes）中运行 Go 应用程序的关键增强。它防止 Go 运行时在超出分配的 CPU 资源的情况下过度调度 goroutine，这可能导致 CPU 节流和性能下降。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新的实验性垃圾回收器 (&lt;/span&gt;&lt;code&gt;&lt;span&gt;greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;)&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go.25 引入了一个实验性垃圾回收器，其设计目标是通过更好的局部性和 CPU 可伸缩性来提高小对象标记和扫描的性能。预计它将使实际程序中的垃圾回收开销减少 0-40%。通过在构建时设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;可以启用此实验性 GC。鼓励用户尝试并就 GitHub 问题提供反馈。这代表了 Go 应用程序潜在的显著性能飞跃，特别是对于高对象分配率的应用程序。其「实验性」标签表明在广泛采用之前需要谨慎推出，并寻求社区验证。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;未处理的 Panic 输出变更&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;对于已恢复并重新 panic 的未处理 panic，其消息将不再重复 panic 值文本。例如，&lt;/span&gt;&lt;code&gt;&lt;span&gt;panic: PANIC [recovered]\n panic: PANIC&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;现在将打印&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;panic: PANIC [recovered, repanicked]&lt;/span&gt;&lt;/code&gt;&lt;span&gt;。这是一个虽小但有用的调试改进，使 panic 消息更清晰，减少冗余，特别是在复杂的错误恢复场景中。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Linux 上的 VMA 名称&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;在支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CONFIG_ANON_VMA_NAME&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;内核的 Linux 系统上，Go 运行时将使用上下文（例如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;[anon: Go: heap]&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）注释匿名内存映射。此功能可以通过&lt;/span&gt;&lt;code&gt;&lt;span&gt;GODEBUG=decoratemappings=0&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;禁用。此项功能通过在&lt;/span&gt;&lt;code&gt;&lt;span&gt;pmap&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;或&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等工具中提供更多上下文，增强了 Linux 上的调试和分析能力，从而更容易理解 Go 如何管理内存。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;运行时方面的变化，特别是容器感知的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和实验性的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，凸显了 Go 对优化现代部署环境和突破其性能极限的战略重点。这表明 Go 积极响应了云原生计算和高性能应用程序的需求。&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的变化直接承认了 Go 在 Kubernetes 等容器编排平台中的广泛使用。此前，Go 应用程序在受限容器中可能会过度利用 CPU，导致性能下降。这一变化「自动化」了最佳资源利用，减少了开发者或平台工程师手动调整&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的需求。这是 Go 应用程序向「Kubernetes 原生」迈出的重要一步。实验性垃圾回收器则展示了 Go 对其核心性能特征的持续投入。垃圾回收是影响延迟和吞吐量的关键组件。将开销减少 0-40% 是一个显著的进步，可能使 Go 对延迟敏感或高吞吐量的工作负载更具吸引力。其「实验性」性质以及呼吁反馈的做法，表明 Go 团队在引入可能具有颠覆性但极具益处的更改时采取了务实的方法，并依赖社区验证。这些运行时改进共同使 Go 在构建现代云基础设施中高性能、可伸缩和成本效益高的服务方面更具竞争力。它们解决了实际操作挑战，并为未来的性能提升铺平了道路。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;编译器创新&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 的编译器引入了多项改进，旨在提升调试体验、强制代码正确性以及优化运行时性能。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;DWARF 版本 5 调试信息&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器和链接器现在使用 DWARF 版本 5 生成调试信息。这减少了调试信息的空间占用并缩短了链接时间，尤其对于大型二进制文件而言。通过设置&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=nodwarf5&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;可以禁用 DWARF 5 的生成。这对开发者而言是一项技术性但影响深远的改进，特别是对于处理大型 Go 项目或调试复杂问题的开发者，它能带来更快的构建时间和更小的可调试二进制文件。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;Nil 指针检查修复&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器修复确保了 nil 指针检查能够及时执行。以前能够成功运行但却在检查错误之前使用了&lt;/span&gt;&lt;code&gt;&lt;span&gt;os.Open&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;结果的程序，现在将会 panic。解决方案是在生成错误语句后立即检查非 nil 错误。这对于「编写不正确」的 Go 代码来说是一个破坏性变更。它强制执行了 Go 惯用的错误处理模式，通过防止因未处理错误而导致的静默失败或意外行为，使应用程序更加健壮。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;切片的栈分配&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器现在可以在更多情况下为切片在栈上分配底层存储，从而提高性能。这可能会放大不正确使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;所带来的问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;bisect tool&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;配合&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;-compile=variablemake&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;可以帮助追踪这些问题，并且可以通过&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;-gcflags=all=-d=variablemakehash=n&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;关闭新的栈分配。这是一项性能优化，它利用栈分配来处理瞬时数据，从而减少堆压力和 GC 开销。然而，它也强调了不当使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;所固有的危险。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;编译器方面的变化，特别是 nil 指针检查修复和切片栈分配的扩展，表明 Go 团队同时致力于性能优化和代码正确性/安全性，即使这意味着为非惯用代码引入潜在的破坏性变更。nil 指针修复明确表明 Go 优先考虑正确和安全的代码，而不是对「有缺陷」代码的向后兼容性。它强化了立即进行错误检查的重要性，这是 Go 错误处理理念的基石。这最终会带来更可靠的应用程序。切片的栈分配是一项激进的优化。关于&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的警告至关重要；它强调了虽然 Go 追求性能，但它不会为了「安全」的 Go 代码而损害其内存安全保证。它隐式地不鼓励随意使用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;unsafe.Pointer&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并提供了调试工具以解决必须使用它的情况。这些变化表明 Go 正在通过强化其核心和优化其执行模型而走向成熟。这些变化表明 Go 语言在自信地演进，愿意为了长期稳定性和性能而强制执行更严格的正确性，即使这要求开发者调整其（可能存在缺陷的）现有实践。为栈分配问题提供调试工具也表明了在这些过渡期间支持开发者的承诺。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;链接器更新&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;链接器现在接受一个&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;-funcalign=N&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令行选项，用于指定函数入口对齐。默认值是平台相关的，并且没有改变。这是一项低级优化，主要与特定性能关键场景或平台特定要求相关，允许对二进制文件布局进行微调。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;标准库新增与修改&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go.25 对标准库进行了广泛的更新，引入了新包、增强了现有功能并改进了安全性。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包提供了测试并发代码的支持。其核心功能包括&lt;/span&gt;&lt;code&gt;&lt;span&gt;Test&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数，它在一个独立的「气泡」中运行测试，并为&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;time&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包函数提供一个伪造的时钟。此外，&lt;/span&gt;&lt;code&gt;&lt;span&gt;Wait&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数会等待当前气泡中的所有 goroutine 阻塞。这是 Go 开发者的一项重大新增功能，解决了长期以来测试并发逻辑的挑战。伪造时钟和 goroutine 等待机制使得对时间敏感和并发操作进行确定性测试成为可能，从而显著提高了并发 Go 应用程序的质量和可靠性。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;新的实验性&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 引入了一个实验性 JSON 实现，通过在构建时设置&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=jsonv2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;启用。它包含了&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;（&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的主要修订版）和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/jsontext&lt;/span&gt;&lt;/code&gt;&lt;span&gt;（更底层的 JSON 语法处理）。启用后，&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;将使用新的实现，其编组/解组行为保持不变，但错误文本可能有所改变。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;code&gt;&lt;span&gt;encoding/json&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;还获得了配置编组器/解组器的新选项。新的实现提供了显著的性能改进，尤其是在解码方面。更多细节可在 github.com/go-json-experiment/jsonbench 仓库中找到。鼓励用户使用&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=jsonv2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;测试其程序以检测兼容性问题，并就提案问题提供反馈。这对于 Go 中的 JSON 处理来说可能是一项变革性的改变，有望带来显著的性能提升。其实验性性质允许社区在完全集成之前提供反馈，以确保广泛的兼容性。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;&lt;span&gt;库的次要变更（按包分类）&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;标准库的许多现有包也得到了更新和增强。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;下表总结了标准库中按包分类的主要变更：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;包&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;变更描述&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;变更类型&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;影响/益处&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;archive/tar&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;Writer.AddFS&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;支持符号链接&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;更好地处理文件系统中的符号链接&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;引入&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;MessageSigner&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;接口和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;SignMessage&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;统一签名接口，提升加密操作的灵活性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto/ecdsa&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增低级编码函数和方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;简化 ECDSA 密钥的低级操作，减少对&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;math/big&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的依赖&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto/tls&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;SHA-1 签名算法在 TLS.2 握手默认禁用；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;ConnectionState.CurveID&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全/增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升 TLS 安全性，提供更多连接状态信息&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;crypto/x509&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;CreateCertificate&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;等函数接受&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;crypto.MessageSigner&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；&lt;/span&gt;&lt;code&gt;&lt;span&gt;SubjectKeyId&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;默认使用 SHA-256&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全/增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升证书创建的灵活性和安全性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/ast&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;部分函数和类型被弃用；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;PreorderStack&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;弃用/新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;现代化 AST 和解析器 API，提供更强大的语法树遍历能力&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/parser&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;ParseDir&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;函数被弃用&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;弃用&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;现代化解析器 API&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/token&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;FileSet.AddExistingFiles&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;方便向&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;FileSet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;添加现有&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;File&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;go/types&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;Var&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Var.Kind&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;LookupSelection&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升类型检查和变量分类能力&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;hash&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;XOF&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cloner&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;接口；所有&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Hash&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;实现均支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cloner&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能/增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;支持可扩展输出函数，方便哈希状态的复制&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;io/fs&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;ReadLinkFS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;接口&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;统一文件系统接口，支持符号链接读取&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;log/slog&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;GroupAttrs&lt;/span&gt;&lt;/code&gt; &lt;p&gt;&lt;span&gt;&amp;nbsp;创建组&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Attr&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；&lt;/span&gt;&lt;code&gt;&lt;span&gt;Record&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Source&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升结构化日志的灵活性和信息丰富度&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;net/http&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CrossOriginProtection&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;实现 CSRF 保护&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;安全&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;利用现代浏览器 Fetch 元数据增强 CSRF 防护&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;os&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Windows 异步 I/O 支持；&lt;/span&gt;&lt;code&gt;&lt;span&gt;Root&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;类型新增多项文件系统操作方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升 Windows 文件 I/O 性能；增强文件系统操作的灵活性和一致性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;reflect&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;TypeAssert&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;函数&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;减少类型断言时的内存分配，提升性能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;runtime&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;清理函数并发执行；&lt;/span&gt;&lt;code&gt;&lt;span&gt;SetDefaultGOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；&lt;/span&gt;&lt;code&gt;&lt;span&gt;GODEBUG=checkfinalizers=1&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;诊断&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强/调试&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升清理效率；更方便地设置&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOMAXPROCS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；增强终结器调试能力&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;runtime/trace&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;FlightRecorder&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;调试/诊断&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提供轻量级执行跟踪能力，方便捕获近期执行情况&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;sync&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;WaitGroup.Go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新功能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;简化 goroutine 的创建和计数管理&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;testing&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;T.Attr&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;等方法；&lt;/span&gt;&lt;code&gt;&lt;span&gt;Output&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法；&lt;/span&gt;&lt;code&gt;&lt;span&gt;AllocsPerRun&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;并发测试时 panic&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强/行为变更&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升测试日志的可读性；提供更受控的测试输出；避免并发测试中的不确定性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;unicode&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;CategoryAliases&lt;/span&gt;&lt;/code&gt;&lt;span&gt;；新增&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;Cn&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;LC&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;类别&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;提升 Unicode 字符分类的灵活性和完整性&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt;&lt;code&gt;&lt;span&gt;unique&lt;/span&gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;更积极、高效、并行地回收 interned 值&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;性能&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;减少内存膨胀，提升内存回收效率&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;标准库的广泛更新，特别是&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和实验性的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;encoding/json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;包，以及&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;crypto/tls&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;crypto/x509&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;中的安全强化，表明 Go 团队持续致力于为常见编程任务提供一流、经过实战检验的原语，同时积极解决性能瓶颈和安全漏洞。&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;直接回应了可靠测试并发代码的难题，而这正是 Go 中常见的错误来源。这表明 Go 致力于改善其核心并发模型的「开发者体验」。&lt;/span&gt;&lt;code&gt;&lt;span&gt;json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的实验性引入表明，即使是标准库中成熟且高度优化的部分，如果能够实现显著的性能提升，也可能进行基础性的重新架构。这显示了一种务实的持续优化方法。在 TLS.2 中禁用 SHA-1 是一项主动的安全措施，符合行业最佳实践。这确保了 Go 应用程序默认是安全的，推动整个生态系统采用更强的加密衞生。无数的次要更改（例如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;io/fs.ReadLinkFS&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;os.Root&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;方法、&lt;/span&gt;&lt;code&gt;&lt;span&gt;sync.WaitGroup.Go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;reflect.TypeAssert&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）反映了持续完善 API、添加便利函数以及适应现代范式（如&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;io/fs&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;用于文件系统抽象）的过程。这确保了标准库保持最新、符合人体工程学且全面。标准库仍然是 Go 吸引力的基石。这些更新强化了其作为构建各种应用程序的健壮、高性能和安全基础的作用，并明确关注满足开发者需求和适应不断变化的技术格局。&lt;/span&gt;&lt;code&gt;&lt;span&gt;json/v2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;的实验性也突显了 Go 开放和迭代的开发过程，邀请社区参与核心组件的塑造。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;端口和平台特定性&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go1.25 在平台支持方面进行了调整，以适应不断变化的操作系统和硬件生态系统。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Darwin&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: Go1.25 要求 macOS2 Monterey 或更高版本；对先前版本的支持已停止。这对使用旧版 macOS 的开发者来说是一个破坏性变更，需要升级操作系统才能使用 Go.25。这与 Apple 快速的操作系统更新周期保持一致。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: Go1.25 是最后一个包含 32 位 windows/arm 端口（&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOOS=windows GOARCH=arm&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）的版本，该端口将在 Go1.26 中移除。这标志着一个使用较少的端口被弃用并最终移除，从而使 Go 团队能够将资源集中在更广泛采用的平台上。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;RISC-V&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;: linux/riscv64 端口现在支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;构建模式。&lt;/span&gt;&lt;code&gt;&lt;span&gt;GORISCV64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;环境变量接受&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;rva23u64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;来选择 RVA23U64 用户模式应用程序配置文件。这表明 RISC-V 架构的持续成熟和更广泛的支持，特别是在动态加载场景和特定应用程序配置文件方面。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;下表总结了 Go1.25 中与平台相关的变更和弃用：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:left; width:637px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;平台&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;变更&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
   &lt;th style="height:auto; text-align:left"&gt; &lt;p&gt;&lt;span&gt;影响/含义&lt;/span&gt;&lt;/p&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Darwin&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Go1.25 要求 macOS2 Monterey 或更高版本&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;macOS 用户需要升级操作系统才能使用 Go1.25&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Windows&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;Go1.25 是最后一个包含 32 位 windows/arm 端口的版本，Go1.26 将移除&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;使用 32 位 Windows ARM 的开发者需规划迁移&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;RISC-V&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;linux/riscv64 端口支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;构建模式；&lt;/span&gt;&lt;code&gt;&lt;span&gt;GORISCV64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;支持&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;rva23u64&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;配置文件&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:rgba(204, 204, 204, 0.4); border-radius:0px; border-style:solid; border-width:1px; height:auto"&gt; &lt;p&gt;&lt;span&gt;增强 RISC-V 架构支持，特别是动态加载和特定应用配置文件&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;平台特定的变化反映了 Go 对支持不断发展的硬件和操作系统生态系统的务实方法：优先支持广泛采用和现代的平台，同时战略性地淘汰使用较少或遗留的平台，并积极投资于 RISC-V 等新兴架构。macOS 的要求是软件开发中的常见模式，与操作系统供应商的支持周期保持一致。放弃 32 位 Windows ARM 是一个战略决策，旨在将开发资源从维护一个利基平台中解放出来，从而能够专注于更具影响力的领域。这表明 Go 在平台支持方面采取了精益高效的方法。对 RISC-V 的持续投入，特别是添加&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;plugin&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;支持（动态链接），是一个重要的信号。RISC-V 是一种新兴架构，在各个领域（嵌入式、数据中心）的应用日益增多。Go 对其早期而强大的支持使该语言在未来的硬件趋势中处于有利地位。Go 的平台策略是动态且响应迅速的。它平衡了广泛兼容性的需求与将资源集中在主要和新兴平台上的效率。这确保了 Go 在最重要的计算环境中保持相关性和高性能，同时也就支持遗留或利用较少的平台做出了务实决策。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;结论&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go&amp;nbsp;1.25 是一次全面的发布，显著提升了 Go 语言在性能、工具和运行时方面的能力。它巩固了 Go 作为一种健壮、高效且对开发者友好的语言的地位，尤其适用于现代云原生应用程序和高性能服务。此次发布展现了对持续改进、安全性和社区驱动演进的明确承诺。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;对于 Go 开发者，以下是建议：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;审查代码以应对 Nil 指针修复：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;立即检查&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;os.Open&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和类似返回错误的函数，确保正确的错误处理，以避免程序 panic。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;探索实验性功能：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;在非生产环境中积极测试&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=greenteagc&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;GOEXPERIMENT=jsonv2&lt;/span&gt;&lt;/code&gt;&lt;span&gt;，并提供反馈。这些功能可能在未来带来重大变革。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;利用新工具：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;将新的&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;go&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;命令功能（&lt;/span&gt;&lt;code&gt;&lt;span&gt;go.mod ignore&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;go doc -http&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;work&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;模式）和&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;vet&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;分析器（&lt;/span&gt;&lt;code&gt;&lt;span&gt;waitgroup&lt;/span&gt;&lt;/code&gt;&lt;span&gt;、&lt;/span&gt;&lt;code&gt;&lt;span&gt;hostport&lt;/span&gt;&lt;/code&gt;&lt;span&gt;）集成到开发工作流程中，以提高生产力并改善代码质量。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;适应平台变更：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;注意 macOS 版本要求以及 32 位 Windows ARM 即将弃用的情况。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;利用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;对于包含并发代码的项目，采用&amp;nbsp;&lt;/span&gt;&lt;code&gt;&lt;span&gt;testing/synctest&lt;/span&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;来编写更可靠和确定性的测试。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;span&gt;遵循安全最佳实践：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;注意 TLS.2 中默认禁用 SHA-1，并确保您的应用程序遵循现代加密标准。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#635753; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Go&amp;nbsp;1.25 强化了 Go 语言在更高性能、增强开发者体验以及与云基础设施更深度集成方面的发展轨迹。对实验性功能和社区反馈的重视表明，Go 将在实际使用和性能需求的驱动下继续快速发展，同时保持其简洁和高效的核心原则。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;参考资料&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style="color:rgba(99, 87, 83, 0.6)"&gt;&lt;span&gt;[1]&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;移除:&amp;nbsp;&lt;/span&gt;&lt;em&gt;&lt;span&gt;https://tip.golang.org/blog/coretypes&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355162/go-1-25</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355162/go-1-25</guid>
      <pubDate>Sun, 11 May 2025 03:51:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>v0.dev 上线「设计模式」，支持手动调整 AI 生成的 UI</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Vercel 旗下 AI 前端开发工具 v0.dev 近日&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fv0%2Fstatus%2F1932892095565660490" target="_blank"&gt;推出&lt;/a&gt;&lt;/u&gt;了全新的「设计模式」（Design Mode）。该功能允许用户在 AI 生成 UI 界面后，直接在浏览器中进行手动的、可视化的调整，而无需再次通过与大语言模型（LLM）的交互来修改。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0613/112902_49gH_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在设计模式下，用户可以快速调整文案、字体排版、页面布局、配色风格等多种元素，并实时预览效果。这一过程不消耗积分，也无需等待 LLM 响应。该模式原生支持 Tailwind 和 shadcn，为开发者提供了更高效、更灵活的 UI 调整方式。&lt;/p&gt; 
&lt;p&gt;具体功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;快速调整你的生成内容，包括文案、字体排版、页面布局、配色风格等。&lt;/li&gt; 
 &lt;li&gt;实时预览效果，满意后再保存。&lt;/li&gt; 
 &lt;li&gt;无需消耗积分或等待大语言模型（LLM）响应，即调即看。&lt;/li&gt; 
 &lt;li&gt;原生支持 Tailwind 和 shadcn，设计体验更加顺畅。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;体验地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv0.dev%2F" target="_blank"&gt;https://v0.dev/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355159/design-mode-on-v0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355159/design-mode-on-v0</guid>
      <pubDate>Sun, 11 May 2025 03:32:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Visual Studio Code 1.101 发布</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;Visual Studio Code 1.101 现已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101" target="_blank"&gt;发布&lt;/a&gt;，&lt;span style="background-color:#ffffff"&gt;此版本包含多项更新。具体更新内容如下：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;MCP&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;通过对提示、资源和采样的支持来扩展你的代理编码流程（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-support-for-prompts" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;访问需要身份验证的 MCP 服务器（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-support-for-auth" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;使用开发模式调试 MCP 服务器（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-development-mode" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;从扩展发布 MCP 服务器（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_mcp-extension-apis" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Chat&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;通过将相关工具组合到一个工具集中来进行分组和管理（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_chat-tool-sets" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="257" src="https://oscimg.oschina.net/oscnet/up-239806a51864e70636e2bf840d8545b42fe.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Source Control&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在 Source Control Graph 视图中查看文件（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_source-control-history-item-details" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
   &lt;li&gt;在 VS Code 内部分配和跟踪 GitHub Copilot Coding Agent 的工作（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101%23_copilot-coding-agent-integration" target="_blank"&gt;显示更多&lt;/a&gt;）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_101" target="_blank"&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355157/vs-code-1-101-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355157/vs-code-1-101-released</guid>
      <pubDate>Sun, 11 May 2025 03:14:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>AMD 公布下一代 AI 芯片，OpenAI 将成为首批用户</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;今天凌晨，AMD 举办了 2025 全球 AI 发展大会，介绍最新 AI 芯片和云基础硬件设备。&lt;/p&gt; 
&lt;p&gt;OpenAI 联合创始人兼首席执行官 Sam Altman 作为特邀嘉宾出席了本次大会，并与 ADM 联合发布了 Instinct MI400、Instinct MI350 系列超强 AI 芯片。尤其是在研发的过程中，OpenAI 一直为 AMD 提供技术反馈，帮助其优化 GPU。&lt;/p&gt; 
&lt;p&gt;在 MI 400 系列芯片上市后，OpenAI 还将成为该系列产品的首批用户。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0613/110206_xZpf_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;会上，Altman 直呼「令人惊叹」：「第一次得知芯片规格时，我感觉不可能，这听起来十分疯狂。」&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;具体来看：&lt;/p&gt; 
&lt;p&gt;AMD Instinct MI400 系列&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AMD 下一代旗舰 AI 芯片；将作为全新 AI 服务器「Helios」的核心硬件。&lt;/li&gt; 
 &lt;li&gt;预计搭载最高 432GB 的 HBM4 高速显存。&lt;/li&gt; 
 &lt;li&gt;FP4 精度下可达 40 PFLOPS 的算力。&lt;/li&gt; 
 &lt;li&gt;配备 300GB/s 的 scale-out 带宽，通过 UALink 开放标准技术实现 72 个 GPU 无缝互联，使整个「Helios」内的 GPU 能作为统一计算单元协同工作。&lt;/li&gt; 
 &lt;li&gt;MI400 预计将在 2026 年上市。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AMD Instinct MI350 系列&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基于 AMD CDNA 4 架构打造，拥有 MI350X 和 MI355X 两个版本。&lt;/li&gt; 
 &lt;li&gt;MI355X 在 FP4 性能上达到了 161 PFLOPS，而 MI350X 则在 FP16 性能上达到了 36.8 PFLOPS。&lt;/li&gt; 
 &lt;li&gt;提供灵活的冷却配置：支持风冷和液冷，允许大规模部署。&lt;/li&gt; 
 &lt;li&gt;AMD 表示，得益于 MI350 系列相较于竞争对手功耗更低，MI355X 每美元可以提供比英伟达芯片多 40% 的 token。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AMD CEO 苏姿丰还表示，MI400 系列的竞争对手将会是英伟达的「Vera Rubin」AI 芯片。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355155/amd-mi400-ai-chips-openai-sam-altman</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355155/amd-mi400-ai-chips-openai-sam-altman</guid>
      <pubDate>Sun, 11 May 2025 03:07:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌首次增设「首席 AI 架构师」职位</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.semafor.com%2Farticle%2F06%2F11%2F2025%2Fgoogle-names-new-chief-ai-architect-to-advance-developments" target="_blank"&gt;据外媒报道&lt;/a&gt;，当地时间周三，谷歌宣布在公司高层增设&lt;strong&gt;「首席 AI 架构师 (chief AI architect)」&lt;/strong&gt;一职，继续加码人工智能战略，并将 AI 技术更广泛地融入旗下产品。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1282" src="https://static.oschina.net/uploads/space/2025/0613/104434_CKko_2720166.png" width="1202" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;新任高级副总裁由谷歌 DeepMind 首席技术官 Koray Kavukcuoglu 担任，公司确认该任命后表示，他将直接向 CEO Sundar Pichai 汇报。&lt;/p&gt; 
&lt;p&gt;据悉，Koray Kavukcuoglu 在攻读计算机博士学位时曾是 Meta 首席科学家杨立昆的门下弟子，后加入 DeepMind，随着收购合并进入谷歌工作。谷歌 CEO Sundar Pichai 的备忘录中说 Koray Kavukcuoglu 将「加速世界领先模型与产品的整合，实现更无缝的集成、更快的迭代和更高的效率」，可以看出谷歌对这一任命寄予厚望。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355150/google-names-new-chief-ai-architect-to-advance-developments</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355150/google-names-new-chief-ai-architect-to-advance-developments</guid>
      <pubDate>Sun, 11 May 2025 02:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>360 发布纳米 AI 超级搜索智能体</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;360&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpoSBmQkaUsDOW6EUfxp9Tw" target="_blank"&gt;发布&lt;/a&gt;了国内首个「超级搜索智能体」——纳米 AI 超级搜索智能体。相对于传统搜索引擎和现有的其他 AI 搜索产品，纳米 AI 超级搜索智能体可以实现简单问题多模态结果输出、回答复杂问题、执行复杂任务多种能力。&lt;/p&gt; 
&lt;p&gt;&lt;img height="853" src="https://static.oschina.net/uploads/space/2025/0613/102819_UY3h_2720166.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;作为国内首个基于超级智能体技术改造的搜索产品，纳米 AI 超级搜索智能体仅需用户提出需求，便可依托超级智能体能力理解用户意图，打破各平台的「信息围墙」，直接调用复杂工具，全流程自动执行为用户交付答案。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d9aa2c4e3e569d9406c688432fee9406cc4.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;360 集团创始人周鸿祎表示，之所以选择用智能体重塑和改造搜索，是因为智能体已成为 AI「下半场」的主角。&lt;/p&gt; 
&lt;p&gt;而经过超级智能体改造的纳米 AI 超级搜索智能体，作为第三代 AI 搜索，既升级了原有的答案引擎，也引入了任务引擎概念，标志着搜索技术从简单的大模型辅助搜索，迈向了具备自主思考、任务规划与执行能力的全新阶段。&lt;/p&gt; 
&lt;p&gt;使用入口：www.n.cn&lt;/p&gt; 
&lt;p&gt;各大应用平台：输入「纳米 AI 搜索」并下载&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355145</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355145</guid>
      <pubDate>Sun, 11 May 2025 02:29:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌云发生全球范围大规模宕机</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;当地时间周四，谷歌云服务在全球范围内遭遇了一次严重的宕机事件，导致许多大型互联网服务陷入瘫痪或中断。&lt;/p&gt; 
&lt;p&gt;根据谷歌云的状态页面信息，事件开始于&lt;strong&gt;2025-06-12 10:51&lt;/strong&gt;，结束于&lt;strong&gt;2025-06-12 18:18&amp;nbsp;&lt;strong&gt;（所有时间均为&lt;/strong&gt;美国太平洋时间&lt;/strong&gt;）。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="280" src="https://oscimg.oschina.net/oscnet/up-391d4481a5d9a5a3d4477de6fa3406ec3f6.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;此次宕机事件影响了多个依赖谷歌云的知名互联网服务。据 DownDetector 平台报告称，已收到了来自数千名用户的故障反馈，包括 Spotify、Discord、&amp;nbsp;Snapchat 和 Character.AI 在内的热门应用程序在周四下午出现故障。Cursor 和 Replit 等 AI 编程应用程序似乎也在周四出现故障。&lt;/p&gt; 
&lt;p&gt;谷歌云的团队表示，目前所有服务均已从服务问题中完全恢复。「一旦我们完成内部调查，我们将发布对此事件的分析。感谢您在我们解决问题期间的耐心等待。」&lt;/p&gt; 
&lt;p&gt;详情可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstatus.cloud.google.com%2Fincidents%2Fow5i3PPK96RduMcb1SsW" target="_blank"&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355143/google-cloud-outage</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355143/google-cloud-outage</guid>
      <pubDate>Sun, 11 May 2025 02:24:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Stalwart —— 一体化邮件和协作服务器</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;Stalwart&lt;/strong&gt;是一款开源邮件和协作服务器，支持 JMAP、IMAP4、POP3、SMTP、CalDAV、CardDAV 和 WebDAV，并具备丰富的现代功能。它采用 Rust 编写，安全、快速、健壮且可扩展。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主要特点：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;具有完整协议支持的&amp;nbsp;&lt;strong&gt;电子邮件服务器：&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;JMAP：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc8621"&gt;JMAP 用于邮件&lt;/a&gt;服务器。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ietf.org/archive/id/draft-ietf-jmap-sieve-22.html"&gt;用于 Sieve 脚本的 JMAP&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc8887"&gt;WebSocket&lt;/a&gt;、&lt;a href="https://www.rfc-editor.org/rfc/rfc9404.html"&gt;Blob 管理&lt;/a&gt;和&lt;a href="https://www.rfc-editor.org/rfc/rfc9425.html"&gt;配额&lt;/a&gt;扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IMAP：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc9051"&gt;IMAP4rev2&lt;/a&gt;和&lt;a href="https://datatracker.ietf.org/doc/html/rfc3501"&gt;IMAP4rev1&lt;/a&gt;服务器。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc5804"&gt;ManageSieve&lt;/a&gt;服务器。&lt;/li&gt;
&lt;li&gt;支持多种&lt;a href="https://stalw.art/docs/development/rfcs#imap4-and-extensions"&gt;扩展&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;POP3：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc1939"&gt;POP3&lt;/a&gt;&amp;nbsp;服务器。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc2595"&gt;STLS&lt;/a&gt;和&lt;a href="https://datatracker.ietf.org/doc/html/rfc5034"&gt;SASL&lt;/a&gt;支持以及其他&lt;a href="https://datatracker.ietf.org/doc/html/rfc2449"&gt;扩展&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SMTP：
&lt;ul&gt;
&lt;li&gt;SMTP 服务器内置&lt;a href="https://datatracker.ietf.org/doc/html/rfc7489"&gt;DMARC&lt;/a&gt;、&lt;a href="https://datatracker.ietf.org/doc/html/rfc6376"&gt;DKIM&lt;/a&gt;、&lt;a href="https://datatracker.ietf.org/doc/html/rfc7208"&gt;SPF&lt;/a&gt;和&lt;a href="https://datatracker.ietf.org/doc/html/rfc8617"&gt;ARC&lt;/a&gt;支持消息认证。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc6698"&gt;通过 DANE&lt;/a&gt;、&lt;a href="https://datatracker.ietf.org/doc/html/rfc8461"&gt;MTA-STS&lt;/a&gt;和&lt;a href="https://datatracker.ietf.org/doc/html/rfc8460"&gt;SMTP TLS&lt;/a&gt;报告实现强大的传输安全性。&lt;/li&gt;
&lt;li&gt;通过细粒度的配置规则、筛选脚本、MTA 挂钩和 milter 集成进行入站限制和过滤。&lt;/li&gt;
&lt;li&gt;具有延迟传送、优先传送、配额、路由规则和节流支持的分布式虚拟队列。&lt;/li&gt;
&lt;li&gt;信封重写和消息修改。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;协作&lt;/strong&gt;服务器：
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc4791"&gt;使用 CalDAV&lt;/a&gt;进行日历和日程安排。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc6352"&gt;使用 CardDAV&lt;/a&gt;进行联系人管理。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datatracker.ietf.org/doc/html/rfc4918"&gt;使用 WebDAV&lt;/a&gt;进行文件存储和共享。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垃圾邮件&lt;/strong&gt;和&lt;strong&gt;网络钓鱼&lt;/strong&gt;内置过滤器：
&lt;ul&gt;
&lt;li&gt;与流行解决方案相当的一套全面的过滤&lt;strong&gt;规则。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;LLM 驱动的垃圾邮件过滤和消息分析。&lt;/li&gt;
&lt;li&gt;具有自动训练功能和地址簿集成的统计&lt;strong&gt;垃圾邮件分类器。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;DNS 黑名单 (&amp;nbsp;&lt;strong&gt;DNSBL&lt;/strong&gt;&amp;nbsp;) 检查 IP 地址、域和哈希。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用 Pyzor&lt;/strong&gt;进行基于协作摘要的垃圾邮件过滤。&lt;/li&gt;
&lt;li&gt;针对同形异义 URL 攻击、发件人欺骗和其他技术的网络&lt;strong&gt;钓鱼保护。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可信&lt;strong&gt;回复&lt;/strong&gt;跟踪，用于识别和优先处理真实的电子邮件回复。&lt;/li&gt;
&lt;li&gt;通过 IP 地址、ASN、域和电子邮件地址监控发件人&lt;strong&gt;信誉。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灰名单&lt;/strong&gt;可暂时延迟未知发件人。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;垃圾邮件陷阱&lt;/strong&gt;用于设置诱饵电子邮件地址来捕获和分析垃圾邮件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活的&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;可插入存储后端，支持&lt;strong&gt;RocksDB&lt;/strong&gt;、&lt;strong&gt;FoundationDB&lt;/strong&gt;、&lt;strong&gt;PostgreSQL&lt;/strong&gt;、&lt;strong&gt;mySQL&lt;/strong&gt;、&lt;strong&gt;SQLite&lt;/strong&gt;、&lt;strong&gt;S3-Compatible&lt;/strong&gt;、&lt;strong&gt;Azure&lt;/strong&gt;、&lt;strong&gt;Redis&lt;/strong&gt;和&lt;strong&gt;ElasticSearch&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;提供 17 种语言的全文搜索。&lt;/li&gt;
&lt;li&gt;Sieve 脚本语言支持所有&lt;a href="https://www.iana.org/assignments/sieve-extensions/sieve-extensions.xhtml"&gt;注册的扩展&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;电子邮件别名、邮件列表、子地址和全部地址支持。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ietf.org/id/draft-bucksch-autoconfig-02.html"&gt;使用 autoconfig&lt;/a&gt;和&lt;a href="https://learn.microsoft.com/en-us/exchange/architecture/client-access/autodiscover?view=exchserver-2019"&gt;autodiscover&lt;/a&gt;自动配置和发现帐户。&lt;/li&gt;
&lt;li&gt;通过域和租户隔离实现多租户支持。&lt;/li&gt;
&lt;li&gt;每个用户和租户的磁盘配额。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全且强大&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 S/MIME&lt;/strong&gt;或&lt;strong&gt;OpenPGP&lt;/strong&gt;进行静态加密。&lt;/li&gt;
&lt;li&gt;使用、或挑战通过&lt;a href="https://datatracker.ietf.org/doc/html/rfc8555"&gt;ACME&lt;/a&gt;自动配置 TLS 证书。&lt;code&gt;TLS-ALPN-01&lt;/code&gt;&lt;code&gt;DNS-01&lt;/code&gt;&lt;code&gt;HTTP-01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;自动阻止攻击、滥用或扫描服务器漏洞的 IP 地址。&lt;/li&gt;
&lt;li&gt;速率限制。&lt;/li&gt;
&lt;li&gt;安全审计（阅读&lt;a href="https://stalw.art/blog/security-audit"&gt;报告&lt;/a&gt;）。&lt;/li&gt;
&lt;li&gt;内存安全（感谢 Rust）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可扩展且容错&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;设计用于无缝处理增长，从小型设置到数千个节点的大规模部署。&lt;/li&gt;
&lt;li&gt;构建时考虑了&lt;strong&gt;容错&lt;/strong&gt;和&lt;strong&gt;高可用性&lt;/strong&gt;，可以从硬件或软件故障中恢复，同时最大程度地减少对操作的影响。&lt;/li&gt;
&lt;li&gt;对等集群协调或与&lt;strong&gt;Kafka&lt;/strong&gt;、&lt;strong&gt;Redpanda&lt;/strong&gt;、&lt;strong&gt;NATS&lt;/strong&gt;或&lt;strong&gt;Redis&lt;/strong&gt;协调。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;、&lt;strong&gt;Apache Mesos&lt;/strong&gt;和&lt;strong&gt;Docker Swarm&lt;/strong&gt;支持自动扩展和容器编排。&lt;/li&gt;
&lt;li&gt;读取副本、分片 Blob 存储和内存数据存储，实现高性能和低延迟。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;身份验证和授权&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenID Connect&lt;/strong&gt;身份验证。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rfc-editor.org/rfc/rfc8628"&gt;带有授权码&lt;/a&gt;和&lt;a href="https://www.rfc-editor.org/rfc/rfc8628"&gt;设备授权&lt;/a&gt;流程的 OAuth 2.0 授权。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;LDAP&lt;/strong&gt;、&lt;strong&gt;OIDC&lt;/strong&gt;、&lt;strong&gt;SQL&lt;/strong&gt;或内置身份验证后端支持。&lt;/li&gt;
&lt;li&gt;使用基于时间的一次性密码进行双因素身份验证（&lt;code&gt;2FA-TOTP&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;应用程序密码（App Passwords）。&lt;/li&gt;
&lt;li&gt;角色和权限。&lt;/li&gt;
&lt;li&gt;访问控制列表 (ACL)。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可观察性&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;使用 OpenTelemetry&lt;/strong&gt;、journald、日志文件和控制枱支持进行日志记录和跟踪。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;具有 OpenTelemetry&lt;/strong&gt;和&lt;strong&gt;Prometheus&lt;/strong&gt;集成的指标。&lt;/li&gt;
&lt;li&gt;用于事件驱动自动化的 Webhook。&lt;/li&gt;
&lt;li&gt;通过电子邮件和 webhook 通知发出警报。&lt;/li&gt;
&lt;li&gt;实时追踪和指标。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于 Web 的管理&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;具有实时统计和监控功能的仪表板。&lt;/li&gt;
&lt;li&gt;帐户、域、组和邮件列表管理。&lt;/li&gt;
&lt;li&gt;用于消息和出站 DMARC 和 TLS 报告的 SMTP 队列管理。&lt;/li&gt;
&lt;li&gt;用于接收 DMARC、TLS-RPT 和故障（ARF）报告的报告可视化界面。&lt;/li&gt;
&lt;li&gt;邮件服务器各个方面的配置。&lt;/li&gt;
&lt;li&gt;具有搜索和过滤功能的日志查看器。&lt;/li&gt;
&lt;li&gt;用于密码重置和静态加密密钥管理的自助服务门户。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;截图&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="" height="299" src="https://static.oschina.net/uploads/space/2025/0528/141541_x6Xx_4252687.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/stalwart</link>
      <guid isPermaLink="false">https://www.oschina.net/p/stalwart</guid>
      <pubDate>Sat, 10 May 2025 10:20:00 GMT</pubDate>
    </item>
    <item>
      <title>Hugging Face 发布 ScreenSuite：开源 GUI 智能体评测套件</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Hugging Face&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fblog%2Fscreensuite" target="_blank"&gt;&amp;nbsp;开源&lt;/a&gt;&lt;/u&gt;了专用于评估 GUI 智能体的综合测试套件&amp;nbsp;ScreenSuite。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b8a681e7b26b82daaa084cba75737cf15d0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;什么是 GUI Agent？简单说，就是「能像人一样操作屏幕」的 AI！它能识别界面内容、点击按钮、输入文字、滚动页面……实现真实的「虚拟助手」体验。&lt;/p&gt; 
&lt;p&gt;现在，Hugging Face 推出了全新的开源工具 ScreenSuite，帮助开发者和研究者评估这类视觉语言模型的实际操作能力！&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ScreenSuite 能做什么？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;它整合了 13 个评测集，覆盖：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;屏幕感知与 UI 定位&lt;/li&gt; 
 &lt;li&gt;单步操作指令执行&lt;/li&gt; 
 &lt;li&gt;多步骤任务规划与完成&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ScreenSuite 已在多个主流 VLM 上完成评测，包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qwen2.5-VL 系列（3B~72B）&lt;/li&gt; 
 &lt;li&gt;UI-TARS、Holo1 等优秀开源模型&lt;/li&gt; 
 &lt;li&gt;GPT-4o 等闭源模型&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ScreenSuite 支持 Ubuntu、Android、Windows 多平台评测，结合虚拟机环境还原真实交互场景，适用于科研评估与模型迭代。与其他评测不同的是，ScreenSuite 完全基于视觉输入，不依赖 DOM 或辅助树，更贴近人类的使用方式，挑战也更真实。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355075/huggingface-screensuite</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355075/huggingface-screensuite</guid>
      <pubDate>Sat, 10 May 2025 10:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
