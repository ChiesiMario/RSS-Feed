<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 30 Jun 2025 07:46:48 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>AI 造物社区作品分享——灵韵启航者 V1.0 模块化多主控嵌入式学习扩展平台</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2063</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2063</guid>
      <pubDate>Mon, 30 Jun 2025 07:34:39 GMT</pubDate>
    </item>
    <item>
      <title>Linux 6.16-rc4 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Linux 6.16-rc4 已发布，这意味着距离最终内核版本的发布仅剩一半的时间，届时我们将在三到四周内获得最终版本。&lt;/p&gt; 
&lt;p&gt;Linus Torvalds &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwjqJeFHs_CsO2MeFLi-qceFM7_dVfKBMH4B7oVJaH6tHQ%40mail.gmail.com%2FT%2F%23u" target="_blank"&gt;表示&lt;/a&gt;，此次更新的合并窗口相当大，但同时表示候选版本发布进程仍然保持平稳，这正是我们希望看到的。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0630/150013_dqUh_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Linux 内核开发周期通常会在上一个版本发布后的两周内推出新功能，之后每周都会发布一个新的候选版本，修复新功能和现有功能。稳定版本会在七八个候选版本发布后发布。&lt;/p&gt; 
&lt;p&gt;本周，Torvalds 表示，三分之一的更新涉及文件系统更新，重点关注 bcachefs，以及一些 SMB 和 Btrfs 修复。另外三分之一是驱动程序更新，特别是由于一些性能问题而恢复到设备映射器。&lt;/p&gt; 
&lt;p&gt;最后三分之一的更改是杂项更改，包括文档更新、架构修复（LoongArch、UM、x86）、自检以及各种其他常规修复。与往常一样，Torvalds 请求社区继续测试内核，以便在稳定版本发布时能够保持更好的状态。&lt;/p&gt; 
&lt;p&gt;Linux 6.16 发布后不久，用户就能获得它，尤其是那些运行 Arch 和 Fedora 等尖端 Linux 发行版的用户。如果你有一些目前与 Linux 不兼容的新硬件，请务必在 7 月底左右 Linux 6.16 发布时进行测试，看看是否有任何变化。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FLinux-6.16-Features-Early-Look" target="_blank"&gt;据 Phoronix 报道，Linux 6.16 内核预计将带来一些重大的硬件改进，包括对&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.nvidia.com%2F" target="_blank"&gt;NVIDIA&lt;/a&gt;的开源驱动程序支持 Blackwell 和 Hopper GPU，以及英特尔&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fx86deadandback%2Fstatus%2F1869428945420202447" target="_blank"&gt;Wildcat Lake 处理器&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;虽然 Torvalds 呼吁测试人员试用候选版本，但运行与发行版附带的内核不同的内核并不是一件容易的事，所以不要在生产机器上乱用候选版本。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357985</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357985</guid>
      <pubDate>Mon, 30 Jun 2025 06:58:12 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Apache ECharts 6.0 震撼发布・前图无量</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;包含 12 项重大升级的新版本 Apache ECharts 6.0&amp;nbsp;beta&amp;nbsp;震撼发布！&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-527376c0462101df980d04693e86657155c.png" width="900" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;12 年前的今天，ECharts 在 GitHub 首次发布，一颗开源的种子从此萌发。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;从最初的图表工具，到如今成长为支撑百万级开发者的可视化巨擘；从单一的前端图表库，演进为支持移动端、大屏、服务端渲染等全场景的技术体系。这 12 年间，我们见证了 ECharts 在技术方面的持续突破，更欣喜地看到全球开发者用 ECharts 创造出无数惊艳的数据故事。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;今天，作为 ECharts 12 岁生日的献礼，我们呈上诚意满满的 12 项升级，只为百尺竿头，更进一步。&lt;/strong&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_2"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;6.0 功能概览&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;12 年的沉淀，只为更极致的可视化表达。Apache ECharts 的核心力量，始终源于对开发者真实挑战的深刻理解。当我们为 6.0 定义方向时，问题很清晰：&lt;strong&gt;如何让复杂数据的呈现既足够强大，又足够优雅&lt;/strong&gt;？&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;这驱使我们围绕三个核心维度进行深度进化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#3c3c41; margin-left:0; margin-right:0"&gt;&lt;strong&gt;更专业的可视化呈现&lt;/strong&gt;：从精心打磨的默认主题，到响应系统深色的智能切换，确保图表具备专业质感，无缝融入现代应用体验。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#3c3c41; margin-left:0; margin-right:0"&gt;&lt;strong&gt;拓展数据表达的边界&lt;/strong&gt;：新增更多图表类型与功能，构建完整复杂场景应对体系，实现深度数据的直觉化表达。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#3c3c41; margin-left:0; margin-right:0"&gt;&lt;strong&gt;释放组合编排的自由&lt;/strong&gt;：从革命性的矩阵座标系，到可复用的自定义系列生态，再到座标轴标签优化——赋予开发者更自由编排的能力，将创意映射为无拘束的可视化作品。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;我们在这三个核心维度上做了 12 项升级。这些升级并非简单的功能叠加，而是为构建下一代数据驱动应用，铺设的坚实能力基座。它们共同指向一个目标：&lt;strong&gt;让 ECharts 强大、可靠、稳定地服务于后台，把舞台和聚光灯留给你的创造性表达。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;下文将针对这十二项升级分别展开介绍：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;更专业的可视化呈现&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;1. 全新默认主题&lt;/strong&gt;：采用更符合现代审美的设计语言，以专业设计赋能数据表达&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;2. 动态主题切换&lt;/strong&gt;：支持运行时无缝切换主题，适配多主题场景&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;3. 深色模式响应&lt;/strong&gt;：自动适配系统深色/浅色模式，提升用户体验&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;拓展数据表达的边界&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;4. 新增和弦图&lt;/strong&gt;：拓展复杂关系与分布数据的呈现方式&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;5. 新增蜂群图&lt;/strong&gt;：通过动态分布算法，将重叠数据点智能展开为蜂窝状排列&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;6. 新增抖动散点图&lt;/strong&gt;：通过增加散点图分布范围，增强高密度数据的可读性&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;7. 新增断轴&lt;/strong&gt;：表达数据断层，轻松呈现量级悬殊的数据对比&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;8. 升级股市交易类图表&lt;/strong&gt;：增强标签能力，更多开箱即用的交易类图表&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;释放组合编排的自由&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;9. 新增矩阵座标系&lt;/strong&gt;：各种图表类型和组件像表格一样自由组合，灵活布局&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;10. 升级自定义系列&lt;/strong&gt;：支持 npm 发布与动态注册使用，实现自定义系列代码复用&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;11. 新增多款自定义图表&lt;/strong&gt;：小提琴图、轮廓图、阶段图、范围柱状图、范围折线图&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;12. 座标轴标签优化&lt;/strong&gt;：新版智能优化座标标签布局，默认防溢出防重叠&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;我们希望通过 Apache ECharts 6.0 的全新升级，帮助用户更灵活方便地创建更多图表，实现真正的「前图无量」！&lt;/p&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;6.0 功能介绍&lt;/span&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;1. 全新默认主题&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在 ECharts 6.0 的开发过程中，我们深入分析了用户的真实使用场景，发现超过七成的开发者直接采用默认主题。这让我们意识到：一个优秀的默认主题不仅要具备美学价值，更要符合各个业务场景的通用需求。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;新版主题系统内部使用了设计令牌（design token）对颜色、距离等设计元素进行重构，&lt;strong&gt;使得不同图表类型和组件之间更和谐一致&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1112" src="https://oscimg.oschina.net/oscnet/up-33db58f15c1920472cd553c403993475298.png" width="1374" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;虽然 6.0 的主题在 5.x 版本上有非常大的调整，但是我们提供了一个&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;v5.js&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;主题文件，对于希望使用新版本功能但保留原有样式的开发者，可以实现快速迁移。&lt;/p&gt; 
&lt;span id="OSC_h3_5"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;2. 动态主题切换&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在之前的版本中，如果想要改变一个图表的主题，就必须注销图表实例后重新初始化，二次的初始动画可能对用户体验带来负面影响。在新版本中，我们实现了&lt;strong&gt;主题的动态切换能力&lt;/strong&gt;，显著地提升用户体验。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="748" src="https://oscimg.oschina.net/oscnet/up-9947656bc5171c2a30c23c4b75934379b7e.gif" width="2310" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_6"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;3. 深色模式响应&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在实现主题的动态注册和切换之后，一个典型场景是&lt;strong&gt;监听系统是否使用深色模式，并动态调整图表的深色与浅色主题&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e59f2ed5763271ac6fa7916256647b08afb.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;这对于支持深色模式的业务场景至关重要，可以确保应用界面与系统主题风格一致，显著提升用户体验的流畅性和专业性。&lt;/p&gt; 
&lt;span id="OSC_h3_7"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;4. 新增和弦图&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;和弦图直观展现复杂关系网络中的流量与权重，特别适合金融交易、社交网络等场景的多维度关系分析。ECharts 创新性地支持&lt;strong&gt;使用出节点和入节点的渐变色作为边的颜色，呈现独特的视觉美感&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-22e400fefa94e415f8f8cd351b6b3defc6d.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_8"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;5. 新增蜂群图&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;传统的散点图在类目轴下如果数据过于密集，蜂群图（Beeswarm）通过将数据在非数值维度上的偏移，在保持数值轴准确性的前提下，实现&lt;strong&gt;散点图的无重叠分布&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="764" src="https://oscimg.oschina.net/oscnet/up-679aa129dbc4a50b4606b32808689fc2a6e.png" width="2696" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_9"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;6. 新增抖动散点图&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;抖动散点图（Scatter Jittering）采用随机扰动策略，&lt;strong&gt;在非数据维度上添加固定范围的随机偏移，解决数据过于密集的问题&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;从下图我们可以看到，在未使用抖动的情况下，如果数据过于密集，很难看清数据的分布情况。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="694" src="https://oscimg.oschina.net/oscnet/up-daefea73c75395417883abf6c7cbdf56969.png" width="1778" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;而在开启了数据抖动之后，可以更清楚地看到数据分布最密集的范围是 6-8 之间。并且，相比蜂群图，抖动散点图具有更高的处理性能。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="698" src="https://oscimg.oschina.net/oscnet/up-118da4edaaa2b612ceff48d29fb8d0594c3.png" width="1774" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_10"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;7. 新增断轴&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;断轴（Broken Axis）是一种通过座标轴断层展现悬殊量级数据的可视化手段。在 ECharts 6.0 中，我们创新性地实现了&lt;strong&gt;模拟撕纸效果的断轴，使得断轴的含义能被更直观地传递&lt;/strong&gt;，并且支持点击展开的效果，还原到真实数据比例。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-b7f720940572be1c275278ec87d6171aba0.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_11"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;8. 升级股市交易类图表&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;ECharts 6.0 针对金融交易场景深度优化，增强了标签针对座标系的相对定位能力，助力开发者快速构建专业级行情分析工具。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;下图展示了一个使用 ECharts 实现的股市交易图的综合应用场景，结合了&lt;strong&gt;分时图、MACD、成交量、买卖盘口、深度图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="812" src="https://oscimg.oschina.net/oscnet/up-fb976684815eeff8befdf76d267d849e940.png" width="1830" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;这些实例可以帮助开发者快速实现金融交易场景的需求。&lt;/p&gt; 
&lt;span id="OSC_h3_12"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;9. 新增矩阵座标系&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;上述例子也用到了 ECharts 6.0 新增的矩阵座标系，它的功能十分强大。不仅可以用来做协方差矩阵图：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1030" src="https://oscimg.oschina.net/oscnet/up-950f22af70128f97374d97bfc07719c2750.png" width="1030" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;元素周期表：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="992" src="https://oscimg.oschina.net/oscnet/up-a4e935c7f85e0d17e1e8b856ceb6c2845e6.png" width="1962" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;作为一种布局，它还允许开发者将各种图表类型和组件结合，创造出灵活复杂的可视化作品：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="806" src="https://oscimg.oschina.net/oscnet/up-f81198d8f93b1bbfd2dcbdf89eaf32ef55c.png" width="1764" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_13"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;10. 升级自定义系列&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;过去，使用 ECharts 自定义系列意味着开发者必须从零手写&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;renderItem&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;复杂逻辑，即使是&lt;em&gt;复用&lt;/em&gt;，也只是复制粘贴代码。现在，ECharts 6.0 带来标准化可复用方案：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;自定义系列的注册机制&lt;/strong&gt;：和主题注册类似，自定义系列也可以动态注册和使用，使用方式和内置图表系列一样简单方便&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;官方自定义系列项目&lt;/strong&gt;：官方在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts-custom-series" target="_blank"&gt;https://github.com/apache/echarts-custom-series&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;发布了多个自定义系列，在正式版本发布后，开发者可以通过 npm 等方便地获取&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;发布自己的自定义系列&lt;/strong&gt;：可以向上述项目提 Pull Request 或发布到自己的仓库，实现自定义系列的复用&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_14"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;11. 新增多款自定义图表&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;本次发布，自定义系列项目提供了 6 款实用的图表。包括&lt;strong&gt;小提琴图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="658" src="https://oscimg.oschina.net/oscnet/up-2ec364a1cabff54c4ea91ace9c12f08c02b.png" width="1590" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;轮廓图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-fd67b02ec1848427fcd927da32dd2de9928.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;睡眠阶段图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-0c7eb75c90b32a67ff8ffbb72a520c2fdcf.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;分段环形图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-bb55929a897532184f86f8785e11bfba8d6.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;范围柱状图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-1e477671a337c71317d269cbca150897895.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;范围折线图&lt;/strong&gt;：&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-9d8991600dc2aeeb40525a829289b95d886.png" width="1200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;发挥你的创意，快来和我们一起创造更多自定义图表吧！&lt;/p&gt; 
&lt;span id="OSC_h3_15"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;12. 座标轴标签优化&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在之前的版本中，直角座标系的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;axisLabel&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;axisName&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在数据比较长时容易超出屏幕，以及重叠。数据变化时使用者并不总能准确预估空间来完全避免它们。在这个版本中我们优化了防止超出屏幕以及防止重叠的策略，并成为默认。&lt;/p&gt; 
&lt;span id="OSC_h2_16"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;升级指南&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;ECharts 6.0 目前已发布 beta 版本&lt;/strong&gt;，可以通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;npm install echarts@6.0.0-beta.1&lt;/code&gt;抢先体验并反馈问题。正式发布后，原有项目可以通过&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;npm install echarts&lt;a href="https://my.oschina.net/u/3005086" target="_blank"&gt;@6&lt;/a&gt;&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;升级。届时，官网将同步更新升级指南、文档及教程。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Freleases%2Ftag%2F6.0.0-beta.1" target="_blank"&gt;前往 GitHub Release&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#3c3c41"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;查看更多信息。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_17"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;前图无量 · 与君同行&lt;/span&gt;&lt;/h2&gt; 
&lt;span id="OSC_h3_18"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;ECharts MCP 开源在即&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;在 AI 重塑数据洞察的今天，&lt;strong&gt;我们即将开源一个 ECharts Model Context Protocol (MCP)&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;项目，用大模型能力重新定义数据表达的终极形态，完成数据可视化的最后一公里，助你轻松实现&lt;em&gt;前图无量&lt;/em&gt;。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;我们将在未来几个月逐步揭晓更多技术细节，以及如何利用 MCP 构建企业级智能图表服务的完整指南。请持续关注我们，获取最新技术解析和最佳实践案例。&lt;/p&gt; 
&lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;更多详细教程&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;接下来的几个月，我们会&lt;strong&gt;持续输出更多教程，详细地介绍 ECharts 6.0 的各大新功能&lt;/strong&gt;，敬请关注！&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;十二年前的星星之火，借开源的力量，已成今日之炬。ECharts 6.0 的每一行代码、每一个新功能，都凝聚着社区开发者的智慧与付出。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;最后，让我们再次感谢所有为这个版本贡献过的开发者们！&lt;/strong&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_20"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;百度招聘 ECharts 实习生&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;百度招聘 ECharts 实习生 1-2 名，负责 ECharts 新功能开发、bug 修复，表现优异者有转正机会，优先考虑未来一年内毕业的在校大学生。社招无固定名额，特别优秀者（以下岗位要求高度符合）欢迎投递简历交流。&lt;/p&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;岗位要求：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;对数据可视化和开源项目有热情、有想法、有能力&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;计算机或可视化等相关专业&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;熟练掌握 TypeScript&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;熟练掌握原生 Canvas、SVG 编程&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;apache/echarts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;项目提过至少 2 个 Pull Request（也欢迎现在开始尝试提，不要求已合入），投递简历时必须附上至少 2 个 PR 链接。这是我们主要评估你的技术能力的方式，请投递能体现你技术水平的 PR&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;加分项：熟悉计算机图形学、熟悉 WebGL 编程&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;岗位信息：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;工作地点：上海或北京&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;岗位有效期至 2025.9.30&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;简历投递至：zhangwenli01 at baidu.com&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_21"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;贡献者惊喜福利&lt;/span&gt;&lt;/h3&gt; 
&lt;p style="color:#3c3c41; margin-left:0; margin-right:0; text-align:left"&gt;2025.7.1 - 2025.9.30 期间，为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;apache/echarts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;项目提过至少 2 个 Pull Request（不要求已合入）的前 20 名开发者，可邮件至&lt;span&gt;&amp;nbsp;&lt;/span&gt;zhangwenli01 at baidu.com&lt;span&gt;&amp;nbsp;&lt;/span&gt;申请领取以下奖励：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;ECharts 周边：T 恤、钥匙圈、别针式徽章、贴纸若干枚&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;文心快码&lt;/em&gt;（基于文心大模型、结合百度编程大数据的 AI 工具）企业级会员一年以上&lt;strong&gt;免费使用&lt;/strong&gt;权益。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h3_22"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;完整版本更新记录&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [theme] ECharts 6.0 新主题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20865" target="_blank"&gt;#20865&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [chord] 新增和弦图系列&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20522" target="_blank"&gt;#20522&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [matrix&amp;amp;calendar] 新增矩阵座标系，并且所有的系列和组件 (包括其他座标系组件，例如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;grid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(直角座标系)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;polar&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等) 支持声明式地布局在矩阵座标系或日历座标系的格中&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F19807" target="_blank"&gt;#19807&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21005" target="_blank"&gt;#21005&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [custom] 支持可复用的自定义系列&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20226" target="_blank"&gt;#20226&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [cartesian] 引入新的布局方式避免直角座标系 (&lt;code&gt;grid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件) 的座标轴标签 (&lt;code&gt;axisLabel&lt;/code&gt;) 和座标轴名称 (&lt;code&gt;axisName&lt;/code&gt;) 超出可视范围，以及避免他们重叠，并且设为默认&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F21059" target="_blank"&gt;#21059&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;),&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19534" target="_blank"&gt;#19534&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frobin-gerling" target="_blank"&gt;robin-gerling&lt;/a&gt;),&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F16825" target="_blank"&gt;#16825&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkonrad-amtenbrink" target="_blank"&gt;konrad-amtenbrink&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [scatter] 支持散点图系列的抖动&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F19941" target="_blank"&gt;#19941&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [axis] 支持座标轴断轴&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F19459" target="_blank"&gt;#19459&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20857" target="_blank"&gt;#20857&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [theme] 支持动态注册和切换主题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20705" target="_blank"&gt;#20705&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [roam] 缩放平移的基础设施升级 - 支持用户指定 (&lt;code&gt;roamTigger&lt;/code&gt;) 可触发缩放平移的区域；支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;clip&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;series.map&lt;/code&gt;)；支持鼠标指针样式变化以提示缩放平移区域；支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;preserveAspect&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;，&lt;code&gt;series.map&lt;/code&gt;，&lt;code&gt;series.graph&lt;/code&gt;，&lt;code&gt;series.tree&lt;/code&gt;，&lt;code&gt;series.sankey&lt;/code&gt;)；修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;center&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的百分比基准 (于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;，&lt;code&gt;series.map&lt;/code&gt;，&lt;code&gt;series.graph&lt;/code&gt;，&lt;code&gt;series.tree&lt;/code&gt;)；优化缩放平移区域重叠时的表现&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19807%23issuecomment-2974437299" target="_blank"&gt;#19807#issuecomment-2974437299&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [thumbnail] 为关系图系列支持缩略图&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19807%23issuecomment-3013454598" target="_blank"&gt;#19807#issuecomment-3013454598&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F17471" target="_blank"&gt;#17471&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLruler" target="_blank"&gt;Lruler&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [marker] 标记点/标记线/标记区域 (&lt;code&gt;markPoint&lt;/code&gt;/&lt;code&gt;markLine&lt;/code&gt;/&lt;code&gt;markArea&lt;/code&gt;) 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;z2&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20782" target="_blank"&gt;#20782&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsz-p" target="_blank"&gt;sz-p&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [stack] 支持反转堆叠顺序&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20998" target="_blank"&gt;#20998&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJustin-ZS" target="_blank"&gt;Justin-ZS&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [sankey] 支持桑基图系列的交互缩放 (&lt;code&gt;roaming&lt;/code&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20321" target="_blank"&gt;#20321&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [custom] 在自定义系列的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;renderItem&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;compoundPath&lt;/code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20402" target="_blank"&gt;#20402&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21040" target="_blank"&gt;#21040&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [marker] 标记支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;relativeTo&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;相对座标系的位置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20166" target="_blank"&gt;#20166&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21042" target="_blank"&gt;#21042&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [axis] 支持角度轴 (&lt;code&gt;angleAxis&lt;/code&gt;) 标签的提示框 (&lt;code&gt;tooltip&lt;/code&gt;)&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20986" target="_blank"&gt;#20986&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [tooltip] 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;displayTransition&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项以控制是否启用提示框显示过渡动画&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20966" target="_blank"&gt;#20966&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjqqin" target="_blank"&gt;jqqin&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [legend] 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;triggerEvent&lt;/code&gt;选项&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20907" target="_blank"&gt;#20907&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsz-p" target="_blank"&gt;sz-p&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [custom] 自定义系列 (&lt;code&gt;custom series&lt;/code&gt;) 支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;tooltipDisabled&lt;/code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20447" target="_blank"&gt;#20447&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Feature] [i18n] 新增挪威博克马尔语 (nb-NO) 翻译&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20792" target="_blank"&gt;#20792&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjoakimono" target="_blank"&gt;joakimono&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [label] 修复富文本样式不继承普通标签样式的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20977" target="_blank"&gt;#20977&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21016" target="_blank"&gt;#21016&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F100pah" target="_blank"&gt;100pah&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [dataZoom] 修复时间轴上数据形状分布的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F16978" target="_blank"&gt;#16978&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fandrearoota" target="_blank"&gt;andrearoota&lt;/a&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21043" target="_blank"&gt;#21043&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F21039" target="_blank"&gt;#21039&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [tooltip] 修复类目轴上值为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;null&lt;/code&gt;的项应能显示提示框的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20777" target="_blank"&gt;#20777&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJustin-ZS" target="_blank"&gt;Justin-ZS&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [visualMap] 修复部分文本样式在视觉映射 (&lt;code&gt;visualMap&lt;/code&gt;) 上不起作用的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20961" target="_blank"&gt;#20961&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [dataZoom] 在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;brushEnd&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时限制范围&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20814" target="_blank"&gt;#20814&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FmortalYoung" target="_blank"&gt;mortalYoung&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [heatmap] 修复日历热力图范围外的标签被意外显示的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20699" target="_blank"&gt;#20699&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [series] 修复维度索引不匹配的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20682" target="_blank"&gt;#20682&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJustin-ZS" target="_blank"&gt;Justin-ZS&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [bar] 修复极座标系下的柱形图，在变化时应更新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;roundCap&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20582" target="_blank"&gt;#20582&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [pie] 修复当单个标签位置不在外部时，&lt;code&gt;labelLine&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可能未被移除并导致错误的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20906" target="_blank"&gt;#20906&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [sankey] 修复当&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;emphasis.focus&lt;/code&gt;为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;'trajectory'&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;时，处理大数据导致浏览器崩溃的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20959" target="_blank"&gt;#20959&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [custom] 修复应用离开过渡时可能出现的空指针异常 (NPE)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20920" target="_blank"&gt;#20920&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [dataZoom] 将&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;moveHandler&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的光标改为默认 (&lt;code&gt;default&lt;/code&gt;)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20304" target="_blank"&gt;#20304&lt;/a&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fribeirompl" target="_blank"&gt;ribeirompl&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [tooltip] 修复提示框关闭后用于样式座标变换的标记点未被移除的问题&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20987" target="_blank"&gt;#20987&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [bar] 从&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;BarSeriesOption&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口中移除未使用的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;startValue&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20901" target="_blank"&gt;#20901&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [title] 修复标题文本样式的宽度类型不应包含字符串的问题&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20800" target="_blank"&gt;#20800&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsz-p" target="_blank"&gt;sz-p&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [roam] 修复&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;RoamControllerHost&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的导入路径&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20313" target="_blank"&gt;#20313&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOvilia" target="_blank"&gt;Ovilia&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[Fix] [svg] 移除&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;getSvgDataURL&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中的 SVG 支持检查&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20760" target="_blank"&gt;#20760&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplainheart" target="_blank"&gt;plainheart&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt;[Break] 相对于 v5.6.0 的 Breaking changes: 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;默认主题已发生变化，包括视觉样式以及组件 (component) 和系列 (series) 的默认位置设置，例如，默认图例 (legend) 的位置现在改为在画布底部，新的默认设置更加合理，但如果影响了现有用法，可以使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;echarts/theme/v5.js&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;恢复旧的视觉样式和位置设置，参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20865" target="_blank"&gt;#20865&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;v5 版本中的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;echarts/src/theme/light.ts&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;已迁移至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;echarts/theme/rainbow.js&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在直角座标系中 (&lt;code&gt;grid&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;组件)，如果之前座标轴名称 (&lt;code&gt;axisName&lt;/code&gt;) 或标签 (&lt;code&gt;axisLabel&lt;/code&gt;) 溢出画布或发生重叠，现在座标轴的位置可能会相对之前而言略微偏移，因为默认启用了防止溢出和防止，座标轴名称与标签重叠的机制，在大多数情况下，这些变化肉眼难以察觉，但如果出现不合理的变化，可以通过设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;grid.outerBoundsMode: 'none'&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项关闭防溢出机制，或设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;xAxis/yAxis.axisLabel.nameMoveOverlap: false&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项关闭防重叠机制，参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F21059" target="_blank"&gt;#21059&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;geo&lt;/code&gt;、&lt;code&gt;series.map&lt;/code&gt;、&lt;code&gt;series.graph&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;series.tree&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;中，&lt;code&gt;center&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;选项中百分比 (如&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;'33%'&lt;/code&gt;) 的基准发生了变化，之前的百分比基准是错误的，如需恢复旧行为，可在 ECharts option 的根级别设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;legacyViewCoordSysCenterBase: true&lt;/code&gt;参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fpull%2F19807%23issuecomment-2974437299" target="_blank"&gt;#19807#issuecomment-2974437299&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;现在标签 (label) 的 rich 样式 (&lt;code&gt;fontStyle&lt;/code&gt;、&lt;code&gt;fontWeight&lt;/code&gt;、&lt;code&gt;fontSize&lt;/code&gt;、&lt;code&gt;fontFamily&lt;/code&gt;、&lt;code&gt;textShadowColor&lt;/code&gt;、&lt;code&gt;textShadowBlur&lt;/code&gt;、&lt;code&gt;textShadowOffsetX&lt;/code&gt;、&lt;code&gt;textShadowOffsetY&lt;/code&gt;) 会继承普通标签样式，如需恢复旧行为，可以在 ECharts 配置的根级别或标签样式选项同级处设置&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;richInheritPlainLabel: false&lt;/code&gt;参见&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fecharts%2Fissues%2F20977" target="_blank"&gt;#20977&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/echarts/blog/18679315</link>
      <guid isPermaLink="false">https://my.oschina.net/echarts/blog/18679315</guid>
      <pubDate>Sun, 11 May 2025 06:29:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>京东：目前京东币链科技并没有开始发行稳定币</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;「京东发言人」官方微博今日发布《关于京东稳定币产品及业务合作不实信息的严正声明》指出：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;我们近期关注到某些企业发布有关和京东币链展开合作的信息，存在失实情况，误导了行业和公众舆论。请大家注意甄别，警惕「荐股」类骗局，避免财产损失。同时，我们再次提醒公众，目前京东币链科技并没有开始发行稳定币，也没有设立任何相关社区，目前所有获取京东稳定币的信息均涉嫌欺诈。&lt;/p&gt; 
 &lt;p&gt;有关产品和企业业务合作信息，请以京东币链在官网（&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjdcoinlink.com" target="_blank"&gt;jdcoinlink.com&lt;/a&gt;）发布的信息为准。对侵犯我公司利益的不实信息，我们保留追究其法律责任的权利。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height="301" src="https://oscimg.oschina.net/oscnet/up-d1063cf30cb370da57c1ede298b17a79d9f.png" width="300" referrerpolicy="no-referrer"&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357971</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357971</guid>
      <pubDate>Sun, 11 May 2025 06:10:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>CODING DevOps 即将下线！Zadig 推出开源替代公益迁移援助计划</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet//e0fdf0a12c54500241423b2609f30a24.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
 &lt;h2&gt;Coding 业务调整，开发者何去何从？&lt;/h2&gt; 
 &lt;span id="OSC_h3_2"&gt;&lt;/span&gt; 
 &lt;h3&gt;Coding 业务调整详情&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet//f46cae80911d4097fca388ce8949cdf5.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   近日，腾讯云 CODING 平台发布了重大业务调整公告：2025 年 9 月 1 日起，CODING 将取消原标准版套餐，下线部分核心功能（制品安全扫描、测试管理、测试协同、仪表盘、研发度量）。新注册团队用户界面将不再有持续部署、应用管理功能。与此同时： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2025 年 9 月 1 日：标准版产品正式下线，原标准版用户无法登录，需付费升级到高级版或旗舰版 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2025 年 9 月 30 日：所有产品停止新购 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2026 年 3 月 30 日：所有产品停止续购 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     2028 年 9 月 30 日：所有产品停止服务 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   对于依赖 CODING 标准版的中小团队和开发者而言，这一调整带来了不小的冲击。原本免费或低成本使用的基础功能将不复存在，面临 
  &lt;strong&gt;功能缺失&lt;/strong&gt;或 
  &lt;strong&gt;成本陡增&lt;/strong&gt;的两难选择。 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_3"&gt;&lt;/span&gt; 
 &lt;h3&gt;Zadig 公益援助：开源替代方案零门槛接入&lt;/h3&gt; 
 &lt;div&gt;
   作为开源云原生 DevOps 平台，Zadig 现面向 CODING 用户推出「开源平替公益迁移计划」，提供从功能适配到技术支持的全流程免费援助，核心优势如下： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     开源免费基础能力：基础版开源免费，覆盖持续集成、测试管理等核心场景，直接替代 CODING 标准版功能。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     1:1 功能替代：完整支持 CODING 核心能力，包括蓝绿部署、灰度发布、自动化测试等，同时新增 AI 环境巡检、多云管理等进阶功能。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     公益迁移支持：组建专项技术团队，提供免费迁移咨询、配置调试及操作培训，确保平滑过渡。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
 &lt;h3&gt;技术兼容性升级：全链路支持腾讯生态&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 深度兼容腾讯云及生态产品，消除迁移技术壁垒： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     腾讯云全家桶无缝集成：原生支持腾讯云 CVM（云主机）、TKE（K8s 集群）、TCR（容器镜像服务）、COS（对象存储）等产品，迁移无需重构架构。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     多云部署灵活性：除腾讯云外，还支持阿里云、华为云、AWS 等 6 大公有云及自建 K8s 集群，避免厂商锁定。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
 &lt;h2&gt;Zadig 与 Coding 功能对比：全方位分析&lt;/h2&gt; 
 &lt;span id="OSC_h3_6"&gt;&lt;/span&gt; 
 &lt;h3&gt;基础功能对比&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 和 Coding 作为两款主流的 DevOps 平台，在核心功能上存在明显差异。以下是两者的基础功能对比： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border:none; table-layout:fixed; width:500px"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        功能模块 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Coding 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Zadig 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        持续集成 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持，1500 核时 / 月 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持，无限制 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        测试管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        标准版取消，高级版支持 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        全功能支持，包含自动化测试 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        制品管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Docker 制品库镜像 5000 个 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持多种制品类型，对接多个制品仓库（涵盖阿里云 ACR、腾讯云 TCR、华为云 SWR、Amazon ECR、微软云 ACR、谷歌云 AR、DockerHub、Harbor 、JFrog、Nexus 等） 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        环境管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        应用级环境管理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        产品级环境管理，支持多环境以及异构 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        部署策略 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持蓝绿和分批次灰度发布 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持蓝绿、金丝雀、分批次灰度等多种策略 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        效能洞察 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        基础分析功能 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持自定义指标和评分权重 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        访问控制 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持 RBAC 权限控制 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持 RBAC 和 ABAC 双重权限控制 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        企业个性化 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        不支持 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        允许配置企业 Logo 和自定义系统主题 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;关键差异点&lt;/strong&gt;：Zadig 提供了更全面的测试管理功能、更灵活的部署策略和更精细的权限控制，尤其适合中大型团队和对安全合规有较高要求的企业。 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_7"&gt;&lt;/span&gt; 
 &lt;h3&gt;云原生与扩展性对比&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border:none; table-layout:fixed; width:500px"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        特性 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Coding 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Zadig 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        云原生支持 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限，部分云原生功能 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        全面支持云原生架构，提供云原生开发环境 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        多云支持 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        腾讯云生态为主 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        广泛支持多云环境，包括阿里云、腾讯云、华为云、GCP、AWS、Azure 等 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        部署方式 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        主推公有云服务，提供私有化部署方案 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        私有化部署为主，支持 K8s 和主机部署 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        扩展性 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        受限于腾讯云生态 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        高度可扩展，支持自定义插件和扩展 API 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        自动化治理 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持通过项目模板实现一键治理数千服务 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Zadig 的云原生优势&lt;/strong&gt;：Zadig 不仅支持云原生开发环境，还提供了完整的云原生应用管理能力，能够帮助企业快速构建现代化的软件交付体系。同时，其多云支持能力确保企业不会被单一云厂商锁定，提升了架构的灵活性和可移植性。 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_8"&gt;&lt;/span&gt; 
 &lt;h3&gt;AI 赋能与自动化对比&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;table cellspacing="0" style="border-collapse:collapse; border:none; table-layout:fixed; width:500px"&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        功能 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Coding 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        Zadig 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 功能 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 代码助手 CodeBuddy 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        内置 AI 环境巡检与效能诊断功能 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        自动化测试 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        支持自动化测试用例管理和执行 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        自动化部署 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        基础支持 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        全面支持自动化部署流水线，支持多种部署策略 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        效能分析 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        基础指标 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 效能诊断可智能分析效能数据，快速定位瓶颈 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        异常检测 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        有限 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style="border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top"&gt; 
      &lt;div&gt;
        AI 环境巡检增强了对 Kubernetes 环境的自动异常检测能力 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Zadig 与 DeepSeek 等 AI 模型深度集成，提供了强大的 AI 环境巡检与效能诊断功能，能够帮助团队快速识别和解决开发过程中的问题，提升整体效率。 
 &lt;/div&gt; 
 &lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
 &lt;h2&gt;迁移价值：从「应急替代」到「效能升级」&lt;/h2&gt; 
 &lt;div&gt;
   迁移到 Zadig，研发团队能收获以下最佳实践以及收益 
 &lt;/div&gt; 
 &lt;span id="OSC_h3_10"&gt;&lt;/span&gt; 
 &lt;h3&gt;云原生开发实践&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 充分发挥云原生优势，支持以下最佳实践： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;微服务架构支持&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Zadig 的多服务并行构建功能，提高微服务开发效率 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用模板库功能，快速创建标准化的微服务配置 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实现服务级别的独立部署和回滚，降低变更风险 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;环境隔离与管理&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     创建开发、测试、预发布和生产等多个隔离环境 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用环境变量和配置管理，确保不同环境的配置一致性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的环境模板功能，快速创建标准化环境 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;容器化最佳实践&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Dockerfile 模板创建标准化的容器镜像 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施容器镜像的安全扫描和漏洞检测 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的云原生构建功能，优化容器构建流程 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_11"&gt;&lt;/span&gt; 
 &lt;h3&gt;自动化测试与质量保障&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 支持全面的自动化测试策略： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;测试左移实践&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在代码提交阶段执行单元测试和静态代码分析 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Zadig 的前置验证功能，在合并请求前进行自动化测试 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施持续测试，确保代码质量持续提升 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;测试并行化&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     将测试用例分组并行执行，缩短测试周期 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的并行测试能力，支持千条测试用例并行执行 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施测试环境的快速创建和销毁以及睡眠，提高资源利用率 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;测试数据管理&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用 Zadig 的环境管理功能，为测试提供一致的数据集 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_12"&gt;&lt;/span&gt; 
 &lt;h3&gt;持续交付与发布管理&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 提供强大的持续交付和发布管理能力： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;蓝绿部署与灰度发布&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施蓝绿部署，确保服务连续性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用金丝雀发布和分批次灰度发布策略，降低发布风险 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的全链路灰度发布功能，实现精细化的发布控制 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;自动化发布流水线&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     创建端到端的自动化发布流水线 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施基于事件的触发机制，如代码提交、定时触发等 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的工作流功能，实现复杂的发布逻辑 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;回滚策略&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施一键回滚功能，确保配置快速恢复 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的版本管理功能，轻松管理应用版本 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施发布前的预检查，降低回滚需求 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_13"&gt;&lt;/span&gt; 
 &lt;h3&gt;效能分析与持续改进&lt;/h3&gt; 
 &lt;div&gt;
   Zadig 提供全面的效能分析能力，支持持续改进： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;数据驱动的决策&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的效能洞察功能，收集和分析开发过程数据 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     自定义效能指标和评分权重，精准分析业务效能短板 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施定期的效能评估和改进计划 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;自动化监控与告警&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     配置关键指标的监控和告警 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     利用 Zadig 的 AI 效能诊断功能，自动识别性能瓶颈 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     实施异常检测和自动恢复机制 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;span id="OSC_h2_14"&gt;&lt;/span&gt; 
 &lt;h2&gt;迁移行动指南：三步完成平滑过渡&lt;/h2&gt; 
 &lt;span id="OSC_h3_15"&gt;&lt;/span&gt; 
 &lt;h3&gt;迁移准备&lt;/h3&gt; 
 &lt;div&gt;
   在开始迁移前，需要完成以下准备工作： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;加入 Zadig 公益援助群：&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     加入 Zadig 迁移支持群，获得免费的技术咨询和迁移指导 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     探讨迁移方案以及迁移的最佳实践 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;评估现有系统&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     列出所有使用的 Coding 功能和服务 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     评估各功能的使用频率和重要性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     识别依赖 Coding 特定功能的工作流程 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;环境准备&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     安装并配置 Zadig 环境，可以选择本地部署或云服务器部署 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     集成必要的第三方服务，如代码仓库、镜像仓库等 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     准备迁移所需的账号和权限 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;数据备份&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     备份 Coding 中的重要数据，包括代码、配置文件、构建日志等 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     导出测试用例、缺陷报告和其他项目管理数据 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;团队培训&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     组织团队成员参加 Zadig 培训课程，了解 Zadig ，方便快速上手 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     建立内部支持渠道，解答迁移过程中的问题 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_16"&gt;&lt;/span&gt; 
 &lt;h3&gt;配置迁移&lt;/h3&gt; 
 &lt;div&gt;
   迁移工作流和以及环境配置是关键步骤： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;构建配置迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中为每个服务创建构建配置 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     复制 Coding 中的构建脚本，并进行必要的调整 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     配置代码源、构建环境和构建参数 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;工作流迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     分析 Coding 中的工作流逻辑和触发条件 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中创建对应的工作流 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     配置触发器，例如 Git 提交、Pull Request 等事件 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;环境配置迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     收集 Coding 中的环境配置信息 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中创建环境，并配置相关服务和变量 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;权限与角色迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     分析 Coding 中的权限设置和角色分配 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     在 Zadig 中创建对应的用户组和权限策略 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     批量导入用户并分配相应的权限 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_17"&gt;&lt;/span&gt; 
 &lt;h3&gt;测试与验证&lt;/h3&gt; 
 &lt;div&gt;
   迁移完成后，必须进行全面的测试和验证： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;功能测试&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     验证所有核心功能是否正常工作 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     测试不同环境下的部署和回滚流程 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     检查自动化测试用例的执行结果 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;性能测试&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     测试构建和部署的性能是否满足要求 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     验证大规模并发构建的稳定性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     监控 Zadig 的资源使用情况，确保系统稳定运行 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;集成测试&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     验证与第三方服务的集成是否正常 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     检查权限控制和安全策略是否正确实施 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h2_18"&gt;&lt;/span&gt; 
 &lt;h2&gt;行动建议&lt;/h2&gt; 
 &lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
 &lt;h3&gt;&lt;strong&gt;对于技术负责人&lt;/strong&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;strong&gt;尽快评估&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     评估 Coding 功能调整对现有系统的影响 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     制定详细的迁移计划和时间表 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     确定迁移的优先级和关键里程碑 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;分阶段迁移&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     优先迁移核心服务和关键工作流 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     逐步迁移测试和质量保障体系 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     最后优化和全面切换 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;投资未来&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     将迁移视为提升 DevOps 能力的机会 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     采用云原生最佳实践，构建现代化软件交付体系 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     投资自动化和 AI 能力，提升团队效率 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h3_20"&gt;&lt;/span&gt; 
 &lt;h3&gt;&lt;strong&gt;对于企业决策者&lt;/strong&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;strong&gt;预算规划&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     评估迁移预算和长期成本 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     考虑 Zadig 专家版或企业版的授权成本 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     预留培训和咨询预算，确保顺利迁移 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;资源配置&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     分配足够的技术资源支持迁移 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     确保迁移期间业务连续性 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     规划长期的技术架构和工具投资 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;strong&gt;价值实现&lt;/strong&gt;： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     将迁移视为提升研发效能的投资 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     设定明确的 ROI 目标和评估指标 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     持续关注技术趋势，保持竞争力 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id="OSC_h2_21"&gt;&lt;/span&gt; 
 &lt;h2&gt;立即加入公益迁移计划&lt;/h2&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;span style="color:#245bdb"&gt;「我们不仅是提供替代方案，更是帮助团队在迁移中完成 DevOps 能力升级」—— Zadig &lt;/span&gt; 
   &lt;span style="color:#245bdb"&gt;客户成功团队&lt;/span&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;div&gt;
   面对 CODING 服务调整，Zadig 以开源生态的力量提供可持续解决方案。无论团队规模大小，均可通过以下方式获取支持： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     扫码加入公益支持群，获取专属迁移顾问服务 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     访问 Zadig 官网（https://koderover.com），点击页面底部的「企业咨询」，说明意图获得迁移支持 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet//09c60d2e780780114f4fed15d1d4e03d.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   此次公益迁移计划将持续至 2025 年 9 月 1 日，助力每一个受影响的开发者团队平稳过渡，拥抱更开放、更高效的 DevOps 未来。 
 &lt;/div&gt; 
 &lt;div&gt;
   立即行动，把握 DevOps 升级机遇，开启高效、灵活、智能的软件开发新旅程！ 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/koderover/blog/18679312</link>
      <guid isPermaLink="false">https://my.oschina.net/koderover/blog/18679312</guid>
      <pubDate>Sun, 11 May 2025 05:58:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>2025 全球独角兽榜单：SpaceX、字节跳动和 OpenAI 荣登前三甲</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;胡润研究院近日发布了《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhurun.net%2Fzh-CN%2FInfo%2FDetail%3Fnum%3DUG5JN9T6LU24" target="_blank"&gt;2025 全球独角兽榜&lt;/a&gt;》（Global Unicorn Index 2025），列出了全球成立于 2000 年之后、价值 10 亿美元以上的非上市公司，本次榜单估值计算的截止日期为 2025 年 1 月 1 日。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="358" src="https://oscimg.oschina.net/oscnet/up-ad30bb7535a6470a1da68ea4637c18e7eb2.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;榜单统计数据显示，全球独角兽企业数量达到 1523 家，创世界新纪录，比去年增加 5%（70 家）。其中，美国以 758 家独角兽企业领先，增加了 55 家，占世界总数的 49.8%。中国以 343 家位居第二，增加了 3 家；印度以 64 家位居第三，减少了 3 家；英国以 61 家紧随其后，增加了 8 家；欧盟国家 112 家独角兽，增加 3 家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;SpaceX 首次成为全球价值最高的独角兽，价值增加了 1.2 万亿元，达到 2.6 万亿元人民币。ChatGPT 所有者 OpenAI 价值连续第二年增长最快，增加了 1.5 万亿元，以 2.2 万亿元人民币位居第二。两年前，OpenAI 的价值仅为 1380 亿元&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;抖音和豆包的所有者字节跳动失去了全球价值最高的独角兽的头衔，跌至第二位，尽管其价值增加了 5840 亿元，达到 2.2 万亿元人民币。埃隆·马斯克领导的 xAI 在收购了 X 后，以 8400 亿元人民币的价值新上榜便直接冲到了第四位。马斯克创立或联合创立了全球价值最高的四家独角兽企业中的三家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;曾经的全球第一独角兽、总部杭州的蚂蚁集团，排名下降一位至第五位，价值 6350 亿元，增长了 510 亿元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Claude 所有者——总部旧金山的 Anthropic 价值上涨了 10 倍多，排名第八，价值 4450 亿元人民币。排名前十的独角兽中有四家拥有领先的 AI 助手：ChatGPT、豆包、Grok 和 Claude。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;64 家去年的独角兽「升级」，其中 34 家成功上市（19 家来自中国，9 家来自美国，6 家来自「世界其他地区」），30 家被收购。这些升级的独角兽主要来自软件服务、AI、金融科技和生物科技领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;52 家「降级」，价值降至 10 亿美元以下，其中 19 家来自美国，11 家来自中国。最大的落榜者是瑞典电池制造商 Northvolt（去年价值 1430 亿元人民币）和中国新能源汽车制造商——哪吒汽车的母公司合众汽车（去年价值 300 亿元人民币）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;金融科技以 197 家独角兽企业领先，其次是软件服务（151 家）和 AI（128 家）。前三大行业占独角兽企业的 31%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;美国独角兽企业以软件服务、金融科技和健康科技为主；中国独角兽主要是半导体、AI 和新能源，而「世界其他地区」则是金融科技、电子商务、软件服务和区块链。波兰、孟加拉国和伊朗是没有独角兽的最大经济体。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;旧金山连续第五年成为「全球独角兽之都」，有 199 家独角兽企业，增加了 9 家，其次是纽约，有 142 家，增加了 9 家，北京有 75 家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在中国，深圳是独角兽企业增长最快的城市，其次是合肥和重庆。广州有 24 家独角兽，位列全球城市第 11 位，国内城市第 4 位。广州今年有 2 家新独角兽，还有 2 家企业成功「毕业」——小马智行和文远知行，目前价值分别为 340 亿元和 160 亿元。粤港澳大湾区有 72 家独角兽，增加了 2 家，占全国 21%&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357966</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357966</guid>
      <pubDate>Sun, 11 May 2025 05:51:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>技术合伙人招募：共创宠物数字生命艺术，用 3D 技术守护永恒的爱</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2062</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2062</guid>
      <pubDate>Sun, 11 May 2025 03:56:00 GMT</pubDate>
    </item>
    <item>
      <title>中国 AI GPU 芯片初创企业壁仞科技获 15 亿元融资</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;路透社引述知情人士&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Fworld%2Fchina%2Fchina-ai-chip-firm-biren-raises-new-funds-plans-hong-kong-ipo-say-sources-2025-06-26%2F" target="_blank"&gt;报道称&lt;/a&gt;，中国 AI GPU 芯片初创企业壁仞科技已筹集到约 15 亿元人民币，并正准备在今年第三季度赴港交所申请上市，最快可能在 8 月。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0630/114240_N92c_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;不过，对此消息，壁仞科技并未回应。&lt;/p&gt; 
&lt;p&gt;消息人士透露，壁仞科技此次 15 亿元的融资主要由两家国资背景的投资机构领投，包括一家来自广东的国资支持的基金和一家来自上海的国资基金。据悉，在最新一轮融资之前，壁仞科技的估值约为 140 亿元。&lt;/p&gt; 
&lt;p&gt;其实，早在今年 3 月 11 日晚间，「上海国投先导基金」微信公众号就曾宣布，上海国投先导人工智能产业母基金联合领投了壁仞科技，数家知名投资机构及产业资本跟投。不过，当时并未披露其他的具体投资方以及投资金额。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357952</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357952</guid>
      <pubDate>Sun, 11 May 2025 03:42:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>通义千问发布多模态统一理解与生成模型 Qwen VLo</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;通义千问&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FE655CRmdgd5bySyuHPDoEw" target="_blank"&gt;宣布&lt;/a&gt;正式推出 Qwen VLo——一个多模态统一理解与生成模型，目前 Qwen VLo 还属于预览阶段，可在 Qwen Chat（&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fchat.qwen.ai" target="_blank"&gt;&lt;span style="color:#000000"&gt;chat.qwen.ai&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt;）上直接体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「这一全新升级的模型不仅能够看懂世界，更能基于理解进行高质量的再创造，真正实现了从感知到生成的跨越。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="299" src="https://oscimg.oschina.net/oscnet/up-3e012ffa174785b10577c2a9093341ca732.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据介绍，Qwen VLo 以一种渐进式生成方式，从左到右、从上到下逐步清晰地构建整幅图片。在生成过程中，模型会对预测的内容不断调整和优化，从而确保最终结果更加和谐一致。这种生成机制不仅提升了视觉效果，还为用户带来了更灵活、更可控的创作体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Qwen VLo 在原始多模态理解与生成能力上进行了全面升级，显著增强了对图像内容的理解深度，并在此基础上实现了更加准确和一致的生成效果。核心亮点如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;更精准的内容理解与再创造&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;以往的多模态模型在生成过程中容易出现语义不一致的问题，例如将汽车误生成其他类型的物体，或者无法保留原图的关键结构特征。而 Qwen VLo 通过更强大的细节捕捉能力，能够在生成过程中保持高度的语义一致性。例如，当用户输入一张汽车的照片并要求「更换颜色」时，Qwen VLo 不仅能准确识别车型，还能保留其原有的结构特征，同时完成色彩风格的自然转换，让生成结果既符合预期又不失真实感。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;支持开放指令编辑修改生成&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;用户可以通过自然语言提出各种创意性指令，如「将这张画风改为梵高风格」、「让这张照片看起来像 19 世纪的老照片」或「给这张图片添加一个晴朗的天空」。Qwen VLo 能够灵活响应这些开放性指令，并生成符合用户预期的结果。无论是艺术风格迁移、场景重构还是细节修饰，模型都能轻松应对。甚至一些传统的视觉感知人物如预测深度图、分割图、检测图以及边缘信息等也可以通过编辑指令轻松完成。更进一步，像很多更复杂的指令，比如一条指令中同时包含修改物体、修改文字、更换背景，模型也能轻松完成。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;多语言指令支持&lt;/strong&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Qwen VLo 支持包括中文、英文在内的多种语言指令，打破了语言壁垒，为全球用户提供了统一且便捷的交互体验。无论你使用哪种语言，只需简单描述你的需求，模型便能快速理解并输出理想结果。&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Qwen VLo 采用动态分辨率训练，支持动态分辨率生成。无论是输入端还是输出端，模型都支持任意分辨率和长宽比的图像生成。这意味着用户不再受限于固定的格式，可以根据实际需求生成适配不同场景的图像内容，无论是海报、插图、网页 Banner 还是社交媒体封面，都能轻松应对。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此外，Qwen VLo 还创新性地引入了一种全新的生成机制：从上到下、从左到右逐步清晰的生成过程。这一机制不仅提升了生成效率，还特别适用于需要精细控制的长段落文字生成任务。例如，在生成带有大量文本的广告设计或漫画分镜时，Qwen VLo 逐步生成慢慢修改。这种渐进式的生成方式让用户可以实时观察生成过程，并根据需要进行调整，从而获得最佳的创作效果。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357951</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357951</guid>
      <pubDate>Sun, 11 May 2025 03:33:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>👏 WGLOG 日志审计系统 v1.0 正式发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wgstart.com" target="_blank"&gt;W&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wgstart.com" target="_blank"&gt;GLOG&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;WGCLOUD&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;团队近期新推出的一款&lt;span&gt;&lt;strong&gt;日志审计管理系统&lt;/strong&gt;&lt;/span&gt;，设计一如既往的的简单好用，具有部署方便，上手容易，性能优秀，界面友好等特点&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;码云仓库：&lt;/span&gt;&lt;a href="https://gitee.com/wanghouhou/wgcloud"&gt;https://gitee.com/wanghouhou/wgcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GITHUB 仓库：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftianshiyeben%2Fwgcloud" target="_blank"&gt;https://github.com/tianshiyeben/wgcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WGCLOUD 唯一官网：&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.wgstart.com" target="_blank"&gt;http://www.wgstart.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;WGLOG 日志审计系统&lt;/strong&gt;中包含哪些功能，如下&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;日志采集概要模块，日志文件管理模块，第三方日志管理模块，采集日志查看，邮件通知设置，脚本通知设置，系统日志，设置主题背景色等&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;WGLOG-v1.0 更新说明&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;一款轻量级的日志收集系统，主要用于实时采集服务器和主机的各种日志文件，统一进行日志的管理存贮，综合分析和进行展现，并具备告警能力&lt;/p&gt; 
 &lt;p&gt;它完美继承了 WGCLOUD 中的日志监控功能，并在其基础上增加了收集日志等更多功能，它是一个独立的专门为收集日志服务的轻量级日志平台&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//a859a7eb9f94d150631bb239632a1469.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1066" src="https://oscimg.oschina.net/oscnet/up-fce80790cd510365221f05ba673f7b6cbc0.png" width="1917" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1373" src="https://oscimg.oschina.net/oscnet/up-0dba2520d4a47f90c2e1479cc9dbbdf320b.png" width="1881" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357948</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357948</guid>
      <pubDate>Sun, 11 May 2025 03:21:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>得物社区活动：组件化的演进与实践</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;一、前言：社区与活动&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;「得物平台上的大量商品都具有文化与精神属性，用户往往通过社区来进行了解和分享。」&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;得物平台作为潮流文化与电商融合的前沿阵地，其社区活动业务的演进备受瞩目。得物平台的很多商品蕴含深厚的文化与精神内涵，这吸引用户在社区进行深度的了解与分享。潮流以品牌和带有潮流元素的产品为载体，以社区和内容作为传播媒介。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从业务视角审视，种草激励、MCN 入驻、达人签约以及各类活动玩法，本质上皆是内容与品牌之间的博弈。通过活动业务，能够获取更为丰富、优质的内容，而这些内容又能进一步强化品牌文化与形象，进而筑牢得物社区的潮流心智根基。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/4e/4e34e75e3f7a8ea4913e7712186ce5c2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;依据以往大盘数据分析，活动所带来的发布在 UGC 大盘中占比及推荐流阅读时长上均有显著作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;由此可见，活动业务在得物社区的 UGC 发布等相关指标中，占据着举足轻重的地位。回顾得物社区的发展历程，品牌文化的深耕与品类挖掘的潮流大势清晰可辨。得益于这一趋势，社区活动业务近年来备受关注，各类玩法如雨后春笋般层出不穷。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;二、业务催化剂&lt;/h1&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;效果与效率的辩证探索&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为了探寻活动效果的极致境界，我们始终在活动玩法的搭配上不断推陈出新、勇于尝试。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;话题类玩法致力于用户心智的精耕细作、激励类玩法侧重于内容质量的提升拔高、互动类玩法着重于用户粘性的稳固增强。活动效果大多取决于玩法本身，这也正是活动玩法日新月异的根源所在。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/85/8515f26b592582dfa3cbe672e2b8d0a1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;然而，效率与效果有着不同的侧重点。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;效率并不追求差异化的活动玩法，而是在既定框架内，以最优的流程达成目标。&lt;strong&gt;它着眼于资源的高效利用，强调标准化与模板化，让活动能够按部就班、有条不紊地推进&lt;/strong&gt;。但这并不意味着效果与效率相互对立，相反，我们需要在两者之间找到一个恰到好处的平衡点，使其共同为活动业务的破圈发展添砖加瓦。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;现存问题剖析&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其一&lt;/strong&gt;，每当推出新活动，不同玩法和激励功能的显著差异，要求我们必须从零开始进行开发与测试。这一过程不仅耗费大量的人力、物力和时间资源，还极大地拖慢了市场响应速度，导致迭代成本居高不下，且难以有效控制。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以常见的活动玩法为例：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/58/58dd31ac16ea398d78a49af4fb392a73.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其二&lt;/strong&gt;，新功能的引入对线上服务的稳定性构成潜在威胁，尤其是涉及资产/交易的业务，其潜在风险不容忽视。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;最后&lt;/strong&gt;，由于不同产品团队对同一玩法的理解和实现方式存在差异，使得功能在迭代过程中难以保持持续性和一致性。这种情况不仅造成同质化功能重复开发，还使得宝贵的开发经验无法有效沉淀和传承，严重制约了业务的长期发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动玩法体系中，任务判定作为核心环节，其复杂性尤为突出。任务条件具有种类繁多，配置灵活的特点，这不仅增加了业务逻辑的复杂度，还大幅提升了线上问题排查和修复的难度与成本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/ce/cefcdec0b613710e2f46ae01eda7cfb5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;破局与机遇&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;面对上述种种挑战，我们将其组件化，使其成为行之有效的解决思路。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;解决思路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;高频业务迭代的适配&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;活动业务的频繁更迭为组件化提供了得天独厚的条件。通过将复杂功能拆解为独立、可复用的组件，能够迅速顺应变化，敏捷响应市场需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;业务特性的契合&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;大部分活动功能具有可拆分和可抽象的特性，这为组件化的实施奠定了坚实的基础，使其得以顺利开展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;降本提效的需求驱动&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;随着业务的持续增长和市场要求的稳步提升，采用组件化方式能够切实有效地降低成本，提升运营效率，为业务的稳健增长提供强大助力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;组件化的核心在于从价值向设计的转变。每一个组件都应具备高内聚、低耦合的特性，确保能够在不同场景下灵活复用，而不受具体业务逻辑的束缚。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模块化设计：&lt;/strong&gt;需将复杂系统拆解为多个模块，每个模块负责一项独立的功能，便于开发和维护。&lt;strong&gt;大系统小做&lt;/strong&gt;，做从根本上化解业务复杂度问题，拆分大的功能到最小组件上，注重组件之间的接口与衔接。&lt;strong&gt;小功能大做&lt;/strong&gt;，从单纯的任务条件判定到规则引擎，小的功能往往多且差异性大，通过系统化的设计将他们的能力聚合并出口，保持对后续业务的灵活适配能力，并将影响最小化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;接口抽象：&lt;/strong&gt;定义清晰明确的接口，使各组件之间的交互简洁明了，通过实现接口来替代业务的直接依赖，提升系统的灵活性与可扩展性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;标准化配置：&lt;/strong&gt;制定统一的配置标准，简化配置过程，减少迭代调整的频率与复杂性，提高工作效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h1_6"&gt;&lt;/span&gt; 
&lt;h1&gt;三、组件化：从想法到实践&lt;/h1&gt; 
&lt;span id="OSC_h2_7"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;OOP&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;现实世界事物纷繁复杂、千头万绪，难以全面认识和深入理解。人类通过分类归纳的方法，将复杂事物系统化、条理化，从而使其变得井然有序。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在业务设计中亦是如此，需求千差万别、形形色色，每个人都可能参与其中，即便在基础编码规范的约束下，仍可能出现风格各异的设计，进而导致维护成本攀升、重复能力难以有效复用等问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;这便催生了我们所熟知的设计范式。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;There are four major benefits to object-oriented programming:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Encapsulation&lt;/strong&gt;: in OOP, you bundle code into a single unit where you can determine the scope of each piece of data.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Abstraction:&amp;nbsp;&lt;/strong&gt;by using classes, you are able to generalize your object types, simplifying your program.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Inheritance:&amp;nbsp;&lt;/strong&gt;because a class can inherit attributes and behaviors from another class, you are able to reuse more code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Polymorphism:&amp;nbsp;&lt;/strong&gt;one class can be used to create many objects, all from the same flexible piece of code.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;系统和业务&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;系统，&lt;/strong&gt;作为整个活动与任务体系的架构基础，必须具备高度的健壮性和灵活的扩展能力。它主要承担数据聚合、规则判定和状态流转三大核心功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以抽奖活动玩法为例，系统负责收集整合各个渠道的用户数据，判断用户是否符合参与活动的资格、是否为风险用户、是否符合发布要求，并依据用户行为和活动规则进行状态流转。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;业务&lt;/strong&gt;，则是体系的核心价值体现，具有动态性和多样性的特点。它主要涵盖实时行为、滞后行为和被动行为三种类型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在抽奖玩法活动中，实时行为包括用户在活动页面的即时交互操作，如分享活动链接、浏览活动页面、订阅直播等；滞后行为涉及用户发布内容后的质量评估和审核流程；被动行为则包含数据清洗、数据回扫等后台处理任务。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;事件驱动&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;系统和业务之间的关系基于事件驱动来实现。在活动业务中，事件驱动宛如一条无形却坚韧的纽带，将系统和业务紧密相连，同时又保持各自的独立性。通过事件驱动，系统能够敏锐感知业务的变化与需求，业务也能借助系统的强大能力实现自身目标。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/f9/f9ed313ae82e3e11bd3a631f0b1c6e47.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;基于事件驱动机制，我们定义了核心的任务模版方法和激励模版方法。不同的任务和激励形式可以根据具体业务需求进行个性化定制，从而实现系统与业务的有效分离。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_10"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;模块与模块&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;除了系统与业务的解耦，系统内部模块之间也需要进行有效的隔离。我们引入事件总线架构的思想，将其作为事件发布者和订阅者之间的通信中介。在标准化各模块输入输出接口的基础上，结合哪吒搭建平台，通过配置关联的方式对各个模块进行编排，实现模块之间的通信与协作，同时避免模块间的直接依赖，达到模块解耦的目的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/72/72fc928560cbcc84977edcac704dd2d7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_11"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;核心概念&amp;amp;设计&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;活动系统整体将业务层和系统层拆分为两大板块，通过事件驱动媒介实现二者的隔离与闭环，确保系统层和业务职能清晰明确，为活动业务的可持续迭代发展保驾护航。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/5b/5bf6af06882bcdb96ff447b7c31f7662.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;活动和任务&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;随着近期社区活动业务的蓬勃发展与活跃迭代，当前版本的活动体系在应对诸多玩法时愈发显得力不从心、捉襟见肘，主要体现在以下两个方面：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;活动层以及奖励粒度的搭配难以满足多元化玩法的需求，存在明显的适配不足。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;活动、任务、奖励等层面的个性化要求配置无法充分满足，限制了业务的创新发展。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为此，我们从&amp;nbsp;&lt;strong&gt;「活动与玩法的适配、任务粒度及激励个性化」&lt;/strong&gt;几个关键方向发力，进行体系重构。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;首先&lt;/strong&gt;，将激励完全抽象为 「激励值」，无论是抽奖次数、瓜分机会、兑换积分、优惠券金额，都以 「值的形式」 进行抽象化处理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/39/39199868c46ba51b127e7f242e4aa4d7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;这一抽象设计极大提高了活动、任务和激励之间关系的灵活性，能够满足当前绝大多数活动业务的设计需求。然而，抽象处理也带来了一些问题，例如在用户界面展示方面，难以直观呈现用户在某活动中是否获得过特定奖励。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其次&lt;/strong&gt;，构建了新的关联框架。单个页面可以关联多个活动，单个活动可以关联多个任务，单个任务可以进一步关联多个任务明细，抽象化的激励值直接与具体任务相关联。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/da/da9e83f16a6164e39d3f7e2dcbad995c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;最后&lt;/strong&gt;，完成三层概念设计。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动层，通过设置严格的报名策略和人群筛选条件，确保活动参与的精准性；在任务层，明确任务下发策略、达成条件和执行频率控制，使任务执行更加规范可控；在激励层，设定激励获取上限并制定智能分配策略，实现激励资源的合理分配。通过这种方式，实现了活动、任务、激励之间的自由组合和灵活配置，有效提升了整体运营效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;任务判定抽离：规则引擎&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在传统任务模块代码中，大量的 case 语句导致条件判定逻辑分散在各处。随着业务的不断迭代，业务逻辑变得愈发复杂，逐渐暴露出以下问题：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;每次条件改动，甚至是数值调整，都需要开发人员介入，耗费大量人力和时间。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;各种条件判断与业务紧密耦合，开发效率低下且难度极大，增加了开发成本和风险。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任务体系的可扩展性和稳定性差强人意，难以适应快速变化的业务需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;业务透明度极低，团队协作推进困难，新人难以快速上手。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为解决这些问题，我们引入规则引擎，将业务决策逻辑从任务模块中抽离出来。规则引擎通过接收动态数据输入，依据内部预设规则进行计算和判断，输出决策结果，从而实现业务逻辑的独立维护和动态更新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/74/740e7259afc695d67ead8f787736ff72.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;任务模型&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动系统中，任务模块扮演着至关重要的角色，主要体现在以下两个方面：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;核心驱动力：&lt;/strong&gt;任务模块是推动活动进展的核心动力源泉。它通过设置一系列明确的任务，引导用户按照活动预期方向进行操作，从而确保活动目标的顺利实现。例如在电商促销活动中，设置 「分享活动页面至社交平台，邀请 5 位好友助力」 的任务，以此扩大活动影响力，吸引更多潜在用户参与。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;数据洞察源：&lt;/strong&gt;任务模块所产生的数据是了解用户行为和活动效果的关键依据。通过分析用户完成任务的情况，如完成率、完成时间等，可以精准洞察用户的兴趣点和参与度，为优化活动策略提供有力支撑。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;为应对任务多元化这一挑战，任务模块化成为必然选择。模块化设计将任务拆解为独立的组件，显著提高了开发效率和灵活性。同时，模块化架构便于维护和更新，当某个模块出现问题或需要升级时，只需单独处理该模块，不会影响其他部分，有效降低了业务定制的成本和风险，使任务模块能够更好地适应复杂多变的业务环境。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;根据业务特性，我们首先定义了任务接口，并严格划分接口内外的职责边界，确保接口内部专注于业务逻辑实现，接口外部实现系统功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;任务模型定义如下：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// TaskMode 任务模型
type&amp;nbsp;TaskMode&amp;nbsp;interface&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;// TaskType 任务类型
&amp;nbsp; &amp;nbsp; TaskType() consts.ActTaskType
&amp;nbsp; &amp;nbsp;&amp;nbsp;// TaskUniqueFlag 事件唯一标识
&amp;nbsp; &amp;nbsp; TaskUniqueFlag()&amp;nbsp;string
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ExpressFunctions 自定义函数集
&amp;nbsp; &amp;nbsp; ExpressFunctions(ctx context.Context)&amp;nbsp;map[string]govaluate.ExpressionFunction
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ExpressArguments 任务条件参数搜集器
&amp;nbsp; &amp;nbsp; ExpressArguments(ctx context.Context, pending []db.PendingTasks) (dto.ExpressArguments,&amp;nbsp;error)
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;具体实现何种任务模型，则参考业务方的实际诉求，只要按照&lt;strong&gt;「TaskMode」&lt;/strong&gt;接口规范进行实现即可。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;这里以&amp;nbsp;&lt;strong&gt;「发布篇数任务-TaskPublishTimes」&lt;/strong&gt;&amp;nbsp;的实现为例进行说明：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;type&amp;nbsp;TaskPublishTimes&amp;nbsp;struct&amp;nbsp;{
&amp;nbsp; &amp;nbsp; event *dto.TaskPublishEvent
}


func&amp;nbsp;NewTaskPublishTimes(event *dto.TaskPublishEvent)&amp;nbsp;(taskMode TaskMode, err&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;event.ContentId ==&amp;nbsp;0&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return&amp;nbsp;nil, errors.New("missing necessary parameters")
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; taskMode = &amp;amp;TaskPublishTimes{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;event: event,
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;return
}


// TaskType 任务类型
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;TaskType() consts.ActTaskType {
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;consts.ActTaskTypePublishTimes
}


// TaskUniqueFlag 任务唯一标识
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;TaskUniqueFlag()&amp;nbsp;string&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;fmt.Sprintf("CNT_ID_%d", t.event.ContentId)
}


// ExpressFunctions 自定义函数集
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;ExpressFunctions(ctx context.Context)&amp;nbsp;map[string]govaluate.ExpressionFunction {
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;map[string]govaluate.ExpressionFunction{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// "WITH_ANY_TOPIC(tag_ids, (1001,1002)) == TRUE"
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"WITH_ANY_TOPIC":&amp;nbsp;func(args ...interface{})&amp;nbsp;(interface{},&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;intersect, _ = arrayx.Intersect(carryIds, condIds)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;float64(len(intersect.Interface().([]uint64))) &amp;gt;&amp;nbsp;0,&amp;nbsp;nil
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;},
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 省略部分...
&amp;nbsp; &amp;nbsp; }
}


// ExpressArguments 条件参数搜集器
func&amp;nbsp;(t *TaskPublishTimes)&amp;nbsp;ExpressArguments(ctx context.Context, pending []db.PendingTasks) (dto.ExpressArguments,&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;eg = gox.NewErrGroup(ctx)
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;args = dto.ExpressArguments{}
&amp;nbsp; &amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 基础信息
&amp;nbsp; &amp;nbsp; eg.Go(func()&amp;nbsp;error&amp;nbsp;{&amp;nbsp;/**/&amp;nbsp;})
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 互动信息
&amp;nbsp; &amp;nbsp; eg.Go(func()&amp;nbsp;error&amp;nbsp;{&amp;nbsp;/**/&amp;nbsp;})
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 审核信息
&amp;nbsp; &amp;nbsp; eg.Go(func()&amp;nbsp;error&amp;nbsp;{&amp;nbsp;/**/&amp;nbsp;})
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ...


&amp;nbsp; &amp;nbsp; err = eg.Wait()
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;args, err
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;与传统面向对象编程实现方式相比，Golang 的接口实现更加灵活。只要 Struct 实现了接口定义的所有方法，即可隐式实现该接口，无需显式声明，这种特性为任务模型的开发提供了更高的灵活性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;任务触发器&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;任务触发器与任务模型相互独立，不存在直接依赖关系。当系统接收到行为事件时，会实例化具体的任务模型，并将其作为参数注入任务触发器，从而驱动系统与任务的协同运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;任务触发器应与业务逻辑完全分离，所有与业务相关的改动集中在任务模型中，修改后只需针对相应改动点进行回归测试。而与系统相关的改动则集中在任务触发器中，由于这部分改动可能影响所有任务模型的执行结果，因此需要谨慎处理，并确保进行全面的回归测试。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// TaskTrigger 任务触发器
func&amp;nbsp;(s *ActSysTaskService)&amp;nbsp;TaskTrigger(ctx context.Context, taskMode act_sys.TaskMode) (err&amp;nbsp;error) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 用户粒度任务锁
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 列表用户任务
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;pending, err = dao.ListUserTasks(ctx, event.UserId)
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 二次过滤（任务状态、活动时间）
&amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp;
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 自定义函数集 &amp;amp; 条件参数搜集
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;condFunc = taskMode.ExpressFunctions(ctx)
&amp;nbsp; &amp;nbsp;&amp;nbsp;var&amp;nbsp;condArgs, err = taskMode.ExpressArguments(ctx, pending)
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return
&amp;nbsp; &amp;nbsp; }


&amp;nbsp; &amp;nbsp;&amp;nbsp;// 任务达成判定
&amp;nbsp; &amp;nbsp;&amp;nbsp;for&amp;nbsp;_, v :=&amp;nbsp;range&amp;nbsp;pending {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;var&amp;nbsp;reach&amp;nbsp;bool
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;reach, err = act_sys.RunTaskExpress(ctx, v.TaskCondExpr, condFunc, condArgs)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if&amp;nbsp;err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;continue
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}


&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if&amp;nbsp;reach {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 更新 or 写入任务明细记录 &amp;amp; 任务进展 &amp;amp; 发放/回退奖励值
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// ...


&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 执行 HOOKS（这里是不同业务的个性化订阅者）
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;return
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在任务触发器的设计中，重点涉及任务初始化与下发流程。由于行为事件入口众多，难以采用传统方式进行显性任务下发，因此我们将任务下发逻辑嵌入任务触发器中，使每次事件注入触发器时都成为一次任务下发的机会。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;当然，这种设计也存在一定风险，在触发器中添加代码可能会对整个任务体系的运行产生影响，甚至可能增加任务推进逻辑的响应时间（RT）。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/db/db37b64c6a94b08142e342b1d997d33c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_12"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;业务协同&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在实现业务功能的同时，系统的稳定性和健壮性至关重要。模块化架构不应成为阻碍业务定制化发展的因素，而应更好地服务于业务创新。在实际业务场景中，如输出当日各核心节点的数据画像、任务完成后对用户进行消息触达等需求，我们通常采用钩子（HOOK）机制，在各个核心节点完成后执行一系列自定义处理逻辑，实现系统与业务的闭环交互。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/e2/e21031ea6cd9ec3299d8d53fbeb63240.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以高价值奖品兑换活动为例，当用户完成一系列任务后，系统会触发多个钩子，通知业务模块进行风险评估、收益预判、状态更新等操作。同时，业务模块可以通过注册观察者模式，实时监控系统运行状态，如兑换流程是否正常、服务器是否稳定等，一旦发现异常情况，立即进行处理，确保系统和业务的协同稳定运行。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;钩子机制&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在任务模块化进程中，HOOK 机制发挥了至关重要的作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;HOOK 机制本质上是一种程序控制技术，它允许开发者在系统运行的特定阶段插入自定义代码。借助这一特性，我们能够在任务触发时、执行过程中、执行完成后等关键节点灵活添加额外逻辑，最终实现业务差异化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;首先，我们需要定义观察者接口、事件主体及其实现，这里以任务明细达成节点为例进行说明：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// ActSysObserver4TaskDetail 任务明细进展转发
type&amp;nbsp;ActSysObserver4TaskDetail&amp;nbsp;interface&amp;nbsp;{
&amp;nbsp; &amp;nbsp; Unique()&amp;nbsp;string
&amp;nbsp; &amp;nbsp; Forward(ctx context.Context, detail *db.ActUserTaskDetail)&amp;nbsp;error
}


type&amp;nbsp;ActSysSubject4TaskDetail&amp;nbsp;struct&amp;nbsp;{
&amp;nbsp; &amp;nbsp; mutex &amp;nbsp; &amp;nbsp; sync.Mutex
&amp;nbsp; &amp;nbsp; observers []ActSysObserver4TaskDetail
}


func&amp;nbsp;(sj *ActSysSubject4TaskDetail)&amp;nbsp;Attach(observer ActSysObserver4TaskDetail) {
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;uk := observer.Unique();&amp;nbsp;len(uk) &amp;gt;&amp;nbsp;0&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sj.mutex.Lock()
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sj.observers =&amp;nbsp;append(sj.observers, observer)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sj.mutex.Unlock()
&amp;nbsp; &amp;nbsp; }
}


func&amp;nbsp;(sj *ActSysSubject4TaskDetail)&amp;nbsp;Notify(ctx context.Context, detail *db.ActUserTaskDetail)&amp;nbsp;error&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;for&amp;nbsp;_, observer :=&amp;nbsp;range&amp;nbsp;sj.observers {
&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;err := observer.Forward(ctx, detail); err !=&amp;nbsp;nil&amp;nbsp;{
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return&amp;nbsp;err
&amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;nil
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;示例仅伪代码，实际业务上应当考虑重复注册、同步执行 or 异步执行、是否强事务等问题。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;然后，对于个性化的业务场景，只需实现业务自己的观察者，以打卡玩法触达提醒为例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// ActTaskDetailObserver2CheckinReach 任务明细进展·打卡玩法的私信 HOOK
type&amp;nbsp;ActTaskDetailObserver2CheckinReach&amp;nbsp;struct&amp;nbsp;{
}


func&amp;nbsp;(ob *ActTaskDetailObserver2CheckinReach)&amp;nbsp;Forward(ctx context.Context, detail *db.ActUserTaskDetail)&amp;nbsp;error&amp;nbsp;{
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 兜底判断任务明细未完成
&amp;nbsp; &amp;nbsp;&amp;nbsp;if&amp;nbsp;detail.Status != consts.ActTaskDetailStatusDone {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;nil
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp;&amp;nbsp;// 触达用户（动态达标提醒）
&amp;nbsp; &amp;nbsp;return&amp;nbsp;NewReachClient().Send(ctx,&amp;nbsp;"act_checkin_task_detail_done", detail.userId)
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;最后，在初始化时，将观察者注册到主体中即可。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;不同的活动玩法最终都是通过观察者模式的设计来实现差异化，甚至任务模块本身也可以通过该方式来实现更上层的任务架构。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_13"&gt;&lt;/span&gt; 
&lt;h1&gt;四、新陈更迭与系统化&lt;/h1&gt; 
&lt;span id="OSC_h2_14"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;新陈更迭&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;优秀的系统并非一蹴而就的，而是要历经无数次的业务迭代和市场检验，也就必然存在新陈更迭的过程。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从业务层面来看，我们需要清楚当前业务的真实诉求，明确业务功能的拆分方式（从难易程度、风险系数、影响面等多维度考量）。其次，要了解该业务的历史演进及产品习惯，识别新老业务之间可能存在的关联风险。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;从技术层面而言，首先要划分清楚能力和业务的界限，其次通过巧妙的设计思路进行分化与衔接。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;综合来讲，业务的高质量交付应始终摆在首位，结合业务的粒度去适配新方案的能力，在测试阶段需要明确对齐并进行全面性回归，老方案的业务和新方案的技术应该具备兜底和互动能力，以确保系统的稳定过渡和持续扩展。&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_15"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;走进系统化&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在活动系统组件化的基础上，我们以&lt;strong&gt;运营标准化提效、数据可视化赋能、协作体系化破局&lt;/strong&gt;为核心目标，构建全链路协同能力，推动活动业务从 「模块化」 向 「系统化」 跃迁。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我们以三大核心体系为抓手，全面提升活动业务效能：构建可复用的生产体系，依托标准化活动要素库与低代码平台，实现组件化拼装与流程标准化，大幅降低开发成本、提升上线效率；打造智能决策中枢，整合多维度数据，通过实时监控与智能分析驱动策略优化，助力运营从经验驱动迈向数据决策；打通跨团队协同链路，统一协作标准、集成开发工具链，并成立中台委员会推动能力沉淀，有效减少重复工作、缩短迭代周期，破除部门协作壁垒 ，最终推动活动业务从 「模块化」 向 「系统化」 全面跃迁。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static001.geekbang.org/infoq/ed/ed416e88254d6a096e8993be4da05922.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_16"&gt;&lt;/span&gt; 
&lt;h1&gt;五、展望潮流生态&lt;/h1&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;得物社区活动业务将以组件化、系统化成果作为基石，持续深化创新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;随着 AIGC、边缘计算等前沿技术的融合应用，活动系统将朝着 「智能自优化」 加速迈进。一方面，通过 AI 算法精准预测用户兴趣与行为趋势，自动优化活动策略与任务设计，让潮流内容与用户需求实现更高效匹配。另一方面，借助边缘计算降低数据处理时延，为用户带来更流畅、即时的活动交互体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在商业价值与文化影响力层面，得物将进一步打破潮流文化与电商消费的壁垒，通过活动业务构建更紧密的用户、品牌、文化生态闭环。未来，无论是小众潮流文化的破圈传播，还是品牌与用户间的深度情感联结，得物都将凭借不断进化的技术与创新模式，持续引领潮流社区电商的发展风向，书写行业新篇章。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顾&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;1.&lt;/span&gt;得物研发自测 &amp;amp; 前端自动化测试体系建设&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;2.&lt;/span&gt;从 CPU 冒烟到丝滑体验：算法 SRE 性能优化实战全揭秘｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;3.&lt;/span&gt;得物自研 DScript2.0 脚本能力从 0 到 1 演进&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;4.&lt;/span&gt;社区造数服务接入 MCP｜得物技术&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;5.&lt;/span&gt;CSS 闯关指南：从手写地狱到「类」积木之旅｜得物技术&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;文 / 小龙&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;关注得物技术，每周更新技术干货&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;要是觉得文章对你有帮助的话，欢迎评论转发点赞～&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未经得物技术许可严禁转载，否则依法追究法律责任。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18626983</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18626983</guid>
      <pubDate>Sun, 11 May 2025 03:18:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>OpenAI 被曝将重新调整薪酬以应对 Meta 挖人</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;近日有消息称，Meta 成功挖走了多名 OpenAI 的高级研究人员。对此，OpenAI 的首席研究官马克・陈在一份 Slack 备忘录中向团队成员表达了他的担忧。他提到，OpenAI 的领导层并没有对此视而不见，而是积极采取措施应对这一情况。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="352" src="https://oscimg.oschina.net/oscnet/up-1b5f2ba1a20acea93257fcc4a8c9147df4c.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在备忘录中，马克・陈形象地描述了他当前的心情，称 「就像有人闯入我们的家并偷走了东西」。为了应对 Meta 的大规模招聘，OpenAI 的领导团队，包括首席执行官 Sam Altman，都在 「夜以继日地与那些有录用条件的人交谈」。陈强调，OpenAI 正在比以往更加积极主动，努力留住顶尖人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;据报道，OpenAI 正在重新调整薪酬结构，探索更加创造性的方式来表彰和奖励员工。这一系列举措的目的在于确保 OpenAI 能够在竞争激烈的市场中继续吸引并留住优秀的研究人员。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;过去一周共有八名研究人员离开 OpenAI 加盟 Meta。此前，OpenAI 首席执行官 Altman 曾在播客中透露，扎克伯格一直在提供超过 1 亿美元的薪酬方案，以吸引 OpenAI 的顶尖人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/357367/metas-recruiting-three-openai-researchers" target="_blank"&gt;Meta 成功挖角三名 OpenAI 研究人员&lt;/a&gt;&lt;/li&gt; 
 &lt;li style="text-align:start"&gt;&lt;a href="https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers" target="_blank"&gt;Sam Altman：Meta 曾试图以 1 亿美元挖走 OpenAI 人才，但未能成功&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357940</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357940</guid>
      <pubDate>Sun, 11 May 2025 03:11:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>文心大模型 4.5 系列正式开源：涵盖 10 款模型、同步开放 API 服务</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;6 月 30 日，百度正式开源文心大模型 4.5 系列模型，涵盖 47B、3B 激活参数的混合专家（MoE）模型，与 0.3B 参数的稠密型模型等 10 款模型，并实现预训练权重和推理代码的完全开源。&lt;/p&gt; 
&lt;p&gt;目前，文心大模型 4.5 开源系列已可在飞桨星河社区、HuggingFace 等平台下载部署使用，同时开源模型 API 服务也可在百度智能云千帆大模型平台使用。早在今年 2 月，百度就已预告了文心大模型 4.5 系列的推出计划，并明确将于 6 月 30 日起正式开源。&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0630/105733_HnDB_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;文心大模型 4.5 系列开源模型&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;此次百度一次性推出 10 款文心大模型 4.5 系列开源模型，在独立自研模型数量占比、模型类型数量、参数丰富度、开源宽松度与可靠性等关键维度上，均处于行业领先位置。&lt;/p&gt; 
&lt;p&gt;据介绍，文心大模型 4.5 开源系列针对 MoE 架构提出了一种创新性的多模态异构模型结构，适用于从大语言模型向多模态模型的持续预训练范式，在保持甚至提升文本任务性能的基础上，显著增强了多模态理解能力，其优越的性能主要得益于多模态混合专家模型预训练、高效训练推理框架和针对模态的后训练等关键技术点。&lt;/p&gt; 
&lt;p&gt;此外，文心大模型 4.5 开源系列均使用飞桨深度学习框架进行高效训练、推理和部署。在大语言模型的预训练中，模型 FLOPs 利用率（MFU）达到 47%。实验结果显示，其系列模型在多个文本和多模态基准测试中达到 SOTA 水平，尤其在指令遵循、世界知识记忆、视觉理解和多模态推理任务上效果突出。&lt;/p&gt; 
&lt;p&gt;在文本模型方面，文心大模型 4.5 开源系列基础能力强、事实准确性高、指令遵循能力强、推理和编程能力出色，在多个主流基准评测中超越 DeepSeek-V3、Qwen3 等模型。在多模态模型方面，文心大模型 4.5 开源系列拥有卓越的视觉感知能力，同时精通丰富视觉常识，并实现了思考与非思考统一，在视觉常识、多模态推理、视觉感知等主流的多模态大模型评测中优于闭源的 OpenAI o1。此外，在轻量模型上，文心 4.5-21B-A3B-Base 文本模型效果与同量级的 Qwen3 相当，文心 4.5-VL-28B-A3B 多模态模型也是目前同量级最好的多模态开源模型，甚至与更大参数模型 Qwen2.5-VL-32B 不相上下。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1000" src="https://static.oschina.net/uploads/space/2025/0630/105803_0jq5_2720166.png" width="960" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;文心 4.5 预训练模型在主流基准测试中表现优异&lt;/em&gt;&lt;/p&gt; 
&lt;p style="margin-left:.0001pt; margin-right:0"&gt;&lt;img height="3758" src="https://static.oschina.net/uploads/space/2025/0630/110149_aExt_2720166.png" width="3348" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;文心 4.5-300B-A47B 模型在主流基准测试中表现优异&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0630/105958_MlLX_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="849" src="https://static.oschina.net/uploads/space/2025/0630/110054_bDuQ_2720166.png" width="960" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;文心多模态后训练模型（支持思考、关闭思考）在多个多模态基准测试中达到 SOTA 水平&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;据了解，文心大模型 4.5 开源系列权重按照 Apache 2.0 协议开源，支持开展学术研究和产业应用。此外，基于飞桨提供开源的产业级开发套件，广泛兼容多种芯片，降低模型的后训练和部署门槛。&lt;/p&gt; 
&lt;p&gt;作为国内最早投入 AI 研发的企业之一，百度在算力、框架、模型到应用的四层布局构建了明显的 AI 全栈技术优势。其中，飞桨是中国首个自主研发、功能丰富、开源开放的产业级深度学习平台，基于多年飞桨开源技术与生态系统积累，此次文心大模型 4.5 开源系列同步升级发布文心大模型开发套件 ERNIEKit 和大模型高效部署套件 FastDeploy，为文心大模型 4.5 系列及开发者提供开箱即用的工具和全流程支持。&lt;/p&gt; 
&lt;p&gt;值得关注的是，此次文心大模型 4.5 系列开源后，百度实现了框架层与模型层的「双层开源」，为行业树立了新标杆。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357937</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357937</guid>
      <pubDate>Sun, 11 May 2025 03:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>全球首个千亿级发电行业大模型 「擎源」 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;由国家能源集团自主研发的全球首个千亿级发电行业大模型——「擎源」发电行业大模型已于日前正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FK2mn5RhRNyYK2MlT099nqg%3Fpoc_token%3DHCP7YWijbtXAFTyCRv6SuIyeXfJLGtl4sWjriE1s" target="_blank"&gt;发布&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img height="334" src="https://oscimg.oschina.net/oscnet/up-89a4befc2dc5a0816d7de9a78fcf3646181.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;根据介绍，「擎源」大模型结合发电产业多场景、高复杂度、强专业性的特点，依托国家能源集团全球最大装机规模、海量数据资产和全场景应用矩阵，开创多能协同动态优化新引擎、发电行业垂直深耕新范式、全栈自主可控智能决策新体系三大创新突破，构建了覆盖电力交易、产调中枢、设备检修、安全管理全链条的智能决策体系，推动电力生产运营管理从传统经验依赖向「AI 驱动」的数智化跃迁。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，「擎源」已在安全环保、电力交易、产调中枢、设备检修四大业务领域成功应用，覆盖 13 个场景，部署 41 个智能体，有效破解了行业长期存在的安全风险高、交易决策难、多能协同复杂、设备运维被动等关键痛点，未来将进一步构建更加开放共享的生态体系，对于促进人工智能高水平场景应用具有重要里程碑意义。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357936</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357936</guid>
      <pubDate>Sun, 11 May 2025 02:57:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>华为开源盘古 7B 稠密和 72B 混合专家模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;华为正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F07AcJr3LyVHK9HdkYwMU6Q" target="_blank"&gt;宣布&lt;/a&gt;开源盘古 70 亿参数的稠密模型、盘古 Pro MoE 720 亿参数的混合专家模型和基于升腾的模型推理技术。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公告称，「此举是华为践行升腾生态战略的又一关键举措，推动大模型技术的研究与创新发展，加速推进人工智能在千行百业的应用与价值创造。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="289" src="https://oscimg.oschina.net/oscnet/up-f2b864dfee590a317f69452b00c2e7b894c.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;盘古 Pro MoE 72B 模型权重、基础推理代码，已正式上线开源平台。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;基于升腾的超大规模 MoE 模型推理代码，已正式上线开源平台。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;盘古 7B 相关模型权重与推理代码将于近期上线开源平台。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357931</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357931</guid>
      <pubDate>Sun, 11 May 2025 02:39:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>百度文心大模型 4.5 系列正式开源</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;6 月 30 日，百度正式开源文心大模型 4.5 系列模型，涵盖 47B、3B 激活参数的混合专家（MoE）模型，与 0.3B 参数的稠密型模型等 10 款模型，并实现预训练权重和推理代码的完全开源。&lt;/p&gt; 
&lt;p&gt;目前，文心大模型 4.5 开源系列已可在飞桨星河社区、HuggingFace 等平台下载部署使用，同时开源模型 API 服务也可在百度智能云千帆大模型平台使用。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0630/102554_VR1x_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height="1790" src="https://static.oschina.net/uploads/space/2025/0630/101940_Jvl9_2720166.png" width="1628" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;文心大模型 4.5 系列模型下载地址：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faistudio.baidu.com%2Fmodelsoverview" target="_blank"&gt;https://aistudio.baidu.com/modelsoverview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fcollections%2Fbaidu%2Fernie-45-6861cd4c9be84540645f35c9" target="_blank"&gt;https://huggingface.co/collections/baidu/ernie-45-6861cd4c9be84540645f35c9&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;早在今年 2 月，百度就已&lt;a href="https://www.oschina.net/news/333670"&gt;预告&lt;/a&gt;了文心大模型 4.5 系列的推出计划，并明确将于 6 月 30 日起正式开源。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357927</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357927</guid>
      <pubDate>Sun, 11 May 2025 02:22:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>⚡ 模型即服务 - Wow 框架 v5.21.2 发布！🏗️</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;&lt;img alt="Wow:基于 DDD、EventSourcing 的现代响应式 CQRS 架构微服务开发框架" src="https://static.oschina.net/uploads/img/202312/13135012_Zb9v.svg" width="150" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow%2Fblob%2Fmvp%2FLICENSE"&gt;&lt;img alt="License" src="https://oscimg.oschina.net/oscnet/license-Apache%202-4EB1BA.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FWow"&gt;&lt;img alt="Integration Test Status" src="https://oscimg.oschina.net/oscnet/badge.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKotlinBy%2Fawesome-kotlin"&gt;&lt;img alt="Awesome Kotlin Badge" src="https://oscimg.oschina.net/oscnet/awesome-kotlin.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;领域驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;测试驱动&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;声明式设计&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;响应式编程&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;命令查询职责分离&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;|&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;事件溯源&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;官方文档：&lt;/strong&gt;&lt;img alt="👉" height="14" src="https://oscimg.oschina.net/oscnet/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" referrerpolicy="no-referrer"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2F" target="_blank"&gt;https://wow.ahoo.me/&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;img alt="👈" height="14" src="https://oscimg.oschina.net/oscnet/point_left-4570b6929b8880ab2e8b8031007fef18.png" width="14" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;h1&gt;Wow v5.21.2 发布公告：安全升级与核心能力增强 🚀&lt;/h1&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;本次更新聚焦安全加固与核心功能优化，带来更稳定的开发体验和更强大的 API 能力！以下是重点更新摘要：&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;✨ 重磅特性&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;安全模块重磅登场&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;新增&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;wow-cosec&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;安全模块，提供 API 请求安全头自动配置&lt;/li&gt; 
    &lt;li&gt;Spring Boot Starter 集成安全自动配置，开箱即用&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;OpenAPI 能力升级&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;增强 API 文档生成机制，自动注入服务版本与上下文信息&lt;/li&gt; 
    &lt;li&gt;新增 OpenAPI 描述字段，文档可读性提升 300%&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;JSON Schema 生成器重构&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;全新&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;SchemaGeneratorBuilder&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持灵活定制 JSON Schema&lt;/li&gt; 
    &lt;li&gt;升级至 Draft-07 规范，兼容性更优&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;数据脱敏新能力&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;为物化视图快照 (&lt;code&gt;IMaterializedSnapshot&lt;/code&gt;) 增加通用数据掩码功能&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h2&gt;🔒 安全增强&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;全链路 API 请求自动注入安全头&lt;/li&gt; 
  &lt;li&gt;安全模块与补偿服务深度集成&lt;/li&gt; 
  &lt;li&gt;敏感数据查询自动掩码防护&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;⚙️ 核心优化&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;聚合根处理升级&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;强化状态聚合根元数据处理机制&lt;/li&gt; 
    &lt;li&gt;优化聚合 ID 的元数据映射逻辑&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;MongoDB 查询增强&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;新增字段转换器支持投影与排序&lt;/li&gt; 
    &lt;li&gt;查询条件字段自动类型转换&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;测试框架革新&lt;/strong&gt; 
   &lt;ul&gt; 
    &lt;li&gt;全面迁移至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FAhoo-Wang%2FFluentAssert" target="_blank"&gt;fluent-assert&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;断言库&lt;/li&gt; 
    &lt;li&gt;移除 Hamcrest 依赖，测试代码更简洁&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;📦 依赖更新&lt;/h2&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span style="background-color:#ddffdd"&gt;+ Spring Boot 3.5.3&lt;/span&gt;
&lt;span style="background-color:#ddffdd"&gt;+ Kotlin 2.2.0 &lt;/span&gt;
&lt;span style="background-color:#ddffdd"&gt;+ Swagger 2.2.34&lt;/span&gt;
&lt;span style="background-color:#ddffdd"&gt;+ Testcontainers 1.21.2&lt;/span&gt;
&lt;span style="background-color:#ddffdd"&gt;+ MockK 1.14.4&lt;/span&gt;
&lt;/code&gt;
&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;h2&gt;🧹 代码精炼&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;移除冗余 Saga 类，提升代码纯净度&lt;/li&gt; 
  &lt;li&gt;补偿处理逻辑简化，可维护性提升&lt;/li&gt; 
  &lt;li&gt;重构版本获取机制，默认值处理更智能&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;🎯 为现代化微服务而生，让领域驱动设计触手可及！&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;简介&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;是一个基于领域驱动设计和事件溯源的现代响应式&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;微服务开发框架，历经多年生产环境验证。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;旨在帮助开发者构建现代化的、高性能且易于维护的微服务应用程序，充分发挥领域驱动设计和事件溯源等模式优势的同时降低应用的复杂性以及实践成本。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;值得一提的是，领域驱动设计和事件溯源并非微服务架构的专属，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架不仅适用于微服务开发，同样也可用于构建基于领域驱动设计的单体应用程序。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;快速开始&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fgetting-started.html" target="_blank"&gt;使用 Wow 项目模板快速创建基于 Wow 框架的 DDD 项目&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性概览&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Features" src="https://oscimg.oschina.net/oscnet/Features.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;架构图&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="Wow-Architecture" src="https://oscimg.oschina.net/oscnet/Architecture.svg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;背景&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展和复杂性的增加，传统的架构和开发方式逐渐显露出瓶颈。&lt;em&gt;领域驱动设计&lt;/em&gt;和&lt;em&gt;事件溯源&lt;/em&gt;等理念在提高系统设计的灵活性和可维护性方面表现出色，但在实践中常常需要面对复杂性和学习曲线的挑战。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的目标是以简单易用的方式将领域驱动设计和事件溯源等理念融入到微服务应用开发中，降低开发者的学习成本，提高开发效率。 通过提供现代响应式的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CQRS&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架构和相关组件，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架旨在让开发者更专注于业务逻辑的实现，而不必过多关心底层技术细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;经过多年的实践和不断的演进，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在生产环境中得到了验证，积累了丰富的经验。这些经验和反馈不仅丰富了框架的功能和性能，也为持续的改进和优化提供了宝贵的指导。&lt;/p&gt; 
&lt;h2&gt;对于开发者而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;我曾告诫我的团队：如果我们过于依赖&lt;em&gt;数据驱动设计&lt;/em&gt;而忽视&lt;em&gt;领域驱动设计&lt;/em&gt;，我们最终将沦为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师的竞争力和可替代性可想而知，这或许是为何会有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;35&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁效应，企业显然更倾向于招募没有太多生活羁绊、更加廉价的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;25&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;岁&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CRUD&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;工程师。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;业务价值&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;软件系统的核心价值体现在业务价值上，研发人员不应只关注技术实现上，而是应该更多地关注业务价值的实现。 这其中的好处显而易见，当你开发完一个业务系统之后，你将变成一个业务专家，甚至比跟你合作的领域专家还要专业，因为你需要洞察业务细节。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，意味着你将关注点放在围绕领域模型设计上，与业务专家一起探索业务领域，而不是关注于技术实现上。 你仅需编写领域模型，即可完成服务开发，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架自动为你准备好&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;OpenAPI&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;接口。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在《实现领域驱动设计》一书中，作者 Vaughn Vernon 提到：核心域才值得投入精力进行领域驱动设计， 但如果你使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将发现，因为低廉开发成本、快速的开发效率，即使是次要的支撑子域也值得&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;DDD&lt;/em&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;性能与伸缩性&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;随着业务的发展，你需要开始思考系统的性能和伸缩性问题。 在传统架构中，这牵扯到数据库关系模式、分片规则等复杂问题，同时你还需要处理因数据库分片导致的跨分片事务问题。 这时，你不得不修改你的业务代码，以适应水平拆分后的数据库架构。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;然而，如果你选择使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将不再需要过多关注数据库关系模式、分片规则等问题。你的业务代码无需变更，系统能够轻松实现水平伸缩。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fperf-test.html" target="_blank"&gt;Wow 框架的性能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;读写分离与同步延迟&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;读写分离是一种极为普遍的性能优化架构模式。 然而，同步延迟问题常伴随而来，事务执行成功后写库落库成功，但读库同步延迟，用户刷新页面后无法获取最新数据，从而对用户的体验产生影响。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用户发起下单事务，写库执行成功，但由于某种原因，读库同步延迟，用户刷新页面后发现订单未成功创建。&lt;/li&gt; 
 &lt;li&gt;商家编辑完商品后，同步到&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Elasticsearch&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;索引库，但由于某种原因，同步延迟，导致商家刷新页面后搜索不到该商品。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通常，大家采用最简便的方法，等待 1 秒后刷新页面。 虽然这种方式能解决大多数数据同步延迟的问题，但效率不够高。 因为大多数情况下，同步在 100 毫秒内就已完成，剩余的 900 毫秒成了&lt;em&gt;浪费&lt;/em&gt;。 然而，有时 1 秒无法完成同步，这就导致用户获取的数据变得&lt;strong&gt;无效&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你可以通过等待&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;PROJECTED&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;信号完成，然后再将结果返回给用户，以更为优雅和高效的方式处理数据同步延迟的问题。&lt;/p&gt; 
&lt;h3&gt;工程质量&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;单元测试&lt;/em&gt;是确保代码质量且符合预期业务需求的重要手段，但在传统架构中，单元测试往往是一项相当困难的任务，因为你需要考虑数据库连接、事务管理、数据清理等问题。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架，你将会发现基于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Given-&amp;gt;When-&amp;gt;Expect&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;模式的测试套件，使得单元测试变得异常简单。 你只需关注领域模型是否符合预期，而无需为数据库连接等问题烦恼。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在实际应用中，我们将领域模型的单元测试覆盖率下限阈值设置为&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;85%&lt;/strong&gt;，也是可以轻松实现的。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;在没有刻意要求的情况下，开发人员甚至自觉地将覆盖率提升至&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;95%&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;因此，每次提交代码都变得轻松自在，因为你确信你的代码经过了充分的测试，并且真正意义上从单元测试中获得了收益。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在研发同级别的项目中，我们的测试团队在系统&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;API&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;测试中发现，基于 Wow 框架的项目，其&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;BUG&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;数仅为传统架构项目的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;1/3&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Ftest-suite.html" target="_blank"&gt;Wow 单元测试套件&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;对于企业而言，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架意味着什么？&lt;/h2&gt; 
&lt;h3&gt;商业智能&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="传统架构 VS 事件溯源" src="https://oscimg.oschina.net/oscnet/300ee974_384561.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:center"&gt;&lt;img alt="ETL 同步流程" src="https://oscimg.oschina.net/oscnet/5fda25c1_384561.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;商业智能&lt;/em&gt;是企业决策的关键支持，而数据则是商业智能的分析原料。业务数据越为丰富有价值，商业智能的分析结果越准确，决策也就更加可靠。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;与传统架构有着显著差异，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供了实时聚合根状态事件（&lt;code&gt;StateEvent&lt;/code&gt;）和聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为数据分析的数据源，同时极大降低了实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;（&lt;code&gt;Extract&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Transform&lt;/code&gt;,&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Load&lt;/code&gt;）的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;在传统架构中，实现实时&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;ETL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;通常需要经过繁琐的流程，包括&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;DB-&amp;gt;CDC-&amp;gt;Process-&amp;gt;DB&lt;/code&gt;，而在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架中，仅需一段简单的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;SQL&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;脚本即可完成这一过程。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;另外，在传统架构中，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;em&gt;CDC&lt;/em&gt;（&lt;code&gt;MySql Binlog&lt;/code&gt;）数据仅记录数据的变化，缺乏明确的业务语义。进行业务分析时，需要基于数据状态的变化推断出业务语义，这往往需要进行大量的数据处理。 相较之下，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架直接提供了聚合根状态事件和聚合命令作为数据分析的数据源，极大降低了数据处理的难度。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供的实时同步机制将数据实时同步至数据仓库（&lt;em&gt;ClickHouse&lt;/em&gt;），为实时数据分析提供了极大的便利。这种方法为商业智能提供了强有力的支持，构建了一个实时数据分析系统，使决策制定能够基于及时而准确的信息。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;你可以在这里了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 商业智能&lt;/a&gt;。&lt;/p&gt; 
&lt;h3&gt;操作审计&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;&lt;em&gt;操作审计&lt;/em&gt;是企业中保障安全性和合规性的重要组成部分，同时也是对系统操作进行监控和追踪的关键手段。&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架在这方面为企业带来了显著的优势。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;通过记录聚合命令（&lt;code&gt;Command&lt;/code&gt;）作为操作审计的数据源，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架能够详细追踪系统中的各种操作。 这些记录不仅包含了操作本身的内容，还涵盖了操作触发的副作用（&lt;em&gt;领域事件&lt;/em&gt;），为审计提供了更为全面和准确的数据基础。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;相较于传统审计方法，&lt;em&gt;Wow&lt;/em&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;框架的操作审计的数据源具备更加明确的业务语义，以及操作后产生的明确领域事件。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;此外，Wow 框架提供的实时数据同步机制也为操作审计带来了便利，确保了审计数据的及时性和一致性。&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;了解更多关于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwow.ahoo.me%2Fguide%2Fbi.html" target="_blank"&gt;Wow 操作审计&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357915</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357915</guid>
      <pubDate>Sun, 11 May 2025 01:46:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>AtomUI OSS 1.0 公测版国庆发布！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img height="360" src="https://oscimg.oschina.net/oscnet/up-bfb5c266008dea4e66e73ca784bf70eadae.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;自 2024 年 5 月 27 日编写首行代码起，历经多次架构重构，现已完成核心技术验证阶段，我们很高兴的在此宣布，&lt;/span&gt;&lt;span&gt;将于 2025 年 10 月 1 日发布 AtomUI OSS 1.0 公测版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;AtomUI 是，基于 Avalonia 技术的高性能跨平台 UI 桌面控件库，实现 Ant Design 5.0 设计语言&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;采用 LGPL v3 开源协议，支持永久&lt;strong&gt;免费商用&lt;/strong&gt;，包括且不限于公司内部项目、个人使用 AtomUI OSS 开发的&lt;strong&gt;商业项目&lt;/strong&gt;和&lt;strong&gt;承接的外包项目&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;核心技术实现&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;设计语言实现&lt;/strong&gt;&lt;span&gt;：通过自研渲染引擎完整还原 Ant Design 5.0 设计规范&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;多端一致性&lt;/strong&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span style="background-color:transparent"&gt;&lt;span&gt;在 Windows/macOS/Linux/Android/iOS 保持相同的视觉与交互体验，且实现了软件工业广泛实践过的 Ant Design 5.0 设计语言&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;渲染架构&lt;/strong&gt;&lt;span&gt;：基于 Avalonia 框架构建的自适应渲染管线&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;开发范式&lt;/strong&gt;&lt;span&gt;：声明式 XAML 语法结合 C# 业务逻辑&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;核心特性&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;设计系统同步：&lt;/strong&gt;&lt;span&gt;实时跟踪 Ant Design 规范更新&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;主题机制：&lt;/strong&gt;&lt;span&gt;动态切换明暗主题并保持跨平台一致性&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;无障碍支持：&lt;/strong&gt;&lt;span&gt;遵循 WCAG 2.1 标准实现&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;资源优化：&lt;/strong&gt;&lt;span&gt;按需加载机制控制包体积&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;开源与协作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;采用 LGPL v3 协议开放源代码，开发者可通过以下渠道获取：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;主代码库：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;Gitee: gitee.com/chinware/atomui&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;GitHub: github.com/chinware/atomui&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;文档中心：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;目前我们正在完善相关文档，届时大家可以在秦派软件官网上查阅 AtomUI 的文档&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;问题反馈：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;通过代码仓库 Issue 系统提交技术问题&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;感谢一直默默支持 AtomUI 的开发者朋友，我们国庆见。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:start"&gt;&lt;strong&gt;关于秦派软件&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;北京秦派软件科技有限公司 (Qinware Technologies Ltd.) 是一家致力于开发生产力工具软件的技术公司，成立之初立志要在工具软件领域深耕，践行精益求精的研发精神，努力推出优质的生产力工具软件服务国内外的开发者，提升开发者的工作效率，同时创造出商业价值和社会价值。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#1f2328"&gt;&lt;span style="background-color:#ffffff"&gt;欢迎大家关注秦派软件官方微信，了解 AtomUI 第一手资讯：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="258" src="https://oscimg.oschina.net/oscnet/up-9d222f5c2f885d81654d78cbf4ee0a38a4c.png" width="258" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357906</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357906</guid>
      <pubDate>Sun, 11 May 2025 01:15:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Skyeye 云智能制造办公系统 - Saas v3.16.10 发布</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;Skyeye 云智能制造，采用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Springboot (微服务) + Layui + UNI-APP + Ant Design Vue&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的低代码平台。包含 30 多个应用模块、50 多种电子流程，CRM、PM、ERP、MES、ADM、EHR、笔记、知识库、项目、门店、商城、财务、多班次考勤、薪资、招聘、云售后、论坛、公告、问卷、报表设计、工作流、日程、云盘等全面管理，实现智能制造行业一体化管理。实现管理流程 「客户关系 -&amp;gt; 线上 / 线下报价 -&amp;gt; 销售报价 -&amp;gt; 销售合同 -&amp;gt; 生产计划 -&amp;gt; 商品设计 -&amp;gt; 采购 -&amp;gt; 加工制造 -&amp;gt; 入库 -&amp;gt; 发货 -&amp;gt; 售后服务」 的高效运作，同时实现企业员工的管理以及内部运作的流程操作，完善了员工从 「入职 -&amp;gt; 培训 -&amp;gt; 转正 -&amp;gt; 办公 -&amp;gt; 离职」 等多项功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;a href="https://gitee.com/dromara/skyeye/blob/company_server/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md"&gt;常见问题&lt;/a&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Farticles.zsxq.com%2Fid_xi3xhacte72g.html" target="_blank"&gt;开发文档&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fspace.bilibili.com%2F87396008%2Fchannel%2Fseries" target="_blank"&gt;视频教程&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fsheet%2FDYUtPdWhTbVBITlpL%3Ftab%3D000001" target="_blank"&gt;功能点&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Skyeye&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;云【源代码】针对 {星球用户} 开源。拿到源码后可进行学习、毕设、企业等使用。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 云智能制造 v3.16.10 发布 ，发布内容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;Skyeye 云已加入 Dromara 社区&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;业务对象适配 Saas 进展 95%&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VUE 版开发&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;流程设计器完成&lt;/li&gt; 
   &lt;li&gt;所有后端代码适配多租户完成&lt;/li&gt; 
   &lt;li&gt;邮箱管理完成&lt;/li&gt; 
   &lt;li&gt;报销订单完成&lt;/li&gt; 
   &lt;li&gt;财务模块重构-后端完成 70%&lt;/li&gt; 
   &lt;li&gt;排班管理完成 80%&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;源代码只对星球用户开放&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;解决若干问题。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 具备&lt;/span&gt;&lt;strong&gt;&lt;span&gt;低代码、快捷开发、可视化设计、微服务&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;等特点，方便客户二次开发，极大的提高了开发效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;strong&gt;项目地址：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Gitee：&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;https://gitee.com/dromara/skyeye&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;GitCode：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;https://gitcode.com/doc_wei/erp-pro&lt;/li&gt; 
 &lt;li&gt;https://gitcode.com/doc_wei/skyeye-oa&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;PC 端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
   &lt;th style="text-align:center"&gt;效果图&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-35a653b1c873ab9501f7187b0901a27cc64.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a8f7c658a21594b2787c667fc1214c673b1.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-50138b38c37d750b93db5b37493f71bf4ca.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-00fd5dbd8a44f8d815ecf77d93d37062616.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-6499d74ddcfe9a99997d8c797aae7b7f0b0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-e97af4a2caccb199b76d906ecbb339a7575.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a58e6cb3e687de2a468cb095516951f077c.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-9eb76f53a99358fdf1ce532dc711baec41a.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ce7c58e9fe940d58b2cb9cec441176b3481.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ca685ab278a861067f5850e12470e155e59.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-270d853e879bc14cf6632d67e0168c656c0.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-0bebb255d3c79c13a69bfa0fbb7fcd80836.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-90cde5042c0effeea9e85761ff8dc7283d5.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-47ccf76ab671effc6142727caf066d67071.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;移动端效果图&lt;/strong&gt;&lt;/p&gt; 
&lt;table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-6850576a0a01188e6b2a9d1ecce58ed7455.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-770416ac656e0b41097dc917b2b404e62f2.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-754034f48dd04fd9ee1e6618db0e37f6ecb.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-d7707ebc67ddf3842adbb54fdc0c062a2a1.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357904</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357904</guid>
      <pubDate>Sun, 11 May 2025 00:48:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>bboss v7.3.9 重磅发布，新增 ETL、Stream、AI 任务流程编排引擎</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;bboss v7.3.9 重磅发布，新增&lt;/span&gt;&lt;span&gt;&lt;span&gt;通用轻量级、高性能流程编排引擎 bboss jobflow，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;可将各种各样、不同类型的任务编排成工作流，进行统一调度执行，譬如数据采集作业任务、流批处理作业任务、业务办理任务、充值缴费任务以及大模型推理任务等按顺序编排成工作流。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="523" src="https://oscimg.oschina.net/oscnet/up-dfc9df0531d9223d7fe74da3d6851b689d1.png" width="1408" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;strong&gt;v7.3.9 功能改进&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;新增通用工作流 bboss jobflow，使用参考文档&amp;nbsp; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fesdoc.bbossgroups.com%2F%23%2Fjobworkflow" target="_blank"&gt;https://esdoc.bbossgroups.com/#/jobworkflow&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;数据交换模块增加作业流程任务编排功能&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;基础框架 jdk 17+版本兼容性改进&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;引入 amz s3 协议，实现文件上传到多种 oss 数据库，譬如 Minio&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;处理 Elasticsearch 输出插件指定 esid 配置不起作用问题&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;完善 kafka 消费组件异常处理机制：处理消息出现异常时，无需关闭消费端&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;完善 Elasticsearch 向量检索案例：添加 Elasticsearch 带向量字段索引表创建、数据批量写入、KNN 检索案例，案例使用 Xinference 向量模型服务对数据和检索条件进行向量化处理&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;a href="https://gitee.com/bboss/eshelloword-booter/blob/master/src/main/java/org/bboss/elasticsearchtest/textembedding/TextEmbedding.java"&gt;&lt;span&gt;&lt;span style="color:#0052ff"&gt;https://gitee.com/bboss/eshelloword-booter/blob/master/src/main/java/org/bboss/elasticsearchtest/textembedding/TextEmbedding.java&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;Excel 文件插件问题修复：records 计数器初始化改进，避免可能的空指针异常&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;持久层添加磐为数据库适配器，增加对磐为数据库的支持&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;持久层改进：废弃旧变量,调整为 dbcp2 的新变量，新版本对老版本做了兼容处理&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&lt;span&gt;skimmerFrequency&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;span&gt;--&lt;/span&gt;&lt;/span&gt;&lt;span&gt;》timeBetweenEvictionRunsMillis&lt;/span&gt;
&lt;span&gt;connectionTimeout&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;span&gt;--&lt;/span&gt;&lt;/span&gt;&lt;span&gt;》 minEvictableIdleTimeMilli&lt;/span&gt;
&lt;span&gt;shrinkBy&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;span&gt;--&lt;/span&gt;&lt;/span&gt;&lt;span&gt;》 numTestsPerEvictionRun&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;bboss jobflow 案例&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;默认调度策略：&lt;/span&gt;&lt;a href="https://gitee.com/bboss/bboss-datatran-demo/tree/main/src/main/java/org/frameworkset/datatran/imp/jobflow"&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span style="color:#0052ff"&gt;https://gitee.com/bboss/bboss-datatran-demo/tree/main/src/main/java/org/frameworkset/datatran/imp/jobflow&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;xxl-job 调度策略：&lt;/span&gt;&lt;a href="https://gitee.com/bboss/db-elasticsearch-xxjob2x/blob/main/src/main/java/org/frameworkset/datatran/imp/jobhandler/XXLJobFlowHandlerDemo.java"&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span style="color:#0052ff"&gt;https://gitee.com/bboss/db-elasticsearch-xxjob2x/blob/main/src/main/java/org/frameworkset/datatran/imp/jobhandler/XXLJobFlowHandlerDemo.java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;quartz 调度策略：&lt;/span&gt;&lt;a href="https://gitee.com/bboss/db-elasticsearch-tool/blob/master/src/main/java/org/frameworkset/elasticsearch/imp/quartz/QuartzJobFlowHandlerDemo.java"&gt;&lt;span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span style="color:#0052ff"&gt;https://gitee.com/bboss/db-elasticsearch-tool/blob/master/src/main/java/org/frameworkset/elasticsearch/imp/quartz/QuartzJobFlowHandlerDemo.java&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;视频教程推荐&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA3MzE0MDUyNw%3D%3D%26mid%3D2247484503%26idx%3D1%26sn%3D59bd7cbab0ff9d89377289228a93e84b%26scene%3D21%23wechat_redirect" target="_blank"&gt;&lt;span style="color:#0052ff"&gt;视频 | bboss 开发环境搭建教程&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA3MzE0MDUyNw%3D%3D%26mid%3D2247484515%26idx%3D1%26sn%3D580dbbaf86f2ed2360ae71724b9678a6%26scene%3D21%23wechat_redirect" target="_blank"&gt;&lt;span style="color:#0052ff"&gt;视频 | Bboss ETL 和流处理作业发布部署运行教程&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/357903</link>
      <guid isPermaLink="false">https://www.oschina.net/news/357903</guid>
      <pubDate>Sun, 11 May 2025 00:40:00 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
  </channel>
</rss>
