<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 18 Jun 2025 07:50:05 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>深度解析 Cursor</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;编者按：&lt;/strong&gt; 我们今天为大家带来的这篇文章，作者的观点是：只有深入理解 AI 编程工具的底层原理和能力边界，才能真正驾驭这些工具，让它们成为提升开发效率的"外挂神器"。&lt;/p&gt; 
 &lt;p&gt;本文从 LLM 的基础工作机制出发，解释了 Cursor 等工具本质上是 VSCode 的复杂封装，通过聊天界面、工具集（如 read_file、write_file 等）和精心设计的提示词来实现智能编程辅助。作者还逐行解析了 Cursor 的系统提示词，分析了其中的工程设计细节。此外，作者还提供了制定高效 Cursor Rules 的具体指导，强调 Cursor Rules 应该像百科词条般详实，而非简单的命令列表。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;作者 | Shrivu Shankar&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;编译 | 岳扬&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;透彻了解 Cursor[1]、Windsurf[2] 和 Copilot[3] 这类 AI 编程工具的运作原理细节，能大大提升你的开发效率，并让这些工具在不同场景下都更加稳定地工作 ------ 尤其在庞大、复杂的代码库中。当人们难以让 AI 编程工具高效工作时，往往是把它们当成了传统工具来使用，却忽略了一个关键：只有清楚这些工具的先天不足和最佳应对策略，才能真正驾驭它们。一旦摸透这些工具的运作逻辑和能力边界，它们就会化身成为提升开发效率的"外挂神器"。在我写作此文时，我约 70% 的代码 1 都由 Cursor 产出。&lt;/p&gt; 
&lt;p&gt;在本文，我将深入解析这些 AI 编程工具的实际运行原理、Cursor 的系统提示词，以及如何优化你的编码方式与 Cursor rules。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;01 从 LLM 到代码编写智能体&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;1.1 LLM&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;LLMs 的核心工作方式是不断重复预测下一个词，正是基于这个简单的原理，我们得以构建出各种复杂的应用。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-e7cd63f365717b2dd8cdd7ea2ebb3cf3e0c.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;从基础的编程 LLM 到智能体主要经历三个阶段：蓝色部分表示我们设定的前缀（即 prompts），橙色部分则为 LLM 自动补全的内容。在智能体中会反复运行 LLM，直到它生成面向用户的输出（response）。每次运行时，由客户端代码（而非 LLM）负责计算工具（tool）运行结果并将其反馈回智能体（agent）。&lt;/p&gt; 
&lt;p&gt;在早期解码器 LLM（如 GPT-2[4]）的提示词实践中，需要精心构造一个前缀字符串（prefix） ------ 当其被补全时，便能得到想要的结果。相比于直接的指令"Write a poem about whales"，不如说 "Topic: Whales\nPoem: "，甚至是"Topic: Trees\nPoem: ... actual tree poem ...\nTopic: Whales\nPoem: "。在编程场景下，需要构造类似"PR Title: Refactor Foo Method\nDescription: ...\nFull Diff: "这样的前缀。所谓的"Prompt engineering"，其核心就是巧妙地构建理想前缀，从而引导模型自动补全出所需答案。&lt;/p&gt; 
&lt;p&gt;随后引入了指令微调[5]（例如 ChatGPT），大幅降低了大语言模型的使用门槛。现在你如果输入"Write a PR to refactor Foo"，它就会直接返回代码。其内在机制几乎完全等同于上述的自动补全过程，只是前缀变成了"&amp;lt;user&amp;gt;Write a PR to refactor Foo&amp;lt;/user&amp;gt;&amp;lt;assistant&amp;gt;"，此时大语言模型正扮演着聊天中的助手角色。即使在今天，你仍会看到一些奇怪的情况 ------ 模型有时会越过"&amp;lt;/assistant&amp;gt;"标签继续自动补全生成内容，开始给自己写提问。&lt;/p&gt; 
&lt;p&gt;当模型规模达到一定程度时，我们更进一步，加入了"工具调用（tool calling）[6]"功能。不再局限于填充 assistant 文本，我们可以在前缀中输入"Say \read_file(path: str)` instead of responding if you need to read a file"。当遇到编码任务时，模型现在会补全出"read_file('index.py')&amp;lt;/assistant&amp;gt;"，我们（客户端）则会再次输入提示词"&amp;lt;tool&amp;gt;... full contents of index.py ...&amp;lt;/tool&amp;gt;&amp;lt;assistant&amp;gt;`"并要求其继续补全文本。虽然本质上仍是自动补全，但大语言模型已能借此与外界及外部系统互动了。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;1.2 Agentic Coding&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;像 Cursor 这样的 AI 编程工具，其本质就是这个简单概念的复杂封装。&lt;/p&gt; 
&lt;p&gt;要构建一个 AI 编程工具，你需要：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Fork VSCode[7]&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;添加聊天界面，并选择一个强大的大语言模型（例如 Sonnet 3.7）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;为编码智能体实现一套工具集&lt;/p&gt; &lt;p&gt;a. read_file(full_path: str)&lt;/p&gt; &lt;p&gt;b. write_file(full_path: str, content: str)&lt;/p&gt; &lt;p&gt;c. run_command(command: str)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;优化内部提示词（Prompts）：例如"你是一位编码专家"、"不要假设，请使用工具"等&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;总的来看，核心流程基本就是这些了。&lt;strong&gt;真正的难点在于设计提示词和工具链，确保它们能稳定可靠地工作。&lt;/strong&gt; 如果完全按照上述描述来构建，系统虽能勉强运行，但会频繁出现语法错误、幻觉问题（hallucinations）且相当不稳定。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;1.3 优化 Agentic Coding&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;打造优秀 AI 编程工具的诀窍，在于找出大语言模型擅长的领域，并围绕其局限性精心设计提示词和工具。这通常意味着需要减轻主智能体的任务负担 ------ 通过使用更小的模型来完成子任务。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-e7e56113a8ef764b999eca561a12d609740.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;图表说明：当你使用 AI 编程工具时，其底层发生了什么？我们简化了主智能体的工具集，将"认知负担"转移到其他大语言模型上。AI 编程工具会将你的 @标签注入上下文，调用多个工具来收集更多信息，使用专用的代码变更标记规则（diff syntax）编辑文件，最后向用户返回摘要响应。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;1.4 优化措施与面向终端用户的操作建议（Optimizations &amp;amp; User Tips）&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;通常情况下，用户自己知道需要哪些具体文件或上下文。因此，我们在聊天界面（Chat UI）中添加了"@file"语法。当调用大语言模型时，我们会将所有附加文件的内容整体打包放入一个"&amp;lt;attached-files&amp;gt;"区块中传递。这本质上是为用户提供语法糖（syntactic sugar），免去了手动复制粘贴整个文件或文件夹的麻烦。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;操作建议 (Tip)：&lt;strong&gt;在这些编程工具中建议积极使用 @folder/@file（优先提供更明确的上下文，以获取更快更准确的响应）。&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;搜索代码可能很复杂，尤其对于"我们在哪里实现了认证功能相关的代码？"这类语义查询。我们没有让智能体精通编写搜索正则表达式（regexes），而是选择在索引阶段使用一个编码器大模型（encoder LLM）将整个代码库索引到向量数据库（vectorstore）中，从而将文件内容及其功能嵌入到向量中。在查询时，另一个大语言模型会根据相关性对文件进行重排序和过滤。这确保了主智能体在询问认证功能代码相关问题时能获得"完美"的结果。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;操作建议 (Tip)：&lt;strong&gt;代码注释（Code comments）和文档字符串（doc-strings）能引导嵌入模型（embedding model）理解代码，这使得它们的重要性甚至超过了仅写给人类同事看的情况。&lt;/strong&gt; 务必在文件顶部用一段文字说明：该文件的作用、实现的语义功能以及应何时更新。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;要生成字符层级上零缺陷（character-perfect）的代码既困难又昂贵，因此优化 write_file(...) 工具成为众多此类 AI 编程工具的核心。大语言模型通常不会输出完整的文件内容，而是生成一个 "semantic diff" ------ 仅提供已更改的内容，并附带代码注释，以指导在何处插入更改的文件内容。随后，另一个更轻量、更快的代码应用大模型（code-apply LLM） 会将该 "semantic diff" 作为输入提示词，并在修复那些微小语法问题的同时写入实际文件内容。新文件经过 linter 校验器处理后，工具返回主智能体的结果时会包含实际文件差异（actual diff）和 lint 校验结果，可用于自我修正文件的错误改动。我将此机制类比为：与一位懒散的资深工程师协作，他只需写出核心片段，后续细节交由实习生完成。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;操作建议 (Tip)：你无法直接将提示词发送给应用模型（apply-model）。&lt;strong&gt;类似"别乱删代码"或"别随意增删注释"的建议完全无效，因为这些问题本质上是应用模型（apply-model）工作机制的固有产物。&lt;/strong&gt; 应该让主智能体获得更多控制权，例如在指令中明确要求："在 edit_file 指令中提供完整的文件内容"&lt;/li&gt; 
   &lt;li&gt;操作建议 (Tip)：应用模型处理超大文件时缓慢且易错，&lt;strong&gt;务必将文件拆分至每部分小于 500 行代码&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;操作建议 (Tip)：lint 反馈对智能体具有极高价值&lt;/strong&gt;，应投资构建能提供高质量建议的增强型 linter2。使用编译型语言和静态类型语言能提供更丰富的 lint 时反馈（lint-time feedback）&lt;/li&gt; 
   &lt;li&gt;操作建议 (Tip)：&lt;strong&gt;使用唯一的文件名&lt;/strong&gt; （不要在代码库中使用多个不同的 page.js 文件，最好改用 foo-page.js、bar-page.js 等），&lt;strong&gt;在文档中应使用完整的文件路径&lt;/strong&gt;，并将高频修改的代码段（hot-paths）集中到同一文件或文件夹中，以降低编辑工具的操作歧义&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;选用擅长在此类智能体（Agent）工作流中编写代码的模型（而非仅具备通用编码能力）。这就是 Anthropic 模型在 Cursor 等 AI 编程工具中表现出色的原因 ------ 它们不仅代码质量高，更擅长将编程任务拆解为这种类型的工具调用（tool calls）。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;操作建议 (Tip)：&lt;strong&gt;选用模型时，不应仅关注"编码能力"，应优先选择专门为智能体驱动型编程工具（agentic IDEs）优化的模型。&lt;/strong&gt; 目前（据我所知）能有效评估此能力的唯一排行榜是 WebDev Arena[8] 3。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我在自研 AI 编程工具 sparkstack.app 中采用过一个（极其昂贵的）技巧，大幅提升了系统的自我修正能力：为其配备 apply_and_check_tool。该工具会执行更严苛的 linting，并启动无头浏览器（headless browser），沿应用的用户流程（user-flows）获取控制枱日志和截图，为智能体提供反馈。正是在此类场景中，MCP（Model Context Protocol）[9]协议将大放异彩 ------ 它能赋予智能体更强的自主权和上下文理解能力。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;02 逐行解析 Cursor 的系统提示词&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;通过基于 MCP 协议的提示词注入技术，我提取了 Cursor 智能体模式（agent mode）最新（2025 年 3 月）的提示词内容。作为一名长期深耕大语言模型领域的开发者，我必须表达对 Cursor "提示词工程师（prompt engineers）"的高度敬意 ------ 相比其他 AI 编程工具的提示词设计，他们的专业水准令人赞叹（个人观点）。我认为这正是 Cursor 能成为领先编程工具的核心因素。剖析此类提示词也是提升自身提示词编写能力与智能体架构能力的绝佳途径 ------ 从某种意义上看，大多数基于 GPT 的封装工具采用"开放提示词（open-prompt）"实现方案，这种特性极具价值。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-8e349136713631673bc71fb2c250460d94f.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Cursor Agent 系统提示词片段。完整提示词及工具定义（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgist.github.com%2Fsshh12%2F25ad2e40529b269a88b80e7cf1c38084%EF%BC%89" target="_blank"&gt;https://gist.github.com/sshh12/25ad2e40529b269a88b80e7cf1c38084）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;"&amp;lt;communication&amp;gt;"、"&amp;lt;tool_calling&amp;gt;"等标签&lt;/strong&gt; → 混合使用 Markdown 和 XML 标签能大大降低人类和模型对提示词的阅读难度 4。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"由 Claude 3.5 Sonnet 驱动（powered by Claude 3.5 Sonnet）"&lt;/strong&gt; → 大模型通常不会主动声明自身模型版本。显式标注此信息可减少用户对计费模型与实际运行模型不一致的抱怨 5。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"全球最佳 IDE（the world's best IDE）"&lt;/strong&gt; → 该表述简洁地禁止模型在故障时推荐竞品，这对那些代表品牌形象的智能体来说至关重要 6。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"我们会自动附上某些信息...遵循 &amp;lt;user_query&amp;gt; 标签内的用户指令（we may automatically attach some information...follow the USER's instructions...by the &amp;lt;user_query&amp;gt; tag）"&lt;/strong&gt; → Cursor 并未直接将用户提示词传递给模型，而是将其置于专用标签中。这使得系统能在 &amp;lt;user&amp;gt; 消息中传递更多与用户相关的文本，既不会让大语言模型（LLM）混淆，也不会让用户感到困惑。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"避免道歉（Refrain from apologizing）"&lt;/strong&gt; → 这显然是为抑制 Sonnet 模型的致歉倾向而添加的规则。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"绝对不要提及工具名称（NEVER refer to tool names when speaking）"&lt;/strong&gt; → Cursor 特别以加粗格式添加此指令。但讽刺的是，我仍常见到类似"使用 edit_tool"的违规输出 ------ 近期 Sonnet 模型在此方面的表现确实恼人。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"调用每个工具前需先解释（Before calling each tool, first explain）"&lt;/strong&gt; → 当大模型在流式传输（streaming）工具调用时，用户界面会出现短暂卡顿。此指令能帮助用户确信系统正在处理他们的请求，避免因界面停滞而产生不安。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"若部分满足了用户查询，但你还不确定，则请收集更多信息（partially satiate the USER's query, but you're not confident, gather more information）"&lt;/strong&gt; → 大模型智能体常因过度自信而过早终止任务。此指令为其提供"退路"，促使其深度探索后再响应。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"禁止直接向用户输出代码（NEVER output code to the USER）"&lt;/strong&gt; → 默认情况下，大模型倾向以内联代码块（inline markdown codeblocks）形式输出代码。此规则强制其仅通过工具操作代码，并依赖 UI 间接向用户展示变更结果。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"若从零构建 Web 应用，必须设计精美的、现代感的 UI（If you're building a web app from scratch, give it a beautiful and modern UI）"&lt;/strong&gt; → 此为针对演示场景的优化（demo-hacking），确保单提示词（single-prompt）即可生成华丽的应用。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"在编辑之前，你必须读取你要编辑的内容 7（you MUST read the contents or section of what you're editing before editing it）"&lt;/strong&gt; → 编码智能体常急于写代码而忽略收集上下文。此类直接的、显式的指令用于校正该行为。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"修复 linter 错误时循环次数不得超过 3 次（DO NOT loop more than 3 times on fixing linter errors）"&lt;/strong&gt; → 旨在防止 Cursor 陷入代码编辑的死循环。此措施虽有帮助，但 Cursor 的深度用户都知道，系统仍易因此卡顿。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"解决根本原因而非仅处理表象（Address the root cause instead of the symptoms）"&lt;/strong&gt; → 这一点是针对大模型常见的对齐问题（alignment issues）：模型常倾向于直接删除报错代码而非修复问题本身。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;"禁止硬编码 API 密钥（DO NOT hardcode an API key）"&lt;/strong&gt; → 众多安全方面的最佳实践之一，至少可以防止一些明显的安全问题。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;工具 codebase_search/read_file/grep_search/file_search/web_search&lt;/strong&gt; → 鉴于编码前获取正确上下文是非常重要的，Cursor 提供多种形态的搜索工具，确保智能体能够轻松定位要做的修改。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;一些工具中的"单句解释...说明为何需要运行此命令..."（"One sentence explanation...why this command needs to be run..."）&lt;/strong&gt; → 大多数工具都包含这个非功能性参数，它迫使大模型推理论证它将传递哪些参数，此为提升工具调用准确性的常规技巧。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;reapply 工具"调用更强大模型执行上次编辑的内容（Calls a smarter model to apply the last edit）"&lt;/strong&gt; → 允许主智能体动态升级应用模型（即使用更高成本模型），自主解决低级应用错误。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;edit_file 工具要求"用对应语言的注释表示未修改代码（represent all unchanged code using the comment of the language you're editing）"&lt;/strong&gt; → 此规则解释了自动生成的随机注释的来源，也是应用模型正常工作的必要前提。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;您会注意到整个系统提示词和工具描述均为静态内容（未注入用户或代码库个性化文本）。&lt;/strong&gt; 该设计使 Cursor 能充分利用提示词缓存（prompt caching） 优势[10]，大幅降低推理成本并减少输出首个 token 的延迟时间（time-to-first-token latency） ------ 这对每次使用工具都需调用大模型的智能体架构至关重要。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;strong&gt;03 如何高效制定 Cursor Rules&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;现在最大的问题是，编写 Cursor rules 的"正确方式"是什么？虽然我的整体答案是"以实际效果为准，适合你的才是最好的"（whatever works for you），但基于提示词工程经验和对 Cursor 内部原理的认知，我确实有大量具体建议。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-de0947ac445dd1c5a3c2a12d4151efe865a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;大语言模型如何看待你的 Cursor 项目规则？模型会看到规则的名称和简介列表，然后根据需要调用 fetch_rules(...) 函数来获取和查看具体的规则内容&lt;/p&gt; 
&lt;p&gt;关键是要明白，这些规则并非是附加到系统提示词中的，而是作为具名指令集（named sets of instructions）被引用。因此，建议采用编写百科词条（encyclopedia articles）而非命令（commands）的思维方式设计 Cursor rules。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;切勿在 Cursor rules 中声明身份（例如"您是精通 TypeScript 的资深前端工程师"）。&lt;/strong&gt; 此类规则虽见于 cursor.directory 且看似有效，但会与内置提示词赋予的身份产生冲突，导致智能体行为异常。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;避免尝试覆盖系统提示词指令，或通过特定提示词（prompt）引导应用模型（apply model）的行为。&lt;/strong&gt; 类似"别添加注释"、"编码前先提问"、"勿删除未提及代码"的指令会直接破坏工具使用机制并干扰智能体运作。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;减少使用否定性指令。&lt;/strong&gt; 大模型更擅长遵循正向指令（"若遇&amp;lt;此情况&amp;gt;，则&amp;lt;执行此操作&amp;gt;"），而非单纯列出限制条件。此原则亦体现在 Cursor 的官方提示词中。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;请务必花时间编写高度明显的规则名称和描述。&lt;/strong&gt; 关键在于，即使智能体（Agent）对您的代码库所知甚少，也能凭直觉知道何时适合应用某条 Cursor rules 来使用其 fetch_rules(...) 工具。类似于手动建立文档索引的做法，你应该适当地创建一些内容相同但名称和描述不同的规则副本，这样可以提高 AI 找到相关规则的概率。规则描述应当力求信息密集，避免过度冗长。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;把你的模块规则和常见代码修改规则写得像百科词条一样详细和完整。&lt;/strong&gt; 如同维基百科那样，将关键术语（使用 mdc 链接语法）链接到代码文件，这在智能体确定代码变更所需的关键上下文时能提供巨大助力。有时，这也意味着，要避免按部就班地进行说明（专注于"做什么"而非"怎么做"），除非真的没办法，否则不要让智能体过度专门化，只会处理某一种特定的代码修改模式。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;请务必使用 Cursor 本身来起草您的 Cursor rules 。&lt;/strong&gt; 大语言模型（LLMs）非常擅长为其他大语言模型撰写内容。如果您不确定如何组织文档格式或编码上下文，请执行 "@folder/ generate a markdown file that describes the key file paths and definitions for commonly expected changes"。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;要意识到制定太多规则其实是个不好的做法。&lt;/strong&gt; 这一点看似违反直觉 ------ 虽然规则确实是让 AI 开发工具处理大型项目的关键，但需要很多规则本身就暴露了一个问题：你的代码库对 AI 来说不够友好。我在《AI-powered Software Engineering》[11]一书中深入探讨了这个话题。未来理想的代码库应该设计得足够清晰直观，AI 编程工具光靠基础功能就能完美胜任所有工作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;请参考我生成的一些示例[12]。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;04 Conclusions&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;一个基于近乎开源的智能体提示词和公开模型 API 构建的 VSCode 分支，其估值竟能接近 100 亿美元 ------ 带着 68 倍的"wrapper multiple"8 ------ 这着实令人惊叹。我们将拭目以待 Cursor 最终是否会开发自己的智能体模型（感觉可能性不大），或是 Anthropic 是否会带着 Claude Code + 下一代 Sonnet 强势介入成为竞争对手。&lt;/p&gt; 
&lt;p&gt;无论最终结果如何，学会如何优化你的代码库、文档和规则配置仍然是一项有用的技能。我希望这次深入探讨能让你对 Cursor 的工作原理以及优化之道有更具体、更实用的理解。&lt;/p&gt; 
&lt;p&gt;我经常说这句话，现在再说一遍：&lt;strong&gt;如果你觉得 Cursor 不好用，那一定是你用错了方法。&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;1.这是一个基于直觉的统计数据，但我认为相差不远。一旦你熟练掌握了 Cursor rules，相当数量的 PR 实际上就变成了单次发送提示词（one-shot prompts）的事。我原本以为要到 2027 年才能达到这个水平，但随着 Anthropic、Cursor 和我自己的提示词水平同时提升，进展比我预想的要快。&lt;/p&gt; 
&lt;p&gt;2.到目前为止，我对 CodeRabbit 的代码检查功能印象非常深刻，计划使用 MCP 将其集成到 Cursor 中。如果 Cursor 的默认代码检查器能更好一些，在其他条件不变的情况下，使用体验会像用 Sonnet 3.8 一样。&lt;/p&gt; 
&lt;p&gt;3.（大多数）LLM 的美妙之处在于，虽然这是一个 Web 开发基准测试，但根据我的经验，其性能与各种类型的编程和框架都有很强的相关性。&lt;/p&gt; 
&lt;p&gt;4.我没能找到相关的科学研究，但基于个人经验，这种方法效果很好，如果 Anthropic 的模型专门针对伪 XML 语法进行训练，我也丝毫不会感到惊讶。&lt;/p&gt; 
&lt;p&gt;5.这确实会产生一些意想不到的副作用，编程模型会将你代码库中引用的模型名称更改为它自己（引用的模型）的名称。&lt;/p&gt; 
&lt;p&gt;6.这里存在一个有趣的法律灰色地带。Cursor 将此内容放在他们的网站上实际上是违法的（见《联邦贸易委员会法》、《兰哈姆法》），但（至少目前）他们将内容放进提示词（prompt）中，并由 LLM 代其表述出来，却是被允许的。&lt;/p&gt; 
&lt;p&gt;7.顺便说一句："Cursor 团队，我发现了一个错别字 (:"&lt;/p&gt; 
&lt;p&gt;8.这是我创造的一个术语，用来表示基于 GPT 封装的工具的估值与模型提供商估值之间的比率。在这种情况下，Anthropic : Cursor = 600 亿美元 : 100 亿美元 = 6。我的直觉告诉我"6"不是一个合理的比率。戴上我那业余投资者的帽子，我推测 Anthropic 应该接近 1000 亿美元，而 Cursor 则最高达 10 亿美元（wrapper multiple 为 100）。我实在看不出他们其中任何一方真的拥有持久的"护城河"（long term moat），Anthropic 构建自己的下一代 AI 编程工具似乎也是轻而易举的事。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本期互动内容 🍻&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;❓文中说『未来理想的代码库应该对 AI 足够友好』，你眼中的『AI 友好型代码库』有哪些具体特征？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;文中链接&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;[1]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2F" target="_blank"&gt;https://www.cursor.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[2]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodeium.com%2Fwindsurf" target="_blank"&gt;https://codeium.com/windsurf&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[3]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffeatures%2Fcopilot" target="_blank"&gt;https://github.com/features/copilot&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[4]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.openai.com%2Fbetter-language-models%2Flanguage_models_are_unsupervised_multitask_learners.pdf" target="_blank"&gt;https://cdn.openai.com/better-language-models/language_models_are_unsupervised_multitask_learners.pdf&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[5]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2203.02155" target="_blank"&gt;https://arxiv.org/abs/2203.02155&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[6]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpython.langchain.com%2Fdocs%2Fconcepts%2Ftool_calling%2F" target="_blank"&gt;https://python.langchain.com/docs/concepts/tool_calling/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[7]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fcursor%2Fcomments%2F1h9d763%2Fdid_cursor_really_need_to_fork_vscode_rather_than%2F" target="_blank"&gt;https://www.reddit.com/r/cursor/comments/1h9d763/did_cursor_really_need_to_fork_vscode_rather_than/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[8]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb.lmarena.ai%2Fleaderboard" target="_blank"&gt;https://web.lmarena.ai/leaderboard&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[9]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelcontextprotocol.io%2Fintroduction" target="_blank"&gt;https://modelcontextprotocol.io/introduction&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[10]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Fnews%2Fprompt-caching" target="_blank"&gt;https://www.anthropic.com/news/prompt-caching&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[11]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.sshh.io%2Fp%2Fai-powered-software-engineering" target="_blank"&gt;https://blog.sshh.io/p/ai-powered-software-engineering&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[12]&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchat.sshh.io%2Fshare%2FpWMGGDyPTok05mxOq17p-" target="_blank"&gt;https://chat.sshh.io/share/pWMGGDyPTok05mxOq17p-&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本文经原作者授权，由 Baihai IDP 编译。如需转载译文，请联系获取授权。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;原文链接：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.sshh.io%2Fp%2Fhow-cursor-ai-ide-works" target="_blank"&gt;https://blog.sshh.io/p/how-cursor-ai-ide-works&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/IDP/blog/18627427</link>
      <guid isPermaLink="false">https://my.oschina.net/IDP/blog/18627427</guid>
      <pubDate>Wed, 18 Jun 2025 07:43:18 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>Cursor 推出月费 200 美元的 Ultra 计划，Pro 计划将更新为「不限量但有速率限制」的模式</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Cursor 推出了每月 200 美元的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2Fcn%2Fblog%2Fnew-tier" target="_blank"&gt;Ultra 计划&lt;/a&gt;。官方称这个变化来自高级用户的需求，他们希望获得&lt;strong&gt;比按使用量计价更有可预测性的&lt;/strong&gt;订阅计划。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0618/151550_1QMH_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;新的 Ultra 计划&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;每月费用为 200 美元&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用量是 Pro 计划的 20 倍&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;专为追求比按使用量计价更稳定价格的高级用户设计&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Pro 计划的变更&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Pro 计划将更新为「不限量但有速率限制」的模式&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;将取消对工具调用的所有限制&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;现有用户如果愿意，可以选择继续使用之前的「500 次请求限制」方法（通过仪表板 &amp;gt; 设置 &amp;gt; 高级选项）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;详情：https://www.cursor.com/blog/new-tier&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355977</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355977</guid>
      <pubDate>Wed, 18 Jun 2025 07:20:18 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>通用智能体 Genspark 免费提供 OpenAI o3-pro 模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;通用智能体 Genspark&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fgenspark_ai%2Fstatus%2F1934633273940115571" target="_blank"&gt; 宣布&lt;/a&gt;其 AI Chat 功能现已免费提供 &lt;a href="https://www.oschina.net/news/354753/openai-o3-pro" target="news"&gt;OpenAI o3-pro&lt;/a&gt;&amp;nbsp;模型。免费用户每天可获得 200 积分，Plus 用户则可无限量使用。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1090" src="https://static.oschina.net/uploads/space/2025/0618/150220_b7UB_2720166.png" width="1278" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;o3-pro 是 OpenAI 最新发布的推理模型，基于 o3 所打造，拥有更强的数学、科学、编程等领域的表现。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;o3-Pro 可，自动调用多种工具，包括可以搜索网页、分析文件、推理视觉输入、使用 Python、通过记忆功能个性化回复等。&lt;strong&gt;由于调用的工具较多，所以，思考的时间比 o1 Pro、o3 更长。&lt;/strong&gt;o3-pro 与 o3 系列一样拥有 200K 的上下文窗口和 100K 的输出，但价格却比它们暴降 80%。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;价格方面，o3-pro 输入为 20 美元 / 百万 token，输出 80 美元 / 百万 token。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Genspark 由百度前高管景鲲创立，今年 4 月宣布&lt;a href="https://www.oschina.net/news/342709/mainfunc-ai-genspark-super-agent"&gt;推出&lt;/a&gt;通用 AI 智能体 "Genspark Super Agent"，号称是一款 "快速、准确、可控" 的通用 AI 代理。这一消息迅速在技术社区引发热议，众多专业人士将其与 Manus 相提并论，认为这标志着通用 AI 代理技术的新一轮角逐。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355972</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355972</guid>
      <pubDate>Wed, 18 Jun 2025 07:07:18 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>韩国计划未来 5 年在 AI 领域投入 16 万亿韩元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;外媒援引业内消息人士&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.yna.co.kr%2Fview%2FAEN20250618008500320%23%3A%7E%3Atext%3DSEOUL%252C%2520June%252018%2520%2528Yonhap%2529%2520--%2520South%2520Korea%2527s%2520science%2Cand%2520development%2520%2528R%2526D%2529%2520activities%252C%2520industry%2520sources%2520said%2520Wednesday." target="_blank"&gt;透露&lt;/a&gt;，韩国科技部已申请在未来五年内拨付超过 16 万亿韩元（约合 117 亿美元）的预算，用于建设国家人工智能（AI）基础设施和支持与 AI 相关的研发活动。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="298" src="https://oscimg.oschina.net/oscnet/up-ff88a8c741069c76b9c2d612b6c7bb3fc53.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;据知情人士称，韩国科技部以到 2030 年使韩国成为世界三大 AI 强国之一为目标，提交了一份要求拨款总额为 16.08 万亿韩元的提案。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;韩国科技部拒绝证实这一消息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;消息人士称，在这笔 16 万亿韩元的预算中，其中 12.3 万亿将将专门用于建立「AI 高速公路」，其中包括建设配备 5 万个 GPU 的 AI 数据中心。其他资金将用于支持 AI 相关的研发、AI 专业产业园区的发展和政策贷款项目。预算还将用于培养专业技能人才，以引领 AI 领域的创新。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;另外，韩国科技部还要求在 5 年内投入 3.09 万亿韩元，用于加强韩国的数字基础设施，提高用户的便利性。其中，2.34 万亿韩元将用于加强网络安全和构筑更安全的数字环境。该部还建议减轻公众的电信负担，允许手机话费减税。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355971</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355971</guid>
      <pubDate>Wed, 18 Jun 2025 07:06:18 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OSC 社区 2.1 发布：私有化 + AI</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;内容社区拒绝一切广告，是逃避；把广告做到让人反感，是失衡。&lt;/p&gt; 
&lt;p&gt;社区的生命力，从来不在于「免费」与「流量」的幻象，而是在于自我造血，持续成长。那些只依赖低价 CPM 和人海运营的社区，终将如天涯、猫扑那样被时代抛弃 —— 它们活得像一条奄奄一息的巨鱼，体型庞大却无力回天。&lt;/p&gt; 
&lt;p&gt;早年，「社区＝广告」几乎是唯一选项。国内大多数社区依靠信息流广告，CPM（每千次曝光收入）往往在 6 元人民币左右；而 YouTube 同期的 CPM 高达 18 美元（约合 129 元人民币），两者相差 21 倍。当广告收益的天花板被牢牢掐住，内容与运营的成本却从未松动，社区便陷入了必然的人力成本漩涡。&lt;/p&gt; 
&lt;p&gt;我们曾见证，一家拥有百万级日活的社区，为了承载社区安全审核和运营，仅内容审核团队就 200 人，支撑起从人工审核到紧急拦截的全流程；运营团队更是分区、分板块、分专题地轮番维护，人工成本与日俱增。即使人海战术能暂时撑起「多板块分流」的表面繁荣，可背后累积的工资支出，却如同吞噬社区未来的黑洞。&lt;/p&gt; 
&lt;p&gt;有人说，「社区的灵魂在于共创与分享」，这没错；但我更认同，「社区的命脉在于变现与可持续」。那些传统的广告商业化模式，虽显其短期效益，却无法带来长久的繁荣。只有找到既能坚守社区初心，又能持续自我造血的创新路径，才能真正让分享在实践中扎根，交流在未来中生长。&lt;/p&gt; 
&lt;p&gt;答案在于通过 AI 赋能，实现社区的智能化升级，并构建可私有化部署的智能知识库，为企业提供持续创新和高效协作的解决方案。&lt;/p&gt; 
&lt;p&gt;今天，开源中国技术社区（&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FOSCHINA.NET" target="_blank"&gt;OSCHINA.NET&lt;/a&gt;）推出&lt;strong&gt;「数字化企业知识管理 AI 平台」&lt;/strong&gt;，以突破性思路重塑社区商业模式：将社区沉淀的技术力与 AI 深度融合，打造可私有化部署的「企业知识中枢」，从 C 端流量生意转向 B 端价值创造。实现社区从「免费流量」到「付费解决方案」的全面跃迁。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0618/141154_0IaF_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#27ae60"&gt;&lt;strong&gt;从「模型」到「场景」，构建真正的 AI 全栈社区&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;GiEngine 高速推理引擎 - 私有化 AI 智能响应&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在需要对内部海量知识进行实时检索与推理的场景，OSC 通过 GiEngine 多模型推理能力，实现在本地环境中对 DeepSeek、Qwen3、GLM4 等模型的百毫秒级响应。用户可即时获得精准答案，显著提升内部协作效率并降低运维压力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;OSC × AI 内容工厂 - 高效闭环的知识生成&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在跨部门内容策划、审批与发布流程复杂、效率低下的场景，&lt;span style="color:#27ae60"&gt;OSC 将社区沉淀的 2000 万篇开源技术方案与 AI 创作引擎深度融合，自动完成「策划→采集→翻译→撰写→审核→发布」闭环。&lt;/span&gt;部门间协同成本下降 60%，知识沉淀速度提升 3 倍，实现持续可复用的企业级知识库。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AI 智能推荐系统 - 精准匹配客户需求&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在面临海量信息难以快速定位高价值内容的场景，OSC 引入原创度、全网热度、社交反馈、用户画像匹配度等多维打分，并结合实时热榜与行业标签精准推送，解决信息茧房与同质化问题。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;人格化 AI 问答机器人 – 7×24 小时无感问题解决&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;AI 问答机器人专注于技术问答场景，系统结合全文检索与大模型生成，以「无感」方式自动理解用户需求，快速给出精准解答。用户平均从提问到获得完整解答的时间可从 10 分钟缩短至 1 分钟，节省约 90% 的时间成本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AI 态势大屏&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在需要宏观监控社区健康与风险预警的场景，OSC 利用 RAG 检索增强与大模型趋势预测，打造「运营指挥中心」可视化平台，一屏呈现访问热力、留存、算力消耗、安全拦截等核心指标。管理者可实现宏观与微观的无缝切换，决策效率提升 20%，风险响应时间缩短 50%。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#27ae60"&gt;&lt;strong&gt;私有化部署的五大价值&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span style="color:#2980b9"&gt;&lt;strong&gt;安全合规与自主可控&lt;/strong&gt;&lt;/span&gt;：私有化部署在客户内网完成，全链路数据不出域，兼容国产操作系统、中间件与数据库；同时提供细粒度权限管控与操作审计，确保社区运行合规、可控、可信。&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#2980b9"&gt;&lt;strong&gt;知识共创与沉淀&lt;/strong&gt;&lt;/span&gt;：员工可跨部门在同一平台发起话题、撰写文档、沉淀 FAQ，AI 与人协作的内容自动归档入库，打破知识孤岛，形成可检索、可复用的组织级知识资产。&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#2980b9"&gt;&lt;strong&gt;跨部门协作与创新&lt;/strong&gt;&lt;/span&gt;：内置在线讨论、活动中心与智能推荐模块，线上线下无缝衔接，激发创新灵感，促进多团队协同和技术孵化。&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#2980b9"&gt;&lt;strong&gt;智能运营降本增效&lt;/strong&gt;&lt;/span&gt;：AI 自动化覆盖采集、翻译、编辑、审核与发布全流程，7×24h 不间断运营，内容更新频率提升 3 倍以上，人力成本减少 60%，并通过预测预警保障运营质量与安全。&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#2980b9"&gt;&lt;strong&gt;数字化转型赋能&lt;/strong&gt;&lt;/span&gt;：整合海量开源技术内容与文档资源，提供从知识获取、技能提升到实践落地的端到端数字化支持；依托模型微调与数据反馈，平台持续进化，助力组织加速数字化升级。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3&gt;&lt;span style="color:#27ae60"&gt;&lt;strong&gt;商业不是污染源，是让技术流动的河&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;社区的灵魂在于共创与分享。没错，但真正的价值释放，必须伴随可持续的商业闭环。AI 与社区的融合只是开始，我们将继续突破边界，推出更多 AI 项目 - 从直播驱动硬件 prototyping，到 AI 培训教育孵化新一代开发者；从行业专属知识库，到全链路智能运营。&lt;/p&gt; 
&lt;p&gt;过去两年，开源中国社区通过 AI 能力驱动内容增长，内容运营成本降低 30%、商业化营收提升 200%，同时也吸引了多家客户定制化部署合作的需求，更有外资企业前来考察，意欲引入我们的「数字化企业知识管理 AI 平台」。下一步，我们的目标是再翻一番 —— 向政采商机、行业大厂以及全球化市场持续扩张。&lt;/p&gt; 
&lt;p&gt;在「数字中国」「网络强国」战略的双轮驱动下，企业级社区已成为国家数字基础设施的重要组成部分。&lt;span style="color:#27ae60"&gt;开源中国社区的「数字化企业知识管理 AI 平台」不仅为企业提供「知识管理＋智能创作＋可视化决策」的一站式解决方案，也正承载着国家「自主可控」「高质量发展」的时代使命&lt;/span&gt;。AI 与社区的深度融合，将助力中国企业在未来十年实现真正的科技突围与产业升级。&lt;/p&gt; 
&lt;p&gt;真正的商业化成功，从不是孤军奋战，而是与时代共潮生。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;数字化企业知识管理 AI 平台：&lt;/strong&gt;&lt;em&gt;&lt;a href="http://next.oschina.net/"&gt;next.oschina.net&lt;/a&gt;&lt;/em&gt;&lt;/h4&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355961</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355961</guid>
      <pubDate>Sun, 11 May 2025 06:14:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Sam Altman：Meta 曾试图以 1 亿美元挖走 OpenAI 人才，但未能成功</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;Meta 首席执行官马克·扎克伯格 (Mark Zuckerberg ) 最近大举招聘，试图从竞争对手的实验室挖角顶尖 AI 研究人员，以充实 Meta 新的超级智能团队。据报道，为了在由 Scale AI 前首席执行官 Alexandr Wang 领导的团队中工作，并在扎克伯格附近办公，Meta 向 OpenAI 和谷歌 DeepMind 的员工提供了高达 1 亿美元的薪酬待遇。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;OpenAI 首席执行官萨姆·奥尔特曼 (Sam Altman) 在周二与其兄弟 Jack Altman 共同发布的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fjaltma%2Fstatus%2F1935063796802011164" target="_blank"&gt;播客&lt;/a&gt;中证实了这些报道。但他指出，扎克伯格的招募工作基本上没有成功，并在过程中多次挖苦 Meta。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「[Meta] 开始给我们队里的很多人开出巨额合同。你知道，比如每年 1 亿美元的签约奖金，比这还多的薪水……我很高兴，至少到目前为止，我们最优秀的员工中还没有人决定接受他的条件。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="416" src="https://oscimg.oschina.net/oscnet/up-bc17827506816afff89a78697159baba20a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Altman 称，他相信员工们的评估是，OpenAI 更有可能实现 AGI，并且有朝一日可能成为更有价值的公司。他认为 Meta 公司只关注员工的高额薪酬，而不是实现 AGI 的使命，这很可能不会创造出优秀的企业文化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;消息称，Meta 曾试图挖走 OpenAI 的首席研究员之一 Noam Brown 以及谷歌的 AI 架构师 Koray Kavukcuoglu。然而，这两次尝试都未能成功。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Altman 认为，OpenAI 的创新文化是其成功的关键，而 Meta 的「当前 AI 努力并未取得预期的效果」。并表示，他尊重 Meta 的很多方面，但也指出他「并不认为他们是一家擅长创新的公司」。在播客的后半部分，Altman 表示，他认为企业仅仅在 AI 领域迎头赶上是不够的——他们必须真正创新才能保持领先地位。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此外，Sam Altman 还描述了一款可能会蚕食 Meta 应用市场的由 AI 驱动的社交媒体信息流。他表示，自己很有兴趣探索一款利用 AI 根据用户需求提供定制信息流的社交媒体应用，而不是传统社交媒体应用中默认的算法信息流。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355944/sam-altman-meta-tried-100m-offers</guid>
      <pubDate>Sun, 11 May 2025 03:39:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Linux 桌面环境 KDE Plasma 6.4 发布，带来多项出色改进</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;KDE Plasma 6.4 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkde.org%2Fzh-cn%2Fannouncements%2Fplasma%2F6%2F6.4.0%2F" target="_blank"&gt;已发布&lt;/a&gt;，为这款开源桌面带来了诸多精彩的改进。KDE Plasma 6.4 持续增强了对 Wayland 的支持，分离了 KWin X11 代码，以便更好地与日益增长的 Wayland 优先理念相分离。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-13c517526201b297f34a6dcaf329d9b315d.png" referrerpolicy="no-referrer"&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-3a7a8490ff36dd30ab5e4346cf264c1f437.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;主要变化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;允许为每一个虚拟桌面选择不同的磁贴布局；&lt;/li&gt; 
 &lt;li&gt;支持用数字键盘键移动指针，触控板手势放大或缩小；&lt;/li&gt; 
 &lt;li&gt;增加前景和背景元素之间的对比度；&lt;/li&gt; 
 &lt;li&gt;改进了 Info Center 和 KMenuEdit 的外观；&lt;/li&gt; 
 &lt;li&gt;文件传输通知会显示直观的进度图；&lt;/li&gt; 
 &lt;li&gt;可直接通过可用更新通知安装更新；&lt;/li&gt; 
 &lt;li&gt;应用全屏模式下将进入「请勿打扰」模式，将只会显示紧急通知；&lt;/li&gt; 
 &lt;li&gt;当应用尝试访问麦克风发现麦克风静音时会弹出通知；等等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plasma&amp;nbsp;6.4 还带来了多项性能提升、更强大的绘图板支持、更强大的 HDR / 色彩管理、更佳的通知体验、更流畅的系统监视器应用，以及诸多其他桌面优化和错误修复，其中还有大量新功能和其他改进，旨在进一步优化 Plasma 6 桌面体验。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkde.org%2Fannouncements%2Fplasma%2F6%2F6.4.0%2F" target="_blank"&gt;通过 KDE.org&lt;/a&gt;&amp;nbsp;可以查看有关 Plasma 6.4 的更多详细信息和屏幕截图。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355943/kde-plasma-6-4</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355943/kde-plasma-6-4</guid>
      <pubDate>Sun, 11 May 2025 03:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Roo Code 新增多文件读取功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;AI 编程工具&amp;nbsp;&lt;span&gt;Roo Cod&lt;/span&gt;e 新增了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.roocode.com%2Ffeatures%2Fconcurrent-file-reads" target="_blank"&gt;多文件读取功能&lt;/a&gt;，支持一次性读取工作区中的多个文件，实现对代码依赖关系和整体架构的深度解析。&lt;/p&gt; 
&lt;p&gt;这显著提高了处理需要从多个文件获取上下文信息的任务时的效率，因为 Roo Code 可以一次性收集所有必要信息，而无需逐个读取文件。&lt;/p&gt; 
&lt;p&gt;主要特性&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;单个请求中最多读取 100 个文件。&lt;/li&gt; 
 &lt;li&gt;默认启用，以实现更快、更简化的工作流程。&lt;/li&gt; 
 &lt;li&gt;可配置限制从 1 到 100 个文件。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-7d5f74473ae9a41bea502f91274629e0fd0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;该功能特别适用于大型项目重构、依赖分析和跨模块调试场景，使智能体能更精准地执行代码补全、错误检测和文档生成任务。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355940/roocode-concurrent-file-reads</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355940/roocode-concurrent-file-reads</guid>
      <pubDate>Sun, 11 May 2025 03:12:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>零基础解码 Transformer 与大模型核心原理</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"&gt; 
 &lt;section data-mpa-powered-by="yiban.io" data-pm-slice="0 0 []" nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;"&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/8ebb3e34-b5bd-4e7c-8fbe-9397bc1c6d98.gif" alt="图片" class="rich_pages wxw-img __bg_gif" data-ratio="0.16666666666666666" data-type="gif" data-w="636" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;letter-spacing: 0.544px;font-size: 17px;border-radius: 8px;text-align: justify;width: 677px !important;visibility: visible !important;background-size: 16px !important;" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-backw="578" data-backh="96" data-imgfileid="503052384" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="-webkit-tap-highlight-color: transparent;margin: 0px 0px 24px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"&gt; 
  &lt;section data-mpa-category="模板" data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px 1px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"&gt; 
   &lt;section data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"&gt; 
    &lt;section data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"&gt; 
     &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px 0px 0px 7px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"&gt; 
     &lt;section data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px 7px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;text-align: left;visibility: visible;"&gt; 
      &lt;p data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 1em;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &amp;quot;PingFang SC&amp;quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;/section&gt; 
     &lt;section data-mid="" style="-webkit-tap-highlight-color: transparent;margin: 0px 0px 4px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"&gt; 
      &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style="width: 675px;border-bottom: 1px solid rgb(58, 92, 244);-webkit-tap-highlight-color: transparent;margin: 16px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;clear: both;min-height: 24px;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt; 
    &lt;section&gt; 
     &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;clear: both;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;line-height: 1.75em;font-size: 15px;visibility: visible;letter-spacing: 1px;background-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.9);font-style: normal;font-weight: 400;text-decoration: none solid rgba(0, 0, 0, 0.9);box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;本文以通俗易懂的方式，为「大模型小白」解析 Transformer 的核心原理，包括其与大模型的关系、自注意力机制、多头注意力机制、位置编码、Encoder 和 Decoder 的组成等内容，帮助读者全面理解这一支撑现代 AI 的语言模型基石。&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section data-mpa-action-id="mbt0exmz212x" data-pm-slice="3 3 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;clear: both;min-height: 24px;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt; 
     &lt;span data-mpa-action-id="mbt0x9rttdx" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: inherit;overflow-wrap: break-word !important;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;visibility: visible;font-size: 15px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;visibility: visible;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/d6ea020f-3270-4f4a-bd19-dcaeedf82105.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" data-imgfileid="503052383" referrerpolicy="no-referrer"&gt;&lt;img class="rich_pages wxw-img" data-src="" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgb(3, 69, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;visibility: visible;"&gt;前言&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapej"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapej"&gt; 
  &lt;span data-mpa-action-id="mbu764js1ulq"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;鉴于 ChatGPT、DeepSeek 等 AI 应用的兴起，大模型的风暴很快席卷了整个互联网行业，各个部门或多或少都在学习大模型的相关知识，在这些学习过程中，很容易就发现怎么都绕不开一个词「Transformer」。相信很多同学在学习中，都和笔者最初有一样的困惑：到底什么是 Transformer？Transformer 对大模型真的如此重要么？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapej"&gt; 
  &lt;span data-mpa-action-id="mbu764js1ulq"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapej"&gt; 
  &lt;span data-mpa-action-id="mbu764js1ulq"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;基于上面的疑问，本文旨在帮助和笔者一样的「大模型小白们」了解 Transformer 的核心技术，并尽量用通俗易懂的语言进行描述。最后，如文中有不对的地方，欢迎大家指正～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapej"&gt; 
  &lt;span data-mpa-action-id="mbu764js1ulq"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;pre data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: inherit;overflow-wrap: break-word !important;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"&gt;&lt;code&gt;
   
   
   &lt;section nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: inherit;overflow-wrap: break-word !important;clear: both;min-height: 1em;letter-spacing: 0.544px;visibility: visible;line-height: normal;"&gt;
 
    
    
    &lt;img src="https://oscimg.oschina.net/oscnet/fde6850b-d778-4a12-b80d-c62228dc322e.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" data-imgfileid="503052425" referrerpolicy="no-referrer"&gt;

   
   
   &lt;/section&gt;&lt;p style="-webkit-tap-highlight-color: transparent;margin: 8px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;clear: both;min-height: 1em;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);visibility: visible;line-height: normal;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;color: rgb(3, 69, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Transformer 和大模型之间是什么关系？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1h1v"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1h1v"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;首先，&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;你可以把 Transformer 想象成一种「超级配方」，而大模型就是用这个配方做出来的「满汉全席」。举个例子：假设你想做一道超级复杂的菜（比如佛跳墙），但普通锅具（传统 AI 模型）只能炒炒青菜，火力不够、步骤也麻烦。而 Transformer 就像发明了一种「万能高压锅」：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style="list-style-type: disc;" class="list-paddingleft-1"&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dnai13" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;火力猛：能同时处理大量信息（比如一句话的所有词语一起分析，而不是逐个字看）；&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dnasp6" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;步骤简：用「注意力机制」（Attention）自动找到关键信息（比如理解「猫吃鱼」时，自动关联「猫→吃→鱼」的关系）；&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dna118x" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;可复制：这套方法能无限扩展，锅越大（模型参数越多），菜越香（效果越好）。&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna6gr"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;所以关系就是：Transformer 是「方法论」，教会 AI 怎么高效学习；而大模型是「实践成果」，用这种方法练出来的「全能学霸」。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna13ve"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: pre-wrap;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);clear: both;min-height: 1em;text-align: center;visibility: visible;color: rgb(34, 34, 34);line-height: normal;"&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/86dacb22-b6ea-4fbd-8f94-2ea973556998.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" data-imgfileid="503052435" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;p style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 1em;color: rgba(0, 0, 0, 0.9);font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: pre-wrap;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);font-family: monospace;text-align: center;line-height: normal;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgb(0, 17, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Transformer 到底是什么？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1440"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1440"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;了解了大模型和 Transformer 的宏观关系后，现在就要开始真正了解 transformer 的内核架构了，下图就是经典的 transformer 架构图，相信很多同学都已经看到过无数次了～ 下面我们将真正开始介绍本文的重头戏 transformer。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-left: 32px;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1em;" data-mpa-action-id="mbu73dna9qh"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: center;margin-bottom: 0px;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/9a4ddc15-7268-4aa5-9f11-6592a1d2edf8.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="864" style="left: 0px;top: 0px;width: 406px;height: 546px;" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;span leaf="" mpa-font-style="mbu8md841wvj" style="font-size: 12px;" data-mpa-action-id="mbu8md8b8xq" data-pm-slice="0 0 []"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Transformer 内部结构&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna14ay"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna14ay"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;首先在看 transfomer 的模型时，你可以将该模型图一分为二来看，左边是 Encoder，在有一段语句输入后，编码器负责将输入的序列进行编码，它可以将输入语句的每个单词向量（emmbedding）和单词的位置信息（position）进行融合编码，最终会得到一个编码后的矩阵，随后将其喂给右侧的 Decoder 模块，进行解码，Decoder 依次会根据当前推理过的单词 1~ n 再进行推理下一个单词 n+1。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaxek"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaxek"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;只看语言描述，有点抽象，举一个🌰来看：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna22r3"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;首先，假如我们在做一个翻译类型的任务，比如我们有一句话：我喜欢编码，当我们把这句话喂给 Transformer 时，就会有如下的流程：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1psh" style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;第一步&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;：获取输入句子的每个单词的特征值，也就是常说的 embedding，但是只获取单词的特征值是不够的，因为推理一个句子，还需要单词之间的依赖关系，所以需要对单词的具体位置进行编码，获取到位置的编码信息（即位置的 embedding，后面会详细讲位置信息如何编码的～），随后将两个 Embedding 相加，即可得到拥有位置信息的编码矩阵，如下图所示。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1psh" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna8jn" style="text-align: center;margin-bottom: 0px;"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="display: inline-block;text-indent: 0px;margin-top: 0px;" nodeleaf=""&gt; 
    &lt;img src="https://oscimg.oschina.net/oscnet/e8b5d6b3-1d00-40b1-85b3-242c99c31982.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 100%;" data-backw="578" data-backh="311" referrerpolicy="no-referrer"&gt; 
   &lt;/section&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;span leaf="" style="line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Transformer 输入句子处理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna13it" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna13it" style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;第二步&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;：将上面带有位置信息的矩阵 X（每一行代表一个单词的向量信息）输入到 6 个 Encoder 中进行编码，得到最后的矩阵 E，如下图所示。矩阵 E，用&lt;/span&gt;&lt;img src="https://oscimg.oschina.net/oscnet/f13ff340-9023-4317-8f28-b5203ff57fa9.jpg" class="rich_pages wxw-img" data-ratio="0.4830508474576271" data-s="300,640" data-type="png" data-w="236" style="width:47px;height:23px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/42910df3-295d-4724-8036-3df7ac8b8e8b.png" data-cropx2="236" data-cropy1="16.46511627906977" data-cropy2="131.72093023255815" data-imgfileid="503056871" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;表示，其中 n 为句子中的单词数量，d 为向量的维度，论文中的 d=512&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna13it" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;margin-top: 8px;margin-bottom: 8px;" data-mpa-action-id="mbu73dna61o"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: center;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/de25e59c-c2bd-45f6-beaa-7ed7d8c7028a.jpg" class="rich_pages wxw-img" data-ratio="1.1970217640320733" data-w="873" style="left:0px;top:0px;width:426px;height:510px;" data-croporisrc="https://oscimg.oschina.net/oscnet/4a28528c-ba2a-4da2-bf80-d47fe7503b2d.png" data-cropx1="65.53711790393012" data-cropx2="937.9999999999999" data-cropy1="108.5450857836221" data-cropy2="1153.0355338901745" data-backw="362" data-backh="484" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;span leaf="" style="text-align: center;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Transformer 编码图解&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna3s7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna3s7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;第三步&lt;/span&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;：&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;得到 Encoder 的编码矩阵 E 后，会将 E 喂进 Decoder 进行解码处理，Decoder 依次会根据当前已经翻译过的单词再推测下一个单词，比如当前翻译了「I」 ，下次需要翻译「like」，模型会根据〈begin〉（起始符）和「I」综合推理翻译「like」这个单词。并且在这个推理过程中，存在 Mask 机制，比如你翻译到「I」，他会通过 Mask 盖住「I」之后的单词「like encoding」来进行预测，具体流程如下图所示&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna3s7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;margin-bottom: 0px;" data-mpa-action-id="mbu73dna5ri"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/608c64eb-28f4-430f-8309-ea994188782f.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 97.861%;height: 323px;" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;span leaf="" style="text-align: center;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Transformer 编码图解&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1bgt"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 1em;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/43a797ab-fb73-4c5a-89fc-e99feffd5bbd.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" data-imgfileid="503052459" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;p style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 1em;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgb(0, 17, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Encoder 和 Decoder 的核心原理是什么？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ui0"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ui0"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;了解了 Transformer 的大体流程后，肯定有很多同学会好奇，上文只说了编码和解码，那 Transformer 到底是如何做到的这些呢？先别急，我们再回到文章的一开始的 Transformer 架构图，可以看到在 Encoder、Decoder 内部都拥有着两个非常重要的模块，Multi-Head-Attention 模块和 Feed Forward 模块。其中，Encoder 包含一个 Multi-Head-Attention 模块，而 Decoder 则包含两个 Multi-Head-Attention 模块，不难发现，Transformer 的核心其实就是这个多头注意力机制，那么下面我们就先从这个多头注意力机制进行攻克。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="min-height: 14px;line-height: 14px;" data-mpa-action-id="mbu73dnak9t"&gt; 
  &lt;span style="min-height: 21px;font-size: 21px;font-weight: bold;"&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dnak9t"&gt; 
  &lt;strong data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;▐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;strong style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&amp;nbsp; 4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;.1 Self-Attention 机制&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1qqn"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1qqn"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;要理解多头注意力机制，首先要先搞明白注意力机制是什么。你可以把注意力机制想象成人类在阅读时&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;用荧光笔标记重点&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;的过程。比如你读这段话时，眼睛会自然聚焦在"&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;荧光笔&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;"这个关键词上，而忽略"比如""过程"这些辅助词。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1tew"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;在注意力机制中，当它处理一句话时，模型会给每个词分配不同的"关注值"，比如翻译"&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;那只猫舒服地趴在窗台上&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;"，生成"comfortably"这个词时&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnama5"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;"舒服地"会获得最高关注值（90%）&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaxed"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;"趴"获得中等关注（70%）&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnax85"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;"窗台"只获得少量关注（30%）&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ho1"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ho1"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;这种动态权重分配让模型能灵活捕捉关键信息，就像我们读书时用荧光笔划重点一样，然后根据划线部分理解内容。而传统模型在处理这些任务时更像用手电筒看长文章，只能照亮当前位置附近；注意力机制则像同时打开整个房间的灯，还能自动调节每个区域的亮度。这种特性特别适合处理需要联系上下文的任务。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ec2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ec2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;了解完 Self-Attention 大概是什么之后，我们接下来看一下 Self-Attention 具体是怎么运行的，接下来内容会偏硬核，需要一定的数学基础，笔者尽量描述的通俗易懂。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ec2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-left: 32px;text-align: center;" data-mpa-action-id="mbu73dnaicy"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: center;margin-bottom: 8px;margin-top: 0px;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/7feaf617-f4a7-4140-9fe9-8d08004b8c6a.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 322px;height: 398px;" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;span leaf="" style="text-align: center;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Self-Attention 流程图&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1em;" data-mpa-action-id="mbu73dnam4b"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnam4b"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;上图是 Self-Attention 的总体机制流程，其实是对 Attention 计算公式的图形化描述，attention 计算公式如下：&lt;img src="https://oscimg.oschina.net/oscnet/612fe01d-9102-4cf2-89d0-c0406e5ecc06.png" class="rich_pages wxw-img" data-ratio="0.1595238095238095" data-s="300,640" data-type="png" data-w="840" style="width:276px;height:44px;" type="block" data-imgfileid="503056863" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnam4b"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style="list-style-type: disc;" class="list-paddingleft-1"&gt; 
  &lt;li style="color:#0011ff;"&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna16uk"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(0, 17, 255);"&gt;4.1.1 公式含义&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna21ya"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna21ya"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;我们先抛开 Q K V 三个矩阵不谈，单论&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/61c081f8-12b9-448a-98e9-6c3bd37726b8.jpg" class="rich_pages wxw-img" data-ratio="0.2209106239460371" data-s="300,640" data-type="png" data-w="593" style="width:145px;height:32px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/662b5d3a-f533-42e6-a189-26450f968d98.png" data-cropx2="593.8095238095237" data-cropy2="131.04761904761907" data-imgfileid="503056895" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;这个公式是什么含义呢？&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1qjd"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;首先要搞明白，一个矩阵乘它自身的转置矩阵代表了什么。我们知道矩阵本身就是一系列向量的集合，一个矩阵乘它自身的转置矩阵，就可以理解为这些向量分别和其他的向量做内积，而向量内积其实表示的是两个向量的夹角，表征一个向量在另一个向量上的投影，说人话就&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;两个向量的内积是表示两个向量之间的相似度&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna87o"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna87o"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;用一个例子来看：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1osu"&gt; 
  &lt;section&gt; 
   &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
   &lt;span style="font-size: 15px;"&gt; 
    &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
     &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/d0f8c90c-9116-4773-bc19-e2f6a13c5708.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 100%;float: left;" data-backw="501" data-backh="144" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
    &lt;/section&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section&gt; 
   &lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section&gt; 
   &lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section&gt; 
   &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna17pt"&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna17pt"&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna17pt"&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna17pt"&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;有一个「早上好」的特征矩阵，每一行代表这个字的特征向量，可以看出来在「早上好」&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;矩阵和「早上好」的转置矩阵做计算时，「早」会跟自己以及其他两个字（「上」、「好」）的向量分别做内积，来得到一个新的向量。那这个新的向量有什么意义呢？结合我们上面对内积的解释，我们可以把它理解为这个值越大，说明两个向量的相似度越高，值越小说明两个向量之间关系越弱。进一步理解一下，这个向量是不是可以在一定程度上（不是完全）表示，在关注词 A 的时候，是不是应给予 B 词更多的关注。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna17pt"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1pzi"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;那矩阵&lt;img src="https://oscimg.oschina.net/oscnet/d262fab9-a0d8-431c-b6ad-a794a4157475.jpg" class="rich_pages wxw-img" data-ratio="0.4935064935064935" data-s="300,640" data-type="png" data-w="154" style="width:50px;height:25px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/1761d2a3-828c-4fd0-9cbf-7e30ab136f78.png" data-cropx2="154" data-cropy1="12.32" data-cropy2="89.32000000000001" data-imgfileid="503056876" referrerpolicy="no-referrer"&gt;&amp;nbsp;的结果是一个矩阵，它里面保存了&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;每个向量&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;与&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;自己、以及其他向量&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;进行内积的计算结果。至此，我们了解了一个矩阵乘它自己转置矩阵的含义，那我们再来看 softmax 的作用是什么？&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1pzi"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna95n"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;这里不再对 softamax 公式进行详细介绍，只简单介绍意义。softmax 的作用就是归一化，简单来说，经过归一化后，会将单行向量的值的和变为 1，如上图的结果矩阵将由[11,11,10]，变为[0.4,0.4,0.2]。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna95n"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaqgd"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;归一化的这个结果，其实就相当于我们后续乘的 X 的权重系数。用人话来讲就是，当我们关注「早」这个字的时候，我们应分配 0.4 的权重关注它自身，分配 0.4 的权重关注「上」，0.2 的权重关注「好」。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaqgd"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;我们理解完了&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/6639dd91-b80b-49ab-bf35-1558f23273ce.png" class="rich_pages wxw-img" data-ratio="0.25483870967741934" data-s="300,640" data-type="png" data-w="620" style="width:120px;height:31px;" type="block" data-imgfileid="503056878" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，那最后的乘 X 是什么作用呢？如下图所示&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna24th"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="font-size: 15px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/8aaa6317-a75f-4289-aca4-c7ed79b82690.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 100%;height: 202px;" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1d4b"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;观察上图，行向量 X 与第一个列向量相乘，得到了第一个新的行向量[1.4]，且这个行向量与 X 的的维度相同。那么新的行向量的每一个数值，都是由三个词向量在这一维度加权求和后得到的，这个新的行向量就&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;代表「早」字经过注意力加权求和后的表示&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1t61"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1t61"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;理解了公式整体的含义之后，再看一个细节&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/11f92e7f-ce3b-4e54-ae3c-ef346718e7b0.jpg" class="rich_pages wxw-img" data-ratio="0.17065868263473055" data-s="300,640" data-type="png" data-w="1002" style="width:287px;height:49px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/c98f0b60-d894-4715-8336-5460bbc3a7a8.png" data-cropx2="1002" data-cropy2="171.0731707317073" data-imgfileid="503056879" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，为什么要除&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/1e7cd81e-e281-45f5-831e-75b3f17431fb.jpg" class="rich_pages wxw-img" data-ratio="0.9798657718120806" data-s="300,640" data-type="png" data-w="149" style="width:40px;height:39px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/1fd2460e-77fd-45cf-9ce7-7a1366ed02f2.png" data-cropx2="150" data-cropy2="147" data-imgfileid="503056881" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;呢？其实这个操作只是为了防止 QK 的结果过大，所以会除一个尺度标度&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/9f4b0473-6e0c-472c-93bd-67d252de4498.jpg" class="rich_pages wxw-img" data-ratio="0.8333333333333334" data-s="300,640" data-type="png" data-w="144" style="width:39px;height:33px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/1fd2460e-77fd-45cf-9ce7-7a1366ed02f2.png" data-cropx2="144.58536585365854" data-cropy1="22.24390243902439" data-cropy2="144.58536585365852" data-imgfileid="503056881" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，而&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/34452b91-9a73-40d2-9068-fd6439ffafc4.png" class="rich_pages wxw-img" data-ratio="1.1071428571428572" data-s="300,640" data-type="png" data-w="112" style="width:26px;height:29px;" type="block" data-imgfileid="503056885" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;表示 query 和 key 的向量的维度，如果不对 softmax 的输入做缩放，那么万一输入的数量级很大，softmax 的梯度就会趋向于 0。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1t61"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style="list-style-type: disc;" class="list-paddingleft-1"&gt; 
  &lt;li style="color:#0011ff;"&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna188k"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(0, 17, 255);"&gt;4.1.2 Q K V 含义&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna114j"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna114j"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;理解了上面自注意力机制公式的含义后，其实 Q（Query），K（Key），V（Value）只是一个公式的入参，本质是根据输入矩阵 X 跟线性矩阵 WQ、WK、WV 做内积得到的，而输入矩阵 X 则是之前单词的特征向量矩阵 X 或者上一个 Encoder block 的输出，具体的计算过程如下图所示。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna114j"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;" data-mpa-action-id="mbu73dna11b2"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: center;margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/1cefaa58-eb59-47dc-a256-6855fdca4e27.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 62.1658%;height: 502px;" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;span leaf="" style="text-align: center;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Q K V 矩阵计算&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1em;" data-mpa-action-id="mbu73dna1ydr"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ydr"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;看到这里，可能有些同学会有疑问，既然都是通过线性矩阵得到的 Q、K、V，那为什么不使用 X 矩阵本身呢？这个答案其实并不难想，本质上使用线性矩阵是为了提升模型的拟合能力，因为矩阵 W 都是可以训练得到的，从而起到一个缓冲的效果。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ceo"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;一句话总结 Q、K、V 在自注意力机制里做的事情：&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;通过 query 和 key 的相似程度来计算出 value 的权重分布&lt;/span&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnam1g"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dnak9t" data-pm-slice="4 2 []"&gt; 
  &lt;strong data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;▐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;strong style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&amp;nbsp; 4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;.2 Multi-Head Attention 机制&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnawfn"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnawfn"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;其实理解了注意力机制后，多头注意力机制也是非常好理解的，简单来说它是对单层注意力机制的一个叠加模型，通过多层计算 Q、K、V，再将各部分结果拼接，最后通过线性化处理得到一个与输入同等维度的结果矩阵，多头注意力机制架构图如下所示。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1.5em;" data-mpa-action-id="mbu73dnawfn"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;" data-mpa-action-id="mbu73dnaf9x"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="display: inline-block;text-indent: 0px;" nodeleaf=""&gt; 
    &lt;img src="https://oscimg.oschina.net/oscnet/582e4571-1cd8-402f-9a3f-50ace934b594.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="640" style="left:0px;top:0px;width:354px;height:475px;" referrerpolicy="no-referrer"&gt; 
   &lt;/section&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;span leaf="" style="text-align: center;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Multi-Head Attention 机制&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna11f9"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;将上述过程展开敍述：首先通过权重矩阵&amp;nbsp;&lt;img src="https://oscimg.oschina.net/oscnet/4f352233-7577-4b8f-b796-1ee8029ec3a2.jpg" class="rich_pages wxw-img" data-ratio="0.18393782383419688" data-s="300,640" data-type="png" data-w="772" style="width:146px;height:27px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/95c9b0c9-ba5c-425a-b0c3-4da623f8dca7.png" data-cropx2="772" data-cropy1="21.15068493150685" data-cropy2="163.91780821917808" data-imgfileid="503056865" referrerpolicy="no-referrer"&gt;将 Q、K、V 分割，每个 Head 单独计算 self-attention，同时因为训练出的&lt;img src="https://oscimg.oschina.net/oscnet/4f352233-7577-4b8f-b796-1ee8029ec3a2.jpg" class="rich_pages wxw-img" data-ratio="0.18393782383419688" data-s="300,640" data-type="png" data-w="772" style="width:146px;height:27px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/95c9b0c9-ba5c-425a-b0c3-4da623f8dca7.png" data-cropx2="772" data-cropy1="21.15068493150685" data-cropy2="163.91780821917808" data-imgfileid="503056865" referrerpolicy="no-referrer"&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;也各不相同，所以得出的 Q、K、V 也是不同的，因此我们说每个 Head 的关注点也&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;各有侧重。最后将每个 Head 得出的结果进行 Concat（拼接）操作，然后通过总体权重矩阵&lt;/span&gt;&lt;img src="https://oscimg.oschina.net/oscnet/3571e99e-4c99-4880-8f8c-4dc628dc90ab.png" class="rich_pages wxw-img" data-ratio="0.7575757575757576" data-s="300,640" data-type="png" data-w="198" style="width:35px;height:27px;" type="block" data-imgfileid="503056887" referrerpolicy="no-referrer"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;决定对每个 Head 结果的关注程度（注意最后的 Z 矩阵维度和最初输入的 X 维度相同），&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;从而能够做到在不同语境下对相同句子的不同理解&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。具体图解如下图所示。&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dna11f9"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dnakka" style="text-align: center;"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="display: inline-block;text-indent: 0px;" nodeleaf=""&gt; 
    &lt;img src="https://oscimg.oschina.net/oscnet/fe2ef549-91b9-454f-baa4-b7aae95051bf.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left:0px;top:0px;width:100%;" data-backw="578" data-backh="322" referrerpolicy="no-referrer"&gt; 
   &lt;/section&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;span leaf="" style="line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Multi-Head Attention 计算流程&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="margin-top: 8px;margin-bottom: 0px;line-height: 1.75em;"&gt; 
  &lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;"&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/01d96474-7a66-4640-b4f1-c9626b34047b.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" data-imgfileid="503052460" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: inherit;overflow-wrap: break-word !important;color: rgb(0, 17, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;位置编码&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapp7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnapp7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;从 Transfomer 架构图可以看到，其实在 Encoder 之前还有一个模块，即位置编码模块。不免有同学好奇，为什么需要在 Encoder 输入之前要进行位置的编码呢？其实这也不难理解，通过上面的学习，我们可以发现在做自注意力机制时，它是跟每一个输入的词向量进行内积，在这个过程中，并没有考虑到词向量的顺序，所以这最后得到的结果一定是缺失原来文本的顺序信息的。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;margin-bottom: 0px;" data-mpa-action-id="mbu73dna1dci"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="display: inline-block;text-indent: 0px;" nodeleaf=""&gt; 
    &lt;img src="https://oscimg.oschina.net/oscnet/9a4ddc15-7268-4aa5-9f11-6592a1d2edf8.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="864" style="left: 0px;top: 0px;width: 435px;height: 585px;" referrerpolicy="no-referrer"&gt; 
   &lt;/section&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;span leaf="" style="text-align: center;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Transformer 内部结构&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnas14"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnas14"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;位置信心的 Embedding 通常有两种方式获得，一种是通过训练得到，另一种是直接使用公式，而 Transformer 中的位置信息则是采用了后者——公式获得。计算公式如下：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/7de93da6-88bd-4618-a8d0-a3c0af6bf5a8.png" class="rich_pages wxw-img" data-ratio="0.245" data-s="300,640" data-type="png" data-w="800" style="width:326px;height:80px;" type="block" data-imgfileid="503056868" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna17di"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;针对上面的公式，进行解释一下：pos 代表单词的位置，2i 和 2i+1 则分别代表偶数位置和奇数位置，d 则代表向量维度（和前面单词的 embedding 维度相同），使用该公式有以下几个好处：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style="list-style-type: disc;" class="list-paddingleft-1"&gt; 
  &lt;li&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna21eh"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;使用公式法能够适应比训练集里所有句子更长的句子场景，这么说可能有点绕，举一个例子，假设我们训练的时候，训练集里最长的句子只有 100 个单词，但是现实中我们在推理的时候，可能会存在 101 个单词的场景，这时候呢根据公式就可以计算出 101 单词的位置信息。&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna7oi"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;可以让模型更容易地计算出相对位置。举一个例子，假设 A 单词的位置是 pos， B 单词和 A 单词之间的位置距离为 L，那么&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;PE（pos+L）&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;则可以由&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;PE（pos）&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;计算得到。因为&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Sin(A+B) = Sin(A)Cos(B) + Cos(A)Sin(B)&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;,&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Cos(A+B) = Cos(A)Cos(B) - Sin(A)Sin(B)&lt;/span&gt;&lt;/span&gt; 
    &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnazbs"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnazbs"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;根据公式得到位置信息后，将单词的 Embedding 信息和位置 Embedding 相加，就可以得到带有位置信息和单词特征信息的向量，而这个向量也正是 Encoder 的输入。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna164g"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 1em;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;line-height: 1.75em;"&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/a347e7ee-2c8d-4644-b2b2-871be865049e.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;" data-imgfileid="503052461" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;p style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 1em;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;line-height: normal;"&gt;&lt;span leaf="" data-pm-slice="1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: transparent; margin: 8px 0px; padding: 0px; outline: 0px; max-width: 100%; clear: both; min-height: 24px; color: rgba(0, 0, 0, 0.9); font-family: \&amp;quot;PingFang SC\&amp;quot;, system-ui, -apple-system, \&amp;quot;system-ui\&amp;quot;, \&amp;quot;Helvetica Neue\&amp;quot;, \&amp;quot;Hiragino Sans GB\&amp;quot;, \&amp;quot;Microsoft YaHei UI\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, sans-serif; font-size: 17px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: 0.544px; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; background-color: rgb(255, 255, 255); visibility: visible; line-height: 1.75em; box-sizing: border-box !important; overflow-wrap: break-word !important;&amp;quot;,&amp;quot;data-mpa-action-id&amp;quot;:&amp;quot;mbt2e3151rly&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:null},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgb(0, 17, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Encoder 的组成&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1obu"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1obu"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;可以看到 Encoder 的内部除了 Multi-Head Attention 模块，还有 Feed Forward Network、Add &amp;amp; Norm 模块，这两个模块都是跟在 Multi-Head Attention 模块之后做「加强表现」效果的。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaqz2"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;section style="text-indent: 0px;margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
   &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/22311d5c-5951-4bff-8afc-a0f6581dc669.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 366px;height: 492px;" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;span leaf="" style="line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Encoder 架构&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna23jo"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dnak9t" data-pm-slice="4 2 []"&gt; 
  &lt;strong data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;▐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;strong style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&amp;nbsp; 6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;.1 FFN 模块&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnafu7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnafu7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;首先，可以看到不论 Encoder 还是 Decoder，在做完 Multi-Head Attention 后，都会接一个 FFN 网络，那这个 FFN 网络到底有什么用呢？要搞清这个问题，还是要先从原理入手。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaxpi"&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;FFN 的计算公式：&lt;img src="https://oscimg.oschina.net/oscnet/43b85b92-4a9f-4ecd-892b-3e74353eb403.png" class="rich_pages wxw-img" data-ratio="0.11574074074074074" data-s="300,640" data-type="png" data-w="1080" style="width:260px;height:30px;" type="block" data-imgfileid="503056869" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;通过公式，其实不难得出，FFN 是由全连接层（FC）和激活函数 Relu 组成。其实通过分析公式，已经可以得出 FFN 的作用，即对矩阵进行&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;空间的变换&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，引入&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;非线性特征&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，来增强模型的表现能力。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaxpi"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 32px;text-align: center;margin-bottom: 0px;" data-mpa-action-id="mbu73dnagsw"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/1c87fa44-3c16-4e67-ba98-741e4ab3b1a9.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 100%;float: left;" data-backw="505" data-backh="259" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span style="text-indent: 0px;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span leaf="" style="line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;FFN 模块架构图&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaycb"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaycb"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;可能有些同学会存在疑问，在 Multi-Head Attention 的最后其实有线性矩阵&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/3571e99e-4c99-4880-8f8c-4dc628dc90ab.png" class="rich_pages wxw-img" data-ratio="0.7575757575757576" data-s="300,640" data-type="png" data-w="198" style="width:35px;height:27px;" type="block" data-imgfileid="503056887" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;的计算，已经将结果映射成和输入 X 相同维度了，为什么这里还要增加一个 FFN 模块？笔者认为这里是把向量先&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;线性变化到高维空间&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;再重新变换回来可以得到更加抽象的数据，泛化效果更好。当然把 FFN 模块去掉也可以使用，但是效果差了很多。（笔者观点，有待讨论～）&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna10mt"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dnak9t" data-pm-slice="4 2 []"&gt; 
  &lt;strong data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;▐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;strong style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&amp;nbsp; 6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;.2&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Add &amp;amp; Norm 模块&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna7qz"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna7qz"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Add &amp;amp; Norm 层由 Add 和 Norm 两部分组成，其计算公式如下：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
  &lt;img src="https://oscimg.oschina.net/oscnet/336eedd2-a4ed-48e4-b4b1-998876f27883.png" class="rich_pages wxw-img" data-ratio="0.06111111111111111" data-s="300,640" data-type="png" data-w="1080" type="block" data-imgfileid="503056870" referrerpolicy="no-referrer"&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna6o2"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1442"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;从公式开始分析，X 为 Multi-Head Attention 或者 Feed Forward 的输入（从架构图中更能清晰得出），MultiHeadAttention(X) 和 FeedForward(X) 则表示输出 。有些同学会疑问这两者是否可以直接相加？其实我们看前面所有的技术介绍时，可以发现所有的模块在最后都经过了&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;线性的变换&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;从而保证输出和输入的 X 矩阵维持同样的维度，比如在 Multi-Head Attention 模块，最后乘了&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/37fa33bc-186a-4c41-aa4e-8a242b85ad83.jpg" class="rich_pages wxw-img" data-ratio="0.7789473684210526" data-s="300,640" data-type="png" data-w="190" style="width:35px;height:27px;" type="block" data-croporisrc="https://oscimg.oschina.net/oscnet/14fefb14-0a65-45f3-b4cd-301c770d8cbf.png" data-cropx2="190" data-cropy2="146.57142857142858" data-imgfileid="503056889" referrerpolicy="no-referrer"&gt;矩阵保证了输出和输入相同维度。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1442"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna782"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Add 是指 X + MultiHeadAttention(X) 和 X + FeedForward(X)，这是一种残差网络，&lt;/span&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;通常用于解决深度学习中多层网络训练的问题，&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;通过将前一层的信息无差别的传递到下一层，从而可以让网络只关注当前差异的部分&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。（具体残差网络的知识不在此展开）&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna782"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: center;margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna19hl"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;section style="text-indent: 0px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
   &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/cc618188-bec4-415d-b4d3-51ed03c810d1.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 100%;" data-backw="495" data-backh="86" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;span leaf="" style="text-align: center;text-indent: 0px;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;残差网络&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dnab29"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnab29"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Norm 模块则代表了 Layer Normalization，简单来说它的作用是&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;规范优化空间&lt;/span&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，&lt;/span&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;加速训练的收敛&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1yts"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;当我们使用梯度下降算法做优化时，我们可能会对输入数据进行归一化，但是经过网络层作用后，我们的数据已经不是归一化的了。随着网络层数的增加，数据分布不断发生变化，偏差越来越大，导致我们不得不使用更小的学习率来稳定梯度。Layer Normalization 的作用就是&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;保证数据特征分布的稳定性，将数据标准化到 ReLU 激活函数的作用区域，可以使得激活函数更好的发挥作用。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1o3i"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: mp-quote, &amp;quot;PingFang SC&amp;quot;, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/fcc202b0-5a24-4370-88cf-4eeea91e08b3.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 136px !important;" data-imgfileid="503048354" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Decoder 模块的组成&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1xln"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1xln"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;从 Decoder 的架构图中，我们可以看到和 Encoder 层会有一些相似之处，但也存在一些差异：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style="list-style-type: disc;" class="list-paddingleft-1"&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dna17ld" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Decoder 存在两个 Multi-Head Attention 模块，而 Encoder 只有一个&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dna1hly" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Decoder 的第一个 Multi-Head Attention 模块采用了 Mask 操作&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dna2rr" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Decoder 的第二个 Multi-Head Attention 模块的输入，并不止依赖于第一个 Multi-Head Attention 模块的结果，同时依赖了 Encoder 的输出（后面会详细解释）&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section style="text-align: center;" data-mpa-action-id="mbu73dnahoo"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="display: inline-block;text-indent: 0px;" nodeleaf=""&gt; 
    &lt;img src="https://oscimg.oschina.net/oscnet/7dea7d68-f7e1-4722-b7c3-8bab9240ec74.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left:0px;top:0px;width:372px;height:512px;" referrerpolicy="no-referrer"&gt; 
   &lt;/section&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;span leaf="" style="text-align: center;text-indent: 0px;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;Decoder 架构&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnacj1"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 0px;line-height: 1.75em;" data-mpa-action-id="mbu73dnak9t" data-pm-slice="4 2 []"&gt; 
  &lt;strong data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;▐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;strong style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&amp;nbsp; 7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;.1&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;line-height: 1.75em;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Masked Multi-Head Attention 模块&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnauz9"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnauz9"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;首先我们要了解什么是 Mask，在深度学习中 Mask 通常表示掩码的意思，即它会对某些值进行掩盖处理，使在训练中进行参数更新时不会产生效果。而在 Transformer 模型中，它是对未来的内容进行了掩盖处理，在 t 时刻时，我们的解码输出&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;只能依赖于 t 时刻之前的产出，而不能依赖 t 时刻之后的输出&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。举一个例子，我喜欢写代码的翻译是「I like encoding」，在 t 时刻我们预测了「&amp;lt;begin&amp;gt; I」，这时候在需要预测"like"时，只能依赖「&amp;lt;begin&amp;gt; I」 而不能依赖「like encoding」进行。所以，在 transformer 里需要想了一个办法，把 t 时刻之后的信息全部给隐藏起来。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnauz9"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1ay7"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;具体的做法其实也很简单，它产生一个上三角的矩阵，上三角的值全部为 0。把这&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;个矩阵和我们的目标矩阵相乘时，便可以做到将 t 时刻之后的特征全部隐藏。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnass6"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;举一个例子：&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1j92"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="font-size: 15px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/a4698765-7b45-49bf-9338-1c42396af7bd.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left: 0px;top: 0px;width: 100%;" data-backw="519" data-backh="184" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1em;" data-mpa-action-id="mbu73dna20nl"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna20nl"&gt; 
  &lt;span leaf="" style="text-indent: 0px;text-align: justify;font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;假如我们有一个 0 1 2 3 4 的单词向量矩阵，那它的 Mask 同样也得是一个 5*5 的矩阵，按照设定，我们将上三角的区域全部置为 0（即绿色区域为非掩&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;盖区，黄色为 0 值区），这样在注意力机制算得&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf=""&gt;&lt;img src="https://oscimg.oschina.net/oscnet/037e98b0-488c-49b1-b8dc-3c46fd410539.png" class="rich_pages wxw-img" data-ratio="0.753731343283582" data-s="300,640" data-type="png" data-w="268" style="width:41px;height:31px;" type="block" data-imgfileid="503056891" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;矩阵后，再将其与 Mask 矩阵进行&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;按位相乘，&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;即可得到一个带有掩码的矩阵结果（黑色部分为 0 值），后续再乘 V 矩阵即可得&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;到最终的 self-attention 的结果。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna20nl"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 32px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1zy2"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnak9t" data-pm-slice="4 2 []"&gt; 
  &lt;strong data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;▐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;strong style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(0, 17, 255);letter-spacing: 1px;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;&amp;nbsp; 7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;.2&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;color: rgb(0, 17, 255);letter-spacing: 1px;font-weight: bold;font-family: Optima-Regular, PingFangTC-light;visibility: visible;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Decoder 的两个 Multi-Head Attention 模块&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnahn2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnahn2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;从 Decoder 架构图中，我们不难看出，第一个 Multi-Head Attention 模块的 query key value 均来自前一层的 Decocder 的输出，但是加入了 Mask 操作，从而让模型只能 attend 到前面已经推理过的词语，因为在真正推理过程中我们当前是不知道下一个输出词语，这是我们之后才会推测到的。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna15ts"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna15ts"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;而第二级的 Multi-Head Attention 模块，即它的 query 来自于之前一级的 Decoder 层的输出，但其 key 和 value 则来自于 Encoder 的输出，这使得 decoder 的每一个位置都可以 attend 到输入序列的每一个位置。这样做的好处是在 Decoder 的时候，每一位单词都可以利用到 Encoder 所有单词的信息 (这些信息无需 Mask)&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;" data-mpa-action-id="mbu73dna1mja"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
  &lt;span style="color: rgb(208, 206, 206);font-size: 14px;"&gt; 
   &lt;section style="display: inline-block;text-indent: 0px;" nodeleaf=""&gt; 
    &lt;img src="https://oscimg.oschina.net/oscnet/7dea7d68-f7e1-4722-b7c3-8bab9240ec74.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left:0px;top:0px;width:354px;height:487px;" referrerpolicy="no-referrer"&gt; 
   &lt;/section&gt;&lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt;&lt;span leaf="" style="text-align: center;text-indent: 0px;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;De&lt;/span&gt;&lt;/span&gt;&lt;span leaf="" style="text-align: center;text-indent: 0px;line-height: 1em;color: rgb(208, 206, 206);font-size: 12px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;color: rgb(136, 136, 136);"&gt;coder 架构&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 0px;margin-top: 0px;line-height: 1.5em;" data-mpa-action-id="mbu73dna106v"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: mp-quote, &amp;quot;PingFang SC&amp;quot;, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/d810b80b-5533-4c81-ba22-b0ffe8d0f5b1.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 140px !important;" data-imgfileid="503048358" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-align: center;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;color: rgb(3, 69, 255);font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;" data-pm-slice="1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;pre&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;data-pm-slice&amp;quot;:&amp;quot;0 0 []&amp;quot;,&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: inherit;overflow-wrap: break-word !important;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: \&amp;quot;Helvetica Neue\&amp;quot;, Helvetica, \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Hiragino Sans GB\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;p&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: transparent;margin: 8px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;clear: both;min-height: 1em;font-family: \&amp;quot;PingFang SC\&amp;quot;, system-ui, -apple-system, \&amp;quot;system-ui\&amp;quot;, \&amp;quot;Helvetica Neue\&amp;quot;, \&amp;quot;Hiragino Sans GB\&amp;quot;, \&amp;quot;Microsoft YaHei UI\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);visibility: visible;line-height: normal;box-sizing: border-box !important;overflow-wrap: break-word !important;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: transparent;margin-right: 0px;margin-bottom: 0px;margin-left: 0px;padding: 0px;outline: 0px;max-width: 100%;color: rgb(3, 69, 255);font-family: \&amp;quot;PingFang SC\&amp;quot;, -apple-system, system-ui, \&amp;quot;Helvetica Neue\&amp;quot;, \&amp;quot;Hiragino Sans GB\&amp;quot;, \&amp;quot;Microsoft YaHei UI\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Transformer 如何根据 Decoder 结果实现预测的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnazpm"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnazpm"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;解码组件的输出是一个实数的向量，我们如何能够把这些浮点数变成一个单词？这便是后面的 linear+softmax 模块需要做的。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1bt2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1bt2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;线性变换层是一个简单的全连接层神经网络，它可以把 Decoder 产生的向量矩阵投射到一个比它大的多的一个被称为&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;对数几率的向量&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;里（logits，&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;维度为&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;vocab_size），&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;表示模型对每个词汇的「原始分数」&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;。&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;例如，词表有 30000 个词，则输出一个 30000 维的向量，并且每个单元格里都对应某一个单词的分数。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1bt2"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna2w3"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;最后会通过 softmax 层，把这些分数转换成概率信息，&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;概率最高的单元格&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;则会被选中，并且它对应的单词作为&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;font-weight: bold;"&gt;这个时间步的输出&lt;/span&gt;&lt;/span&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;，具体流程如下图所示。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1em;" data-mpa-action-id="mbu73dna2w3"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dnayhd"&gt; 
  &lt;span style="min-height: 16px;font-size: 16px;color: rgb(13, 18, 57);"&gt;&lt;/span&gt; 
  &lt;span style="font-size: 15px;"&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" nodeleaf=""&gt; 
    &lt;span textstyle="" style="letter-spacing: 1px;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/271cec5c-c229-4602-bd3c-d3b0aa5a9a9d.png" class="rich_pages wxw-img" data-ratio="NaN" data-w="1000" style="left:0px;top:0px;width:100%;" data-backw="578" data-backh="370" referrerpolicy="no-referrer"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/span&gt; 
  &lt;span style="min-height: 16px;font-size: 16px;color: rgb(13, 18, 57);"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnabac"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);min-height: 24px;line-height: 1.75em;text-align: center;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/8b7f2180-7801-4c25-a3d7-3c1c7e6ef421.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.3425196850393701" data-s="300,640" data-type="png" data-w="254" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;display: initial;width: 130px !important;visibility: visible !important;" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: mp-quote, &amp;quot;PingFang SC&amp;quot;, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;text-align: justify;font-size: 18px;color: rgb(0, 17, 255);"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;总结&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1tyw"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1tyw"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;1. Transformer 由 Encoder、Decoder、位置编码模块组成&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ol style="list-style-type: lower-alpha;" class="list-paddingleft-1"&gt; 
  &lt;li&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1pwc"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Encoder 用来对输入序列进行高纬度特征提取，并生成编码后的向量信息&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dna1i2j"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;因为 Encoder 获取不到序列之间的位置信息，所以需要位置编码模块对其进行位置特征的补充，从而让模型能够拥有语义信息+位置信息的特征&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;" data-mpa-action-id="mbu73dnaohr"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;Decoder 基于已生成的结果和 Encoder 的输入进行生成最终目标序列&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;section data-mpa-action-id="mbu73dnay2m" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;2. Self-Attention 可以同时关注序列中的所有元素，而不像传统的 RNN 或 LSTM 那样需要逐步处理。这使得它能够并行计算，训练速度更快，同时也能更好地捕捉长距离依赖关系。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1a8m" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;3. Multi-Head Attention 实际是多个 Self-Attention 机制的叠加，它的作用是让模型能够同时从多个角度捕捉输入序列中不同位置之间的依赖关系，从而更全面地理解上下文信息&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1rw4" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;4. 一句话总结 Transformer 的作用：可以处理序列数据（如文本、语音等），并能够高效地捕捉序列中元素之间的依赖关系，从而完成各种复杂的语言任务。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1rw4" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);min-height: 24px;line-height: 1.75em;text-align: center;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/167df729-1981-4094-8db6-9f5c8fe116cd.png" alt="图片" class="rich_pages wxw-img" data-ratio="0.325" data-s="300,640" data-type="png" data-w="1000" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;display: initial;width: 130px !important;visibility: visible !important;" data-croporisrc="https://oscimg.oschina.net/oscnet/c562bcba-5c3a-4ed6-a1af-fdd10054099e.png" data-cropselx2="130" data-cropsely2="45" data-imgfileid="503056213" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: mp-quote, &amp;quot;PingFang SC&amp;quot;, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;text-align: justify;font-size: 18px;color: rgb(0, 17, 255);"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;参考&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dna1ton" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;ul style="list-style-type: disc;" class="list-paddingleft-1"&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dna1ton" style="text-indent: 0px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;《Attention Is All You Need》&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;https://arxiv.org/pdf/1706.03762&lt;/span&gt;&lt;/span&gt; 
    &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dna8zn" style="text-indent: 0px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;《The Illustrated Transformer&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;》&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;https://jalammar.github.io/illustrated-transformer/&lt;/span&gt;&lt;/span&gt; 
    &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dnaz0b" style="text-indent: 0px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;《Transformer 模型详解（图解最完整版）&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;》&lt;/span&gt;&lt;/span&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;https://zhuanlan.zhihu.com/p/338817680&lt;/span&gt;&lt;/span&gt; 
    &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
  &lt;li&gt; 
   &lt;section data-mpa-action-id="mbu73dnaxop" style="text-indent: 0px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
    &lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;《超详细图解 Self-Attention》&lt;/span&gt;&lt;/span&gt; 
    &lt;span style="text-indent: 0px;line-height: 1.75em;font-size: 15px;"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;span textstyle="" style="letter-spacing: 1px;"&gt;https://zhuanlan.zhihu.com/p/410776234&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;section data-mpa-action-id="mbu73dnaxop" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-pm-slice="3 3 []" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);min-height: 24px;line-height: 1.75em;text-align: center;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-size: 15px;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;img src="https://oscimg.oschina.net/oscnet/3cc408de-910a-48f7-9ebd-b91e0a25e83e.png" class="rich_pages wxw-img" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;vertical-align: bottom;height: auto !important;display: initial;width: 130px !important;visibility: visible !important;" data-croporisrc="https://oscimg.oschina.net/oscnet/fdb6f1a0-9ae4-402b-96ed-8749075e4a84.png" data-cropselx2="130" data-cropsely2="41" data-imgfileid="503056264" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"&gt; 
  &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: mp-quote, &amp;quot;PingFang SC&amp;quot;, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;text-align: justify;font-size: 18px;color: rgb(0, 17, 255);"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;团队介绍&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbt0exmzmfl" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;background-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.9);font-size: 15px;font-style: normal;font-weight: 400;letter-spacing: 1px;text-decoration: none solid rgba(0, 0, 0, 0.9);clear: both;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;line-height: 1.75em;visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 24px;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;background-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.9);font-size: 15px;font-style: normal;font-weight: 400;letter-spacing: 1px;text-decoration: none solid rgba(0, 0, 0, 0.9);clear: both;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;line-height: 1.75em;visibility: visible;"&gt;本文作者逾末，来自淘天集团-直播技术团队。淘宝直播作为全球领先的直播电商平台，正在重新定义人与商品、人与内容的连接方式。我们致力于打造沉浸式、互动式的购物体验，让数亿用户在这里发现好货、感受乐趣。无论是时尚穿搭、美食评测，还是科技新品发布，淘宝直播都在引领电商行业的创新潮流。同时淘宝直播也在推进打造行业领先的 AI 数字人技术，实现虚拟主播、智能互动、个性化推荐等创新功能。&lt;/span&gt;&lt;/p&gt; 
 &lt;section data-mpa-action-id="mbt0exmzmfl" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;background-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.9);font-size: 15px;font-style: normal;font-weight: 400;letter-spacing: 1px;text-decoration: none solid rgba(0, 0, 0, 0.9);clear: both;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;line-height: 1.75em;visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbt0exmzmfl" style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;clear: both;min-height: 24px;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;"&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;background-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.9);font-size: 15px;font-style: normal;font-weight: 400;letter-spacing: 1px;text-decoration: none solid rgba(0, 0, 0, 0.9);clear: both;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-variant-ligatures: normal;font-variant-caps: normal;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;line-height: 1.75em;visibility: visible;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbt0exmzmfl" style="-webkit-tap-highlight-color: transparent;margin: 0px 0px 24px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;"&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbt0exmzmfl" style="-webkit-tap-highlight-color: transparent;margin: 0px 0px 24px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;"&gt; 
  &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-role="outer" label="Powered by 135editor.com" data-pm-slice="0 0 []" style="-webkit-tap-highlight-color: transparent;margin: 0px 0px 24px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;visibility: visible;"&gt; 
  &lt;section style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;"&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgb(0, 17, 255);"&gt;&lt;strong style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;¤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;strong style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&amp;nbsp;拓展阅读&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;color: rgb(0, 17, 255);"&gt;&lt;strong style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;¤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;"&gt; 
   &lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;min-height: 24px;clear: both;visibility: visible;line-height: 1.75em;"&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;a class="normal_text_link" target="_blank" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 0px;padding: 0px;outline: 0px;color: rgb(87, 107, 149);text-decoration: none;-webkit-user-drag: none;cursor: pointer;max-width: 100%;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" data-linktype="2"&gt;3DXR 技术&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;a class="normal_text_link" target="_blank" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 0px;padding: 0px;outline: 0px;color: rgb(87, 107, 149);text-decoration: none;-webkit-user-drag: none;cursor: pointer;max-width: 100%;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" data-linktype="2"&gt;终端技术&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;a class="normal_text_link" target="_blank" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 0px;padding: 0px;outline: 0px;color: rgb(87, 107, 149);text-decoration: none;-webkit-user-drag: none;cursor: pointer;max-width: 100%;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" data-linktype="2"&gt;音视频技术&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;visibility: visible;line-height: 1.75em;"&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;a class="normal_text_link" target="_blank" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 0px;padding: 0px;outline: 0px;color: rgb(87, 107, 149);text-decoration: none;-webkit-user-drag: none;cursor: pointer;max-width: 100%;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" data-linktype="2"&gt;服务端技术&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;a class="normal_text_link" target="_blank" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 0px;padding: 0px;outline: 0px;color: rgb(87, 107, 149);text-decoration: none;-webkit-user-drag: none;cursor: pointer;max-width: 100%;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" data-linktype="2"&gt;技术质量&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
   &lt;span style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;letter-spacing: 1px;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;a class="normal_text_link" target="_blank" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 0px;padding: 0px;outline: 0px;color: rgb(87, 107, 149);text-decoration: none;-webkit-user-drag: none;cursor: pointer;max-width: 100%;letter-spacing: 1px;box-sizing: border-box !important;overflow-wrap: break-word !important;" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" data-linktype="2"&gt;数据算法&lt;/a&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;p style="-webkit-tap-highlight-color: transparent;margin: 8px 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 24px;font-family: &amp;quot;PingFang SC&amp;quot;, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;section nodeleaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px 0px 24px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt; 
   &lt;mp-common-profile class="js_uneditable js_wx_tap_highlight" data-pluginname="mpprofile" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-index="0" data-from="2" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;amp;wxfrom=19" data-signature="大淘宝技术官方账号" data-id="MzAxNDEwNjk5OQ==" data-is_biz_ban="0" data-origin_num="835" data-biz_account_status="0" data-verify_status="2"&gt;&lt;/mp-common-profile&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;p style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;clear: both;min-height: 1em;color: rgba(0, 0, 0, 0.9);font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 17px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: 0.544px;orphans: 2;text-align: justify;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;white-space: normal;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;"&gt;&lt;span leaf="" style="-webkit-tap-highlight-color: transparent;margin: 0px;padding: 0px;outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section data-mpa-action-id="mbu73dnaxop" style="text-indent: 0px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"&gt; 
  &lt;span style="text-indent: 0px;text-align: justify;line-height: 1.75em;font-size: 15px;"&gt;&lt;span leaf="" style="font-size: 15px;"&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-action-id="mbu73dnaqvm"&gt; 
  &lt;span style="font-size: 14px;"&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section&gt; 
  &lt;span leaf=""&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style="display: none;"&gt; 
  &lt;mp-style-type data-value="3"&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color: #858585; font-size: 13px;"&gt;本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。&lt;br&gt;如有侵权，请联系 support@oschina.cn 删除。&lt;br&gt;本文参与「&lt;a href="https://www.oschina.net/sharing-plan" target="_blank"&gt;OSC 源创计划&lt;/a&gt;」，欢迎正在阅读的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4662964/blog/18627316</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/18627316</guid>
      <pubDate>Sun, 11 May 2025 03:08:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>MiniMax 发布视频生成大模型 Hailuo 02</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;MiniMax 宣布推出视频生成大模型 Hailuo 02，这个模型支持文生视频，图生视频，甚至添加人物照片作为索引来生成人物在其他场景内互动的视频。&lt;/p&gt; 
&lt;p&gt;MiniMax 放出的视频案例中，展现了喷火、钻火圈、连续后空翻、高空走钢丝等超高难度杂技动作。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1060" src="https://static.oschina.net/uploads/space/2025/0618/105105_xMFv_2720166.png" width="1048" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;具体来看，Hailuo 02 可以实现逼真物理效果、精确物体交互、流体动力学和自然的运动模式，甚至能复刻杂技表演。&lt;/p&gt; 
&lt;p&gt;在 Artificial Analysis Video Arena Leaderboard 最新排名中，在图像生视频类别下，Hailuo 02 目前与 Veo3、Seedance-1.0-pro 处于排行榜前三的位置。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1418" src="https://static.oschina.net/uploads/space/2025/0618/104927_qXcE_2720166.png" width="1598" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355933/minimax-hailuo-02</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355933/minimax-hailuo-02</guid>
      <pubDate>Sun, 11 May 2025 02:53:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>腾讯元宝电脑版上线 AI 编程模式</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;腾讯元宝于 6 月 17 日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FdzxRkhiptJ2xuc7iWeMwoQ" target="_blank"&gt;发布更新&lt;/a&gt;，正式上线 AI 编程模式。该功能已在元宝电脑版 2.25 版本中推出。&lt;/p&gt; 
&lt;p&gt;用户在电脑版选择 DeepSeek 模型并关闭深度思考后，输入「@AI 编程」后，即可通过双栏界面，在左侧对话生成代码，右侧实时展示并支持预览运行。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c7a712000aa674f9547c40f9e99b7a07ff8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;据介绍，除此前已支持直接运行 HTML 外，在腾讯云代码助手 CodeBuddy 的技术支持下，现在元宝还能在线运行 Python、Java、C++、JavaScript、Go、Fortran 等多种语言的在线运行，均无需部署环境。不仅元宝 DeepSeek-V3 模型支持双栏编程，其他模型也支持一句话写代码。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355926</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355926</guid>
      <pubDate>Sun, 11 May 2025 02:32:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌推出轻量级模型 Gemini 2.5 Flash-Lite</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;谷歌发文&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fgemini%2Fgemini-2-5-model-family-expands%2F" target="_blank"&gt;宣布&lt;/a&gt;，Gemini 2.5 Flash 和 Gemini 2.5 Pro 模型进入稳定阶段，同时推出全新轻量级模型 Gemini 2.5 Flash-Lite 预览版 —— "这是我们迄今为止最经济实惠、、速度最快的 2.5 模型"。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公告称，2.5 Flash Lite 在编码、数学、科学、推理和多模态基准测试中全面超越 2.0 Flash-Lite。它在翻译和分类等高容量、延迟敏感的任务中表现出色，在广泛的任务样本中，延迟低于 2.0 Flash-Lite 和 2.0 Flash。它具备 Gemini 2.5 的诸多实用功能，包括在不同预算下开启思维、连接 Google 搜索和代码执行等工具、多模态输入以及 100 万个 token 的上下文长度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;可&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstorage.googleapis.com%2Fdeepmind-media%2Fgemini%2Fgemini_v2_5_report.pdf" target="_blank"&gt;在最新的 Gemini 技术报告&lt;/a&gt;&lt;span style="color:#000000"&gt;中查看有关 2.5 系列型号的更多详细信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="550" src="https://oscimg.oschina.net/oscnet/up-9a697505bd2fc209bd5447bda5db3bcb55b.gif" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，Gemini 2.5 Flash-Lite 预览版已在 Google AI Studio 和 Vertex AI 中上线，同时还提供 2.5 Flash 和 Pro 稳定版。2.5 Flash 和 Pro 版本均可在 Gemini 应用中访问。谷歌方面还为 Google 搜索功能引入了 2.5 Flash-Lite 和 Flash 的定制版本。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355920/gemini-2-5-flash-lite</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355920/gemini-2-5-flash-lite</guid>
      <pubDate>Sun, 11 May 2025 02:10:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>smart-mqtt v1.2.0 已经发布，MQTT Broker 服务</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;smart-mqtt v1.2.0 已经发布，MQTT Broker 服务&lt;/p&gt;
&lt;p&gt;此版本更新内容包括：&lt;/p&gt;
&lt;h1&gt;smart-mqtt v1.2.0 正式发布&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;经过持续打磨与优化，我们很高兴地宣布 &lt;strong&gt;smart-mqtt v1.2.0&lt;/strong&gt; 正式发布！作为 Java 生态中最轻量级的 MQTT Broker 解决方案，本次版本聚焦于&lt;strong&gt;性能优化与资源管理增强&lt;/strong&gt;，进一步提升了系统在高并发场景下的稳定性与效率。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;核心更新亮点&lt;/h2&gt; 
&lt;h3&gt;✅ 性能与稳定性提升&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;strong&gt;异步 + 批处理机制&lt;/strong&gt;：优化指标数据入库流程，降低数据库写入压力。&lt;/li&gt; 
 &lt;li&gt; &lt;strong&gt;智能资源回收&lt;/strong&gt;：自动识别闲置 Topic 并释放内存资源；h2 数据库默认启用文件持久化模式，避免长期运行内存过高。&lt;/li&gt; 
 &lt;li&gt; &lt;strong&gt;订阅结构重构&lt;/strong&gt;：优化大规模 Topic 订阅场景下的处理效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✅ 功能优化与修复&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;修复 MqttClient 在特定情况下丢失 version 字段的问题&lt;/li&gt; 
 &lt;li&gt;规范 retain 消息实现逻辑&lt;/li&gt; 
 &lt;li&gt;改进启动日志输出体验&lt;/li&gt; 
 &lt;li&gt;增强新版本检测与压测工具重连功能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✅ 依赖精简&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;移除 &lt;code&gt;commons-lang&lt;/code&gt; 和 &lt;code&gt;slf4j&lt;/code&gt; 等第三方依赖包，减少潜在冲突，进一步减小发行包体积。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;组件升级&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;组件&lt;/th&gt; 
   &lt;th&gt;升级至版本&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;feat&lt;/td&gt; 
   &lt;td&gt;1.1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;smart-socket&lt;/td&gt; 
   &lt;td&gt;1.5.69&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;获取方式&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub 镜像地址：&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fsmartboot%2Fsmart-mqtt" target="_blank" rel="nofollow"&gt;https://github.com/smartboot/smart-mqtt&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt;Gitee 主仓库：&lt;a href="https://gitee.com/smartboot/smart-mqtt" target="_blank" rel="nofollow"&gt;https://gitee.com/smartboot/smart-mqtt&lt;/a&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;快速部署（Docker）&lt;/h2&gt; 
&lt;div class="markdown-code-block"&gt; 
 &lt;pre class="bash"&gt;&lt;code&gt;docker run --name smart-mqtt \
  -p 18083:18083 \
  -p 1883:1883 \
  -d smartboot/smart-mqtt:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;div class="markdown-code-block-copy-btn"&gt;&lt;/div&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web 控制枱访问地址：&lt;code&gt;http://localhost:18083&lt;/code&gt; &lt;/li&gt; 
 &lt;li&gt;MQTT 通信端口：&lt;code&gt;1883&lt;/code&gt; &lt;/li&gt; 
&lt;/ul&gt;
&lt;p&gt;详情查看：&lt;a href="https://gitee.com/smartboot/smart-mqtt/releases/v1.2.0" rel="nofollow"&gt;https://gitee.com/smartboot/smart-mqtt/releases/v1.2.0&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355918</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355918</guid>
      <pubDate>Sun, 11 May 2025 02:06:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>Mozilla Firefox 新增了固定和取消固定标签页的方法</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Mozilla Firefox 最近推出了一项备受期待的功能：垂直标签页。该功能于 2025 年 3 月作为 Firefox 136 更新的一部分推出。&lt;/p&gt; 
&lt;p&gt;现在，Mozilla 在其浏览器中推出了另一项备受欢迎的标签页管理改进，使用户能够更轻松地在 Firefox 中固定和取消固定标签页。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-93cb835b446a292e28f4b205592bd446ffe.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在最新的 Firefox Nightly 更新中，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1944907" target="_blank"&gt;Mozilla 引入了&lt;/a&gt;一种全新的标签页固定或取消固定方式：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;您只需将当前页面拖拽至另一个已固定的标签页即可将其固定，或将其拖拽出即可取消固定&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;就这么简单。新的逻辑适用于垂直和水平标签页视图，并且无需使用上下文菜单。唯一的前提条件是，您需要至少有一个已固定的标签页才能使用拖动功能。否则，您只能将标签页移动到标签页的任意位置。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0617/190024_Z6WI_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;很高兴看到 Firefox 为用户实现了这项小小的便利。然而，一些人认为它仍有改进空间。拖动标签页固然很酷，但专门的快捷方式或许能更好、更快捷地固定或取消固定标签页。不过，其他主流浏览器也缺乏这项功能。&lt;/p&gt; 
&lt;p&gt;改进的标签页固定功能现已在 Firefox Nightly 中推出，这是最不稳定的更新渠道。Mozilla 使用它来测试早期更改和重大平台变更，这些变更可能存在错误、不稳定或破坏功能。&lt;/p&gt; 
&lt;p&gt;因此，将 Nightly 版本作为您的主浏览器可能不是一个好主意。不过，您可以同时运行 Firefox Nightly 和其他渠道进行测试。如果您感兴趣，可以通过此链接从官方网站获取。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355850</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355850</guid>
      <pubDate>Sat, 10 May 2025 11:00:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 与美国国防部签署 2 亿美元合同</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 宣布与美国国防部达成了一项重磅合作，获得了一份价值 2 亿美元的为期一年的合同。这项合同旨在为国防部开发先进的人工智能工具，帮助应对一系列国家安全挑战。五角大楼在声明中指出，这项工作将主要在华盛顿及其周边地区进行，预计将于 2026 年 7 月完成。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;这是 OpenAI&lt;span&gt;首次&lt;/span&gt;与美国国防部签署合同，标志着其在国家安全领域的深入布局。随着全球安全形势的不断变化，人工智能技术在军事和安全领域的应用愈发重要。五角大楼表示，OpenAI 将致力于开发前沿的 AI 原型，以应对作战和企业领域的关键挑战。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="233" src="https://oscimg.oschina.net/oscnet/up-bd93bf619f02cc812ac5e03db9d4a666430.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;值得一提的是，初创公司 Anduril 去年底也获得了一项 1 亿美元的国防合同，而 OpenAI 的竞争对手 Anthropic 则在与 Palantir 和亚马逊合作，提供其 AI 模型给美国的国防和情报机构。此外，OpenAI 去年曾与 Anduril 合作，专注于提升反无人机系统的能力，以应对空中威胁。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 的联合创始人兼首席执行官 Sam Altman 在一次关于 AI 与国家安全的峰会上表示，他们希望能够积极参与国家安全领域的发展。尽管这次合同金额不算庞大，但在 OpenAI 年化收入已经飙升至 100 亿美元的背景下，这项合作仍然意义深远。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;今年 3 月，OpenAI 还宣布了新一轮融资计划，软银集团领投，融资额预计达到 400 亿美元，投后估值将达 3000 亿美元。而截至 3 月底，OpenAI 的每周活跃用户数已达到 5 亿。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355848</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355848</guid>
      <pubDate>Sat, 10 May 2025 10:16:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>SCALE 正式开源：一个面向专业级任务的大语言模型 SQL 能力评测框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;随着大语言模型（LLM）在数据科学领域的应用日益广泛，学术界和工业界涌现出多种评测基准。然而，我们观察到，现有评测体系大多聚焦于&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Text-to-SQL&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的转换准确率，而这远不能全面反映模型在真实、复杂场景下的 SQL 处理能力。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;为了弥补这一关键空白，我们经过深入研究，提出了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;SCALE ------ 一个面向专业级任务的大语言模型 SQL 能力开源评测框架&lt;/strong&gt;。我们致力于通过开放、透明和社区驱动的方式，建立一个行业公认的评估标准。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="https://sql-llm-leaderboard.com/" src="https://oscimg.oschina.net/oscnet/up-d8de9745f7ddaa54f1659f6175dcbe78d5b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;背景：现有 LLM-SQL 评测的局限性&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;近年来，大语言模型处理结构化查询语言（SQL）的能力取得了长足进步。一系列公开的评测基准（Benchmark）也应运而生，它们在很大程度上推动了模型在 Text-to-SQL 任务上的发展。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;尽管如此，我们发现现有的评测体系仍存在显著的局限性。在专业的数据库管理和软件开发实践中，开发者面临的挑战远比 "将一句话转为 SQL" 要复杂得多：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;性能是生命线&lt;/strong&gt;：一个能返回正确结果但执行耗时数分钟的查询，在生产环境中是不可接受的。现有评测很少关注模型生成 SQL 的性能和效率。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;环境是多样的&lt;/strong&gt;：数据库迁移和跨平台适配是常见需求。但模型能否精准处理不同数据库（如 MySQL，Oracle，PostgreSQL）之间的 "方言" 差异，现有评测也鲜有涉及。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;理解是深度的&lt;/strong&gt;：维护、审查和重构遗留代码是开发者的日常。这要求模型不仅能 "写" 代码，更能深度 "理解" 代码的逻辑、意图和潜在风险。这一点同样是当前评测的薄弱环节。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;现有评测的单一视角，使得开发者和决策者在面对真实、复杂的业务需求时，难以选择出真正合适的模型。&lt;/p&gt; 
&lt;h2&gt;我们的解决方案：SCALE 评测框架&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;为了系统性地解决上述问题，我们设计并实现了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;SCALE&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(SQL Capability Leaderboard for LLMs)&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;大模型 SQL 能力排行榜&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;SCALE&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;并非对现有评测的简单复现，而是一个从数据库专家和资深开发者真实工作流出发，构建的全新、完全开源的评测框架。我们相信，只有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;开放源代码、开放数据、开放方法&lt;/strong&gt;，才能建立最广泛的行业信任。&lt;/p&gt; 
&lt;h2&gt;评测基石：一个高质量、多层次的数据集&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;一个评测框架的公信力，源于其评测数据的质量与广度。为此，我们构建了一个高质量、多层次、贴近真实世界的数据集，并将其向社区完全开放。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;真实世界案例&lt;/strong&gt;：我们收集并脱敏了来自不同行业的真实查询案例。这些案例作为数据集的基础，确保了评测内容与生产环境的实际挑战保持一致。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;AI 辅助的典型场景构造&lt;/strong&gt;：为提升测试集的覆盖深度，我们针对容易引发逻辑错误或性能问题的复杂场景，如子查询、多表连接、嵌套查询、存储过程等，利用 AI 辅助构造了大量细粒度的测试用例，旨在精准评估模型在处理复杂查询时的逻辑稳健性与准确性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;评分权重设计&lt;/strong&gt;：为区分不同任务的复杂度，我们为测试用例设置了不同的评分权重。通常，技术复杂度更高的用例会获得更高的权重。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;答案验证&lt;/strong&gt;：所有测试用例的参考答案均经过交叉验证，以确保其准确性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;三大核心评测维度&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;基于这一强大的数据集，SCALE 通过三个相互独立的核心维度，深入考察模型在处理高价值、高复杂度 SQL 任务时的真实水平。&lt;/p&gt; 
&lt;h3&gt;⚡ SQL 优化能力 (SQL Optimization)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;研究问题&lt;/strong&gt;：模型是否具备数据库专家（DBA）的性能优化意识？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;评估方法&lt;/strong&gt;：我们为模型提供一系列典型的低性能查询，评估其能否在保证逻辑等价的前提下，改写出性能更优的版本。评测指标不仅包含语法正确性，更引入了对优化规则复杂度的量化评估，以衡量其优化策略的优劣。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：当您需要进行数据库性能调优或代码重构时，此维度的评测结果将为您提供关键参考。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔄 方言转换能力 (Dialect Conversion)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;研究问题&lt;/strong&gt;：模型能否成为一个可靠的、跨数据库平台的 "代码翻译官"？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;评估方法&lt;/strong&gt;：我们评估模型在多种主流数据库 "方言" 之间进行转换的逻辑保真度与语法准确性，确保其转换结果是 "开箱即用" 且完全可靠的。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;应用场景&lt;/strong&gt;：对于面临数据库迁移、构建跨平台数据中台等挑战的团队，此维度的领先模型是首选。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📊 SQL 理解能力 (SQL Understanding)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;研究问题&lt;/strong&gt;： 除了写代码，模型对 SQL 的理解有多深？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;评估方法&lt;/strong&gt;： 我们从执行结果准确性、语法错误识别、执行计划分析、查询类型判断等多个角度，全面考察模型对 SQL 代码的深度分析能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;应用场景&lt;/strong&gt;： 在进行代码审查（Code Review）、遗留系统维护、自动化代码分析等工作中，此维度的评测结果能帮您找到最 "懂"SQL 的 AI 助手。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SCALE 的价值与应用&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们相信，一个严谨、贴近实践的评测框架，能为不同角色的专业人士创造价值：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;对于数据与软件开发人员&lt;/strong&gt;：提升开发效率，保障交付质量。SCALE 能帮您快速找到最称手的 AI 工具，处理优化、迁移、代码审查等专业任务，将宝贵的精力聚焦于更有创造性的工作上。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;对于 AI 研究员与模型开发者&lt;/strong&gt;：精准定位座标，指明迭代方向。SCALE 透明的评测方法和开源的数据集，能清晰揭示您模型在专业 SQL 任务上的长处与短板，为下一阶段的优化和训练提供明确的、可量化的目标。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;对于企业 CTO 与技术决策者&lt;/strong&gt;：降低技术风险，驱动业务创新。基于 SCALE 客观、中立的数据做出技术选型，能确保您为企业引入的 AI 能力是真正可靠、高效的，从而赋能团队，构建更健壮的数据基础设施。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;结论与展望&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;我们推出 SCALE，旨在为社区提供一个更专业、更深入、更贴近真实需求的 LLM SQL 能力评估标准。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;作为一个开源项目，我们深知社区的力量是其生命力的源泉&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;。 我们不仅发布评测结果，更开放所有评测脚本、数据集和方法论。我们诚挚地邀请您探索 SCALE 的评测结果，利用这一工具为您的研究和工作做出更精准的技术判断。更重要的是，我们欢迎您&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;加入我们的社区&lt;/strong&gt;，贡献代码、提交测试用例或提出宝贵建议。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;让我们一同完善 SCALE 的评测体系，共同推动大语言模型在数据库领域的应用走向新的深度。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;探索 SCALE 实时排行榜 -&amp;gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsql-llm-leaderboard.com%2F" target="_blank"&gt;https://sql-llm-leaderboard.com/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;了解评测方法与技术细节 -&amp;gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Factiontech%2Fsql-llm-benchmark" target="_blank"&gt;https://github.com/actiontech/sql-llm-benchmark&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;SCALE：为专业 SQL 任务，选专业 AI 模型。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;更多技术文章，请访问：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.actionsky.com%2F" target="_blank"&gt;https://opensource.actionsky.com/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355838</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355838</guid>
      <pubDate>Sat, 10 May 2025 09:32:00 GMT</pubDate>
      <author>来源: 投稿</author>
    </item>
    <item>
      <title>GC-QA-RAG —— 检索增强生成系统</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;GC-QA-RAG 是一款面向葡萄城产品生态（包括&lt;a href="https://www.grapecity.com.cn/solutions/huozige"&gt; 活字格&lt;/a&gt;、&lt;a href="https://www.grapecity.com.cn/solutions/wyn"&gt;WYN&lt;/a&gt;、&lt;a href="https://www.grapecity.com.cn/developer/spreadjs"&gt;SpreadJS &lt;/a&gt;和 &lt;a href="https://www.grapecity.com.cn/developer/grapecitydocuments/excel-java"&gt;GCExcel&lt;/a&gt; 等）的检索增强生成（RAG）系统。该系统通过智能文档处理、高效知识检索、精准问答等功能，有效提升了知识管理效率和用户支持体验。&lt;/p&gt;

&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;本系统创新性地采用了 QA 预生成技术，克服了传统文本切片方法在知识库构建中的若干局限性。经过实践验证，该技术方案能够显著提升检索效果，可为 RAG 领域的技术实践提供新的思路。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;对于初学者，我们提供了详细的入门指南，帮助您快速掌握 QA-RAG 系统的构建方法&lt;/li&gt;
&lt;li&gt;对于面临传统架构挑战的开发者，我们的架构设计文档可为您提供参考，助力现有知识库的优化升级&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;本项目也分享了葡萄城在 RAG 知识库产品设计方面的实践经验，希望能为相关领域的产品和技术探索提供有益参考。&lt;/p&gt;

&lt;p&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-322e0ef8752e9e5c72130b47ce44ff2d09a.png" width="802" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/gc-qa-rag</link>
      <guid isPermaLink="false">https://www.oschina.net/p/gc-qa-rag</guid>
      <pubDate>Sat, 10 May 2025 09:26:00 GMT</pubDate>
    </item>
    <item>
      <title>静态类型函数式编程语言 —— Darklang 宣布开源</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Dark Inc 成立于 2017 年，专注于开发一种名为 Darklang 的静态类型函数式编程语言，为云原生应用开发而生，支持构建复杂应用系统，旨在简化后端编码。&lt;/p&gt; 
&lt;p&gt;然而，公司发展并不顺利，最终资金耗尽。为了确保用户和粉丝能够继续使用 Darklang，以及继续发展这一重要技术，Dark Inc 决定将其资产，包括 Darklang 语言、博客、托管服务、Discord 等，&lt;strong&gt;出售给由前员工创立的新公司 Darklang Inc&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0617/154855_nfp3_2720166.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Darklang 新公司创始人 Stachu Korick 宣布该项目现已开源，下文是官方开源公告的翻译：&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;作为 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.darklang.com%2Fgoodbye-dark-inc-welcome-darklang-inc%2F" target="_blank"&gt;关闭 Dark Inc.&lt;/a&gt; 和 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.darklang.com%2Ffirst-steps-of-darklang-inc%2F" target="_blank"&gt;成立 Darklang Inc.&lt;/a&gt; 的一部分，我们终于开源了所有仓库。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdarklang%3Fref%3Dblog.darklang.com" target="_blank"&gt;我们的源代码&lt;/a&gt; 现在已采用 Apache License 2.0。&lt;/p&gt; 
&lt;p&gt;多年来，我们一直在思考可持续性问题以及如何构建真正赋能开发者的工具。我们一直从哲学上支持开源，但认为 Darklang 的独特架构和商业模式需要不同的方法。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;为何我们最初选择源代码可用 (&lt;/strong&gt;Source-Available&lt;strong&gt;)&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;我们最初设计 Darklang 为一个仅托管的平台，您在 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdarklang.com" target="_blank"&gt;darklang.com&lt;/a&gt; 编写代码，程序会立即在生产环境中上线。我们认为这种集中的方式对于安全的代码迁移和统一部署等特性是必要的，而提供自托管选项会损害我们的可持续性模式。&lt;/p&gt; 
&lt;p&gt;核心挑战是构建有价值的东西，同时确保能够长期持续开发。传统的开源资金模式都有局限性，因此 Darklang 被设计为「一种具有商业模式的语言」——那些有大量工作负载的用户将通过我们的托管平台资助生态系统的发展。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;是什么改变了我们的思考&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;有三个关键转变改变了我们的观点：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;产品成熟度和用户反馈&lt;/strong&gt;：Darklang 采用的真正障碍从来不是许可问题，而是产品成熟度。随着我们越来越接近构建人们喜爱的东西，保持源码可用性开始感觉像不必要的风险。我们一直听到人们希望我们更加开放。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;面向本地优先开发&lt;/strong&gt;：我们的技术方向发生了显著变化。我们现在正在构建 Darklang，使其作为 CLI 在本地运行，并能够部署到我们的云或其他地方。没有人希望在自己的机器上运行专有语言的二进制文件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;新的商业机会&lt;/strong&gt;：自 2017 年以来，开发工具市场已经成熟。我们现在看到成功的公司对团队协作功能和 AI 驱动的工具进行收费，同时保持核心平台的可访问性。这些功能创造了团队愿意支付的附加值，同时始终保留自行托管的选项。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;为何开源&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;开源使 Darklang 具备可访问性、可检查性和社区所有。这与我们普及编程的哲学一致，并确保平台无论哪家公司命运如何都能持续发展和演变。&lt;/p&gt; 
&lt;p&gt;我们已经学会在不依赖我们特定编辑器或托管环境的情况下，提供 Darklang 的关键优势——无形的基础设施、无部署部署、基于追踪的开发。这使开源成为可能，同时保留了 Darklang 的独特之处。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;开放性问题&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;我们仍在探索 Darklang 生态系统中关于许可的一些有趣技术挑战。GitHub 通过附加 LICENSE.md 文件来处理这个问题，但在一个包管理器可以直接同步类型和函数的世界里，有一些值得深入思考的有趣挑战。核心平台是开源的，这为我们提供了一个坚实的基础来构建。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;原文：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.darklang.com%2Fdarklang-goes-open-source%2F" target="_blank"&gt;https://blog.darklang.com/darklang-goes-open-source/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355813/darklang-goes-open-source</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355813/darklang-goes-open-source</guid>
      <pubDate>Sat, 10 May 2025 07:49:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>工作中对 InheritableThreadLocal 使用的思考</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;代码评审时，发现在线程池中使用 InheritableThreadLocal 上下文会使其中的线程变量失效，无法获取到预期的变量值，所以对问题进行了覆盘和总结。&lt;/p&gt; 
  &lt;span id="OSC_h2_1"&gt;&lt;/span&gt; 
  &lt;h2&gt;1. 先说结论&lt;/h2&gt; 
  &lt;p&gt;&lt;code&gt;InheritableThreadLocal&lt;/code&gt; 只有在父线程&lt;strong&gt;创建&lt;/strong&gt;子线程时，在子线程中才能获取到父线程中的线程变量；当配合线程池使用时：&lt;strong&gt;「第一次在线程池中开启线程，能在子线程中获取到父线程的线程变量，而当该子线程开启之后，发生线程复用，该子线程仍然保留的是之前开启它的父线程的线程变量，而无法获取当前父线程中新的线程变量」&lt;/strong&gt;，所以会发生获取线程变量错误的情况。&lt;/p&gt; 
  &lt;span id="OSC_h2_2"&gt;&lt;/span&gt; 
  &lt;h2&gt;2. 实验例子&lt;/h2&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;创建一个线程数固定为 1 的线程池，先在 main 线程中存入&lt;code&gt;变量 1&lt;/code&gt;，并使用线程池开启新的线程打印输出线程变量，之后更改 main 线程的线程变量为&lt;code&gt;变量 2&lt;/code&gt;，再使用线程池中线程（发生线程复用）打印输出线程变量，对比两次输出的值是否不同&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;/**
 * 测试线程池下 InheritableThreadLocal 线程变量失效的场景
 */&lt;/span&gt;
&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;TestInheritableThreadLocal&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;InheritableThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; threadLocal &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;InheritableThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;// 固定大小的线程池，保证线程复用&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;ExecutorService&lt;/span&gt; executorService &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Executors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;newFixedThreadPool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; args&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;"main 线程，变量 1"&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;// 正常取到 main 线程，变量 1&lt;/span&gt;
        executorService&lt;span&gt;.&lt;/span&gt;&lt;span&gt;execute&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;-&amp;gt;&lt;/span&gt; &lt;span&gt;System&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;out&lt;span&gt;.&lt;/span&gt;&lt;span&gt;println&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

        threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;"main 线程，变量 2"&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;// 线程复用再取还是 main 线程，变量 1&lt;/span&gt;
        executorService&lt;span&gt;.&lt;/span&gt;&lt;span&gt;execute&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;-&amp;gt;&lt;/span&gt; &lt;span&gt;System&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;out&lt;span&gt;.&lt;/span&gt;&lt;span&gt;println&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;输出结果:&lt;/p&gt; 
   &lt;br&gt; main 线程，变量 1 
   &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
   &lt;br&gt; main 线程，变量 1 
   &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;p&gt;发现两次输出结果值相同，证明发生线程复用时，&lt;strong&gt;子线程获取父线程变量失效&lt;/strong&gt;&lt;/p&gt; 
  &lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
  &lt;h2&gt;3. 详解&lt;/h2&gt; 
  &lt;span id="OSC_h3_4"&gt;&lt;/span&gt; 
  &lt;h3&gt;3.1 JavaDoc&lt;/h3&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;This class extends ThreadLocal to provide inheritance of values from parent thread to child thread: when a child thread is created, the child receives initial values for all inheritable thread-local variables for which the parent has values. Normally the child's values will be identical to the parent's; however, the child's value can be made an arbitrary function of the parent's by overriding the childValue method in this class.&lt;br&gt; Inheritable thread-local variables are used in preference to ordinary thread-local variables when the per-thread-attribute being maintained in the variable (e.g., User ID, Transaction ID) must be automatically transmitted to any child threads that are created.&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;code&gt;InheritableThreadLocal&lt;/code&gt; 继承了 &lt;code&gt;ThreadLocal&lt;/code&gt;, 以能够让子线程能够从父线程中继承线程变量: 当一个子线程&lt;code&gt;被创建&lt;/code&gt;时，它会接收到父线程中所有可继承的变量。通常情况下，子线程和父线程中的线程变量是完全相同的，但是可以通过重写 &lt;code&gt;childValue&lt;/code&gt; 方法来使父子线程中的值不同。&lt;/p&gt; 
   &lt;br&gt; 当线程中维护的变量如 UserId, TransactionId 等必须自动传递到 
   &lt;strong&gt;新创建的任何子线程&lt;/strong&gt;时，使用 
   &lt;code&gt;InheritableThreadLocal&lt;/code&gt;要优于 
   &lt;code&gt;ThreadLocal&lt;/code&gt; 
   &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;span id="OSC_h3_5"&gt;&lt;/span&gt; 
  &lt;h3&gt;3.2 源码&lt;/h3&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;InheritableThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;T&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;extends&lt;/span&gt; &lt;span&gt;ThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;T&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;/**
     * 当子线程被创建时，通过该方法来初始化子线程中线程变量的值，
     * 这个方法在父线程中被调用，并且在子线程开启之前。
     * 
     * 通过重写这个方法可以改变从父线程中继承过来的值。
     *
     * @param parentValue the parent thread's value
     * @return the child thread's initial value
     */&lt;/span&gt;
    &lt;span&gt;protected&lt;/span&gt; &lt;span&gt;T&lt;/span&gt; &lt;span&gt;childValue&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;T&lt;/span&gt; parentValue&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;return&lt;/span&gt; parentValue&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;

    &lt;span&gt;ThreadLocalMap&lt;/span&gt; &lt;span&gt;getMap&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Thread&lt;/span&gt; t&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
       &lt;span&gt;return&lt;/span&gt; t&lt;span&gt;.&lt;/span&gt;inheritableThreadLocals&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;

    &lt;span&gt;void&lt;/span&gt; &lt;span&gt;createMap&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;Thread&lt;/span&gt; t&lt;span&gt;,&lt;/span&gt; &lt;span&gt;T&lt;/span&gt; firstValue&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        t&lt;span&gt;.&lt;/span&gt;inheritableThreadLocals &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;ThreadLocalMap&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;this&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; firstValue&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;其中&lt;code&gt;childValue&lt;/code&gt;方法来获取父线程中的线程变量的值，也可通过重写这个方法来将获取到的线程变量的值进行修改。&lt;/p&gt; 
  &lt;p&gt;在&lt;code&gt;getMap&lt;/code&gt;方法和&lt;code&gt;createMap&lt;/code&gt;方法中，可以发现&lt;code&gt;inheritableThreadLocals&lt;/code&gt;变量，它是 &lt;code&gt;ThreadLocalMap&lt;/code&gt;，在&lt;code&gt;Thread 类&lt;/code&gt;中&lt;/p&gt; 
  &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//8a5c46d2c14c4bd1ce6d1e980efe3e77.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;span id="OSC_h4_6"&gt;&lt;/span&gt; 
  &lt;h4&gt;3.2.1 childValue 方法&lt;/h4&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;开启新线程时，会调用 Thread 的构造方法&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;pre&gt;&lt;code&gt;    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;Thread&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;ThreadGroup&lt;/span&gt; group&lt;span&gt;,&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; name&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;init&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;group&lt;span&gt;,&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;,&lt;/span&gt; name&lt;span&gt;,&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;沿着构造方法向下，找到&lt;code&gt;init&lt;/code&gt;方法的最终实现，其中有如下逻辑：&lt;strong&gt;为当前线程创建线程变量以继承父线程中的线程变量&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;/**
 * @param inheritThreadLocals 为 ture，代表是为，包含可继承的线程变量，的线程进行初始化
 */&lt;/span&gt;
&lt;span&gt;private&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;init&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;ThreadGroup&lt;/span&gt; g&lt;span&gt;,&lt;/span&gt; &lt;span&gt;Runnable&lt;/span&gt; target&lt;span&gt;,&lt;/span&gt; &lt;span&gt;String&lt;/span&gt; name&lt;span&gt;,&lt;/span&gt;
                  &lt;span&gt;long&lt;/span&gt; stackSize&lt;span&gt;,&lt;/span&gt; &lt;span&gt;AccessControlContext&lt;/span&gt; acc&lt;span&gt;,&lt;/span&gt;
                  &lt;span&gt;boolean&lt;/span&gt; inheritThreadLocals&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;.&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;
  
    &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;inheritThreadLocals &lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt; parent&lt;span&gt;.&lt;/span&gt;inheritableThreadLocals &lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
        &lt;span&gt;// 注意这里创建子线程的线程变量&lt;/span&gt;
        &lt;span&gt;this&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;inheritableThreadLocals &lt;span&gt;=&lt;/span&gt;
            &lt;span&gt;ThreadLocal&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;createInheritedMap&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;parent&lt;span&gt;.&lt;/span&gt;inheritableThreadLocals&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    
    &lt;span&gt;.&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;
    
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;ThreadLocal.createInheritedMap(parent.inheritableThreadLocals)&lt;/code&gt;创建子线程 &lt;code&gt;InheritedMap&lt;/code&gt; 的具体实现&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;code&gt;createInheritedMap&lt;/code&gt; 方法，最终会调用到 &lt;code&gt;ThreadLocalMap&lt;/code&gt; 的&lt;strong&gt;私有构造方法&lt;/strong&gt;，传入的参数 parentMap 即为&lt;strong&gt;父线程中保存的线程变量&lt;/strong&gt;&lt;/p&gt; 
  &lt;pre&gt;&lt;code&gt;    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;ThreadLocalMap&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;ThreadLocalMap&lt;/span&gt; parentMap&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;Entry&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; parentTable &lt;span&gt;=&lt;/span&gt; parentMap&lt;span&gt;.&lt;/span&gt;table&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;int&lt;/span&gt; len &lt;span&gt;=&lt;/span&gt; parentTable&lt;span&gt;.&lt;/span&gt;length&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;setThreshold&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;len&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        table &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Entry&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;len&lt;span&gt;]&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

        &lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;int&lt;/span&gt; j &lt;span&gt;=&lt;/span&gt; &lt;span&gt;0&lt;/span&gt;&lt;span&gt;;&lt;/span&gt; j &lt;span&gt;&amp;lt;&lt;/span&gt; len&lt;span&gt;;&lt;/span&gt; j&lt;span&gt;++&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
            &lt;span&gt;Entry&lt;/span&gt; e &lt;span&gt;=&lt;/span&gt; parentTable&lt;span&gt;[&lt;/span&gt;j&lt;span&gt;]&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
            &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;e &lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
                &lt;span&gt;@SuppressWarnings&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;"unchecked"&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
                &lt;span&gt;ThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Object&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; key &lt;span&gt;=&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;&lt;span&gt;ThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;Object&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; e&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
                &lt;span&gt;if&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;key &lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
                    &lt;span&gt;// 注意！！！ 这里调用了 childValue 方法&lt;/span&gt;
                    &lt;span&gt;Object&lt;/span&gt; value &lt;span&gt;=&lt;/span&gt; key&lt;span&gt;.&lt;/span&gt;&lt;span&gt;childValue&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;e&lt;span&gt;.&lt;/span&gt;value&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
                    &lt;span&gt;Entry&lt;/span&gt; c &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;Entry&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;key&lt;span&gt;,&lt;/span&gt; value&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
                    &lt;span&gt;int&lt;/span&gt; h &lt;span&gt;=&lt;/span&gt; key&lt;span&gt;.&lt;/span&gt;threadLocalHashCode &lt;span&gt;&amp;amp;&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;len &lt;span&gt;-&lt;/span&gt; &lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
                    &lt;span&gt;while&lt;/span&gt; &lt;span&gt;(&lt;/span&gt;table&lt;span&gt;[&lt;/span&gt;h&lt;span&gt;]&lt;/span&gt; &lt;span&gt;!=&lt;/span&gt; &lt;span&gt;null&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;
                        h &lt;span&gt;=&lt;/span&gt; &lt;span&gt;nextIndex&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;h&lt;span&gt;,&lt;/span&gt; len&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
                    table&lt;span&gt;[&lt;/span&gt;h&lt;span&gt;]&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; c&lt;span&gt;;&lt;/span&gt;
                    size&lt;span&gt;++&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
                &lt;span&gt;}&lt;/span&gt;
            &lt;span&gt;}&lt;/span&gt;
        &lt;span&gt;}&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;p&gt;这个方法会对父线程中的线程变量做&lt;strong&gt;拷贝&lt;/strong&gt;，其中调用了&lt;code&gt;childValue&lt;/code&gt;方法来获取/初始化子线程中的值，并保存到子线程中&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;由上可见，可继承的线程变量&lt;strong&gt;只是&lt;/strong&gt;在线程&lt;strong&gt;被创建的时候&lt;/strong&gt;进行了初始化工作，这也就能解释为什么在线程池中发生线程复用时不能获取到父线程线程变量的原因&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;span id="OSC_h2_7"&gt;&lt;/span&gt; 
  &lt;h2&gt;4. 实验例子流程图&lt;/h2&gt; 
  &lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//13978e8555584a0539f17ca79e19b1f5.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;main 线程&lt;code&gt;set main 线程，变量 1&lt;/code&gt;时，会调用到&lt;code&gt;InheritableThreadLocal&lt;/code&gt;的 &lt;code&gt;createMap&lt;/code&gt;方法，创建 &lt;code&gt;inheritableThreadLocals&lt;/code&gt; 并保存线程变量&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;开启子线程 1 时，会拷贝父线程中的线程变量到子线程中，如图示&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;main 线程&lt;code&gt;set main 线程，变量 2&lt;/code&gt;，会覆盖主线程中之前 set 的 mian 线程变量 1&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;最后发生线程复用，子线程 1 无法获取到 main 线程新 set 的值，仍然打印 main 线程，变量 1&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
  &lt;h2&gt;5. 解决方案: TransmittableThreadLocal&lt;/h2&gt; 
  &lt;p&gt;使用阿里巴巴 &lt;code&gt;TransmittableThreadLocal&lt;/code&gt; 能解决&lt;strong&gt;线程变量线程封闭&lt;/strong&gt;的问题，测试用例如下，在线程池提交任务时调用&lt;code&gt;TtlRunnable&lt;/code&gt;的&lt;code&gt;get&lt;/code&gt;方法来完成线程变量传递&lt;/p&gt; 
  &lt;pre&gt;&lt;code&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;class&lt;/span&gt; &lt;span&gt;TestInheritableThreadLocal&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;

    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;TransmittableThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt; threadLocal &lt;span&gt;=&lt;/span&gt; &lt;span&gt;new&lt;/span&gt; &lt;span&gt;TransmittableThreadLocal&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;&lt;/span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;// 固定大小的线程池，保证线程复用&lt;/span&gt;
    &lt;span&gt;private&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;final&lt;/span&gt; &lt;span&gt;ExecutorService&lt;/span&gt; executorService &lt;span&gt;=&lt;/span&gt; &lt;span&gt;Executors&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;newFixedThreadPool&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

    &lt;span&gt;public&lt;/span&gt; &lt;span&gt;static&lt;/span&gt; &lt;span&gt;void&lt;/span&gt; &lt;span&gt;main&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;String&lt;/span&gt;&lt;span&gt;[&lt;/span&gt;&lt;span&gt;]&lt;/span&gt; args&lt;span&gt;)&lt;/span&gt; &lt;span&gt;{&lt;/span&gt;
        threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;"main 线程，变量 1"&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;// 正常取到 main 线程，变量 1&lt;/span&gt;
        executorService&lt;span&gt;.&lt;/span&gt;&lt;span&gt;execute&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;-&amp;gt;&lt;/span&gt; &lt;span&gt;System&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;out&lt;span&gt;.&lt;/span&gt;&lt;span&gt;println&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

        threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;set&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;"main 线程，变量 2"&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
        &lt;span&gt;// 使用 TransmittableThreadLocal 解决问题&lt;/span&gt;
        executorService&lt;span&gt;.&lt;/span&gt;&lt;span&gt;execute&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;TtlRunnable&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; &lt;span&gt;-&amp;gt;&lt;/span&gt; &lt;span&gt;System&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;out&lt;span&gt;.&lt;/span&gt;&lt;span&gt;println&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;threadLocal&lt;span&gt;.&lt;/span&gt;&lt;span&gt;get&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;

        executorService&lt;span&gt;.&lt;/span&gt;&lt;span&gt;shutdown&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;;&lt;/span&gt;
    &lt;span&gt;}&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;输出结果:&lt;br&gt; main 线程，变量 1&lt;br&gt; main 线程，变量 2&lt;/p&gt; 
  &lt;/blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;注意：对象类型需要注意线程安全问题&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;具体用法参考 https://github.com/alibaba/transmittable-thread-local&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;hr&gt; 
  &lt;p&gt;&lt;strong&gt;That's all.&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18626652</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18626652</guid>
      <pubDate>Sat, 10 May 2025 07:45:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>苹果内置终端应用在 macOS Tahoe 迎来「彩色」视觉设计更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;苹果内置的终端应用在 macOS Tahoe 中得到了视觉上的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.macrumors.com%2F2025%2F06%2F16%2Fapples-terminal-app-macos-tahoe%2F" target="_blank"&gt;更新&lt;/a&gt;，这是该命令行工具亮相以来首次显著的设计更新。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-6fcee60476e7476c2925193298f46bc5185.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根据苹果在 WWDC25 上的平台现状演示，更新后的终端将支持 24 位色彩和 Powerline 字体。该应用还将采用全新的 Liquid Glass 美学设计，并重新设计主题，以配合 macOS 26 更广泛的视觉改进。&lt;/p&gt; 
&lt;p&gt;虽然终端应用已经提供了各种颜色配置文件，但 macOS 26 版本承诺提供增强的自定义选项，以更具视觉吸引力的方式显示系统信息。&lt;/p&gt; 
&lt;p&gt;这是一个早就应该进行的现代化应用程序，对于开发人员和高级用户来说至关重要，因为它在二十多年来基本保持不变。&lt;/p&gt; 
&lt;p&gt;macOS Tahoe 将于今年秋季推出，开发者测试版现已发布，第一个公开测试版预计将于 7 月发布。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/355809/apples-terminal-app-macos-tahoe</link>
      <guid isPermaLink="false">https://www.oschina.net/news/355809/apples-terminal-app-macos-tahoe</guid>
      <pubDate>Sat, 10 May 2025 07:24:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
