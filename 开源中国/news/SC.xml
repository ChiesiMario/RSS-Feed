<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 简体中文</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已对该 RSS 进行格式化操作：中英字符之间插入空格、使用直角引号、标点符号修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 25 Aug 2025 02:43:48 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>苹果考虑使用谷歌 Gemini 为新版 Siri 构建定制 AI 模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;彭博社记者 Mark Gurman&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-08-22%2Fapple-explores-using-google-gemini-ai-to-power-revamped-siri"&gt;报道称&lt;/a&gt;，苹果正在与谷歌开展早期讨论，考虑基于谷歌 Gemini 构建定制 AI 模型并在 Siri 中使用。苹果还在同步权衡各种选择，尚未确定是使用内部模型还是与第三方合作。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0825/103801_5VvN_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;报道指出，谷歌已经开始训练一个可以在苹果服务器上运行的模型。今年早些时候，苹果还曾探索与 Anthropic 或 OpenAI 合作，评估 Claude 或 ChatGPT 是否能成为 Siri 的 「新大脑」。&lt;/p&gt; 
&lt;p&gt;目前，苹果还需要几周时间才能决定是继续使用内部模型的 Siri，还是转向合作伙伴。同时，苹果还没有确定这个合作伙伴是谁。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368256</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368256</guid>
      <pubDate>Mon, 25 Aug 2025 02:41:47 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>jsoup 1.21.2 发布，Java HTML 解析器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;jsoup 1.21.2 现已发布，&lt;span style="color:#192943"&gt;新增了对 HTTP/2 连接中自定义&lt;code&gt;SSLContext&lt;/code&gt;的支持，并提升了属性中用户数据处理方式的一致性。此外，它还提升了 DOM 操作和片段解析的性能，并修复了流解析、遍历、克隆和并发读取中的一些边缘情况。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;变化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;已弃用的内部（但可见）方法&lt;code&gt;Normalizer#normalize(String, bool)&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttribute.html%23shouldCollapseAttribute%28org.jsoup.nodes.Document.OutputSettings%29" target="_blank"&gt;Attribute#shouldCollapseAttribute(Document.OutputSettings)&lt;/a&gt;&lt;/code&gt;。这些将在未来的版本中删除。&lt;/li&gt; 
 &lt;li&gt;已弃用&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23sslSocketFactory%28javax.net.ssl.SSLSocketFactory%29" target="_blank"&gt;Connection#sslSocketFactory(SSLSocketFactory)&lt;/a&gt;&lt;/code&gt;，建议使用新的&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23sslContext%28javax.net.ssl.SSLContext%29" target="_blank"&gt;Connection#sslContext(SSLContext)&lt;/a&gt;&lt;/code&gt;。使用&lt;code&gt;sslSocketFactory&lt;/code&gt;将强制使用旧&lt;code&gt;HttpUrlConnection&lt;/code&gt;实现，该实现不支持 HTTP/2。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2370" target="_blank"&gt;#2370&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;改进&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;当进行 pretty-printing 时，如果有连续的文本节点（通过 DOM 操作），则它们之间的非重要空白将被折叠。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2349" target="_blank"&gt;#2349&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;更新&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.Response.html%23statusMessage%28%29" target="_blank"&gt;Connection.Response#statusMessage()&lt;/a&gt;&lt;/code&gt;为在使用&lt;code&gt;HttpClient&lt;/code&gt;实现时返回一个简单的可记录字符串消息（例如「OK」），否则不会返回任何服务器设置的状态消息。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2346" target="_blank"&gt;#2356&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23size%28%29" target="_blank"&gt;Attributes#size()&lt;/a&gt;&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23isEmpty%28%29" target="_blank"&gt;Attributes#isEmpty()&lt;/a&gt;&lt;/code&gt;现在将所有内部属性（例如用户数据）排除在其计数之外。这与属性的序列化输出和迭代器保持一致。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2369" target="_blank"&gt;#2369&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;添加&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2FConnection.html%23sslContext%28javax.net.ssl.SSLContext%29" target="_blank"&gt;Connection#sslContext(SSLContext)&lt;/a&gt;&lt;/code&gt;以向请求提供自定义 SSL (TLS) 上下文，同时支持&lt;code&gt;HttpClient&lt;/code&gt;和旧版&lt;code&gt;HttUrlConnection&lt;/code&gt;实现。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2370" target="_blank"&gt;#2370&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;针对 DOM 操作方法的性能优化，包括在多次移除元素的第一个子元素（&lt;code&gt;element.child(0).remove()&lt;/code&gt;），以及使用&lt;code&gt;Parser#parseBodyFragement()&lt;/code&gt;解析大量直接子元素时的情景。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2373" target="_blank"&gt;#2373&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#192943"&gt;错误修复&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style="margin-left:0; margin-right:0"&gt; 
 &lt;li&gt;当从 InputStream 进行解析并且多字节字符恰好跨越缓冲区边界时，流将无法完全读取。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2353" target="_blank"&gt;#2353&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;在&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fselect%2FNodeTraversor.html" target="_blank"&gt;NodeTraversor&lt;/a&gt;&lt;/code&gt;中，如果在&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FDocument.html%23head%28%29" target="_blank"&gt;head()&lt;/a&gt;&lt;/code&gt;调用期间删除了最后一个子元素，则父元素会被访问两次。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2355" target="_blank"&gt;#2355&lt;/a&gt;。&lt;/li&gt; 
 &lt;li&gt;克隆具有 Attributes 对象的 Element 会向该克隆添加一个空的内部用户数据属性，这会导致&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23size%28%29" target="_blank"&gt;Attributes#size()&lt;/a&gt;&lt;/code&gt;和&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FAttributes.html%23isEmpty%28%29" target="_blank"&gt;Attributes#isEmpty()&lt;/a&gt;&lt;/code&gt;出现意外结果。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2356" target="_blank"&gt;#2356&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在多线程应用程序中，多个线程同时调用同一元素&lt;code&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fapidocs%2Forg%2Fjsoup%2Fnodes%2FElement.html%23children%28%29" target="_blank"&gt;Element#children()&lt;/a&gt;&lt;/code&gt;时，该方法生成内部子元素缓存（其子节点的筛选视图）时可能会发生竞争条件。由于 DOM 对象的并发读取应该是线程安全的，无需外部同步，因此该方法已更新为原子执行。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fissues%2F2366" target="_blank"&gt;#2366&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;格式错误的 HTML 可能会在 adoption agency 期间抛出 IndexOutOfBoundsException。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjhy%2Fjsoup%2Fpull%2F2377" target="_blank"&gt;#2377&lt;/a&gt;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;详情可查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjsoup.org%2Fnews%2Frelease-1.21.2" target="_blank"&gt;https://jsoup.org/news/release-1.21.2&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368253/jsoup-1-21-2-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368253/jsoup-1-21-2-released</guid>
      <pubDate>Mon, 25 Aug 2025 02:30:27 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>马斯克正式开源 Grok-2，称「中国公司将是最强大的对手」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;马斯克在 X 上官宣，xAI 去年最好的模型 Grok-2.5（实际上是 Grok-2）正式开源，同时，Grok-3 也将在大概 6 个月内开源。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0825/102359_dCkz_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;马斯克同时发表观点表示，xAI 很快就会超越除谷歌外的任何公司，然后也将超越谷歌，「但中国公司将是最强劲的竞争对手，因为他们的电力比美国多得多，而且在硬件建设方面实力超强。」&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-438f9645ff8c7921de03f1da199953fb8c6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;「虽迟但到」，有网友表示，此次开源 Grok-2 也是兑现当初的承诺。在去年 8 月 Grok-2 发布时，马斯克曾公开表示，每当创建 Grok 新版本的时候，就会开源之前的一个版本。最新的 Grok-4 模型已于 7 月发布，是时候开源去年的版本了。&lt;/p&gt; 
&lt;p&gt;根据 Grok 提供的信息，本地部署 Grok 2 需要如下硬件配置：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;最少 8 块大于 40GB 显存的 GPU（比如 NVIDIA A100），用于模型推理&lt;/li&gt; 
 &lt;li&gt;存储空间约 500GB，用于存放模型权重文件；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="622" src="https://static.oschina.net/uploads/space/2025/0825/102641_lTmS_2720166.png" width="1280" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Grok-2 模型下载：&lt;em&gt;https://huggingface.co/xai-org/grok-2&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368252/xai-grok-2-opensource</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368252/xai-grok-2-opensource</guid>
      <pubDate>Mon, 25 Aug 2025 02:23:11 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>微软人工智能主管：警惕 AI 或将 「要求权利」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;微软人工智能主管穆斯塔法・苏莱曼（Mustafa Suleyman）在一篇&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmustafa-suleyman.ai%2Fseemingly-conscious-ai-is-coming" target="_blank"&gt;博客&lt;/a&gt;中回应了由人工智能引发的心理健康危机，并呼吁人们对即将到来的&lt;span&gt;超级&lt;/span&gt;智能时代保持警惕。苏莱曼认为，人工智能并非仅仅是一个工具，而是可能具备某种程度的意识。他指出，越来越多的人开始过度相信人工智能聊天机器人是有意识的实体，这一趋势令人担忧。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="260" src="https://oscimg.oschina.net/oscnet/up-505e749ebb497a3020f2030c2e0f122701f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;苏莱曼强调，如果这种错误的认知持续下去，人们可能会开始倡导赋予人工智能某种权利。他认为，这样的发展将对人工智能的未来产生不利影响，值得引起重视。近年来，科技行业内的一些知名人物，例如谷歌 DeepMind 首席执行官德米斯・哈萨比斯（Demis Hassabis）和前 OpenAI 首席科学家伊利亚・苏茨克维尔 (Ilya Sutskever)，也在探讨人工智能的法律和道德影响，这让人们更加关注人工智能意识的可能性。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;研究显示，许多年轻人对人工智能的认知令人震惊:约四分之一的年轻人认为 AI 已经具备意识，58% 的人认为科技终将会 「接管」 世界。尤其是在 Character.AI 等公司推出虚拟伴侣的背景下，这一数字可能会进一步上升。虚拟伴侣的推出使得用户能够与人工智能建立情感联系，这带来了新的伦理和道德挑战。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;苏莱曼提醒，科技行业应该为人类打造人工智能，而不是把其转变为数字人。他呼吁立即建立保护措施，以确保这项技术能为人类带来益处，而不是造成伤害。他认为，人工智能公司不应声称或暗示其产品具有意识，这样的做法可能会引发更大的社会问题。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，苏莱曼建议，行业内需要就人工智能的定义达成共识，以避免对其性质的误解。他指出，人工智能不应被视为一种道德存在，而是应该回归其工具的本质。随着他从初创企业 Inflection AI 的创始人身份转变为微软的&lt;span&gt;领导者&lt;/span&gt;，苏莱曼显然对人工智能的潜在影响有了更深刻的理解。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368250</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368250</guid>
      <pubDate>Mon, 25 Aug 2025 02:13:11 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Dante Cloud 3.5.5.0 发布， 「你们项目是单体还是微服务？」 「我都是。」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;[一] 项目简介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 国内首个支持阻塞式和响应式服务并行的微服务平台。是采用&lt;strong&gt;领域驱动模型 (DDD)&lt;strong&gt;设计思想，以「&lt;strong&gt;高质量代码、低安全漏洞&lt;/strong&gt;」为核心，基于 Spring 生态全域开源技术，高度&lt;/strong&gt;模块化和组件化设计&lt;/strong&gt;，支持&lt;strong&gt;智能电视、IoT 等物联网设备&lt;/strong&gt;认证，满足&lt;strong&gt;国家三级等保要求&lt;/strong&gt;，支持&lt;strong&gt;接口国密数字信封加解密&lt;/strong&gt;等一系列安全体系的多租户微服务解决方案。独创的可以「&lt;strong&gt;一套代码实现微服务和单体两种架构灵活切换&lt;/strong&gt;」的企业级应用系统。&lt;/p&gt; 
&lt;h2&gt;[二] 项目理念&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 一直秉承着「简洁、高效、包容、务实」的理念，使用微服务领域及周边相关的各类新兴技术或主流技术进行建设，不断地深耕细作、去粗取精、用心打造。目标是构建一款&lt;code&gt;代码质量高、维护投入低、安全防护强&lt;/code&gt;的，可以帮助用户快速跨越架构技术选型、技术研究探索阶段，降低传统项目中因安全漏洞、技术负债、低质代码等潜在隐患所产生的高维护投入，期望像项目名字寓意一样，在行业变革的时期承上启下，助力企业信息化建设和变革的产品。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 核心关注点是：&lt;strong&gt;「高质量的系统代码」&lt;/strong&gt;、&lt;strong&gt;「合理的系统架构」&lt;/strong&gt;、&lt;strong&gt;「低耦合的模块划分」&lt;/strong&gt;、&lt;strong&gt;「高安全性系统实现」&lt;/strong&gt;、&lt;strong&gt;「灵活的功能扩展能力」&lt;/strong&gt;，&lt;strong&gt;「优质的微服务实现」&lt;/strong&gt;。不会像其它一些系统一样，追求 &lt;strong&gt;业务功能&lt;/strong&gt; 的 &lt;strong&gt;丰富&lt;/strong&gt; 性。堆叠大量无法做到真正通用的功能，反倒会成为负担和干扰，不如由用户自己按照需求灵活设计和实现。&lt;/p&gt; 
&lt;h2&gt;[三] 架构设计&lt;/h2&gt; 
&lt;p&gt;Dante Cloud 除了提供一套完整的微服务架构以外，还支持以单体架构运行。这里的微服务架构和单体架构并不是分离的两套代码，也不是分离的两个项目。而是完全融合的一整套代码，使用时可以根据需要选择是以微服务模式或者单体模式运行。这是 Dante Cloud 微服务最大的特色之一：&lt;strong&gt;「一套代码、两种架构」&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;基于 &lt;code&gt;Spring Boot&lt;/code&gt; 和 &lt;code&gt;Spring Cloud&lt;/code&gt; 的微服务架构，已经成为企业级应用建设的主流方案。但不可否认的是，搭建一套微服务架构所需的基础设施越来越多，也越来越复杂。仅仅是在开发电脑上搭建一套运行开发调试环境，其复杂度和所需的资源也不容小觑。而很多应用特别是小型应用，在早期开发中或者用户量不大的前期，很多情况下一套单体的，前后端分离的后台就足以满足。完全没有必要上一整套微服务，额外增加复杂度。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud &lt;strong&gt;「一套代码、两种架构」&lt;/strong&gt; 的特点，可以帮助企业在项目早期以单体架构快速建设项目、方便开发人员在本地进行开发以及新技术研究。在项目后期随着用户规模增大以及并发需求提升时，可以快速无缝迁移至微服务架构。&lt;/p&gt; 
&lt;h2&gt;[四] 实现组件&lt;/h2&gt; 
&lt;p&gt;本项目并未使用任何复杂难懂或难以上手掌握的技术，项目中所涉及核心关键组件中，其中「&lt;strong&gt;近 80% 均为 Spring 生态原生组件&lt;/strong&gt;」。技术实现均为各组件标准用法的组合与应用，编码风格和代码设计一直也在极尽努力尽量与 Spring 生态的标准规范用法保持一致，只不过经过大量的版本迭代和重构之后逐渐形成了一定的封装与抽象。&lt;/p&gt; 
&lt;p&gt;学习使用本项目对 &lt;strong&gt;Java 以及 Spring 生态基础知识&lt;/strong&gt;，以及对 &lt;strong&gt;微服务思想理念的认知&lt;/strong&gt; 要求较高。因此，如果你觉得本项目学习曲线高、掌握难度大，不像其它同类开源项目那样「&lt;strong&gt;简单&lt;/strong&gt;」，那么很有可能是你尚未 &lt;strong&gt;真正&lt;/strong&gt; 的了解或者掌握 Spring 生态的相关组件。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;听过不等于知道&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;知道不等于了解&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;了解不等于会用&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;会用不等于精通&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;当然，换个角度，本项目也可以是深入学习掌握 Spring 生态各组件的优秀案例。&lt;strong&gt;建议详细阅读《企业 IT 架构转型之道：阿里巴巴中台战略思想与架构实战》一书（可以先读前几章）之后再上手本项目，特别是对于仅擅长单体应用的朋友，一定要读！&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本项目提供了《Dante Cloud 及相关知识学习方法和学习路径的建议》，欢迎感兴趣的朋友阅读，&lt;a href="https://my.oschina.net/pointerv/blog/18630283"&gt;【在线阅读】&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud 所使用的核心组件如下：&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;序号&lt;/th&gt; 
   &lt;th&gt;Spring 生态组件&lt;/th&gt; 
   &lt;th&gt;国内开源组件&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Spring Boot&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Alibaba&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;Spring Security&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Tencent&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;Spring Security OAuth2&lt;/td&gt; 
   &lt;td&gt;JetCache&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;Spring Authorization Server&lt;/td&gt; 
   &lt;td&gt;Mybatis Plus&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;Spring Data JPA&lt;/td&gt; 
   &lt;td&gt;JustAuth&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;Spring Data MongoDB&lt;/td&gt; 
   &lt;td&gt;WxJava&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;Spring Data Redis&lt;/td&gt; 
   &lt;td&gt;Hutool&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;Spring Data Envers&lt;/td&gt; 
   &lt;td&gt;sms-spring-boot-starter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;Spring Cloud&lt;/td&gt; 
   &lt;td&gt;grpc-spring-boot-starter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Bus&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Stream&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Gateway&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Loadbalancer&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;Spring Cloud OpenFegin&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;Spring Cloud Zookeeper&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;Spring Session&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;Spring Integration&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;Spring Kafka&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;Spring WebSocket&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;Spring RSocket&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;Spring Webflux&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;Micrometer&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;SpringDoc&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;Spring Boot Admin&lt;/td&gt; 
   &lt;td&gt;--&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;[五] 交流反馈&lt;/h2&gt; 
&lt;p&gt;为了方便 Dante Cloud 开源版及企业版用户交流，深入了解、掌握 Dante Cloud 使用相关技术栈，快速解决实际应用问题。自 2025 年 8 月 18 日起，Dante Cloud 重新开放 &lt;strong&gt;技术交流群&lt;/strong&gt;，欢迎所有 &lt;code&gt;真心&lt;/code&gt; 交流技术朋友加入。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;如何进群&lt;/strong&gt;：详见&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.vip%2Fsupport%2Fcommunication.html" target="_blank"&gt;【技术交流群】&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;[六] 本次更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;主要更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] Spring Boot 版本升级至 3.5.5&lt;/li&gt; 
   &lt;li&gt;[升级] Spring Boot Admin 版本升级至 3.5.2&lt;/li&gt; 
   &lt;li&gt;[升级] Spring Authorization Server 版本升级至 1.5.2&lt;/li&gt; 
   &lt;li&gt;[升级] Nacos 版本升级至 3.0.3。自封装支持 Postgresql 的 Nacos Docker 镜像已经上传至 Docker Hub 和 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FQuay.IO" target="_blank"&gt;Quay.IO&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;[优化] 系统已支持 Redis 8.2.1 版本，&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其它更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 前端工程新增主题切换特效&lt;/li&gt; 
   &lt;li&gt;[修复] 修复自定义扩展 Client Credentials 模式 Provider 与 SAS 最新配置方式不匹配，导致 Client Credentials 模式使用不稳定问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复物联网设备客户端动态注册，因循环开启认证导致客户端注册生的 Registered Client 信息被覆盖问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 Spring Session 在退出系统时会抛出 java.lang.IllegalStateException: LettuceConnectionFactory has been STOPPED. Use start() to initialize it 问题。fix：#ICTVGU&lt;/li&gt; 
   &lt;li&gt;[修复] 修复前端设备码验证轮询 API 返回信息错误&lt;/li&gt; 
   &lt;li&gt;[修复] 修复客户端动态注册时 oauth2_authorization_resource 表中，出现多条相同 clientId 信息存在，导致查询出错问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复设备码授权默认验证成功后跳转地址错误问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复前端 framework kernel 模块因导入信息错误，导致模块打包过大问题&lt;/li&gt; 
   &lt;li&gt;[修复] 修复 @vue/tsconfig 升级至 0.8.0，默认开启 noUncheckedIndexedAccess 和 exactOptionalPropertyTypes 配置，导致打包编译时出现错误提示问题&lt;/li&gt; 
   &lt;li&gt;[重构] 重构前端 Axios 组件抽象定义中的类型，让类型验证更准确，减少不必要的类型转换&lt;/li&gt; 
   &lt;li&gt;[优化] IP 地址库数据库更新至 2025-08-13&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端客户端动态注册默认参数，避免注册时生成不必要的授权模式&lt;/li&gt; 
   &lt;li&gt;[优化] 删除 Baidu OCR OpenAPI 封装模块&lt;/li&gt; 
   &lt;li&gt;[优化] 去除 Velocity 组件的依赖以及相关配置&lt;/li&gt; 
   &lt;li&gt;[优化] 优化 Maven 配置，去除早期为控制依赖漏洞而引入的 fastjson 统一版本控制&lt;/li&gt; 
   &lt;li&gt;[优化] 优化 Gitee ISSUE Template&lt;/li&gt; 
   &lt;li&gt;[优化] 删除前端 Bpmn 设计器模块打包配置中的无用配置&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端 vite.config.mts 和 tsconfig.json 配置，采用更合理的定义配置，同时去除无用或过时的配置内容&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端应用 Vite 配置，调整自动生成配置文件位置，优化自动导入配置&lt;/li&gt; 
   &lt;li&gt;[优化] 优化前端模块 package.json 导出配置，简化模块样式引入路径长途&lt;/li&gt; 
   &lt;li&gt;[升级] tempo docker 镜像版本升级至 2.8.2&lt;/li&gt; 
   &lt;li&gt;[升级] cassandra docker 镜像版本升级至 5.0.5&lt;/li&gt; 
   &lt;li&gt;[升级] clickhouse docker 镜像版本升级至 25.7.4&lt;/li&gt; 
   &lt;li&gt;[升级] kestra docker 镜像版本升级至 v0.24.2&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;依赖更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升级] alipay-sdk-java 版本升级至 4.40.411.ALL&lt;/li&gt; 
   &lt;li&gt;[升级] grpc 版本升级至 1.75.0&lt;/li&gt; 
   &lt;li&gt;[升级] skywalking agent 版升级至 9.5.0&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk 版本升级至 2.32.27&lt;/li&gt; 
   &lt;li&gt;[升级] software.amazon.awssdk.crt 版本升级至 0.38.9&lt;/li&gt; 
   &lt;li&gt;[升级] springdoc 版本升级至 2.8.10&lt;/li&gt; 
   &lt;li&gt;[升级] sweetalert2 webjars 版本升级至 11.22.4&lt;/li&gt; 
   &lt;li&gt;[升级] wxjava 版本升级至 4.7.7-20250808.182223&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;如果本项目对你有所帮助，欢迎 Star 一波来支持我们！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitee&lt;/strong&gt;：&lt;a href="https://gitee.com/dromara/dante-cloud"&gt;https://gitee.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://github.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitcode&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://gitcode.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368249</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368249</guid>
      <pubDate>Mon, 25 Aug 2025 02:06:27 GMT</pubDate>
      <author>来源: 资讯</author>
    </item>
    <item>
      <title>Meta 陷入史上最大 AI 训练数据侵权案，面临 3.59 亿美元索赔</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;美国加利福尼亚州法院最近受理的一起诉讼案件，将全球科技巨头 Meta 推到了舆论的风口浪尖。两家成人影片制作公司 Strike3 和 Counterlife Media 的联合起诉，不仅揭露了 AI 训练背后的数据获取黑幕，更以高达 3.59 亿美元的索赔金额，为整个科技行业敲响了版权保护的警钟。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这起诉讼的核心指控令人震惊。根据法庭文件显示，Meta 公司自 2018 年以来一直在明知故犯地从盗版来源下载受版权保护的影片内容，累计涉及至少 2396 部作品。这些非法获取的视频资料被用于训练包括 Meta Movie Gen 视频生成模型和 LLaMA 语言大模型在内的多种 AI 系统，为 Meta 的人工智能技术发展提供了重要的数据支撑。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;更加令人意外的是 Meta 获取这些内容的方式。起诉文件详细披露，Meta 并非简单地下载这些盗版内容，而是主动利用 BitTorrent 文件共享技术进行大规模的非法内容获取。这种 P2P 下载方式的特殊之处在于，下载者同时也会成为内容的分发者，通过"种子"技术向网络中的其他用户传播相同的文件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Meta 选择这种下载方式绝非偶然。BitTorrent 协议的核心优势在于其分布式下载机制能够显著提升大文件的传输速度，这对于需要处理海量视频数据的 AI 训练项目而言具有重要价值。然而，这也意味着 Meta 不仅仅是被动的内容接收者，更是主动的盗版内容传播者，其行为的恶劣性质因此被进一步放大。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;原告方的律师团队在起诉书中强调，Meta 完全有能力通过合法途径获取所需的训练数据。无论是直接购买版权授权，还是修改下载工具的设置以避免传播行为，Meta 都拥有多种合规选择。然而，该公司却选择了最具争议的方式持续进行非法下载和传播活动，这种明知故犯的行为模式充分显示了其侵权的故意性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这起诉讼案件并非孤立事件，而是近年来 AI 公司版权争议的最新爆发点。此前已有多位知名作家对 Meta 提起类似诉讼，指控其未经许可使用受版权保护的文学作品训练 AI 大模型。值得注意的是，在那些案件的法庭审理过程中，Meta 已经公开承认确实曾从盗版来源获取过训练内容。这一承认不仅为当前的诉讼提供了重要的法律依据，也让 Meta 在这起新案件中处于更加被动的地位。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;Strike3 公司在这起诉讼中的角色转变具有重要的象征意义。作为美国最活跃的版权维权机构之一，Strike3 长期以来主要专注于起诉个人盗版用户，通过大量的民事诉讼来维护版权方的合法权益。然而，此次将矛头直指 Meta 这样的科技巨头，标志着版权保护战线正在向更高层面扩展，传统的版权维权策略开始适应 AI 时代的新挑战。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;3.59 亿美元的索赔金额虽然数字庞大，但其计算依据相当清晰。按照美国版权法的相关规定，每部被侵权作品的法定赔偿金最高可达 15 万美元，而 2396 部涉案影片的总赔偿金额上限正好接近这一数字。这种按作品数量累计的赔偿方式，充分体现了版权法对批量侵权行为的严厉态度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;对于 Meta 而言，这起诉讼的影响远超经济层面的损失。作为全球领先的科技公司，Meta 在人工智能领域的投资规模巨大，其 AI 产品的竞争力很大程度上依赖于高质量训练数据的获取。如果法庭最终认定 Meta 的数据获取方式违法，这不仅会对公司的财务状况造成直接冲击，更可能迫使其重新审视整个 AI 训练数据的获取策略。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;这起诉讼案件的更深层意义在于它可能成为 AI 行业版权规范的重要转折点。随着人工智能技术的快速发展，训练数据的需求量呈现爆炸式增长，而现有的版权法律框架显然还没有完全适应这种新兴技术的发展需求。Meta 案件的审理结果很可能为整个行业的数据使用规范确立重要的法律先例。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;目前，Meta 公司尚未对这起诉讼作出正式回应，但业界普遍认为这将是一场持续时间较长的法律拉锯战。无论最终结果如何，这起案件已经向所有 AI 公司发出了明确信号:在追求技术进步的同时，必须严格遵守版权法律的相关规定，否则将面临巨大的法律和经济风险。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367923</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367923</guid>
      <pubDate>Fri, 22 Aug 2025 10:31:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Gitee 企业版 AI 队友邀测开启：程序员的贴身助理来了</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;在团队协作开发中，有两类工作总让人心力交瘁：&lt;/p&gt; 
&lt;p&gt;🤦&amp;nbsp;&lt;strong&gt;一类是 PR 审查&lt;/strong&gt;：信息量大、变更复杂、上下文冗长。哪怕只是一个小改动，也得花不少时间理清上下文、理解影响范围；&lt;/p&gt; 
&lt;p&gt;🤦&amp;nbsp;&lt;strong&gt;另一类是安全漏洞排查&lt;/strong&gt;：依赖众多、更新频繁，稍有疏忽就可能埋下风险，事后追溯更是代价高昂。&lt;/p&gt; 
&lt;p&gt;这些工作既重要又琐碎，既不能不做，又难以做好。更现实的是，&lt;strong&gt;AI 想真正胜任这些工作，还远远不够成熟&lt;/strong&gt;，市面上的 AI 工具要么误报多，要么落地难，无法真正服务于企业级的研发流程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitee 企业版刚刚推出的「AI 队友」功能，就是为了解决这个现实问题。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-92cde867ee668b21e5a6c74cccb9abee554.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;我们不指望也不敢完全让 AI 替我们做此类决策，我们更需要的是一位靠谱的「实习生型 Bot」：&lt;strong&gt;不会瞎拍板、不会乱判断，但能主动发现问题&lt;/strong&gt;，让代码审得更清楚，安全盯得更扎实。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;PR 审查队友：让代码审得更快、更准、更稳&lt;/h2&gt; 
&lt;p&gt;面对频繁提交的 PR 和复杂的协作背景，人工审查不仅耗时耗力，还容易遗漏关键问题。PR 审查队友通过智能分析与规则驱动，协助审查人员聚焦重点内容，在不替代人工判断的前提下，有效提升审查效率。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-6eeccbe08f3b64b5a96a21b811333ad0ade.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;它的核心能力包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;自动触发审查&lt;/strong&gt;：在 PR 新建、更新或重新打开时，自动完成初步审查，也可通过 @PR 审查队友 /review 指令手动发起；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="123" src="https://oscimg.oschina.net/oscnet/up-8bc1b8ee6c9c96cc6e2e2ecaeaaa001cc30.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;结构化检查维度：涵盖功能逻辑、安全性、性能与可维护性四大类问题，生成清晰的评论意见；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="609" src="https://oscimg.oschina.net/oscnet/up-af5b6323ed9f0906ddce24f2182fc3f0cac.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;规则灵活配置：支持每个仓库独立设置最多 10 条自定义规则，结合上传的 txt 格式企业规范，实现差异化审查策略；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-d022b59593b0d8a77758afc7b00b730ea97.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;多仓库支持：每位审查队友可同时服务最多 5 个仓库，超出可灵活增配，满足企业规模化协作需求；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;文件过滤能力：支持以 glob 规则排除自动生成文件（如 RPC、templ 等），避免干扰审查结果；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;权限与管理机制：仅企业管理员或仓库负责人可配置和管理队友，保障安全可控；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;专属工作区与任务日志：可查看历史审查行为、审查计划分布与执行状态，便于团队协同管理；&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-c420fcc3c18ef0789db500fb56dd16104c3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PR 审查队友适用定位：补充人工盲区，聚焦潜在风险，不做决策，只做提醒。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;安全分析队友：盯紧依赖，提前识别风险&lt;/h2&gt; 
&lt;p&gt;随着项目日益依赖第三方组件，单靠人工排查已难以满足对代码安全的管理要求。安全分析队友基于啄木鸟 CodePecker SCA 引擎，提供高频自动扫描与 AI 分析能力，帮助团队实现持续的依赖安全治理。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-0df7dcc13bfe7b34ebd592e1be2c43f83b7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;它的核心能力包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自动化漏洞扫描：支持每周定时扫描与手动即时扫描，确保漏洞发现不滞后；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-104b5eb66845a60904220e0bf99b3c105d1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CVE 漏洞识别与报告生成：自动检测仓库代码及依赖中的 CVE 漏洞，提供风险等级、定位详情及修复建议；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-65793620a6c467ce93126cd6641c481f8e7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI 风险分析总结：为高危问题自动创建缺陷卡片，帮助开发者快速理解风险并推动闭环处理；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-f62beeb23754240b78102b58f865903c34e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;多语言支持：覆盖 JavaScript、Python、Java 等主流语言，适配不同技术栈的项目；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;仓库级配置能力：可自动识别代码语言，灵活适配扫描策略；扫描行为与结果均可在工作区中可视化查看。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;安全分析队友适用定位：提前暴露依赖漏洞，推动闭环修复，保障交付安全。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;现已开放邀测，欢迎扫码体验&lt;/h2&gt; 
&lt;p&gt;目前，「AI 队友」功能已在 Gitee 企业版中正式上线，公开邀测同步开启。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;查看 AI 队友的详细配置&amp;amp;最佳实践指南：&lt;a href="https://help.gitee.com/enterprise/ai/ai_teamates" target="_blank"&gt;https://help.gitee.com/enterprise/ai/ai_teamates&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;如果你的团队也在面对 PR 审查负担、漏洞排查难题，欢迎申请试用，让 AI 队友来帮你分担重复性工作、提升团队整体效能。&lt;/p&gt; 
&lt;p&gt;👇&lt;strong&gt;扫码进群获取邀测资格与使用指引&lt;/strong&gt;👇&lt;/p&gt; 
&lt;p&gt;&lt;img height="396" src="https://oscimg.oschina.net/oscnet/up-eb9aab33f9912c1b53ec2b87e6f098590ce.png" width="396" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-af428a1f9979c04cfb1484b3743ef1cb247.gif" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367917</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367917</guid>
      <pubDate>Fri, 22 Aug 2025 10:04:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>治理算法滥用，核心在于「算法透明」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;8 月 22 日,《新华每日电讯》发表题为《治理算法滥用，核心在于「算法透明」》的评论。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;近年来，算法滥用事件频发，这些事件不断提醒我们：打开「算法黑箱」已成为数字时代必须面对的核心议题。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;算法滥用的社会危害性不容小觑。首先，用户自主选择接收的信息范围被无形限制。算法根据用户历史行为构建偏好模型，不断强化同类内容推送，形成「信息茧房」。人们被困在自我重复的信息回音壁中，逐渐失去接触多元观点、挑战自我认知的机会，社会共识的基础被悄然侵蚀。这也是当下网络戾气激增、群体情绪激化突出的成因之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;其次，用户可能因算法滥用而遭受消费者权益损害。「千人千面」的定价策略让老用户看到更高价格，「精准营销」跨越隐私边界，用户在不自知中成为「被算计的对象」。更值得警惕的是，算法滥用可能助长网络谣言、网络暴力等不良信息的传播。为追求用户停留时长，算法往往优先推送煽动性、情绪化内容，使理性声音被淹没，情绪变得极端化，甚至引发线下事件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;治理算法滥用的核心在于「打开黑箱」，实现算法透明。《互联网信息服务算法推荐管理规定》所要求的平台公示算法推荐服务的基本原理、目的意图和主要运行机制，正是这一理念的重要实践。但需要明确的是，算法透明并非要求公开商业秘密或核心技术细节，而是揭示算法服务的基本规则和对用户权益的影响方式。就像我们不需要了解发动机的制造原理，但有权知道汽车的安全性能和油耗标准一样，用户有权知晓算法如何影响他们的信息环境和决策选择。这种有限度的透明，既保护了企业的创新动力，又保障了用户的基本知情权和选择权，让用户真正有能力自由挑选自己想要了解或喜欢的网络信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;当然，治理算法滥用需要多方协同发力。其一，网络平台应当以清晰易懂的方式说明算法服务对用户权益的影响，提供必要的关闭或调整选项。特别是对于老年人等特殊群体，要结合老年人经常面临的实际问题，适当增加诸如反电信网络诈骗、反伪科普等内容的推送比例。其二，监管机构需实施常态化监管，督促平台持续优化内部算法安全管理机制和算法技术应用提示说明机制，确保平台以简明扼要、清晰易懂的方式公开算法推荐服务的基本情况。其三，社会公众也需要积极参与治理活动，提升信息素养，培养数字时代的批判性思维，主动寻求多元信息源，共同构建健康透明、向上向善的网络信息生态。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;值得注意的是，打开「算法黑箱」存在一定技术门槛。算法公示机制的根本目的是实现个体权益受算法技术应用影响方式的「可视化」，所以，公示范围、公示频率应当围绕该目的而合理设置，而非以「信息倾泻」的方式让公众无从知晓算法技术应用对自身权益究竟有何影响。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;进一步而言，平台算法公示信息更适宜与普法信息同步呈现，避免一般社会公众误认为算法技术应用对自身权益存在影响就等于「重大威胁」，借由普法信息打消公众不必要的担忧，帮助公众在准确知晓权益影响程度、方式的基础上，自主选择相应的服务选项。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;归根结底，算法原理公示从来都不是减损企业市场竞争技术优势地位的强制性规范，而是为了引导信息服务行业提供更优质的信息服务、形成更健康的行业惯例。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:black; text-align:left"&gt;&lt;span style="color:#000000"&gt;在实践中，开设「平台算法原理公示」专栏、公开算法推荐服务权益影响说明、用户代表参与算法设计、第三方算法安全审计等方式，不仅是数字时代算法技术应用监管的创新尝试，更是数字时代技术安全治理理念的重要进步。阳光是最好的消毒剂，只有让算法运行在阳光下，才能打破信息茧房的桎梏，构建真正开放、包容、健康的数字空间。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367915</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367915</guid>
      <pubDate>Fri, 22 Aug 2025 10:02:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>俄罗斯 HapticVLM 系统发布，触觉识别准确率 84.7%</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;来自俄罗斯斯科尔科沃科学技术研究院的科研团队最新研发了一个名为 HapticVLM 的多模态触觉系统，材料识别准确率高达 84.7%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;根据介绍，HapticVLM 系统的技术核心体现在其精巧的架构设计上。系统巧妙地融合了深度卷积网络与视觉语言推理技术，实现了从视觉信息到触觉反馈的无缝转换。整个识别过程如行云流水般顺畅:系统首先通过先进的 ConvNeXt 架构对物体进行深度扫描，精准识别出是金属的冰冷坚硬、木材的温润质朴，还是织物的柔软细腻。随后，系统会生成极其稳健的视觉嵌入数据，为后续的材料识别提供坚实的数据基础。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="356" src="https://oscimg.oschina.net/oscnet/up-ca52106883566230e53bf4b3497fa8821a0.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;HapticVLM 还具备了环境感知的智慧。借助最新的 Qwen2-VL-2B-Instruct 视觉语言模型，系统能够智能推测周围环境的温度状况，并将这一信息 seamlessly 整合到触觉体验中。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;当用户的手指轻抚虚拟物体表面时，HapticVLM 会通过高精度扬声器产生与特定材质完美匹配的振动反馈。这些振动并非简单的机械震动，而是经过精密计算的复合波形，能够准确模拟金属表面的坚实感、木质纹理的粗糙感，以及丝绸面料的顺滑感。每一次触碰都能带来令人信服的真实感受。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;通过集成的帕尔贴模块，HapticVLM 能够提供精确的动态温度变化，让用户真切感受到金属的冰冷、木材的温和，甚至是刚刚烘焙完成的面包所散发的温暖。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;实验数据表明，在涵盖五种不同听觉触觉模式的综合测试中，系统平均识别准确率达到了 84.67%，这一成绩在同类技术中堪称翘楚。在 15 种复杂环境场景的温度估算挑战中，系统表现出了 86.7% 的超高准确率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;不过，研究团队也坦诚当前系统存在的局限性，并明确了未来的发展方向。团队计划在触觉模式的广度和深度上进一步拓展，同时加强用户体验研究。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;HapticVLM 系统的应用前景极其广阔，几乎涵盖了所有需要触觉交互的数字化场景。在虚拟现实游戏中，玩家将能够真实感受到剑刃的锋利和盔甲的厚重。在在线购物平台上，消费者可以在购买前就体验到商品的真实手感。在远程医疗领域，医生能够通过触觉反馈进行更精确的远程诊断。在教育培训中，学生可以通过触觉体验更深入地理解物理和化学知识。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367907</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367907</guid>
      <pubDate>Fri, 22 Aug 2025 09:17:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Kimi K2 再提速，最高可达每秒 100 Tokens</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;月之暗面今日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FMMklNqYVQWdCRzWQwOUs0Q" target="_blank"&gt;宣布&lt;/a&gt;，经过工程师们的不懈努力，kimi-k2-turbo-preview 模型输出速度已经提升至每秒 60 Tokens，最高可达每秒 100 Tokens。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;目前该模型仍然享受 5 折特惠价格，模型每百万 tokens 输入价格（缓存命中）¥2.00，输入价格（缓存未命中）¥8.00，输出价格 ¥32.00。9 月 1 日恢复原价。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9de6fdf009846744551a9cb1485708ffcde.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;更多信息请访问官网&lt;em&gt; https://platform.moonshot.cn&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;月之暗面 8 月 1 日发布 Kimi K2 高速版 —— Kimi-K2-turbo-preview，模型参数与 Kimi-K2 一致，但输出速度由每秒 10 Tokens 提升至每秒 40 Tokens。&lt;/p&gt; 
&lt;p&gt;Kimi K2 是一款具备更强代码能力、更擅长通用 Agent 任务的 MoE 架构基础模型，总参数 1T，激活参数 32B。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367902</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367902</guid>
      <pubDate>Fri, 22 Aug 2025 08:58:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>PlutoPrint - 从 HTML 生成 PDF 和图像</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;PlutoPrint 是一个轻量级且易于使用的 Python 库，可直接从 HTML 或 XML 内容生成高质量的 PDF 和图像。&lt;/p&gt;

&lt;p&gt;它基于&lt;a href="https://github.com/plutoprint/plutobook"&gt;PlutoBook&lt;/a&gt;强大的渲染引擎，并提供简单的 API，可将 HTML 转换为清晰的 PDF 文档或色彩鲜艳的图像文件。这使其成为报告、发票或视觉快照的理想选择。&lt;/p&gt;

&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,&amp;quot;Noto Sans&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;; font-size:16px; font-style:normal; font-variant:tabular-nums; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="border-color:#d1d9e0"&gt;Invoices&lt;/th&gt;
&lt;th style="border-color:#d1d9e0"&gt;Tickets&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;img height="323" src="https://static.oschina.net/uploads/space/2025/0821/154554_nIdG_4252687.png" width="569" referrerpolicy="no-referrer"&gt;&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;img height="327" src="https://static.oschina.net/uploads/space/2025/0821/154608_8DTR_4252687.png" width="567" referrerpolicy="no-referrer"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/plutoprint</link>
      <guid isPermaLink="false">https://www.oschina.net/p/plutoprint</guid>
      <pubDate>Fri, 22 Aug 2025 08:45:00 GMT</pubDate>
    </item>
    <item>
      <title>Anthropic 寻求 100 亿美元融资</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-08-21%2Fanthropic-in-talks-to-raise-up-to-10-billion-in-new-funding" target="_blank"&gt;根据《彭博社》的报道&lt;/a&gt;，Anthropic 正就一轮高达 100 亿美元的新融资进行最后谈判，此轮融资将使其投后估值达到约 1700 亿美元。因投资者需求远超预期，原定 50 亿美元的融资规模被直接翻倍。本轮完成后，Anthropic 现金储备将大幅增加。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a4f572245a4ba561e4f3b580fcb0e2fcb0f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Anthropic 成立于 2021 年，由前 OpenAI 核心成员创建，其主要产品 Claude 系列 AI 模型在市场中广受关注。截至 2024 年，其曾获得亚马逊与谷歌等巨头的大规模投资，此次新一轮融资若成功，将令其资金实力更上层楼。&lt;/p&gt; 
&lt;p&gt;据悉，投资公司 Iconiq Capital 将领投该轮融资。知情人士透露，其他预计的参与者包括 TPG Inc.、光速创投、Spark Capital 和 Menlo Ventures。Anthropic 还与卡塔尔投资局和新加坡主权基金新加坡政府投资公司（GIC）就加入这一轮谈判进行了讨论&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367897</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367897</guid>
      <pubDate>Fri, 22 Aug 2025 08:38:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>庆祝 Debian 「第 100000 岁生日」</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Debian 社区通过邮件列表庆祝 Debian 的「第 100000 岁生日」 : D&lt;/p&gt; 
&lt;p&gt;当然这里的「100000」并非真正的十万，而是二进制表示，即「0b100000」，相当于十进制的 32 年，或十六进制的 &lt;code&gt;0x20&lt;/code&gt;。这意味着 Debian 成立已经整 32 年了，而 Debian 的成立日期正好是 &lt;strong&gt;1993-08-16&lt;/strong&gt;。因此，2025-08-16 是 Debian 的 32 周年纪念日。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0822/162849_Baek_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;https://lists.debian.org/debian-devel-announce/2025/08/msg00006.html&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在周年纪念之际，Debian 社区特别感谢了为最新版本 &lt;strong&gt;Debian 13 「Trixie」&lt;/strong&gt; 发布付出努力的各个团队，包括负责镜像与软件包的 FTPMaster、统筹发布的 Release 团队、Installer 与镜像制作团队、文档与翻译贡献者，以及修复关键 Bug 的开发者们。文章还提到，代码签名服务的改进为未来安全更新打下了坚实基础。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367896</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367896</guid>
      <pubDate>Fri, 22 Aug 2025 08:32:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Pulsar 中的消息保留、过期及积压机制解析</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;在 Pulsar broker 中, 消息的 Retention, Expiry 和 Backlog quota 是比较重要的功能，它们表现的是 Pulsar 对于流经它的数据的管理。 但是受限于复杂度和文档语言等因素，开发者可能无法在第一时间很直观的了解它们。&lt;/p&gt; 
&lt;p&gt;本系列上篇为大家介绍了 Retention 和 Expiry 的概念、行为、应用、实现和注意事项&lt;a href="https://my.oschina.net/apachepulsar/blog/18688106"&gt;技术文档 | Pulsar 中的消息保留、过期及积压机制解析（上）&lt;/a&gt;，本文将带来关于 Backlog quota 的解析。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Backlog quota&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 概念&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Backlog 意为消息积压，指未被消费的消息；quota 意为配额，指对于未消费消息的限制。&lt;strong&gt;因此 Backlog quota 是为了限制消息堆积。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;当消费者的消费速率跟不上生产者的生产速率时，会出现消息堆积的情况，这在日常开发过程中非常常见。尽管**相比于其他消息队列，Pulsar 提供了几乎可以无限扩容消费者数量的机制 **(Shared, Key_Shared 订阅模式) 来提高消费速率， 但是在实际的业务场景中，消息堆积的情况也时有发生。&lt;/p&gt; 
&lt;p&gt;为了应对这种情况，Pulsar 提供了 Backlog quota 机制来在一定程度治理它。当然，这种治理无法提高消费者的消费速率，只是在生产速率和消费速率之间做出一种平衡，比如说它的一种治理策略是自动清理 Backlog 消息。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-fd21c3936cb8cf9fff04263bc486f32160b.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 行为&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Pulsar 在 Topic 级别和 Subscription 级别都有 Backlog 的概念。Topic 级别的 Backlog 是指该 Topic 下所有 Subscription 的 Backlog 总和 (pulsar_msg_backlog 和 pulsar_storage_backlog_size 的含义略有差异，这里使用 pulsar_msg_backlog 的含义)，Subscription 级别的 Backlog 是指当前 Subscription 的 Backlog。&lt;/p&gt; 
&lt;p&gt;Backlog quota 机制实际工作在 Subscription 级别，它和 Expiry 机制略有相似，但更加强大。它对于 Backlog 有两项限制、两种作用域和三种治理策略：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.1 两项限制&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;limitTime：Backlog 的最大存活时间，单位是秒，超过这个时间的 Backlog 会进入治理流程；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;limitSize：Backlog 的最大大小，单位是字节，超过这个大小的 Backlog 会进入治理流程；&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.2 两种作用域&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;destination_storage：针对 Topic 的 Backlog 的存储空间，和 limitSize 搭配使用；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;message_age：针对 Topic 的 Backlog 的消息存活时间，和 limitTime 搭配使用；&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.3 三种治理策略&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;producer_request_hold：当 Backlog 超过限制，Pulsar 会挂起 Producer 的链接请求，直到 Backlog 降到限制以下；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;consumer_backlog_eviction：当 Backlog 超过了限制，Pulsar 会自动移动所有超限的 Subscription 的游标 (相当于自动确认这些消息，使得这些消息对 Consumer 不可见)，将 Backlog 降低到限制以下；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;producer_exception：当 Backlog 超过了限制，客户端创建 Producer 会抛出异常，直到 Backlog 降到限制以下。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3. 应用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.1 监控&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Pulsar 在 Prometheus 上提供了 pulsar_msg_backlog 和 pulsar_storage_backlog_size 来分别观测 Topic 级别的未消费的消息数量、未消费消息的总大小。如果这两个指标数值较高，说明该 Topic 消息积压严重。&lt;/p&gt; &lt;p&gt;另外，Pulsar 也提供了 pulsar_subscription_back_log 这一 Subscription 级别的指标，当我们发现某个 Topic 的 backlog 数值较高时，可以通过查看该 Topic 下的 pulsar_subscription_back_log 指标来找到具体的 Subscription；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;通过 Topic stats 来监控 Backlog quota 的情况：&lt;/p&gt; &lt;p&gt;pulsar-admin topics stats &lt;a href="persistent://my-tenant/my-ns/my-topic"&gt;persistent://my-tenant/my-ns/my-topic&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;3.2 设置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;和 Retention 和 Expiry 一样，Backlog quota 的设置也分为两个级别：namespace 和 topic 级别。在 Namespace 级别设置了之后，该 Namespace 的所有 Topic 都会继承该策略；在 Topic 级别设置了之后，该 Topic 会覆盖 Namespace 的设置。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Namespace 级别&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;查看当前 Namespace 的 Backlog quota&lt;/p&gt; &lt;p&gt;pulsar-admin namespaces get-backlog-quotas my-tenant/my-ns&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;设置 Namespace 的 Backlog quota&lt;/p&gt; &lt;p&gt;pulsar-admin namespaces set-backlog-quota my-tenant/my-ns --limitTime 3600 --policy producer_request_hold --type message_age&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;删除 Namespace 的 Backlog quota&lt;/p&gt; &lt;p&gt;pulsar-admin namespaces remove-backlog-quota my-tenant/my-ns&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Topic 级别&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;查看当前 Topic 的 Backlog quota&lt;/p&gt; &lt;p&gt;pulsar-admin topics get-backlog-quotas &lt;a href="persistent://my-tenant/my-ns/my-topic"&gt;persistent://my-tenant/my-ns/my-topic&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;设置 Topic 的 Backlog quota&lt;/p&gt; &lt;p&gt;pulsar-admin topics set-backlog-quota &lt;a href="persistent://my-tenant/my-ns/my-topic"&gt;persistent://my-tenant/my-ns/my-topic&lt;/a&gt; --limitTime 3600 --policy producer_request_hold --type message_age&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;删除 Topic 的 Backlog quota&lt;/p&gt; &lt;p&gt;pulsar-admin topics remove-backlog-quota &lt;a href="persistent://my-tenant/my-ns/my-topic"&gt;persistent://my-tenant/my-ns/my-topic&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4. 实现&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Backlogquota 机制的触发有两个入口，分别是 ServerCnx#handleProducer(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fblob%2Fv3.0.4%2Fpulsar-broker%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fpulsar%2Fbroker%2Fservice%2FServerCnx.java%23L1448" target="_blank"&gt;https://github.com/apache/pulsar/blob/v3.0.4/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/ServerCnx.java#L1448&lt;/a&gt;) 和 BrokerService#startBacklogQuotaChecker()(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fpulsar%2Fblob%2Fv3.0.4%2Fpulsar-broker%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fpulsar%2Fbroker%2Fservice%2FBrokerService.java%23L657" target="_blank"&gt;https://github.com/apache/pulsar/blob/v3.0.4/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/BrokerService.java#L657&lt;/a&gt;) ,前者和后者略有差距，这里不做详细解释。仅以 BrokerService#startBacklogQuotaChecker() 为例，简单介绍 Backlog quota 的执行流程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.1 Backlog Quota Checker 初始化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 Pulsar 启动时， BrokerService#startBacklogQuotaChecker() 会检查当前 Broker 是否允许 Backlog quota 检查（broker.conf 的 backlogQuotaCheckEnabled(default=true)）。如果允许，向线程池注册一个定时任务，定时任务的执行周期是 broker.conf 的 backlogQuotaCheckIntervalInSeconds(default=60s)。Pulsar 每隔 60s 检查一次所有 Topic 的 Backlog quota，如果 Topic 设置了 Backlog quota，执行后续流程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.2 Backlog Quota 执行流程&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;遍历所有 Topic，如果 Topic 设置了 Backlog quota，执行后续流程。否则，跳过该 Topic；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;优先根据 limitSize 检查该 Topic 消费最慢的 Subscription 的 Backlog 是否超过了限制，如果未超限，再根据 limitTime 检查；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果 Backlog 超过了限制，根据 policy 执行相应的治理策略：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;producer_request_hold：挂起 Producer 的链接请求，直到 Backlog 降到限制以下；&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;consumer_backlog_eviction：自动移动所有超限的 Subscription 的游标，将 Backlog 降低到限制以下；&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;producer_exception：客户端创建 Producer 会抛出异常，直到 Backlog 降到限制以下。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;5. 注意事项&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Pulsar 暴露出的 Prometheus 指标中的 pulsar_storage_backlog_size 并不完全精准，它只是一个近似值。在 Shared 和 Key_Shared 模式下，允许消息单独确认消息，但是这些单独确认的消息不会加入到 Backlog 的计算中，因此这个指标并不会精准反映 Backlog 情况，它通常会比实际数值大；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;pulsar_msg_backlog 一般也是近似值，不会将 Ack 空洞计算在内，但是如果将 broker.conf 的 exposePreciseBacklogInPrometheus 设置为 true，则会将单独确认的消息计算在内，pulsar_msg_backlog 会更加精准；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;由于 EntryFilter(&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpulsar.apache.org%2Fdocs%2F3.2.x%2Fdevelop-plugin%2F%23entry-filter" target="_blank"&gt;https://pulsar.apache.org/docs/3.2.x/develop-plugin/#entry-filter&lt;/a&gt;) 机制的存在，在消费消息时可以根据 EntryFilter 过滤掉一些消息，这些被过滤掉的消息严格来说并不算 Backlog，但是我们在计算 Backlog 时，不可能将 Bookkeeper 中的所有消息都拉取出来计算。因此如果 Broker 挂载了 EntryFilter 插件，pulsar_msg_backlog 和 pulsar_storage_backlog_size 以及 pulsar_subscription_back_log 都无法精准反映实际的 Backlog 情况，它们通常会比实际数据大一些；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;不管是根据 limitSize 还是 limitTime 来限制 Backlog，当 policy=consumer_backlog_eviction 时，都无法完全精准的清理 Backlog。理想情况下，会将 Backlog 降低到原来的 10%；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果在 Broker 端禁用 Backlog quota checker (将 broker.conf 中 backlogQuotaCheckEnabled 设置为 false)，并且设置的 Backlog quota 的 policy=consumer_backlog_eviction，Pulsar 将不会自动清理 Backlog；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果使用 Backlog quota，然后 Backlog 达到了阈值，并且 policy=producer_request_hold 或 producer_exception ，在 Broker 重启或自动重平衡时，会导致所有的 Producer 无法链接到 Broker，进而无法生产消息，直到 Backlog 降到限制以下；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果使用 limitTime 限制 Backlog，需要注意 Client 和 Broker 的时间同步，否则可能会导致 Backlog 无法正确的清理。因为此时 Backlog 的判断是以 Broker 的时间为基准的；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果该 Topic 设置了 Retention，Backlog quota 必须要小于 Retention。假设 Retention 设置了 10GB，Backlog quota 必须要小于 10GB。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;总结&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在文章最后，对 Pulsar 的 Retention, Expiry 和 Backlog quota 做一个总结：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Retention 是 Pulsar 对于过期数据的保留和清理策略，它工作在 Topic 级别，通过定时任务清理过期数据，将全部 Subscription 都消费过后的数据从存储介质上删除来清理存储空间；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Expiry 即为 Message TTL，它工作在 Subscription 级别，通过定时任务来检查 Subscription 中超时未消费的消息，并自动的将这些消息确认，使其对消费者不可见；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Backlog quota 是对未被消费的消息的限制，它实际工作在 Subscription 级别，通过定时任务来检查 Subscription 中的 Backlog，如果 Backlog 超过了限制，会执行相应的治理策略，拒绝新的 Producer 链接或者自动确认消息。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这三个功能并不冲突，它们可以组合使用，我们可以**通过 Retention 删除过期数据，通过 Expiry 处理超时未消费的数据，通过 Backlog quota 治理消息堆积。**但是由于他们三者都涉及到了对数据的操作，大家在使用时应当谨慎，在使用前根据实际业务仔细评估，避免数据丢失或者数据不一致的情况。&lt;/p&gt; 
&lt;p&gt;社区将持续输出更多 Pulsar 的技术内容；欢迎加入社群讨论或在评论区留言，与我们交流更多关于 Pulsar 的问题。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/apachepulsar/blog/18689158</link>
      <guid isPermaLink="false">https://my.oschina.net/apachepulsar/blog/18689158</guid>
      <pubDate>Fri, 22 Aug 2025 08:24:00 GMT</pubDate>
      <author>原创</author>
    </item>
    <item>
      <title>AWS CEO 认为「用 AI 全面替代初级员工」是愚蠢的想法</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;亚马逊 AWS 首席执行官 Matt Garman 近日在一次采访中&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DnfocTxMzOP4" target="_blank"&gt;表示&lt;/a&gt;，&lt;strong&gt;用人工智能全面替代初级员工，是「我听过最蠢的想法」&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;他强调，初级员工不仅成本低，更是最容易与 AI 工具结合的群体，是企业长期发展的关键力量。如果公司完全依赖 AI，而不培养新人，十年后可能会面临无人具备核心技能的困境。他认为，企业应该继续招聘应届生，教他们如何构建软件、分解问题和采用最佳实践。他说 AI 时代最有价值的技能与大学学位不相关。要保住自己的工作员工必须不停的继续学习更新技能。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1498" src="https://static.oschina.net/uploads/space/2025/0822/162212_K8BN_2720166.png" width="2664" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Garman 批评一些企业用「AI 写了多少代码」来衡量价值，称这是一个误导性的指标。在他看来，代码质量远比数量重要。&lt;/p&gt; 
&lt;p&gt;与此同时，AWS 内部已有超过八成的开发人员在使用 AI 工具，涵盖写单元测试、文档和代码等工作，并且使用率还在持续上升。但 Garman 强调，AI 应该作为助手来提升效率，而不是用来取代年轻人才。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367892</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367892</guid>
      <pubDate>Fri, 22 Aug 2025 08:22:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>达梦数据三天两度发布公告：公司两位董事先后被立案调查</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;8 月 21 日晚，达梦数据再发布公告称，公司于近日收到湖北省应城市监察委员会下发的《立案通知书》和《管护通知书》，对公司董事兼高级副总经理陈文立案调查并实施管护措施。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前公司及子公司日常经营情况正常，各项业务稳步推进。公司尚未知悉上述事项的进展及结论，将密切关注后续进展并及时履行信息披露义务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="284" src="https://oscimg.oschina.net/oscnet/up-c40855a0dc2577d4d1cd7a522484e3a3c78.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公司 2024 年报显示，陈文，女，1973 年 7 月出生，本科学历，高级经济师。1997 年 7 月专科毕业于湖北省高等商业专科学校财务会计专业，2004 年 7 月本科毕业于华中农业大学法律专业。2002 年 1 月至 2020 年 11 月，在达梦有限历任销售经理、华东区域市场总监、副总经理、高级副总经理；2020 年 11 月至今，在达梦数据担任董事、高级副总经理；2021 年 3 月至今，在北京达梦担任总经理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;公司 2024 年报显示，陈文 2024 年从公司领取税前薪酬为 304.41 万元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;8 月 19 日，达梦数据也曾发布公告表示，公司董事兼总经理皮宇被立案调查并实施留置措施。&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;达梦数据成立于 2000 年，是国内数据库产品开发服务商，主要提供各类数据库软件及集群软件、云计算与大数据等一系列数据库产品及相关技术服务。其客户包括建设银行、中国人保、国家电网、中国航信、中国移动、中国烟草等企业，产品应用于党政、金融、能源、航空、通信等数十个领域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;该公司于 2024 年 6 月 12 日在上海证券交易所科创板上市，成为「国产数据库第一股」。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;从 6 月披露的半年报预告来看，达梦数据预计 2025 年上半年实现营业收入 4.95 亿～5.13 亿元，较去年同期增长 40.63%～45.74%。2025 年一季度，达梦数据实现收入 2.58 亿元，归母净利润 9816 万元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;相关阅读：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/367239" target="news"&gt;达梦数据：公司董事兼总经理被留置&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367891</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367891</guid>
      <pubDate>Fri, 22 Aug 2025 08:21:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>Vercel 宣布旗下 AI Gateway 服务正式 GA</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Vercel&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvercel.com%2Fblog%2Fai-gateway-is-now-generally-available"&gt;宣布&lt;/a&gt;&amp;nbsp;AI Gateway 已正式 GA，它建立在 Vercel 为数百万用户提供支持的 v0.app 系统之上，经过实战验证，具有高度稳定性和可靠性。&lt;/p&gt; 
&lt;p&gt;该服务支持数百种模型，通过统一 API 调用，无需单独管理各厂商 API 密钥、账户或配额，提供零加价（含自带密钥 BYOK）、高并发、自动故障转移、亚 20 毫秒延迟，并兼容 OpenAI 格式及 AI SDK 5。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { streamText } from 'ai'

const result = streamText({
  model: 'xai/grok-4', // defaults to Vercel AI Gateway
  prompt: 'How does Vercel AI Gateway have no markup on tokens?'
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;据介绍，以下开发者和团队使用 AI Gateway：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;需要&lt;strong&gt;动态评估或切换模型&lt;/strong&gt;的使用场景&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;追求&lt;strong&gt;高调用上限&lt;/strong&gt;、&lt;strong&gt;避免 rate-limit&amp;nbsp;&lt;/strong&gt;阻碍服务&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;希望&lt;strong&gt;第一时间访问新模型&lt;/strong&gt;的应用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;对&lt;strong&gt;高可用性&lt;/strong&gt;有强要求、不能容忍单点故障&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;希望&lt;strong&gt;集中查看使用成本与监控数据&lt;/strong&gt;，简化资源管理流程&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Vercel 称该服务已在 v0.app 等产品中承载数百万用户，现可供所有团队正式使用。开发者只需修改模型字符串即可秒级切换供应商，并可实时查看用量与成本，避免锁定单一模型或平台。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://vercel.com/ai-gateway/models&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367885</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367885</guid>
      <pubDate>Fri, 22 Aug 2025 08:10:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>WPS Office for Windows 上线 64 位新版本：更快更流畅</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;WPS Office 在官网上线 Windows 系统 64 位新版本，取消 Beta 字样，升级为正式版。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f9186f413660b14e6218f734654db06ee32.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;测试结果显示，相对 Windows 系统的 32 位版本，其文字组件的绘制速度提高 10.82%，表格组件的计算速度提高 12.82%，演示组件的新建速度提高 10.35%，PDF 组件的翻页速度提高 27.13%。&lt;/p&gt; 
&lt;p&gt;如果 Windows 电脑 CPU 是 X64 架构，且内存（RAM）大于 4GB，将 WPS 更新为 64 位版本，将更好地利用硬件能力发挥软件的性能。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367881</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367881</guid>
      <pubDate>Fri, 22 Aug 2025 08:03:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 为 Responses API 发布两项更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 为其 Responses API&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FOpenAIDevs%2Fstatus%2F1958660214057791853" target="_blank"&gt;推出&lt;/a&gt;了 Connectors 和 Conversations 两项新功能，分别用于简化外部服务数据拉取和提供原生对话记录持久化能力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e6b4c8a74c627e8d55f7864cb74b221bb67.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-796585c8fc755074c5d9b4261c49e0990bc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Connectors 允许开发者通过一次 API 调用，从 Gmail、Google Calendar、Google Drive、Dropbox、Teams、Outlook Calendar+Email、SharePoint 等外部服务拉取邮件、日程、文件及聊天记录，并可直接用于 deep research 场景。&lt;/p&gt; 
&lt;p&gt;Conversations 则提供原生对话记录持久化能力，无需自建数据库即可为用户保存聊天线程。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/351200" target="_blank"&gt;Responses API &lt;/a&gt;是 OpenAI 的状态化 API，支持包括网络搜索、文件搜索和计算机使用在内的多种新工具，为开发者提供更简洁、灵活的方式与 OpenAI 模型交互。&lt;/p&gt; 
&lt;p&gt;文档：&lt;em&gt;https://platform.openai.com/docs/guides/tools-connectors-mcp&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367878</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367878</guid>
      <pubDate>Fri, 22 Aug 2025 07:55:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌以 47 美分价格向美政府提供 AI 服务</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;谷歌周四宣布将推出 Gemini 政府版（Gemini for Government），并通过与美国总务管理局的新协议，以每年不到 50 美分的价格向美国联邦政府提供该模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这也是继 OpenAI 和 Anthropic 后，最新一家以极低价格向美国政府供应人工智能模型的公司。此前，OpenAI 和 Anthropic 均宣布以 1 美元的年费向美国联邦机构供应其旗下模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="263" src="https://oscimg.oschina.net/oscnet/up-ca46f0d381dd2bba05fa817d976c1daacc1.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;与 OpenAI 和 Anthropic 不同的是，谷歌已经在美国政府云业务中深度参与，这也为 Gemini 的后续部署提供了更大的便利。据悉，Gemini 政府版仅限于谷歌云平台使用，幷包含对 Notebook LM AI 的访问权限，其为一款用于研究和笔记的工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;谷歌母公司 Alphabet 首席执行官 Sundar Pichai 在一份声明中表示，很荣幸能与美国总务管理局合作，推出 Gemini 政府版。在 Workspace 服务的基础上，Gemini 政府版将提供全栈式的人工智能创新方案，包括由最新模型支持，并基于安全云基础设施的 NotebookLM 和 Veo 等工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;美国总务管理局则称，Gemini 政府版的定价为每个机构每年 47 美分，该优惠将持续至 2026 年。谷歌称，这是在此前报价基础上再提供了 71% 的折扣。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span style="color:#000000"&gt;先试用，后买单&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，谷歌和美国政府都未提及 Gemini 政府版在一年后的正式定价。但与谷歌共同参与政府项目的 OpenAI 曾表示，一年后，美国各政府机构要么在试用期结束访问，要么签订新的 ChatGPT Enterprise 付费协议。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;消息人士透露，目前各家 AI 公司的低价似乎是为了加速政府采用人工智能，并推动官员快速做出决定的一种策略。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;这一定价显然也难以持续，尤其是考虑到运行人工智能的数据中心算力成本不断高涨，1 美元甚至更低的年费价格更像是「为爱发电」。各家公司可能希望在一年期的试用之后，能够在政府订单中夺得更大的份额以收回利润。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;联邦采购服务局局长 Josh Gruenbaum 表示，这是美国政府过去几个月在 OneGov 项目上推出的战略的新发展。但谷歌与美国总务管理局过去几个月部署模型的不同点在于，谷歌响应了众多不同政策的要求，并整合了众多不同的举措。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;谷歌公共部门首席执行官 Karen Dahut 则强调，谷歌与其他任何服务真正不同之处在于：为联邦工作人员提供了一个完全集成的人工智能就绪平台。它既符合 FedRAMP 高标准的安全性，并且包含 Gemini 及其所有辅助功能。（财联社，马兰）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;相关阅读：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/364855/openai-chatgpt-usa-government-for-free" target="news"&gt;&lt;span style="color:#2980b9"&gt;OpenAI 以 1 美元价格向美国政府提供 ChatGPT&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/news/365914" target="news"&gt;&lt;span style="color:#2980b9"&gt;Anthropic 以 1 美元为美国政府提供 AI 服务&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/367877</link>
      <guid isPermaLink="false">https://www.oschina.net/news/367877</guid>
      <pubDate>Fri, 22 Aug 2025 07:52:00 GMT</pubDate>
      <author>来源: OSCHINA</author>
    </item>
  </channel>
</rss>
