<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>开源中国-最新资讯</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>开源中国-最新资讯 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Thu, 27 Feb 2025 07:48:47 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>如意玲珑应用构建指南（一）：规范体系与配置文件全解析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;在 Linux 生态中，软件包的分发与管理一直是开发者与用户关注的焦点。如意玲珑（Linyaps）作为一种新兴的容器化应用格式，凭借其轻量化、强隔离、跨发行版兼容等特性，正在为 Linux 应用生态注入新的活力。无论是开发者还是技术爱好者，掌握玲珑应用的构建方法都至关重要。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;本篇作为&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0FoyZ9FfJ6wxbzborTNjmQ&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;「如意玲珑应用构建从入门到实战」&lt;/strong&gt;系列的第一章&lt;/a&gt;，将带您系统&lt;strong&gt;梳理&lt;/strong&gt;&lt;strong&gt;玲珑应用构建的核心基础知识&lt;/strong&gt;，涵盖构建流程、规范要求与关键配置文件。通过理解这些基础概念，您将能够为后续的实操教程打下坚实根基，从容应对从代码到安装包的每一步挑战。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;01 玲珑应用构建基本步骤&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在正式开始构建一个玲珑应用工程前, 我们需要了解一个玲珑应用从资源 (源代码、二进制文件等) 输入到应用安装包导出所经过的基本步骤，来确定我们需要准备哪些必要文件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;获&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;取构建目标源文件 (开源项目源代码、应用二进制文件等)；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;根据源文件判断玲珑应用构建类型, 选择合适的构建方案；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;准备符合要求的玲珑构建环境；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;按照构建类型及源代码内容定制构建配置文件 linglong.yaml ；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;准备&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;应用所使用的通用类资源，图标以及其他非二进制资源。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;02 玲珑应用构建工程所需材料&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;结合上述的知识，我们可以了解到一个玲珑应用在构建的全过程中，主要涉及到以下的文件:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用构建工程配置文件 linglong.yaml；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;应用源代码/需要封装的二进制文件等资源；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;非二进制文件等通用资源。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;03&amp;nbsp;玲珑应用遵循的主流规范&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;每一个 Linux 桌面软件包管理方案为了能够保障完整的功能和良好的体验，均需要遵守软件包管理方案提出的各类规范要求以最大限度发挥软件包管理方案的功能并保障应用生态体验。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;如意玲珑也并不总是特立独行, 需要满足一定的规范来保障如意玲珑生态得以持续稳步发展。目前如意玲珑生方案遵守以下主流的规范：&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Freedesktop XDG 规范；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用目录结构规范；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用构建工程配置文件 linglong.yaml 规范。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 Freedesktop XDG 规范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用解决方案遵循 Freedesktop XDG 规范，一款正常的图形化应用应具备图标文件、desktop 文件并符合 Freedesktop XDG 规范；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用图标文件应该根据不同尺寸归类到 $PREFIX/share/icons/hicolor/ 目录下；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;应用容器中使用 XDG_DATA_DIRS 等变量, 支持读写宿主机中的用户目录；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 玲珑应用目录结构规范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用遵循 $PREFIX 路径规则,该变量自动生成, 应用所有相关文件需存放于此目录下, 该目录层级下存在 bin、share 等目录；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用容器中的应用将不被允许读取宿主机中系统目录中的二进制文件、运行库；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在构建工程中, 构建工程目录将会被映射到玲珑容器中, 挂载为 /project；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用容器中运行库、头文件所在目录将根据运行环境类型而异：&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;foundation 类：在玲珑容器中映射为普通系统路径 /usr/bin、/usr/include 等, 作为基础运行系统环境存在；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;runtime 类：在玲珑容器中映射为 runtime 容器路径 /runtime/usr/bin /、runtime/usr/include 等，作为基础运行系统环境存在。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;默认情况下, 玲珑容器内部的环境变量已自动处理好路径识别问题, 如：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PATH=szbt@szbt-linyaps23:/project$ echo $PATH
/bin:/usr/bin:/runtime/bin:/opt/apps/com.tencent.wechat/files/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;通用表达为:&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PATH=szbt@szbt-linyaps23:/project$ echo $PATH
/bin:/usr/bin:/runtime/bin:$PREFIX/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;04&amp;nbsp;玲珑应用构建工程通用资源的规范&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在玲珑应用构建工程中，不同的资源文件均需要遵循相关规范以确保构建、体验能够满足要求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1 icon 图标目录规范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;依据玲珑遵循的 Freedesktop XDG 规范及玲珑应用目录结构规范，图标根据不同尺寸放置在对应的目录中。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主流的非矢量图标尺寸有: 16x16、24x24、32x32、48x48、128x128、256x256、512x512。为保障图标在系统中能够获得较佳的体验效果, 因此需要至少一个尺寸不小于 128x128 的非矢量图标文件, 矢量图标则不存在该限制。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;因此, 一款玲珑应用安装目录中, icons 图标目录应为以下示例，其中&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;scalable 目录用于放置矢量图标文件, 一般为 .svg 格式。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$PREFIX/share/icons/hicolor/16x16/apps
$PREFIX/share/icons/hicolor/24x24/apps
$PREFIX/share/icons/hicolor/32x32/apps
$PREFIX/share/icons/hicolor/48x48/apps
$PREFIX/share/icons/hicolor/128x128/apps
$PREFIX/share/icons/hicolor/256x256/apps
$PREFIX/share/icons/hicolor/512x512/apps
$PREFIX/share/icons/hicolor/scalable/apps&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;假设你的玲珑应用同时提供尺寸为 128x128 的非矢量图标文件 linyaps-app-demo.png 和 128x128 的矢量图标文件 linyaps-app-demo.svg，在玲珑容器中应当表现为以下状态：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$PREFIX/share/icons/hicolor/128x128/apps/linyaps-app-demo.png
$PREFIX/share/icons/hicolor/scalable/apps/linyaps-app-demo.svg&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;注意，为了避免图标冲突被覆盖，图标文件名请使用应用唯一英文名称或玲珑应用 id。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2 desktop 文件规范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;玲珑应用兼容大部分符合 Freedesktop XDG 规范的 desktop 启动文件, 其中有以下字段需要额外注意：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:123px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:20.35pt; text-align:center; vertical-align:middle&quot;&gt;&lt;span&gt;字段&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:20.35pt; text-align:center; vertical-align:middle&quot;&gt;&lt;span&gt;值要求&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;Exec&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;该值用于设置点击此 desktop 文件时执行的指令, 需要与 linglong.yaml 中的 command 值保持一致。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;Icon&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;该值用于设置该 desktop 文件显示的应用图标, 需要与 icons 图标目录规范中的图标文件名一致, 此值不需要文件名后缀。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;因此, 一个符合玲珑应用规范的 desktop 文件可以参考：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;org.qbittorrent.qBittorrent.desktop
[Desktop Entry]
Categories=Network;FileTransfer;P2P;Qt;
Exec=/opt/apps/org.qbittorrent.qBittorrent/files/bin/qbittorrent %U
Comment=Download and share files over BitTorrent
Icon=qbittorrent
MimeType=application/x-bittorrent;x-scheme-handler/magnet;
Name=qBittorrent
Type=Application
StartupWMClass=qbittorrent
Keywords=bittorrent;torrent;magnet;download;p2p;

StartupNotify=true
Terminal=false&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;05&amp;nbsp;玲珑应用构建工程 linglong.yaml 规范&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;正如其他传统包管理套件一样, 手动创建一个玲珑应用构建工程需要设置构建规则文件&amp;nbsp; linglong.yaml，在构建规则中, 则根据用途划分为&lt;strong&gt;全局字段&lt;/strong&gt;及&lt;strong&gt;定制化字段&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;请注意，案例中 linglong.yaml 正文内所有空格符号、占位符均为有效字符, 请勿删除或变更格式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1 全局字段规范&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在 linglong.yaml 中, 对于不受构建类型影响的字段我们称为全局字段, 主要有以下参考的规范。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;1. 一个可以正常开始构建工程的 linglong.yaml&amp;nbsp;应包含以下的关键部分:&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:#3e3e3e; display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:230px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;模块&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;解释&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;构建工程版本号&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;package&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用基本信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;base&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用容器基础环境及版本设置, 基础环境中包含了部分基础运行库&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;runtime&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;玲珑应用运行库 runtime 及版本设置, 当 base 中的基础运行库满足程序运行要求时, 此模块可删除&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;command&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用容器启动时执行的命令, 与 desktop 文件的 Exec 字段内容一致&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;sources&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用构建工程源文件类型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;build&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用构建工程将要执行的构建规则&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;package&amp;nbsp;模块中存在数个子模块:&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; height:156px; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; width:677px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;子模块&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;解释&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;id&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用 id/包名&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;name&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用名称, 使用英文名称&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用版本号&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用类型, 默认为&amp;nbsp;&lt;span&gt;app&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;description&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲珑应用描述&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;2. 玲珑应用遵循 $PREFIX 路径规则，该变量自动生成，应用所有相关文件需存放于此目录下. 构建规则中若有需要涉及安装文件的操作均需要安装到 $PREFIX 路径下。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;其中&amp;nbsp;$PREFIX 变量名即为填写的实际内容，&lt;strong&gt;请勿使用绝对路径或任何具有绝对值作用的内容代替&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;3. 玲珑应用目前遵循&lt;strong&gt;四位数字&lt;/strong&gt;的版本号命名规则，不符合规则无法启动构建工程&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;4. base、runtime 版本支持自动匹配最新版本尾号，版本号可以仅填写版本号的前三位数字，如：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;当 base org.deepin.foundation 同时提供 23.0.0.28、23.0.0.29, 若 linglong.yaml 中仅填写：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;base: org.deepin.foundation/23.0.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;那么在启动玲珑应用构建工程时, 将会默认采用最高版本号的 23.0.0.29。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;5. 玲珑应用构建工程配置文件目前不直接兼容其他包构建工具的配置文件，需要根据构建工程配置文件案例来进行适配修改。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;详细可参考：&lt;/span&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;https://linyaps.org.cn/guide/start/whatis.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5.2 定制化字段&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;根据玲珑应用构建工程源文件类型, 又可将玲珑应用构建工程划分为&lt;strong&gt;本地文件文件构建&lt;/strong&gt;&amp;nbsp;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;git 源码仓库拉取构建&lt;/strong&gt;，不同类型则需要填写不同的 linglong.yaml。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲珑应用构建工程源文件类型 sources 主要支持这几种类型: git、local、file、archive。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;完整说明可参考：&lt;/span&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;https://linyaps.org.cn/guide/start/whatis.html&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;5.2.1&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;git 拉取源码编译模式&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;当玲珑应用构建工程需要通过 git 拉取开源项目仓库资源到本地进行构建时, 此事 sources 应当设置为 git 类型, 并根据要求填写 linglong.yaml。并需要根据规范编写 sources 与 build 模块。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;1. sources&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  - kind: git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    url: https://githubfast.com/qbittorrent/qBittorrent.git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    version: release-4.6.7&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    commit: 839bc696d066aca34ebd994ee1673c4b2d5afd7b&lt;/span&gt;&lt;/code&gt;
&lt;code&gt;&lt;span&gt;  - kind: git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    url: https://githubfast.com/arvidn/libtorrent.git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    version: v2.0.9&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    commit: 4b4003d0fdc09a257a0841ad965b22533ed87a0d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:196px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;名称&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;描述&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件类型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;url&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;需要通过 git 拉取的源代码仓库地址, 该仓库需要支持 git 功能. 当网络状态不佳时, 可采用镜像地址代替&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;指定源代码仓库的版本号, 即 tag 标签, 或拉取主线 master&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:52.5pt; text-align:center; vertical-align:middle&quot;&gt;commit&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:52.5pt; vertical-align:middle&quot;&gt;根据该仓库 commit 变动历史拉取源码, 此处填入 commit 对应的值, 将会应用该仓库截止本 commit 的所有变更. *此字段优先级高于 version, 请勿填入 version 合并时间之后的任何 commit&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;该模式支持同时添加多个 git 仓库作为 sources 拉取。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;2. build&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;build&lt;/span&gt;: &lt;span style=&quot;color:#dd1144&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;mkdir&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;-p ${PREFIX}/bin/ ${PREFIX}/share/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;  ##Apply patch for qBittorrent&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;cd&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;/project/linglong/sources/qBittorrent.git&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;git&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;apply -v /project/patches/linyaps-qBittorrent-4.6.7-szbt2.patch&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此模块为构建规则正文，路径遵守玲珑应用目录结构规范。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在 sources 拉取到本地后, 仓库文件将会存放在 /project/linglong/sources 目录中，此时不同仓库目录以 xxx.git 命名；支持运用 git patch 功能对源代码进行便捷维护。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&lt;strong&gt;5.2.2&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;本地资源操作模式&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;当玲珑应用构建工程需要对构建目录中的文件操作时，此时 kind 应当设置为 local 类型, 并根据要求填写 linglong.yaml，此时需要根据规范编写 sources 与 build 模块。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1. sources&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;source:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  - kind: local&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    name: &quot;qBittorrent&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:78px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;名称&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;描述&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件类型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;name&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件名称标识, 不具备实际用途&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;注意，当 kind 应当设置为 local 类型时, 构建工程将不会对任何源文件进行操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;2. build&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;build: |&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  ##Build main&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  mkdir /project/src/qBittorrent-release-4.6.7-szbt2/build&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  cd /project/src/qBittorrent-release-4.6.7-szbt2/build&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  cmake -DCMAKE_BUILD_TYPE=Release \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;        -DCMAKE_INSTALL_PREFIX=$PREFIX ..&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  make -j$(nproc)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  make install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此模块为构建规则正文，路径遵守玲珑应用目录结构规范，此时 build 规则支持多种写法以模拟人为操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;注意需要确保此构建规则所有步骤均可以正常被执行, 否则将会中断当次构建任务。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;5.2.3&amp;nbsp;容器内部手动操作模式&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;若计划直接进入玲珑容器手动操作而不是通过构建规则文件 linglong.yaml,那么应该参考，本地资源操作模式&amp;nbsp;填写 linglong.yaml&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;sources 部分写法与本地资源操作模式一致；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;由于使用手动操作, 因此不需要完整且可以正常被执行的 build 规则, 此时 linglong.yaml 用于生成符合描述的玲珑容器而不是执行所有任务，具体操作将在后续关于容器内部构建文件的案例中详细展示。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;以上便是玲珑应用构建的一些基础知识，相信您已对玲珑应用构建的规范、目录结构、资源配置及关键文件（如 linglong.yaml）有了较全面的认知。这些知识不仅是构建流程的「地图」，更是规避常见陷阱的「指南针」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0FoyZ9FfJ6wxbzborTNjmQ&quot; target=&quot;_blank&quot;&gt;在接下来的系列推文中，我们将&lt;strong&gt;深入实战环节&lt;/strong&gt;&lt;/a&gt;。准备好您的开发环境，下一站，我们将带大家&lt;strong&gt;在玲珑容器中编译基于 Qt5 的开源应用！&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336001</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336001</guid>
            <pubDate>Thu, 27 Feb 2025 07:35:22 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>IBM Granite 3.2 系列模型开源发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;IBM &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ibm.com%2Fnew%2Fannouncements%2Fibm-granite-3-2-open-source-reasoning-and-vision&quot; target=&quot;_blank&quot;&gt;宣布&lt;/a&gt;推出最新的 Granite 3.2 系列模型，依旧在 Apache 2.0 许可下开源。「以实验推理功能和首个官方视觉语言模型（VLM）为首，Granite 3.2 为 Granite 系列引入了多项重要的新功能。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;主要信息概览：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新款 &lt;strong&gt;Granite 3.2 8B Instruct 和 Granite 3.2 2B Instruct&lt;/strong&gt; 提供实验性的思路链推理功能，可显著提高其遵循复杂指令的能力，同时不会牺牲整体性能。推理过程可以打开或关闭，从而高效利用计算资源。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;与 IBM 的推理扩展技术相结合，Granite 3.2 8B Instruct 的扩展思维过程使其能够达到或超越更大模型的推理性能，包括 GPT-4o 和 Claude 3.5 Sonnet。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新开发的多模式模型&lt;strong&gt;Granite Vision 3.2 2B&lt;/strong&gt;特别注重文档理解，其性能突出，可与尺寸为其 5 倍的开放模型相媲美。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Granite Timeseries 模型系列的最新成员&lt;strong&gt;Granite-Timeseries-TTM-R2.1&lt;/strong&gt;扩展了 TTM 的预测能力，除了之前的 TTM 模型已经支持的分钟和小时预测任务之外，还包含每日和每周预测。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;为 &lt;strong&gt;Granite Guardian 3.2&lt;/strong&gt; 引入了新的模型大小，其中包括从 3B-A800M MoE 语言模型衍生的变体。新模型在性能损失最小的情况下提高了效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Granite Embedding 模型系列现在包括学习稀疏嵌入的能力。Granite -Embedding-30M-Sparse 可在不同的资源和延迟预算之间平衡效率和可扩展性。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;247&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-734609651e706f86443082405306c2a0613.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;219&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5861924d6216e8e1bd964342a61ddfaec61.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-01d6625e86edda352221a94d16367faf0c4.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ibm.com%2Fnew%2Fannouncements%2Fibm-granite-3-2-open-source-reasoning-and-vision&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335996/ibm-granite-3-2</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335996/ibm-granite-3-2</guid>
            <pubDate>Thu, 27 Feb 2025 07:17:22 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>特斯拉国内 FSD 和美国版 FSD 有什么区别？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;特斯拉中国日前宣布，2024.45.32.12 已开始分批次推送，城市道路 Autopilot 自动辅助驾驶功能上线，这也意味着特斯拉 FSD 正式落地中国。&lt;/p&gt; 
&lt;p&gt;不过，已经升级过的车主经过实测，国内版的 FSD 只能算是具备领航功能的高阶智驾，而这又与美版 FSD 有多大区别呢？汽车之家为此制作了一图说明。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-473e140ae45657efcec09d140953dcbee28.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;从定位上来看，特斯拉中国的辅助驾驶系统，允许在部分结构化的公共道路上开启智驾，在城中村、夜市街此类场景可用度不高；而&lt;strong&gt;美国版 FSD 在车位设定目的地后支持一键开启智驾&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;同时，美版 FSD 具备自动找车位能力，中国版的则不具备。&lt;/p&gt; 
&lt;p&gt;FSD 的可用度方面，中国版接管率较高，偏向辅助驾驶系统；美国版的较低，更接近完全自动驾驶。&lt;/p&gt; 
&lt;p&gt;在车辆的硬件支持上，中国版 FSD 仅支持 HW4.0 车机芯片，而美版则支持 HW2.5 及以上版本，适用车型范围更广。&lt;/p&gt; 
&lt;p&gt;最后，价格方面，中国版 FSD 售价 6.4 万元，美版为 8000 美元（约合人民币 5.8 万元）。&lt;/p&gt; 
&lt;p&gt;对比来看，美国版的 FSD 系统，不仅售价比中国版便宜，而且支持车型范围更广，功能也更完善、好用。&lt;/p&gt; 
&lt;p&gt;不过，有报道指出，当前特斯拉给车主推送的辅助驾驶功能属于「残血版」FSD，而「满血版」系统当前正在国内进行测试优化，预计 3、4 月份开启推送。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相关阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335957&quot; target=&quot;news&quot;&gt;特斯拉 FSD 国内训练数据合规，但仍处于 L2 级自动驾驶级别&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335792&quot; target=&quot;news&quot;&gt;特斯拉 FSD 闯红灯，马斯克回应：我们用了中国互联网上的公开视频数据来训练&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335712&quot; target=&quot;news&quot;&gt;特斯拉 FSD 部分能力在中国已推送，命名为「FSD 智能辅助驾驶功能」&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335994</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335994</guid>
            <pubDate>Thu, 27 Feb 2025 07:11:22 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>韩国数据中心建设一再迟滞</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;科技日报首尔 2 月 26 日电（记者薛严）韩国数据中心协会近日表示，2021 年至 2024 年间，共有 16 个已公开宣布的数据中心项目被暂停或取消。在首尔和京畿道，受民间投诉影响，从获得建筑许可到开始施工的时间被一再延长，部分建设项目被迫下马。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;全球云计算代表企业之一亚马逊云计算服务曾于 2023 年 10 月宣布，将投资 7.85 万亿韩元，在韩建设首个数据中心。作为该投资计划的第一步，亚马逊在仁川西区工业园区开建一个大型数据中心，业务规模超过 5000 亿韩元，需要约 100 兆瓦电力。目前距离宣布投资已过去一年零四个月，该数据中心建设仍处于起步阶段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;而亚马逊云计算服务在马来西亚的数据中心于 2023 年 3 月宣布，2024 年 8 月即竣工开放；在印度和澳大利亚的数据中心从宣布到正式开放用了约两年时间；在泰国的数据中心于 2022 年 10 月宣布，2025 年 1 月投入运营。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;韩国业界研判，由于韩国独特的民事诉讼风险，全球大型科技公司今后可能不会考虑将该国作为人工智能数据中心建设地。三星证券在近期的报告中指出，曾有某全球云服务提供商计划将韩国打造为人工智能数据中心，但最近放弃了该计划，正转向日本、印度、马来西亚等国。由于包括亚马逊和微软在内的大型科技公司十分重视当地情绪和舆论风险，韩国业界担心，他们会在人工智能时代的尖端技术基础设施建设方面明显落后。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335990</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335990</guid>
            <pubDate>Thu, 27 Feb 2025 06:55:22 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>基于 HLS v7 的 fMP4 技术实现与应用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;作者前言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;作为 Monibuca 流媒体服务器的开发者，我们一直在寻求提供更高效、更灵活的流媒体解决方案。随着 Web 前端技术的发展，特别是 Media Source Extensions (MSE) 的广泛应用，我们逐渐认识到传统的流媒体传输方案已难以满足现代应用的需求。在探索与实践中，我们发现 fMP4(fragmented MP4) 技术能够很好地连接传统媒体格式与现代 Web 技术，为用户提供更流畅的视频体验。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;Monibuca 项目在 MP4 插件的实现中，我们面临着如何将已录制的 MP4 文件高效转换为支持 MSE 播放的格式这一挑战。通过深入研究 HLS v7 协议和 fMP4 容器格式，我们最终实现了一套完整的解决方案，支持 MP4 到 fMP4 的实时转换、多段 MP4 的无缝合并，以及针对前端 MSE 播放的优化。本文将分享我们在这一过程中的技术探索和实现思路。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;随着流媒体技术的发展，视频分发方式不断演进。从传统的整体式下载到渐进式下载，再到现在广泛使用的自适应码率流媒体技术，每一步演进都极大地提升了用户体验。本文将探讨基于 HLS v7 的 fMP4（fragmented MP4）技术实现，以及它如何与现代 Web 前端中的媒体源扩展（Media Source Extensions, MSE）结合，打造高效流畅的视频播放体验。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;HLS 协议演进与 fMP4 的引入&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;传统 HLS 与其局限性&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;HTTP Live Streaming (HLS) 是由 Apple 公司开发的 HTTP 自适应比特率流媒体通信协议。在早期版本中，HLS 主要使用 TS(Transport Stream) 切片作为媒体容器格式。虽然 TS 格式具有良好的容错性和流式传输特性，但也存在一些局限性：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;相比于 MP4 等容器格式，TS 文件体积较大&lt;/li&gt; 
 &lt;li&gt;每个 TS 切片都需要包含完整的初始化信息，导致冗余&lt;/li&gt; 
 &lt;li&gt;与 Web 技术栈的其他部分集成度不高&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;HLS v7 与 fMP4&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;HLS v7 版本引入了对 fMP4(fragmented MP4) 切片的支持，这是 HLS 协议的一个重大进步。fMP4 作为媒体容器格式相比 TS 具有以下优势：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;文件体积更小，传输效率更高&lt;/li&gt; 
 &lt;li&gt;与 DASH 等其他流媒体协议共享相同的底层容器格式，有利于统一技术栈&lt;/li&gt; 
 &lt;li&gt;更好地支持现代编解码器&lt;/li&gt; 
 &lt;li&gt;与 MSE(Media Source Extensions) 有更好的兼容性&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 HLS v7 中，通过在播放列表中使用&lt;code&gt;#EXT-X-MAP&lt;/code&gt;标签指定初始化片段，可以实现 fMP4 切片的无缝播放。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;MP4 文件结构与 fMP4 的基本原理&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;传统 MP4 结构&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;传统的 MP4 文件遵循 ISO Base Media File Format(ISO BMFF) 规范，主要由以下几个部分组成：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「ftyp」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(File Type Box): 指示文件的格式和兼容性信息&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「moov」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(Movie Box): 包含媒体的元数据信息，如轨道信息、编解码器参数等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「mdat」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(Media Data Box): 包含实际的媒体数据&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在传统 MP4 中，&lt;code&gt;moov&lt;/code&gt;通常位于文件开头或结尾，包含了整个视频的所有元信息和索引数据。这种结构对于流式传输不友好，因为播放器需要先获取完整的&lt;code&gt;moov&lt;/code&gt;才能开始播放。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下是 MP4 文件的 box 结构示意图：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b90d3cb20e9df52aa8bd3117996cdca7.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;fMP4 的结构特点&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4(fragmented MP4) 对传统 MP4 格式进行了重构，主要特点是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;将媒体数据分割成多个片段 (fragments)&lt;/li&gt; 
 &lt;li&gt;每个片段包含自己的元数据和媒体数据&lt;/li&gt; 
 &lt;li&gt;文件结构更适合流式传输&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 的主要组成部分：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「ftyp」&lt;/strong&gt;: 与传统 MP4 相同，位于文件开头&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「moov」&lt;/strong&gt;: 包含整体的轨道信息，但不包含具体的样本信息&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「moof」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(Movie Fragment Box): 包含特定片段的元数据&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「mdat」&lt;/strong&gt;: 包含与前面的 moof 相关联的媒体数据&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下是 fMP4 文件的 box 结构示意图：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b3737a48254d68b6644dc2668892d5ac.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这种结构允许播放器在接收到初始的&lt;code&gt;ftyp&lt;/code&gt;和&lt;code&gt;moov&lt;/code&gt;后，可以立即开始处理后续接收到的&lt;code&gt;moof&lt;/code&gt;+&lt;code&gt;mdat&lt;/code&gt;片段，非常适合流式传输和实时播放。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_9&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;MP4 到 fMP4 的转换原理&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;MP4 到 fMP4 的转换过程可以通过以下时序图来说明：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//6133860c2c64ea51fffd696df71c9559.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;从上图可以看出，转换过程主要包含三个关键步骤：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「解析源 MP4 文件」&lt;/strong&gt;：读取并解析原始 MP4 文件的结构，提取出视频轨、音频轨的相关信息，包括编解码器类型、帧率、分辨率等元数据。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「创建 fMP4 的初始化部分」&lt;/strong&gt;：构建文件头和初始化部分，包括 ftyp 和 moov box，它们作为初始化段 (initialization segment)，包含了解码器需要的所有信息，但不包含实际的媒体样本数据。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「为每个样本创建片段」&lt;/strong&gt;：逐个读取原始 MP4 中的样本数据，然后为每个样本（或一组样本）创建对应的 moof 和 mdat box 对。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这种转换方式使得原本只适合下载后播放的 MP4 文件变成了适合流式传输的 fMP4 格式。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_10&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;MP4 多段合并技术&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_11&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;用户需求：时间范围录像下载&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在视频监控、课程回放和直播录制等场景中，用户经常需要下载特定时间范围内的录像内容。例如，一个安防系统的操作员可能只需要导出包含特定事件的视频片段，或者一个教育平台的学生可能只想下载课程中的重点部分。然而，由于系统通常按照固定时长（如 30 分钟或 1 小时）或特定事件（如直播开始/结束）来分割录制文件，用户需要的时间范围往往横跨多个独立的 MP4 文件。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 Monibuca 项目中，我们针对这一需求，开发了基于时间范围查询和多文件合并的解决方案。用户只需指定所需内容的起止时间，系统会：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;查询数据库，找出所有与指定时间范围重叠的录像文件&lt;/li&gt; 
 &lt;li&gt;从每个文件中提取相关的时间片段&lt;/li&gt; 
 &lt;li&gt;将这些片段无缝合并为单个下载文件&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这种方式极大地提升了用户体验，使其能够精确获取所需内容，而不必下载和浏览大量无关的视频内容。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_12&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;数据库设计与时间范围查询&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;为支持时间范围查询，我们的录像文件元数据在数据库中包含以下关键字段：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;流路径（StreamPath）：标识视频源&lt;/li&gt; 
 &lt;li&gt;开始时间（StartTime）：录像片段的开始时间&lt;/li&gt; 
 &lt;li&gt;结束时间（EndTime）：录像片段的结束时间&lt;/li&gt; 
 &lt;li&gt;文件路径（FilePath）：实际录像文件的存储位置&lt;/li&gt; 
 &lt;li&gt;文件类型（Type）：文件格式，如&quot;mp4&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;当用户请求特定时间范围的录像时，系统执行类似以下的查询：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM record_streams 
WHERE stream_path = ? AND type = &#39;mp4&#39; 
AND start_time &amp;lt;= ? AND end_time &amp;gt;= ?
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这将返回所有与请求时间范围有交集的录像片段，然后系统需要从中提取相关部分并合并。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_13&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;多段 MP4 合并的技术挑战&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;合并多个 MP4 文件并非简单的文件拼接，而是需要处理以下技术挑战：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「时间戳连续性」&lt;/strong&gt;：确保合并后视频的时间戳连续，没有跳跃或重叠&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「编解码一致性」&lt;/strong&gt;：处理不同 MP4 文件可能使用不同编码参数的情况&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「元数据合并」&lt;/strong&gt;：正确合并各文件的 moov box 信息&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「精确剪切」&lt;/strong&gt;：从每个文件中精确提取用户指定时间范围的内容&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在实际应用中，我们实现了两种合并策略：普通 MP4 合并和 fMP4 合并。这两种策略各有优势，适用于不同的应用场景。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_14&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;普通 MP4 合并流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//1ad0955a59b92b097b1f92251d4e5395.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这种方式下，合并过程主要是将不同 MP4 文件的媒体样本连续排列，并调整时间戳确保连续性。最后，重新生成一个包含所有样本信息的&lt;code&gt;moov&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;box。这种方法的优点是兼容性好，几乎所有播放器都能正常播放合并后的文件，适合用于下载和离线播放场景。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;特别值得注意的是，在代码实现中，我们会处理参数中时间范围与实际录像时间的重叠关系，只提取用户真正需要的内容：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;if i == 0 {
    startTimestamp := startTime.Sub(stream.StartTime).Milliseconds()
    var startSample *box.Sample
    if startSample, err = demuxer.SeekTime(uint64(startTimestamp)); err != nil {
        tsOffset = 0
        continue
    }
    tsOffset = -int64(startSample.Timestamp)
}

// 在最后一个文件中，超出结束时间的帧会被跳过
if i == streamCount-1 &amp;amp;&amp;amp; int64(sample.Timestamp) &amp;gt; endTime.Sub(stream.StartTime).Milliseconds() {
    break
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h3_15&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;fMP4 合并流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//62c8da6b99dfea39d4c94cceaf0f7f8e.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 的合并更加灵活，每个样本都被封装成独立的&lt;code&gt;moof&lt;/code&gt;+&lt;code&gt;mdat&lt;/code&gt;片段，保持了可独立解码的特性，更有利于流式传输和随机访问。这种方式特别适合与 MSE 和 HLS 结合，为实时流媒体播放提供支持，让用户能够在浏览器中直接高效地播放合并后的内容，而无需等待整个文件下载完成。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_16&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;合并中的编解码兼容性处理&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在多段录像合并过程中，我们面临的一个关键挑战是处理不同文件可能存在的编码参数差异。例如，在长时间录制过程中，摄像头可能因环境变化调整了视频分辨率，或者编码器可能重新初始化导致编码参数变化。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;为了解决这一问题，Monibuca 实现了一个智能的轨道版本管理系统，通过比较编码器特定数据 (ExtraData) 来识别变化：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//dc237c4d6fe97a47daee3e0b5045caf1.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这种设计确保了即使原始录像中存在编码参数变化，合并后的文件也能保持正确的解码参数，为用户提供流畅的播放体验。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_17&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;性能优化&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在处理大型视频文件或大量并发请求时，合并过程的性能是一个重要考量。我们采取了以下优化措施：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「流式处理」&lt;/strong&gt;：逐帧处理样本，避免将整个文件加载到内存&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「并行处理」&lt;/strong&gt;：对多个独立任务 (如文件解析) 采用并行处理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「智能缓存」&lt;/strong&gt;：缓存常用的编码参数和文件元数据&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「按需读取」&lt;/strong&gt;：仅读取和处理目标时间范围内的样本&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;这些优化使得系统能够高效处理大规模的录像合并请求，即使是跨越数小时或数天的长时间录像，也能在合理的时间内完成处理。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;多段 MP4 合并功能极大地增强了 Monibuca 作为流媒体服务器的灵活性和用户体验，使用户能够精确获取所需的录像内容，无论原始录像如何分段存储。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_18&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;媒体源扩展 (MSE) 与 fMP4 的兼容实现&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_19&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;MSE 技术概述&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;媒体源扩展 (Media Source Extensions, MSE) 是一种 JavaScript API，允许网页开发者直接操作媒体流数据。它使得自定义的自适应比特率流媒体播放器可以完全在浏览器中实现，无需依赖外部插件。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;MSE 的核心工作原理是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;创建一个 MediaSource 对象&lt;/li&gt; 
 &lt;li&gt;创建一个或多个 SourceBuffer 对象&lt;/li&gt; 
 &lt;li&gt;将媒体片段追加到 SourceBuffer 中&lt;/li&gt; 
 &lt;li&gt;浏览器负责解码和播放这些片段&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_20&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;fMP4 与 MSE 的完美适配&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 格式与 MSE 有着天然的兼容性，主要体现在：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;fMP4 的每个片段都可以独立解码&lt;/li&gt; 
 &lt;li&gt;初始化段和媒体段的清晰分离符合 MSE 的缓冲区管理模型&lt;/li&gt; 
 &lt;li&gt;时间戳的精确控制使得无缝拼接成为可能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下时序图展示了 fMP4 如何与 MSE 配合工作：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//0ed201a8d04e9af66b217e89bea2a9c9.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 Monibuca 的实现中，我们针对 MSE 进行了特殊优化：为每一帧创建独立的 moof 和 mdat。这种实现方式尽管会增加一些开销，但提供了极高的灵活性，特别适合于低延迟的实时流媒体场景和精确的帧级操作。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_21&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;HLS 与 fMP4 在实际应用中的集成&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在实际应用中，我们将 fMP4 技术与 HLS v7 协议结合，实现了基于时间范围的点播功能。系统可以根据用户指定的时间范围，从数据库中查找对应的 MP4 记录，然后生成 fMP4 格式的 HLS 播放列表：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//3c5b53514a61a55be7b2cdf68f245750.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;通过这种方式，我们在保持兼容现有 HLS 客户端的同时，利用了 fMP4 格式的优势，提供了更高效的流媒体服务。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//46b9a04cdc89947a1b35ae4dd3caa1f1.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_22&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;结论&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 作为一种现代媒体容器格式，结合了 MP4 的高效压缩和流媒体传输的灵活性，非常适合现代 Web 应用中的视频分发需求。通过与 HLS v7 和 MSE 技术的结合，可以实现更高效、更灵活的流媒体服务。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 Monibuca 项目的实践中，我们通过实现 MP4 到 fMP4 的转换、多段 MP4 文件的合并，以及针对 MSE 优化 fMP4 片段生成，成功构建了一套完整的流媒体解决方案。这些技术的应用使得我们的系统能够提供更好的用户体验，包括更快的启动时间、更平滑的画质切换以及更低的带宽消耗。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;随着视频技术的不断发展，fMP4 作为连接传统媒体格式与现代 Web 技术的桥梁，将继续在流媒体领域发挥重要作用。而 Monibuca 项目也将持续探索和优化这一技术，为用户提供更优质的流媒体服务。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;本文基于 claude 3.7 thinking 生成，经过作者校对无误&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/langhuihui/blog/17778966</link>
            <guid isPermaLink="false">https://my.oschina.net/langhuihui/blog/17778966</guid>
            <pubDate>Sun, 23 Feb 2025 06:37:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>行为正则化与顺序策略优化结合的离线多智能体学习算法</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;离线多智能体强化学习（MARL）是一个新兴领域，目标是在从预先收集的数据集中学习最佳的多智能体策略。随着人工智能技术的发展，多智能体系统在诸如自动驾驶、智能家居、机器人协作以及智能调度决策等方面展现了巨大的应用潜力。但现有的离线 MARL 方法也面临很多挑战，仍存在不协调行为和分布外联合动作的问题。为了应对这些挑战，中山大学计算机学院、美团履约平台技术部开展了学术合作项目，并取得了一些的成果，希望分享给大家。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8f9d9ada748adf5e77677e51a6732f4eece.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;离线多智能体强化学习（MARL）是一个新兴领域，目标是在从预先收集的数据集中学习最佳的多智能体策略。相比於单智能体情况，多智能体环境涉及到大规模的联合状态------动作空间和多智能体间的耦合行为，这给离线策略优化带来了额外的复杂性。随着人工智能技术的发展，多智能体系统在诸如自动驾驶、智能家居、机器人协作以及智能调度决策等方面展现了巨大的应用潜力。但是离线 MARL 较单智能体情况下更加复杂，其涉及庞大的联合状态-动作空间和多智能体间的复杂互动行为，这使得离线策略优化成为一项艰巨的任务。&lt;/p&gt; 
&lt;p&gt;离线 MARL 面临的主要挑战包括：一是如何有效应对分布偏移问题，即在策略评估过程中，分布外（OOD）样本可能导致误差积累；二是在多智能体环境下，协调多个智能体的行为显得尤为困难。现有的离线 MARL 方法尽管取得了一些进展，但仍存在不协调行为和分布外联合动作的问题。为了应对这些挑战，中山大学计算机学院、美团履约平台技术部开展了学术合作项目，联合提出了一种新颖的离线 MARL 算法------样本内顺序策略优化（In-Sample Sequential Policy Optimization, InSPO），该方法通过顺序更新每个智能体的策略，避免选择 OOD 联合动作，同时增强了智能体之间的协调性。&lt;/p&gt; 
&lt;p&gt;2024 年 12 月 11 日，中山大学计算机学院的刘宗凯、林谦、余超和伍夏威等学术界的专家和教授，跟美团技术团队联合发表了一篇技术论文《Offline Multi-Agent Reinforcement Learning via In-Sample Sequential Policy Optimization》（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2412.07639&quot; target=&quot;_blank&quot;&gt;论文下载&lt;/a&gt;）。研究团队的主要贡献在于提出了 InSPO 算法，该算法不仅避免了 OOD 联合动作，还通过探索行为策略中的低概率动作，解决了提前收敛到次优解的问题。理论上 InSPO 保证了策略的单调改进，并收敛到量化响应均衡（QRE）。实验结果表明，InSPO 在多个离线 MARL 任务中表现出了显著的效果，与当前最先进的方法相比具有明显的优势。&lt;/p&gt; 
&lt;h2&gt;合作型马尔可夫博弈&lt;/h2&gt; 
&lt;p&gt;在理解离线多智能体强化学习（MARL）中的样本内顺序策略优化之前，首先需要了解合作型马尔可夫博弈的基本概念和框架。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//675e1c6983a2a518a6e15a7a591ab84d.png&quot; alt=&quot;图 1：XOR 博弈（a）是联合行动的奖励矩阵（b）是数据集的分布&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;定义与基本概念&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4665791dd1b8ef718226942c74fe824c828.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;IGM 原则与值分解&lt;/h3&gt; 
&lt;p&gt;在多智能体系统中，直接计算联合 Q 函数是一个极其复杂的问题，因为状态-动作空间会随着智能体数量的增加而指数级增长。值分解方法通过将联合 Q 函数分解为每个智能体的个体 Q 函数，极大地简化了这个计算过程。具体来说，联合 Q 函数 Q(s,a) 被表示为每个智能体 Q 函数$Q_i$的组合。这种分解方式依赖于个体-全局-最大化（IGM）原则，即最优联合动作可以通过每个智能体的贪婪动作来识别。然而，这种方法在处理环境中存在多模态奖励图谱时可能会遇到困难，因为 IGM 假设往往会被破坏。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//5e4f5f927e8d434ba6bc41c90745ef45.png&quot; alt=&quot;图 2：M-NE 博弈（a）是联合行动的奖励矩阵（b）是数据集的分布&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;离线 MARL 中的行为正则化马尔可夫博弈&lt;/h3&gt; 
&lt;p&gt;为了有效应对离线 MARL 中的分布偏移问题，行为正则化马尔可夫博弈引入了一个与数据相关的正则化项。这个正则化项通过在奖励函数中加入额外的惩罚，迫使学习到的策略尽量接近行为策略，从而避免选择分布外的动作。在这个框架中，策略的目标是最大化期望折扣回报，同时减去正则化项，以此平衡策略的探索和利用。这样不仅提高了策略的稳定性，还能防止其收敛到局部最优解。&lt;/p&gt; 
&lt;p&gt;通过引入这些基础概念和原理，合作型马尔可夫博弈为多智能体系统的行为建模和优化提供了一个强大的工具。尤其在离线环境中，结合行为正则化和值分解方法，可以有效解决多智能体间的协调问题，并提高策略的整体表现。&lt;/p&gt; 
&lt;h2&gt;样本内顺序策略优化&lt;/h2&gt; 
&lt;p&gt;在离线多智能体强化学习（MARL）中，策略的优化往往面临着分布外（OOD）联合动作和局部最优解问题。为了应对这些挑战，研究团队提出了一种创新的方法------样本内顺序策略优化（In-Sample Sequential Policy Optimization, InSPO）。该方法在行为正则化马尔可夫博弈框架下进行，结合了逆 KL 散度和最大熵正则化，旨在通过顺序更新每个智能体的策略，避免选择 OOD 联合动作，同时增强智能体之间的协调。&lt;/p&gt; 
&lt;h3&gt;样本内顺序策略优化的数学推导&lt;/h3&gt; 
&lt;p&gt;InSPO 方法的核心在于通过逆 KL 散度进行行为正则化，从而确保学习到的策略与行为策略共享相同的支撑集，避免选择分布外的动作。具体来说，目标函数中的逆 KL 散度项可以分解为各个智能体的独立项，这使得顺序更新每个智能体的策略成为可能。数学上通过使用 Karush-Kuhn-Tucker（KKT）条件，推导出目标函数的闭式解，从而实现样本内学习。最终的优化目标为最小化 KL 散度，以确保策略更新的有效性和一致性。&lt;/p&gt; 
&lt;h3&gt;最大熵行为正则化马尔可夫博弈&lt;/h3&gt; 
&lt;p&gt;为了进一步增强探索性，防止策略过早收敛到局部最优解，InSPO 引入了最大熵行为正则化马尔可夫博弈（MEBR-MG）框架。在这个框架中，策略优化的目标函数不仅包含逆 KL 散度项，还引入了策略熵项。通过这种方式，优化目标能够促使策略在高概率动作和低概率动作之间保持平衡，鼓励充分探索低概率动作，从而避免局部最优解。理论上，最大熵行为正则化还能够确保策略收敛到量化响应均衡（QRE），即在面对扰动奖励时，策略仍能维持稳定的性能。&lt;/p&gt; 
&lt;p&gt;通过上述方法，样本内顺序策略优化不仅有效解决了离线 MARL 中的 OOD 联合动作问题，还通过策略熵的引入，显著提高了策略的探索能力和全局最优解的发现概率。&lt;/p&gt; 
&lt;h2&gt;算法细节&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;算法 1: InSPO 的步骤&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;InSPO 算法的核心在于通过顺序更新的方式，逐步优化每个智能体的策略，最终实现全局最优。具体步骤如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e16c132bea19b92a03c06ccb9aa7a13b2eb.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;这种顺序更新的策略，确保了每一步的策略优化都是在样本内进行的，避免了分布外动作的选择，提高了策略的稳定性和有效性。&lt;/p&gt; 
&lt;h3&gt;策略评估&lt;/h3&gt; 
&lt;p&gt;策略评估是 InSPO 算法中的一个关键步骤。根据更新的 Q 函数，计算当前策略的期望回报。在多智能体环境中，由于联合动作空间的庞大，研究团队采用了局部 Q 函数来进行近似。在策略评估过程中，需要顺序地更新每个智能体的局部 Q 函数，使其能反映最新的策略信息。具体的目标函数包括一个权重项，用于平衡策略的探索和利用。此外，为了降低重要性采样比率的高方差，InSPO 采用了重要性重采样技术，通过概率比例重采样构建新的数据集，从而稳定算法的训练效果。&lt;/p&gt; 
&lt;h3&gt;策略改进&lt;/h3&gt; 
&lt;p&gt;在获得优化的局部 Q 函数后，接下来就是策略改进步骤。通过最小化 KL 散度，InSPO 能够在保持行为策略特性的同时，逐步优化每个智能体的策略。在具体操作中，使用推导出的目标函数来指导每个智能体的策略更新，这一过程确保了策略的收敛性和改进性。&lt;/p&gt; 
&lt;h3&gt;实际应用及实现细节&lt;/h3&gt; 
&lt;p&gt;在实际应用中，InSPO 不仅需要在理论上保证策略的有效性，还需要在大规模状态-动作空间中保持高效的计算性能。为了实现这一点，论文对算法进行了多方面的优化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;局部 Q 函数的优化&lt;/strong&gt;：为了避免联合动作空间的指数级增长，他们使用局部 Q 函数来近似全局 Q 函数，并通过顺序更新的方法逐步优化每个智能体的局部 Q 函数。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;重要性重采样&lt;/strong&gt;：通过重要性重采样技术，构建新的数据集，降低采样比率的方差，提高训练的稳定性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自动调节温度参数α&lt;/strong&gt;：为了找到合适的保守程度，他们实现了自动调节α的机制，根据目标值进行动态调整，从而进一步提高性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;这些优化措施使得 InSPO 在处理复杂的多智能体任务时，能够保持高效的性能和良好的收敛性。通过这些实际应用和实现细节，InSPO 展现了其在离线 MARL 中的巨大潜力和应用价值。&lt;/p&gt; 
&lt;h2&gt;实验验证&lt;/h2&gt; 
&lt;p&gt;在 M-NE 博弈中，研究团队评估了 InSPO 避免收敛至局部最优的能力。实验使用两个数据集：一个是由均匀策略收集的平衡数据集，另一个是由接近局部最优的策略收集的不平衡数据集。结果显示，在平衡数据集上，大多数算法都能找到全局最优解，而在不平衡数据集上，只有 InSPO 正确识别出全局最优解。这表明，在存在多个局部最优解的环境中，数据集分布对算法收敛性有显著影响。InSPO 通过全面探索数据集，避免了次优解的影响，展现了其强大的全局最优解识别能力。&lt;/p&gt; 
&lt;h3&gt;桥博弈的实验结果&lt;/h3&gt; 
&lt;p&gt;桥博弈是一个类似于时间版本 XOR 博弈的网格世界马尔可夫博弈。在这个实验中，他们使用了两个数据集：optimal 数据集和 mixed 数据集。optimal 数据集包含了由最优确定性策略生成的 500 条轨迹，而 mixed 数据集则包括 optimal 数据集和由均匀随机策略生成的额外 500 条轨迹。实验结果表明，只有 InSPO 和 AlberDICE 在这两个数据集上都达到了近乎最优的性能。相比之下，值分解方法未能收敛，并产生了不理想的结果。这进一步证明了 InSPO 在复杂多智能体任务中的有效性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//0f145b802f387ab171fa3ad7494622e1.png&quot; alt=&quot;图 3：数据集 XOR 博弈的最终联合策略 (b)&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;星际争霸 II 微操作基准测试的实验结果&lt;/h3&gt; 
&lt;p&gt;为了进一步验证 InSPO 的性能，研究团队将研究扩展到星际争霸 II 微操作基准测试，这是一个高维复杂的环境。实验使用了四个代表性地图，并采用了四个不同的数据集：medium、expert、medium-replay 和 mixed。在这些实验中，尽管值分解方法在该环境中表现出色，InSPO 依然展示了其竞争力，在大多数任务中取得了最先进的结果。实验结果证明了 InSPO 在高维复杂环境中的应用潜力。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//e6125c6f31fd67575d36610fbf3f2a5e.png&quot; alt=&quot;表 1-4：星际争霸 II 微管理的平均测试获胜率&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//ddb9c2e5dbf5c12308d71df30e7df19c.png&quot; alt=&quot;图 4：开始时的桥&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;消融研究&lt;/h3&gt; 
&lt;p&gt;为了评估 InSPO 中不同组件的影响，研究团队进行了消融研究。首先他们在不平衡数据集上的 M-NE 博弈中测试了去除熵项的 InSPO，结果显示没有熵扰动的 InSPO 无法逃离局部最优。在 XOR 博弈中测试了同时更新而非顺序更新的 InSPO，由于更新方向的冲突，未能学习到最优策略，并面临 OOD 联合动作问题。此外，研究团队还评估了温度参数α对策略保守程度的影响，结果表明自动调节的α能够找到合适的值，进一步提升性能。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6f3132a841883f63a22ecb2a4ce8641f.png&quot; alt=&quot;图 5：熵消融和顺序更新方案。（a） 对于不平衡数据集，在 M-NE 博弈中没有熵的 InSPO。（b） 是数据集（b）XOR 博弈上 InSPO 的同步更新版本&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通过这些实验验证，InSPO 展现了其在解决离线 MARL 中的局部最优收敛问题、增强策略探索能力和提高全局最优解识别能力方面的优势。实验结果不仅证明了 InSPO 的理论可行性，还展示了其在实际应用中的强大潜力。&lt;/p&gt; 
&lt;h2&gt;总结&lt;/h2&gt; 
&lt;p&gt;在本研究中，研究团队提出了一种新颖的离线多智能体强化学习（MARL）算法------样本内顺序策略优化（In-Sample Sequential Policy Optimization, InSPO）。通过引入逆 KL 散度和策略熵，有效地解决了离线 MARL 中的分布外（OOD）联合动作和局部最优解问题。理论分析和实验验证表明，InSPO 不仅能够实现策略的单调改进，并最终收敛到量化响应均衡（QRE），还在多个基准测试中展示了优越的性能。与现有的离线 MARL 方法相比，InSPO 在应对复杂多智能体任务、提高策略稳定性和探索能力方面具有显著优势。&lt;/p&gt; 
&lt;p&gt;尽管 InSPO 在离线 MARL 领域取得了突破性的进展，但仍有许多值得进一步探索的方向。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;算法扩展与优化&lt;/strong&gt;：未来可以考虑将 InSPO 与其他先进的 MARL 算法相结合，进一步提升策略优化的效果。同时，研究如何在更大规模、更复杂的环境中实现高效的策略优化，也是一个重要的方向。&lt;/li&gt; 
 &lt;li&gt;**数据集增强与生成：在离线 MARL 中，数据集的质量和分布对算法性能有着直接影响。未来可以探索通过生成对抗网络（GANs）等技术生成高质量的数据集，从而改善策略学习的效果。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多模态奖励图谱的应对&lt;/strong&gt;：在存在多个局部最优解的环境中，如何更有效地识别和收敛到全局最优解，仍是一个具有挑战性的问题。研究新的正则化方法和优化策略，能够进一步提升 InSPO 的鲁棒性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;实际应用与验证&lt;/strong&gt;：将 InSPO 应用到更多实际场景中，如智能调度、智能交通系统、自动驾驶、智能制造等，验证其在真实环境中的性能和稳定性，将是未来的重要研究方向。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通过这些方向的深入研究与探索，有望进一步提升离线 MARL 算法的性能和应用价值，推动人工智能技术在多智能体系统中的广泛应用。希望本篇论文解读能够帮助到从事相关研究的同学。&lt;/p&gt; 
&lt;p&gt;| 关注「美团技术团队」微信公众号，在公众号菜单栏对话框回复【2024 年货】、【2023 年货】、【2023 年货】、【2022 年货】、【2021 年货】、【2020 年货】、【2019 年货】、【2018 年货】、【2017 年货】等关键词，可查看美团技术团队历年技术文章合集。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//55b56a0b38a08a1b749b50406b9b0291.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;| 本文系美团技术团队出品，著作权归属美团。欢迎出于分享和交流等非商业目的转载或使用本文内容，敬请注明&quot;内容转载自美团技术团队&quot;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=mailto%3A%E3%80%82%E6%9C%AC%E6%96%87%E6%9C%AA%E7%BB%8F%E8%AE%B8%E5%8F%AF%EF%BC%8C%E4%B8%8D%E5%BE%97%E8%BF%9B%E8%A1%8C%E5%95%86%E4%B8%9A%E6%80%A7%E8%BD%AC%E8%BD%BD%E6%88%96%E8%80%85%E4%BD%BF%E7%94%A8%E3%80%82%E4%BB%BB%E4%BD%95%E5%95%86%E7%94%A8%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%AF%B7%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%87%B3tech%40meituan.com%E7%94%B3%E8%AF%B7%E6%8E%88%E6%9D%83%E3%80%82&quot; target=&quot;_blank&quot;&gt;。本文未经许可，不得进行商业性转载或者使用。任何商用行为，请发送邮件至 tech@meituan.com 申请授权。&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/meituantech/blog/17697665</link>
            <guid isPermaLink="false">https://my.oschina.net/meituantech/blog/17697665</guid>
            <pubDate>Sun, 23 Feb 2025 06:29:00 GMT</pubDate>
            <author>原创</author>
        </item>
        <item>
            <title>雷军身家超钟睒睒成为中国新首富</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2 月 27 日，小米股价今日盘中一度涨超 4%，这一强势表现不仅刷新了小米集团股价的历史纪录，也使其创始人雷军的财富水涨船高，成功超越农夫山泉创始人钟睒睒，成为中国新首富。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;雷军的总财富估值，主要基于以下三部分的资产计算：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;小米集团：小米集团市值 1.41 万亿港元，雷军持股约 24.2%，对应 3412 亿元人民币。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;金山系：金山办公、金山软件、金山云三大上市平台，为雷军贡献约 441 亿元人民币的资产财富值。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;顺为资本：雷军还通过顺为资本这家持股 51% 的投资机构，押中了字节跳动、宇树科技等独角兽。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;而雷军的投资版图远不止这些，还有蔚来汽车、人人车、小鹏汽车等。这些加起来，大概能为雷军贡献约 500 亿元人民币的资产财富值。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;366&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5aad92e817e72a9f0305c6ec222618f2ebe.webp&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335980</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335980</guid>
            <pubDate>Sun, 23 Feb 2025 06:19:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>纵目科技创始人回应「跑路」传闻：我必须跳出盒子求解</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年伊始，智能驾驶明星创业公司纵目科技因创始人「跑路失联」、全员欠薪、社保断缴、高管离职私转大额款项等负面消息深陷舆论漩涡。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2 月 26 日，纵目科技创始人兼 CEO 唐锐在《中国企业家》的采访中做出回应媒体表示，自己并未失联，目前正在积极寻求海外融资。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;之所以有所谓跑路和失联的消息，是一些根本性的矛盾在短期之内无法解决，而我又认为必须在海外求解的过程中的必然舆论。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我确实在和联席 CEO 商议之后在春节之前离开国内，并且暂未回国。离开至今未回国，出于多重考虑，最主要的一点还是，希望能够在业务重整期间在海外寻求蚕丛新的落地业务机会和资金来推动走出困境，寻找跳出盒子的解法。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我和相关方保持高频沟通，失联一说无从谈起。暂时留在海外，也是我现阶段的一个思路方向，因为只有一定体量的增量资金进来才能解开当下困境。据我持续的谈判获取的信息来看，海外募资的可能性更多元。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;唐锐透露，其&lt;strong&gt;工作目前主要集中在于两个方面：&lt;/strong&gt;一是和国内股东以及股东组成的应急小组共同解决国内业务重整过程中的问题。二是尽可能维持海外的蚕丛业务，并寻求海外蚕丛业务的潜在投资人，并且在合适的时间将海外蚕丛业务的投资人和国内的重整过程进行并轨处理。「我认为这是目前能够替所有关联方挽回损失并创造最大化价值的唯一最优解。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;针对相关报道称纵目科技及下属公司法务、财务、HR、EBU 等 8 名高管组成的小团体，在 1 月 26 日下午至 27 日凌晨 5 点期间，以 3.5 个月的欠薪名义，私自将 88 万元保供款转至个人账户的疑问，唐锐则澄清称：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;1) 具体的发放，包括决定做出，具体涉及人名清单以及金额，我是事后得知。2) 该决策的做出，在那个时间点，有一定合理性，但是决策高度和决策质量不够（至少我这么认为并且批评这一决策）。3) 该决策的流程中有较多不合规性。4) 让员工比较愤怒的是，该名单上的员工理论上是领取该款项后积极尽职，但是从事后来看，完全没有。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，由于社保缴纳问题，目前基本上处于大部分员工包括管理团队离职的状态。然后一些核心的技术骨干和极个别管理团队成员仍然按照离职状态在尽可能帮助业务维持和推动重整解决。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;纵目科技成立于 2013，曾三度冲击 IPO。作为创始人，唐锐本科和研究生均毕业于清华大学电子工程系。硕士毕业后，他加入 Centrality Communications Inc.成为一名软件工程师。此后，他又加入英国半导体制造商 CSR 公司，担任汽车事业群资深工程总监。2012 年，唐锐回国创业，创立纵目科技，踩中了环视 ADAS 和自动驾驶技术快速发展的风口。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多详情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fq3Vk8YQKHfazhv51wLMgzA&quot; target=&quot;_blank&quot;&gt;查看采访全文&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335979</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335979</guid>
            <pubDate>Sun, 23 Feb 2025 06:15:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>我国牵头制定的养老机器人国际标准正式发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;国际电工委员会 (IEC) 近日正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwebstore.iec.ch%2Fen%2Fpublication%2F66358&quot; target=&quot;_blank&quot;&gt;发布&lt;/a&gt;由我国牵头制定的养老机器人国际标准 (IEC 63310《互联家庭环境下使用的主动辅助生活机器人性能准则》)。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该项标准依据老年人生理和行为特点，为各类养老机器人的产品设计、制造、测试和认证等提供基准，将引领全球养老机器人产业健康发展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;299&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b874dc1d863aab5b2b4cb46b8605907367b.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该项标准聚焦互联家居环境中老年人在日常生活、健康护理等各个方面的需求和特征，基于老年用户所需的辅助支持水平，提出养老机器人的功能和性能分类，除了可用性、可靠性、无障碍、能耗和噪声等通用要求以外，还对养老机器人提供的健康状况和紧急情况监测服务，与家人及医护人员的通信支持，多样化的家务、娱乐、家居管理、照护等活动支持，外出和助行等移动性支持，信息和数据管理性能等分别提出了技术要求。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335965</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335965</guid>
            <pubDate>Sun, 23 Feb 2025 03:41:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Kubescape 成为 CNCF 孵化项目</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;CNCF 技术监督委员会 (TOC) 已投票&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cncf.io%2Fblog%2F2025%2F02%2F26%2Fkubescape-becomes-a-cncf-incubating-project%2F&quot; target=&quot;_blank&quot;&gt;接受&lt;/a&gt; Kubescape 作为 CNCF 孵化项目。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;261&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a19d8b749f4a46c1d491ea261d06f415ae.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根据介绍，Kubescape 是一个开源的 Kubernetes 安全项目，旨在为整个开发和部署生命周期提供全面的安全覆盖，于 2022 年 11 月进入云原生计算基金会 (CNCF) 沙箱。它提供姿态和漏洞管理，以及自动加固策略。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，Kubescape 还提供基于 eBPF 的威胁检测功能，能够识别云工作负载的异常和可疑行为。Kubescape 既可以作为 CLI 工具，也可以作为 Kubernetes 操作器使用。CLI 工具用于手动扫描、脚本编写和 CI/CD 集成，而 Kubescape 操作器则是一组微服务，从内部监控您的 Kubernetes 集群。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Kubescape 由专注于云运行时安全的网络安全公司 ARMO 于 2021 年创建。自成立以来，Kubescape 一直是增长最快的开源安全项目之一，在云原生社区中获得了广泛采用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Kubescape 也是首个 CNCF Kubernetes 安全扫描器。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335963/kubescape-cncf-incubating</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335963/kubescape-cncf-incubating</guid>
            <pubDate>Sun, 23 Feb 2025 03:27:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>特斯拉 FSD 国内训练数据合规，但仍处于 L2 级自动驾驶级别</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;2 月 26 日，特斯拉中国正式启动 2024.45.32.12 版车机系统升级，此次更新重点向用户推送&quot;完全自动驾驶能力（FSD）智能辅助驾驶&quot;功能的进阶服务。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3fa439b9bf6bdc587e0ea49bdbf9ceb1965.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fttarticle%2Fp%2Fshow%3Fid%3D2309405138367066014026&quot; target=&quot;_blank&quot;&gt;据《网易科技》的独家报道&lt;/a&gt;&lt;/u&gt;，特斯拉「FSD 智能辅助驾驶」的训练是在数据采集使用完全合规的情况下完成的。&lt;/p&gt; 
&lt;p&gt;此外，&lt;strong&gt;特斯拉此次在中国沿用&quot;FSD 智能辅助驾驶&quot;的命名体系，旨在保持全球品牌技术标识的统一性&lt;/strong&gt;。&lt;strong&gt;当前特斯拉 FSD 仍属于 L2 级辅助驾驶范畴，要求驾驶员全程保持对车辆的控制权&lt;/strong&gt;。特斯拉中国官网特别强调，用户在使用过程中必须将双手置于方向盘感应区域，视线不可脱离路面，系统会通过实时摄像头监测确保驾驶专注度。&lt;/p&gt; 
&lt;p&gt;据悉，此次发布的 FSD 中国版针对本土交通环境进行了超过 200 项专项优化。值得关注的是，此次升级暂未涵盖上月刚发布的 Model Y 焕新版车型。预计将在未来通过 OTA 方式完成功能匹配。&lt;/p&gt; 
&lt;p&gt;随着本次软件升级的推进，特斯拉成为首个在中国市场实现高阶智能驾驶功能规模化部署的外资车企。&lt;/p&gt; 
&lt;p&gt;最后看看 2016 年推出至今，特斯拉 FSD&amp;nbsp;的发展脉络：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2014 年，Autopilot 辅助驾驶功能首次搭载在 Model S 上。&lt;/li&gt; 
 &lt;li&gt;2016 年，特斯拉首次发布 FSD。从一开始，FSD 智能辅助驾驶功能就是作为 EAP（增强版辅助驾驶功能）的升级选项提供给广大消费者的。&lt;/li&gt; 
 &lt;li&gt;在此后多年中，FSD 智能辅助驾驶功能不断进化，2023 年特斯拉在行业内率先量产落地端到端技术架构，并且持续更新优化中。&lt;/li&gt; 
 &lt;li&gt;2019 年，特斯拉发布基于自研 FSD 芯片的 HW 3.0 系统，显著提升了计算能力和系统性能。&lt;/li&gt; 
 &lt;li&gt;2021 年 7 月 10 日，特斯拉在美发布了 FSD Beta V9，这是特斯拉首次采用纯视觉方案的 FSD Beta 版本，标志着特斯拉在自动驾驶技术上的重大进步。&lt;/li&gt; 
 &lt;li&gt;2022 年，特斯拉对「FSD 智能辅助驾驶功能」进行了多次更新，包括 FSD Beta 10.69.25.2、10.69.3.1、10.69.2.3 等版本，逐步提升了系统的性能和稳定性。&lt;/li&gt; 
 &lt;li&gt;2023 年 11 月，特斯拉开始向员工推出 FSD Beta V12。2024 年 1 月，特斯拉正式向车主推送了 FSD V12.12，使特斯拉的智能辅助驾驶功能取得重大进展，应用端到端神经网络，并经过数百万个视频剪辑的训练后，该系统取代了超过 30 万行的 C++ 代码。&lt;/li&gt; 
 &lt;li&gt;2024 年底，特斯拉在美发布 FSD V13，该版本将引入停车和自动泊车功能，并进一步延长驾驶员干预的间隔距离。&lt;/li&gt; 
 &lt;li&gt;2025 年 2 月 25 日，特斯拉正式在中国市场分批次推送「FSD 智能辅助驾驶功能」，软件版本为 2024.45.32.12，今年，特斯拉还计划于 6 月在德克萨斯州奥斯汀推出无人监督的 FSD 服务，并计划在 2025 年底前在美国大部分地区推出 FSD 服务。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;相关阅读&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335792&quot; target=&quot;news&quot;&gt;特斯拉 FSD 闯红灯，马斯克回应：我们用了中国互联网上的公开视频数据来训练&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335712&quot; target=&quot;news&quot;&gt;特斯拉 FSD 部分能力在中国已推送，命名为「FSD 智能辅助驾驶功能」&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335957</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335957</guid>
            <pubDate>Sun, 23 Feb 2025 03:11:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>DeepSeek 开源周第四日：DualPipe、EPLB 优化并行策略</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;DeepSeek「开源周」的进度已进行到第四天，今天&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fdeepseek_ai%2Fstatus%2F1894931931554558199&quot; target=&quot;_blank&quot;&gt;开源&lt;/a&gt;了&lt;strong&gt;优化并行策略&lt;/strong&gt;的项目。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;DualPipe - 一种用于 V3 / R1 训练中计算-通信重叠的双向管道并行算法。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;EPLB - 一种用于 V3 / R1 的专家并行负载平衡器。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;分析 V3 / R1 中的计算-通信重叠。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0227/104055_53r7_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;具体项目介绍和链接如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2FDualPipe&quot; target=&quot;_blank&quot;&gt;DualPipe&lt;/a&gt;：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;「双管道（DualPipe）」是在《深度搜索-V3 技术报告》中引入的一种创新的双向流水线并行算法。它实现了正向和反向计算-通信阶段的完全重叠，同时也减少了流水线气泡。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2Feplb&quot; target=&quot;_blank&quot;&gt;专家并行负载均衡器（EPLB）&amp;nbsp;&lt;/a&gt;：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在使用专家并行（EP）时，不同的专家被分配到不同的 GPU。由于不同专家的负载可能因当前工作负载而异，因此保持不同 GPU 的负载平衡非常重要。正如在 DeepSeek-V3 论文中所述，我们采用冗余专家策略，复制高负载的专家。&lt;/p&gt; 
&lt;p&gt;然后，我们通过启发式方法将复制的专家分配到 GPU 上，以确保不同 GPU 之间的负载平衡。&lt;/p&gt; 
&lt;p&gt;此外，由于 DeepSeek-V3 中使用了分组受限的专家路由，我们还尽可能尝试将同一组的专家放置在同一节点上，以减少节点间的数据流量。为了便于复现和部署，我们在 eplb.py 中开源了我们部署的 EP 负载均衡算法。该算法根据估计的专家负载计算平衡的专家复制和放置计划。&lt;/p&gt; 
&lt;p&gt;请注意，预测专家负载的确切方法不在此存储库的范围内。一种常见的方法是使用历史统计数据的移动平均值。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2Fprofile-data&quot; target=&quot;_blank&quot;&gt;分析 V3 / R1 中的计算-通信重叠&lt;/a&gt;：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在这里，我们公开分享来自我们的训练和推理框架的分析数据，以帮助社区更好地理解通信-计算重叠策略和底层实现细节。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335953</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335953</guid>
            <pubDate>Sun, 23 Feb 2025 02:44:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>Mozilla 推出 Firefox 使用条款，更新隐私声明</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;在&lt;a href=&quot;https://www.oschina.net/news/335497/mozilla-leadership-growth-planning-updates&quot; target=&quot;news&quot;&gt;最近的领导层变更后&lt;/a&gt;，Mozilla 宣布首次推出了 Firefox&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fabout%2Flegal%2Fterms%2Ffirefox%2F&quot; target=&quot;_blank&quot;&gt;使用条款，&lt;/a&gt;以及&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fabout%2Flegal%2Fterms%2Ffirefox%2F&quot; target=&quot;_blank&quot;&gt;更新的&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fprivacy%2Ffirefox%2F%23notice&quot; target=&quot;_blank&quot;&gt;隐私声明&lt;/a&gt;。&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;「&lt;span style=&quot;color:#000000&quot;&gt;为什么是现在？虽然我们过去一直依赖 Firefox 的开源许可证和对您的公开承诺，但如今我们正处于一个截然不同的技术环境中。我们希望让这些承诺变得非常清晰和易于理解。&lt;/span&gt;」&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;公告称，此举旨在使用户在使用 Firefox 时为他们提供「更多透明度」，了解自己的「权利和权限」，以及 Mozilla 帮助他们实现这些权利的「权利」。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;您授予 Mozilla 运营 Firefox 所需的一切权利，包括按照&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fprivacy%2Ffirefox%2F&quot; target=&quot;_blank&quot;&gt;Firefox 隐私声明&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;中的描述处理数据，以及代表您帮助您浏览互联网。当您通过 Firefox 上传或输入信息时，您特此授予我们非排他性、免版税的全球许可，以使用该信息来帮助您导航、体验在线内容并与之交互，就像您在使用 Firefox 时所表明的那样。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;242&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-558bffc80cf22899ff80fc958d76ef7ac5c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;该条款预计将从 3 月初开始将其作为新用户的标准产品体验的一部分推出，并在今年晚些时候将其作为现有用户的标准产品体验的一部分。&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;与此同时，更新的隐私声明则&lt;/span&gt;更&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Fprivacy%2Ffirefox%2F&quot; target=&quot;_blank&quot;&gt;详细地解释了相关数据实践&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。增加了一些琐碎的注意事项，以涵盖公司计划中的 AI 聊天机器人集成、基于云的服务功能，以及 Firefox&amp;nbsp;新标签页上更多的广告和赞助商内容。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335950/firefox-terms</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335950/firefox-terms</guid>
            <pubDate>Sun, 23 Feb 2025 02:30:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>英伟达公布 Q4 及 2025 财年财报，黄仁勋感叹：需求惊人</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;当时时间 2 月 26 日，英伟达&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvidianews.nvidia.com%2Fnews%2Fnvidia-announces-financial-results-for-fourth-quarter-and-fiscal-2025&quot; target=&quot;_blank&quot;&gt;公布&lt;/a&gt;&lt;/u&gt;了其 Q4 及 2025 财年财报数据。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;542&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0227/102425_BHSc_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;据公布的财报数据显示，&lt;strong&gt;英伟达第四财季营收为 393.31 亿美元，较上年同期增长 78%&lt;/strong&gt;。2025 财年全年营收 1305 亿美元，较 2024 财年增长 114%。具体显示，H20 芯片的订单激增，Blackwell 平台的前景一片光明，更多高效模型的出现也点燃了对 AI 基础设施更加旺盛的需求。&lt;/p&gt; 
&lt;p&gt;英伟达 CEO 黄仁勋在财报中表示，公司已成功大规模量产 Blackwell AI 超级计算机&lt;strong&gt;，并在首个季度实现了数十亿美元的销售额&lt;/strong&gt;，市场对 Blackwell 芯片的需求令人惊叹。据悉，Blackwell 芯片架构亮相于去年的 GTC 2024 开发者大会，以美国数学家 David Blackwell 命名，旨在支持大规模 AI 模型的训练和推理，具备高性能和高效率的特点。&lt;/p&gt; 
&lt;p&gt;此外，黄仁勋在本次财报电话会议中也提到，&lt;strong&gt;「DeepSeek R1 点燃了全球的热情」&lt;/strong&gt;。短期内，开源引发的算力热潮直接推高了 GPU 销量。&lt;/p&gt; 
&lt;p&gt;黄仁勋上周接受采访时也表示，尽管 DeepSeek 确实在预训练模型方面取得进展，但后训练阶段仍需要庞大算力；后训练才是培养 AI 模型智力、即学习如何解决问题和推理的最关键环节。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335948/nvidia-financial-results-for-fourth-quarter-and-fiscal-2025</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335948/nvidia-financial-results-for-fourth-quarter-and-fiscal-2025</guid>
            <pubDate>Sun, 23 Feb 2025 02:28:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>腾讯元宝灰测接入微信九宫格</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;腾讯 AI 助手元宝近期在接入 DeepSeek-R1 后，开始大量推广投放。&lt;/p&gt; 
&lt;p&gt;在支援微信搜索后，腾讯元宝还在近期灰度测试接入微信生活服务「九宫格」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-39fda3e96941cfc04cf67d5d2681f39c5d7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;微信九宫格一直是互联网产品梦寐以求的流量接入点。此前，滴滴、美团、拼多多都曾在此接入服务入口。&lt;/p&gt; 
&lt;p&gt;据悉，近期元宝不仅在腾讯生态产品中推广，还在抖音、B 站、知乎等多个平台大量投放广告。 据 DataEye 数据显示，腾讯元宝自 2 月 18 日起投放量增加，其投放数量已超过字节豆包与月之暗面 Kimi。&lt;/p&gt; 
&lt;p&gt;2 月 22 日，腾讯元宝曾在苹果中国区应用商店免费榜下载量超越豆包，上升至第二名，仅次于近期大火的 Deepseek。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335947</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335947</guid>
            <pubDate>Sun, 23 Feb 2025 02:20:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>「源升智能」完成数千万元天使轮融资</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《智能涌现》消息称，专注于机器人灵巧手研发的创业公司源升智能机器人（深圳）有限公司（以下简称「源升智能」）宣布完成数千万元天使轮融资，本轮融资由深创投领投，昆仲资本和中科创星跟投，浪潮资本担任本轮融资独家财务顾问。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;融资将主要用于加速核心产品研发，包括新一代机器人灵巧手及高性能触觉传感器系统的开发与优化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;源升智能成立于 2024 年 12 月，创始人杨思成毕业于清华大学，先后在华为和腾讯任职，是最早一批加入腾讯 Roboticsx 实验室的核心成员，拥有丰富的技术研发和规模量产经验，申请发明专利 60 余项。在腾讯 Robotics X 实验室期间，杨思成担任灵巧手项目总负责人，主导了总体方案设计与关键技术的实现。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;联合创始人李望维博士毕业于新加坡国立大学，拥有超过十年的触觉传感器研发经验，是腾讯 Robotics X 实验室前触觉感知系统总负责人，曾在 Science Robotics 等顶刊顶会上发表论文 30 余篇。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335945</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335945</guid>
            <pubDate>Sun, 23 Feb 2025 02:14:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>MaxKB 上架至阿里云轻量应用服务器镜像市场</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#000000; text-align:start&quot;&gt;近日，MaxKB 开源知识库问答系统已上架至阿里云轻量应用服务器镜像市场，目前是阿里云此类镜像市场中唯一推荐的 AI 应用镜像。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;840&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4ae1f4c16c63ca08c7cc52379051c316feb.png&quot; width=&quot;1855&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲图 1 MaxKB 已经上架至阿里云轻量应用服务器镜像市场&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;MaxKB 是飞致云旗下开源项目，是一款基于大语言模型和 RAG（检索增强生成）的开源知识库问答系统，遵循 GPL v3 开源许可协议。MaxKB 开源项目自 2024 年 3 月发布至今在开源社区表现出了卓越的成长性。目前，MaxKB 已经在代码托管平台 GitHub 上获得超过 13,000 个 Star 和超过 1,800 次 Fork，全网累计下载数量超过 400,000 次。MaxKB 正在被广泛应用于企业内部知识库运营、客户服务、学术研究与教育等场景。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;2025 年 2 月，MaxKB 发布首个 LTS 版本（即 v1.10 LTS 版本），支持 DeepSeek-R1 深度思考模式。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-904c1742ea95bad62d928034047f65ded91.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;▲图 2 MaxKB v1.10 LTS 的价值和优势&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;与同类产品相比，MaxKB 的主要优势包括：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;开箱即用：&lt;/span&gt;&lt;/strong&gt;支持直接上传文档和自动爬取在线文档，支持文本自动拆分、向量化和 RAG（检索增强生成），有效减少大模型幻觉，提供良好的智能问答交互体验；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;模型中立：&lt;/span&gt;&lt;/strong&gt;支持对接各种大模型，包括本地私有大模型（包括 DeepSeek-R1、Llama 3、Qwen 2 等）、国内公共大模型（包括 DeepSeek、通义千问、腾讯混元、字节豆包、百度千帆、智谱 AI、Kimi 等），以及国外公共大模型（包括 OpenAI、Azure OpenAI、Gemini 等）；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;灵活编排：&lt;/span&gt;&lt;/strong&gt;内置强大的工作流引擎和函数库，支持编排 AI 工作过程，有效满足复杂业务场景下的应用需求；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;无缝嵌入&lt;/span&gt;&lt;/strong&gt;：支持零编码快速嵌入至第三方业务系统，让已有系统快速拥有智能问答能力，提高用户满意度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;若您想尝试使用阿里云轻量应用服务器快速部署 MaxKB，详细操作说明可参见：&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;https://help.aliyun.com/zh/simple-application-server/use-cases/deploy-and-use-maxkb&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335892</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335892</guid>
            <pubDate>Sat, 22 Feb 2025 12:39:00 GMT</pubDate>
            <author>来源: 投稿</author>
        </item>
        <item>
            <title>DeepSeek API 错峰优惠，R1 价格降至 1/4</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;即日起，北京时间每日 00:30 至 08:30 的夜间空闲时段，&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fw20Mf30lHTk_lAKE5kH-cg&quot; target=&quot;_blank&quot;&gt;DeepSeek 开放平台推出错峰优惠活动&lt;/a&gt;&lt;/u&gt;。&lt;/p&gt; 
&lt;p&gt;在此期间，API 调用价格大幅下调：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DeepSeek-V3 降至原价的 50%&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DeepSeek-R1 更低至 25%&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;1893&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0226/195025_o0oT_2720166.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335885</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335885</guid>
            <pubDate>Sat, 22 Feb 2025 11:51:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>GPT 4.5 似乎即将发布</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;就在刚刚，有用户&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FDylanNeve10%2Fstatus%2F1894685259104461249&quot; target=&quot;_blank&quot;&gt;发现&lt;/a&gt;&lt;/u&gt;他们在 ChatGPT 的 Android 版本上看到&lt;strong&gt;了「GPT 4.5 研究预览」(GPT 4.5 research preview)&lt;/strong&gt;的标记，并提示「将为 Pro 用户提供最新模型」。&lt;/p&gt; 
&lt;p&gt;大家不禁猜测，GPT 4.5 似乎即将发布。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;1660&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0226/192423_Ft20_2720166.png&quot; width=&quot;1300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0226/193007_u4Vw_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f08b940d4461de15844488b59b597e1c1af.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;从图片内容来看，ChatGPT 显示了一条通知，内容如下：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「Pro users now have access to our newest, largest model.」&lt;br&gt; （Pro 订阅用户现在可以访问我们最新、最大的模型。）&lt;/p&gt; 
 &lt;p&gt;「Try the GPT-4.5 research preview」&lt;br&gt; （尝试 GPT-4.5 研究预览版）&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;仅限 Pro 用户：只有 Pro 订阅用户可以使用 GPT-4.5，而 Plus 或免费用户可能无法访问。&lt;/p&gt; 
&lt;p&gt;模型更大更先进：GPT-4.5 被描述为 「newest, largest model」（最新、最大的模型）。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335881</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335881</guid>
            <pubDate>Sat, 22 Feb 2025 11:26:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
        <item>
            <title>没人比 DeepSeek 更懂英伟达显卡</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;在 DeepSeek 开源周的第二天，&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/news/335624/deepseek-deepep&quot;&gt;该团队发布了 DeepEP&lt;/a&gt;&lt;/u&gt;，这是针对 MoE 模型的通信库，能提高 GPU 内核之间的吞吐量并降低延迟。此外该库还支持低精度操作，比如 FP8。&lt;/p&gt; 
&lt;p&gt;DeepSeek 团队在仓库的 README 中&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2FDeepEP&quot; target=&quot;_blank&quot;&gt;写道&lt;/a&gt;&lt;/u&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;为了追求极致性能，我们发现并使用了一个在文档描述之外的 PTX 指令：ld.global.nc.L1::no_allocate.L2::256B。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;这条指令会导致未定义行为：使用非一致性只读 PTX 修饰符 .nc 访问易失性 GPU 内存。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;但是，在 Hopper 架构上，经过测试，使用 .L1::no_allocate 可以保证正确性，并且性能会好得多。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-26f2bc8ae199ca28e453fa0c117dfe81576.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2169039837%2FPg2pjpXZF&quot; target=&quot;_blank&quot;&gt;根据博主「karminski-牙医」的解读&lt;/a&gt;&lt;/u&gt;，&lt;strong&gt;no_allocate&lt;/strong&gt;&amp;nbsp;这个指令出现在&amp;nbsp;CUDA PTX ISA 文档的第&amp;nbsp;214 页，但只是草草说了句用途，并没有详细解释能带来什么提升。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9b1d96dff0225d5c826241eabf65b2d3cf6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fc8ee6ed2083a101c738cfc72a2835c1c04.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;DeepSeek 团队从这么「深」的地方挖掘到了一个不被官方详细介绍的指令——并且带来极致的性能提升，可见他们对 CUDA 的研究程度之深，以及在 GPU 领域的积累。&lt;/p&gt; 
&lt;p&gt;CUDA PTX ISA 文档：&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nvidia.com%2Fcuda%2Fpdf%2Fptx_isa_8.7.pdf&quot; target=&quot;_blank&quot;&gt;https://docs.nvidia.com/cuda/pdf/ptx_isa_8.7.pdf&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335876</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335876</guid>
            <pubDate>Sat, 22 Feb 2025 10:42:00 GMT</pubDate>
            <author>来源: OSCHINA</author>
        </item>
    </channel>
</rss>