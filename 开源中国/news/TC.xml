<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 19 Aug 2024 15:33:33 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>開源日報 | 網易雲音樂崩了；MoonBit 發佈 beta；稚暉君要做開源機器人；LLM 數學性能暴漲 168%；CockroachDB 變更開源協議</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.19&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;「網易雲音樂崩了」衝上熱搜，官方回應「基礎設施故障」&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt;
  19 日下午，大量網友反映網易雲音樂「崩了」，相關話題登上熱搜第一。此時「網易雲音樂」App 彈窗提示：獲取數據失敗，請重試。期間網友稱「一直顯示加載失敗、播放失敗、網絡錯誤」、「重啓也不行，一度以為手機壞了」。
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;br&gt; 下午 3 點左右，@網易雲音樂對此回應：「大家好，因基礎設施故障，導致網易雲音樂各端無法正常使用，我們正在加緊修復，非常抱歉。感謝大家的等待。」
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0819/220655_RHJN_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307723/moonbit-beta&quot;&gt;IDEA 研究院編程語言 MoonBit 發佈 beta 預覽版&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;MoonBit beta 預覽版比大部分主流語言更早推出現代化泛型、精準錯誤處理和高效迭代器等重要特性，在雲計算、邊緣計算、人工智能和教育等領域快速實現落地應用。Beta 預覽版標誌着 MoonBit 生態進入全新階段，為用戶提供更穩定、流暢的創新操作體驗。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;MoonBit 自去年發佈 alpha 版後，反響熱烈。經過一年的高速迭代，MoonBit 到達了 beta 預覽版的里程碑：在覈心語言特性上，MoonBit 媲美、甚至超越了大部分主流語言的 1.0 版本；語言特性的開發穩定，開發者可以更廣泛地參與到生態建設中來。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307530&quot;&gt;開源下載工具 Aria 被詐騙份子使用，開發者無奈清空代碼倉庫&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;開源下載工具 Aria 開發者昨日刪除了該項目在 GitHub 倉庫中的全部源代碼。Aria 開發者寫道：「&lt;strong&gt;&lt;em&gt;因 Aria 被詐騙分子使用，導致我被跨省，因此本項目源碼永久刪除。&lt;/em&gt;&lt;/strong&gt;」&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0817/123724_l2gM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1678157684%2FOsNI2Bhrf&quot; target=&quot;_blank&quot;&gt;腦機接口新案例&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;馬斯克在搗鼓腦機接口，就是用電極植入人類大腦，提取腦電信號，然後用計算機處理這些信號，實現某種功能。&lt;/p&gt; 
     &lt;p&gt;在官網介紹他這個研究的時候，馬斯克慣例是不提此前的類似研究，所以許多人得到的印象是，他正單槍匹馬開創一種嶄新的技術，肩負解放人類的重擔。&lt;/p&gt; 
     &lt;p&gt;實際上，醫學界做這種研究已經超過十年，而且已經有不錯的成果。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;苦丁山&lt;/strong&gt;&lt;/span&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1721030997%2FOsZDanTC7%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;網易雲音樂稱基礎設施故障&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2baef55c36dca285010afac7649e66cc847.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div&gt;
    &amp;nbsp;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;網易雲音樂&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6QPqQpfiS0wlrVwUaBu4OQ&quot; target=&quot;_blank&quot;&gt;我們收到了知網 28 頁的侵權告知函&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt;
   &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e8b2c3c71ad49be4cdad701dcaadf6bb6a7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;祕塔官方&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6444741184%2FOsPyE2KrX&quot; target=&quot;_blank&quot;&gt;稚暉君要做開源機器人 &lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2d8a07d26b5fc6e7209d20cd2e94b13351f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    - 微博&amp;nbsp; 
    &lt;strong&gt;林亦 LYi&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240819A03YN800&quot; target=&quot;_blank&quot;&gt;LLM 數學性能暴漲 168%&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     合成數據 2.0 祕訣曝光了！來自微軟的研究人員們提出了智能體框架 AgentInstruct，能夠自動創建大量、多樣化的合成數據。經過合成數據微調後的模型 Orca-3，在多項基準上刷新了 SOTA。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;新智元&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1442704.htm&quot; target=&quot;_blank&quot;&gt;百度李彥宏：不一定非要學 AI 專業，任何行業都能與 AI 結合&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;在第 28 屆百度 hackathon 黑客馬拉松比賽上，百度創始人李彥宏在接受採訪時表示，在 AI 時代年輕人也不一定非選 AI 專業。李彥宏表示：「其實很多專業都跟 AI 是有關係的，AI 之所以有這麼大的潛力，它就是對任何一個行業可能都會有很大的影響。」他進一步解釋道，不過還是要學一些 AI 相關的東西，特別是 AI 相關的新的思維方式，比如説大模型提示詞工程師等等。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;快科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cAfAxkLsEI&quot; target=&quot;_blank&quot;&gt;CockroachDB 宣佈開源協議重大變更&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;CockroachDB 是全球開源分佈式數據庫領導者，簡稱為 CRDB，國內又稱為小強數據庫或蟑螂數據庫，走兼容 PostgreSQL 協議路線。&lt;/p&gt; 
  &lt;p&gt;CockroachDB 最開始的開源協議是 Apache2.0，後來基於商業發展目標考慮，在 2019 年核心代碼改為 BSL(Business Source License)，目的和 MongoDB 的 SSPL 類似，防止第三方提供 CockroachDB 的託管服務。CockroachDB 的 BSL 協議聲明，產品發佈後 3 年後會自動從 BSL 協議轉換為 Apache2.0 的協議，這對於那些新特性不感興趣的企業是非常友好的。&lt;/p&gt; 
  &lt;p&gt;開源軟件最大的挑戰是商業轉換，2024.08.15 號，CockroachDB 官方再次宣佈計劃將從 2024.11.18 號開始關閉 BSL 協議，所有客戶都轉換為 CockroachDB 的企業版產品協議。企業版分為 2 種類型，年收入 1000 萬美金以下企業可以免費使用，年收入超過 1000 萬美金的企業可以試用 30 天，後面需要付費。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;IT168&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.thepaper.cn%2FnewsDetail_forward_28448690&quot; target=&quot;_blank&quot;&gt;稚暉君的人形機器人上新了，還有開源、免費彩蛋&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;在這場發佈會中，稚暉君一口氣推出了三款遠徵系列機器人產品：交互服務機器人「遠徵 A2」、柔性智造機器人「遠徵 A2-W」、重載特種機器人「遠徵 A2-Max」。最後的 One more thing 環節，智元 X-Lab 孵化的模塊化機器人系列產品「靈犀 X1」和「靈犀 X1-W」也作為「彩蛋」正式亮相。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;機器之心&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.36kr.com%2Fp%2F2909785454287747&quot; target=&quot;_blank&quot;&gt;強攻 GPU，TPU 芯片一夜躥紅&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;當下，英偉達大約掌控着 80% 的人工智能數據中心芯片市場，而其餘 20% 的大部分則由不同版本的谷歌 TPU 把控。未來，TPU 所佔的市場份額會不會持續上揚？會增長幾何？是否會有其他架構的 AI 芯片將現有的市場格局一分為三？這些懸念預計在接下來的數年間將逐步揭曉。&lt;/p&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    &lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;半導體產業縱橫&lt;/strong&gt;&lt;/span&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240819A0356O00&quot; target=&quot;_blank&quot;&gt;9 歲小學生用大模型寫書賺 2 萬元&lt;/a&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;許萌萌（筆名），就讀於北京市西城區一所實驗小學，是一個上三年級的小男生。今年 4 月，由他創作的《AI 少年：火星生存大挑戰》一書，終於正式出版，全文 7、8 萬字，定價 49.90 元，首印 5000 冊。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;該書講述了一個名為「萌萌」（與自己同名）的小朋友，和他另外兩個朋友球球、番茄一起去科技館參加「火星生存挑戰營」活動，在現場人工智能助手「聰聰」的提示下，萌萌戴上 VR 設備進入「火星」這一虛擬世界後，如何獨自成功脫險，返回地球的故事。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;出版後，該書 1 個月內加印，截至當月底共售出 6000 餘冊。負責該書的策劃編輯曉曉表示：「正在向賣 1 萬冊努力。」&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#212121&quot;&gt;騰訊網&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdidi%2FUnify&quot; target=&quot;_blank&quot;&gt;didi/Unify&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 是一個 Flutter 混合開發框架，由滴滴出行國際化外賣團隊自研，目前已經廣泛應用於滴滴國際化外賣及國際化出行業務。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 的亮點特性包括:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;平台無關的模塊抽象&lt;/strong&gt;: 允許開發者使用 Dart 語言聲明與平台無關的模塊接口與實體。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;靈活的實現注入&lt;/strong&gt;: 開發者可以靈活地選擇注入原生實現（Android/iOS）或 Flutter 實現。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;自動代碼生成&lt;/strong&gt;: 藉助強大的代碼生成引擎，Unify 可以自動生成 Flutter、Android、iOS 多平台下統一調用的 SDK。&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 的整體原理如下：&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-105ff4761152e62ed960a0d0c772a2309af.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/p/unify-didi&quot;&gt;https://www.oschina.net/p/unify-didi&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307832</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307832</guid>
            <pubDate>Mon, 19 Aug 2024 12:15:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Jmix 2.3 發佈 - 企業級 Java Web RAD 平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;img alt=&quot;Jmix2.3 發佈&quot; src=&quot;https://oscimg.oschina.net/oscnet/jmix_2.3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我們最近發佈了 Jmix 的 2.3 版本。這篇博客中，我們將介紹這個新版本中增加的新功能和改進。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;有關完整的詳細信息和升級説明，請參閲文檔中的&lt;span style=&quot;color:#595959&quot;&gt;最近更新&lt;/span&gt;[1]頁面。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fjmix.cn&quot; target=&quot;_blank&quot;&gt;Jmix&lt;/a&gt; 是一個企業級 Java Web 快速開發平台，包括：核心開源框架、特定的 IDE，稱為 Studio 以及一組開箱即用的擴展組件。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#0451a5&quot;&gt;1.&lt;/span&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt; 開源框架基於 Spring 和其他主流 Java 技術棧構建，使用 Jmix，只需 Java 或 Kotlin 單一開發語言即可完成業務邏輯和 Web UI 的開發。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#0451a5&quot;&gt;2.&lt;/span&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt; Jmix Studio 是 IntelliJ IDEA 插件，可以輔助項目開發，極大地提升開發效率。&lt;/span&gt;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;span style=&quot;color:#0451a5&quot;&gt;3.&lt;/span&gt;
   &lt;span style=&quot;color:#3b3b3b&quot;&gt; Jmix 擴展組件為典型的業務需求提供解決方案，例如，數據審計、REST API、電子郵件，報表生成、BPM 等。&lt;/span&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Superset 擴展組件&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#595959&quot;&gt;Apache Superset&lt;/span&gt;[2] 是領先的數據探索和可視化開源解決方案。支持創建高度可定製的儀錶板，其中可以包含多種圖表。圖表通過數據集填充數據，而數據是使用 SQL 從數據庫中獲取。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;通過 Jmix Superset 擴展組件，在應用程序中可以很容易集成 Superset 服務，並將儀錶板嵌入到 Jmix 視圖中。例如，Bookstore 應用程序的主視圖中包含了一個儀錶板，展示客戶訂單的相關信息：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Superset 示例&quot; src=&quot;https://oscimg.oschina.net/oscnet/superset_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;連接到 Superset 服務時只需指定 URL 和用戶憑證，在顯示嵌入的儀錶板時，由擴展組件負責請求、刷新和使用安全 token。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在 Superset 中創建好儀錶板後，需要一些配置以便能在 Jmix 中嵌入。Superset 會生成一個 ID，外部應用可以通過這個 ID 引用該儀錶板。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;擴展組件提供的 &lt;code&gt;dashboard&lt;/code&gt; UI 組件可以用於在應用程序視圖中嵌入儀錶板。只需在 &lt;code&gt;embeddedId&lt;/code&gt; 屬性中指定儀錶板 ID：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;superset:dashboard&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;ordersDashboard&quot;&lt;/span&gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;embeddedId&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;4bc14bf5-a3ec-4151-979e-a920420e1f66&quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;height&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;100%&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;width&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;100%&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;maxWidth&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;50em&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Superset 服務直接與應用程序數據庫相連。為了根據用戶權限或其他條件篩選儀錶板上顯示的數據，可以在視圖中將約束列表傳遞給儀錶板。以下示例中，儀錶板僅顯示當前租戶的數據：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@Install&lt;/span&gt;(to&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;ordersDashboard&quot;&lt;/span&gt;,&amp;nbsp;subject&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;datasetConstraintsProvider&quot;&lt;/span&gt;)&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;List&amp;lt;DatasetConstraint&amp;gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;ordersDashboardDatasetConstraintsProvider&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;()&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DatasetConstraint&amp;nbsp;constraint&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;new&lt;/span&gt;&amp;nbsp;DatasetConstraint(&lt;span style=&quot;color:#1c00cf&quot;&gt;25&lt;/span&gt;,&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;tenant&amp;nbsp;=&amp;nbsp;&#39;&quot;&lt;/span&gt;&amp;nbsp;+&amp;nbsp;tenantProvider.getCurrentUserTenantId()&amp;nbsp;+&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;return&lt;/span&gt;&amp;nbsp;List.of(constraint);&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;有關如何在 Jmix 應用程序中使用 Superset 擴展組件的詳細信息，請參考 &lt;span style=&quot;color:#595959&quot;&gt;Superset 文檔&lt;/span&gt;[3]。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;支持 OpenSearch&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Jmix Search 擴展組件現在可以使用 &lt;span style=&quot;color:#595959&quot;&gt;OpenSearch&lt;/span&gt;[4] 服務了。無論使用的是 OpenSearch 還是 Elasticsearch 引擎，擴展組件中的所有功能（聲明式索引定義、索引隊列、UI 搜索控件等）均行為一致。通過在 &lt;code&gt;build.gradle&lt;/code&gt; 中指定依賴的 starter 來區分使用的搜索引擎。從市場安裝擴展組件時，默認情況下會使用 OpenSearch。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Fragments&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Fragment 是一種新的 UI 構建塊，可以分解複雜的 UI 結構，從而減少重複代碼。就其特性而言，Fragment 介於視圖和組合組件之間。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;一方面，與視圖一樣，Fragment 的 XML 中可以包含數據組件和操作。並支持在 fragment 類中進行組件注入和事件處理。Studio 提供了一個用於創建空 fragment 的模板，以及與視圖相同的 UI 設計器。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;而另一方面，fragment 又可用作視圖或其他 fragment 中的組件。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;使用 Fragment 可以在構建和重用綁定了數據模型的 UI 代碼時提供更大的靈活性。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;通過下面的示例可以瞭解如何創建和使用 fragment。這個簡單的 fragment 展示一個名為 &lt;code&gt;Money&lt;/code&gt; 的可嵌入實體的數據。在 UI 設計器中可以顯示 XML 和預覽，如下所示：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Fragment 示例&quot; src=&quot;https://oscimg.oschina.net/oscnet/fragment_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Fragment 的類（也稱為控制器）可以定義 setter 接收來自外部的參數。在我們的例子中，接收一個 &lt;code&gt;Money&lt;/code&gt; 實例並將其保存到數據容器中：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@FragmentDescriptor&lt;/span&gt;(&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;money-fragment.xml&quot;&lt;/span&gt;)&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;class&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#5c2699&quot;&gt;MoneyFragment&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;extends&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#5c2699&quot;&gt;Fragment&lt;/span&gt;&amp;lt;&lt;span style=&quot;color:#5c2699&quot;&gt;JmixFormLayout&lt;/span&gt;&amp;gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;InstanceContainer&amp;lt;Money&amp;gt;&amp;nbsp;moneyDc;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;setMoney&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(Money&amp;nbsp;money)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;moneyDc.setItem(money);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在視圖中包含 fragment 時，我們使用 &lt;code&gt;fragment&lt;/code&gt; 元素並指定 fragment 的類。例如，父視圖可以包含同一 fragment 的兩個實例：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;h4&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;text&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;msg://price&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;fragment&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;unitPriceFragment&quot;&lt;/span&gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;io.jmix.bookstore.view.moneyfragment.MoneyFragment&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;h4&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;text&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;msg://discount&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;fragment&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;discountFragment&quot;&lt;/span&gt;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;io.jmix.bookstore.view.moneyfragment.MoneyFragment&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;vbox&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在父視圖的控制器內可以調用 fragment 的 API 來傳遞 &lt;code&gt;Money&lt;/code&gt; 實例：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;MoneyFragment&amp;nbsp;unitPriceFragment;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;MoneyFragment&amp;nbsp;discountFragment;

&lt;span style=&quot;color:#643820&quot;&gt;@Subscribe&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;onReady&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(&lt;span style=&quot;color:#aa0d91&quot;&gt;final&lt;/span&gt;&amp;nbsp;ReadyEvent&amp;nbsp;event)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;unitPriceFragment.setMoney(orderLineDc.getItem().getUnitPrice());&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;discountFragment.setMoney(orderLineDc.getItem().getDiscount());&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Data Repositories&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;該版本完成了對 Spring Data Repository 作為 Jmix 生態系統中一等公民的支持。現在，視圖中可以很方便地使用它們來加載和保存數據，同時兼容所有標準 Jmix UI 功能，如過濾、分頁和排序等。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;當使用嚮導創建視圖時，在 &lt;em&gt;Advanced&lt;/em&gt; 部分有 &lt;em&gt;Use Data Repository&lt;/em&gt; 複選框。如果勾選，則可以選擇已有的 Data Repository。嚮導生成的視圖中，數據的讀寫都代理給了 Data Repository 的方法。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;列表數據的加載代理中，從 Jmix &lt;code&gt;LoadContext&lt;/code&gt; 對象中提取了 Spring Data &lt;code&gt;PageRequest&lt;/code&gt;，然後通過 &lt;code&gt;JmixDataRepositoryContext&lt;/code&gt; 對象為 Data Repository 提供過濾條件和其他選項。這裏可以按需修改，例如，可以設置初始的排序：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@Install&lt;/span&gt;(to&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;customersDl&quot;&lt;/span&gt;,&amp;nbsp;target&amp;nbsp;=&amp;nbsp;Target.DATA_LOADER)&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;List&amp;lt;Customer&amp;gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;loadDelegate&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(LoadContext&amp;lt;Customer&amp;gt;&amp;nbsp;context)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;將&amp;nbsp;Jmix&amp;nbsp;分頁和排參數轉換為&amp;nbsp;Spring&amp;nbsp;Data&amp;nbsp;PageRequest&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PageRequest&amp;nbsp;pageable&amp;nbsp;=&amp;nbsp;JmixDataRepositoryUtils.buildPageRequest(context);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;if&lt;/span&gt;&amp;nbsp;(pageable.getSort().isEmpty())&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;設置初始排序&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;pageable&amp;nbsp;=&amp;nbsp;pageable.withSort(Direction.ASC,&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;firstName&quot;&lt;/span&gt;,&amp;nbsp;&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;lastName&quot;&lt;/span&gt;);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;提供&amp;nbsp;Jmix&amp;nbsp;條件，fetch&amp;nbsp;plan&amp;nbsp;以及&amp;nbsp;hints&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JmixDataRepositoryContext&amp;nbsp;jmixContext&amp;nbsp;=&amp;nbsp;JmixDataRepositoryUtils.buildRepositoryContext(context);&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#007400&quot;&gt;//&amp;nbsp;調用&amp;nbsp;repository&amp;nbsp;方法並返回分頁內容&lt;/span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;return&lt;/span&gt;&amp;nbsp;repository.findAll(pageable,&amp;nbsp;jmixContext).getContent();&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;上面的代碼與下面加載器中的 JPQL 功能相同：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;loader&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;customersDl&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;readOnly&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;query&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;![CDATA[select&amp;nbsp;e&amp;nbsp;from&amp;nbsp;bookstore_Customer&amp;nbsp;e&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;order&amp;nbsp;by&amp;nbsp;e.firstName&amp;nbsp;asc,&amp;nbsp;e.lastName&amp;nbsp;asc]]&amp;gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;query&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;loader&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;所有繼承 &lt;code&gt;JmixDataRepository&lt;/code&gt; 了的 Repository 方法現在都支持 &lt;code&gt;JmixDataRepositoryContext&lt;/code&gt; 作為附加參數。因此 Data Repository 能兼容 &lt;code&gt;genericFilter&lt;/code&gt;、&lt;code&gt;propertyFilter&lt;/code&gt; 組件以及聲明式數據加載器。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;TabSheet 標籤頁的延遲加載&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;當視圖中有許多 UI 控件並且需要通過標籤頁進行分組時，我們通常使用 TabSheet 組件。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在該版本中，我們增加了將標籤頁標記為 &lt;code&gt;lazy&lt;/code&gt; 的功能。打開視圖時，不會自動加載這種標籤頁的內容。如果標籤頁包含大量組件並需要加載其他數據，那麼使用該功能可以顯著提高性能。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;延遲標籤頁的數據加載和其他初始化內容需要在 TabSheet 的 &lt;code&gt;SelectedChangeEvent&lt;/code&gt; 監聽器中完成，例如：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#643820&quot;&gt;@ViewComponent&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;CollectionLoader&amp;lt;Position&amp;gt;&amp;nbsp;positionsDl;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;private&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;boolean&lt;/span&gt;&amp;nbsp;positionsInitialized;

&lt;span style=&quot;color:#643820&quot;&gt;@Subscribe&lt;/span&gt;(&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;tabSheet&quot;&lt;/span&gt;)&amp;nbsp;&amp;nbsp;
&lt;span&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;public&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;void&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#1c00cf&quot;&gt;onTabSheetSelectedChange&lt;/span&gt;&lt;span style=&quot;color:#5c2699&quot;&gt;(&lt;span style=&quot;color:#aa0d91&quot;&gt;final&lt;/span&gt;&amp;nbsp;JmixTabSheet.SelectedChangeEvent&amp;nbsp;event)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;if&lt;/span&gt;&amp;nbsp;(&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;positionTab&quot;&lt;/span&gt;.equals(event.getSelectedTab().getId().orElse(&lt;span style=&quot;color:#aa0d91&quot;&gt;null&lt;/span&gt;))&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;!positionsInitialized)&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;positionsDl.load();&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;positionsInitialized&amp;nbsp;=&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;true&lt;/span&gt;;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;還有一點，延遲標籤頁內的組件不能注入到視圖類中，因為在視圖初始化時還不存在。因此，只能在標籤頁完成初始化之後通過 &lt;code&gt;UiComponentUtils.getComponent()&lt;/code&gt; 方法獲取。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;TwinColumn 組件&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;新的 &lt;code&gt;twinColumn&lt;/code&gt; 組件為用戶提供了一種熟悉且方便的方式來從列表中選擇內容：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;雙列組件示例&quot; src=&quot;https://oscimg.oschina.net/oscnet/twincolumn_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;授權服務擴展組件&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我們已將授權服務（Authorization Server）模塊提煉成了一個單獨的擴展組件，有單獨的&lt;span style=&quot;color:#595959&quot;&gt;文檔&lt;/span&gt;[5]和安裝流程。這個組件之前是與通用 REST 擴展組件一起安裝。因此，現在如果需要安裝通用 REST 組件時，需要考慮如何保護 REST 端點：使用授權服務或 OIDC 組件還是通過其他方式。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;授權服務擴展組件提供了一個新的功能，可以實現資源所有者密碼憑證授權（即原來的用戶名密碼授權）。OAuth 規範現在不推薦使用這種授權類型，但我們收到了很多開發人員的請求，於是決定在組件中實現並提供。可以在受信任的、老系統的或高度受控的環境中使用，使用已註冊的 Jmix 應用程序用戶對 REST 客戶端進行簡單的身份驗證。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Liquibase changelog 合併&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;新版本中，Studio 最突出的新功能是能夠合併已有的 Liquibase changelog。支持開發人員將幾個最新的 changelog 合併為一個，並刪除 changeset 中的重複操作。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;比如這個場景：由於數據模型的迭代開發，有三個 changelog。第一個在表格中添加了 &lt;code&gt;ALPHA&lt;/code&gt; 列，第二個添加 &lt;code&gt;BETA&lt;/code&gt; 列，第三個添加 &lt;code&gt;GAMMA&lt;/code&gt; 並刪除 &lt;code&gt;ALPHA&lt;/code&gt;。因此，在第一個 changelog 中引入的更改將被第三個 changelog 覆蓋。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;Aggregate Liquibase Changelogs&lt;/strong&gt; 的操作在數據存儲的右鍵菜單中。可以選擇任意數量的新添加的 changelog 進行合併。比如我們選擇上述三個 changelog：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Liquibase changelog 合併&quot; src=&quot;https://oscimg.oschina.net/oscnet/aggregate_changelogs_1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;新生成的 changelog 將僅包含真正使數據庫結構與數據模型同步的更改，即添加 &lt;code&gt;BETA&lt;/code&gt; 和 &lt;code&gt;GAMMA&lt;/code&gt; 列：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Liquibase changelog 合併&quot; src=&quot;https://oscimg.oschina.net/oscnet/aggregate_changelogs_2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;Studio 會刪除選定的 changelog 文件，並添加新的合併文件。為了使新的 changelog 集合與已執行了舊 changelog 的數據庫兼容，Studio 會為新的 changeset 添加一個前提條件。這個條件指示 Liquibase 不要執行新的 changeset，例如，如果替換列表中的第一個 changelog 已經執行：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;preConditions&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;onFail&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;MARK_RAN&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;not&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;&lt;span style=&quot;color:#aa0d91&quot;&gt;changeSetExecuted&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;id&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;1&quot;&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;author&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;bookstore&quot;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#836c28&quot;&gt;changeLogFile&lt;/span&gt;=&lt;span style=&quot;color:#c41a16&quot;&gt;&quot;io/jmix/bookstore/liquibase/changelog/2024/06/27-1-add-alpha.xml&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;not&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;
&lt;span style=&quot;color:#aa0d91&quot;&gt;&amp;lt;/&lt;span style=&quot;color:#aa0d91&quot;&gt;preConditions&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;執行 changelog 合併時需小心，因為合併 changelog 並不是對已有 changelog 進行分析和重新生成。而是依據第一個選定的 changelog 之前的數據庫結構與當前模型之間的差異生成一個新的 changelog。因此，如果合併的 changelog 包含一些未反映在模型中的數據更新或結構更改（例如，存儲過程），則可能丟失。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;總的來看，使用此功能最自然、最安全的方法是在將最新更改提交到共享代碼倉庫或將功能合併到公共分支之前對 changelog 進行合併。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;Studio 的其他改進&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;該版本還引入了多項能提升開發者體驗的 Studio 功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Jmix 工具窗口提供了一個用於生成 UI 異常處理方法的操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Jmix UI 結構右鍵菜單中的 &lt;strong&gt;Convert to&lt;/strong&gt; 操作可以將一個組件一鍵轉換為另一個組件。&lt;strong&gt;Wrap into&lt;/strong&gt; 操作可以將多個選定的組件包含至 TabSheet 的標籤頁中。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改進了 JPQL Designer 佈局。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改進了 Dockerfile 生成。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;所有 Studio 的改進內容，請參考 &lt;span style=&quot;color:#595959&quot;&gt;Issue tracker&lt;/span&gt;[6]。&lt;/p&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#fe8a34&quot;&gt;下一步？&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我們計劃在 2024 年 10 月發佈下一個功能版本，其中包括 Jmix UI 中幾個非常重要的功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;集成一些第三方 JavaScript 組件：日曆、數據透視表（PivotTable）和看板（Kanban）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;可以使用 fragment 定義 &lt;code&gt;VirtualList&lt;/code&gt; 條目的內部佈局。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;標籤式主窗口模式，視圖在主窗口內的標籤頁中打開，而不是在瀏覽器標籤頁中打開。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;最後一個功能是從遷移經典 UI 的開發人員最需要的功能。因此，我們將提供一個解決方案，可以在單個瀏覽器標籤頁中打開多個視圖，而同時會犧牲一些瀏覽器功能，例如歷史記錄和深度鏈接。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;我們計劃的另一個可以幫助從舊版本的平台遷移的功能是聲明試 UI 權限。這個功能在 CUBA 平台就已經有了，支持開發者和管理員通過配置限制用戶對 UI 中內容（控件、按鈕、動作）的訪問，而無需編寫任何代碼。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;在 Studio 方面，我們將改進 Jmix UI 組件屬性面板的可用性，併為 UI 組件屬性提供更多編輯器（例如，對於 &lt;code&gt;formLayout.responsiveSteps&lt;/code&gt;）。此外，我們還會提供與外部數據源集成方面工作的初步成果。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;像往常一樣，我們仍將為錯誤修復、添加小功能和性能增強分配一定的時間。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;未來版本的詳細路線圖以&lt;span style=&quot;color:#595959&quot;&gt;GitHub 項目&lt;/span&gt;[7]的形式提供。當前版本 2.3 的補丁將大約每月發佈一次，大家可以定期更新。&lt;/p&gt; 
&lt;p style=&quot;color:black; margin-left:0; margin-right:0&quot;&gt;如果有任何問題，歡迎到我們&lt;span style=&quot;color:#595959&quot;&gt;論壇&lt;/span&gt;[8]進行反饋，感謝所有提供想法、建議和錯誤報告的親們！&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;參考資料&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[1] &lt;/span&gt;最近更新: &lt;em&gt;https://docs.jmix.cn/jmix/whats-new/index.html&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[2] &lt;/span&gt;Apache Superset: &lt;em&gt;https://superset.apache.org/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[3] &lt;/span&gt;Superset 文檔: &lt;em&gt;https://docs.jmix.cn/jmix/superset/index.html&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[4] &lt;/span&gt;OpenSearch: &lt;em&gt;https://opensearch.org/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[5] &lt;/span&gt;文檔: &lt;em&gt;https://docs.jmix.cn/jmix/authorization-server/index.html&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[6] &lt;/span&gt;Issue tracker: &lt;em&gt;https://youtrack.jmix.io/issues/JST?q=Fixed%20in%20builds:%202.3.0,-2.2.&lt;/em&gt;%20type:%20Feature,Improvement,Usability*&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[7] &lt;/span&gt;GitHub 項目: &lt;em&gt;https://github.com/orgs/jmix-framework/projects/23/views/1&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;[8] &lt;/span&gt;論壇: &lt;em&gt;https://forum.jmix.cn/&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307786/jmix-2-3-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307786/jmix-2-3-released</guid>
            <pubDate>Mon, 19 Aug 2024 07:40:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>墨幹 V1.2.9 LTS: 支持中文的 TMU 文檔格式</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;div&gt; 
 &lt;h2&gt;重要信息&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt;墨幹 v1.2.9 LTS 是一個長期支持版本，支持週期至少一年。在未來的一年內，我們會發布補丁版本（v1.2.9.2, v1.2.9.3, v1.2.9.5, v1.2.9.7) 等，補丁版本的版本編號我們採用質數 :)&lt;/li&gt; 
  &lt;li&gt;默認格式已經調整 TMU 格式，TMU 格式是 TM 格式的 Unicode 版。TM 格式長期依賴的通點是無法顯示中文，TMU 格式解決了這個問題。&lt;/li&gt; 
  &lt;li&gt;在 macOS 和 Windows 內置 Noto CJK 字體是為了讓同一個文檔，在不同的平台所採用的字體（在未指定字體的情況下）儘可能一致。&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h2&gt;重要變更&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmogan.app%2Fzh%2Fguide%2Fchangelog%2Fv1.2.9.html%23%25E9%2587%258D%25E8%25A6%2581%25E5%258F%2598%25E6%259B%25B4&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;TMU: 默認格式已經調整為 TMU&lt;/strong&gt;，使用&lt;code&gt;文件-&amp;gt;導出-&amp;gt;TM 文檔&lt;/code&gt;可以導出 TM 文檔&lt;/li&gt; 
  &lt;li&gt;字體：在 macOS 和 Windows 上內置 Noto CJK 字體&lt;/li&gt; 
  &lt;li&gt;字體：在文檔語言是中文的情況下，改善數學公式中括號等符號的渲染（開源之夏 2024）&lt;/li&gt; 
  &lt;li&gt;多語言支持：修復法語等語言的翻譯編碼錯亂問題&lt;/li&gt; 
  &lt;li&gt;默認配置：&lt;code&gt;編輯-&amp;gt;首選項-&amp;gt;鍵盤-&amp;gt;文本中的空格鍵&lt;/code&gt;調整為允許輸入多個空格&lt;/li&gt; 
  &lt;li&gt;Emacs 風格快捷鍵：修復無法在數學公式中使用&lt;code&gt;Alt+[&lt;/code&gt;和&lt;code&gt;Alt+]&lt;/code&gt;撤銷和重做的問題&lt;/li&gt; 
  &lt;li&gt;插件： 
   &lt;ul&gt; 
    &lt;li&gt;Gnuplot: 基於金魚 Scheme 重新實現，不再依賴於 Python&lt;/li&gt; 
    &lt;li&gt;Goldfish: 新增 sicp 啓動器，適合學習 SICP，內置 false,true,nil 等兼容 SICP 示例代碼的函數和常量&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;社區： 
   &lt;ul&gt; 
    &lt;li&gt;墨客星球：按照界面語言，選擇不同的墨客星球入：w 口&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h2&gt;開發者相關&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmogan.app%2Fzh%2Fguide%2Fchangelog%2Fv1.2.9.html%23%25E5%25BC%2580%25E5%258F%2591%25E8%2580%2585%25E7%259B%25B8%25E5%2585%25B3&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;ul&gt; 
  &lt;li&gt;內置金魚 Scheme v17.10.4，將 S7 Scheme 升級至 v10.12-20240813&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307771/mogan-1-2-9-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307771/mogan-1-2-9-released</guid>
            <pubDate>Mon, 19 Aug 2024 06:43:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>崑崙萬維發佈 AI 短劇平台 SkyReels</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;崑崙萬維發佈全球首個集成視頻大模型與 3D 大模型的 AI 短劇平台 SkyReels。集劇本生成、角色定製、分鏡、劇情、對白/BGM 及影片合成於一體，旨在讓創作者「一鍵成劇」，輕鬆製作高質量 AI 視頻。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;SkyReels 平台集成了崑崙萬維自研劇本大模型 SkyScript、自研分鏡大模型 StoryboardGen、自研 3D 生成大模型 Sky3DGen、以及業界首個將 AI 3D 引擎與視頻大模型深度融合的創新平台 WorldEngine。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;能夠通過 AI 一鍵生成完整劇本、分鏡、人物對白與 BGM，支持角色形象、音色與分鏡的自定義調整，並能夠自動將內容轉換為 1080P 60 幀的高清視頻，單次可生成視頻長度達 180 秒，相比 Sora 單次可生成 60 秒視頻、可靈單次可生成 10 秒視頻，有顯著突破。一鍵整合所有創作成果，極大提高視頻的創作效率，降低創作成本，推動「一人一劇」時代加速來臨。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時，WorldEngine 結合了引擎的精確可控能力（如光照模擬、物理模擬、3D 空間、實時交互等） 以及 AI 視頻大模型的幻想生成能力，提供了全新的線上混合視頻創作模式，讓視頻創作從模糊生成邁向更加精確可控。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;322&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3b3b3b445168d40ab69df8c897c8338c7da.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;320&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-eac79e0ac7170420b90bf78129749788624.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;325&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3d47ee3ede6253924a5cdd051754b807835.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;SkyReels 亮點&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;全自動化劇本生成：用戶輸入概念或創意，AI 將一鍵生成一份結構完整、情節豐富的劇本，並支持已有劇本的自動整理與潤色，提高創作效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高質量情節設計：系統通過分析大量劇本情節，生成高質量的故事情節、戲劇衝突、爽點及情感表達，保證劇本的豐富性與吸引力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;智能分鏡生成：根據劇本內容，一鍵生成分鏡圖片和對應的文字腳本，用戶還可自由調整分鏡、鏡頭角度、運鏡方式等參數，確保創意的精確實現。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;情感化對白/BGM：通過情感化語音合成技術，賦予角色自然的句間停頓、情感表達、抑揚頓挫，並基於視頻內容自動生成 AI BGM，讓畫面與音樂完美融合。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;個性化定製：支持角色形象、音色和分鏡的智能生成與自定義調整，滿足創作者的個性化需求，並提供動漫、卡通、真人 3D 等多種視覺風格選擇，適應不同創作者的偏好和內容表達需求。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;內容一致性與精確性：確保角色與場景在不同分鏡中的一致性，同時根據故事描述自動推演角色表演，實現人物表情、動作、台詞的協調一致，提升故事表現力。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高效視頻生成：自動將分鏡轉換為連續高清視頻，提供 1080P 60 幀輸出，確保流暢的觀看體驗。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;便捷的後期合成：一鍵整合所有創作成果，並可快速導出和分享，支持多種格式下載，方便後期編輯。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307743</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307743</guid>
            <pubDate>Mon, 19 Aug 2024 03:49:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>統信軟件推出綜合型開源自動化測試框架 「YouQu」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;統信軟件宣佈推出 「YouQu」 （有趣）綜合型自動化測試框架。該框架緊密貼合實際需求，專為 Linux 操作系統量身定製，集管理、分發調度、驅動執行等核心功能於一體，實現了測試流程的全方位覆蓋。&lt;/p&gt; 
&lt;p&gt;YouQu 支持 UI、WEB、接口及命令行等多種自動化測試場景。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux 桌面應用 UI 自動化測試&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基於 Qt 屬性查找、圖像識別、OCR 識別、相對位移方案獲取元素位置，通過鍵鼠模擬操控元素進行 UI 操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web UI 自動化測試&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基於 PlayWright 控制瀏覽器（可自定義）進行 Web UI 自動化測試。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux DBus 接口自動化測試&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;通過框架內置的 DBus 操控功能，實現對 DBus 接口訪問及獲取數據。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;命令行自動化測試&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基於 subprocess、pexpect 實現命令行交互。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HTTP 接口自動化測試&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;基於 Python 標準庫 urllib，實現網絡接口自動化測試流程。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;YouQu 採用工程化架構設計，其核心封裝層提供基礎能力，業務層根據實際業務需求（測試用例）動態加載核心封裝層，執行層加載相應的用例集並控制執行流程。&lt;/p&gt; 
&lt;p&gt;測試平台可以根據實際測試策略組裝配置，通過執行層接口驅動框架完成自動化測試執行。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0819/113328_rwU3_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;開源倉庫地址&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;linuxdeepin 開源倉庫：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flinuxdeepin%2Fyouqu&quot; target=&quot;_blank&quot;&gt;https://github.com/linuxdeepin/youqu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;openEuler 開源倉庫：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://gitee.com/src-openeuler/youqu&quot;&gt;https://gitee.com/src-openeuler/youqu&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;YouQu 官網地址：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyouqu.uniontech.com&quot; target=&quot;_blank&quot;&gt;https://youqu.uniontech.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;統信開發者平台 YouQu 地址：&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuosdn.uniontech.com%2F%23document2%3Fdirid%3D66a7735a36fced0b0bdb3139&quot; target=&quot;_blank&quot;&gt;https://uosdn.uniontech.com/#document2?dirid=66a7735a36fced0b0bdb3139&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307741/uniontech-youqu</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307741/uniontech-youqu</guid>
            <pubDate>Mon, 19 Aug 2024 03:34:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>IDEA 研究院編程語言 MoonBit 發佈 beta 預覽版，快速實現多領域應用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;MoonBit beta 預覽版比大部分主流語言更早推出現代化泛型、精準錯誤處理和高效迭代器等重要特性，在雲計算、邊緣計算、人工智能和教育等領域快速實現落地應用。Beta 預覽版標誌着 MoonBit 生態進入全新階段，為用戶提供更穩定、流暢的創新操作體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 自去年發佈 alpha 版後，反響熱烈。經過一年的高速迭代，MoonBit 到達了 beta 預覽版的里程碑：在覈心語言特性上，MoonBit 媲美、甚至超越了大部分主流語言的 1.0 版本；語言特性的開發穩定，開發者可以更廣泛地參與到生態建設中來。這裏列舉幾個 MoonBit 的核心特性：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;現代化的泛型系統&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;現代語言複雜性的很大一部分在於類型系統的設計，很多主流工業語言，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;比如 Java，Go 在 1.0 版本推出很多年以後才會漸漸完善泛型的支持&lt;/strong&gt;&lt;/span&gt;，但是這會對生態造成撕裂。MoonBit 在 beta 預覽版本已經完成了泛型和 ad-hoc polymoprhism，而且 MoonBit 在保持極快的編譯速度的同時，提供了零開銷的泛型支持。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;準確的錯誤處理&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;錯誤處理是現代語言設計中的重要組成部分，大部分編程語言在靜態分析中，徹底放棄錯誤處理的支持，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;這意味着任何函數都可以拋出異常，很難寫出高可靠性的代碼。&lt;/strong&gt;&lt;/span&gt;MoonBit 通過準確的控制流分析，可以完全在編譯時期跟蹤函數的錯誤。這一過程幾乎完全由編譯器自行推導，且不像 Java checked exception 那樣過於繁瑣，降低用戶的心智負擔。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;高效的迭代器&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;傳統的編程語言的迭代器會產生頻繁的裝箱操作，導致其性能比普通的循環要糟糕很多。MoonBit 創新地使用了零開銷的迭代器設計，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;可以讓用戶寫出優雅代碼的同時保持程序的性能。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;多應用場景&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 是一個全場景覆蓋的開發者平台，緊跟科技前沿和行業趨勢，側重於雲計算、邊緣計算、人工智能以及教學領域的發展，並在每個領域做到極致，確保在性能上領先其他語言至少一個數量級。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在雲計算領域，MoonBit 近期已支持 Wasm 組件模型，並有海外用戶實現了與 Spin 框架集成的 MoonBit SDK。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;通過將應用程序拆分成獨立的、可重用的組件，MoonBit 可以在雲計算開發中更好地利用模塊化開發、靈活的部署和更新、資源優化、防止單點故障提高安全性、易於擴展和集成等特性，實現雲計算應用場景中的突出優勢，提高系統的靈活性和安全性，簡化擴展和集成過程，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;從而顯著提高雲計算開發效率並降低運營成本。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;435&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bf98ab690dba421fe8346209213d5a72b29.jpg&quot; width=&quot;934&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在邊緣計算領域，目前已有 MoonBit PDK 插件，&lt;span style=&quot;color:#000000&quot;&gt;並被 Extism 收入官方 PDK 庫。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;通過 PDK 的支持，MoonBit 能夠在邊緣計算應用中更高效地利用硬件資源，實現分佈式計算和本地處理，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;提&lt;/strong&gt;&lt;strong&gt;升性能和響應速度，同時確保設備兼容性和數據安全性&lt;/strong&gt;，&lt;/span&gt;從而大大提升開發和部署效率，滿足低延遲和高效能的需求。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;564&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-02d8e0e917b3011382b6706c9827aa4d7a8.jpg&quot; width=&quot;937&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;在 MoonBit 的應用生態發展中，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;注重為學生羣體以及編程語言初學者提供簡單易學的入門環境&lt;/strong&gt;&lt;/span&gt;，並以遊戲的形式打造輕鬆愉悅的學習體驗。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 現已支持使用 WebAssembly 開發小型復古遊戲的 WASM-4 框架。憑藉 MoonBit 的高效工具鏈和簡潔設計，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;入門級開發者可以在官方教程的指導下輕鬆創作屬於自己的第一款遊戲&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;同時，框架內置的多玩家支持功能能夠讓至多四名玩家共同體驗遊戲的樂趣。無論是創作過程還是開發體驗，MoonBit 都能讓初學者體驗前所未有的簡單與高效。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;不僅如此，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;由於 MoonBit 支持實時可視化開發，同時編譯速度極快，&lt;/strong&gt;&lt;/span&gt;開發者還能夠實時更改代碼來靈活調整遊戲參數。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 團隊正在開發 MiniMoonBit 編譯器教學項目。學生可以用 MoonBit 實現 MoonBit 語言的一個子集。由於 MoonBit 強大的表達力，相較傳統的用 C/C++ 實現的編譯器項目，學生可以更輕鬆地上手實現。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;同時，MiniMoonBit 項目採用了模塊化的設計，多層 IR 都有對應的 JSON 文本表示，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;學生不再需要從頭實現編譯器的每個環節，而是可以選擇感興趣的模塊來學習。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;快、小、安全、&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;最佳數據處理體驗&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit 於 2022 年啓動開發計劃，憑藉團隊在 ReScript、OCaml、Flow 等工業編程語言研發中的十多年經驗，迅速在兩年內完成了整套工具鏈的開發，致力於成為第一個走向國際的中國編程語言。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;2023 年 8 月 18 日，MoonBit 首次在海外發布後，迅速引起了國際技術社區的廣泛關注，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;並登上了 HackerNews 的頭條&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;。&lt;/span&gt;HackerNews 作為硅谷最具影響力的科技社區之一，對 MoonBit 的每一次重大特性更新都給予了高度關注。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;此外，MoonBit 還在全球 DevOps 領域權威媒體平台 The News Stack、日本頂尖科技社區 Zenn 等知科技媒體上頻頻出現，進一步鞏固了其全球影響力。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;同時，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 在工業應用方面進展迅速&lt;/strong&gt;，&lt;/span&gt;包括多家海外創業公司的應用、在國內擁有數據庫領域的商業合作伙伴等。這一過程中，MoonBit 一直致力於發揮其在語言速度、代碼精簡和數據處理等方面的卓越優勢。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 致力於實現全棧性能的卓越表現，&lt;span style=&quot;color:#000000&quot;&gt;包括編譯性能和運行時性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;通過專為多級中間表示（IR）定製的全局優化，不僅改善了內存佈局，減少了緩存未命中率，還為數據和控制流分析提供了一個優越的環境，從而確保了編譯和運行時的高性能。&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;從編譯速度來看，MoonBit 編譯 626 個包（package）只需 1.06 秒&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;比 Rust 快了近 9 倍，運行時間僅為 Go 的 35 分之一。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;534&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7c6b63d405a7f4bdf984f0ba7fb0075a5f4.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;strong&gt;小&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 在輸出 Wasm 代碼體積上相較於傳統語言有顯著優勢&lt;/strong&gt;。&lt;/span&gt;MoonBit 通過 WebAssembly（Wasm）組件模型，在生成代碼時實現了顯著的體積優化。相比其他編程語言，MoonBit 編寫的 Wasm 組件代碼體積大幅減少。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;例如，在編譯一個簡單的「Hello World」 HTTP 服務器時，MoonBit 的輸出文件大小僅為 27KB，而 WasmCloud 提供的 http-hello-world 模板中 Rust 的輸出為 100KB，TypeScript 為 8.7MB，Python 更是高達 17MB。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;380&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-48c358622b0cbde6b0df723a7440c927520.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;藉助前文提到的創新錯誤處理機制，MoonBit 有效解決了傳統編譯技術在錯誤處理機制轉換中遇到的適用範圍有限和內存開銷大的問題。通過靜態分析源程序中的錯誤處理代碼，並根據目標編程語言的特性進行轉換，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 擴大了適用語言範圍，減少了內存開銷，同時提升了代碼的安全性和穩定性。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;健壯的類型系統是 MoonBit 保障其安全的重要設計之一。MoonBit 採用了強大的類型系統，並內置靜態檢測工具，在編譯期檢查類型錯誤，從而提高代碼的正確性和可靠性。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;&lt;span&gt;MoonBit 的安全保障得益於其對 WebAssembly 的原生支持&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;，這一特性使得 MoonBit 能夠深度挖掘 Wasm 在沙箱環境、內存隔離以及默認的無權限機制（deny-by-default）等方面的安全架構優勢。通過這些先進的安全特性，&lt;span style=&quot;color:#000000&quot;&gt;釋放其在雲計算和邊緣計算安全問題上的潛力。&lt;span style=&quot;color:#000000&quot;&gt;同時結合語言自身類型系統安全，刪減無用代碼（DCE）、編譯為經過驗證的 Wasm 指令等三層保障，確保代碼可信與數據隱私安全。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 作為一門多範式編程語言，在保持語言簡單性的同時，也側重於提供數據處理的最佳體驗。MoonBit 通過原生支持 JSON 處理、Iter 類型和模式匹配實現高效數據處理，在語法設計上兼具動態語言的靈活性和靜態語言的安全高效，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;直觀而簡潔地進行對數據的解析和轉換&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;603&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d1a73b776bd8b028cca5b0dde1ffee2c8ee.jpg&quot; width=&quot;863&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;JSON 處理&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 在數據處理上的語法設計旨在優化常見的數據處理場景，解決傳統方法中由於生成多箇中間數組而導致的性能問題。&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;在 Iter 性能對比中，MoonBit 的數據處理速度達到了 JavaScript 的 25 倍之多。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;132&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6ed7286674f6bca7819fb515186692f9848.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#3498db&quot;&gt;一站式解決方案&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;相較於傳統的編程語言設計路線，MoonBit 從一開始就提供全套開發、調試、部署的一站式解決方案。MoonBit 不僅提供多後端支持、通用程序語言設計，還涵蓋了編譯器、構建系統、集成開發環境（IDE）、調試器，部署工具等。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;這個全面的設計使得 MoonBit 能夠實現高度垂直整合，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;而且&lt;/strong&gt;&lt;strong&gt;可以同時在雲端和邊緣端執行，更好地與各種資源進行交互&lt;/strong&gt;，&lt;/span&gt;從而為用戶提供極致的開發體驗和性能。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;與其他雲 IDE 不同，&lt;/span&gt;MoonBit 對 IDE 的支持不僅包含了現代 IDE 的所有功能，&lt;span style=&quot;color:#000000&quot;&gt;且 MoonBit 無需依賴容器。快速語義分析技術可處理大量的代碼庫，&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;並且在更大規模的代碼庫中也能在百毫秒級別完成 IDE 響應&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;現今大多數編程語言的 IDE 是為桌面操作系統設計的，未能很好地適應雲原生環境和邊緣端的需求。MoonBit 則通過採用高度並行化的架構和對分離編譯的原生支持，使得雲 IDE 可以直接在邊緣端運行。&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;這在現今大多數語言的雲 IDE 中是首次。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;除了傳統 IDE 的功能以外，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit AI 助手現已內置於 MoonBit IDE&lt;/strong&gt;&lt;/span&gt;，並實現了自動化測試生成、文檔生成，以及代碼解釋功能，為應用的開發、測試和文檔編寫提供了全方位的支持，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;使得開發者能夠更加專注於業務邏輯的實現&lt;/strong&gt;&lt;/span&gt;，而不必擔心底層的複雜性和維護工作。&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      MoonBit 在初始階段已經提供其他語言通常在成熟階段才擁有的調試工具。MoonBit 目前已提供 sourcemap 支持，支持源碼映射、基於源碼設置斷點、輸出 sourcemap 等，可以在瀏覽器中進行源碼調試。
      &lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;這項功能的推出不僅減輕了開發者在代碼調試方面的負擔，還顯著提升了開發和調試的流暢性。&lt;/strong&gt;&lt;/span&gt;
     &lt;/div&gt; 
     &lt;div&gt;
      &amp;nbsp;
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;對於 JavaScript 後端，用戶僅需在 JavaScript Debug Terminal 上執行 moon run --target js --debug，即可立刻進入調試。MoonBit 的 sourcemap 和調試支持顯著優化開發者的調試體驗，確保 JavaScript 代碼的生成儘可能貼近源碼，變量名和字段名保持一致，便於使用瀏覽器的 DevTools 進行源碼檢查和調試。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;MoonBit 作為一門從 0 到 1 的編程語言，對於生態建設尤為重視，其中一個關鍵在於構建高效且功能豐富的包管理系統。我們搭建了一箇中心化的 MoonBit 包管理平台 mooncakes.io，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;提升包的獲取速度和編譯效率，從而為開發者提供一個高效的工作環境。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;393&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e06f9551d39294ab7837bbbe075fe867ff4.png&quot; width=&quot;949&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;此外，我們注重文檔的管理和維護。為了讓第三方包更加易於開發者理解和使用，我們提供了文檔生成工具 moondoc，並在 mooncakes.io 集成了每個包的文檔，以幫助開發者編寫和分發包的文檔、幫助包的使用者創造高質量的應用。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d5687b779e646b8e3c4a4aa52eff121b143.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1000&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-aad8ed1afeb1f4ebb5c977b5a8f0f8b12ee.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;AI 時代下的編程語言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;這個世界是否還需要一門新的編程語言？答案是，是。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;編程語言的發展經歷了 60 年代時，結構化編程的興起。到 70 年代，則是面向對象編程與 C 語言。90 年代，是腳本語言與互聯網 。而 00 年代，是語言的統一與多樣性。到了 10 年代，是現代語言與大數據。編程語言在不斷進步，同時也有大量的編程語言漸漸銷聲匿跡。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;大模型時代浩浩蕩蕩的浪潮卷席了萬事萬物。編程語言作為計算機核心組件、&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;且是軟件開發者創造技術世界最重要的工具&lt;/strong&gt;&lt;/span&gt;，自然被頂上風口浪尖。整個技術行業都對編程語言提出了更高的要求。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在大模型時代，工具重塑了開發者的工作方式，&lt;/span&gt;&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;同時也降低了學習新語言的門檻。&lt;/strong&gt;&lt;/span&gt;開發者將更專注於創意和設計，代碼的實現和優化則由編程工具完成。這一轉變推動編程工具從簡單的代碼生成器進化為複雜問題解決平台。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit AI 雲原生開發者平台——MoonBit 編程語言及工具鏈，就在這個機遇與挑戰並存的時代應運而生。&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;MoonBit 的目標，是重塑軟件開發生態。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;span style=&quot;color:#3498db&quot;&gt;&lt;strong&gt;MoonBit 的未來路線&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;MoonBit AI 雲原生開發者平台是一個「道阻且長，行則將至」的系統工程。MoonBit 正在馬不停蹄地擴大 MoonBit 的社區力量、培養社區人才。2 年的時間裏 ，MoonBit 工具鏈已有幾百名社區貢獻者和近萬人的全球的用戶，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;增長速度遙遙領先。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;目前，MoonBit 已支持 Wasm 與 JS 後端。未來，MoonBit 計劃支持 native 後端。這意味着無論是 UI、客戶端、邊緣計算還是系統編程，用戶都能在 MoonBit 平台上找到適合自己的使用場景，&lt;span style=&quot;color:#2792c5&quot;&gt;&lt;strong&gt;從而使生態能夠覆蓋所有可能的應用場景。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;608&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-377ff22639054e8f2effaa82573ced91634.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307723/moonbit-beta</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307723/moonbit-beta</guid>
            <pubDate>Mon, 19 Aug 2024 02:37:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>GOGC 2024 | openKylin 首個園區站—浦東軟件園站正式發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;8 月 15 日至 16 日，由&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;開源中國&lt;/span&gt;&lt;span&gt;&lt;span&gt;與上海浦東軟件園聯合舉辦的 2024 全球開源極客嘉年華 GOGCxGOTC 全球開源技術峯會於上海張江&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;科學會堂&lt;/span&gt;&lt;span&gt;舉行。openKylin 作為中國領先的開源操作系統根社區，受邀參加此次大會高峯論壇，並攜 openKylin 2.0 亮相活動展區，同來自世界各地的頂尖開發者、開源愛好者、企業家和技術領袖，共同探討開源技術的最新進展及其對未來的影響。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2117&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5a08821e5b92ddd67d3802ccd02a933973c.jpg&quot; width=&quot;3175&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;高峯論壇：openKylin 全球首個園區站正式發佈&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;大會高峯論壇環節，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社區生態合作負責人馬發俊&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;帶來&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;《openKylin 園區運營戰略發佈》&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;主題分享，向大家展示 openKylin 園區站運營發展新藍圖。同時，在所有嘉賓的共同見證下，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 全球首個園區站-浦東軟件園站正式發佈&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，由 openKylin 社區生態合作負責人馬發俊、上海浦東軟件園股份有限公司總經理助理/董事會祕書鄭贇、廣東賽昉科技有限公司，軟件副總裁趙向偉、飛騰信息技術有限公司上海行業拓展總監王婷共同上台揭幕。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1998&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-853f9ee38a103e17c226230ff7b60cce4bd.jpg&quot; width=&quot;3000&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 園區站運營策略，旨在推進開源生態體系建設，以開源之力賦能產業園區價值重塑。此次浦東軟件園站的發佈不僅是對 openKylin 社區生態發展戰略的深入實踐，更是對技術創新與產業合作深度融合的積極探索。未來，openKylin 將在更加廣闊的舞台上，攜手合作夥伴共繪生態發展新篇章。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;展區互動：openKylin 2.0 版本驚豔亮相&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;大會展區同樣熱鬧非凡，openKylin 攜最新操作系統 2.0 版本亮相大會展區，吸引了眾多對開源技術滿懷熱情的開發者、社區成員，以及來自各開源項目應用場景的產業精英與跨界才俊駐足交流。通過現場演示與互動，展示開源技術的獨特魅力，激發了創新活力，共同見證開源技術的蓬勃生機。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1066&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-872cf4641473a89d96604ce948cb96c7280.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dd96fd3cc9a2beeb3f196df5d3f945dfc77.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;為期兩天的盛會，不僅是一場技術的盛宴，更是一次思想的深刻碰撞。openKylin 以開放、包容、創新的姿態，向世界展示了中國開源力量的崛起與擔當。展望未來，openKylin 將繼續攜手全球合作伙伴，共同推動開源技術的普及與發展，為構建一個更加開放、協同、創新的數字世界貢獻自己的力量，讓開源精神的光芒照亮前行的道路。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307711</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307711</guid>
            <pubDate>Mon, 19 Aug 2024 01:40:32 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>RISC-V 初創公司 Akeana 獲 1 億美元融資</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana USA Inc. 是一家開發基於 RISC-V 處理器架構的芯片的初創公司，於 2021 年創立。該公司發佈&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.akeana.com%2Fakeana-exits-stealth-mode-with-comprehensive-risc-v-processor-portfolio-challenging-the-semiconductor-industry-status-quo%2F&quot; target=&quot;_blank&quot;&gt;公告稱&lt;/a&gt;，在 Kleiner Perkins、Mayfield 和 Fidelity 等 A 級投資者的支持下，已籌集到超過 1 億美元的資金，將正式推出可針對任何工作負載或應用進行獨特定製的 IP 解決方案產品線。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 由設計 Marvell ThunderX2 服務器芯片的同一團隊組建，提供各種 IP 解決方案，包括微控制器、Android clusters、AI vector cores 和子系統，以及用於網絡和數據中心的計算集羣。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;279&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7015887b068390f02e1affae87d8561c3f7.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該公司發佈了三條處理器產品線和 SoC IP，包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 100 系列： 一系列高度可配置的處理器，具有 32 位 RISC-V 內核，支持從嵌入式微控制器到邊緣網關再到個人計算設備的應用程序。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 1000 系列： 包含 64 位 RISC-V 內核和 MMU 的處理器系列，可支持多種操作系統，同時保持低功耗和低芯片面積要求。這些處理器支持有序或無序流水線、多線程、矢量擴展、虛擬機管理程序擴展和其他擴展（屬於最近和即將推出的 RISC-V 配置文件的一部分），以及可選的 AI 計算擴展。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 5000 系列： 一系列極致性能處理器，代表了行業性能領先地位，超越了老牌競爭對手和 RISC-V 生態系統。該系列採用 64 位 RISC-V 內核，針對下一代設備、筆記本電腦、數據中心和雲基礎設施中的苛刻應用進行了優化，從而實現了終極差異化。這些處理器與 Akeana 1000 系列兼容，但單線程性能要高得多。 &lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Processor System IP： 創建&amp;nbsp;processor SoC 所需的 IP 塊集合，包括一致性集羣緩存、I/O MMU 和中斷控制器 IP。此外，Akeana 還提供可擴展網格和一致性中心 IP（與 AMBA CHI 兼容），用於為數據中心和其他用例構建大型一致性計算子系統。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;AI 矩陣計算引擎： 旨在卸載矩陣乘法運算以實現 AI 加速。它的大小可配置，支持各種數據類型，可以像核心一樣連接到連貫集羣緩存塊，以實現最佳數據共享。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Akeana 首席執行官 Rabin Sugumar 表示：「我們的團隊在設計世界一流的服務器芯片方面擁有豐富的經驗，現在，隨着我們正式進入市場，我們正在將這些專業知識應用於更廣泛的半導體市場。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307613/risc-v-akeana-100m-funding</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307613/risc-v-akeana-100m-funding</guid>
            <pubDate>Sun, 18 Aug 2024 03:17:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源下載工具 Aria 被詐騙份子使用，開發者無奈清空代碼倉庫</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;開源下載工具 Aria 開發者昨日刪除了該項目在 GitHub 倉庫中的全部源代碼。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0817/124242_UnZM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Aria 開發者寫道：「&lt;strong&gt;&lt;em&gt;因 Aria 被詐騙分子使用，導致我被跨省，因此本項目源碼永久刪除。&lt;/em&gt;&lt;/strong&gt;」&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0817/123724_l2gM_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;via&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAriaLyy%2FAria%2Fcommit%2F16e1fddca5996c1b2aba8b3284a0389f372ccf0b&quot; target=&quot;_blank&quot;&gt;https://github.com/AriaLyy/Aria&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Aria 是一個高性能、輕量級、易於使用的文件下載框架，主要應用於 Android 平台，目前在 GitHub 上有超過 5600 個 Star。&lt;/p&gt; 
&lt;p&gt;Aria 提供了豐富的 API，讓用戶可以方便地管理下載任務，包括添加、暫停、取消以及查詢等操作，支持斷點續傳、限速下載、多線程下載等功能，旨在提升用戶的下載體驗。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307530</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307530</guid>
            <pubDate>Sat, 17 Aug 2024 04:45:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Rust 團隊公佈 2024 年發展目標</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Rust 團隊公佈了 2024 年下半年的 26 個項目目標。其中 3 個被指定為 flagship 目標，代表預計將產生最廣泛整體影響的目標。包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FRust-2024-Edition.html&quot; target=&quot;_blank&quot;&gt;發佈 Rust 2024 版本&lt;/a&gt;。2024 版計劃進行的修改包括：通過調整捕獲行為，支持&lt;code&gt;-&amp;gt; impl Trait&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;和&amp;nbsp;&lt;/span&gt;&lt;code&gt;async fn&lt;/code&gt;；通過保留&lt;code&gt;gen&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;keyword&lt;/span&gt;，允許在未來添加（async）生成器，以及更改&lt;code&gt;!&lt;/code&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;類&lt;/span&gt;型的回退。計劃在今年晚些時候完成 Rust 2024 版本功能的開發。並於 2025 年 1 月 3 日發佈測試版 Rust v1.85，2 月 20 日發佈穩定版 Rust v1.85。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;164&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f0540caebdcee20a9556eabbdb6fbb6db00.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fasync.html&quot; target=&quot;_blank&quot;&gt;使 Async Rust 體驗更接近 sync Rust&lt;/a&gt;。&lt;span style=&quot;color:#0c0c0c&quot;&gt;計劃提供幾個異步構建塊功能，其中最值得注意的是對 async closures 和&lt;/span&gt;&lt;code&gt;Send&lt;/code&gt;&amp;nbsp;bounds&amp;nbsp;&lt;span style=&quot;color:#0c0c0c&quot;&gt;的支持。這是將&amp;nbsp;async Rust 的體驗提升到與&amp;nbsp;sync Rust 相同質量水平的計劃的一部分。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Frfl_stable.html&quot; target=&quot;_blank&quot;&gt;解決在穩定的 Rust 上構建 Linux 的一些障礙&lt;/a&gt;。Linux 內核對 Rust 開發的實驗性支持被認為是&amp;nbsp;Rust&amp;nbsp;的一個分水嶺，表明 Rust 確實有能力開發各種低級系統應用。但目前相關支持工作還停留在實驗性階段，項目團隊計劃在 2024H2 中努力掃清障礙。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;其餘 23 個目標分別是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fmin_generic_const_arguments.html&quot; target=&quot;_blank&quot;&gt;擴展 const 泛型的「可穩定」原型&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fyank-crates-with-a-reason.html&quot; target=&quot;_blank&quot;&gt;管理員提供的 yanked crates 的原因&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FProject-goal-slate.html&quot; target=&quot;_blank&quot;&gt;制定項目目標清單&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FATPIT.html&quot; target=&quot;_blank&quot;&gt;關聯類型位置 impl trait&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fcargo-semver-checks.html&quot; target=&quot;_blank&quot;&gt;開始解決 merging into cargo 中的&lt;code&gt;cargo-semver-checks&lt;/code&gt;blockers 問題&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fconst-traits.html&quot; target=&quot;_blank&quot;&gt;Const traits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fergonomic-rc.html&quot; target=&quot;_blank&quot;&gt;Ergonomic ref-counting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fsandboxed-build-script.html&quot; target=&quot;_blank&quot;&gt;探索沙盒構建腳本&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FRust-for-SciComp.html&quot; target=&quot;_blank&quot;&gt;公開實驗性的 LLVM 功能以實現 automatic differentiation 和 GPU offloading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fpubgrub-in-cargo.html&quot; target=&quot;_blank&quot;&gt;擴展 pubgrub 以匹配 Cargo 的依賴解析&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fmerged-doctests.html&quot; target=&quot;_blank&quot;&gt;實施「merged doctests」以節省文檔測試時間&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Frustdoc-search.html&quot; target=&quot;_blank&quot;&gt;讓 Rustdoc Search 更易於學習&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fnext-solver.html&quot; target=&quot;_blank&quot;&gt;下一代 trait solver&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Foptimize-clippy.html&quot; target=&quot;_blank&quot;&gt;優化 Clippy 和 linting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FPatterns-of-empty-types.html&quot; target=&quot;_blank&quot;&gt;空類型的模式&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2FPolonius.html&quot; target=&quot;_blank&quot;&gt;nightly 可擴展的 Polonius 支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fcargo-script.html&quot; target=&quot;_blank&quot;&gt;穩定&lt;code&gt;cargo-script&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fdoc_cfg.html&quot; target=&quot;_blank&quot;&gt;穩定&lt;code&gt;doc_cfg&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fparallel-front-end.html&quot; target=&quot;_blank&quot;&gt;穩定 parallel front end&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fstd-verification.html&quot; target=&quot;_blank&quot;&gt;調查工具對標準安全性驗證的適用性&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fa-mir-formality.html&quot; target=&quot;_blank&quot;&gt;Testing infra + contributors for a-mir-formality&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fannotate-snippets.html&quot; target=&quot;_blank&quot;&gt;為 rustc diagnostic output&lt;/a&gt;&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fannotate-snippets.html&quot; target=&quot;_blank&quot;&gt;使用 annotate-snippet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Fuser-wide-cache.html&quot; target=&quot;_blank&quot;&gt;User-wide 的構建緩存&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;公告稱，這些目標旨在&lt;span style=&quot;color:#000000&quot;&gt;進一步實現 Rust 的使命，&lt;/span&gt;即&lt;strong style=&quot;color:#000000&quot;&gt;讓每個人都能構建可靠、高效的軟件&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;更多詳情可查看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frust-project-goals%2F2024h2%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://rust-lang.github.io/rust-project-goals/2024h2/index.html&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307523/rust-project-goals-2024h2</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307523/rust-project-goals-2024h2</guid>
            <pubDate>Sat, 17 Aug 2024 03:30:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>1Panel 應用推薦：Bytebase 開源數據庫 DevOps 解決方案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;1Panel（&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;github.com/1Panel-dev/1Panel&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;）是一款現代化、開源的 Linux 服務器運維管理面板，它致力於通過開源的方式，幫助用戶簡化建站與運維管理流程。為了方便廣大用戶快捷安裝部署相關軟件應用，1Panel 特別開通應用商店，精選各類高質量的開源工具和應用軟件，為用戶的應用安裝與升級操作提供便利。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，1Panel 應用商店已經上架了超過 100 款精品軟件並且定期更新維護，基本涵蓋了大部分用戶的基本裝機需求。自 2024 年 1 月起，1Panel 開源項目組特別開設「應用推薦」專欄，為大家推薦 1Panel 應用商店中的寶藏開源軟件。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;本期推薦應用&lt;/h1&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Bytebase 開源數據庫 DevOps 解決方案&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;540&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5228bc9fc16f179efbb013ec15c8b0f2cd9.jpg&quot; width=&quot;960&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-官方網站-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;www.bytebase.com&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-開源許可協議-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Unknown&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-應用描述-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Bytebase 是一款為開發者、DBA 和平台工程師設計的數據庫 CI/CD 工具。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-開發語言-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;Go、TypeScript、Vue&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-上架版本-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;v2.22.1&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-GitHub Star-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;10,800+&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;-GitHub Fork-&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:center&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;690+&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;推薦原因&lt;/h1&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#ff8124&quot;&gt;Bytebase 是一款為開發者、DBA 和平台工程師設計的數據庫 CI/CD 工具，也可以把 Bytebase 理解為在用戶和數據庫之間工作的中間件。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;用戶可以通過兩種途徑使用 Bytebase。首先是通過 GUI（圖形用戶界面），Bytebase 為用戶提供了一個可以管理數據庫開發任務的、基於 Web 的協作空間；其次就是通過 API 的方式，團隊可以將 Bytebase 通過 API 的方式集成到自己的開發工作流中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;Bytebase 使用 Go 語言開發，能夠實現對數據庫的生命週期管理。Bytebase 的核心功能包括：SQL 審查、數據庫 CI/CD 和變更管理自動化、GitOps（Database-as-Code）、批量變更和查詢、SQL 編輯器、動態數據脫敏、數據訪問控制以及數據回滾等。這些功能有助於保障數據庫的安全性，能夠有效防範未經授權的數據庫訪問，避免數據泄露。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;Bytebase 的審計日誌功能能夠記錄用戶對數據庫進行的操作，以便在發生故障時進行追蹤和排查。Bytebase 可以替代多種本地 SQL 客戶端，例如 Navicat、DBeaver、DataGrip、pgAdmin、phpMyAdmin 等，為用戶提供更加便捷、高效的數據庫管理體驗。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;Bytebase 開源數據庫 DevOps 解決方案由以下工具組成：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Bytebase 控制枱：&lt;/strong&gt;一個基於 Web 的圖形用戶界面，供開發者和 DBA 管理數據庫開發生命週期；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;Bytebase API：&lt;/strong&gt;提供 gRPC 和 RESTful API，用於操作 Bytebase 的各個方面；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Bytebase CLI：&lt;/strong&gt;命令行工具，幫助開發者將數據庫變更集成到現有的 CI/CD 工作流中；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;Bytebase GitHub App 和 SQL Review GitHub Action：&lt;/strong&gt;GitHub 應用和 GitHub Action，用於檢測 SQL 反模式並在 Pull Request 中強制執行一致的 SQL 風格指南；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#005eeb&quot;&gt;■&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;Terraform Bytebase Provider：&lt;/strong&gt;Terraform 提供程序，允許團隊通過 Terraform 管理 Bytebase 資源。典型的設置涉及團隊使用 Terraform 從雲服務提供商處創建數據庫實例，然後使用 Bytebase 提供程序將這些實例準備好以供應用程序使用。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307492</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307492</guid>
            <pubDate>Fri, 16 Aug 2024 15:20:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>全球開源技術峯會 GOTC 2024 圓滿落幕</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;8 月 16 日，由上海浦東軟件園與開源中國聯合主辦的全球開源技術峯會 GOTC 2024 圓滿落幕。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;853&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dd70ea86628d2a1b7463796ee99366f5353.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;h2&gt;5 億+ 曝光量&lt;/h2&gt; 
 &lt;p&gt;本次大會為期兩天，總共吸引了超過 3000 人到現場參會，線上直播觀看量超過 680 萬人次。媒體方面，共計有 30 多家媒體對本次大會進行報道，包括新華社、人民日報、經濟日報、文匯報、新民晚報、證券日報、界面新聞、浦東時報、浦東電視台、東方財經電視台、中企視訊等主流新聞媒體，人民網、央視網、央廣網、鳳凰網、澎湃新聞、光明網、中國新聞網、中國網、東方網、經濟網、中國企業網等主流新聞網站。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;曝光總量超過 5 億次，相關報道文章閲讀量超過 800 萬次。&lt;/p&gt; 
 &lt;p style=&quot;text-align:left&quot;&gt;&lt;img height=&quot;853&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6648167275f49580f7f011c4ed9d2000c0a.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h2&gt;特設高峯論壇，探討&lt;strong&gt;開源生態與商業化、&lt;/strong&gt;&lt;strong&gt;AIGC&lt;/strong&gt;&lt;strong&gt; 產業前沿&lt;/strong&gt;&lt;/h2&gt; 
  &lt;p&gt;開源技術的快速發展和廣泛應用，使得開源生態的構建及其商業化進程受到了業界的廣泛關注。與此同時，AIGC 技術的崛起正日益成為推動產業創新與轉型升級的關鍵動力。伴隨着技術的持續成熟和市場空間的不斷拓展，AIGC 技術的產業化應用正逐步成為行業焦點。&lt;/p&gt; 
  &lt;p&gt;在此背景下，本次大會特設高峯論壇，探討開源生態與商業化、AIGC 產業前沿兩大主題。會上，眾多業內專家圍繞開源技術在機器人、區塊鏈、操作系統、芯片等領域的生態建設和商業化路徑展開分享，以及就 AIGC 技術的創新趨勢、商業潛力以及對社會的深遠影響展開探討。&lt;/p&gt; 
  &lt;p&gt;&lt;img height=&quot;474&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e6f7d22536d1559c0a196a0192d98295e05.png&quot; width=&quot;839&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h2&gt;&lt;strong&gt;深度聚焦並全面探討 &lt;/strong&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;strong&gt; 技術&lt;/strong&gt;&lt;/h2&gt; 
   &lt;p style=&quot;text-align:left&quot;&gt;大會除了設置「雲原生與微服務架構」「開源生態與商業化」等論壇，還結合當下技術與行業發展趨勢，深度聚焦並全面探討 AI 技術。&lt;/p&gt; 
   &lt;p&gt;主論壇演講廣泛涵蓋了人工智能領域的多個重要維度，從開源硬件到具身智能，從深度學習平台的技術革新到開源 AI 生態的構建，以及大模型應用的落地和企業在開源環境下的 AI 戰略。這些討論為 AI 未來發展方向提供了寶貴的指引。&lt;/p&gt; 
   &lt;p&gt;&lt;img height=&quot;1118&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0817/003046_QPVw_3820517.png&quot; width=&quot;1664&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;p&gt;此外，還有多個論壇主題與 AI 密切相關，比如 AIGC 產業前沿、 LLMOps 最佳實踐、硬核 AI 技術創新與實踐、開源數據庫與 AI 協同創新、數據基礎與 GenAI 開發範式 —— 開源生態的機遇與探索、全球開源人才及教育等論壇，覆蓋 AI 技術的各個前沿領域，加強了學術界、產業界和開源社區之間的緊密合作與知識共享，為參會者提供深度洞察和實踐指導，推動 AI 技術與各領域的深度融合與發展。&lt;/p&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;&lt;img height=&quot;571&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b70da139828a80e673e573e77a20401e009.png&quot; width=&quot;841&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;h2&gt;多個重磅&lt;strong&gt;項目啓動&lt;/strong&gt;&lt;/h2&gt; 
       &lt;p&gt;本次大會，有多個重磅項目宣佈啓動，從開源生態構建、開源技術應用、開源社區擴展、開源項目推廣以及開源人才培養等方面促進開源生態持續繁榮發展。&lt;/p&gt; 
       &lt;ul&gt; 
        &lt;li&gt; &lt;p&gt;開源生態網絡共建暨張江節點揭牌&lt;/p&gt; &lt;/li&gt; 
        &lt;li&gt; &lt;p&gt;世紀互聯與開源中國宣佈正式開啓戰略合作&lt;/p&gt; &lt;/li&gt; 
        &lt;li&gt; &lt;p&gt;openKylin 園區運營戰略發佈暨全球首個園區站——浦軟站成立&lt;/p&gt; &lt;/li&gt; 
        &lt;li&gt; &lt;p&gt;國際開源技術人才培養基地掛牌儀式暨國內首個 OSPO 課程聯合發佈&lt;/p&gt; &lt;/li&gt; 
        &lt;li&gt; &lt;p&gt;LFOSSA 國際人才培養認證中心暨 RISC-V 國際人才師資培養基地啓動&lt;/p&gt; &lt;/li&gt; 
       &lt;/ul&gt; 
       &lt;div&gt;
        &lt;img height=&quot;478&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5cecfc832ba1c084b275cd746f3dac1ef0e.png&quot; width=&quot;851&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
       &lt;/div&gt; 
       &lt;div&gt; 
        &lt;div&gt; 
         &lt;h2&gt;100+ 家企業、開源社區匯聚&lt;/h2&gt; 
         &lt;div&gt;
          大會現場設置了展區，匯聚了 F5 NGINX、飛騰信息、Elasticsearch、百度
          &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;、openKylin 社區等涵蓋 Web 服務、自主核心芯片、開源數據庫等多個領域的 100+ 企業和開源社區，不僅帶來了行業領先的解決方案，也為參與者搭建了一個探索開源技術未來趨勢的窗口。
         &lt;/div&gt; 
         &lt;div&gt;
          &lt;img height=&quot;385&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-432083689f9c84f77764a8cd01d0d1df27a.png&quot; width=&quot;839&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
         &lt;/div&gt; 
         &lt;div&gt; 
          &lt;div&gt; 
           &lt;h2&gt;致謝&lt;/h2&gt; 
           &lt;div&gt;
            GOTC 2024 圓滿落幕，感謝政府領導支持，感謝大會出品人與論壇出品人的積極參與，感謝各位嘉賓的精彩分享，感謝眾多開源專家出謀劃策，感謝所有媒體，感謝所有社區合作伙伴，感謝所有觀眾朋友，感謝所有工作人員。
           &lt;/div&gt; 
           &lt;div&gt;
            感謝贊助商、合作伙伴對本次峯會的大力支持：
           &lt;/div&gt; 
           &lt;div&gt;
            &lt;img height=&quot;2540&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-05d2fba5fd65df8b52cd7bcb5c5163d4efb.png&quot; width=&quot;1445&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
           &lt;/div&gt; 
          &lt;/div&gt; 
         &lt;/div&gt; 
        &lt;/div&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307485/gotc-gogc-2024</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307485/gotc-gogc-2024</guid>
            <pubDate>Fri, 16 Aug 2024 14:31:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源日報 | 網傳海思可能脫離華為；滴滴開源 Unify；deepin V23 發佈；Transformer 的可視化解釋；谷歌前 CEO 演講大爆料</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.16&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307354/didi-unify-flutter&quot;&gt;滴滴開源 Flutter 混合開發框架 Unify&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;滴滴近日開源了自研 Unify 框架，旨在解決大規模跨端落地場景下，Flutter 與原生模塊之間的通信問題。Unify 通過平台無關的模塊抽象、靈活的實現注入、自動代碼生成等特性，為開發者提供高效、靈活、易用的 Flutter 混合通信能力。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;開源地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdidi%2FUnify&quot; target=&quot;_blank&quot;&gt;https://github.com/didi/Unify&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Unify 是一個 Flutter 混合開發框架，由滴滴出行國際化外賣團隊自研，亮點特性包括:&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;strong&gt;平台無關的模塊抽象&lt;/strong&gt;: 允許開發者使用 Dart 語言聲明與平台無關的模塊接口與實體。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;靈活的實現注入&lt;/strong&gt;: 開發者可以靈活地選擇注入原生實現（Android/iOS）或 Flutter 實現。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自動代碼生成&lt;/strong&gt;: 藉助強大的代碼生成引擎，Unify 可以自動生成 Flutter、Android、iOS 多平台下統一調用的 SDK。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/307293/deepin-v23-released&quot;&gt;deepin V23 正式發佈&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;8 月 15 日，國際知名開源社區 deepin（深度）社區在線上舉辦了主題為 「聚 AI 而生，大有不同」 新品發佈會，正式對外發布開源操作系統 deepin V23，帶來了全新 DDE 視界、 AI For OS、「如意玲瓏」 應用生態、「deepin IDE」 集成開發環境等諸多重磅更新。&lt;/p&gt; 
 &lt;p&gt;deepin V23 研發耗時三年，上線了 200 餘個產品優化和新增需求，迭代了 9 個版本、51 次內測，自研了 8 款開發工具。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/307420&quot; target=&quot;news&quot;&gt;學生篡改同學高考志願被刑拘，構成「破壞計算機系統罪」&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0816/120920_ymfD_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2703634217%2FOso7kapwK&quot; target=&quot;_blank&quot;&gt;Processing 是一種開源編程語言，專門為電子藝術和視覺交互設計而創建&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;它由 MIT 媒體實驗室的 Casey Reas 和 Benjamin Fry 於 2001 年發起。Processing 的目的是通過可視化的方式輔助編程教學，並在此基礎上表達數字創意。&lt;/p&gt; 
    &lt;p&gt;Processing 語言的語法簡易，基於 Java 語言，但更適合藝術家、設計師等非程序員羣體。它廣泛應用於藝術、交互、動畫、數據可視化、視覺設計和原型開發等領域。&lt;/p&gt; 
    &lt;p&gt;下面為它的一段代碼示例&lt;/p&gt; 
    &lt;p&gt;f=0,draw=a=&amp;gt;{for(f||createCanvas(W=400,W,WEBGL),background(P=PI/150),R=rotate,R(f+=.001),N=sin,u=0;u&amp;lt;TAU;u+=P)for(v=0;v&amp;lt;TAU;v+=P)push(r=200*N(v)),S=(Z=tan(U=u+f)*N(v)*r)*cos(U+v)*9,rotateX(U),R(U),translate(N(v)*W,N(Z/W)*tan(v)*Z,2*-Z),pop(sphere(S/600,W))};&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;物理芝士數學醬&lt;/strong&gt;&lt;/span&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1554710050%2FOsoZHtJT3&quot; target=&quot;_blank&quot;&gt;馬斯克的梗圖滿天飛&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     馬斯克的最新大模型剛上線，就把自家老闆玩壞了，現在已經梗圖滿天飛了。
    &lt;/div&gt; 
    &lt;div&gt;
     &amp;nbsp;
    &lt;/div&gt; 
    &lt;div&gt;
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6f88fdfc75aff8f45fc0007dc9a4daf721e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;傅盛&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1144393351%2FOsv7Ro3Wf%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;網傳海思可能會脫離華為，成為獨立的芯片公司&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     網傳海思可能會脫離華為，成為獨立的芯片公司，這樣海思就可以向全球各廠商供貨，而不是華為獨佔。對於海思的發展壯大可是個很好的推動，各手機廠商都可以推出基於麒麟處理器以及開源鴻蒙系統（就像安卓一樣，可以自主打造 UI）的手機，除了高通、聯發科技，要有了新的選擇，而這個選擇是完全自主可控的，不會受到外部威脅，而且可以對高通狠狠地壓價，這對於國產芯片產業和信息產業將是巨大利好。如果真能如此，那麼華為等於是把培養好的優秀的孩子為國貢獻了，更加值得敬佩！（以上僅為預測）
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;通信老柳&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FOslP9BqBx%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;Transformer 的可視化解釋&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    關於 Transformer 的可視化解釋，已經有不少了，但是科普永遠不嫌多。這個可視化網站，模擬了實際 Token 的運行，很寫實了。鏈接：https://poloclub.github.io/transformer-explainer/
   &lt;/div&gt; 
   &lt;div style=&quot;text-align:right&quot;&gt;
    - 微博&amp;nbsp;
    &lt;strong&gt;高飛&lt;/strong&gt;
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1560906700%2FOsvmtkAq5&quot; target=&quot;_blank&quot;&gt;前 Google CEO 聲稱遠程工作導致了 Google 在 AI 競爭中落後&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;曾經擔任谷歌 CEO 長達 10 年之久的 Eric Schmidt 前幾天去斯坦福大學受邀計算機學院的會議，他的演講全程各種放飛自我，中途語重心長的告訴台下學生，這場會議是保密的，自己説的那些話千萬不要外傳。&lt;/p&gt; 
    &lt;p&gt;然而，主辦方對 Eric Schmidt 説，這場會議有攝像頭正在全程直播……他的表情就凝固了。雖然斯坦福大學後來把視頻從 YouTube 撤了下去，但已經有很多人都做了存檔，Github 上也有全文備份：transcripts&lt;br&gt; /Stanford_ECON295⧸CS323_I_2024_I_The_Age_of_AI,_Eric_Schmidt.txt&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;闌夕&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240815A08XLJ00&quot; target=&quot;_blank&quot;&gt;ETH 總供應量突破 1.2 億枚&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span style=&quot;background-color:#ffffff; color:#1f1f1f&quot;&gt;去中心化的開源區塊鏈平台以太坊最近達到重要里程碑，ETH 總供應量突破 1.2 億枚，Ultrasound.money 的最新數據，過去 30 天內發行了 77,091 個 ETH，當前以太坊代幣供應量已增加至約 1.2028 億枚 ETH。除了過去 30 天內發行的 77,091 ETH 之外，還有 19,438 ETH 通過銷燬機制被銷燬，導致淨供應量增加約 57,653 ETH。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;幣界網&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn814024429%3FserialId%3Df180c7ac8bc4269e03b11d09af63d811&quot; target=&quot;_blank&quot;&gt;美國 AI 法案大削弱！AI 圈炸鍋，李飛飛公開譴責，國內 AI 企業關心的全在這了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;飽受爭議的加州《前沿 AI 模型安全創新法案》（後稱加州 AI 安全法案）在大幅度削弱後，順利通過加州眾議院撥款委員會的審核。在國家層面監管法律難產的困局中，這成為了美國在 AI 監管上邁出的重要一步，然而科技界部分人士認為這最終將會損害加州乃至美國在 AI 領域的領先地位。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;智東西&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F36kr.com%2Fp%2F2908069089549185&quot; target=&quot;_blank&quot;&gt;半年虧 30 億，「硅片王」沒扛住，退二線了&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;小劉有些緊張了，他是 TCL 中環天津基地的一名工程師。兩週前，這個硅片巨頭的 CEO 沈浩平的突然辭任，開始在內部產生影響。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;據他説，目前公司已經開始有基地部分停工，該消息並未得到 TCL 中環的確認。公開數據顯示，這家公司的硅片業務開工率在今年上半年維持在 95% 左右，而老對手隆基綠能只有 50%。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;中國企業家雜誌&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fstock%2Fusstock%2Fc%2F2024-08-16%2Fdoc-inciuums2788305.shtml&quot; target=&quot;_blank&quot;&gt;谷歌前 CEO 建議買入英偉達：AI 芯片領先地位很難被超越&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;施密特在斯坦福大學本週發佈、但後來被刪除的一段視頻中表示，大型科技公司正計劃對基於英偉達的人工智能數據中心進行越來越大的投資，建設成本可能高達 3000 億美元。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#212121&quot;&gt;環球市場播報&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_2853016445_aa0d937d02000zqde.html&quot; target=&quot;_blank&quot;&gt;破解 AI 大模型落地成本難題，開源開放是「必修課」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;雖然開源大模型相關產品比閉源大模型的產品問世的時間較晚，但是其增長速度迅猛，而開源大模型的能力當下也足以媲美最先進的閉源大模型。例如，Meta 最新發布的 Llama3.1 模型的參數規模達到 403B，是目前參數規模最大的開源模型。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;鈦媒體 APP&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8c5hSlbWELg&quot; target=&quot;_blank&quot;&gt;國泰君安：算力需求高增 AI ASIC 突圍在即&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國泰君安證券發佈研報認為，ASIC 針對特定場景設計，有配套的通信互聯和軟件生態，雖然目前單顆 ASIC 算力相比最先進的 GPU 仍有差距，但整個 ASIC 集羣的算力利用效率可能會優於可比的 GPU，同時還具備明顯的價格、功耗優勢，有望更廣泛地應用於 AI 推理與訓練。其軟硬件生態體系日趨成熟，未來有望實現高速增長。國泰君安證券看好 ASIC 的大規模應用帶來雲廠商 ROI 提升，同時也建議關註定製芯片產業鏈相關標的。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;智通財經 APP&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_1650111241_625ab309020019r6g.html&quot; target=&quot;_blank&quot;&gt;阿里調整仍「在路上」 淘天加速商業化是重中之重&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;另據國信證券統計的電商企業 2023 年的貨幣化率數據，2023 年抖音電商的貨幣化率飆高至 9%，拼多多貨幣化率超過了 4.5%，淘寶天貓的貨幣化率約為 3.77%。具體將淘寶與拼多多做對比，2023 年淘寶的貨幣化率約為 1.1%，拼多多的貨幣化率則是淘寶的 4 倍，約為 4.4%。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;由此可見，此前淘寶對商家加收基礎軟件服務費，目的在於提升淘寶貨幣化率，在接下來一段時間也會成為阿里巴巴增加營收的重要手段之一。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;- &lt;/span&gt;&lt;strong&gt;中國經營報&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnwtgck%2Fpiping-server&quot; target=&quot;_blank&quot;&gt;nwtgck/piping-server&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a8fc6c0e93a2411f0115ee7fc6c0c9ea725.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnwtgck%2Fpiping-server&quot; target=&quot;_blank&quot;&gt;https://github.com/nwtgck/piping-server&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Piping 是輕量級的開源文件傳輸工具，支持自託管，支持使用 curl、wget 下載，支持更廣泛地在無瀏覽器的設備上使用，也可以用於不同設備間傳輸文本或者文件，或者在不同用戶間傳遞資料等場景。&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4939618/blog/15330069&quot; target=&quot;_blank&quot;&gt;基於飛槳框架的稀疏計算使用指南&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;本文將詳細介紹如何基於飛槳框架進行稀疏計算，包括稀疏數據格式的基礎知識、如何創建和操作稀疏張量，以及如何開發和訓練稀疏神經網絡模型，特別是如何實現和應用稀疏 ResNet。通過這些知識，我們可以更有效地利用計算資源，加速模型訓練過程，同時提高模型處理大規模稀疏數據的能力。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;圖片&quot; height=&quot;251&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c6086b15bb71ba6ac953c90ab8894148b7f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用戶觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FLx1y1-XGEnHVjr8QZFuI6A&quot; target=&quot;_blank&quot;&gt;deepin V23 正式發佈：全新 DDE 桌面環境、「原子更新」能力、全棧自研矩陣、「如意玲瓏」軟件包格式&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：deepin 的界面我真感覺不錯&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：挺好的。爭取後面慢慢把桌面軟件閉環，形成一個統一的系統。提供統一的體驗。而不再是積木一樣拼裝。尤其是 api，abi，慢慢沉澱穩固下來，不輕易變動。linux 桌面世界，太碎片化了，導致應用開發分發是個老大難問題。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：新版桌面是基於 Wayland 的嗎？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：有類似 xrdp 這樣的軟件嗎？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：可惜是舊世界&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：emm Allure 的報告，加把勁吧，別在文章上下功夫&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：瀏覽器是自研的嗎，那前端不是要多適配一種（還是基於 chromium 封裝的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：對哪些筆記本做了兼容性測試，有沒有推薦清單？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：一會 Deepin v23，一會 Deepin V23，一會又 Deepin 23。你這個系統一點不講究。版本號亂的一塌糊塗。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：openkylin 追的很緊，又搞一套標準，都在搶信創這塊蛋糕，但技術上説還是看好 deepin 的方案&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8ov7oRIn4qw2Xt4DAdraWA&quot; target=&quot;_blank&quot;&gt;前谷歌 CEO 大實話：遠程工作導致谷歌在 AI 競爭中輸得一塌糊塗、開源負擔不起 AI 行業的成本&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：受教了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：google 覺得讓員工儘早下班取得工作生活平衡比贏得競爭更重要，什麼神仙公司&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：台積電的流水線可不是一般的流水線&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：分佈式電源改造了車間才使生產力大幅提高？AI Agent？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：現在的 ai 是電燈取代蠟燭，聊勝於無，真正的第二次工業革命是電動機和電動化設備大規模投入使用。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：其説是谷歌的選擇不如説是美國替他做了選擇，因為美國需要這樣的價值觀來吸引人才&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FfvoLhtfh5a-DFEWphEjmgw&quot; target=&quot;_blank&quot;&gt;32 歲女生學編程，為 k8s 開源社區貢獻代碼——結果被羣嘲&lt;/a&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：我認為沒問題，格式錯誤也是錯誤，是錯誤就可以被修復，這很難理解嗎，程序員的嚴謹哪裏去了？不要告訴我文檔貢獻者不是貢獻者哈&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：小紅書上已經開始有跟風的模仿者了，這就真無語了。想參加開源就認真一些，即使帶着功利心也請維護開源社區的環境。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：前兩天我還就此噴了一個感覺像是為她洗的博主，説什麼她這種新人提交 pr 就不該噴，那我尋思着轉碼 20 天就開始看 k8s，提交了一個沒什麼用的 pr，這種新人不該被噴？20 天一個語言就剛學完，都沒熟練就搞這種，活該被罵，屬於是純粹作秀&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：看似學編程， 實則是搞自媒體&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：大家噴的是她的技術嗎？噴的是這種人投機取巧，冶容誨淫的行為。因為那些混子項目經理早就這麼幹了，這個新來臉還沒混熟，門路倒是摸透了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：bro 看起來更適合稻殼兒開源社區&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：不是語雀文檔？&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：這自我營銷意識，行業熱門關鍵詞的抓取能力，不愧是國內 985 的頭腦&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：這博主確實心態很有問題。「第一次為開源社區做貢獻」，這麼説吧，是不是真的做了貢獻，這個事情自己説了不算，別人説了才算。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：openkylin 追的很緊，又搞一套標準，都在搶信創這塊蛋糕，但技術上説還是看好 deepin 的方案&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：加個換行沒問題，但吹就有點過分了…&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：什麼時候説實話都成網曝了？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 13：你看看搞底層的，搞單片機的，搞硬件的就不會有這麼多罵戰，出這些事兒的都是浮於應用層上的，為啥?&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 14：因為不用這東西，怎麼會去關注他呢&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 15：健身房拍照打卡一個意思&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 16：英語專業轉 IT 很適合，很多技術文檔都需要英語外翻，而且公司壯大跨國業務，也都需要會英語的技術支持！&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 17：現在 AI 翻譯效果很好了，是了微信讀書會員看英文書雙語翻譯技術書的效果讓我吃驚。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 18：這麼提交的話以後看提交的得忙死&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 19：我覺得網友噴她是因為她虛榮心太勝又沒匹配的貢獻&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307463</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307463</guid>
            <pubDate>Fri, 16 Aug 2024 11:01:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>基於飛槳框架的稀疏計算使用指南</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文作者-是 Yu 欸，華科在讀博士生，定期記錄並分享所學知識，博客關注者 5w+。本文將詳細介紹如何在 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;PaddlePaddle&lt;/a&gt; 中利用稀疏計算應用稀疏 ResNet，涵蓋稀疏數據格式的礎知識、如何創建和操作稀疏張量，以及如何開發和訓練稀疏神經網絡模型。&lt;/p&gt; 
 &lt;p&gt;項目完整代碼已上傳至&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;星河社區：&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faistudio.baidu.com%2Fprojectdetail%2F8055035&quot; target=&quot;_blank&quot;&gt;https://aistudio.baidu.com/projectdetail/8055035&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在現代計算框架中，為了高效地處理和存儲大規模的數據集，尤其是在這些數據集中存在大量零值的情況下，採用稀疏數據結構變得尤為重要。&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;是一個領先的深度學習平台，提供了強大的稀疏計算能力，支持從基本的稀疏張量操作到構建複雜的稀疏神經網絡。這些工具主要通過 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse 命名空間來實現，使得開發者能夠高效處理大量包含零值的數據集，從而優化內存使用和計算速度&lt;/p&gt; 
&lt;p&gt;本文將詳細介紹如何基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架進行稀疏計算，包括稀疏數據格式的基礎知識、如何創建和操作稀疏張量，以及如何開發和訓練稀疏神經網絡模型，特別是如何實現和應用稀疏 ResNet。通過這些知識，我們可以更有效地利用計算資源，加速模型訓練過程，同時提高模型處理大規模稀疏數據的能力。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;01 稀疏格式簡介&lt;/h1&gt; 
&lt;p&gt;稀疏格式是一種特殊的數據存儲方式，旨在有效存儲和處理其中大部分元素為零的矩陣或張量。這種方法可以顯著減少存儲空間的需求，並提高數據處理的效率。常見的稀疏格式包括 COO（座標列表格式）、CSR（壓縮稀疏行格式）等。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎COO（Coordinate Format）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 COO 格式中，只記錄非零元素的位置和值。這種格式由三個主要組件組成：indices、values 和 shape。indices 是一個二維數組，其中的每一列代表一個非零元素的座標；values 存儲對應的非零元素值；shape 則描述了張量的維度。如下圖所示。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c6086b15bb71ba6ac953c90ab8894148b7f.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎CSR（Compressed Sparse Row Format）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;CSR 格式是一種更為緊湊的稀疏表示，專為快速的行訪問和矩陣乘法運算優化。在 CSR 中，通過三個數組 crows、cols 和 values 來表示稀疏矩陣。crows 存儲每一行第一個非零元素的索引，cols 存儲非零元素的列索引，而 values 則直接存儲這些非零元素的值。如下圖所示。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a641c55c94be8c7aa02b9589bb0052d4b99.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;02 基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的稀疏張量支持&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架提供了完整的支持來創建和操作 COO 和 CSR 格式的稀疏張量。以下是基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架創建和操作這些張量的具體方法。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎創建 COO&amp;nbsp;格式的&amp;nbsp;SparseTensor&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;COO 格式（Coordinate List）：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;這是一種常用的稀疏表示格式，其中非零元素通過其座標列表進行存儲。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.sparse_coo_tensor(indices,values, shape)&amp;nbsp;可以創建 COO 格式的稀疏張量，其中 indices 是一個二維整數張量，表示非零元素的座標；values 是一個張量，包含與 indices 對應的值；shape 是一個定義張量形狀的整數列表或張量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;結構特點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;COO 格式通過一個座標列表存儲非零元素的位置和相應的值。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;它使用三個數組：一個數組存儲行索引，一個存儲列索引，第三個存儲元素值。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;適用場景：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;數據添加頻繁：當稀疏矩陣需要頻繁添加新的非零元素時，COO 格式是較好的選擇，因為它允許直接添加數據而不需重新構造整個數據結構。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;簡單結構：適合於那些結構簡單的矩陣，特別是在非零元素分佈較為隨機時。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;示例代碼：&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架中， sparse_coo_tensor 函數可用來創建 COO 格式的稀疏張量。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import paddle

indices = [[0, 1, 2], [1, 2, 0]]
values = [1.0, 2.0, 3.0]
dense_shape = [3, 3]
coo = paddle.sparse.sparse_coo_tensor(indices, values, dense_shape)
print(coo)


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;輸出：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tensor(shape=[3, 3], dtype=paddle.float32, place=Place(cpu), stop_gradient=True,
       indices=[[0, 1, 2],
                [1, 2, 0]],
       values=[1., 2., 3.])


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在這個例子中，indices 定義了非零元素的位置，其中每個子數組的兩個數字分別代表行和列的座標。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-39925ba44c4990271396b9d312242fbf22c.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎創建&amp;nbsp;CSR 格式的&amp;nbsp;SparseTenso&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;CSR 格式（Compressed Sparse Row）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;這是另一種常用的稀疏表示格式，主要用於優化行訪問的性能，其中非零元素通過行的壓縮方式進行存儲。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.sparse_csr_tensor(crows, cols, values, dense_shape) 可以創建 CSR 格式的稀疏張量，其中 crows 定義了每一行非零元素開始的位置在 values 數組中的索引，這有助於快速定位行的起始點和終點。cols 則指示了非零元素在各自行中的列位置，values 提供了相應的值。dense_shape 指定了張量的整體形狀，即行數和列數。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;結構特點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;CSR 格式通過行來壓縮存儲，使用三個數組：行指針數組、列索引數組、以及非零元素值數組。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;行指針數組的大小比實際行數多一個，用於表示每行的起始位置和結束位置。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;適用場景：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;行操作優化：當需要高效地進行行相關的操作（如行切片、行求和）時，CSR 格式提供更優的性能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;矩陣乘法：對於稀疏矩陣與稀疏或密集矩陣的乘法運算，CSR 格式通常會提供更好的性能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;大規模數據處理：在處理大規模稀疏數據時，CSR 格式因其壓縮特性而節省內存。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;示例代碼：為了創建 CSR 格式的稀疏張量，&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架提供了 sparse_csr_tensor 函數。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import paddle

crows = [0, 2, 3, 5]
cols = [1, 3, 2, 0, 1]
values = [1, 2, 3, 4, 5]
dense_shape = [3, 4]
csr = paddle.sparse.sparse_csr_tensor(crows, cols, values, dense_shape)
print(csr)


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;輸出：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tensor(shape=[3, 4], dtype=paddle.int64, place=Place(cpu), stop_gradient=True, 
       crows=[0, 2, 3, 5], 
       cols=[1, 3, 2, 0, 1], 
       values=[1, 2, 3, 4, 5])


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在這個例子中，crows 定義了每一行非零元素開始的位置在 values 數組中的索引，這有助於快速定位行的起始點和終點。&lt;/p&gt; 
&lt;p&gt;這種 CSR 格式的表示方式適用於數據稀疏且行訪問頻繁的場景。它通過壓縮行索引來減少內存使用，優化了對稀疏矩陣行的操作，使得行級操作更加高效。在處理行密集型操作（如行切片或行求和）時特別高效，也適合於稀疏矩陣的乘法等計算密集任務。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎創建稀疏張量的相關參數詳解&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架創建稀疏張量 API 中，參數的設計允許用戶靈活定義和操作稀疏數據結構。對於兩種類型的稀疏張量創建函數，參數主要涉及初始化數據的類型和結構，其中：&lt;/p&gt; 
&lt;p&gt;■&amp;nbsp;&lt;strong&gt;共通參數&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;對於 sparse_coo_tensor 和 sparse_csr_tensor 函數，存在一些共通的參數，這些參數允許用戶指定如何構建和處理稀疏張量：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;values (list|tuple|ndarray|Tensor)：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;表示非零元素的實際數值。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;類似於索引參數，可以是 list、tuple、NumPy ndarray 或 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;Paddle&lt;/a&gt; Tensor。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;2&quot;&gt; 
 &lt;li&gt;shape (list|tuple, 可選)：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;定義稀疏張量的形狀，如果未提供，則會根據 indices 或 crows 和 cols 的最大值自動推斷。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;必須是一個整數列表或元組，指定張量在每個維度的大小。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;dtype (str|np.dtype, 可選)：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;指定張量元素的數據類型，如&amp;nbsp;&#39;float32&#39;, &#39;int64&#39; 等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果未指定，則從 values 的數據類型自動推斷。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt;place (CPUPlace|CUDAPinnedPlace|CUDAPlace|str, 可選)：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;決定張量的存儲設備，例如 CPU 或 GPU。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果未指定，則使用當前環境的默認設備。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;5&quot;&gt; 
 &lt;li&gt;stop_gradient (bool, 可選)：&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;指示是否對該張量進行梯度計算。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在大多數深度學習應用中，非模型權重的張量通常設置為 True 以提高計算效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;■&amp;nbsp;&lt;strong&gt;特定格式的參數細節&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;除了上述共通參數外，COO 和 CSR 格式因其數據結構的不同而在參數應用上有所區別。&lt;/p&gt; 
&lt;p&gt;indices, crows, cols (list|tuple|ndarray|Tensor)：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;對於 COO 格式，indices 參數是一個二維數組，用於直接指定每個非零元素的多維座標。主要用於數據的隨機訪問和轉換操作，適用於那些非零元素分佈相對均勻的場景。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;對於 CSR 格式，crows 表示每一行的起始非零元素索引，而 cols 存儲這些非零元素的列索引。CSR 格式優化了行的連續訪問，非常適合矩陣乘法和其他行優先操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;這些參數可以是 Python 的 list 或 tuple，也可以是 NumPy ndarray 或 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;Paddle&lt;/a&gt; Tensor。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通過這些參數的靈活使用，&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架允許開發者以高效且靈活的方式處理大規模稀疏數據集，從而在保持性能的同時減少內存消耗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎COO 格式和 CSR 格式的選擇建議&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;如果應用主要涉及構建稀疏矩陣和逐項添加數據，COO 格式會更簡單且直接。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果應用需要高效的行操作或頻繁進行矩陣乘法，特別是在稀疏矩陣較大的情況下，CSR 格式是更好的選擇。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;選擇哪種格式應基於具體應用需求，如操作類型、數據規模和性能要求。在&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架中，你可以根據需要輕鬆地在兩種格式之間轉換，以適應不同的計算需求。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎稀疏與稠密 Tensor&amp;nbsp;互轉&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架提供了一套簡單易用的接口，使得稀疏張量的使用與傳統的稠密張量操作體驗高度一致，從而降低了學習成本並便於開發者快速上手。這種設計允許在同一個模型中靈活地使用稠密和稀疏數據結構，而且方便轉換，這對於處理大規模數據集尤其重要，在深度學習、圖像處理和自然語言處理等領域有着廣泛的應用。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架支持通過幾個簡單的 API，實現稀疏與稠密之間的轉換，這些操作保證了數據處理的靈活性和效率。如 Tensor.to_dense() 可以將稀疏張量轉換為標準的密集張量, Tensor.to_sparse_coo(), 和 Tensor.to_sparse_csr() 可以將密集張量轉換為 COO 格式、CSR 格式的稀疏張量。&lt;/p&gt; 
&lt;p&gt;以下為稠密到稀疏的轉換代碼示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import paddle

# 創建一個稠密的 Tensor
dense = paddle.to_tensor([[0, 1, 0, 2], 
                          [0, 0, 3, 4]], dtype=&#39;float32&#39;)

# 將稠密 Tensor 轉換為 COO 格式的稀疏 Tensor
coo = dense.to_sparse_coo(sparse_dim=2)
print(coo)
# 輸出：
# Tensor(shape=[2, 4], dtype=paddle.float32, place=Place(gpu:0), stop_gradient=True, 
#       indices=[[0, 0, 1, 1],
#                [1, 3, 2, 3]], 
#       values=[1., 2., 3., 4.])

# 將稠密 Tensor 轉換為 CSR 格式的稀疏 Tensor
csr = dense.to_sparse_csr()
print(csr)
# 輸出：
# Tensor(shape=[2, 4], dtype=paddle.float32, place=Place(gpu:0), stop_gradient=True, 
#       crows=[0, 2, 4], 
#       cols=[1, 3, 2, 3], 
#       values=[1., 2., 3., 4.])


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這些轉換非常直觀，僅需要簡單的一步操作就可以完成，使得稀疏和稠密格式之間的交互變得簡潔高效。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-37f3327578ae5384e619c7421156f42be56.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;03 基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架進行稀疏計算的設計優勢&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的設計目標之一是提供一致的用戶體驗，無論是處理稀疏數據還是稠密數據。這意味着即便是在處理包含大量零值的數據集時，開發者也可以利用熟悉的接口和模式來構建和訓練模型。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎API 設計的一致性&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的稀疏模塊提供了與常規稠密操作相似的 API 接口，開發者無需學習新的 API 就能處理稀疏數據。例如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;稀疏卷積層：稀疏模塊中的 SubmConv3D 直接對應常規卷積操作中的 Conv3D。二者參數非常相似，如 in_channels, out_channels, stride, padding 等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;批歸一化和激活函數：稀疏模塊同樣提供了批歸一化和激活函數，如 BatchNorm3D 和 ReLU，其用法與常規模塊中的相同。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;▎集成度：訓練和推理的處理流程&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;無論是稀疏還是稠密模型，&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架中的訓練和推理流程保持一致。稀疏操作可以與&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的其他特性（如自動微分和優化器）無縫集成，使得構建和訓練稀疏模型與常規模型幾乎無異。&lt;/p&gt; 
&lt;p&gt;1)&amp;nbsp;定義模型：無論選擇稀疏還是稠密模型，模型定義的方式都是相似的，使用 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.nn.Layer 類來構建網絡層。&lt;/p&gt; 
&lt;p&gt;2)&amp;nbsp;編譯模型：使用 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.Model 對象來包裝定義好的網絡，然後編譯，包括設置優化器、損失函數和評估指標。&lt;/p&gt; 
&lt;p&gt;3)&amp;nbsp;訓練和評估：通過調用 .fit 和 .evaluate 方法來進行訓練和評估，這與處理稠密數據的流程完全一致。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_4&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;04 基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的稀疏神經網絡層支持&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;▎稀疏 ResNet 的應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在處理點雲數據、圖像識別或自然語言處理任務時，輸入數據通常具有很高的維度和稀疏性。例如，3D 點雲數據往往是非結構化的，大部分體積內沒有有效信息（即大部分體積是空的）。使用傳統的密集（dense）卷積網絡處理這類數據會帶來兩個主要問題：效率低下：對於大量的空白區域依然進行計算，消耗計算資源；存儲浪費：需要為大量的零值分配存儲資源。&lt;/p&gt; 
&lt;p&gt;稀疏 ResNet 解決了這些問題，通過僅在非零數據點上進行操作，從而大幅提高了計算和存儲效率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎構建稀疏 ResNet 模型&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架中，稀疏 ResNet 可以通過 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse 模塊中的稀疏卷積層（如 SubmConv3D）來實現。這些層專門用來處理稀疏數據。稀疏卷積層接受包含非零元素座標和值的稀疏張量，並只在這些非零元素上執行卷積運算。通過構建包含這些稀疏卷積層的網絡（如 ResNet 結構中的基礎塊），可以高效處理稀疏數據。&lt;/p&gt; 
&lt;p&gt;創建稀疏 ResNet 主要涉及以下幾個步驟：&lt;/p&gt; 
&lt;p&gt;1)&amp;nbsp;創建稀疏張量：首先需要從稀疏數據（即大部分值為零的數據）中創建稀疏張量。這通常涉及指定非零數據點的座標和相應的值。&lt;/p&gt; 
&lt;p&gt;2)&amp;nbsp;定義稀疏網絡結構：設計一個網絡結構，它包含適用於處理稀疏數據的特殊卷積層（如 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;Paddle&lt;/a&gt; 的 SubmConv3D）。這些層特別優化了內存和計算資源，只在數據非零的地方進行計算。&lt;/p&gt; 
&lt;p&gt;3)&amp;nbsp;前向傳播：將稀疏張量輸入到網絡中，執行前向傳播，網絡會在內部處理稀疏數據，並輸出結果。&lt;/p&gt; 
&lt;p&gt;4)&amp;nbsp;訓練和評估：就像使用常規神經網絡一樣，定義損失函數和優化器，然後在訓練數據上訓練網絡，最後在驗證數據上評估網絡的性能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎稀疏 ResNet 的關鍵組件&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse 模塊提供了對稀疏數據操作的支持，包括稀疏張量的創建、轉換和計算功能。這些神經網絡層針對稀疏數據的特點進行了優化，以減少對零值的計算和存儲需求，提高處理效率。&lt;/p&gt; 
&lt;p&gt;1)&amp;nbsp;稀疏張量（Sparse Tensor）:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;稀疏張量是一種特殊的數據結構，主要用於有效存儲和處理大部分元素為零的數據。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架中，可以使用 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.sparse_coo_tensor 來創建稀疏張量，需要提供非零元素的座標和值。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;2)&amp;nbsp;稀疏卷積層（Sparse Convolution）:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.Conv3D：標準的三維卷積層，支持在稀疏數據上的操作，適用於處理體積大的三維數據。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.SubmConv3D：子流形三維卷積層，用於處理 3D 數據的稀疏子矩陣卷積層。該層允許在 3D 體積數據中有效地進行卷積操作，無需將整個數據轉換為密集格式，特別適用於醫學影像和三維掃描等領域。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;3)&amp;nbsp;批歸一化層（Batch Normalization）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.BatchNorm3D：批歸一化層，專為三維數據設計，可以與稀疏卷積層結合使用，以優化稀疏數據的特徵歸一化過程。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;4)&amp;nbsp;池化層（Pooling Layers）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.MaxPool3D：三維最大池化層，用於在稀疏三維數據上執行池化操作，有助於降低數據的維度和提高模型的抽象能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;5)&amp;nbsp;激活層（Activation Layers）&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.ReLU、&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.ReLU6：標準 ReLU 和 ReLU6 激活函數，支持在稀疏數據路徑中使用，與常規的激活函數使用方法相同，但針對稀疏數據進行了優化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.LeakyReLU：LeakyReLU 激活層，包含小負斜率的 ReLU 變體，適用於在稀疏數據中增強模型的非線性處理能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse.nn.Softmax：Softmax 激活層，適用於稀疏數據路徑，使用方法與常規密集數據的 Softmax 相同，但特別針對稀疏數據進行了優化，常用於處理多分類問題。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;▎構建稀疏 ResNet 模型的示例代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架中，稀疏 ResNet 的實現和使用與傳統的稠密網絡相似，這得益於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架稀疏模塊的設計，使得調用體驗與稠密高度一致，非常容易上手。通過利用稀疏技術，可以有效處理大規模稀疏數據集，提高計算效率，降低存儲需求，這在處理現代大數據應用時顯得尤為重要。&lt;/p&gt; 
&lt;p&gt;下面以稀疏 ResNet 為例，説明&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架對稀疏神經網絡層的支持：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import paddle
from paddle import sparse
from paddle.sparse import nn as sparse_nn

# 定義 3D 稀疏卷積塊
def sparse_conv_block(in_channels, out_channels, stride=1, padding=1, key=None):
    block = paddle.nn.Sequential(
        sparse_nn.SubmConv3D(in_channels, out_channels, kernel_size=3, stride=stride, padding=padding, bias_attr=False, key=key),
        sparse_nn.ReLU()
    )
    return block

# 定義一個簡單的稀疏 3D ResNet 模型
class SparseResNet(paddle.nn.Layer):
    def __init__(self, in_channels):
        super(SparseResNet, self).__init__()
        self.layer1 = sparse_conv_block(in_channels, 16, key=&#39;layer1&#39;)
        self.layer2 = sparse_conv_block(16, 32, stride=2, key=&#39;layer2&#39;)
        self.layer3 = sparse_conv_block(32, 64, stride=2, key=&#39;layer3&#39;)

    def forward(self, x):
        x = self.layer1(x)
        x = self.layer2(x)
        x = self.layer3(x)
        return x

# 假設輸入數據
batch_size = 1
channels = 1
depth = 100
height = 100
width = 100

# 創建稀疏張量的座標和值
coords = paddle.to_tensor([[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 1, 2, 1, 1], [0, 2, 2, 1, 2], [0, 1, 2, 2, 0]], dtype=&#39;int64&#39;)  # 5D 座標 (batch, channel, depth, height, width)
values = paddle.to_tensor([1.0, 1.5, 2.0, 3.0, 3.5], dtype=&#39;float32&#39;)  # 每個值對應一個座標
shape = paddle.to_tensor([batch_size, channels, depth, height, width], dtype=&#39;int64&#39;)  # 5D 形狀

# 創建稀疏張量
x = sparse.sparse_coo_tensor(coords, values, shape)

# 實例化模型
model = SparseResNet(channels)

# 使用模型進行預測
output = model(x)
print(output)


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-742ad74be6ed19437fb7b514f6e4cfe8239.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;模型打印結果：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;SparseResNet(
  (layer1): Sequential(
    (0): SubmConv3D(3, 16, kernel_size=[3, 3, 3], padding=1, data_format=NDHWC)
    (1): BatchNorm(num_features=16, momentum=0.9, epsilon=1e-05, data_format=NDHWC)
    (2): ReLU()
    (3): SubmConv3D(16, 16, kernel_size=[3, 3, 3], padding=1, data_format=NDHWC)
    (4): BatchNorm(num_features=16, momentum=0.9, epsilon=1e-05, data_format=NDHWC)
    (5): ReLU()
  )
  (layer2): Sequential(
    (0): SubmConv3D(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=1, data_format=NDHWC)
    (1): BatchNorm(num_features=32, momentum=0.9, epsilon=1e-05, data_format=NDHWC)
    (2): ReLU()
    (3): SubmConv3D(32, 32, kernel_size=[3, 3, 3], padding=1, data_format=NDHWC)
    (4): BatchNorm(num_features=32, momentum=0.9, epsilon=1e-05, data_format=NDHWC)
    (5): ReLU()
  )
  (layer3): Sequential(
    (0): SubmConv3D(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=1, data_format=NDHWC)
    (1): BatchNorm(num_features=64, momentum=0.9, epsilon=1e-05, data_format=NDHWC)
    (2): ReLU()
    (3): SubmConv3D(64, 64, kernel_size=[3, 3, 3], padding=1, data_format=NDHWC)
    (4): BatchNorm(num_features=64, momentum=0.9, epsilon=1e-05, data_format=NDHWC)
    (5): ReLU()
  )
)


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;輸出：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Tensor(shape=[1, 1, 100, 100, 64], dtype=paddle.float32, place=Place(cpu), stop_gradient=False, 
       indices=[[0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 1, 1, 2],
                [0, 1, 2, 2]], 
       values=[[0.        , 0.        , 0.08977110, 0.        , 0.        ,
                0.        , 0.        , 0.16325581, 0.        , 0.        ,
                0.08592274, 0.        , 0.        , 0.        , 0.07656589,
                ……
                0.12824626, 0.38880903, 0.        , 0.        , 0.23209766,
                0.        , 0.        , 0.        , 0.24539268, 0.17324814,
                0.        , 0.        , 0.        , 0.        ]])


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的稀疏模塊可以創建類似於常規 ResNet 的模型架構，但使用的是稀疏卷積層替換傳統的密集卷積層。每個稀疏卷積層後通常跟隨一個批歸一化層和 ReLU 激活函數，形成一個基礎的稀疏殘差塊。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_5&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;05 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;Paddle&lt;/a&gt;3D 應用實例解讀：稀疏 ResNet&lt;/h1&gt; 
&lt;p&gt;代碼來源：&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;Paddle&lt;/a&gt;3D 的 sparse_resnet.py&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;▎代碼註釋&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這段代碼定義了一個基於&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的稀疏 3D 殘差網絡（SparseResNet3D），主要用於處理 3D 點雲數據，如自動駕駛系統中的激光雷達掃描數據。它通過稀疏卷積層對體素化（voxelized）的點雲數據進行特徵提取和處理。&lt;/p&gt; 
&lt;p&gt;&quot;&quot;&quot;該符號內代碼註釋為新增&quot;&quot;&quot;&lt;/p&gt; 
&lt;p&gt;導入所需庫和模塊：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import numpy as np
import paddle
from paddle import sparse
from paddle.sparse import nn
from paddle3d.apis import manager
from paddle3d.models.layers import param_init


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這些庫包括 numpy 用於數學運算，&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架及其稀疏模塊用於深度學習操作，以及 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;3d 的 API 和模型層初始化。&lt;/p&gt; 
&lt;p&gt;定義卷積函數：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;def conv3x3(in_out_channels, out_out_channels, stride=1, indice_key=None, bias_attr=True):
    &quot;&quot;&quot;3x3 convolution with padding, specifically for SubM sparse 3D convolution.&quot;&quot;&quot;
    return nn.SubmConv3D(
        in_out_channels, out_out_channels, kernel_size=3, stride=stride, padding=1, bias_attr=bias_attr, key=indice_key)

def conv1x1(in_out_channels, out_out_channels, stride=1, indice_key=None, bias_attr=True):
    &quot;&quot;&quot;1x1 convolution, also for SubM sparse 3D convolution.&quot;&quot;&quot;
    return nn.SubmConv3D(
        in_out_channels, out_out_channels, kernel_size=1, stride=stride, padding=1, bias_attr=bias_attr, key=indice_key)


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;conv3x3 和 conv1x1 是用於創建 3D 稀疏卷積層的幫助函數，它們使用了&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架的 SubmConv3D，這是一種專門處理稀疏數據的 3D 卷積。&lt;/p&gt; 
&lt;p&gt;定義稀疏基礎塊類：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;class SparseBasicBlock(paddle.nn.Layer):
&quot;&quot;&quot; A basic building block for constructing sparse 3D ResNet with two convolutional layers.&quot;&quot;&quot;

    expansion =1

def__init__(self, in_channels, out_channels, stride=1, downsample=None, indice_key=None):
super(SparseBasicBlock, self).__init__()

self.conv1 = conv3x3(in_channels, out_channels, stride, indice_key, True)
self.bn1 = nn.BatchNorm(out_channels, epsilon=1e-3, momentum=0.01)
self.relu = nn.ReLU()
self.conv2 = conv3x3(out_channels, out_channels, indice_key=indice_key, bias_attr=True)
self.bn2 = nn.BatchNorm(out_channels, epsilon=1e-3, momentum=0.01)
self.downsample = downsample
self.stride = stride

def forward(self, x):
        identity = x

        out =self.conv1(x)
        out =self.bn1(out)
        out =self.relu(out)
        out =self.conv2(out)
        out =self.bn2(out)

ifself.downsample isnotNone:
            identity =self.downsample(x)

        out = sparse.add(out, identity)
        out =self.relu(out)
return out


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;SparseBasicBlock 是 SparseResNet3D 的核心模塊，包括兩個稀疏卷積層、批歸一化和 ReLU 激活函數，以及可選的下采樣，用於殘差連接。&lt;/p&gt; 
&lt;p&gt;定義 SparseResNet3D 網絡：&lt;/p&gt; 
&lt;p&gt;@manager.MIDDLE_ENCODERS.add_component&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;class SparseResNet3D(paddle.nn.Layer):
    &quot;&quot;&quot; The main Sparse 3D ResNet class, designed for processing voxelized point cloud data.&quot;&quot;&quot;
    
    def __init__(self, in_channels, voxel_size, point_cloud_range):
        super(SparseResNet3D, self).__init__()

        # Initial conv layer
        self.conv_input = paddle.nn.Sequential(
            nn.SubmConv3D(in_channels, 16, 3, bias_attr=False, key=&#39;res0&#39;),
            nn.BatchNorm(16), nn.ReLU())

        # Subsequent layers with increasing channel depth and decreasing spatial dimensions
        self.conv1 = paddle.nn.Sequential(
            SparseBasicBlock(16, 16, indice_key=&#39;res0&#39;),
            SparseBasicBlock(16, 16, indice_key=&#39;res0&#39;),)

        self.conv2 = paddle.nn.Sequential(
            nn.Conv3D(16, 32, 3, 2, padding=1, bias_attr=False),  # downsample
            nn.BatchNorm(32), nn.ReLU(),
            SparseBasicBlock(32, 32, indice_key=&#39;res1&#39;),
            SparseBasicBlock(32, 32, indice_key=&#39;res1&#39;),)

        self.conv3 = paddle.nn.Sequential(
            nn.Conv3D(32, 64, 3, 2, padding=1, bias_attr=False),  # downsample
            nn.BatchNorm(64), nn.ReLU(),
            SparseBasicBlock(64, 64, indice_key=&#39;res2&#39;),
            SparseBasicBlock(64, 64, indice_key=&#39;res2&#39;),)

        self.conv4 = paddle.nn.Sequential(
            nn.Conv3D(64, 128, 3, 2, padding=[0, 1, 1], bias_attr=False),  # downsample
            nn.BatchNorm(128), nn.ReLU(),
            SparseBasicBlock(128, 128, indice_key=&#39;res3&#39;),
            SparseBasicBlock(128, 128, indice_key=&#39;res3&#39;),)

        # Extra conv layer to further process features
        self.extra_conv = paddle.nn.Sequential(
            nn.Conv3D(128, 128, (3, 1, 1), (2, 1, 1), bias_attr=False),  # Adjust the spatial dimensions
            nn.BatchNorm(128), nn.ReLU(),)

        # Calculate the grid size for the 3D data based on the provided voxel size and point cloud range
        point_cloud_range = np.array(point_cloud_range, dtype=np.float32)
        voxel_size = np.array(voxel_size, dtype=np.float32)
        grid_size = (point_cloud_range[3:] - point_cloud_range[:3]) / voxel_size
        grid_size = np.round(grid_size).astype(np.int64)
        self.sparse_shape = np.array(grid_size[::-1]) + [1, 0, 0]
        self.in_channels = in_channels
        self.init_weight()

    def init_weight(self):
        &quot;&quot;&quot; Initialize weights for convolutional layers and batch normalization layers.&quot;&quot;&quot;
        for layer in self.sublayers():
            if isinstance(layer, (nn.Conv3D, nn.SubmConv3D)):
                param_init.reset_parameters(layer)
            if isinstance(layer, nn.BatchNorm):
                param_init.constant_init(layer.weight, value=1)
                param_init.constant_init(layer.bias, value=0)

    def forward(self, voxel_features, coors, batch_size):
        &quot;&quot;&quot; The forward pass for processing input voxel features and coordinates.&quot;&quot;&quot;
        # Setup the sparse tensor with the specified shape and input features
        shape = [batch_size] + list(self.sparse_shape) + [self.in_channels]
        sp_x = sparse.sparse_coo_tensor(
            coors.transpose((1, 0)),
            voxel_features,
            shape=shape,
            stop_gradient=False)

        # Pass the sparse tensor through the sequential layers
        x = self.conv_input(sp_x)
        x_conv1 = self.conv1(x)
        x_conv2 = self.conv2(x_conv1)
        x_conv3 = self.conv3(x_conv2)
        x_conv4 = self.conv4(x_conv3)

        # Final extra convolutional processing
        out = self.extra_conv(x_conv4)

        # Convert the output back to a dense tensor and adjust dimensions for further processing
        out = out.to_dense()
        out = paddle.transpose(out, perm=[0, 4, 1, 2, 3])
        N, C, D, H, W = out.shape
        out = paddle.reshape(out, shape=[N, C * D, H, W])
        return out


&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;此類中定義了一系列卷積層和殘差塊，用於逐步處理和提取輸入點雲數據的特徵。網絡通過逐層降採樣來增加特徵深度並減小空間維度，最終輸出密集的特徵張量，適合後續的處理或學習任務。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;06 小結&lt;/h1&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架不僅支持自定義稀疏神經網絡結構，也可以通過提供的 API 輕鬆地實現已有的經典結構，如 ResNet、VGG 等。對於這些經典網絡，通過替換標準的卷積層為相應的稀疏卷積層，可以使其適應稀疏數據的處理，從而拓展其應用到新的領域，如 3D 點雲處理。&lt;/p&gt; 
&lt;p&gt;總的來説，&lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;飛槳&lt;/a&gt;框架在提供稀疏計算支持的同時，確保了開發體驗的一致性和直觀性，方便開發者在稀疏和稠密數據操作之間切換，同時保證數據處理高效。&lt;/p&gt; 
&lt;p&gt;——————END——————&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;參考資料：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;[1]官網 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot;&gt;paddle&lt;/a&gt;.sparse 目錄&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.paddlepaddle.org.cn%2Fdocumentation%2Fdocs%2Fzh%2Fapi%2Fpaddle%2Fsparse%2FOverview_cn.html&quot; target=&quot;_blank&quot;&gt;https://www.paddlepaddle.org.cn/documentation/docs/zh/api/paddle/sparse/Overview_cn.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;[2]&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSD_P2K1HP3FVM5ADqbpmVQ&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/SD_P2K1HP3FVM5ADqbpmVQ&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;推薦閲讀：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592895%26idx%3D1%26sn%3Da1963501c0f63ff70d5fa457680a0ba7%26chksm%3Dc03f5bc3f748d2d51f25900ca7f31b0a565431f95af0d5c1e34fa7c889ebd160ac46917acee4%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;雲高性能計算平台 CHPC 讓企業的傳統 HPC 玩出新花樣&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592870%26idx%3D1%26sn%3D4356bf3d908eaf1a5457e2c05f06992c%26chksm%3Dc03f5bdaf748d2cc5bf279bf3a406c26cdd9a3c8e4f807c618768a9ebc1207c0809e2c7e539b%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;Embedding 空間中的時序異常檢測&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592850%26idx%3D1%26sn%3D76f6451f3f149d210106dab1e036298c%26chksm%3Dc03f5beef748d2f8e47da9b2dec927af37b69d534958950e9bda1547645e2b9583acebd4335f%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;讀友好的緩存淘汰算法&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592618%26idx%3D1%26sn%3D61740f39ea744e00280c70b638622b91%26chksm%3Dc03f5ad6f748d3c02b964f5f2d5c1b716c38c98c630d4741f4b687821c33d52f16b2cc8de612%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;如何定量分析 Llama 3，大模型系統工程師視角的 Transformer 架構&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592237%26idx%3D1%26sn%3D99dff8b8971f210c69ee50fa7383b9ee%26chksm%3Dc03f5951f748d0470163cdd13a5ce7d591a2054840fe8278ef7d5f4ba8ce7c374813ba823daf%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;微服務架構革新：百度 Jarvis2.0 與雲原生技術的力量&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4939618/blog/15330069</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4939618/blog/15330069</guid>
            <pubDate>Fri, 16 Aug 2024 09:13:14 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>學生篡改同學高考志願被刑拘，構成「破壞計算機系統罪」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;據內蒙古自治區呼和浩特市公安局「青城公安」（青城是呼和浩特市的別名）8 月 15 日晚消息：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;近日，新城區公安分局警支大隊接到報警，稱高考志願被他人惡意篡改。因為是自治區首起，警支大隊即刻針對該案組織開展案情分析會，結合全國此類案件的判例進行分析，摸清案件脈絡，討論研究對此類新型網絡犯罪案件的戰術戰法。&lt;/p&gt; 
 &lt;p&gt;警支大隊依託自身技術優勢，進行分析研判，發現呼和浩特市某職業學校學生王某某疑似利用隱蔽手段獲取同學的填報高考志願的賬號、密碼，並藉機篡改其高考志願。&lt;/p&gt; 
 &lt;p&gt;8 月 14 日，警支大隊將此案立案偵查，並對犯罪嫌疑人進行訊問，犯罪嫌疑人王某某對其犯罪事實供認不諱，已構成「破壞計算機系統罪」。&lt;/p&gt; 
 &lt;p&gt;目前，公安機關已依法對犯罪嫌疑人王某某採取刑事拘留措施。&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;1492&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0816/120920_ymfD_2720166.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.weibo.com%2F2516388727%2FOspOpd9zO%23repost&quot; target=&quot;_blank&quot;&gt;https://www.weibo.com/2516388727/OspOpd9zO#repost&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;根據《中華人民共和國刑法》第二百八十六條，【破壞計算機信息系統罪】是指：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;違反國家規定，對計算機信息系統功能進行刪除、修改、增加、幹擾，造成計算機信息系統不能正常運行，後果嚴重的，處五年以下有期徒刑或者拘役；後果特別嚴重的，處五年以上有期徒刑。&lt;/p&gt; 
 &lt;p&gt;違反國家規定，對計算機信息系統中存儲、處理或者傳輸的數據和應用程序進行刪除、修改、增加的操作，後果嚴重的，依照前款的規定處罰。&lt;/p&gt; 
 &lt;p&gt;故意製作、傳播計算機病毒等破壞性程序，影響計算機系統正常運行，後果嚴重的，依照第一款的規定處罰。&lt;/p&gt; 
 &lt;p&gt;單位犯前三款罪的，對單位判處罰金，並對其直接負責的主管人員和其他直接責任人員，依照第一款的規定處罰。&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307420</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307420</guid>
            <pubDate>Fri, 16 Aug 2024 08:14:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>阿里雲最新財報：AI 收入實現三位數增長</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;8 月 15 日晚間，阿里巴巴集團&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F8MgxvFIxPOMUPszvSnmY7A&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;最新季度業績，AI 推動阿里雲重回增長，季度營收增長 6% 至 265.49 億元，其中 AI 相關產品收入實現三位數增長，公共雲業務實現兩位數增長。同時，阿里雲利潤大漲，經調整 EBITA 利潤同比增長 155%，單季度 EBITA 利潤達到 23.37 億元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該季度，阿里雲聚焦「AI 驅動，公共雲優先」戰略，持續擴大技術及規模優勢。財報顯示，阿里雲的外部收入（不包含阿里巴巴關聯公司用雲收入）同比增長也達到 6%，主要得益於 AI 推動相關產品採用率增加，公共雲業務實現兩位數增長。其中，AI 相關產品收入在上個季度實現三位數增長之後，在該季度也持續保持三位數增長。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;245&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e029d138f146dcfd18910754d9be0fb8d99.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時，阿里雲利潤大漲。該季度內，阿里雲經調整後 EBITA 收入同比增長 155%，達到人民幣 23.37 億元，而 2023 年同期為人民幣 9.16 億元。財報表示，這一增長主要是由於專注於公共雲戰略，並提升運營效率，但利潤增長部分被對客戶和技術的持續投資所抵消。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;財報強調，阿里雲將繼續投資於客戶和技術，特別是投入建設 AI 技術和基礎設施，以推動 AI 應用的雲計算採用率，並保持阿里雲的市場領先優勢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;技術進展方面，該季度內阿里雲發佈了全球性能最強的開源模型 Qwen2-72B，該模型提升了代碼、數學、推理、指令遵循、多語言理解等能力。Qwen2-72B 發佈後即登頂 HuggingFace 的 Open LLM Leaderboard 開源模型榜單。中文大模型測評基準 SuperCLUE 在 2024 上半年報告中指出，Qwen2-72B 成為排名第一的中國大模型，也是全球最強的開源模型，「超過眾多國內外閉源模型」，「引領全球的開源生態」。目前，通義千問開源模型下載量已突破 2000 萬。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時，阿里雲對通義千問 9 款主力大模型大幅降價。其中，通義千問 GPT-4 級主力模型 Qwen-Long 的 API 輸入價格低至 1 塊錢可以買 200 萬 tokens。這款模型最高支持 1 千萬 tokens 長文本輸入，降價後約為 GPT-4 價格的 1/400。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;降價激發了阿里雲 AI 產品的使用量。財報披露，阿里雲 AI 平台百鍊的付費用戶數，比上一個季度增長超過 200%。百鍊平台集成了上百款大模型 API，支持企業上架通用或行業模型，給開發者提供足夠多樣化的模型選擇。據國際研究機構 Gartner 發佈的 2024 年《數據科學和機器學習平台魔力象限》，阿里雲躍升至挑戰者象限，併成為報告中唯一入圍的亞太廠商。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，阿里雲作為奧運會獨家雲服務商，為剛剛結束的巴黎奧運會提供了全面支撐。今年巴黎奧運會上，雲計算首次超越衞星成為奧運轉播的主要方式，超過三分之二的奧運電視及網絡直播信號基於阿里雲向全球分發，從巴黎傳輸到全球 200 多個國家和地區，全球觀看人數超 40 億。阿里雲的 AI 技術也首次在巴黎奧運中廣泛應用。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307403</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307403</guid>
            <pubDate>Fri, 16 Aug 2024 07:20:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>滴滴開源 Flutter 混合開發框架 Unify</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;滴滴近日開源了自研 Unify 框架，旨在解決大規模跨端落地場景下，Flutter 與原生模塊之間的通信問題。Unify 通過平台無關的模塊抽象、靈活的實現注入、自動代碼生成等特性，為開發者提供高效、靈活、易用的 Flutter 混合通信能力。&lt;/p&gt; 
&lt;p&gt;開源地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdidi%2FUnify&quot; target=&quot;_blank&quot;&gt;https://github.com/didi/Unify&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unify 是一個 Flutter 混合開發框架，由滴滴出行國際化外賣團隊自研，目前已經廣泛應用於滴滴國際化外賣及國際化出行業務。&lt;/p&gt; 
&lt;p&gt;Unify 的亮點特性包括:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;平台無關的模塊抽象&lt;/strong&gt;: 允許開發者使用 Dart 語言聲明與平台無關的模塊接口與實體。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;靈活的實現注入&lt;/strong&gt;: 開發者可以靈活地選擇注入原生實現（Android/iOS）或 Flutter 實現。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自動代碼生成&lt;/strong&gt;: 藉助強大的代碼生成引擎,Unify 可以自動生成 Flutter、Android、iOS 多平台下統一調用的 SDK。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下面是一個使用 Unify 聲明原生模塊的示例:&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;@UniNativeModule()
abstract class DeviceInfoService {
  Future&amp;lt;DeviceInfoModel&amp;gt; getDeviceInfo();
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;通過 Unify，上面的 Dart 接口可以自動映射到 Android 和 iOS 平台，開發者只需專注於各平台下的具體實現即可。在 Flutter 中使用時，調用方式就像普通的 Flutter 模塊一樣簡單、直觀:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DeviceInfoService.getDeviceInfo().then((deviceInfoModel) {
  print(&quot;${deviceInfoModel.encode()}&quot;);
});&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unify 的整體原理如下：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-105ff4761152e62ed960a0d0c772a2309af.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Unify 能夠很好地解決 Flutter 混合開發下的一些常見問題，例如:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;大量原生模塊高效導入 Flutter&lt;/li&gt; 
 &lt;li&gt;大量 Flutter 模塊高效導入原生&lt;/li&gt; 
 &lt;li&gt;解決大量 Channel 難以維護的問題&lt;/li&gt; 
 &lt;li&gt;原生與 Flutter 並存下的混合架構分層&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情查看&amp;nbsp;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdidi%2FUnify%2Fblob%2Fmaster%2FREADME.zh-CN.md&quot; target=&quot;_blank&quot;&gt;https://github.com/didi/Unify/blob/master/README.zh-CN.md&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307354/didi-unify-flutter</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307354/didi-unify-flutter</guid>
            <pubDate>Fri, 16 Aug 2024 04:24:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Claude 推出</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Anthropic &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Fnews%2Fprompt-caching&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;在其 Claude 系列生成式 AI 模型的 API 中引入提示緩存（Prompt caching）功能，這將允許開發人員在 API 調用之間保存常用的提示，減少提示成本和延遲。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;提示緩存允許用戶緩存常用上下文，以便在將來的 API 調用中使用。該公司稱，通過為模型配備背景知識和過去的示例輸出，長提示的成本可降低高達 90%，延遲可降低高達 85%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;287&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4fafd2675bd5a7d6450588361f8941a3c0d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;提示緩存在多種用例中很有用，包括能夠保留代碼庫的彙總版本以供編碼助手使用、在提示中提供長格式文檔以及提供帶有所需輸出的幾個示例的詳細指令集。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;用戶還可以使用它與書籍、論文、文檔和播客記錄等長篇內容進行對話。 根據 Anthropic 的測試，與一本緩存了 100,000 個 token 的書籍聊天需要 2.4 秒，而沒有緩存信息的情況下則需要 11.5 秒。這相當於延遲減少了 79%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;與基本輸入令牌價格相比，緩存輸入令牌的成本高出 25%，但實際使用緩存內容的成本低 10%。實際價格因具體型號而異。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該功能現已在 Claude 3.5 Sonnet 和 Claude 3 Haiku 上作為公開測試版提供，並且很快將支持 Claude 3 Opus。詳情可查看&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.anthropic.com%2Fen%2Fdocs%2Fbuild-with-claude%2Fprompt-caching&quot; target=&quot;_blank&quot;&gt;文檔&lt;/a&gt;和&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Fpricing%23anthropic-api&quot; target=&quot;_blank&quot;&gt;定價頁面&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307342/anthropic-introduces-prompt-caching</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307342/anthropic-introduces-prompt-caching</guid>
            <pubDate>Fri, 16 Aug 2024 02:45:29 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>全球首發！openKylin RISC-V 64G 鏡像上線，支持中科通量 AI PC</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;523&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e9e18b1ad1fa403a3cb062f884693c72b70.png&quot; width=&quot;1200&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;近日，在 openKylin 社區 RV64G SIG 的共同努力下，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 操作系統已基於 64 位高性能 RISC-V CPU 成功運行，並順利完成了對中科通量 RISC-V AI PC 的兼容適配&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，這一成就為 RISC-V 架構在通用高性能領域的進一步優化和快速增長奠定了堅實基礎，&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時也&lt;/span&gt;填補了社區在 RV64G 領域的空白，為開源桌面操作系統市場注入了全新的活力與機遇&lt;/span&gt;。目前，相關鏡像已正式上線 openKylin 官網下載頁面，歡迎大家下載體驗！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;583&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1e20875fe97f7af63249a9f3ffa6ccb5c55.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;鏡像下載地址（點擊「閲讀原文」直達）：&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;https://www.openkylin.top/downloads&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;RV64G 是 RISC-V 重要的基礎指令架構，採用簡化指令譯碼邏輯，能夠更容易預測&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;指令預取&lt;/span&gt;&lt;span&gt;模式，進而減少內存訪問次數、提高指令執行速度，為廣泛的通用計算領域提供了簡單且完備的指令集，使開發者可以更好的對高性能計算進行優化。RV64G SIG 是由 openKylin 社區共建單位睿芯發起成立，致力於構建 RV64G 軟件生態體系，以支持更加廣泛的 RISC-V 硬件。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;自 2023 年投身於 openKylin RV64G SIG 組以來，中科通量持續加大投入力度，積極主動移植 Linux 下各種應用軟件，不斷拓展硬件適配的範圍和深度，推出多款&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;系統鏡像&lt;/span&gt;&lt;span&gt;，並強化 openKylin 社區軟件源生態建設。截至目前，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;中科通量已與 openKylin 社區合作完成了近 1500 個源碼包在 RV64G 架構上的編譯，為用戶提供了涵蓋從基礎編譯、系統管理、桌面環境到圖像處理、視頻處理等多樣化&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;服務，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;其中包括 gcc、g++、rustc、systemd、ukui-desktop-environment、&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;ffmpeg&lt;/span&gt;&lt;span&gt;、opencv 等工具，極大地豐富了&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社區&lt;/span&gt;&lt;/span&gt;RV64G 軟件生態體系。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;中科通量 RISC-V AI PC 首次面世&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;自 2024 年起，AI 時代全面開啓，PC 也步入了更新迭代的關鍵時刻。中科通量面向商用市場推出了其第一代 RISC-V AI PC—SmarHTC。該產品搭載了國產 RISC-V CPU 與 RISC-V 數據流 GPU 加速芯片，依託 RISC-V 異構平台的澎湃算力，為用戶提供了極致性能與安全可靠的 AI 體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;574&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a156699c335414eba1e1685d81e3bb8ab3.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;該產品支持 AI 原生開發環境，並已適配運行 40+ AI 模型。在智能算力方面，SmarHTC 支持混合精度推理，確保智能分析業務在保持高性能運算與高精度運算的同時，能夠靈活地適應各種複雜場景和任務需求，讓 AI 真正成為觸手可及的生產力工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，SmarHTC 還充分考慮了國產化操作系統的適配問題。它深度優化了 openKylin 操作系統，完美支持 GPU/VPU 加速功能，使得 UKUI 桌面環境更加流暢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;關於 RV64G&amp;nbsp;SIG&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin RV64G SIG 組主要負責開發及維護 openKylin RV64G 版本，包括軟件包構建、系統構建、維護及升級等工作，並探索 RISC-V 各子架構應用兼容問題的解決方案。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;SIG 地址：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;https://gitee.com/openkylin/community/tree/master/sig/RV64G&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;郵件列表：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#0060e8&quot;&gt;rv64g@lists.openkylin.top&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307326</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307326</guid>
            <pubDate>Fri, 16 Aug 2024 01:28:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>國際知名 Linux 發行版 deepin V23 正式發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;【引言】&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;「我們不認為增刪幾個上游的應用軟件，修改一下語言、壁紙，或者調整下應用佈局等等，就是一個操作系統的版本更新。我們希望每一次的大版本更新，都有大量真正用戶需要和創新性的內容，去突破 Linux 桌面發行版的能力邊界，能讓 Linux 桌面與 Windows、MacOS 這兩個商業操作系統一樣強大。」&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;em&gt;——deepin（深度）社區創始人，劉聞歡（deepin）&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3de016d6902b6f86fbf835272c0e6739278.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;8 月 15 日，國際知名開源社區 deepin（深度）社區在線上舉辦了主題為「聚 AI 而生，大有不同」新品發佈會，正式對外發布開源操作系統 deepin V23，帶來了全新 DDE 視界、 AI For OS、「如意玲瓏」應用生態、「deepin IDE」集成開發環境等諸多重磅更新。&lt;/p&gt; 
&lt;p&gt;「在這 20 年的歷程中，deepin 在開源操作系統領域取得了顯著的創新與突破。我們不僅在國內開源操作系統發行版的建設中發揮了引領作用，更在桌面環境自主研發的轉型中展現了前瞻視野。」deepin（深度）社區主席張磊在致辭中表示。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a4d4de28637804a6906c9e7a2e33f3daaa5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;作為社區 20 歲生日的獻禮，deepin V23 研發耗時三年，上線了 200 餘個產品優化和新增需求，迭代了 9 個版本、51 次內測，自研了 8 款開發工具。每一次創新，都為了讓 deepin V23 變得更好。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;根社區生長，操作系統全棧自研矩陣&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;為了真正掌握操作系統發展權、上游社區主導權、供應鏈安全主動權，2022 年，由開放原子開源基金會旗下的歐拉社區所代表的中國服務器操作系統根社區，以及由統信軟件主導運營的 deepin 深度社區所代表的中國桌面操作系統根社區先後投入建設。&lt;/p&gt; 
&lt;p&gt;所謂 Linux 操作系統根社區，是從 Linux kernel 和其他開源組件構建，不依賴上游發行版，有大量的外部個人貢獻者與企業參與共建的開源社區。deepin（深度）社區走出的第一步，便是獨立構建全新的倉庫、自主研發基於 deepin 根社區的開發工具，讓開發者可以更便捷、更有效地參與貢獻。在社區內，這些舉措有一個形象的代號——「獨立上游」。&lt;/p&gt; 
&lt;p&gt;作為首個基於根社區推出的發行版本，deepin V23 真正實現了操作系統的每個層級均有自研模塊，為全球開源操作系統愛好者提供了優異的源自中國的開發工具。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f8f1618f5cc43a0eb1ee6c0c1977c1fe13d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;deepin V23 搭載 Linux 6.6 LTS 內核，從倉庫到應用層，針對操作系統核心組件，採用了大量自研方案：&lt;/p&gt; 
&lt;p&gt;獨立構建的倉庫 beige-V23 採取獨立選型、獨立更新策略和精細化的倉庫維護模式，對 8000+核心包進行升級，有效提升了系統的穩定性和安全性，並且能夠更好地支持 ARM64、RISC-V、LoongArch64 等新硬件和新架構。&lt;/p&gt; 
&lt;p&gt;服務層，deepin 研發了 AM 應用程序統一管理框架，不僅極大地便利了從應用層對相關進程進行更為細緻的資源與權限管控，還實現了統一的調度策略,解決了以往資源管控紛亂無章、後台進程雜亂無序的難題，更為未來的發展預留了擴展空間。&lt;/p&gt; 
&lt;p&gt;SDK 層，基於 Qt 開發的通用開發框架 DTK，可滿足研發人員「一次研發，多平台、多架構複用」的需求，提升開發效率。目前已完成 6 個版本迭代，110+次更新，累計提交代碼近 20 萬行，已被遷移至超過 10 個 Linux 發行版。在 V23 中，瀏覽器、音樂、郵件等 40 餘款原生應用全部使用 DTK 開發。&lt;/p&gt; 
&lt;p&gt;桌面環境層，首個由中國社區主導、備受全球 Linux 愛好者喜愛的 DDE 迎來全面升級。全新的任務欄、啓動器以及更豐富的個性化主題，在保留 V20 用戶習慣的同時，顯著提升了系統的管理能力與交互體驗。展示形式進行了精心設計，保持統一的風格和節奏，用戶得以在進行不同操作之間，視覺始終流暢而連貫。&lt;/p&gt; 
&lt;p&gt;應用層，deepin 為開發者提供了完善的原生應用開發矩陣：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;集成開發環境 deepin IDE，集成 AI 能力，支持多種軟硬件架構、多種編程語言；具備全量基礎功能，可以實現一站式多場景開發，從底層服務到上層開發工具實現垂直安全，真正做到掌握自主發展權；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;綜合型自動化測試框架「YouQu」，由統信軟件主導研發，以其簡便的環境部署、強大的功能特性脫穎而出，不僅支持 UI、WEB、接口及命令行等多種自動化測試場景，還極大地提升了測試效率與質量，為 Linux 操作系統上的開發測試工作帶來了前所未有的便捷與高效；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;始於 2017 年、現已捐贈給開放原子開源基金會的新型獨立包管理工具「如意玲瓏」，憑藉對跨發行版的強大支持，可有效解決傳統包管理系統強依賴導致的兼容性問題，以及權限鬆散導致的安全問題。目前，「如意玲瓏」千帆競發，已有 400 多位開發者貢獻了超 2000 款如意玲瓏應用，其中 1000 餘款已上架 deepin V23 應用商店。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;「值得一提的是，在 deepin V23 的發佈中，deepin 根社區也發揮了重要作用，許多新功能和建議都來自於社區夥伴。我們堅信，開放協作是推動 deepin 發展的核心動力。」張磊表示。deepin V23 的研發歷程伴隨中國科技自立自強的步伐，在開源操作系統的每一次演進與發展中，deepin 始終走在行業前列。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;多架構支持，適配多款國產芯片&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;良好的社區文化和有力的開發者支撐，讓 deepin 生態建設邁入飛速發展階段。Intel、龍芯、飛騰、玄鐵等 CPU 廠家日前紛紛宣佈與 deepin V23 完成適配，這代表着 deepin V23 成為首個支持 X86、ARM64、LoongArch64、RISC-V 等全部主流通用計算架構的開源桌面操作系統，意味着 deepin 社區全球用戶都可以在第一時間體驗到 deepin V23，同時也意味着 deepin 社區正在成為中國「強芯鑄魂」的核心力量。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a8a2d6cbf07fba06af26d99300fea3ef4b5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;擁有 20 年曆史的 deepin（深度）社區，是全球規模最大且最活躍的開源操作系統社區之一，在國際上擁有大量擁躉。社區用戶超 540 萬，其中近 300 萬為海外用戶。成立以來共獲得國內外獎項 60 餘個，其中包括國際級、國家級、行業級 41 個，省部級獎項 20 餘個。其在中國最知名的下游商業發行版統信 UOS，目前國產裝機量已超 600 萬台。&lt;/p&gt; 
&lt;p&gt;社區始終秉承以用為本、擁抱創新的理念，曾經創造過諸多 Linux 歷史上突破性的里程碑，例如首箇中文 Linux 社區操作系統、首個由中國社區主導的 Linux 桌面環境、國內首家發佈 Linux 應⽤商店等等。隨着眾多中國科技廠商加入貢獻，未來 deepin 社區將誕生更多顛覆性創新，有效促進開源技術國內外雙循環發展。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;人工智能賦能，下一代操作系統亮相&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;自 2023 年統信軟件推出 UOS AI 以來，在上游社區版 deepin 中持續驗證和迭代。可以説，deepin V23 從底層開始，便由人工智能賦能建造。&lt;/p&gt; 
&lt;p&gt;對於 deepin 這一中國首個接入大模型的開源操作系統，海外知名雜誌 Linux Magazine 給予了高度肯定：「deepin 已經將人工智能集成到桌面操作系統上，開始向微軟 Copilot 發起挑戰」，並稱「這可能只是 deepin V23 融合人工智能的開始」。&lt;/p&gt; 
&lt;p&gt;自 UOS AI 賦能 deepin 以來，在應用層，UOS AI 已支持自然語言命令調用 20 餘個操作系統設置能力、40 餘個使用場景，已適配 60 餘款應用；芯片層支持國內主流 CPU 芯片和英偉達等國內外主流 GPU 芯片；大模型層開放接口，支持接入所有 OpenAI 接口格式的大模型，用戶可根據自身需求，自行適配專屬模型。&lt;/p&gt; 
&lt;p&gt;發佈會現場，Intel 開源技術高級研發經理田俊帶來了 Intel 在 deepin 上的平台支持及 AI PC 最新進展。deepin 的 Intel SIG 小組集中支持了最新的 Meteor Lake 與 deepin 的深入適配。作為 Intel Ultra 平台的重要組成部分，為 deepin 帶來了前所未有的性能提升和豐富的功能支持。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-234d14675b979faf9cecf3db61a15c74df0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;「通過 CPU、NPU、GPU 的協同運算，deepin V23 能夠勝任各種實用性的 AI 應用，特別是本地推理能力。GPU 的高吞吐和圖形處理能力、NPU 的低功耗專用 AI 算法能力以及 CPU 的低延遲邏輯運算能力，共同構成了 deepin V23 強大的 AI 計算能力。」田俊表示。&lt;/p&gt; 
&lt;p&gt;國民級辦公應用 WPS 日前也公佈了雙方聯合開發 AI 辦公解決方案的進展，基於 deepin V23 的 WPS Office For Linux 個人版將於 8 月下旬上線 deepin 應用商店。用戶不僅可在該版本中體驗到融入 AIGC 的三款 WPS 拳頭產品，更能感受到 UOS AI 與 WPS AI 在本地個人知識庫建設方面的功能聯動。&lt;/p&gt; 
&lt;p&gt;「回溯到現代計算的誕生，我們一直在追求製造出能夠理解人類的計算機，而如今我們正在進入一個新時代，就像摩爾定律推動了信息革命一樣，深度神經網絡的擴展定律也將推動智能革命。」張磊表示，展望未來，deepin 將加速構建 AI 與操作系統的融合，從 AI FOR OS 到 OS FOR AI，引領開源操作系統創新發展。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/307293/deepin-v23-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/307293/deepin-v23-released</guid>
            <pubDate>Thu, 15 Aug 2024 13:42:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
    </channel>
</rss>