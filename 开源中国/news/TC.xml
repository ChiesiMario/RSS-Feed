<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 28 Feb 2025 02:46:40 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>OpenAI 正式發佈 GPT-4.5 模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;今日凌晨，OpenAI &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fintroducing-gpt-4-5%2F&quot; target=&quot;_blank&quot;&gt;正式發佈 GPT-4.5 模型&lt;/a&gt;&lt;/u&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0228/101700_vzaG_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;GPT-4.5 支持聯網搜索，並能夠處理文件和圖片上傳，還可以使用 Canvas 來進行寫作和編程。&lt;/p&gt; 
&lt;p&gt;不過，目前 GPT-4.5 還不支持多模態功能，如語音模式、視頻和屏幕共享。GPT-4.5 主要通過「無監督學習」（就是自己從大量數據中學習）變得更聰明，而不是像 OpenAI o1 或者 DeepSeek R1 那樣專注於推理能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;簡單説，GPT-4.5 知道的更多，而 o1 系列更會思考&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;API 價格方面，因 GPT-4.5 計算量極大，成本高昂，相較於 GPT-4o 價格有了較高上漲——價格漲到了 75 美元 / 百萬 tokens，是 GPT-4o 的 30 倍，更是 DeepSeek 的 280 倍。&lt;/p&gt; 
&lt;p&gt;Sam Altman 提到，&lt;strong&gt;GPT-4.5 不是推理型模型&lt;/strong&gt;，不會在基準測試中碾壓其他模型。在目前曝出的實測中，性能的提升遠沒有價格大。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0228/102206_sah1_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;GPT-4.5 更新要點如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;知識更廣泛：它學習了更多的信息，所以懂的東西比以前多&lt;/li&gt; 
 &lt;li&gt;更少胡説八道：減少了「幻覺」（就是 AI 編造事實的情況）&lt;/li&gt; 
 &lt;li&gt;更懂人心：「情商」更高，更能理解你的真實意圖&lt;/li&gt; 
 &lt;li&gt;對話更自然：聊天感覺更像和真人交流，不那麼機械&lt;/li&gt; 
 &lt;li&gt;創意更豐富：在寫作和設計方面表現更好&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;從今天開始，ChatGPT Pro 用戶已經可以用上 GPT-4.5（研究預覽版）了。下週，將會逐步開放給 Plus 和 Team 用戶；再下一週則是 Enterprise 和 Edu 用戶。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336125/openai-gpt-4-5</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336125/openai-gpt-4-5</guid>
            <pubDate>Fri, 28 Feb 2025 02:18:26 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>字節跳動開源 AIBrix：專為 vLLM 打造的可擴展、高性價比控制面</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;vLLM 日前宣佈了由字節跳動開發的 AIBrix 大模型推理系統正式開源，為 vLLM 推理引擎提供可擴展且高性價比的控制面。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AIBrix 作為一個開源項目，旨在為構建可擴展的推理基礎設施提供核心組件。它提供了一套雲原生解決方案，專注於優化大語言模型（LLM）推理的部署、管理和擴展能力，並針對企業級需求進行了深度適配。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;408&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0226/164138_QBGT_4252687.jpeg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;首版 AIBrix 聚焦以下核心功能：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高密度 LoRA 管理：簡化對輕量級的、低秩模型適配的支持；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;LLM 網關和路由：高效管理和分配多個模型和副本的流量；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;針對 LLM 應用的自動擴展器：根據實時需求動態調整推理資源；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;統一 AI 運行時：多功能 sidecar 容器，支持指標標準化、模型下載和管理；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;分佈式推理：可擴展架構，支持多節點大規模推理負載；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;分佈式 KV 緩存：支持高容量、跨引擎的 KV 重用；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高性價比異構資源調度：支持混合 GPU 推理，在保障 SLO 的前提下降低成本；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;GPU 硬件故障檢測：主動檢測 GPU 硬件異常。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;AIBrix 的願景與行業合作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AIBrix 基於「系統與推理引擎協同設計」的理念，核心目標是以雲原生方式在 Kubernetes 上構建可擴展的推理系統。展望未來，項目團隊計劃通過以下舉措繼續探索協同設計方法：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;擴展分佈式 KV 緩存：支持更廣泛的場景，如預填充（Prefill）與解碼（Decode）聚合、請求遷移、跨實例 KV 複用等，提升內存效率與推理靈活性；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;引入傳統資源管理原則：將 QoS（服務質量）、優先級調度、公平性等機制應用於 LLM 推理，實現請求級多租戶，確保資源高效分配；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;基於性能天花板的性能分析：通過性能剖析提升計算效率，為多樣化負載提供強 SLO 保障的推理性能。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336124/aibrix-open-source</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336124/aibrix-open-source</guid>
            <pubDate>Fri, 28 Feb 2025 02:17:26 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>騰訊混元新一代快思考模型 Turbo S 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;騰訊混元新一代快思考模型 Turbo S 正式發佈。&lt;/p&gt; 
&lt;p&gt;公告稱，區別於 Deepseek R1、混元 T1 等需要「想一下再回答」的慢思考模型，混元 Turbo S 能夠實現「秒回」，更快速輸出答案，吐字速度提升一倍，首字時延降低 44%。在知識、數理、創作等方面，混元 Turbo S 也有不錯表現。&lt;/p&gt; 
&lt;p&gt;通過長短思維鏈融合，混元 Turbo S 在保持文科類問題快思考體驗的同時，基於自研混元 T1 慢思考模型合成的長思維鏈數據，顯著改進了理科推理能力，實現模型整體性能明顯提升。&lt;/p&gt; 
&lt;p&gt;在業界通用的多個公開 Benchmark 上，混元 Turbo S 在知識、數學、推理等多個領域，展現出對標 DeepSeek V3、GPT 4o、Claude 等一系列業界領先模型的效果表現。&lt;/p&gt; 
&lt;p&gt;架構方面，創新採用 Hybrid-Mamba-Transformer 融合模式，混元 Turbo S 有效降低了傳統 Transformer 結構的計算複雜度，減少了 KV-Cache 緩存佔用，實現訓練和推理成本的下降。&lt;/p&gt; 
&lt;p&gt;新的融合模式突破了傳統純 Transformer 結構大模型面臨的長文訓練和推理成本高的難題。一方面，發揮了 Mamba 高效處理長序列的能力；另一方面，也保留 Transformer 擅於捕捉複雜上下文的優勢，最終構建了顯存與計算效率雙優的混合架構。&lt;/p&gt; 
&lt;p&gt;這也是工業界首次成功將 Mamba 架構無損地應用在超大型 MoE 模型上。通過模型架構上的技術創新，混元 Turbo S 部署成本大幅下降，持續推動大模型應用門檻降低。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;344&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4abaacd31a444217c6439574c9d1649dba7.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;279&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d371fbd287c01368c3fd7fd4559a1d2fd9c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;作為旗艦模型，混元 Turbo S 未來將成為騰訊混元系列衍生模型的核心基座，為推理、長文、代碼等衍生模型提供基礎能力。&lt;/p&gt; 
&lt;p&gt;基於 Turbo S，通過引入長思維鏈、檢索增強和強化學習等技術，混元也推出了具備深度思考的推理模型 T1。&lt;/p&gt; 
&lt;p&gt;該模型此前已在騰訊元寶全量上線（騰訊混元 T1 模型面向所有用戶開放），用戶可以選擇 Deepseek R1 或騰訊混元 T1 模型進行回答。騰訊混元 T1 模型正式版也將很快上線，對外提供 API 接入等服務。&lt;/p&gt; 
&lt;p&gt;當前，開發者和企業用戶已經可以在騰訊雲上通過 API 調用騰訊混元 Turbo S ，即日起一週內免費試用。（騰訊混元 turbos 模型 API 免費試用申請： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.tencent.com%2Fapply%2Fp%2Fi2zophus2x8%25EF%25BC%2589&quot; target=&quot;_blank&quot;&gt;https://cloud.tencent.com/apply/p/i2zophus2x8）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;定價上，Turbo S 輸入價格為 0.8 元/百萬 tokens，輸出價格為 2 元/百萬 tokens，相比前代混元 Turbo 模型價格下降數倍。騰訊元寶即將逐步灰度上線混元 Turbo S，用戶在元寶內選擇「Hunyuan」 模型並關閉深度思考即可體驗使用。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336120</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336120</guid>
            <pubDate>Fri, 28 Feb 2025 01:58:26 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>微軟 Phi-4 家族新成員：Phi-4 多模態和 Phi-4 迷你</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;微軟於 2024 年 12 月發佈了&lt;a href=&quot;https://www.oschina.net/news/324769/microsoft-phi-4-newest-small-language-model&quot;&gt; Phi-4&lt;/a&gt;，這是一款在同類產品中表現卓越的小型語言模型（SLM）。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f367ea7f93b5fdbf9d981567729ae9c09b9.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;今日，微軟宣佈為 Phi-4 家族推出兩款全新模型：&lt;strong&gt;Phi-4 多模態（Phi-4-multimodal）和 Phi-4 迷你（Phi-4-mini）&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7cafa9bb4bd60b2af030be75ea2a3fd600e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Phi-4 多模態模型是微軟首款集成語音、視覺和文本處理的統一架構多模態語言模型&lt;/strong&gt;，參數量達 56 億。在多項基準測試中，Phi-4 多模態的表現優於其他現有的先進全模態模型，例如谷歌的 Gemini 2.0 Flash 和 Gemini 2.0 Flash Lite。&lt;/p&gt; 
&lt;p&gt;在語音相關任務中，Phi-4 多模態在自動語音識別（ASR）和語音翻譯（ST）方面超越了 WhisperV3 和 SeamlessM4T-v2-Large 等專業語音模型。微軟表示，該模型在 Hugging Face OpenASR 排行榜上以 6.14% 的詞錯誤率位居榜首。&lt;/p&gt; 
&lt;p&gt;在視覺相關任務中，Phi-4 多模態在數學和科學推理方面表現出色。在文檔理解、圖表理解、光學字符識別（OCR）和視覺科學推理等常見多模態能力方面，該模型與 Gemini-2-Flash-lite-preview 和 Claude-3.5-Sonnet 等流行模型相媲美甚至超越。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Phi-4 迷你模型則專注於文本任務&lt;/strong&gt;，參數量為 38 億。其在文本推理、數學計算、編程、指令遵循和函數調用等任務中表現優異，超越了多款流行的大型語言模型。&lt;/p&gt; 
&lt;p&gt;為確保新模型的安全性和可靠性，微軟邀請了內部和外部安全專家進行測試，並採用了微軟人工智能紅隊（AIRT）制定的策略。經過進一步優化後，Phi-4 迷你和 Phi-4 多模態模型均可通過 ONNX Runtime 部署到設備端，實現跨平台使用，適用於低成本和低延遲場景。&lt;/p&gt; 
&lt;p&gt;目前，Phi-4 多模態和 Phi-4 迷你模型已在 Azure AI Foundry、Hugging Face 和 NVIDIA API 目錄中上線，供開發者使用。&lt;/p&gt; 
&lt;p&gt;相關鏈接&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fmicrosoft%2Fphi-4&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/microsoft/phi-4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fblog%2Fempowering-innovation-the-next-generation-of-the-phi-family%2F&quot; target=&quot;_blank&quot;&gt;https://azure.microsoft.com/en-us/blog/empowering-innovation-the-next-generation-of-the-phi-family&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fmicrosoft%2FPhi-4-multimodal-instruct&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/microsoft/Phi-4-multimodal-instruct&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336055/ms-phi-family</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336055/ms-phi-family</guid>
            <pubDate>Thu, 27 Feb 2025 11:01:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Scorecards：開源項目安全性評分應用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fscorecard.dev%2F&quot; target=&quot;_blank&quot;&gt;Scorecards&lt;/a&gt;&lt;/u&gt;&amp;nbsp;是谷歌開發，由開源安全基金會 (OpenSSF) 開源的首批項目之一，其目標是為開源項目自動生成一個 &quot;安全分數&quot;，以幫助用戶確定用例的信任度、風險和安全態勢。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;718&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0227/184109_SvIp_2720166.png&quot; width=&quot;2386&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Scorecards 定義了初始評估標準，它被用於以一種完全自動化的方式為開源項目生成一個評分卡。評分卡的每項檢查都可以被控制是否啓用，部分評估指標包括定義良好的安全策略、代碼審查流程以及使用模糊測試和靜態代碼分析工具的持續測試覆蓋率。每項安全檢查都會返回一個布爾值以及信任度分數。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0227/183922_O5Hc_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;隨着 Scorecards 被廣泛使用，谷歌會通過 OpenSSF 的社區貢獻來改進這些指標。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336054</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336054</guid>
            <pubDate>Thu, 27 Feb 2025 10:41:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>KubeSphere 企業版 v4.1.3 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;KubeSphere 企業版始終致力於為企業提供安全、穩定、高效的雲原生全棧管理能力。在 4.1.3 版本中，KubeSphere 聚焦可觀測性深度優化、策略管理靈活升級與安全隔離能力增強，推出多項新特性與優化，進一步釋放企業雲原生基礎設施的潛力，助力業務高效運行與智能管理！&lt;/p&gt; 
&lt;h2&gt;核心升級一覽&lt;/h2&gt; 
&lt;h3&gt;全新智能可觀測性，提升運維效率&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 Grafana Alloy for WizTelemetry 擴展組件&lt;/strong&gt; Grafana Alloy 作為新一代高性能、廠商中立的 OpenTelemetry Collector 分發版，支持採集 Kubernetes 日誌、Prometheus 指標、OpenTelemetry 鏈路追蹤等多元數據，並內置 MySQL、Kafka、Redis 等 20+ 中間件 Exporter，實現一站式指標抓取與遠程寫入。結合 KubeSphere 企業版的可觀測能力，企業可快速構建覆蓋全棧的監控體系，精準定位性能瓶頸。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7d076c7c23c00142406d2b7f4e45055da8d.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;OpenSearch ISM 索引管理全面替代 Curator&lt;/strong&gt; 審計、事件、日誌、通知等擴展組件全面支持 OpenSearch ISM（索引生命週期管理），提供更靈活、自動化的索引策略配置（如滾動更新、冷熱分層、自動清理），優化存儲資源利用率，保障日誌與監控數據長期穩定存儲。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;GPU 監控面板增強，加速 AI 基礎設施管理&lt;/strong&gt; 同步上游 kube-prometheus 最新面板，新增多維度 GPU 資源監控視圖（顯存利用率、算力負載、任務調度等），為 AI 訓練、推理等場景提供精細化洞察，助力企業高效管理 AI 算力資源。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;策略管理更靈活，安全合規再升級&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gatekeeper 內置模板管理功能上線&lt;/strong&gt; 支持通過 &lt;strong&gt;values.yaml 一鍵配置模板安裝策略：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;templates.fullInstall&lt;/code&gt;：快速部署所有內置 OPA 策略模板，滿足開箱即用需求。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;templates.customInstall&lt;/code&gt;：按需選擇模板（如資源配額限制、鏡像校驗、網絡策略），適配多業務場景。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-9aaff9f8bb8c248812fbabdc4fb9f9e9b80.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這一功能的推出，極大簡化了策略部署流程，提升了安全合規管理的靈活性與可維護性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;網絡隔離白名單配置優化&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;支持跨企業空間（Workspace）查詢並選擇，所有命名空間（Namespace），打破原有白名單僅限當前空間的限制。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增 system 級別白名單，允許關鍵系統組件（如監控、日誌服務）跨隔離環境通信，保障核心服務穩定性。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cc1c3a34cb41b902a5ed8846344f1ce5a15.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這一優化特別適用於金融、政務等高合規行業，安全隔離生產環境與測試環境，同時能夠保障核心系統無縫通信。&lt;/p&gt; 
&lt;h3&gt;更穩定、更兼容，助力企業高效升級&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修復 20+ 已知問題，涵蓋監控數據採集異常、權限校驗邏輯優化、UI 交互體驗提升等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全面兼容 Kubernetes 1.28 及主流雲廠商基礎設施，確保企業平滑升級。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;KubeSphere 企業版 4.1.3 是您的不二之選&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;智能可觀測：從基礎設施到應用層，實現數據採集、分析、告警的全鏈路閉環，快速定位故障。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;策略即代碼：通過聲明式配置與 GitOps 集成，確保安全策略的版本化、自動化管理。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安全無死角：網絡隔離、資源審計、合規檢查多維度護航，滿足金融、政務等嚴監管場景需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;開箱即用：40+ 擴展組件、100+ 內置策略模板，快速構建企業級雲原生平台。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;KubeSphere 企業版 4.1.3 版本以卓越的性能、強大的功能和靈活的配置，為企業雲原生管理帶來了全新的體驗和價值。選擇 KubeSphere 企業版 4.1.3，就是選擇更智能、更安全、更高效的雲原生未來。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;瞭解更多&lt;/strong&gt; ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.cloud%2Fdocs%2Fkse%2Frelease-notes%2Fv4.1.3&quot; target=&quot;_blank&quot;&gt;KubeSphere 4.1.3 版本説明&lt;/a&gt; &lt;strong&gt;立即升級&lt;/strong&gt; ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.qingcloud.com%2Fpage%2F23555798970015596%2F4c97b2026cb84249be20d94e71b647cf%3Fcl_track%3Daec50%2F&quot; target=&quot;_blank&quot;&gt;開啓雲原生新篇章&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本文由博客一文多發平台 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom&quot; target=&quot;_blank&quot;&gt;OpenWrite&lt;/a&gt; 發佈！&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4197945/blog/17780777</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/17780777</guid>
            <pubDate>Thu, 27 Feb 2025 10:28:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Kimi 最新模型 k1.6 曝光，編程能力超越 GPT o3</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;全球知名動態基準測試平台&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flivecodebench.github.io%2Fleaderboard.html&quot; target=&quot;_blank&quot;&gt;LiveCodeBench&lt;/a&gt;信息顯示，Kimi k1.6 超過 GPT o3mini、o1 等模型，登頂第一。&lt;/p&gt; 
&lt;p&gt;月之暗面研究員 Flood 在社交平台表示，k1.6 是基於 k1.5 做的訓練，性能還在提升中。月之暗面聯合創始人張予彤在朋友圈表示，「k1.6 還沒有發佈，但看到 LiveCodeBench 的成績感到開心，期待智能模型的持續進化。」&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;629&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0227/164947_bfIa_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336022</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336022</guid>
            <pubDate>Thu, 27 Feb 2025 08:45:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>雷軍闢謠成為中國「新首富」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;來自公眾號 &lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;三言 Pro&lt;/span&gt; 的消息稱，針對小米創始人雷軍身家超過農夫山泉創始人鍾睒睒、升任「中國新首富」的消息，雷軍在武大校友羣回應稱：假新聞。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;479&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-40aaebcdd4663e04133c986ae9570e87067.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前彭博富豪榜單和福布斯的實時榜單都顯示，鍾睒睒仍然是中國首富。彭博富豪榜單中國企業家排名，目前鍾睒睒以 574 億美元財富排名第一，馬化騰以 565 億財富排名第二，雷軍則以 469 億元財富排名第三。&lt;/p&gt; 
&lt;p&gt;以 574 億美元計算，按照當前匯率折算，鍾睒睒大約個人財富 4167 億元。而雷軍個人財富為 3404 億元。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;214&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f9fcd9f23b5b5d8d316bd5c7cbbe0d5bd32.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;而據福布斯的實時榜單顯示，鍾睒睒以 564 億美元財富排名第一，馬化騰以 530 億財富排名第二，張一鳴以 456 億美元財富排名第三，雷軍以 430 億美元財富排名第四。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;201&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2b1879f88498691abc1b706e1a6b6faeb2d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336018</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336018</guid>
            <pubDate>Thu, 27 Feb 2025 08:25:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源是夢想消亡的地方</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;原文：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.trevorlasn.com%2Fblog%2Fopen-source-is-where-dreams-go-to-die&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;Open-source is where dreams go to die&lt;/span&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;span style=&quot;color:#000000&quot;&gt;作者：Trevor I. Lasn&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;最近，我讀了《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmarcan.st%2F2025%2F02%2Fresigning-as-asahi-linux-project-lead%2F&quot; target=&quot;_blank&quot;&gt;辭去 Asahi Linux 項目負責人&lt;/a&gt;》這篇文章，感觸頗深。又一位才華橫溢的開發者因維護開源軟件的繁重需求而精疲力盡。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FHector_Martin_%28hacker%29&quot; target=&quot;_blank&quot;&gt;Hector Martin (marcan)&lt;/a&gt; 花了數年時間將 Linux 移植到 Apple Silicon 上——這是一項令人難以置信的技術成就——最終卻因疲憊和幻滅而選擇離開。&lt;/p&gt; 
&lt;p&gt;這樣的故事在開源領域以令人沮喪的頻率重複上演。充滿熱情的開發者創造了有價值的東西，免費與世界分享，然後看着他們的禮物變成吞噬他們生活的負擔。&lt;/p&gt; 
&lt;p&gt;最初的熱愛逐漸轉變為無償的技術支持。用戶提交錯誤報告時，彷彿他們是付費客戶，要求立即修復和新功能，而自己卻毫無貢獻。Asahi Linux 團隊在沒有文檔的情況下逆向工程了 Apple 的複雜硬件——在企業環境中，這一壯舉可能需要花費數百萬美元——然而，當用戶的特定外設無法完美工作時，他們卻抱怨不已。&lt;/p&gt; 
&lt;p&gt;開源的經濟模式從根本上就是破碎的。大多數維護者從未因他們的努力獲得一分錢，儘管他們創造的軟件支撐着價值數十億美元的公司和關鍵基礎設施。少數通過贊助實現財務可持續性的開發者只是極少數，他們是「精英中的精英」，其項目要麼達到了極高的知名度，要麼滿足了關鍵的行業需求。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;381&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-50ee8f665f3558285784ae210a50aeb9b85.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;span style=&quot;color:#000000&quot;&gt;(Image from XKCD)&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;對於其他人來説，開源變成了一種單向關係：只有付出，幾乎沒有回報。你犧牲晚上和週末的時間來維護軟件，而用戶卻將你的志願工作視為理所當然。源源不斷的需求逐漸侵蝕了啓動項目的熱情。最終，維護項目感覺像是一份無薪的第二職業，而不是一種充實的愛好。&lt;/p&gt; 
&lt;p&gt;Marcan 的辭職並不是性格或承諾的失敗——而是一個系統可預見的結局，這個系統從維護者身上榨取價值，直到他們崩潰。他的故事應該成為對「免費」軟件真實成本的警示。每個開源項目背後都是一個時間和精力有限的人，他們通常在沒有報酬或認可的情況下工作。&lt;/p&gt; 
&lt;p&gt;除非我們從根本上改變對開源工作的價值認知和支持方式，這些項目將繼續成為夢想破滅的地方——在用戶理所當然的要求、不可持續的經濟模式以及隨之而來的不可避免的倦怠中崩潰。&lt;/p&gt; 
&lt;p&gt;幸運的是，並非一切都是壞的；GitHub 正在通過其贊助計劃推動更多的贊助。Sentry 也有一個類似的項目，名為「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.trevorlasn.com%2Fblog%2Fcan-open-source-pledge-fix-open-source-sustainability&quot; target=&quot;_blank&quot;&gt;Open Source Pledge&lt;/a&gt;」。我希望更多的公司能夠效仿並支持開源社區。現在是時候回饋那些讓開源成為可能的人了。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336005</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336005</guid>
            <pubDate>Thu, 27 Feb 2025 07:50:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>如意玲瓏應用構建指南（一）：規範體系與配置文件全解析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;在 Linux 生態中，軟件包的分發與管理一直是開發者與用戶關注的焦點。如意玲瓏（Linyaps）作為一種新興的容器化應用格式，憑藉其輕量化、強隔離、跨發行版兼容等特性，正在為 Linux 應用生態注入新的活力。無論是開發者還是技術愛好者，掌握玲瓏應用的構建方法都至關重要。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;本篇作為&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0FoyZ9FfJ6wxbzborTNjmQ&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;「如意玲瓏應用構建從入門到實戰」&lt;/strong&gt;系列的第一章&lt;/a&gt;，將帶您系統&lt;strong&gt;梳理&lt;/strong&gt;&lt;strong&gt;玲瓏應用構建的核心基礎知識&lt;/strong&gt;，涵蓋構建流程、規範要求與關鍵配置文件。通過理解這些基礎概念，您將能夠為後續的實操教程打下堅實根基，從容應對從代碼到安裝包的每一步挑戰。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;01 玲瓏應用構建基本步驟&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在正式開始構建一個玲瓏應用工程前, 我們需要了解一個玲瓏應用從資源 (源代碼、二進制文件等) 輸入到應用安裝包導出所經過的基本步驟，來確定我們需要準備哪些必要文件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;獲&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;取構建目標源文件 (開源項目源代碼、應用二進制文件等)；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;根據源文件判斷玲瓏應用構建類型, 選擇合適的構建方案；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;準備符合要求的玲瓏構建環境；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;按照構建類型及源代碼內容定製構建配置文件 linglong.yaml ；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;準備&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;應用所使用的通用類資源，圖標以及其他非二進制資源。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;02 玲瓏應用構建工程所需材料&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;結合上述的知識，我們可以瞭解到一個玲瓏應用在構建的全過程中，主要涉及到以下的文件:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用構建工程配置文件 linglong.yaml；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;應用源代碼/需要封裝的二進制文件等資源；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;非二進制文件等通用資源。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;03&amp;nbsp;玲瓏應用遵循的主流規範&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;每一個 Linux 桌面軟件包管理方案為了能夠保障完整的功能和良好的體驗，均需要遵守軟件包管理方案提出的各類規範要求以最大限度發揮軟件包管理方案的功能並保障應用生態體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;如意玲瓏也並不總是特立獨行, 需要滿足一定的規範來保障如意玲瓏生態得以持續穩步發展。目前如意玲瓏生方案遵守以下主流的規範：&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Freedesktop XDG 規範；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用目錄結構規範；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用構建工程配置文件 linglong.yaml 規範。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 Freedesktop XDG 規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用解決方案遵循 Freedesktop XDG 規範，一款正常的圖形化應用應具備圖標文件、desktop 文件並符合 Freedesktop XDG 規範；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用圖標文件應該根據不同尺寸歸類到 $PREFIX/share/icons/hicolor/ 目錄下；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;應用容器中使用 XDG_DATA_DIRS 等變量, 支持讀寫宿主機中的用戶目錄；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 玲瓏應用目錄結構規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用遵循 $PREFIX 路徑規則,該變量自動生成, 應用所有相關文件需存放於此目錄下, 該目錄層級下存在 bin、share 等目錄；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用容器中的應用將不被允許讀取宿主機中系統目錄中的二進制文件、運行庫；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在構建工程中, 構建工程目錄將會被映射到玲瓏容器中, 掛載為 /project；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用容器中運行庫、頭文件所在目錄將根據運行環境類型而異：&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;foundation 類：在玲瓏容器中映射為普通系統路徑 /usr/bin、/usr/include 等, 作為基礎運行系統環境存在；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;runtime 類：在玲瓏容器中映射為 runtime 容器路徑 /runtime/usr/bin /、runtime/usr/include 等，作為基礎運行系統環境存在。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;默認情況下, 玲瓏容器內部的環境變量已自動處理好路徑識別問題, 如：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PATH=szbt@szbt-linyaps23:/project$ echo $PATH
/bin:/usr/bin:/runtime/bin:/opt/apps/com.tencent.wechat/files/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;通用表達為:&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PATH=szbt@szbt-linyaps23:/project$ echo $PATH
/bin:/usr/bin:/runtime/bin:$PREFIX/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;04&amp;nbsp;玲瓏應用構建工程通用資源的規範&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在玲瓏應用構建工程中，不同的資源文件均需要遵循相關規範以確保構建、體驗能夠滿足要求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1 icon 圖標目錄規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;依據玲瓏遵循的 Freedesktop XDG 規範及玲瓏應用目錄結構規範，圖標根據不同尺寸放置在對應的目錄中。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主流的非矢量圖標尺寸有: 16x16、24x24、32x32、48x48、128x128、256x256、512x512。為保障圖標在系統中能夠獲得較佳的體驗效果, 因此需要至少一個尺寸不小於 128x128 的非矢量圖標文件, 矢量圖標則不存在該限制。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;因此, 一款玲瓏應用安裝目錄中, icons 圖標目錄應為以下示例，其中&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;scalable 目錄用於放置矢量圖標文件, 一般為 .svg 格式。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$PREFIX/share/icons/hicolor/16x16/apps
$PREFIX/share/icons/hicolor/24x24/apps
$PREFIX/share/icons/hicolor/32x32/apps
$PREFIX/share/icons/hicolor/48x48/apps
$PREFIX/share/icons/hicolor/128x128/apps
$PREFIX/share/icons/hicolor/256x256/apps
$PREFIX/share/icons/hicolor/512x512/apps
$PREFIX/share/icons/hicolor/scalable/apps&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;假設你的玲瓏應用同時提供尺寸為 128x128 的非矢量圖標文件 linyaps-app-demo.png 和 128x128 的矢量圖標文件 linyaps-app-demo.svg，在玲瓏容器中應當表現為以下狀態：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$PREFIX/share/icons/hicolor/128x128/apps/linyaps-app-demo.png
$PREFIX/share/icons/hicolor/scalable/apps/linyaps-app-demo.svg&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;注意，為了避免圖標衝突被覆蓋，圖標文件名請使用應用唯一英文名稱或玲瓏應用 id。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2 desktop 文件規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;玲瓏應用兼容大部分符合 Freedesktop XDG 規範的 desktop 啓動文件, 其中有以下字段需要額外注意：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:123px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:20.35pt; text-align:center; vertical-align:middle&quot;&gt;&lt;span&gt;字段&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:20.35pt; text-align:center; vertical-align:middle&quot;&gt;&lt;span&gt;值要求&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;Exec&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;該值用於設置點擊此 desktop 文件時執行的指令, 需要與 linglong.yaml 中的 command 值保持一致。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;Icon&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;該值用於設置該 desktop 文件顯示的應用圖標, 需要與 icons 圖標目錄規範中的圖標文件名一致, 此值不需要文件名後綴。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;因此, 一個符合玲瓏應用規範的 desktop 文件可以參考：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;org.qbittorrent.qBittorrent.desktop
[Desktop Entry]
Categories=Network;FileTransfer;P2P;Qt;
Exec=/opt/apps/org.qbittorrent.qBittorrent/files/bin/qbittorrent %U
Comment=Download and share files over BitTorrent
Icon=qbittorrent
MimeType=application/x-bittorrent;x-scheme-handler/magnet;
Name=qBittorrent
Type=Application
StartupWMClass=qbittorrent
Keywords=bittorrent;torrent;magnet;download;p2p;

StartupNotify=true
Terminal=false&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;05&amp;nbsp;玲瓏應用構建工程 linglong.yaml 規範&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;正如其他傳統包管理套件一樣, 手動創建一個玲瓏應用構建工程需要設置構建規則文件&amp;nbsp; linglong.yaml，在構建規則中, 則根據用途劃分為&lt;strong&gt;全局字段&lt;/strong&gt;及&lt;strong&gt;定製化字段&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;請注意，案例中 linglong.yaml 正文內所有空格符號、佔位符均為有效字符, 請勿刪除或變更格式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1 全局字段規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在 linglong.yaml 中, 對於不受構建類型影響的字段我們稱為全局字段, 主要有以下參考的規範。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;1. 一個可以正常開始構建工程的 linglong.yaml&amp;nbsp;應包含以下的關鍵部分:&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:#3e3e3e; display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:230px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;模塊&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;解釋&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;構建工程版本號&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;package&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用基本信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;base&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用容器基礎環境及版本設置, 基礎環境中包含了部分基礎運行庫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;runtime&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;玲瓏應用運行庫 runtime 及版本設置, 當 base 中的基礎運行庫滿足程序運行要求時, 此模塊可刪除&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;command&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用容器啓動時執行的命令, 與 desktop 文件的 Exec 字段內容一致&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;sources&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用構建工程源文件類型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;build&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用構建工程將要執行的構建規則&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;package&amp;nbsp;模塊中存在數個子模塊:&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; height:156px; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; width:677px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;子模塊&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;解釋&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;id&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用 id/包名&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;name&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用名稱, 使用英文名稱&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用版本號&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用類型, 默認為&amp;nbsp;&lt;span&gt;app&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;description&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用描述&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;2. 玲瓏應用遵循 $PREFIX 路徑規則，該變量自動生成，應用所有相關文件需存放於此目錄下. 構建規則中若有需要涉及安裝文件的操作均需要安裝到 $PREFIX 路徑下。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;其中&amp;nbsp;$PREFIX 變量名即為填寫的實際內容，&lt;strong&gt;請勿使用絕對路徑或任何具有絕對值作用的內容代替&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;3. 玲瓏應用目前遵循&lt;strong&gt;四位數字&lt;/strong&gt;的版本號命名規則，不符合規則無法啓動構建工程&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;4. base、runtime 版本支持自動匹配最新版本尾號，版本號可以僅填寫版本號的前三位數字，如：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;當 base org.deepin.foundation 同時提供 23.0.0.28、23.0.0.29, 若 linglong.yaml 中僅填寫：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;base: org.deepin.foundation/23.0.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;那麼在啓動玲瓏應用構建工程時, 將會默認採用最高版本號的 23.0.0.29。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;5. 玲瓏應用構建工程配置文件目前不直接兼容其他包構建工具的配置文件，需要根據構建工程配置文件案例來進行適配修改。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;詳細可參考：&lt;/span&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;https://linyaps.org.cn/guide/start/whatis.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5.2 定製化字段&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;根據玲瓏應用構建工程源文件類型, 又可將玲瓏應用構建工程劃分為&lt;strong&gt;本地文件文件構建&lt;/strong&gt;&amp;nbsp;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;git 源碼倉庫拉取構建&lt;/strong&gt;，不同類型則需要填寫不同的 linglong.yaml。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用構建工程源文件類型 sources 主要支持這幾種類型: git、local、file、archive。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;完整説明可參考：&lt;/span&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;https://linyaps.org.cn/guide/start/whatis.html&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;5.2.1&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;git 拉取源碼編譯模式&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;當玲瓏應用構建工程需要通過 git 拉取開源項目倉庫資源到本地進行構建時, 此事 sources 應當設置為 git 類型, 並根據要求填寫 linglong.yaml。並需要根據規範編寫 sources 與 build 模塊。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;1. sources&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  - kind: git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    url: https://githubfast.com/qbittorrent/qBittorrent.git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    version: release-4.6.7&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    commit: 839bc696d066aca34ebd994ee1673c4b2d5afd7b&lt;/span&gt;&lt;/code&gt;
&lt;code&gt;&lt;span&gt;  - kind: git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    url: https://githubfast.com/arvidn/libtorrent.git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    version: v2.0.9&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    commit: 4b4003d0fdc09a257a0841ad965b22533ed87a0d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:196px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;名稱&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;描述&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件類型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;url&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;需要通過 git 拉取的源代碼倉庫地址, 該倉庫需要支持 git 功能. 當網絡狀態不佳時, 可採用鏡像地址代替&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;指定源代碼倉庫的版本號, 即 tag 標籤, 或拉取主線 master&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:52.5pt; text-align:center; vertical-align:middle&quot;&gt;commit&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:52.5pt; vertical-align:middle&quot;&gt;根據該倉庫 commit 變動歷史拉取源碼, 此處填入 commit 對應的值, 將會應用該倉庫截止本 commit 的所有變更. *此字段優先級高於 version, 請勿填入 version 合併時間之後的任何 commit&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;該模式支持同時添加多個 git 倉庫作為 sources 拉取。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;2. build&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;build&lt;/span&gt;: &lt;span style=&quot;color:#dd1144&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;mkdir&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;-p ${PREFIX}/bin/ ${PREFIX}/share/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;  ##Apply patch for qBittorrent&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;cd&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;/project/linglong/sources/qBittorrent.git&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;git&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;apply -v /project/patches/linyaps-qBittorrent-4.6.7-szbt2.patch&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此模塊為構建規則正文，路徑遵守玲瓏應用目錄結構規範。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在 sources 拉取到本地後, 倉庫文件將會存放在 /project/linglong/sources 目錄中，此時不同倉庫目錄以 xxx.git 命名；支持運用 git patch 功能對源代碼進行便捷維護。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&lt;strong&gt;5.2.2&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;本地資源操作模式&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;當玲瓏應用構建工程需要對構建目錄中的文件操作時，此時 kind 應當設置為 local 類型, 並根據要求填寫 linglong.yaml，此時需要根據規範編寫 sources 與 build 模塊。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1. sources&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;source:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  - kind: local&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    name: &quot;qBittorrent&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:78px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;名稱&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;描述&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件類型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;name&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件名稱標識, 不具備實際用途&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;注意，當 kind 應當設置為 local 類型時, 構建工程將不會對任何源文件進行操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;2. build&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;build: |&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  ##Build main&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  mkdir /project/src/qBittorrent-release-4.6.7-szbt2/build&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  cd /project/src/qBittorrent-release-4.6.7-szbt2/build&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  cmake -DCMAKE_BUILD_TYPE=Release \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;        -DCMAKE_INSTALL_PREFIX=$PREFIX ..&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  make -j$(nproc)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  make install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此模塊為構建規則正文，路徑遵守玲瓏應用目錄結構規範，此時 build 規則支持多種寫法以模擬人為操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;注意需要確保此構建規則所有步驟均可以正常被執行, 否則將會中斷當次構建任務。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;5.2.3&amp;nbsp;容器內部手動操作模式&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;若計劃直接進入玲瓏容器手動操作而不是通過構建規則文件 linglong.yaml,那麼應該參考，本地資源操作模式&amp;nbsp;填寫 linglong.yaml&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;sources 部分寫法與本地資源操作模式一致；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;由於使用手動操作, 因此不需要完整且可以正常被執行的 build 規則, 此時 linglong.yaml 用於生成符合描述的玲瓏容器而不是執行所有任務，具體操作將在後續關於容器內部構建文件的案例中詳細展示。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;以上便是玲瓏應用構建的一些基礎知識，相信您已對玲瓏應用構建的規範、目錄結構、資源配置及關鍵文件（如 linglong.yaml）有了較全面的認知。這些知識不僅是構建流程的「地圖」，更是規避常見陷阱的「指南針」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0FoyZ9FfJ6wxbzborTNjmQ&quot; target=&quot;_blank&quot;&gt;在接下來的系列推文中，我們將&lt;strong&gt;深入實戰環節&lt;/strong&gt;&lt;/a&gt;。準備好您的開發環境，下一站，我們將帶大家&lt;strong&gt;在玲瓏容器中編譯基於 Qt5 的開源應用！&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336001</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336001</guid>
            <pubDate>Thu, 27 Feb 2025 07:34:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>IBM Granite 3.2 系列模型開源發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;IBM &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ibm.com%2Fnew%2Fannouncements%2Fibm-granite-3-2-open-source-reasoning-and-vision&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;推出最新的 Granite 3.2 系列模型，依舊在 Apache 2.0 許可下開源。「以實驗推理功能和首個官方視覺語言模型（VLM）為首，Granite 3.2 為 Granite 系列引入了多項重要的新功能。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;主要信息概覽：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新款 &lt;strong&gt;Granite 3.2 8B Instruct 和 Granite 3.2 2B Instruct&lt;/strong&gt; 提供實驗性的思路鏈推理功能，可顯著提高其遵循複雜指令的能力，同時不會犧牲整體性能。推理過程可以打開或關閉，從而高效利用計算資源。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;與 IBM 的推理擴展技術相結合，Granite 3.2 8B Instruct 的擴展思維過程使其能夠達到或超越更大模型的推理性能，包括 GPT-4o 和 Claude 3.5 Sonnet。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新開發的多模式模型&lt;strong&gt;Granite Vision 3.2 2B&lt;/strong&gt;特別注重文檔理解，其性能突出，可與尺寸為其 5 倍的開放模型相媲美。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Granite Timeseries 模型系列的最新成員&lt;strong&gt;Granite-Timeseries-TTM-R2.1&lt;/strong&gt;擴展了 TTM 的預測能力，除了之前的 TTM 模型已經支持的分鐘和小時預測任務之外，還包含每日和每週預測。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;為 &lt;strong&gt;Granite Guardian 3.2&lt;/strong&gt; 引入了新的模型大小，其中包括從 3B-A800M MoE 語言模型衍生的變體。新模型在性能損失最小的情況下提高了效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Granite Embedding 模型系列現在包括學習稀疏嵌入的能力。Granite -Embedding-30M-Sparse 可在不同的資源和延遲預算之間平衡效率和可擴展性。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;247&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-734609651e706f86443082405306c2a0613.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;219&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5861924d6216e8e1bd964342a61ddfaec61.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-01d6625e86edda352221a94d16367faf0c4.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更多詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ibm.com%2Fnew%2Fannouncements%2Fibm-granite-3-2-open-source-reasoning-and-vision&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335996/ibm-granite-3-2</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335996/ibm-granite-3-2</guid>
            <pubDate>Thu, 27 Feb 2025 07:16:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>特斯拉國內 FSD 和美國版 FSD 有什麼區別？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;特斯拉中國日前宣佈，2024.45.32.12 已開始分批次推送，城市道路 Autopilot 自動輔助駕駛功能上線，這也意味着特斯拉 FSD 正式落地中國。&lt;/p&gt; 
&lt;p&gt;不過，已經升級過的車主經過實測，國內版的 FSD 只能算是具備領航功能的高階智駕，而這又與美版 FSD 有多大區別呢？汽車之家為此製作了一圖説明。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-473e140ae45657efcec09d140953dcbee28.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;從定位上來看，特斯拉中國的輔助駕駛系統，允許在部分結構化的公共道路上開啓智駕，在城中村、夜市街此類場景可用度不高；而&lt;strong&gt;美國版 FSD 在車位設定目的地後支持一鍵開啓智駕&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;同時，美版 FSD 具備自動找車位能力，中國版的則不具備。&lt;/p&gt; 
&lt;p&gt;FSD 的可用度方面，中國版接管率較高，偏向輔助駕駛系統；美國版的較低，更接近完全自動駕駛。&lt;/p&gt; 
&lt;p&gt;在車輛的硬件支持上，中國版 FSD 僅支持 HW4.0 車機芯片，而美版則支持 HW2.5 及以上版本，適用車型範圍更廣。&lt;/p&gt; 
&lt;p&gt;最後，價格方面，中國版 FSD 售價 6.4 萬元，美版為 8000 美元（約合人民幣 5.8 萬元）。&lt;/p&gt; 
&lt;p&gt;對比來看，美國版的 FSD 系統，不僅售價比中國版便宜，而且支持車型範圍更廣，功能也更完善、好用。&lt;/p&gt; 
&lt;p&gt;不過，有報道指出，當前特斯拉給車主推送的輔助駕駛功能屬於「殘血版」FSD，而「滿血版」系統當前正在國內進行測試優化，預計 3、4 月份開啓推送。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335957&quot; target=&quot;news&quot;&gt;特斯拉 FSD 國內訓練數據合規，但仍處於 L2 級自動駕駛級別&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335792&quot; target=&quot;news&quot;&gt;特斯拉 FSD 闖紅燈，馬斯克回應：我們用了中國互聯網上的公開視頻數據來訓練&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335712&quot; target=&quot;news&quot;&gt;特斯拉 FSD 部分能力在中國已推送，命名為「FSD 智能輔助駕駛功能」&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335994</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335994</guid>
            <pubDate>Thu, 27 Feb 2025 07:11:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>韓國數據中心建設一再遲滯</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;科技日報首爾 2 月 26 日電（記者薛嚴）韓國數據中心協會近日表示，2021 年至 2024 年間，共有 16 個已公開宣佈的數據中心項目被暫停或取消。在首爾和京畿道，受民間投訴影響，從獲得建築許可到開始施工的時間被一再延長，部分建設項目被迫下馬。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;全球雲計算代表企業之一亞馬遜雲計算服務曾於 2023 年 10 月宣佈，將投資 7.85 萬億韓元，在韓建設首個數據中心。作為該投資計劃的第一步，亞馬遜在仁川西區工業園區開建一個大型數據中心，業務規模超過 5000 億韓元，需要約 100 兆瓦電力。目前距離宣佈投資已過去一年零四個月，該數據中心建設仍處於起步階段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;而亞馬遜雲計算服務在馬來西亞的數據中心於 2023 年 3 月宣佈，2024 年 8 月即竣工開放；在印度和澳大利亞的數據中心從宣佈到正式開放用了約兩年時間；在泰國的數據中心於 2022 年 10 月宣佈，2025 年 1 月投入運營。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;韓國業界研判，由於韓國獨特的民事訴訟風險，全球大型科技公司今後可能不會考慮將該國作為人工智能數據中心建設地。三星證券在近期的報告中指出，曾有某全球雲服務提供商計劃將韓國打造為人工智能數據中心，但最近放棄了該計劃，正轉向日本、印度、馬來西亞等國。由於包括亞馬遜和微軟在內的大型科技公司十分重視當地情緒和輿論風險，韓國業界擔心，他們會在人工智能時代的尖端技術基礎設施建設方面明顯落後。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335990</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335990</guid>
            <pubDate>Thu, 27 Feb 2025 06:54:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>基於 HLS v7 的 fMP4 技術實現與應用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;作者前言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;作為 Monibuca 流媒體服務器的開發者，我們一直在尋求提供更高效、更靈活的流媒體解決方案。隨着 Web 前端技術的發展，特別是 Media Source Extensions (MSE) 的廣泛應用，我們逐漸認識到傳統的流媒體傳輸方案已難以滿足現代應用的需求。在探索與實踐中，我們發現 fMP4(fragmented MP4) 技術能夠很好地連接傳統媒體格式與現代 Web 技術，為用戶提供更流暢的視頻體驗。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;Monibuca 項目在 MP4 插件的實現中，我們面臨着如何將已錄製的 MP4 文件高效轉換為支持 MSE 播放的格式這一挑戰。通過深入研究 HLS v7 協議和 fMP4 容器格式，我們最終實現了一套完整的解決方案，支持 MP4 到 fMP4 的實時轉換、多段 MP4 的無縫合並，以及針對前端 MSE 播放的優化。本文將分享我們在這一過程中的技術探索和實現思路。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;隨着流媒體技術的發展，視頻分發方式不斷演進。從傳統的整體式下載到漸進式下載，再到現在廣泛使用的自適應碼率流媒體技術，每一步演進都極大地提升了用戶體驗。本文將探討基於 HLS v7 的 fMP4（fragmented MP4）技術實現，以及它如何與現代 Web 前端中的媒體源擴展（Media Source Extensions, MSE）結合，打造高效流暢的視頻播放體驗。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;HLS 協議演進與 fMP4 的引入&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;傳統 HLS 與其侷限性&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;HTTP Live Streaming (HLS) 是由 Apple 公司開發的 HTTP 自適應比特率流媒體通信協議。在早期版本中，HLS 主要使用 TS(Transport Stream) 切片作為媒體容器格式。雖然 TS 格式具有良好的容錯性和流式傳輸特性，但也存在一些侷限性：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;相比於 MP4 等容器格式，TS 文件體積較大&lt;/li&gt; 
 &lt;li&gt;每個 TS 切片都需要包含完整的初始化信息，導致冗餘&lt;/li&gt; 
 &lt;li&gt;與 Web 技術棧的其他部分集成度不高&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;HLS v7 與 fMP4&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;HLS v7 版本引入了對 fMP4(fragmented MP4) 切片的支持，這是 HLS 協議的一個重大進步。fMP4 作為媒體容器格式相比 TS 具有以下優勢：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;文件體積更小，傳輸效率更高&lt;/li&gt; 
 &lt;li&gt;與 DASH 等其他流媒體協議共享相同的底層容器格式，有利於統一技術棧&lt;/li&gt; 
 &lt;li&gt;更好地支持現代編解碼器&lt;/li&gt; 
 &lt;li&gt;與 MSE(Media Source Extensions) 有更好的兼容性&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 HLS v7 中，通過在播放列表中使用&lt;code&gt;#EXT-X-MAP&lt;/code&gt;標籤指定初始化片段，可以實現 fMP4 切片的無縫播放。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;MP4 文件結構與 fMP4 的基本原理&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;傳統 MP4 結構&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;傳統的 MP4 文件遵循 ISO Base Media File Format(ISO BMFF) 規範，主要由以下幾個部分組成：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「ftyp」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(File Type Box): 指示文件的格式和兼容性信息&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「moov」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(Movie Box): 包含媒體的元數據信息，如軌道信息、編解碼器參數等&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「mdat」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(Media Data Box): 包含實際的媒體數據&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在傳統 MP4 中，&lt;code&gt;moov&lt;/code&gt;通常位於文件開頭或結尾，包含了整個視頻的所有元信息和索引數據。這種結構對於流式傳輸不友好，因為播放器需要先獲取完整的&lt;code&gt;moov&lt;/code&gt;才能開始播放。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下是 MP4 文件的 box 結構示意圖：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b90d3cb20e9df52aa8bd3117996cdca7.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;fMP4 的結構特點&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4(fragmented MP4) 對傳統 MP4 格式進行了重構，主要特點是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;將媒體數據分割成多個片段 (fragments)&lt;/li&gt; 
 &lt;li&gt;每個片段包含自己的元數據和媒體數據&lt;/li&gt; 
 &lt;li&gt;文件結構更適合流式傳輸&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 的主要組成部分：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「ftyp」&lt;/strong&gt;: 與傳統 MP4 相同，位於文件開頭&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「moov」&lt;/strong&gt;: 包含整體的軌道信息，但不包含具體的樣本信息&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「moof」&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(Movie Fragment Box): 包含特定片段的元數據&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「mdat」&lt;/strong&gt;: 包含與前面的 moof 相關聯的媒體數據&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下是 fMP4 文件的 box 結構示意圖：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//b3737a48254d68b6644dc2668892d5ac.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種結構允許播放器在接收到初始的&lt;code&gt;ftyp&lt;/code&gt;和&lt;code&gt;moov&lt;/code&gt;後，可以立即開始處理後續接收到的&lt;code&gt;moof&lt;/code&gt;+&lt;code&gt;mdat&lt;/code&gt;片段，非常適合流式傳輸和實時播放。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_9&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;MP4 到 fMP4 的轉換原理&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;MP4 到 fMP4 的轉換過程可以通過以下時序圖來説明：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//6133860c2c64ea51fffd696df71c9559.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;從上圖可以看出，轉換過程主要包含三個關鍵步驟：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「解析源 MP4 文件」&lt;/strong&gt;：讀取並解析原始 MP4 文件的結構，提取出視頻軌、音頻軌的相關信息，包括編解碼器類型、幀率、分辨率等元數據。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「創建 fMP4 的初始化部分」&lt;/strong&gt;：構建文件頭和初始化部分，包括 ftyp 和 moov box，它們作為初始化段 (initialization segment)，包含了解碼器需要的所有信息，但不包含實際的媒體樣本數據。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「為每個樣本創建片段」&lt;/strong&gt;：逐個讀取原始 MP4 中的樣本數據，然後為每個樣本（或一組樣本）創建對應的 moof 和 mdat box 對。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種轉換方式使得原本只適合下載後播放的 MP4 文件變成了適合流式傳輸的 fMP4 格式。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_10&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;MP4 多段合併技術&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_11&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;用戶需求：時間範圍錄像下載&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在視頻監控、課程回放和直播錄製等場景中，用戶經常需要下載特定時間範圍內的錄像內容。例如，一個安防系統的操作員可能只需要導出包含特定事件的視頻片段，或者一個教育平台的學生可能只想下載課程中的重點部分。然而，由於系統通常按照固定時長（如 30 分鐘或 1 小時）或特定事件（如直播開始/結束）來分割錄製文件，用戶需要的時間範圍往往橫跨多個獨立的 MP4 文件。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 Monibuca 項目中，我們針對這一需求，開發了基於時間範圍查詢和多文件合併的解決方案。用戶只需指定所需內容的起止時間，系統會：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;查詢數據庫，找出所有與指定時間範圍重疊的錄像文件&lt;/li&gt; 
 &lt;li&gt;從每個文件中提取相關的時間片段&lt;/li&gt; 
 &lt;li&gt;將這些片段無縫合併為單個下載文件&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種方式極大地提升了用戶體驗，使其能夠精確獲取所需內容，而不必下載和瀏覽大量無關的視頻內容。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_12&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;數據庫設計與時間範圍查詢&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;為支持時間範圍查詢，我們的錄像文件元數據在數據庫中包含以下關鍵字段：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;流路徑（StreamPath）：標識視頻源&lt;/li&gt; 
 &lt;li&gt;開始時間（StartTime）：錄像片段的開始時間&lt;/li&gt; 
 &lt;li&gt;結束時間（EndTime）：錄像片段的結束時間&lt;/li&gt; 
 &lt;li&gt;文件路徑（FilePath）：實際錄像文件的存儲位置&lt;/li&gt; 
 &lt;li&gt;文件類型（Type）：文件格式，如&quot;mp4&quot;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;當用戶請求特定時間範圍的錄像時，系統執行類似以下的查詢：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;SELECT * FROM record_streams 
WHERE stream_path = ? AND type = &#39;mp4&#39; 
AND start_time &amp;lt;= ? AND end_time &amp;gt;= ?
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這將返回所有與請求時間範圍有交集的錄像片段，然後系統需要從中提取相關部分併合並。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_13&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;多段 MP4 合併的技術挑戰&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;合併多個 MP4 文件並非簡單的文件拼接，而是需要處理以下技術挑戰：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「時間戳連續性」&lt;/strong&gt;：確保合併後視頻的時間戳連續，沒有跳躍或重疊&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「編解碼一致性」&lt;/strong&gt;：處理不同 MP4 文件可能使用不同編碼參數的情況&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「元數據合併」&lt;/strong&gt;：正確合併各文件的 moov box 信息&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「精確剪切」&lt;/strong&gt;：從每個文件中精確提取用戶指定時間範圍的內容&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在實際應用中，我們實現了兩種合併策略：普通 MP4 合併和 fMP4 合併。這兩種策略各有優勢，適用於不同的應用場景。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_14&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;普通 MP4 合併流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//1ad0955a59b92b097b1f92251d4e5395.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種方式下，合併過程主要是將不同 MP4 文件的媒體樣本連續排列，並調整時間戳確保連續性。最後，重新生成一個包含所有樣本信息的&lt;code&gt;moov&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;box。這種方法的優點是兼容性好，幾乎所有播放器都能正常播放合併後的文件，適合用於下載和離線播放場景。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;特別值得注意的是，在代碼實現中，我們會處理參數中時間範圍與實際錄像時間的重疊關係，只提取用戶真正需要的內容：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;if i == 0 {
    startTimestamp := startTime.Sub(stream.StartTime).Milliseconds()
    var startSample *box.Sample
    if startSample, err = demuxer.SeekTime(uint64(startTimestamp)); err != nil {
        tsOffset = 0
        continue
    }
    tsOffset = -int64(startSample.Timestamp)
}

// 在最後一個文件中，超出結束時間的幀會被跳過
if i == streamCount-1 &amp;amp;&amp;amp; int64(sample.Timestamp) &amp;gt; endTime.Sub(stream.StartTime).Milliseconds() {
    break
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h3_15&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;fMP4 合併流程&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//62c8da6b99dfea39d4c94cceaf0f7f8e.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 的合併更加靈活，每個樣本都被封裝成獨立的&lt;code&gt;moof&lt;/code&gt;+&lt;code&gt;mdat&lt;/code&gt;片段，保持了可獨立解碼的特性，更有利於流式傳輸和隨機訪問。這種方式特別適合與 MSE 和 HLS 結合，為實時流媒體播放提供支持，讓用戶能夠在瀏覽器中直接高效地播放合併後的內容，而無需等待整個文件下載完成。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_16&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;合併中的編解碼兼容性處理&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在多段錄像合併過程中，我們面臨的一個關鍵挑戰是處理不同文件可能存在的編碼參數差異。例如，在長時間錄製過程中，攝像頭可能因環境變化調整了視頻分辨率，或者編碼器可能重新初始化導致編碼參數變化。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;為瞭解決這一問題，Monibuca 實現了一個智能的軌道版本管理系統，通過比較編碼器特定數據 (ExtraData) 來識別變化：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//dc237c4d6fe97a47daee3e0b5045caf1.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種設計確保了即使原始錄像中存在編碼參數變化，合併後的文件也能保持正確的解碼參數，為用戶提供流暢的播放體驗。&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_17&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;性能優化&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在處理大型視頻文件或大量併發請求時，合併過程的性能是一個重要考量。我們採取了以下優化措施：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;「流式處理」&lt;/strong&gt;：逐幀處理樣本，避免將整個文件加載到內存&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「並行處理」&lt;/strong&gt;：對多個獨立任務 (如文件解析) 採用並行處理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「智能緩存」&lt;/strong&gt;：緩存常用的編碼參數和文件元數據&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;「按需讀取」&lt;/strong&gt;：僅讀取和處理目標時間範圍內的樣本&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這些優化使得系統能夠高效處理大規模的錄像合併請求，即使是跨越數小時或數天的長時間錄像，也能在合理的時間內完成處理。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;多段 MP4 合併功能極大地增強了 Monibuca 作為流媒體服務器的靈活性和用戶體驗，使用戶能夠精確獲取所需的錄像內容，無論原始錄像如何分段存儲。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_18&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;媒體源擴展 (MSE) 與 fMP4 的兼容實現&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_19&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;MSE 技術概述&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;媒體源擴展 (Media Source Extensions, MSE) 是一種 JavaScript API，允許網頁開發者直接操作媒體流數據。它使得自定義的自適應比特率流媒體播放器可以完全在瀏覽器中實現，無需依賴外部插件。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;MSE 的核心工作原理是：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;創建一個 MediaSource 對象&lt;/li&gt; 
 &lt;li&gt;創建一個或多個 SourceBuffer 對象&lt;/li&gt; 
 &lt;li&gt;將媒體片段追加到 SourceBuffer 中&lt;/li&gt; 
 &lt;li&gt;瀏覽器負責解碼和播放這些片段&lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h3_20&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;strong&gt;fMP4 與 MSE 的完美適配&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 格式與 MSE 有着天然的兼容性，主要體現在：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;fMP4 的每個片段都可以獨立解碼&lt;/li&gt; 
 &lt;li&gt;初始化段和媒體段的清晰分離符合 MSE 的緩衝區管理模型&lt;/li&gt; 
 &lt;li&gt;時間戳的精確控制使得無縫拼接成為可能&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下時序圖展示了 fMP4 如何與 MSE 配合工作：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//0ed201a8d04e9af66b217e89bea2a9c9.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 Monibuca 的實現中，我們針對 MSE 進行了特殊優化：為每一幀創建獨立的 moof 和 mdat。這種實現方式儘管會增加一些開銷，但提供了極高的靈活性，特別適合於低延遲的實時流媒體場景和精確的幀級操作。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_21&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;HLS 與 fMP4 在實際應用中的集成&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在實際應用中，我們將 fMP4 技術與 HLS v7 協議結合，實現了基於時間範圍的點播功能。系統可以根據用戶指定的時間範圍，從數據庫中查找對應的 MP4 記錄，然後生成 fMP4 格式的 HLS 播放列表：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//3c5b53514a61a55be7b2cdf68f245750.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;通過這種方式，我們在保持兼容現有 HLS 客戶端的同時，利用了 fMP4 格式的優勢，提供了更高效的流媒體服務。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src=&quot;https://oscimg.oschina.net/oscnet//46b9a04cdc89947a1b35ae4dd3caa1f1.jpg&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_22&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;結論&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;fMP4 作為一種現代媒體容器格式，結合了 MP4 的高效壓縮和流媒體傳輸的靈活性，非常適合現代 Web 應用中的視頻分發需求。通過與 HLS v7 和 MSE 技術的結合，可以實現更高效、更靈活的流媒體服務。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;在 Monibuca 項目的實踐中，我們通過實現 MP4 到 fMP4 的轉換、多段 MP4 文件的合併，以及針對 MSE 優化 fMP4 片段生成，成功構建了一套完整的流媒體解決方案。這些技術的應用使得我們的系統能夠提供更好的用戶體驗，包括更快的啓動時間、更平滑的畫質切換以及更低的帶寬消耗。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;隨着視頻技術的不斷發展，fMP4 作為連接傳統媒體格式與現代 Web 技術的橋樑，將繼續在流媒體領域發揮重要作用。而 Monibuca 項目也將持續探索和優化這一技術，為用戶提供更優質的流媒體服務。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;本文基於 claude 3.7 thinking 生成，經過作者校對無誤&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/langhuihui/blog/17778966</link>
            <guid isPermaLink="false">https://my.oschina.net/langhuihui/blog/17778966</guid>
            <pubDate>Thu, 27 Feb 2025 06:37:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>行為正則化與順序策略優化結合的離線多智能體學習算法</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;離線多智能體強化學習（MARL）是一個新興領域，目標是在從預先收集的數據集中學習最佳的多智能體策略。隨着人工智能技術的發展，多智能體系統在諸如自動駕駛、智能家居、機器人協作以及智能調度決策等方面展現了巨大的應用潛力。但現有的離線 MARL 方法也面臨很多挑戰，仍存在不協調行為和分佈外聯合動作的問題。為了應對這些挑戰，中山大學計算機學院、美團履約平台技術部開展了學術合作項目，並取得了一些的成果，希望分享給大家。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8f9d9ada748adf5e77677e51a6732f4eece.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;離線多智能體強化學習（MARL）是一個新興領域，目標是在從預先收集的數據集中學習最佳的多智能體策略。相比於單智能體情況，多智能體環境涉及到大規模的聯合狀態------動作空間和多智能體間的耦合行為，這給離線策略優化帶來了額外的複雜性。隨着人工智能技術的發展，多智能體系統在諸如自動駕駛、智能家居、機器人協作以及智能調度決策等方面展現了巨大的應用潛力。但是離線 MARL 較單智能體情況下更加複雜，其涉及龐大的聯合狀態-動作空間和多智能體間的複雜互動行為，這使得離線策略優化成為一項艱鉅的任務。&lt;/p&gt; 
&lt;p&gt;離線 MARL 面臨的主要挑戰包括：一是如何有效應對分佈偏移問題，即在策略評估過程中，分佈外（OOD）樣本可能導致誤差積累；二是在多智能體環境下，協調多個智能體的行為顯得尤為困難。現有的離線 MARL 方法儘管取得了一些進展，但仍存在不協調行為和分佈外聯合動作的問題。為了應對這些挑戰，中山大學計算機學院、美團履約平台技術部開展了學術合作項目，聯合提出了一種新穎的離線 MARL 算法------樣本內順序策略優化（In-Sample Sequential Policy Optimization, InSPO），該方法通過順序更新每個智能體的策略，避免選擇 OOD 聯合動作，同時增強了智能體之間的協調性。&lt;/p&gt; 
&lt;p&gt;2024 年 12 月 11 日，中山大學計算機學院的劉宗凱、林謙、餘超和伍夏威等學術界的專家和教授，跟美團技術團隊聯合發表了一篇技術論文《Offline Multi-Agent Reinforcement Learning via In-Sample Sequential Policy Optimization》（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2412.07639&quot; target=&quot;_blank&quot;&gt;論文下載&lt;/a&gt;）。研究團隊的主要貢獻在於提出了 InSPO 算法，該算法不僅避免了 OOD 聯合動作，還通過探索行為策略中的低概率動作，解決了提前收斂到次優解的問題。理論上 InSPO 保證了策略的單調改進，並收斂到量化響應均衡（QRE）。實驗結果表明，InSPO 在多個離線 MARL 任務中表現出了顯著的效果，與當前最先進的方法相比具有明顯的優勢。&lt;/p&gt; 
&lt;h2&gt;合作型馬爾可夫博弈&lt;/h2&gt; 
&lt;p&gt;在理解離線多智能體強化學習（MARL）中的樣本內順序策略優化之前，首先需要了解合作型馬爾可夫博弈的基本概念和框架。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//675e1c6983a2a518a6e15a7a591ab84d.png&quot; alt=&quot;圖 1：XOR 博弈（a）是聯合行動的獎勵矩陣（b）是數據集的分佈&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;定義與基本概念&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-4665791dd1b8ef718226942c74fe824c828.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;IGM 原則與值分解&lt;/h3&gt; 
&lt;p&gt;在多智能體系統中，直接計算聯合 Q 函數是一個極其複雜的問題，因為狀態-動作空間會隨着智能體數量的增加而指數級增長。值分解方法通過將聯合 Q 函數分解為每個智能體的個體 Q 函數，極大地簡化了這個計算過程。具體來説，聯合 Q 函數 Q(s,a) 被表示為每個智能體 Q 函數$Q_i$的組合。這種分解方式依賴於個體-全局-最大化（IGM）原則，即最優聯合動作可以通過每個智能體的貪婪動作來識別。然而，這種方法在處理環境中存在多模態獎勵圖譜時可能會遇到困難，因為 IGM 假設往往會被破壞。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//5e4f5f927e8d434ba6bc41c90745ef45.png&quot; alt=&quot;圖 2：M-NE 博弈（a）是聯合行動的獎勵矩陣（b）是數據集的分佈&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;離線 MARL 中的行為正則化馬爾可夫博弈&lt;/h3&gt; 
&lt;p&gt;為了有效應對離線 MARL 中的分佈偏移問題，行為正則化馬爾可夫博弈引入了一個與數據相關的正則化項。這個正則化項通過在獎勵函數中加入額外的懲罰，迫使學習到的策略儘量接近行為策略，從而避免選擇分佈外的動作。在這個框架中，策略的目標是最大化期望折扣回報，同時減去正則化項，以此平衡策略的探索和利用。這樣不僅提高了策略的穩定性，還能防止其收斂到局部最優解。&lt;/p&gt; 
&lt;p&gt;通過引入這些基礎概念和原理，合作型馬爾可夫博弈為多智能體系統的行為建模和優化提供了一個強大的工具。尤其在離線環境中，結合行為正則化和值分解方法，可以有效解決多智能體間的協調問題，並提高策略的整體表現。&lt;/p&gt; 
&lt;h2&gt;樣本內順序策略優化&lt;/h2&gt; 
&lt;p&gt;在離線多智能體強化學習（MARL）中，策略的優化往往面臨着分佈外（OOD）聯合動作和局部最優解問題。為了應對這些挑戰，研究團隊提出了一種創新的方法------樣本內順序策略優化（In-Sample Sequential Policy Optimization, InSPO）。該方法在行為正則化馬爾可夫博弈框架下進行，結合了逆 KL 散度和最大熵正則化，旨在通過順序更新每個智能體的策略，避免選擇 OOD 聯合動作，同時增強智能體之間的協調。&lt;/p&gt; 
&lt;h3&gt;樣本內順序策略優化的數學推導&lt;/h3&gt; 
&lt;p&gt;InSPO 方法的核心在於通過逆 KL 散度進行行為正則化，從而確保學習到的策略與行為策略共享相同的支撐集，避免選擇分佈外的動作。具體來説，目標函數中的逆 KL 散度項可以分解為各個智能體的獨立項，這使得順序更新每個智能體的策略成為可能。數學上通過使用 Karush-Kuhn-Tucker（KKT）條件，推導出目標函數的閉式解，從而實現樣本內學習。最終的優化目標為最小化 KL 散度，以確保策略更新的有效性和一致性。&lt;/p&gt; 
&lt;h3&gt;最大熵行為正則化馬爾可夫博弈&lt;/h3&gt; 
&lt;p&gt;為了進一步增強探索性，防止策略過早收斂到局部最優解，InSPO 引入了最大熵行為正則化馬爾可夫博弈（MEBR-MG）框架。在這個框架中，策略優化的目標函數不僅包含逆 KL 散度項，還引入了策略熵項。通過這種方式，優化目標能夠促使策略在高概率動作和低概率動作之間保持平衡，鼓勵充分探索低概率動作，從而避免局部最優解。理論上，最大熵行為正則化還能夠確保策略收斂到量化響應均衡（QRE），即在面對擾動獎勵時，策略仍能維持穩定的性能。&lt;/p&gt; 
&lt;p&gt;通過上述方法，樣本內順序策略優化不僅有效解決了離線 MARL 中的 OOD 聯合動作問題，還通過策略熵的引入，顯著提高了策略的探索能力和全局最優解的發現概率。&lt;/p&gt; 
&lt;h2&gt;算法細節&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;算法 1: InSPO 的步驟&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;InSPO 算法的核心在於通過順序更新的方式，逐步優化每個智能體的策略，最終實現全局最優。具體步驟如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e16c132bea19b92a03c06ccb9aa7a13b2eb.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這種順序更新的策略，確保了每一步的策略優化都是在樣本內進行的，避免了分佈外動作的選擇，提高了策略的穩定性和有效性。&lt;/p&gt; 
&lt;h3&gt;策略評估&lt;/h3&gt; 
&lt;p&gt;策略評估是 InSPO 算法中的一個關鍵步驟。根據更新的 Q 函數，計算當前策略的期望回報。在多智能體環境中，由於聯合動作空間的龐大，研究團隊採用了局部 Q 函數來進行近似。在策略評估過程中，需要順序地更新每個智能體的局部 Q 函數，使其能反映最新的策略信息。具體的目標函數包括一個權重項，用於平衡策略的探索和利用。此外，為了降低重要性採樣比率的高方差，InSPO 採用了重要性重採樣技術，通過概率比例重採樣構建新的數據集，從而穩定算法的訓練效果。&lt;/p&gt; 
&lt;h3&gt;策略改進&lt;/h3&gt; 
&lt;p&gt;在獲得優化的局部 Q 函數後，接下來就是策略改進步驟。通過最小化 KL 散度，InSPO 能夠在保持行為策略特性的同時，逐步優化每個智能體的策略。在具體操作中，使用推導出的目標函數來指導每個智能體的策略更新，這一過程確保了策略的收斂性和改進性。&lt;/p&gt; 
&lt;h3&gt;實際應用及實現細節&lt;/h3&gt; 
&lt;p&gt;在實際應用中，InSPO 不僅需要在理論上保證策略的有效性，還需要在大規模狀態-動作空間中保持高效的計算性能。為了實現這一點，論文對算法進行了多方面的優化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;局部 Q 函數的優化&lt;/strong&gt;：為了避免聯合動作空間的指數級增長，他們使用局部 Q 函數來近似全局 Q 函數，並通過順序更新的方法逐步優化每個智能體的局部 Q 函數。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;重要性重採樣&lt;/strong&gt;：通過重要性重採樣技術，構建新的數據集，降低採樣比率的方差，提高訓練的穩定性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自動調節溫度參數α&lt;/strong&gt;：為了找到合適的保守程度，他們實現了自動調節α的機制，根據目標值進行動態調整，從而進一步提高性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這些優化措施使得 InSPO 在處理複雜的多智能體任務時，能夠保持高效的性能和良好的收斂性。通過這些實際應用和實現細節，InSPO 展現了其在離線 MARL 中的巨大潛力和應用價值。&lt;/p&gt; 
&lt;h2&gt;實驗驗證&lt;/h2&gt; 
&lt;p&gt;在 M-NE 博弈中，研究團隊評估了 InSPO 避免收斂至局部最優的能力。實驗使用兩個數據集：一個是由均勻策略收集的平衡數據集，另一個是由接近局部最優的策略收集的不平衡數據集。結果顯示，在平衡數據集上，大多數算法都能找到全局最優解，而在不平衡數據集上，只有 InSPO 正確識別出全局最優解。這表明，在存在多個局部最優解的環境中，數據集分佈對算法收斂性有顯著影響。InSPO 通過全面探索數據集，避免了次優解的影響，展現了其強大的全局最優解識別能力。&lt;/p&gt; 
&lt;h3&gt;橋博弈的實驗結果&lt;/h3&gt; 
&lt;p&gt;橋博弈是一個類似於時間版本 XOR 博弈的網格世界馬爾可夫博弈。在這個實驗中，他們使用了兩個數據集：optimal 數據集和 mixed 數據集。optimal 數據集包含了由最優確定性策略生成的 500 條軌跡，而 mixed 數據集則包括 optimal 數據集和由均勻隨機策略生成的額外 500 條軌跡。實驗結果表明，只有 InSPO 和 AlberDICE 在這兩個數據集上都達到了近乎最優的性能。相比之下，值分解方法未能收斂，併產生了不理想的結果。這進一步證明瞭 InSPO 在複雜多智能體任務中的有效性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//0f145b802f387ab171fa3ad7494622e1.png&quot; alt=&quot;圖 3：數據集 XOR 博弈的最終聯合策略 (b)&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;星際爭霸 II 微操作基準測試的實驗結果&lt;/h3&gt; 
&lt;p&gt;為了進一步驗證 InSPO 的性能，研究團隊將研究擴展到星際爭霸 II 微操作基準測試，這是一個高維複雜的環境。實驗使用了四個代表性地圖，並採用了四個不同的數據集：medium、expert、medium-replay 和 mixed。在這些實驗中，儘管值分解方法在該環境中表現出色，InSPO 依然展示了其競爭力，在大多數任務中取得了最先進的結果。實驗結果證明瞭 InSPO 在高維複雜環境中的應用潛力。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//e6125c6f31fd67575d36610fbf3f2a5e.png&quot; alt=&quot;表 1-4：星際爭霸 II 微管理的平均測試獲勝率&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//ddb9c2e5dbf5c12308d71df30e7df19c.png&quot; alt=&quot;圖 4：開始時的橋&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;消融研究&lt;/h3&gt; 
&lt;p&gt;為了評估 InSPO 中不同組件的影響，研究團隊進行了消融研究。首先他們在不平衡數據集上的 M-NE 博弈中測試了去除熵項的 InSPO，結果顯示沒有熵擾動的 InSPO 無法逃離局部最優。在 XOR 博弈中測試了同時更新而非順序更新的 InSPO，由於更新方向的衝突，未能學習到最優策略，並面臨 OOD 聯合動作問題。此外，研究團隊還評估了溫度參數α對策略保守程度的影響，結果表明自動調節的α能夠找到合適的值，進一步提升性能。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//6f3132a841883f63a22ecb2a4ce8641f.png&quot; alt=&quot;圖 5：熵消融和順序更新方案。（a） 對於不平衡數據集，在 M-NE 博弈中沒有熵的 InSPO。（b） 是數據集（b）XOR 博弈上 InSPO 的同步更新版本&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過這些實驗驗證，InSPO 展現了其在解決離線 MARL 中的局部最優收斂問題、增強策略探索能力和提高全局最優解識別能力方面的優勢。實驗結果不僅證明瞭 InSPO 的理論可行性，還展示了其在實際應用中的強大潛力。&lt;/p&gt; 
&lt;h2&gt;總結&lt;/h2&gt; 
&lt;p&gt;在本研究中，研究團隊提出了一種新穎的離線多智能體強化學習（MARL）算法------樣本內順序策略優化（In-Sample Sequential Policy Optimization, InSPO）。通過引入逆 KL 散度和策略熵，有效地解決了離線 MARL 中的分佈外（OOD）聯合動作和局部最優解問題。理論分析和實驗驗證表明，InSPO 不僅能夠實現策略的單調改進，並最終收斂到量化響應均衡（QRE），還在多個基準測試中展示了優越的性能。與現有的離線 MARL 方法相比，InSPO 在應對複雜多智能體任務、提高策略穩定性和探索能力方面具有顯著優勢。&lt;/p&gt; 
&lt;p&gt;儘管 InSPO 在離線 MARL 領域取得了突破性的進展，但仍有許多值得進一步探索的方向。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;算法擴展與優化&lt;/strong&gt;：未來可以考慮將 InSPO 與其他先進的 MARL 算法相結合，進一步提升策略優化的效果。同時，研究如何在更大規模、更復雜的環境中實現高效的策略優化，也是一個重要的方向。&lt;/li&gt; 
 &lt;li&gt;**數據集增強與生成：在離線 MARL 中，數據集的質量和分佈對算法性能有着直接影響。未來可以探索通過生成對抗網絡（GANs）等技術生成高質量的數據集，從而改善策略學習的效果。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;多模態獎勵圖譜的應對&lt;/strong&gt;：在存在多個局部最優解的環境中，如何更有效地識別和收斂到全局最優解，仍是一個具有挑戰性的問題。研究新的正則化方法和優化策略，能夠進一步提升 InSPO 的魯棒性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;實際應用與驗證&lt;/strong&gt;：將 InSPO 應用到更多實際場景中，如智能調度、智能交通系統、自動駕駛、智能製造等，驗證其在真實環境中的性能和穩定性，將是未來的重要研究方向。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通過這些方向的深入研究與探索，有望進一步提升離線 MARL 算法的性能和應用價值，推動人工智能技術在多智能體系統中的廣泛應用。希望本篇論文解讀能夠幫助到從事相關研究的同學。&lt;/p&gt; 
&lt;p&gt;| 關注「美團技術團隊」微信公眾號，在公眾號菜單欄對話框回覆【2024 年貨】、【2023 年貨】、【2023 年貨】、【2022 年貨】、【2021 年貨】、【2020 年貨】、【2019 年貨】、【2018 年貨】、【2017 年貨】等關鍵詞，可查看美團技術團隊歷年技術文章合集。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//55b56a0b38a08a1b749b50406b9b0291.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;| 本文系美團技術團隊出品，著作權歸屬美團。歡迎出於分享和交流等非商業目的轉載或使用本文內容，敬請註明&quot;內容轉載自美團技術團隊&quot;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=mailto%3A%E3%80%82%E6%9C%AC%E6%96%87%E6%9C%AA%E7%BB%8F%E8%AE%B8%E5%8F%AF%EF%BC%8C%E4%B8%8D%E5%BE%97%E8%BF%9B%E8%A1%8C%E5%95%86%E4%B8%9A%E6%80%A7%E8%BD%AC%E8%BD%BD%E6%88%96%E8%80%85%E4%BD%BF%E7%94%A8%E3%80%82%E4%BB%BB%E4%BD%95%E5%95%86%E7%94%A8%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%AF%B7%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%87%B3tech%40meituan.com%E7%94%B3%E8%AF%B7%E6%8E%88%E6%9D%83%E3%80%82&quot; target=&quot;_blank&quot;&gt;。本文未經許可，不得進行商業性轉載或者使用。任何商用行為，請發送郵件至 tech@meituan.com 申請授權。&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/meituantech/blog/17697665</link>
            <guid isPermaLink="false">https://my.oschina.net/meituantech/blog/17697665</guid>
            <pubDate>Thu, 27 Feb 2025 06:29:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>雷軍身家超鍾睒睒成為中國新首富</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2 月 27 日，小米股價今日盤中一度漲超 4%，這一強勢表現不僅刷新了小米集團股價的歷史紀錄，也使其創始人雷軍的財富水漲船高，成功超越農夫山泉創始人鍾睒睒，成為中國新首富。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;雷軍的總財富估值，主要基於以下三部分的資產計算：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;小米集團：小米集團市值 1.41 萬億港元，雷軍持股約 24.2%，對應 3412 億元人民幣。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;金山系：金山辦公、金山軟件、金山雲三大上市平台，為雷軍貢獻約 441 億元人民幣的資產財富值。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;順為資本：雷軍還通過順為資本這家持股 51% 的投資機構，押中了字節跳動、宇樹科技等獨角獸。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;而雷軍的投資版圖遠不止這些，還有蔚來汽車、人人車、小鵬汽車等。這些加起來，大概能為雷軍貢獻約 500 億元人民幣的資產財富值。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;366&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5aad92e817e72a9f0305c6ec222618f2ebe.webp&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335980</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335980</guid>
            <pubDate>Thu, 27 Feb 2025 06:19:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>縱目科技創始人回應「跑路」傳聞：我必須跳出盒子求解</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年伊始，智能駕駛明星創業公司縱目科技因創始人「跑路失聯」、全員欠薪、社保斷繳、高管離職私轉大額款項等負面消息深陷輿論漩渦。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2 月 26 日，縱目科技創始人兼 CEO 唐鋭在《中國企業家》的採訪中做出回應媒體表示，自己並未失聯，目前正在積極尋求海外融資。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;之所以有所謂跑路和失聯的消息，是一些根本性的矛盾在短期之內無法解決，而我又認為必須在海外求解的過程中的必然輿論。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我確實在和聯席 CEO 商議之後在春節之前離開國內，並且暫未回國。離開至今未回國，出於多重考慮，最主要的一點還是，希望能夠在業務重整期間在海外尋求蠶叢新的落地業務機會和資金來推動走出困境，尋找跳出盒子的解法。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我和相關方保持高頻溝通，失聯一説無從談起。暫時留在海外，也是我現階段的一個思路方向，因為只有一定體量的增量資金進來才能解開當下困境。據我持續的談判獲取的信息來看，海外募資的可能性更多元。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;唐鋭透露，其&lt;strong&gt;工作目前主要集中在於兩個方面：&lt;/strong&gt;一是和國內股東以及股東組成的應急小組共同解決國內業務重整過程中的問題。二是儘可能維持海外的蠶叢業務，並尋求海外蠶叢業務的潛在投資人，並且在合適的時間將海外蠶叢業務的投資人和國內的重整過程進行並軌處理。「我認為這是目前能夠替所有關聯方挽回損失並創造最大化價值的唯一最優解。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;針對相關報道稱縱目科技及下屬公司法務、財務、HR、EBU 等 8 名高管組成的小團體，在 1 月 26 日下午至 27 日凌晨 5 點期間，以 3.5 個月的欠薪名義，私自將 88 萬元保供款轉至個人賬戶的疑問，唐鋭則澄清稱：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;1) 具體的發放，包括決定做出，具體涉及人名清單以及金額，我是事後得知。2) 該決策的做出，在那個時間點，有一定合理性，但是決策高度和決策質量不夠（至少我這麼認為並且批評這一決策）。3) 該決策的流程中有較多不合規性。4) 讓員工比較憤怒的是，該名單上的員工理論上是領取該款項後積極盡職，但是從事後來看，完全沒有。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，由於社保繳納問題，目前基本上處於大部分員工包括管理團隊離職的狀態。然後一些核心的技術骨幹和極個別管理團隊成員仍然按照離職狀態在儘可能幫助業務維持和推動重整解決。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;縱目科技成立於 2013，曾三度衝擊 IPO。作為創始人，唐鋭本科和研究生均畢業於清華大學電子工程系。碩士畢業後，他加入 Centrality Communications Inc.成為一名軟件工程師。此後，他又加入英國半導體製造商 CSR 公司，擔任汽車事業羣資深工程總監。2012 年，唐鋭回國創業，創立縱目科技，踩中了環視 ADAS 和自動駕駛技術快速發展的風口。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fq3Vk8YQKHfazhv51wLMgzA&quot; target=&quot;_blank&quot;&gt;查看採訪全文&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335979</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335979</guid>
            <pubDate>Thu, 27 Feb 2025 06:15:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>我國牽頭制定的養老機器人國際標準正式發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國際電工委員會 (IEC) 近日正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwebstore.iec.ch%2Fen%2Fpublication%2F66358&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;由我國牽頭制定的養老機器人國際標準 (IEC 63310《互聯家庭環境下使用的主動輔助生活機器人性能準則》)。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該項標準依據老年人生理和行為特點，為各類養老機器人的產品設計、製造、測試和認證等提供基準，將引領全球養老機器人產業健康發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;299&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b874dc1d863aab5b2b4cb46b8605907367b.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該項標準聚焦互聯家居環境中老年人在日常生活、健康護理等各個方面的需求和特徵，基於老年用戶所需的輔助支持水平，提出養老機器人的功能和性能分類，除了可用性、可靠性、無障礙、能耗和噪聲等通用要求以外，還對養老機器人提供的健康狀況和緊急情況監測服務，與家人及醫護人員的通信支持，多樣化的家務、娛樂、家居管理、照護等活動支持，外出和助行等移動性支持，信息和數據管理性能等分別提出了技術要求。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335965</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335965</guid>
            <pubDate>Thu, 27 Feb 2025 03:41:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Kubescape 成為 CNCF 孵化項目</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;CNCF 技術監督委員會 (TOC) 已投票&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cncf.io%2Fblog%2F2025%2F02%2F26%2Fkubescape-becomes-a-cncf-incubating-project%2F&quot; target=&quot;_blank&quot;&gt;接受&lt;/a&gt; Kubescape 作為 CNCF 孵化項目。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;261&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a19d8b749f4a46c1d491ea261d06f415ae.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據介紹，Kubescape 是一個開源的 Kubernetes 安全項目，旨在為整個開發和部署生命週期提供全面的安全覆蓋，於 2022 年 11 月進入雲原生計算基金會 (CNCF) 沙箱。它提供姿態和漏洞管理，以及自動加固策略。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，Kubescape 還提供基於 eBPF 的威脅檢測功能，能夠識別雲工作負載的異常和可疑行為。Kubescape 既可以作為 CLI 工具，也可以作為 Kubernetes 操作器使用。CLI 工具用於手動掃描、腳本編寫和 CI/CD 集成，而 Kubescape 操作器則是一組微服務，從內部監控您的 Kubernetes 集羣。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Kubescape 由專注於雲運行時安全的網絡安全公司 ARMO 於 2021 年創建。自成立以來，Kubescape 一直是增長最快的開源安全項目之一，在雲原生社區中獲得了廣泛採用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Kubescape 也是首個 CNCF Kubernetes 安全掃描器。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335963/kubescape-cncf-incubating</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335963/kubescape-cncf-incubating</guid>
            <pubDate>Thu, 27 Feb 2025 03:27:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>特斯拉 FSD 國內訓練數據合規，但仍處於 L2 級自動駕駛級別</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;2 月 26 日，特斯拉中國正式啓動 2024.45.32.12 版車機系統升級，此次更新重點向用戶推送&quot;完全自動駕駛能力（FSD）智能輔助駕駛&quot;功能的進階服務。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3fa439b9bf6bdc587e0ea49bdbf9ceb1965.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fttarticle%2Fp%2Fshow%3Fid%3D2309405138367066014026&quot; target=&quot;_blank&quot;&gt;據《網易科技》的獨家報道&lt;/a&gt;&lt;/u&gt;，特斯拉「FSD 智能輔助駕駛」的訓練是在數據採集使用完全合規的情況下完成的。&lt;/p&gt; 
&lt;p&gt;此外，&lt;strong&gt;特斯拉此次在中國沿用&quot;FSD 智能輔助駕駛&quot;的命名體系，旨在保持全球品牌技術標識的統一性&lt;/strong&gt;。&lt;strong&gt;當前特斯拉 FSD 仍屬於 L2 級輔助駕駛範疇，要求駕駛員全程保持對車輛的控制權&lt;/strong&gt;。特斯拉中國官網特別強調，用戶在使用過程中必須將雙手置於方向盤感應區域，視線不可脫離路面，系統會通過實時攝像頭監測確保駕駛專注度。&lt;/p&gt; 
&lt;p&gt;據悉，此次發佈的 FSD 中國版針對本土交通環境進行了超過 200 項專項優化。值得關注的是，此次升級暫未涵蓋上月剛發佈的 Model Y 煥新版車型。預計將在未來通過 OTA 方式完成功能匹配。&lt;/p&gt; 
&lt;p&gt;隨着本次軟件升級的推進，特斯拉成為首個在中國市場實現高階智能駕駛功能規模化部署的外資車企。&lt;/p&gt; 
&lt;p&gt;最後看看 2016 年推出至今，特斯拉 FSD&amp;nbsp;的發展脈絡：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;2014 年，Autopilot 輔助駕駛功能首次搭載在 Model S 上。&lt;/li&gt; 
 &lt;li&gt;2016 年，特斯拉首次發佈 FSD。從一開始，FSD 智能輔助駕駛功能就是作為 EAP（增強版輔助駕駛功能）的升級選項提供給廣大消費者的。&lt;/li&gt; 
 &lt;li&gt;在此後多年中，FSD 智能輔助駕駛功能不斷進化，2023 年特斯拉在行業內率先量產落地端到端技術架構，並且持續更新優化中。&lt;/li&gt; 
 &lt;li&gt;2019 年，特斯拉發佈基於自研 FSD 芯片的 HW 3.0 系統，顯著提升了計算能力和系統性能。&lt;/li&gt; 
 &lt;li&gt;2021 年 7 月 10 日，特斯拉在美髮布了 FSD Beta V9，這是特斯拉首次採用純視覺方案的 FSD Beta 版本，標誌着特斯拉在自動駕駛技術上的重大進步。&lt;/li&gt; 
 &lt;li&gt;2022 年，特斯拉對「FSD 智能輔助駕駛功能」進行了多次更新，包括 FSD Beta 10.69.25.2、10.69.3.1、10.69.2.3 等版本，逐步提升了系統的性能和穩定性。&lt;/li&gt; 
 &lt;li&gt;2023 年 11 月，特斯拉開始向員工推出 FSD Beta V12。2024 年 1 月，特斯拉正式向車主推送了 FSD V12.12，使特斯拉的智能輔助駕駛功能取得重大進展，應用端到端神經網絡，並經過數百萬個視頻剪輯的訓練後，該系統取代了超過 30 萬行的 C++ 代碼。&lt;/li&gt; 
 &lt;li&gt;2024 年底，特斯拉在美髮布 FSD V13，該版本將引入停車和自動泊車功能，並進一步延長駕駛員幹預的間隔距離。&lt;/li&gt; 
 &lt;li&gt;2025 年 2 月 25 日，特斯拉正式在中國市場分批次推送「FSD 智能輔助駕駛功能」，軟件版本為 2024.45.32.12，今年，特斯拉還計劃於 6 月在德克薩斯州奧斯汀推出無人監督的 FSD 服務，並計劃在 2025 年底前在美國大部分地區推出 FSD 服務。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335792&quot; target=&quot;news&quot;&gt;特斯拉 FSD 闖紅燈，馬斯克回應：我們用了中國互聯網上的公開視頻數據來訓練&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335712&quot; target=&quot;news&quot;&gt;特斯拉 FSD 部分能力在中國已推送，命名為「FSD 智能輔助駕駛功能」&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335957</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335957</guid>
            <pubDate>Thu, 27 Feb 2025 03:11:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>