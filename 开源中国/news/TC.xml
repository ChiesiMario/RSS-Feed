<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 繁體中文（台灣）</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 03 Jun 2025 16:44:27 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>​​字節跳動開源 Computer Use Agent：引領人機交互新革命​</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;div class="ckeditor-html5-video"&gt; 
 &lt;video controlslist="nodownload"&gt;
  &amp;nbsp;
 &lt;/video&gt; 
&lt;/div&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;字節跳動開源 Computer Use Agent：引領人機交互新革命&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;在人工智能技術日新月異的今天，字節跳動再次以創新者的姿態，宣佈開源其自主研發的 Computer Use Agent（以下簡稱 CUA）。這一舉措不僅標誌着字節跳動在 AI 領域的又一重大突破，更為全球開發者提供了一個強大的工具，以前所未有的方式與計算機進行交互。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;CUA：從對話到行動的跨越&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;傳統的 AI 助手往往停留在「對話式人工智能」的層面，即通過自然語言處理理解用戶意圖，並給出相應的回答或建議。然而，CUA 則實現了從「對話」到「行動」的跨越。它不僅能夠理解用戶的指令，更能通過自研的 Doubao 1.5 UI-TARS 模型，直接與計算機的圖形用戶界面（GUI）進行交互，執行復雜的任務。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;Doubao 1.5 UI-TARS 模型融合了視覺能力與高級推理，能夠精準捕捉用戶指令背後的場景意圖。無論是視頻剪輯、演示文稿製作，還是自媒體賬號運維，CUA 都能輕鬆應對，極大地提升了用戶的工作效率。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;強大的技術支撐&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;CUA 的強大背後，是字節跳動在 AI 領域的深厚積累。其核心技術包括：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;感知能力&lt;/strong&gt;：CUA 能夠截取計算機屏幕圖像，對數字環境中的內容進行情境化處理，為決策提供依據。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;推理能力&lt;/strong&gt;：藉助思維鏈推理，CUA 能夠評估觀察結果，跟蹤中間步驟的進展，動態適應新的挑戰和不可預見的變化。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;行動能力&lt;/strong&gt;：利用虛擬鼠標和鍵盤，CUA 能夠執行鍵入、點擊和滾動等操作，實現與計算機的無縫交互。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;多系統支持與極致性能&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;CUA 不僅支持 Windows 操作系統，還兼容 Linux 系統，滿足了不同用戶的需求。Windows 系統擁有豐富的傳統軟件生態，而 Linux 系統則更加輕量與靈活，適合企業級計算環境。此外，依託字節跳動分佈式架構的底層技術積累，CUA 實現了雲主機實例的秒級啓動響應，動態負載均衡機制可根據業務流量實時調整資源分配，構建從資源申請到服務就緒的極致彈性鏈路。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;靈活的服務組合&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;CUA 採用高內聚低耦合的微服務架構設計，支持全棧式部署與組件化調用。對於大型互聯網客戶，可以按需編排 Agent Planer、MCP Server、Sandbox Manager 等服務；對於小型客戶，則提供全棧式的一體化解決方案，滿足不同規模用戶的需求。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;開源與社區支持&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;字節跳動此次開源 CUA，不僅是為了分享技術成果，更是為了與全球開發者共同構建一個更加智能、高效的人機交互生態。開發者可以通過 GitHub 輕鬆獲取 CUA 的代碼，並參與到其開發與優化中來。此外，字節跳動還提供了豐富的文檔和社區支持，幫助開發者快速上手並充分利用 CUA 的強大功能。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;展望未來&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;隨着人工智能技術的不斷發展，人機交互將變得更加自然、高效。字節跳動開源 CUA，無疑為這一趨勢注入了新的動力。未來，CUA 有望在更多領域得到應用，如智能家居、遠程辦公、教育培訓等，為用戶帶來更加便捷、智能的體驗。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;結語&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;字節跳動開源 Computer Use Agent，是其在 AI 領域的一次重要佈局，也是對全球開發者的一份厚禮。通過開源 CUA，字節跳動不僅分享了其技術成果，更與全球開發者共同探索人機交互的未來。讓我們期待 CUA 在未來的發展中，為用戶帶來更多驚喜與便利。&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;開源鏈接&lt;/strong&gt;：&lt;span style="background-color:#f3f3f3; color:rgba(0, 0, 0, 0.9)"&gt;https://github.com/volcengine/ai-app-lab/tree/main/demohouse/computer_use&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353373</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353373</guid>
      <pubDate>Sat, 10 May 2025 11:42:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>11Labs 發佈對話式 AI 2.0，集成話輪轉換和知識庫，多語言多角色多模態</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1920" src="https://oscimg.oschina.net/oscnet/up-fb27eb9853e5a2ba39b1a40c448360774ba.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;開發者朋友們大家好：&lt;/p&gt; 
&lt;p&gt;這裏是 &lt;strong&gt;「RTE 開發者日報」&lt;/strong&gt; ，每天和大家一起看新聞、聊八卦。我們的社區編輯團隊會整理分享 RTE（Real-Time Engagement） 領域內「有話題的 &lt;strong&gt;技術&lt;/strong&gt; 」、「有亮點的 &lt;strong&gt;產品&lt;/strong&gt; 」、「有思考的 &lt;strong&gt;文章&lt;/strong&gt; 」、「有態度的 &lt;strong&gt;觀點&lt;/strong&gt; 」、「有看點的 &lt;strong&gt;活動&lt;/strong&gt; 」，但內容僅代表編輯的個人觀點，歡迎大家留言、跟帖、討論。&lt;/p&gt; 
&lt;p&gt;本期編輯：@趙怡嶺、@鮑勃&lt;/p&gt; 
&lt;h2&gt;01 有話題的技術&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、通義實驗室語音團隊推出 OmniAudio 技術，可直接從 360° 視頻生成 FOA 空間音頻&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;5 月 29 日，阿里通義大模型公佈了「空間音頻生成」模型——OmniAudio。據通義團隊介紹，OmniAudio 能夠直接從 360° 視頻生成空間音頻。&lt;/p&gt; 
&lt;p&gt;為瞭解決「如何利用全景視頻生成與之匹配的空間音頻」這一問題，通義實驗室語音團隊提出了 360V2SA（360-degree Video to Spatial Audio）任務，旨在直接從 360° 視頻生成 FOA（First-order Ambisonics）音頻。&lt;/p&gt; 
&lt;p&gt;據悉，FOA 是一種標準的 3D 空間音頻格式，能夠捕捉聲音的方向性，實現真實的 3D 音頻再現。&lt;/p&gt; 
&lt;p&gt;受限於現有的配對 360° 視頻和空間音頻數據極為稀缺，通義團隊還為此精心設計並構建了 Sphere360 數據集。該數據集包含大量高質量的 360° 視頻和相應的 FOA 空間音頻。這是一個包含超過 10.3 萬個真實世界視頻片段的數據集，涵蓋 288 種音頻事件，總時長達到 288 小時。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="528" src="https://oscimg.oschina.net/oscnet/up-0dbe15c65229d3de4c65a785c1399b0d386.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;另外，OmniAudio 的訓練方法分為了「自監督的 coarse-to-fine 流匹配預訓練」以及「基於雙分支視頻表示的有監督微調」兩個階段。&lt;/p&gt; 
&lt;p&gt;目前，OmniAudio 已上架 GitHub 並同步公佈了代碼、數據開源倉庫，以及相關技術論文。&lt;/p&gt; 
&lt;p&gt;項目主頁：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fomniaudio-360v2sa.github.io%2F" target="_blank"&gt;https://omniaudio-360v2sa.github.io/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;代碼和數據開源倉庫：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fliuhuadai%2FOmniAudio" target="_blank"&gt;https://github.com/liuhuadai/OmniAudio&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;論文地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2504.14906" target="_blank"&gt;https://arxiv.org/abs/2504.14906&lt;/a&gt; （@APPSO、@阿里語音 AI）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、可靈 2.1 系列視頻模型發佈，擁有卓越的動態效果表現，更強的語義響應&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;快手可靈 AI 發佈了其 KLING 2.1 系列視頻模型。據悉，可靈 2.1 系列擁有標準版和大師版兩個版本模型：&lt;/p&gt; 
&lt;p&gt;標準版支持標準（720P）和高品質（1080P）兩種模式。價格方面，標準模式為 20 積分/5 秒，高品質模式為 35 積分/5 秒。&lt;/p&gt; 
&lt;p&gt;大師模式全面升級為 1080P 輸出，擁有卓越的動態效果表現，更強的語義響應。可靈 2.1 標準版暫僅支持「圖生視頻」功能，「文生視頻」功能將在近期上線。目前，可靈 AI 官網已可體驗可靈 2.1 系列模型。&lt;/p&gt; 
&lt;p&gt;可靈 AI：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.klingai.com%2Fcn%2F" target="_blank"&gt;https://app.klingai.com/cn/&lt;/a&gt; （@APPSO）&lt;/p&gt; 
&lt;h2&gt;02 有亮點的產品&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、PlayDiffusion：一種基於擴散的修補模型，具有修改現有語音的能力&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PlayDiffusion 是一個讓用戶能夠通過簡單編輯文本來編輯音頻/視頻內容中語音的模型。該模型是一種基於擴散的修補模型，具有修改現有語音的能力，通過該模型可以像編輯文檔一樣編輯語音，無需重新錄製。只需上傳音頻/視頻，編輯自動生成的轉錄文本，即可獲得更新後的語音。現已開源。&lt;/p&gt; 
&lt;p&gt;工作原理：&lt;/p&gt; 
&lt;p&gt;1、上傳內容；&lt;/p&gt; 
&lt;p&gt;2、模型轉錄語音；&lt;/p&gt; 
&lt;p&gt;3、你編輯轉錄文本；&lt;/p&gt; 
&lt;p&gt;4、模型使用相同的聲音進行更改。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="618" src="https://oscimg.oschina.net/oscnet/up-8ff87eed051a2f090ed7f43ab900a6cc0c7.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;並且 PlayDiffusion 不是像自迴歸模型那樣逐個生成標記，而是能夠一次性預測所有標記，並在大約 20 個去噪步驟中進行優化。這使得生成步驟的效率提高了最多 50 倍，同時沒有任何損失。&lt;/p&gt; 
&lt;p&gt;GitHub: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fplayht%2FPlayDiffusion" target="_blank"&gt;https://github.com/playht/PlayDiffusion&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Demo: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FPlayHT%2FPlayDiffusion" target="_blank"&gt;https://huggingface.co/spaces/PlayHT/PlayDiffusion&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Fal: &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffal.ai%2Fmodels%2Ffal-ai%2Fplayai%2Finpaint%2Fdiffusion" target="_blank"&gt;https://fal.ai/models/fal-ai/playai/inpaint/diffusion&lt;/a&gt; (@HammadH4@X、 @PlayAIOfficial@X)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、ElevenLabs 發佈對話式人工智能 2.0 ，具備新一代先進的輪流發言功能和全面支持企業級應用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ElevenLabs 發佈 Conversational AI 2.0，實現了自然轉換對話能力，能識別語氣詞判斷用戶意圖，避免尷尬停頓和不當打斷。ElevenLabs Conversational AI 現已支持多模態，用戶可以創建能夠通過文本、語音或同時通過兩者進行交流的智能體。&lt;/p&gt; 
&lt;p&gt;ElevenLabs 開發了批量呼叫功能，使用戶能夠自動化並擴展外呼語音通信。批量呼叫允許使用用戶的對話式 AI 智能體同時發起多個外呼，非常適合發送警報、進行調查或向龐大聯繫人列表傳遞個性化信息等用例，提升速度和一致性。 新系統集成了多語言自動識別功能和檢索增強生成（RAG）技術，支持多模態交互，一個 AI 助手可同時處理文本和語音。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="464" src="https://oscimg.oschina.net/oscnet/up-2268b07cc714d7df61acc312e4021b9d1f0.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;新功能概覽：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新一代先進的輪流發言模型；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;語言切換；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;多角色模式；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;多模態；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;批量調用；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;內置 RAG。（@elevenlabsio@X、@騰訊研究院、@海波學者聊 AI）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3、馬斯克宣佈推出 XChat，具備消息「閲後即焚」和無需電話號碼即可使用的網絡通話/視頻功能&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1024" src="https://oscimg.oschina.net/oscnet/up-641ef9a7fa2678ebfb7b35f9975ecb87baa.png" width="1024" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;日前，馬斯克宣佈推出一款名為「XChat」的即時通信服務平台。據悉，該平台將具備消息「閲後即焚」和無需電話號碼即可使用的網絡通話/視頻功能。&lt;/p&gt; 
&lt;p&gt;馬斯克宣稱 XChat 採用了「比特幣風格的加密」，並用 Rust 語言開發，號稱「全新架構」。&lt;/p&gt; 
&lt;p&gt;據 The Information 報道指出，XChat 本質上是為了與 WhatsApp、Telegram，甚至是微信展開競爭。&lt;/p&gt; 
&lt;p&gt;值得一提的是，Telegram 創始人 Pavel Durov 在一週前曾表示其與馬斯克旗下的 xAI 簽署了合作協議，並在 Telegram 中接入了 xAI 的 AI 聊天機器人 Grok。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;端到端加密：消息、通話內容只有通信雙方能看到，第三方（包括 X 平台）無法窺探；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;閲後即焚：可以設置消息在一定時間後自動刪除，比如 10 分鐘後，保護隱私更徹底；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任意文件傳輸：支持發送任何類型的文件，包括照片、視頻、文檔等，不再受限於格式或大小；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;跨平台音視頻通話：無需手機號即可撥打，支持手機、電腦等多設備，通話內容同樣加密。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(@APPSO、@Techub Info)&lt;/p&gt; 
&lt;h2&gt;03 Real-Time AI Demo&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、使用手勢和語音命令控制 3D 模型，包括移動、旋轉、縮放、動畫&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;來自 X 上的@measure_plan：你現在可以導入任何 3D 模型，並使用手勢+語音來控制它&lt;/p&gt; 
&lt;h2&gt;04 有態度的觀點&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1、Anthropic CEO：未來五年 AI 或取代一半白領工作&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;最近在舊金山總部接受採訪時，Anthropic CEO Dario Amodei 發出嚴峻警告：AI 的迅猛發展可能在未來一到五年內淘汰多達一半的初級白領崗位，社會失業率或飆升至 10% 到 20%。&lt;/p&gt; 
&lt;p&gt;Amodei 表示，現在是時候停止對 AI 潛在影響的「美化」，技術、金融、法律、諮詢等多個行業的初級職位將面臨大規模消失，而多數普通人對此幾乎一無所知，也缺乏足夠的重視。&lt;/p&gt; 
&lt;p&gt;他希望通過公開發聲，促使政策制定者與同行開始採取行動，為社會轉型做準備。「大多數人並不知道這件事就要發生，聽起來像瘋話，但他們不信。」&lt;/p&gt; 
&lt;p&gt;Amodei 表示，雖然 AI 也帶來醫療突破、經濟增長等潛力，但其風險同樣不可忽視。「癌症治好了，GDP 每年增長 10%，財政平衡……可有 20% 的人失去了工作。」他坦言，這樣的情境極可能在技術爆發中同時發生。(@APPSO)&lt;/p&gt; 
&lt;p&gt;&lt;img height="411" src="https://oscimg.oschina.net/oscnet/up-02d9ba069382d25ac98e7b02d29ed2b79ba.png" width="696" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;更多 Voice Agent 學習筆記：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSqXLZvq_zwWDcOVKbAb7HQ" target="_blank"&gt;級聯 vs 端到端、全雙工、輪次檢測、方言語種、商業模式…語音 AI 開發者都在關心什麼？丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7QPgzp8kDR_9iHUa4oFeiA" target="_blank"&gt;a16z 最新報告：AI 數字人應用層即將爆發，或將孕育數十億美金市場丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FUM1qs2IT1S6kJ4sZf_k3uA" target="_blank"&gt;a16z 合夥人：語音交互將成為 AI 應用公司最強大的突破口之一，巨頭們在 B2C 市場已落後太多丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FWI0gE4x-TZG0gdgSV_bVSA" target="_blank"&gt;ElevenLabs 33 億美元估值的祕密：技術驅動+用戶導向的「小熊軟糖」團隊丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSVsgDF8F1hxy3-e5-ntGbw" target="_blank"&gt;端側 AI 時代，每台家居設備都可以是一個 AI Agent 丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F4K5wdUEDxrs1afHZSAIuqg" target="_blank"&gt;世界最炙手可熱的語音 AI 公司，舉辦了一場全球黑客松，冠軍作品你可能已經看過&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FJCYzc1Ig-HFFAN3sTQDYbw" target="_blank"&gt;多模態 AI 怎麼玩？這裏有 18 個腦洞&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrN9poD_X6SDxRLMsudg_xg" target="_blank"&gt;AI 重塑宗教體驗，語音 Agent 能否成為突破點？&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FeFS1mnAbUpAJdiLSSGWpSA" target="_blank"&gt;對話 TalktoApps 創始人：Voice AI 提高了我五倍的生產力，語音輸入是人機交互的未來&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fr2z1bilamX6YWTg90F8xYA" target="_blank"&gt;a16z 最新語音 AI 報告：語音將成為關鍵切入點，但非最終產品本身（含最新圖譜）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;寫在最後：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我們歡迎更多的小夥伴參與 &lt;strong&gt;「RTE 開發者日報」&lt;/strong&gt; 內容的共創，感興趣的朋友請通過開發者社區或公眾號留言聯繫，記得報暗號「共創」。&lt;/p&gt; 
&lt;p&gt;對於任何反饋（包括但不限於內容上、形式上）我們不勝感激、並有小驚喜回饋，例如你希望從日報中看到哪些內容；自己推薦的信源、項目、話題、活動等；或者列舉幾個你喜歡看、平時常看的內容渠道；內容排版或呈現形式上有哪些可以改進的地方等。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="241" src="https://oscimg.oschina.net/oscnet/up-486853450499be2bd7283c3af3f26b7bef1.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;素材來源官方媒體/網絡新聞&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353371</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353371</guid>
      <pubDate>Sat, 10 May 2025 11:34:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>騰訊跨端框架 Kuikly 鴻蒙版正式開源</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Kuikly 是騰訊開源的跨端開發框架，基於 Kotlin Multiplatform 技術構建，為開發者提供了技術棧更統一的跨端開發體驗。&lt;/p&gt; 
&lt;p&gt;在 Android、iOS 開源基礎上，本次開源鴻蒙平台支持和 Compose DSL 支持，進一步提升業務多端適配和鴻蒙開發效率。&lt;/p&gt; 
&lt;p&gt;據介紹，目前 Kuikly 鴻蒙版已接入騰訊多款業務，開發並上架鴻蒙 App，如 QQ 瀏覽器、騰訊新聞、搜狗輸入法、全民 K 歌、自選股等。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在鴻蒙平台上，Kuiky 打開頁面速度比 RN 快 6 倍：&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="836" src="https://static.oschina.net/uploads/space/2025/0603/184902_dwpK_2720166.png" width="765" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Kuikly 基於 Kotlin MultiPlatform（KMP）技術，它利用了 KMP 邏輯跨平台的能力，並抽象出通用的跨平台 UI 渲染接口，複用平台的 UI 組件，從而達到 UI 跨平台，具有輕量、高性能、可動態化等優點；&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Kuikly 包括「KuiklyUI」和「KuiklyBase」兩部分。其中，KuiklyUI 支持業務使用自研 DSL 和 Compose DSL 進行 UI 跨端開發，採用輕量、原生渲染方式，支持頁面級動態化；KuiklyBase 支持 UI 和 KMP 邏輯全面跨端的基礎能力和設施，包括豐富的跨端組件，完善的調試、構建、發佈、監控配套工具鏈，穩定性監控能力等。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;同時，KuiklyBase 基建同樣支持邏輯跨端。 讓開發者&lt;strong&gt;可以使用 Kotlin 創建 Android、iOS、鴻蒙、Web、小程序應用&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-911df639ea27ac02b452b9a379738d91ddd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353362</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353362</guid>
      <pubDate>Sat, 10 May 2025 10:51:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>深入協議層：tlmqtt 如何通過自定義編解碼器實現高性能 MQTT Broker</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;strong&gt;tlmqtt 是一款基於 Java 開發、底層依賴 Netty 和 Project Reactor 的完全開源免費的高性能 MQTT Broker。它提供完整的 MQTT 協議解析、QoS 0/1/2 消息支持、自定義消息存儲、可擴展的認證機制以及數據橋接功能。&lt;/strong&gt;&lt;/p&gt; 
&lt;h1&gt;MQTT 編解碼：深入控制與理解&lt;/h1&gt; 
&lt;p&gt;在分析眾多開源 &lt;code&gt;MQTT Broker&lt;/code&gt;實現時，發現絕大多數（約 99%）都直接使用 &lt;code&gt;Netty&lt;/code&gt;提供的編解碼器，如下所示：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;pipeline.addLast(MqttEncoder.INSTANCE);
pipeline.addLast(new MqttDecoder(maxBytesInMessage));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這種方式讓開發者無需關注協議解析細節，專注於業務邏輯開發，是其顯著優勢。然而，它也帶來了兩個關鍵限制：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;高度依賴 &lt;code&gt;Netty&lt;/code&gt;： 擴展性和靈活性受限於&lt;code&gt;Netty&lt;/code&gt;的實現&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;協議理解不足： 開發者容易停留在「知其然」層面，對 &lt;code&gt;CONNECT&lt;/code&gt;、&lt;code&gt;PUBLISH&lt;/code&gt;等報文的具體結構和解析過程缺乏深入理解&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;tlmqtt&lt;/strong&gt; 選擇了自定義編解碼器的實現路徑，對 &lt;code&gt;MQTT&lt;/code&gt;消息報文進行逐步解析。這為我們提供了更深入的控制、靈活性和擴展性，同時也是深入理解&lt;code&gt;MQTT&lt;/code&gt;協議細節的實踐。&lt;/p&gt; 
&lt;h1&gt;Netty 基礎與 MQTT 協議的挑戰&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;Java&lt;/code&gt;高性能網絡開發離不開 &lt;code&gt;Netty&lt;/code&gt;。它提供了多種開箱即用的編解碼器，如固定長度、分隔符和基於長度域的幀解碼器。在實現自定義編解碼器之前，必須理解 &lt;code&gt;MQTT&lt;/code&gt;協議對消息長度的獨特定義方式 &lt;strong&gt;剩餘長度編碼規則：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;單個字節可表示 0 到 127 的值。&lt;/li&gt; 
 &lt;li&gt;大於 127 的值處理如下： &amp;nbsp; &amp;nbsp; &amp;nbsp;- 每個字節的，低 7 位 (bits 0-6) 用於編碼數據。 &amp;nbsp;&amp;nbsp; &amp;nbsp;- 最高位 (bit 7) 作為標識位：1 表示還有後續字節，0 表示結束。&lt;/li&gt; 
 &lt;li&gt;剩餘長度最多由，四個字節，表示。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;顯然， &lt;code&gt;MQTT&lt;/code&gt;的這種變長編碼方式與 &lt;code&gt;Netty&lt;/code&gt;內置的標準長度域解碼器（通常是固定字節數表示長度）並不完全匹配。因此，自定義編解碼器成為必然選擇。&lt;/p&gt; 
&lt;h2&gt;解碼器實現：從字節流到消息對象&lt;/h2&gt; 
&lt;p&gt;自定義解碼器需繼承 &amp;nbsp;&lt;code&gt;Netty&lt;/code&gt;的 &amp;nbsp;&lt;code&gt;ByteToMessageDecoder&lt;/code&gt;類，核心任務是將接收到的 &lt;code&gt;ByteBuf&lt;/code&gt;字節流轉換為業務邏輯所需的 &lt;code&gt;AbstractTlMessage&lt;/code&gt;對象（及其各種具體子類，如 &amp;nbsp;&lt;code&gt;TlMqttConnectReq&lt;/code&gt;）。 核心 &amp;nbsp;&lt;code&gt;decode&lt;/code&gt;方法流程如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;protected void decode(ChannelHandlerContext ctx, ByteBuf in, List&amp;lt;Object&amp;gt; out) throws Exception {
&amp;nbsp; &amp;nbsp; // 1. 檢查基本長度：可讀字節數小於 2(固定頭最小長度)，等待更多數據
&amp;nbsp; &amp;nbsp; if (in.readableBytes() &amp;lt; MIN_LENGTH) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; // 2. 標記當前讀指針位置，以便後續數據不足時回退
&amp;nbsp; &amp;nbsp; in.markReaderIndex();

&amp;nbsp; &amp;nbsp; // 3. 讀取第 1 字節：包含消息類型 (高 4 位) 和標誌位 (低 4 位)
&amp;nbsp; &amp;nbsp; short firstByte = in.readUnsignedByte();
&amp;nbsp; &amp;nbsp; // 4. 解碼剩餘長度 (變長編碼)
&amp;nbsp; &amp;nbsp; int remainingLength = decodeRemainingLength(in);

&amp;nbsp; &amp;nbsp; // 5. 檢查載荷數據是否完整到達 (剩餘長度指的就是載荷長度)
&amp;nbsp; &amp;nbsp; if (in.readableBytes() &amp;lt; remainingLength) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; in.resetReaderIndex(); // 數據不足，重置讀指針，等待後續數據
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; // 6. 數據完整：讀取載荷部分到臨時 ByteBuf
&amp;nbsp; &amp;nbsp; ByteBuf payloadBuf = in.readBytes(remainingLength);
&amp;nbsp; &amp;nbsp; // 可選：打印原始報文 (十六進制) - TlLog.logger("mqtt raw hex", payloadBuf);
&amp;nbsp; &amp;nbsp; try {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 7. 提取消息類型 (右移 4 位取高 4 位)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int messageType = firstByte &amp;gt;&amp;gt; Constant.MESSAGE_BIT;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; MqttMessageType mqttType = MqttMessageType.valueOf(messageType);

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 8. 根據消息類型，分派給對應的具體解碼器構建請求對象
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; AbstractTlMessage req = switch (mqttType) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case CONNECT -&amp;gt; connectDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case DISCONNECT -&amp;gt; disConnectDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case PUBLISH -&amp;gt; publishDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case PUBACK -&amp;gt; pubAckDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case PUBREC -&amp;gt; pubRecDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case PUBREL -&amp;gt; pubRelDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case PUBCOMP -&amp;gt; pubCompDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case SUBSCRIBE -&amp;gt; subscribeDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case UNSUBSCRIBE -&amp;gt; unSubscribeDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case PINGREQ -&amp;gt; heartBeatDecoder.build(payloadBuf, firstByte, remainingLength);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default -&amp;gt; throw new IllegalArgumentException("Unknown MQTT message type: " + mqttType);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; };
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.add(req); // 9. 將解析好的消息對象加入輸出列表，傳遞給後續 Handler
&amp;nbsp; &amp;nbsp; } finally {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payloadBuf.release(); // 10. 確保臨時 ByteBuf 資源釋放
&amp;nbsp; &amp;nbsp; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;關鍵輔助方法：剩餘長度解碼 ( &lt;code&gt;decodeRemainingLength&lt;/code&gt;)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;private int decodeRemainingLength(ByteBuf in) {
&amp;nbsp; &amp;nbsp; int multiplier = 1; // 乘數因子 (128^0, 128^1, ...)
&amp;nbsp; &amp;nbsp; int value = 0; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 累積計算出的剩餘長度值
&amp;nbsp; &amp;nbsp; byte encodedByte;
&amp;nbsp; &amp;nbsp; do {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; encodedByte = in.readByte(); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 讀取一個編碼字節
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; value += (encodedByte &amp;amp; 0x7F) * multiplier; // 取低 7 位數據並乘以當前乘數
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; multiplier *= 128; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// 乘數遞增 (128^1, 128^2, ...)
&amp;nbsp; &amp;nbsp; } while ((encodedByte &amp;amp; 0x80) != 0); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 檢查最高位 (標識位) 是否為 1 (還有後續字節)
&amp;nbsp; &amp;nbsp; return value;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;根據解析出的消息類型，數據會被分派給對應的具體解碼器（如 &amp;nbsp;&lt;code&gt;TlMqttConnectDecoder&lt;/code&gt;）。這些解碼器通常採用模塊化設計，包含 &lt;code&gt;decodeFixedHeader&lt;/code&gt;（固定頭）、 &lt;code&gt;decodeVariableHeader&lt;/code&gt;（可變頭）和 &lt;code&gt;decodePayload&lt;/code&gt;（載荷）三個核心方法。 以 &amp;nbsp;&lt;code&gt;CONNECT&lt;/code&gt;報文解碼 ( &lt;code&gt;TlMqttConnectDecoder&lt;/code&gt;) 為例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;// 解碼固定頭 (相對簡單，主要是類型和長度)
TlMqttFixedHead decodeFixedHeader(int remainingLength) {
&amp;nbsp; &amp;nbsp; TlMqttFixedHead fixedHead = new TlMqttFixedHead();
&amp;nbsp; &amp;nbsp; fixedHead.setMessageType(MqttMessageType.CONNECT);
&amp;nbsp; &amp;nbsp; fixedHead.setLength(remainingLength); // 設置整個報文剩餘長度
&amp;nbsp; &amp;nbsp; return fixedHead;
}

// 解碼可變頭 (包含協議名、版本、連接標誌和保活時間)
TlMqttConnectVariableHead decodeVariableHeader(ByteBuf buf) {
&amp;nbsp; &amp;nbsp; TlMqttConnectVariableHead variableHead = new TlMqttConnectVariableHead();

&amp;nbsp; &amp;nbsp; // 1. 協議名 (通常是"MQTT")
&amp;nbsp; &amp;nbsp; int protocolNameLen = buf.readUnsignedShort(); // 長度域 (2 字節)
&amp;nbsp; &amp;nbsp; variableHead.setProtocolNameLength(protocolNameLen);
&amp;nbsp; &amp;nbsp; byte[] protocolNameBytes = new byte[protocolNameLen];
&amp;nbsp; &amp;nbsp; buf.readBytes(protocolNameBytes);
&amp;nbsp; &amp;nbsp; String protocolName = new String(protocolNameBytes, StandardCharsets.UTF_8); // 顯式指定字符集

&amp;nbsp; &amp;nbsp; // 2. 協議版本 (e.g., 4 for MQTT 3.1.1)
&amp;nbsp; &amp;nbsp; short protocolVersion = buf.readUnsignedByte();
&amp;nbsp; &amp;nbsp; variableHead.setProtocolVersion(protocolVersion);

&amp;nbsp; &amp;nbsp; // 3. 連接標誌字節 (Connect Flags) - 關鍵!
&amp;nbsp; &amp;nbsp; int connectFlags = buf.readUnsignedByte();
&amp;nbsp; &amp;nbsp; // 位運算解析各個標誌位
&amp;nbsp; &amp;nbsp; variableHead.setReserved(connectFlags &amp;amp; 0x01); &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Bit 0 (保留位，必須為 0)
&amp;nbsp; &amp;nbsp; variableHead.setCleanSession((connectFlags &amp;gt;&amp;gt; 1) &amp;amp; 0x01); // Bit 1 (Clean Session)
&amp;nbsp; &amp;nbsp; int willFlag = (connectFlags &amp;gt;&amp;gt; 2) &amp;amp; 0x01; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // Bit 2 (Will Flag)
&amp;nbsp; &amp;nbsp; variableHead.setWillFlag(willFlag);
&amp;nbsp; &amp;nbsp; variableHead.setWillQos((connectFlags &amp;gt;&amp;gt; 3) &amp;amp; 0x03); &amp;nbsp; &amp;nbsp; // Bits 3-4 (Will QoS: 0, 1, 2)
&amp;nbsp; &amp;nbsp; variableHead.setWillRetain((connectFlags &amp;gt;&amp;gt; 5) &amp;amp; 0x01); &amp;nbsp;// Bit 5 (Will Retain)
&amp;nbsp; &amp;nbsp; variableHead.setPasswordFlag(((connectFlags &amp;gt;&amp;gt; 6) &amp;amp; 0x01) &amp;gt; 0); // Bit 6 (Password Flag)
&amp;nbsp; &amp;nbsp; variableHead.setUsernameFlag(((connectFlags &amp;gt;&amp;gt; 7) &amp;amp; 0x01) &amp;gt; 0); // Bit 7 (Username Flag)

&amp;nbsp; &amp;nbsp; // 4. 保活時間 (Keep Alive Timer - 秒)
&amp;nbsp; &amp;nbsp; short keepAlive = buf.readShort();
&amp;nbsp; &amp;nbsp; variableHead.setKeepAlive(keepAlive);

&amp;nbsp; &amp;nbsp; log.debug("解析【CONNECT】可變頭: 協議名=[{}], 版本=[{}], CleanSession=[{}], "
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; + "WillFlag=[{}], WillQos=[{}], WillRetain=[{}], 用戶名標誌=[{}], 密碼標誌=[{}], KeepAlive=[{}]",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; protocolName, protocolVersion, variableHead.getCleanSession(),
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; willFlag, variableHead.getWillQos(), variableHead.getWillRetain(),
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; variableHead.isUsernameFlag(), variableHead.isPasswordFlag(), keepAlive);
&amp;nbsp; &amp;nbsp; return variableHead;
}

// 解碼載荷 (內容由可變頭中的標誌位決定)
TlMqttConnectPayload decodePayload(ByteBuf buf, TlMqttConnectVariableHead variableHead) {
&amp;nbsp; &amp;nbsp; TlMqttConnectPayload payload = new TlMqttConnectPayload();

&amp;nbsp; &amp;nbsp; // 1. Client Identifier (必選)
&amp;nbsp; &amp;nbsp; int clientIdLen = buf.readUnsignedShort();
&amp;nbsp; &amp;nbsp; byte[] clientIdBytes = new byte[clientIdLen];
&amp;nbsp; &amp;nbsp; buf.readBytes(clientIdBytes);
&amp;nbsp; &amp;nbsp; payload.setClientId(new String(clientIdBytes, StandardCharsets.UTF_8));

&amp;nbsp; &amp;nbsp; // 2. Will Topic &amp;amp; Will Message (如果 Will Flag = 1)
&amp;nbsp; &amp;nbsp; if (variableHead.getWillFlag() == 1) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int willTopicLen = buf.readUnsignedShort();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] willTopicBytes = new byte[willTopicLen];
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buf.readBytes(willTopicBytes);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload.setWillTopic(new String(willTopicBytes, StandardCharsets.UTF_8));

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int willMessageLen = buf.readUnsignedShort();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] willMessageBytes = new byte[willMessageLen];
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buf.readBytes(willMessageBytes);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload.setWillMessage(new String(willMessageBytes, StandardCharsets.UTF_8));
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; // 3. Username (如果 Username Flag = true)
&amp;nbsp; &amp;nbsp; if (variableHead.isUsernameFlag()) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int usernameLen = buf.readUnsignedShort();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] usernameBytes = new byte[usernameLen];
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buf.readBytes(usernameBytes);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload.setUsername(new String(usernameBytes, StandardCharsets.UTF_8));
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; // 4. Password (如果 Password Flag = true)
&amp;nbsp; &amp;nbsp; if (variableHead.isPasswordFlag()) { // 使用 VariableHead 中的標誌位判斷
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int passwordLen = buf.readUnsignedShort();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte[] passwordBytes = new byte[passwordLen];
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; buf.readBytes(passwordBytes);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload.setPassword(new String(passwordBytes, StandardCharsets.UTF_8));
&amp;nbsp; &amp;nbsp; }

&amp;nbsp; &amp;nbsp; log.debug("解析【CONNECT】載荷: clientId=[{}], willFlag=[{}], willQos=[{}], willTopic=[{}], username=[{}]",
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload.getClientId(), variableHead.getWillFlag(), variableHead.getWillQos(),
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; payload.getWillTopic(), payload.getUsername());
&amp;nbsp; &amp;nbsp; return payload;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其他 &lt;code&gt;MQTT&lt;/code&gt;報文類型（ &lt;code&gt;PUBLISH&lt;/code&gt;, &amp;nbsp;&lt;code&gt;SUBSCRIBE&lt;/code&gt;, &amp;nbsp;&lt;code&gt;PUBACK&lt;/code&gt;等）的解碼邏輯遵循類似模式，具體實現可參考對應的解碼器類。&lt;/p&gt; 
&lt;p&gt;解碼完成後，會得到一個具體的請求對象（如 &amp;nbsp;&lt;code&gt;TlMqttConnectReq&lt;/code&gt;）。該對象隨後會被傳遞給專門處理該類型消息的 &lt;code&gt;ChannelInboundHandler&lt;/code&gt;，例如 &amp;nbsp;&lt;code&gt;TlMqttConnectHandler&lt;/code&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;public class TlMqttConnectHandler extends SimpleChannelInboundHandler&amp;lt;TlMqttConnectReq&amp;gt; {
&amp;nbsp; &amp;nbsp; @Override
&amp;nbsp; &amp;nbsp; protected void channelRead0(ChannelHandlerContext ctx, TlMqttConnectReq req) throws Exception {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 在此處實現 CONNECT 請求的核心業務邏輯：
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1. 認證 (用戶名/密碼校驗)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 2. 會話管理 (新建或複用會話)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 3. 遺囑消息處理
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 4. 構建併發送 CONNACK 響應
&amp;nbsp; &amp;nbsp; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;編碼器實現：從對象到網絡字節流&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;tlmqtt&lt;/strong&gt; 的編碼器負責將業務邏輯中需要發送給客戶端的消息對象（如 &amp;nbsp;&lt;code&gt;TlMqttConnack&lt;/code&gt;, &amp;nbsp;&lt;code&gt;TlMqttPublish&lt;/code&gt;等）序列化為符合 &lt;code&gt;MQTT&lt;/code&gt;協議規範的二進制數據。開發者只需操作這些對象即可：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;// 業務邏輯中創建 CONNACK 響應對象
TlMqttConnack connack = TlMqttConnack.build(cleanSessionPresent, MqttConnectReturnCode.CONNECTION_ACCEPTED);
// 通過通道管理器發送
channelManager.writeAndFlush(clientId, connack);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;編碼器（繼承 &amp;nbsp;&lt;code&gt;Netty&lt;/code&gt;的 &amp;nbsp;&lt;code&gt;MessageToByteEncoder&lt;/code&gt;）則透明地處理對象到字節流的轉換。 以 &lt;code&gt;CONNACK&lt;/code&gt;報文編碼 ( &lt;code&gt;TlMqttConnackEncoder&lt;/code&gt;) 為例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;@ChannelHandler.Sharable // 標記為可共享，通常無狀態
@Slf4j // 日誌註解
public class TlMqttConnackEncoder extends MessageToByteEncoder&amp;lt;TlMqttConnack&amp;gt; {

&amp;nbsp; &amp;nbsp; @Override
&amp;nbsp; &amp;nbsp; protected void encode(ChannelHandlerContext ctx, TlMqttConnack connack, ByteBuf out) throws Exception {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TlMqttFixedHead fixedHead = connack.getFixedHead();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; TlMqttConnackVariableHead variableHead = connack.getVariableHead();

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 1. 固定頭編碼
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; byte fixedHeaderByte = (byte) (fixedHead.getMessageType().value() &amp;lt;&amp;lt; 4); // 消息類型 (高 4 位) + 保留位 (低 4 位=0)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(fixedHeaderByte);

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 2. 剩餘長度編碼 (CONNACK 固定為 2 字節)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(2); // Remaining Length = 2

&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 3. 可變頭編碼
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(variableHead.getSessionPresent()); // Byte 1: Session Present Flag (0 或 1)
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; out.writeByte(variableHead.getConnectReturnCode().getValue()); // Byte 2: Connect Return Code
&amp;nbsp; &amp;nbsp; }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;貢獻與反饋&lt;/h2&gt; 
&lt;p&gt;歡迎通過以下方式參與項目共建：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;提交 Issue：反饋 Bug 或提出功能建議&lt;/li&gt; 
 &lt;li&gt;提交 PR：優化代碼或新增功能（建議先創建 Issue 溝通方案）&lt;/li&gt; 
 &lt;li&gt;Star/Fork：支持項目持續發展&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;聯繫方式：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;郵箱：2534798858@qq.com&lt;/li&gt; 
 &lt;li&gt;項目地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FZHSQJM%2Ftlmqtt%23" target="_blank"&gt;https://github.com/ZHSQJM/tlmqtt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;項目地址：&lt;a href="https://gitee.com/PiQiHenHaoDeGangTieXia/tlmqtt"&gt;https://gitee.com/PiQiHenHaoDeGangTieXia/tlmqtt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;tlmqtt 致力於為物聯網開發者提供輕量、高效的 MQTT 消息服務，期待您的加入！ 🚀&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353356</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353356</guid>
      <pubDate>Sat, 10 May 2025 09:59:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>三星計劃投資 Perplexity AI，將其搜索技術深度整合至 Galaxy 設備</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-06-01%2Fsamsung-nears-wide-ranging-deal-with-perplexity-for-ai-features" target="_blank"&gt;彭博社報道稱&lt;/a&gt;&lt;/u&gt;，三星電子即將達成一項涉及面廣泛的協議，其將投資 Perplexity AI Inc.，並將這家人工智能初創公司的搜索技術置於其設備的核心位置。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0603/161937_vxgK_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據知情人士透露，兩家公司正在洽談在即將推出的三星設備上預裝 Perplexity 的應用程序和助手，並將 Perplexity 的搜索功能集成到三星網絡瀏覽器中。&lt;/p&gt; 
&lt;p&gt;由於談判是私下進行的，這些知情人士不願透露姓名。知情人士表示，兩家公司還討論了將 Perplexity 的技術融入三星的 Bixby 虛擬助手。&lt;/p&gt; 
&lt;p&gt;三星計劃最早在今年宣佈與 Perplexity 的集成，目標是將該服務作為 Galaxy S26 系列手機的默認助手選項，該系列手機將於 2026 年上半年推出。不過，具體細節尚未最終確定，仍有可能發生變化。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-4ce528b30fdd0be47815eec1cbf00ac3ba5.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;知情人士表示，這家科技巨頭預計還將是 Perplexity 新一輪融資的最大投資者之一。據彭博社報道，這家初創公司正就融資 5 億美元、估值 140 億美元進行深入洽談。&lt;/p&gt; 
&lt;p&gt;此次廣泛的合作可能有助於三星減少對谷歌的依賴，併為其與多家人工智能開發商合作鋪平道路，類似於蘋果公司針對其設備和服務的戰略。對於 Perplexity 而言，此次合作將是其迄今為止最大的移動合作伙伴關係，此前該公司最近與摩托羅拉達成了一項整合協議。&lt;/p&gt; 
&lt;p&gt;三星和 Perplexity 的代表均拒絕置評。&lt;/p&gt; 
&lt;p&gt;據彭博社 4 月報道，兩家公司已於今年早些時候就合作展開洽談。知情人士稱，最近幾周，雙方在韓國會面，最終達成協議。&lt;/p&gt; 
&lt;p&gt;知情人士稱，三星和 Perplexity 還討論了構建一個融合人工智能的操作系統和一款人工智能代理應用程序，這些應用程序可以利用 Perplexity 和其他一系列人工智能助手的功能。&lt;/p&gt; 
&lt;p&gt;蘋果也表現出了與 Perplexity 合作的興趣。據彭博社報道，這家 iPhone 製造商已討論使用 Perplexity 作為 Google 搜索的替代品，以及替代 Siri 語音助手中 ChatGPT 集成的功能。&lt;/p&gt; 
&lt;p&gt;「我們對 Perplexity 的表現印象深刻，因此我們已開始與他們討論他們的工作」，蘋果服務高級副總裁 Eddy Cue 在最近一次 Google 反壟斷審判的證詞中表示。&lt;/p&gt; 
&lt;p&gt;目前尚不清楚 Perplexity 與蘋果最強勁競爭對手之一三星的關係將如何影響 Perplexity 的這一舉措。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353340</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353340</guid>
      <pubDate>Sat, 10 May 2025 08:21:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Snowflake 收購 PostgreSQL 雲服務提供商 Crunchy Data</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wsj.com%2Farticles%2Fsnowflake-to-buy-crunchy-data-for-250-million-233543ab" target="_blank"&gt;據報道&lt;/a&gt;&lt;/u&gt;，美國數據分析軟件製造商 Snowflake 計劃收購數據庫初創公司 Crunch Data。知情人士透露稱，這筆交易的價格為 2.5 億美元。&lt;/p&gt; 
&lt;p&gt;Snowflake 表示，該交易需要獲得監管部門的批准和慣常的成交條件。數據顯示，Snowflake 週一美股上漲逾 2%。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Snowflake 工程高級副總裁 Vivek Raghunathan 表示：「我們的願景是為客戶提供全球最值得信賴、最全面的數據和人工智能平台。今天我們宣佈擬收購 Crunchy Data，再次證明瞭 Snowflake 是滿足所有企業數據和人工智能需求的終極目標。」&lt;/p&gt; 
&lt;p&gt;「我們正在抓住一個價值 3500 億美元的巨大市場機遇，並滿足客戶將 Postgres 引入 Snowflake AI 數據雲的真實需求。」&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0603/155834_4Bmf_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;Crunchy Data 是一家在 PostgreSQL 領域擁有深厚技術積累的公司，其提供的 PostgreSQL 數據庫託管服務、諮詢和培訓等服務具有很高的質量和安全性，能夠幫助企業在雲上更好地部署和管理 PostgreSQL 數據庫。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;此外，Crunchy Data 對 PostgreSQL 開源社區有着巨大的貢獻，其團隊成員在社區中具有一定的影響力和話語權，這有助於 Snowflake 更好地與 PostgreSQL 開源社區合作，共同推動技術的發展和創新。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353336/snowflake-to-buy-crunchy-data-for-250-million</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353336/snowflake-to-buy-crunchy-data-for-250-million</guid>
      <pubDate>Sat, 10 May 2025 08:08:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>企業即時通訊平台，助力企業數字化轉型的即時通訊工具</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;在數字化時代，大型政企單位對高效協作和數據安全的需求極為迫切。&lt;/span&gt;&lt;span&gt;BeeWorks&amp;nbsp;作為一款專為政企領域打造的協作平台，憑藉其出色的安全性能、強大的組織管理功能和豐富的協作功能，成為了眾多大型政企單位的首選。&lt;br&gt; &lt;img alt="團隊暢快交流.png" src="https://oscimg.oschina.net/oscnet//124238aedb86ab89a0c731581f277c04.png" width="1265" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;一、高度安全穩定，保障數據資產&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;對於大型政企單位而言，數據安全至關重要。&lt;/span&gt;&lt;span&gt;BeeWorks&amp;nbsp;支持私有化部署，企業可將服務器架設在自身內網或自有云環境中，從根本上杜絕了第三方平台介入導致的數據泄露風險。所有數據，包括聊天記錄、文件傳輸內容等，均在企業內部流轉，確保數據的安全性和自主可控。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;在數據傳輸環節，&lt;/span&gt;&lt;span&gt;BeeWorks&amp;nbsp;採用先進的加密技術，如&amp;nbsp;TLS/SSL&amp;nbsp;協議、256&amp;nbsp;位&amp;nbsp;AES&amp;nbsp;加密技術等，對數據進行加密處理，防止數據在傳輸過程中被竊取或篡改。對於存儲在服務器上的數據，同樣進行加密存儲，即使服務器遭受攻擊，黑客也無法輕易獲取有價值的信息。此外，BeeWorks&amp;nbsp;在應用安全、身份鑑別、訪問控制、安全審計、用戶數據完整性及用戶數據保密性等安全功能方面均通過了達標認證，為企業構建了&amp;nbsp;「端、管、鏈」&amp;nbsp;全方位安全架構，企業還可根據自身需求定製安全策略，如防火牆設置、入侵檢測、數據加密、內外網隔離等，全面守護企業數據資產。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;在穩定性方面，&lt;/span&gt;&lt;span&gt;BeeWorks&amp;nbsp;經過嚴格的壓力測試和優化，能夠支持高併發的用戶訪問。即便企業內部大量用戶同時在線，也能確保流暢的使用體驗，不會出現卡頓或掉線的情況，為企業日常辦公和業務運轉提供了堅實可靠的技術支撐。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;二、強大組織管理，適配複雜架構&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;大型政企單位通常擁有龐大而複雜的組織架構，人員變動頻繁。&lt;/span&gt;&lt;span&gt;BeeWorks&amp;nbsp;具備強大的組織管理功能，能夠高效同步組織架構信息，人員變動後信息可及時更新，極大地提升了企業內部溝通效率。通過按角色、部門設置訪問權限，企業可以實現精細化權限管理。例如，限制敏感文件的下載與轉發，並完整記錄用戶操作日誌，便於進行審計與追溯，確保企業信息安全和合規運營。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;三、豐富協作功能，滿足多元需求&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;即時通訊&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;BeeWorks&amp;nbsp;提供了專業的即時通訊能力，支持多種消息類型，包括文字、語音、圖片和文件等，滿足不同場景下的溝通需求。獨特的消息反饋機制可實時顯示消息的已讀未讀狀態，確保重要信息及時傳達。此外，平台還支持&amp;nbsp;「強通知」&amp;nbsp;功能，關鍵信息能夠第一時間送達，避免信息遺漏，有效提升溝通效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;文件共享&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;企業內部文件的安全共享與協作至關重要。&lt;/span&gt;&lt;span&gt;BeeWorks&amp;nbsp;的文件共享功能允許員工便捷地上傳、下載和管理文件，並且可以針對用戶、部門及崗位進行細緻的權限控制，如設置用戶的管理、瀏覽、編輯、下載、打印等操作權限，確保關鍵信息不外泄。同時，自有文檔中心保障了組織專屬的內部協作環境，提升團隊協作效率。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;會議功能&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;BeeWorks&amp;nbsp;提供了完全私有化的視頻會議系統，支持主持人、演示者、普通參會人等多種角色權限設置，確保會議安全私密。該視頻會議系統具備高清畫質、穩定的音頻傳輸和流暢的會議體驗，無論是日常工作會議、遠程培訓還是重要決策會議，都能輕鬆滿足需求，打破時空限制，實現高效遠程協作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;四、應用案例&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;眾多大型政企單位已經成功應用&lt;/span&gt;&lt;span&gt;BeeWorks，顯著提升了工作效率和管理水平。例如，深圳市的&amp;nbsp;「深&amp;nbsp;i&amp;nbsp;企」&amp;nbsp;項目，通過&amp;nbsp;BeeWorks&amp;nbsp;構建了一套完整、完備和完善的政務即時通訊底座平台，促進了深圳市公共服務體系建設。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353329</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353329</guid>
      <pubDate>Sat, 10 May 2025 07:40:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>BeeWorks：私有化即時通訊，築牢企業信息安全防線</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;在數字化時代，即時通訊已成為企業日常運營中不可或缺的工具。然而，數據安全問題一直是企業使用即時通訊服務時的重要考量因素。&lt;/span&gt;&lt;span&gt;BeeWorks 即時通訊系統以其私有化部署模式，為企業提供了一個安全、可靠、自主可控的溝通平台。&amp;nbsp;&lt;br&gt; &lt;img alt="應用管控.png" src="https://oscimg.oschina.net/oscnet//ee97a22bb8b37e198b3953823bde855d.png" width="1096" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;私有化部署，數據自主可控&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;BeeWorks 即時通訊系統的私有化部署模式是其最顯著的優勢之一。與依賴公有云的即時通訊服務不同，BeeWorks 允許企業在自己的內部服務器上進行部署，這意味着企業可以完全掌控數據的存儲和管理。數據不再存儲在第三方的服務器上，而是保存在企業自己的數據中心內，企業能夠自主決定數據的訪問權限和使用方式。這種自主可控的數據管理模式，讓企業在面對數據安全問題時更加從容，能夠有效避免因外部因素導致的數據泄露風險。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;先進加密技術，保障通信安全&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;在數據安全方面，&lt;/span&gt;&lt;span&gt;BeeWorks 採用了先進的加密技術，對通信內容進行全方位的加密處理。無論是文字消息、語音通話還是文件傳輸，所有數據在傳輸和存儲過程中都會被加密，確保信息的保密性和完整性。這種端到端的加密機制，使得即使數據在傳輸過程中被截獲，也無法被解讀，從而最大程度地保護了企業的商業機密和客戶隱私。通過這種加密技術，BeeWorks 為企業構建了一個安全可靠的即時通訊環境，讓企業內部的溝通交流無後顧之憂。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;全方位保護，構建信息安全屏障&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;BeeWorks 即時通訊系統不僅在技術上提供了強大的安全保障，還在功能設計上充分考慮了企業的實際需求。系統支持多種通訊方式，包括單聊、羣聊、語音通話、視頻會議等，滿足企業不同場景下的溝通需求。同時，BeeWorks 還提供了豐富的管理功能，企業可以根據自身的組織架構和管理要求，靈活設置用戶權限、羣組管理、消息審核等，進一步增強了系統的安全性和可控性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;無論是涉及商業機密的高層會議，還是包含客戶隱私的客戶服務交流，&lt;/span&gt;&lt;span&gt;BeeWorks 都能提供全方位的保護。企業可以放心地在平台上進行各種敏感信息的交流和文件的共享，無需擔心數據泄露的問題。通過私有化部署和先進的加密技術，BeeWorks 為企業構建起了一道堅固的信息安全屏障，讓企業在數字化轉型的道路上更加穩健地前行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;企業數字化轉型的可靠夥伴&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;&lt;span&gt;在企業數字化轉型的過程中，即時通訊系統是提升工作效率、促進團隊協作的重要工具。&lt;/span&gt;&lt;span&gt;BeeWorks 以其私有化部署模式和強大的安全性能，為企業提供了一個穩定、可靠的即時通訊平台。通過使用 BeeWorks，企業不僅能夠享受到即時通訊帶來的便利和高效，還能確保數據的安全和自主可控。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#444444; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;BeeWorks 即時通訊系統是企業在數字化時代構建信息安全防線的可靠選擇。它通過私有化部署和先進的加密技術，從根本上消除了數據泄露的可能性，為企業提供了全方位的數據保護。無論是大型企業還是中小型企業，BeeWorks 都能滿足其對即時通訊安全性和可靠性的要求，成為企業數字化轉型的堅實後盾。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353328</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353328</guid>
      <pubDate>Sat, 10 May 2025 07:40:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>尤雨溪宣佈 Rolldown-Vite：基於 Rolldown 構建的 Vite</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;尤雨溪近日宣佈了新開源項目&lt;code&gt;rolldown-vite&lt;/code&gt;，這是基於 Rolldown 構建的 Vite，功能與 Vite 保持一致，可以直接替換使用。&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;rolldown-vite&lt;/code&gt;核心特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;性能提升顯著&lt;/strong&gt;：在多個項目中測試顯示，生產構建時間縮短 3 到 16 倍，內存使用最多減少 100 倍。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;兼容現有項目&lt;/strong&gt;：&lt;code&gt;rolldown-vite&lt;/code&gt;&amp;nbsp;可替代原有 Vite 包，配置無需大改。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;基於 Oxc 構建&lt;/strong&gt;：Rolldown 使用 Oxc 工具集代替&amp;nbsp;&lt;code&gt;esbuild&lt;/code&gt;，在代碼解析、轉換和壓縮方面表現更好。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-7fe2c87e649c54d0da39a42e1133b265749.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Vite（法語意為 "快速的"，發音&lt;code&gt;/vit/&lt;/code&gt;，發音同 "veet"）是一種新型前端構建工具，能夠顯著提升前端開發體驗。它主要由兩部分組成：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;一個開發服務器，它基於&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FGuide%2FModules"&gt;原生 ES 模塊&lt;/a&gt;提供了&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fguide%2Ffeatures.html"&gt;豐富的內建功能&lt;/a&gt;，如速度快到驚人的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vite.dev%2Fguide%2Ffeatures.html%23hot-module-replacement"&gt;模塊熱替換（HMR）&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;一套構建指令，它使用&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frollupjs.org%2F"&gt;Rollup&lt;/a&gt;&amp;nbsp;打包你的代碼，並且它是預配置的，可輸出用於生產環境的高度優化過的靜態資源。&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Rolldown 是一個用 Rust 編寫的 JavaScript 打包器，旨在作為 Vite 未來使用的打包器。它提供與 Rollup 兼容的應用程序接口和插件接口，但在功能範圍上更類似於 esbuild。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;尤雨溪表示，通過使用&lt;code&gt;rolldown-vite&lt;/code&gt;對各種項目進行測試，從基本設置到大型企業應用。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvoidzero.dev%2Fposts%2Fannouncing-rolldown-vite%23real-world-impact" target="_blank"&gt;結果令人印象深刻&lt;/a&gt;——生產構建時間減少了 3 倍到 16 倍，構建過程中的內存使用量減少了高達 100 倍。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353318/rolldown-vite</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353318/rolldown-vite</guid>
      <pubDate>Sat, 10 May 2025 07:25:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>微軟發佈由 Sora 驅動的 Bing Video Creator</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;微軟 Bing&amp;nbsp;&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.bing.com%2Fsearch%2FJune-2025%2FIntroducing-Bing-Video-Creator"&gt;宣佈&lt;/a&gt;&lt;/u&gt;將在應用中引入全新的視頻生成功能，該功能由 OpenAI 的 Sora 模型讓用戶根據文字提示生成視頻。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0d148235dedc9b3da38ee834909e72c7592.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;所有用戶只要登錄微軟賬戶，就可以使用必應應用程序免費創建 10 個視頻片段，而這之後的視頻，用戶需要為每個視頻支付 100 微軟獎勵積分才能生成。這些積分可通過使用必應搜索或在微軟商店購物獲得，例如，使用必應在個人電腦上每搜索一次可獲得 5 點積分，每天的積分上限為 150 點。&lt;/p&gt; 
&lt;p&gt;OpenAI 與微軟有着長期的合作關係，但只有付費用戶才能使用 Sora 的視頻生成功能。它與微軟必應的整合標誌着它將首次免費提供。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353316/bing-video-creator</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353316/bing-video-creator</guid>
      <pubDate>Sat, 10 May 2025 07:07:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>🔥 前端開發三大神器助你快速進入</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;還記得那些熬夜調試、滿屏紅色報錯的日子嗎？MCP(Model Context Protocol) 正在讓這一切成為歷史。看看這三個神器如何把我們從"代碼搬磚工"升級為"AI 協作大師"！&lt;/p&gt; 
&lt;h3&gt;三大核心模塊深度解析&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;🧠 context7 - 你的專屬項目大腦&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自動記錄項目架構、依賴關係、命名規範&lt;/li&gt; 
 &lt;li&gt;跨會話保持上下文，AI 永遠記得你項目的"個性"&lt;/li&gt; 
 &lt;li&gt;基於 Upstash 雲存儲，毫秒級訪問項目歷史&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;⚡ sequential-thinking - 邏輯推理引擎&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;將複雜開發任務拆解為可執行步驟&lt;/li&gt; 
 &lt;li&gt;支持鏈式思考：需求分析 → 技術選型 → 代碼實現 → 測試驗證&lt;/li&gt; 
 &lt;li&gt;可視化展示推理過程，每一步都清晰可控&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔄 mcp-feedback-enhanced - 智能反饋優化器&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;實時分析代碼運行結果和用戶反饋&lt;/li&gt; 
 &lt;li&gt;自動調整代碼風格和實現策略&lt;/li&gt; 
 &lt;li&gt;構建個人化的最佳實踐知識庫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💻 寫代碼場景實戰演示&lt;/h2&gt; 
&lt;h3&gt;場景一：從零搭建 React 項目&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;以前的你&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 各種配置文件手動創建
npx create-react-app my-app
# 反覆查文檔配置 webpack、eslint、prettier...
# 花費 2-3 小時才能開始寫業務代碼

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;現在的你&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"幫我搭建一個帶 TypeScript 的 React 項目，集成 Tailwind 和 Zustand"

🧠 context7: 記住你偏好的技術棧和項目結構
⚡ sequential-thinking:
   1. 分析需求 → 2. 選擇最佳實踐 → 3. 生成配置文件 → 4. 創建基礎組件
🔄 mcp-feedback-enhanced: 根據你的使用習慣調整代碼風格

結果：5 分鐘完整項目腳手架，代碼風格完全符合你的習慣！

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;場景二：複雜組件開發&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;以前的你&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 Stack Overflow 翻找解決方案&lt;/li&gt; 
 &lt;li&gt;複製粘貼代碼後各種調試&lt;/li&gt; 
 &lt;li&gt;花一天時間實現一個表格組件&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;現在的你&lt;/strong&gt;：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"基於我們項目的設計系統，創建一個支持排序、篩選、分頁的數據表格"

🧠 context7: 自動獲取項目的 UI 組件庫、主題配置、已有組件
⚡ sequential-thinking:
   1. 分析設計系統 → 2. 複用已有組件 → 3. 實現新功能 → 4. 添加類型支持
🔄 mcp-feedback-enhanced: 基於項目中類似組件的實現模式優化代碼

結果：30 分鐘完成，代碼風格統一，性能優化到位！

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;場景四：大型電商項目重構 - 三模塊完美協作演示&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;背景&lt;/strong&gt;：你接手一個有着 200+組件的老舊電商項目，需要從 Vue2+Webpack 遷移到 Vue3+Vite，同時重構狀態管理和優化性能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;第一階段：項目診斷與規劃&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"分析這個電商項目，制定 Vue2 到 Vue3 的完整遷移方案"

🧠 context7 啓動：
- 掃描項目結構，發現 208 個.vue 文件、34 個 Vuex store 模塊
- 記錄項目依賴：vue-router@3.x、vuex@3.x、element-ui@2.x
- 識別關鍵業務模塊：用戶系統、商品管理、訂單流程、支付集成
- 建立項目知識圖譜，標記高風險重構點

⚡ sequential-thinking 接管：
Step 1: 依賴兼容性分析 → 發現 23 個不兼容依賴
Step 2: 業務模塊優先級排序 → 核心支付流程優先
Step 3: 遷移策略制定 → 漸進式遷移，保證系統穩定
Step 4: 風險評估 → 識別可能的 breaking changes
Step 5: 時間規劃 → 3 周遷移計劃，每週一個里程碑

🔄 mcp-feedback-enhanced 預警：
- 基於歷史類似項目數據，預測遷移過程中的常見問題
- 建議優先處理 element-ui 到 element-plus 的組件遷移
- 推薦使用@vue/compat 作為過渡方案

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;第二階段：核心模塊遷移&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"開始遷移用戶登錄和商品列表模塊"

🧠 context7 提供支持：
- 調取用戶模塊的完整調用鏈：Login.vue → UserStore → AuthAPI
- 識別商品列表的性能瓶頸：無虛擬滾動，一次加載 1000+商品
- 記住你偏好的新架構：Composition API + Pinia + TypeScript

⚡ sequential-thinking 執行遷移：
Step 1: 創建新的用戶 store（Pinia）
   └─ 保持原有 API 兼容，確保其他模塊不受影響
Step 2: Login.vue 重寫為 Composition API
   └─ 重構表單驗證邏輯，使用 VueUse 工具庫
Step 3: 商品列表性能優化
   └─ 引入 virtual-list，實現 10000+商品秒級渲染
Step 4: TypeScript 類型定義
   └─ 為用戶和商品數據創建完整類型體系

🔄 mcp-feedback-enhanced 實時優化：
- 監測遷移後的性能指標：頁面加載時間從 3.2s 降至 0.8s
- 發現新的 TypeScript 類型錯誤，自動修復
- 根據團隊成員的 code review 反饋，調整代碼風格

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;第三階段：狀態管理重構&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"重構整個狀態管理架構，從 Vuex 遷移到 Pinia"

🧠 context7 深度分析：
- 繪製完整的數據流圖：34 個 store 模塊的依賴關係
- 識別冗餘狀態：發現 12 個重複的用戶信息存儲
- 記錄異步操作模式：支付流程的複雜狀態機

⚡ sequential-thinking 系統重構：
Step 1: 核心 store 優先遷移
   └─ user、cart、order 三大核心 store
Step 2: 狀態合併與優化
   └─ 消除重複狀態，建立統一的數據源
Step 3: 異步操作標準化
   └─ 統一錯誤處理、loading 狀態、緩存策略
Step 4: 跨組件通信優化
   └─ 使用 provide/inject 替代事件總線

🔄 mcp-feedback-enhanced 質量保證：
- 檢測到訂單狀態更新存在 race condition
- 自動生成狀態管理的單元測試用例
- 根據性能監控數據，優化狀態持久化策略

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;第四階段：性能優化與部署&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"優化構建配置，準備生產環境部署"

🧠 context7 歷史回顧：
- 對比遷移前後的 bundle size：從 2.3MB 降至 1.1MB
- 記錄優化過程中的所有配置變更
- 保存性能基準數據，用於後續對比

⚡ sequential-thinking 最終優化：
Step 1: 代碼分割優化 → 路由級別的懶加載
Step 2: 資源壓縮 → Gzip + Brotli 雙重壓縮
Step 3: CDN 配置 → 靜態資源分離部署
Step 4: 緩存策略 → 強緩存 + 協商緩存

🔄 mcp-feedback-enhanced 持續監控：
- 部署後性能監控：首頁加載時間穩定在 800ms 以內
- 用戶反饋收集：頁面響應速度提升 73%
- 建立性能告警機制，異常時自動通知

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;協作成果&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;開發效率&lt;/strong&gt;：原本需要 2 個月的重構工作，3 周完成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代碼質量&lt;/strong&gt;：TypeScript 覆蓋率 100%，單元測試覆蓋率 85%&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;性能提升&lt;/strong&gt;：頁面加載速度提升 75%，bundle size 減少 52%&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;團隊協作&lt;/strong&gt;：標準化的代碼風格，詳細的重構文檔&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;三模塊協作的精髓&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;context7 像項目的"記憶大師"，記住每一個細節&lt;/li&gt; 
 &lt;li&gt;sequential-thinking 是"策略規劃師"，系統性解決複雜問題&lt;/li&gt; 
 &lt;li&gt;mcp-feedback-enhanced 是"質量監督員"，確保每一步都是最優解&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 開發效率革命性提升&lt;/h2&gt; 
&lt;h3&gt;量化對比：&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;學習成本&lt;/strong&gt;：從查文檔 2 小時 → AI 對話 5 分鐘&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代碼質量&lt;/strong&gt;：從個人經驗 → 最佳實踐沉澱&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;調試時間&lt;/strong&gt;：從盲目試錯 → 精準定位&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;知識傳承&lt;/strong&gt;：從零散筆記 → 結構化知識庫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;真實感受：&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;// 以前寫代碼的心情
const mood = useState('焦慮')
const energy = useState('疲憊')
const confidence = useState('不確定')

// 現在寫代碼的心情
const mood = useState('輕鬆')
const energy = useState('專注')
const confidence = useState('胸有成竹')

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💡 未來編程新範式&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;從"寫代碼"到"聊需求"&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自然語言描述需求，AI 生成最佳實現&lt;/li&gt; 
 &lt;li&gt;專注業務邏輯，告別重複性工作&lt;/li&gt; 
 &lt;li&gt;代碼質量自動優化，性能問題提前預防&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;個人化開發助手&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;學習你的編碼習慣和偏好&lt;/li&gt; 
 &lt;li&gt;記住項目的歷史演進和決策背景&lt;/li&gt; 
 &lt;li&gt;提供定製化的技術建議和解決方案&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 立即體驗 MCP&lt;/h2&gt; 
&lt;p&gt;如果你還在手動配置開發環境、複製粘貼 Stack Overflow 代碼、為調試 bug 熬夜，那你真的 out 了！&lt;/p&gt; 
&lt;p&gt;MCP 不是在替代程序員，而是在解放程序員 - 讓我們從重複性勞動中解脫，專注於真正有創造性的工作。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;這就是 2025 年前端開發的標配！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;#MCP #前端開發 #AI 編程 #開發效率 #React #TypeScript #Vue3&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;已經體驗 MCP 的前端 er 們，在評論區分享你們的"爽點"時刻！還沒體驗的趕緊上車，別讓 AI 時代的紅利從指縫溜走～&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353270</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353270</guid>
      <pubDate>Sat, 10 May 2025 03:21:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>Wine 10.9 開發版發佈，Windows 應用兼容層</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Wine 10.9 開發版&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.winehq.org%2Fnews%2F2025060101" target="_blank"&gt;已發佈&lt;/a&gt;，共計修復了 34 個 BUG，涵蓋打印、遊戲、應用崩潰等多個領域，顯著提升用戶體驗。&lt;/p&gt; 
&lt;p&gt;主要變化如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;綁定的 vkd3d 升級到 1.16 版本&lt;/li&gt; 
 &lt;li&gt;初步支持在 WIDL 中生成 Windows 運行時元數據&lt;/li&gt; 
 &lt;li&gt;支持使用 Clang 進行基於編譯器的異常處理。&lt;/li&gt; 
 &lt;li&gt;EGL 庫支持所有圖形驅動程序。&lt;/li&gt; 
 &lt;li&gt;修復多項錯誤&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下載地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.winehq.org%2Fwine%2Fwine%2F-%2Freleases%2Fwine-10.9" target="_blank"&gt;https://gitlab.winehq.org/wine/wine/-/releases/wine-10.9&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353267/wine-10-9</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353267/wine-10-9</guid>
      <pubDate>Sat, 10 May 2025 03:02:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Dante Cloud Spring Boot 3.5 Spring Cloud 2025 實戰落地</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h2&gt;[一] 項目簡介&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 國內首個支持阻塞式和響應式服務並行的微服務平台。是採用&lt;strong&gt;領域驅動模型 (DDD)&lt;strong&gt;設計思想，以「&lt;strong&gt;高質量代碼、低安全漏洞&lt;/strong&gt;」為核心，基於 Spring 生態全域開源技術，高度&lt;/strong&gt;模塊化和組件化設計&lt;/strong&gt;，支持&lt;strong&gt;智能電視、IoT 等物聯網設備&lt;/strong&gt;認證，滿足&lt;strong&gt;國家三級等保要求&lt;/strong&gt;，支持&lt;strong&gt;接口國密數字信封加解密&lt;/strong&gt;等一系列安全體系的多租戶微服務解決方案。可以「&lt;strong&gt;一套代碼實現微服務和單體兩種架構&lt;/strong&gt;」的企業級應用系統。&lt;/p&gt; 
&lt;h2&gt;[二] 項目理念&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 一直秉承着「簡潔、高效、包容、務實」的理念，使用微服務領域及周邊相關的各類新興技術或主流技術進行建設，不斷地深耕細作、去粗取精、用心打造。目標是構建一款&lt;code&gt;代碼質量高、維護投入低、安全防護強&lt;/code&gt;的，可以幫助用戶快速跨越架構技術選型、技術研究探索階段，降低傳統項目中因安全漏洞、技術負債、低質代碼等潛在隱患所產生的高維護投入，期望像項目名字寓意一樣，在行業變革的時期承上啓下，助力企業信息化建設和變革的產品。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Dante Cloud&lt;/strong&gt; 核心關注點是：&lt;strong&gt;「高質量的系統代碼」&lt;/strong&gt;、&lt;strong&gt;「合理的系統架構」&lt;/strong&gt;、&lt;strong&gt;「低耦合的模塊劃分」&lt;/strong&gt;、&lt;strong&gt;「高安全性系統實現」&lt;/strong&gt;、&lt;strong&gt;「靈活的功能擴展能力」&lt;/strong&gt;，&lt;strong&gt;「優質的微服務實現」&lt;/strong&gt;，而不是追求 &lt;strong&gt;業務功能&lt;/strong&gt; 堆疊的 &lt;strong&gt;豐富&lt;/strong&gt; 性。&lt;/p&gt; 
&lt;h2&gt;[三] 架構設計&lt;/h2&gt; 
&lt;p&gt;Dante Cloud 除了提供一套完整的微服務架構以外，還支持以單體架構運行。這裏的微服務架構和單體架構並不是分離的兩套代碼，也不是分離的兩個項目。而是完全融合的一整套代碼，使用時可以根據需要選擇是以微服務模式或者單體模式運行。這是 Dante Cloud 微服務最大的特色之一：&lt;strong&gt;「一套代碼、兩種架構」&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;基於 &lt;code&gt;Spring Boot&lt;/code&gt; 和 &lt;code&gt;Spring Cloud&lt;/code&gt; 的微服務架構，已經成為企業級應用建設的主流方案。但不可否認的是，搭建一套微服務架構所需的基礎設施越來越多，也越來越複雜。僅僅是在開發電腦上搭建一套運行開發調試環境，其複雜度和所需的資源也不容小覷。而很多應用特別是小型應用，在早期開發中或者用戶量不大的前期，很多情況下一套單體的，前後端分離的後台就足以滿足。完全沒有必要上一整套微服務，額外增加複雜度。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Dante Cloud &lt;strong&gt;「一套代碼、兩種架構」&lt;/strong&gt; 的特點，可以幫助企業在項目早期以單體架構快速建設項目、方便開發人員在本地進行開發以及新技術研究。在項目後期隨着用戶規模增大以及併發需求提升時，可以快速無縫遷移至微服務架構。&lt;/p&gt; 
&lt;h2&gt;[四] 特性介紹&lt;/h2&gt; 
&lt;p&gt;Dante Cloud 演示系統已發佈，目前包括在線版、單體離線版 (Docker) 和微服務鏡像版, 歡迎體驗使用！&lt;/p&gt; 
&lt;p&gt;體驗地址：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.vip%2Fget-started%2Fpreview%2Fonline.html" target="_blank"&gt;https://www.herodotus.vip/get-started/preview/online.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;有任何意見和建議，可以&lt;a href="https://gitee.com/dromara/dante-cloud/issues"&gt;【發 ISSUE】&lt;/a&gt;留言。&lt;/p&gt; 
&lt;h2&gt;[五] Spring 生態新特性總結&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;特性領域&lt;/th&gt; 
   &lt;th&gt;Spring Boot 3.5&lt;/th&gt; 
   &lt;th&gt;Spring Cloud 2025.0.0&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java 支持&lt;/td&gt; 
   &lt;td&gt;Java 17+（優化 Java 21）&lt;/td&gt; 
   &lt;td&gt;依賴 Spring Boot 3.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Web/HTTP&lt;/td&gt; 
   &lt;td&gt;HTTP/3、WebSocket 優化&lt;/td&gt; 
   &lt;td&gt;API 網關智能路由&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;安全&lt;/td&gt; 
   &lt;td&gt;Spring Security 6.x 增強&lt;/td&gt; 
   &lt;td&gt;動態配置加密&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;數據訪問&lt;/td&gt; 
   &lt;td&gt;Hibernate 6.x、JDBC 優化&lt;/td&gt; 
   &lt;td&gt;Config 熱更新&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;監控&lt;/td&gt; 
   &lt;td&gt;Micrometer 1.12.x、Actuator 增強&lt;/td&gt; 
   &lt;td&gt;Sleuth/OpenTelemetry 優化&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;雲原生&lt;/td&gt; 
   &lt;td&gt;Kubernetes/Docker 優化&lt;/td&gt; 
   &lt;td&gt;服務發現、熔斷增強&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;開發體驗&lt;/td&gt; 
   &lt;td&gt;構建工具優化、Kotlin 支持&lt;/td&gt; 
   &lt;td&gt;動態配置、智能路由&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;[六] 更新內容&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;主要更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升級] Spring Boot 版本升級至 3.5.0&lt;/li&gt; 
   &lt;li&gt;[升級] Spring Authorization Server 版本升級至 1.5.0&lt;/li&gt; 
   &lt;li&gt;[升級] Spring Cloud 版本升級至 2025.0.0&lt;/li&gt; 
   &lt;li&gt;[升級] Spring Cloud Tencent 版本升級至 2.0.1.0-2023.0.3&lt;/li&gt; 
   &lt;li&gt;[升級] Spring Boot Admin 版本升級至 3.5.0&lt;/li&gt; 
   &lt;li&gt;[升級] Nacos 版本升級至 3.0.1。自封裝支持 Postgresql 的 Nacos Docker 鏡像已經上傳至 Docker Hub 和 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FQuay.IO" target="_blank"&gt;Quay.IO&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;其它更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[新增] 增加設置設備屬性和調用設備服務參數校驗控制&lt;/li&gt; 
   &lt;li&gt;[新增] 新增設置設備屬性和調用設備服務接口&lt;/li&gt; 
   &lt;li&gt;[新增] 新增組合文件管理器定義，以支持不同用途文件的本地及對象存儲組合管理。同時解決原有 FileTemplate 和 FileTransformer 定義邏輯不夠清晰問題。&lt;/li&gt; 
   &lt;li&gt;[新增] 新增 JsonSchema 默認組合文件管理器，並在 core-autoconfigure 模塊中默認注入，以保證代碼正確運行。&lt;/li&gt; 
   &lt;li&gt;[新增] 新增平台級 JsonSchema 組合文件存儲管理器定義。&lt;/li&gt; 
   &lt;li&gt;[修復] 修復因使用 Import 方式依賴 SCT 導致 Springdoc 版本被幹擾導致無法升級問題。&lt;/li&gt; 
   &lt;li&gt;[修復] 修復證書工廠測試用例執行錯誤問題&lt;/li&gt; 
   &lt;li&gt;[優化] hikari 和數據庫連接相關配置，進一步提升數據庫連接和使用效能&lt;/li&gt; 
   &lt;li&gt;[優化] 優化 MqttTopic 定義，支持更多 Mqtt 主題應用場景&lt;/li&gt; 
   &lt;li&gt;[優化] Spring Boot Test Starter 不再採用全局配置，修改為各模塊按需引&lt;/li&gt; 
   &lt;li&gt;[優化] 調整對 JustAuth 依賴所在位置及相關代碼，提升相關代碼內聚性&lt;/li&gt; 
   &lt;li&gt;[重構] 重構核心基礎模塊代碼，調整部分代碼包路徑和結構，減少各模塊間的依賴和耦合。&lt;/li&gt; 
   &lt;li&gt;[重構] 重構 OAuth2 Client 代碼適配最新版本 Spring Security OAuth2&lt;/li&gt; 
   &lt;li&gt;[重構] 重構 WebPathUtils 工具類，適配最新版 Spring Security&lt;/li&gt; 
   &lt;li&gt;[重構] 重構 Spring Authorization Server 認證相關代碼，支持 DPoP&lt;/li&gt; 
   &lt;li&gt;[重構] 重構 Spring Authorization Server 認證相關代碼，支持 PAR&lt;/li&gt; 
   &lt;li&gt;[重構] 重構 FileTemplate 和 FileTransformer 定義，減少不必要的方法定義和交互。&lt;/li&gt; 
   &lt;li&gt;[升級] minio docker 鏡像版本升級至 RELEASE.2025-05-24T17-08-30Z&lt;/li&gt; 
   &lt;li&gt;[升級] grafana docker 鏡像版本升級至 12.0.1&lt;/li&gt; 
   &lt;li&gt;[升級] loki docker 鏡像版本升級至 3.5.1&lt;/li&gt; 
   &lt;li&gt;[升級] promtail docker 鏡像版本升級至 3.5.1&lt;/li&gt; 
   &lt;li&gt;[升級] emqx docker 鏡像版本升級至 5.9.0&lt;/li&gt; 
   &lt;li&gt;[升級] influxdb docker 鏡像版本升級至 2.7.12&lt;/li&gt; 
   &lt;li&gt;[升級] clickhouse docker 鏡像版本升級至 25.5.1&lt;/li&gt; 
   &lt;li&gt;[升級] tdengine docker 鏡像版本升級至 3.3.6.6&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;依賴更新&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;[升級] alipay-sdk-java 版本升級至 4.40.237.ALL&lt;/li&gt; 
   &lt;li&gt;[升級] com.baidu.aip 版本升級至 4.16.20&lt;/li&gt; 
   &lt;li&gt;[升級] grpc 版本升級至 1.73.0&lt;/li&gt; 
   &lt;li&gt;[升級] json-schema-validator 版本升級至 1.5.7&lt;/li&gt; 
   &lt;li&gt;[升級] protobuf 版本升級至 3.25.8&lt;/li&gt; 
   &lt;li&gt;[升級] redisson 版本升級至 3.48.0&lt;/li&gt; 
   &lt;li&gt;[升級] software.amazon.awssdk 版本升級至 2.31.53&lt;/li&gt; 
   &lt;li&gt;[升級] software.amazon.awssdk.crt 版本升級至 0.38.3&lt;/li&gt; 
   &lt;li&gt;[升級] sweetalert2 webjars 版本升級至 11.22.0&lt;/li&gt; 
   &lt;li&gt;[升級] vue webjars 版本升級至 3.5.16&lt;/li&gt; 
   &lt;li&gt;[升級] weixin java 版本升級至 4.7.5-20250529.111829&lt;/li&gt; 
   &lt;li&gt;[升級] okio 版本升級至 3.12.0&lt;/li&gt; 
   &lt;li&gt;[升級] influxdb-client 版本升級至 7.3.0&lt;/li&gt; 
   &lt;li&gt;[升級] json 版本升級至 20250517&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;[七] 文檔説明&lt;/h2&gt; 
&lt;p&gt;原文檔站點 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.cn" target="_blank"&gt;https://www.herodotus.cn&lt;/a&gt; 因服務器到期，已經停止服務。&lt;/p&gt; 
&lt;p&gt;需要查閲 Dante Cloud 項目文檔的朋友，可以查看【企業版】文檔 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.herodotus.vip" target="_blank"&gt;https://www.herodotus.vip&lt;/a&gt;。（該文檔除了功能上的差異外，部署方法和使用邏輯等與開源版本完全一致，而且內容更精細易懂，不會影響開源版的使用）。&lt;/p&gt; 
&lt;p&gt;或者可以訪問本項目【社區版】文檔 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdante-cloud.dromara.org" target="_blank"&gt;https://dante-cloud.dromara.org&lt;/a&gt;，該站點初次訪問可能會有點慢，甚至出現部分地區有時打不開的情況。&lt;/p&gt; 
&lt;p&gt;敬請悉知！&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;如果本項目對你有所幫助，歡迎 Star 一波來支持我們！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitee&lt;/strong&gt;：&lt;a href="https://gitee.com/dromara/dante-cloud"&gt;https://gitee.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://github.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gitcode&lt;/strong&gt;：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.com%2Fdromara%2Fdante-cloud" target="_blank"&gt;https://gitcode.com/dromara/dante-cloud&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353266</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353266</guid>
      <pubDate>Sat, 10 May 2025 02:51:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>AI 造物社區作品分享——賽博掛墜</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2006</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2006</guid>
      <pubDate>Sat, 10 May 2025 02:47:00 GMT</pubDate>
    </item>
    <item>
      <title>OpenAI 用 Rust 重寫 AI 編程工具 Codex CLI</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;OpenAI 工程師 Fouad Matin 在 GitHub &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Fcodex%2Fdiscussions%2F1174" target="_blank"&gt;表示&lt;/a&gt;，他們計劃使用 Rust 語言重寫其實驗性 AI 編碼工具 Codex CLI。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0603/102511_pMq0_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Codex CLI 是一個輕量級的 AI 編程助手，採用 TypeScript 和 Node.js 編寫，可以直接在用戶的終端命令行運行，旨在充分發揮 o3、o4-mini 等模型強大的推理能力，連接本地代碼環境，甚至支持處理截圖或草圖進行多模態編程。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;OpenAI 工程師表示，儘管現有版本開發迅速，但 Rust 的優勢更為突出。新版本將實現零依賴安裝，降低用戶門檻；通過引入沙箱技術（如 macOS 的 sandbox-exec 和 Linux 的 Landlock），增強隔離安全性；同時，Rust 的無垃圾回收機制將進一步優化內存性能。&lt;/p&gt; 
&lt;p&gt;此外，Rust 還支持 Model Context Protocol，使 Codex CLI 能更高效地作為客戶端和服務器運行。TypeScript 版本將持續維護，直至 Rust 版本功能齊平。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀：&lt;a href="https://www.oschina.net/news/345034/openai-codex-cli" target="_blank"&gt;OpenAI 發佈開源 AI 編程工具 Codex CLI&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353256/openai-rewrites-ai-coding-tool-in-rust</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353256/openai-rewrites-ai-coding-tool-in-rust</guid>
      <pubDate>Sat, 10 May 2025 02:28:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Windows 記事本支持 Markdown</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;微軟通過博客&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2025%2F05%2F30%2Ftext-formatting-in-notepad-begin-rolling-out-to-windows-insiders%2F" target="_blank"&gt;宣佈&lt;/a&gt;，目前已向 Windows 11 的 Canary/Dev 版本的用戶推送最新版本記事本（version 11.2504.50.0）。&lt;/p&gt; 
&lt;p&gt;據介紹，最新版的記事本正式加入了 Markdown 輸入語法，支持大小標題、粗體、斜體、超鏈接、列表等功能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-289b67e2ce64fd489659c1ffb1e9d844a9f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;微軟表示，記事本的 Markdown 支持開關，也可以一鍵清除所有 Markdown 文本的格式。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果你在任何時候想回到純文本狀態，你可以從格式化工具欄或編輯菜單中清除所有格式。&lt;/p&gt; 
 &lt;p&gt;你可以在視圖菜單中或在窗口底部狀態欄中選擇的切換按鈕之間切換格式化 Markdown 和 Markdown 語法視圖。&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353253/windows-notepad-markdown</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353253/windows-notepad-markdown</guid>
      <pubDate>Sat, 10 May 2025 02:14:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>國產數據遷移同步工具 CloudCanal v4.7.2.0 發佈，支持可視化打寬表</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;CloudCanal&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;免費社區版&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;是&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;ClouGence&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;公司推出的一款&lt;strong&gt;全自研&lt;/strong&gt;、&lt;strong&gt;可視化&lt;/strong&gt;、&lt;strong&gt;自動化&lt;/strong&gt;數據遷移同步工具，具備&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;結構遷移&lt;/strong&gt;、&lt;strong&gt;數據遷移&lt;/strong&gt;、&lt;strong&gt;數據同步&lt;/strong&gt;、&lt;strong&gt;數據校驗&lt;/strong&gt;、&lt;strong&gt;數據訂正&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;等功能，支持&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;30+ 款&lt;/strong&gt;流行關係型數據庫、實時數倉、消息中間件、緩存數據庫和搜索引擎之間數據互通，其中包含國產數據庫&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;OceanBase&lt;/strong&gt;、&lt;strong&gt;PolarDB&lt;/strong&gt;、&lt;strong&gt;TiDB&lt;/strong&gt;、&lt;strong&gt;StarRocks&lt;/strong&gt;、&lt;strong&gt;Doris&lt;/strong&gt;、&lt;strong&gt;RocketMQ&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;結合開源項目&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/clougence/cloudcanal-data-process"&gt;CloudCanalProcess&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;，可方便實現如下功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;wide-table&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 打寬表數據處理插件，主要包括事實表和單維表組合處理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-transform&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 數據通用轉換插件，比如做操作變幻、額外加字段、清洗回填數據&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-gather&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 數據匯聚插件，將分庫分表、垂直拆分、異地數據進行實時匯聚&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;data-compare&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 數據對比插件，根據源端數據變化進行業務對賬&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;business-alert&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;: 業務告警插件，根據數據變化趨勢做出相應告警&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;CloudCanal&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;產品功能對標阿里雲 DTS、亞馬遜 DMS、StreamSets、AirByte，助力開發、DBA 或運維同學快速構建在線數據應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1582" src="https://oscimg.oschina.net/oscnet/up-4787b0331b802b4e95ed1ccd108c23cea9c.png" width="1850" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;Release-Note&lt;/strong&gt;&lt;/h1&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;新鏈路&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;開放 Dameng -&amp;gt; Dameng 結構遷移、全量遷移、增量同步、數據校驗、數據訂正、DDL 同步（加列/減列）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;開放 TiDB -&amp;gt; SelectDB 結構遷移、全量遷移、增量同步、數據校驗、數據訂正、DDL 同步（加列/減列）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;開放 PostgreSQL &amp;amp; Oracle &amp;amp; SQL Server -&amp;gt; Iceberg 結構遷移、全量遷移、增量同步&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;開放 SshFile &amp;amp; S3File &amp;amp; OssFile -&amp;gt; StarRocks &amp;amp; MongoDB Atlas &amp;amp; Elasticsearch 向量構建&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;開放 StarRocks &amp;amp; MongoDB Atlas &amp;amp; Elasticsearch -&amp;gt; RagApi 鏈路提供 RAG 服務&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 MySQL -&amp;gt; MySQL/StarRocks/Doris/SelectDB 可視化打寬表的能力&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Dameng &amp;amp; SQL Server 源端全量定時遷移&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Redis &amp;lt;-&amp;gt; Redis Decr、DecrBy、LPop、RPop、LTrim、ZIncrBy、Publish、ZRemRangeByRank、ZRemRangeByLex 指令&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 SQL Server -&amp;gt; Oracle 自定義虛擬列能力&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Kafka securityProtocol（安全協議）PLAINT_TEXT 認證方式&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Redis -&amp;gt; Redis 數據校驗通過正則表達式過濾數據&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 MySQL 對端不對 DATETIME 類型數據做時區轉換（新增參數：convertDateTimeTimeZone）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，具備向量能力的數據庫 -&amp;gt; RagApi 修改訂閲（修改對話模型）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Anthropic、AWS Bedrock 類型數據源，為數據向量化和 RagApi 服務&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，文件到 PostgreSQL 根據嵌入模型不同創建不同的向量（維度 2000 以下，4000 以下）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 MCP 工具過濾參數 (filterToolNames) 和調用失敗策略參數（failIfOneServerFails）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，大模型請求時 timeout 參數，可以動態調整請求超時時間，默認 300 秒&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，文件源端全量修改訂閲&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持，導入任務允許額外創建已完成狀態的全量遷移，以便用戶重跑任務&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;支持 Kubernetes Helm 安裝方式&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;優化&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;優化 Redis -&amp;gt; Redis 同步期間 KeyDiff 上報頻率以及分片集羣差值累加問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;優化 Redis -&amp;gt; Redis 數據校驗批量掃描邏輯&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;優化，重跑任務可能出現狀態機狀態不對的問題，延遲 1 秒執行掛載、激活等操作的異步任務&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;優化，額外添加訂正任務可能出現狀態機狀態不對的問題，延遲 1 秒執行創建的異步任務&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;span&gt;問題修復&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 MySQL -&amp;gt; ClickHouse 創建任務數據處理頁面彈窗報錯的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 MySQL 源端 fix String length (20030999) exceeds the maximum length (20000000) 問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 TiDB -&amp;gt; StarRocks DDL 兼容問題（加列/減列/修改列）&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 TiDB -&amp;gt; TiDB 結構遷移 PK/UK/INDEX 未指定索引列前綴導致的索引長度溢出問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 TDengine 源端 Timestamp 主鍵時區轉換後數據校驗不準確問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 PostgreSQL 創建任務時 sslMode 配置未生效問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 SQL Server -&amp;gt; StarRocks 結構遷移 decimal 類型缺失精度的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復，獲取 StarRocks 表唯一鍵時返回結果為空的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 subAccountAuthType 參數為 PASSWORD 時，設置通用參數 subAccountPwdVerifyExpr 保存報錯的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 MongoDB -&amp;gt; MongoDB Array 類型空數組增量同步到對端數據值為 NULL 的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 MySQL 目標端結構遷移，字段註釋含有 '' 時報錯的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 PostgreSQL 配置心跳未生效的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復，創建文件到向量數據庫相似任務，dimension 參數未複製的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復，向量數據庫 -&amp;gt; RagApi 結構遷移顯示同步表為 0 的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復，文件 -&amp;gt; 向量數據庫設置統一對端表名後結構遷移日誌冗餘的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 Ollama 和 ZhipuAI 展示思維不準確的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 Redis 集羣源端數據校驗期間集羣數據遷移出現的異常問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 Redis -&amp;gt; Redis 同步追加數據校驗訂正任務異常問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復 MySQL -&amp;gt; Iceberg DDL 同步表名映射失效問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復，查看關聯任務展示異常的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;修復，參數修改中（新增數據源、修改數據源參數等），撤銷修改的時候會把其他開關類型的參數都撤銷的問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;免費下載和使用&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;快速上手：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.clougence.com%2Fcc-doc%2Fquick%2Fquick_start" target="_blank"&gt;https://www.clougence.com/cc-doc/quick/quick_star&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353250/rn-cloudcanal-4-7-2-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353250/rn-cloudcanal-4-7-2-0</guid>
      <pubDate>Sat, 10 May 2025 01:54:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>夜鶯 V8.Beta11 發版，支持 CK 告警、事件 Pipeline 等</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; text-align:left"&gt;這個版本來得遲了一些，主要是新功能加的多，下面簡單介紹一下新功能，下下週也計劃做一次直播講解。&lt;/p&gt; 
&lt;h2&gt;支持 ClickHouse 告警&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;夜鶯最重要的定位是告警引擎，所以會持續增加各類數據源的告警支持，ClickHouse 之後還有 Doris、MySQL、Postgres 等。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;開源版主要是支持告警，不會支持看圖可視化，實在是做不過來，答疑也答疑不過來。&lt;/p&gt; 
&lt;h2&gt;引入事件 Pipeline&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;告警引擎根據告警規則產生告警事件之後，會有需求對事件做各種二次處理，比如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;有些事件要做 relabel&lt;/li&gt; 
 &lt;li&gt;有些事件要做標籤豐富&lt;/li&gt; 
 &lt;li&gt;有些事件要 drop 掉&lt;/li&gt; 
 &lt;li&gt;有些事件要和 AI 聯動生成分析建議&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; text-align:left"&gt;於是，我們抽象了事件 Pipeline 的功能，並且在開源版裏支持了常用的處理器。&lt;/p&gt; 
&lt;h2&gt;新版菜單&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;重新整理了菜單，很多菜單收斂到了 Tab 裏，有些甚至收斂到側拉板裏，整體功能排布更清晰，更容易找到相關入口。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;另外推薦一下菜單快捷跳轉功能，&lt;code&gt;Ctrl + K&lt;/code&gt;(Mac 裏是&amp;nbsp;&lt;code&gt;Command + K&lt;/code&gt;) 很好用，很極客。&lt;/p&gt; 
&lt;h2&gt;新版活躍告警&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;改進活躍告警的 UI，整合了聚合卡片視圖和列表視圖，平時可以把這個頁面投到 On-call 大屏上。&lt;/p&gt; 
&lt;h2&gt;其他一些變動&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;告警規則支持跨業務組克隆&lt;/li&gt; 
 &lt;li&gt;修復臨時分享圖表白屏問題&lt;/li&gt; 
 &lt;li&gt;夜鶯自身增加對 Redis 操作的指標&lt;/li&gt; 
 &lt;li&gt;優化了指標轉發性能&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; text-align:left"&gt;更多改動請參考 github release 的 changelog。&lt;/p&gt; 
&lt;h2&gt;升級須知&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;大家可以從夜鶯的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale%2Freleases" target="_blank"&gt;github releases&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;頁面下載到最新的發佈包。&lt;/p&gt; 
&lt;p style="color:#333333; text-align:left"&gt;v6/v7 版本都可以平滑升級：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;建議先備份老版本的二進制、配置、integrations 目錄等，留好後路然後就可以放心大膽升級了&lt;/li&gt; 
 &lt;li&gt;如果夜鶯所用的 DB 賬號有建表、改表權限，會自動更新表結構，否則就要參考代碼倉庫裏&amp;nbsp;docker/migratesql&amp;nbsp;手工改表結構了&lt;/li&gt; 
 &lt;li&gt;integrations 目錄可以直接替換成新版&lt;/li&gt; 
 &lt;li&gt;配置文件 etc/config.toml 建議認真 diff 一下&lt;/li&gt; 
 &lt;li&gt;容器啓動的話，直接拉取 latest 鏡像重啓即可&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;夜鶯產品特性介紹的 PPT&lt;/h2&gt; 
&lt;p style="color:#333333; text-align:left"&gt;有些人可能對夜鶯的產品還不太瞭解，特准備了一份 PPT，請參考：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc9xudyniiq.feishu.cn%2Fslides%2FO6xJsUzZclzeUrdMb9DcynVtnSf" target="_blank"&gt;PPT&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353235/nightingale-release-v8-beta11</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353235/nightingale-release-v8-beta11</guid>
      <pubDate>Sat, 10 May 2025 01:08:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>Skyeye 雲智能製造辦公系統 v3.16.6 發佈</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;Skyeye 雲智能製造，採用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Springboot (微服務) + Layui + UNI-APP + Ant Design Vue&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#6a737d"&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的低代碼平台。包含 30 多個應用模塊、50 多種電子流程，CRM、PM、ERP、MES、ADM、EHR、筆記、知識庫、項目、門店、商城、財務、多班次考勤、薪資、招聘、雲售後、論壇、公告、問卷、報表設計、工作流、日程、雲盤等全面管理，實現智能製造行業一體化管理。實現管理流程 「客戶關係 -&amp;gt; 線上 / 線下報價 -&amp;gt; 銷售報價 -&amp;gt; 銷售合同 -&amp;gt; 生產計劃 -&amp;gt; 商品設計 -&amp;gt; 採購 -&amp;gt; 加工製造 -&amp;gt; 入庫 -&amp;gt; 發貨 -&amp;gt; 售後服務」 的高效運作，同時實現企業員工的管理以及內部運作的流程操作，完善了員工從 「入職 -&amp;gt; 培訓 -&amp;gt; 轉正 -&amp;gt; 辦公 -&amp;gt; 離職」 等多項功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;a href="https://gitee.com/dromara/skyeye/blob/company_server/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98.md"&gt;常見問題&lt;/a&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Farticles.zsxq.com%2Fid_xi3xhacte72g.html" target="_blank"&gt;開發文檔&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fspace.bilibili.com%2F87396008%2Fchannel%2Fseries" target="_blank"&gt;視頻教程&lt;/a&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/strong&gt;&lt;strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.qq.com%2Fsheet%2FDYUtPdWhTbVBITlpL%3Ftab%3D000001" target="_blank"&gt;功能點&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;Skyeye&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;雲【源代碼】針對 {星球用戶} 開源。拿到源碼後可進行學習、畢設、企業等使用。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 雲智能製造 v3.16.6 發佈 ，發佈內容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;Skyeye 雲已加入 Dromara 社區&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;業務對象適配 Saas 進展 80%&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VUE 版開發&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;雲盤管理完成 100%&lt;/li&gt; 
   &lt;li&gt;報表設計進展 100%&lt;/li&gt; 
   &lt;li&gt;新增商品上架商城的組件&lt;/li&gt; 
   &lt;li&gt;MES 新增班次管理&lt;/li&gt; 
   &lt;li&gt;新增客戶應收事項&lt;/li&gt; 
   &lt;li&gt;供應商管理新增應付事項、付款、發票抬頭、發票&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;span&gt;源代碼只對星球用戶開放&lt;/span&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;解決若干問題。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Skyeye 具備&lt;/span&gt;&lt;strong&gt;&lt;span&gt;低代碼、快捷開發、可視化設計、微服務&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;等特點，方便客戶二次開發，極大的提高了開發效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;erp：&amp;nbsp;&lt;/span&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;OA：&amp;nbsp;&lt;/span&gt;&lt;span&gt;https://gitee.com/dromara/skyeye&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;報表：&lt;/span&gt;&lt;span&gt;https://gitee.com/doc_wei01/skyeye-report&lt;/span&gt;&lt;span&gt;&amp;nbsp; 有問題可以聯繫作者，詳情請看開發計劃。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;PC 端效果圖&lt;/strong&gt;&lt;/p&gt; 
&lt;table cellspacing="0" style="--darkreader-inline-bgcolor:#181a1b; --darkreader-inline-border-bottom:currentcolor; --darkreader-inline-border-left:currentcolor; --darkreader-inline-border-right:currentcolor; --darkreader-inline-border-top:currentcolor; --darkreader-inline-color:#bdb7af; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:medium none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th style="text-align:center"&gt;效果圖&lt;/th&gt; 
   &lt;th style="text-align:center"&gt;效果圖&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-35a653b1c873ab9501f7187b0901a27cc64.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a8f7c658a21594b2787c667fc1214c673b1.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-50138b38c37d750b93db5b37493f71bf4ca.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-00fd5dbd8a44f8d815ecf77d93d37062616.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-6499d74ddcfe9a99997d8c797aae7b7f0b0.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-e97af4a2caccb199b76d906ecbb339a7575.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-a58e6cb3e687de2a468cb095516951f077c.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-9eb76f53a99358fdf1ce532dc711baec41a.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ce7c58e9fe940d58b2cb9cec441176b3481.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="919" src="https://oscimg.oschina.net/oscnet/up-ca685ab278a861067f5850e12470e155e59.png" width="1920" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-270d853e879bc14cf6632d67e0168c656c0.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-0bebb255d3c79c13a69bfa0fbb7fcd80836.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-90cde5042c0effeea9e85761ff8dc7283d5.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1837" src="https://oscimg.oschina.net/oscnet/up-47ccf76ab671effc6142727caf066d67071.png" width="3839" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;移動端效果圖&lt;/strong&gt;&lt;/p&gt; 
&lt;table border="1" cellpadding="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif; font-size:14px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:776px; word-break:keep-all; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果圖&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果圖&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果圖&lt;/strong&gt;&lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;strong&gt;效果圖&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-6850576a0a01188e6b2a9d1ecce58ed7455.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-770416ac656e0b41097dc917b2b404e62f2.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-754034f48dd04fd9ee1e6618db0e37f6ecb.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="1637" src="https://oscimg.oschina.net/oscnet/up-d7707ebc67ddf3842adbb54fdc0c062a2a1.png" width="755" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353234</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353234</guid>
      <pubDate>Sat, 10 May 2025 01:03:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>袋鼠數據庫工具 7.98.1 版已上線（Redis）</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;袋鼠數據庫工具，是一款 AI 驅動的熱門數據庫系統客戶端 (MariaDB / MySQL / Oracle / PostgreSQL / Redis / SQLite / SQL Server / ...) ，支持建表、查詢、模型、同步、導入導出等功能，支持 Windows / Mac / Linux 等操作系統，致力於打造一款好用、好玩、開發友好的開發者工具。&lt;/p&gt; 
&lt;h2&gt;重點特性介紹&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;這個版本實現 Redis 的支持，實現了數據庫對象視圖、鍵視圖、函數、模塊、用戶、客戶端、頻道對象的支持；支持多鍵視圖，支持鍵值即時修改保存，支持頻道創建、訂閲、暫停、消息合併等；設計過程中始終聚焦核心體驗，超越與創新同在；&lt;/p&gt; 
&lt;h2&gt;新特性或修復的缺陷列表&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Redis: 數據庫對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 鍵對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 客戶端對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 聚簇對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 頻道對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 用戶對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 分片支持&lt;/li&gt; 
 &lt;li&gt;Redis: 模塊/函數/命令對象支持&lt;/li&gt; 
 &lt;li&gt;Redis: 控制枱支持&lt;/li&gt; 
 &lt;li&gt;Redis: 查詢支持&lt;/li&gt; 
 &lt;li&gt;重構錯誤消息樣式&lt;/li&gt; 
 &lt;li&gt;開放標題欄背景設置&lt;/li&gt; 
 &lt;li&gt;工作空間: 網格支持行統計和選擇信息&lt;/li&gt; 
 &lt;li&gt;更新中文語言支持 (zh-CN/zh-SG/zh-Hans/zh-Hant)&lt;/li&gt; 
 &lt;li&gt;MySQL: 修復數據庫/架構對象加載問題&lt;/li&gt; 
 &lt;li&gt;修復: 應用工作空間創建問題&lt;/li&gt; 
 &lt;li&gt;修復: 資源瀏覽視圖公共菜單確實問題&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下載與安裝&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv7.98.1.603.html" target="_blank"&gt;袋鼠數據庫管理工具 7.98.1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;新版本功能快照&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv7.98.1.603.html" target="_blank"&gt;&lt;img alt="Redis 鍵編輯截圖" src="https://oscimg.oschina.net/oscnet/up-bb04d911533d016ad6de240dd0b97a8907c.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv7.98.1.603.html" target="_blank"&gt;&lt;img alt="Redis 鍵對象瀏覽截圖" src="https://oscimg.oschina.net/oscnet/up-9c0adf1c2d8b1362bee523f1cd07fdd6f04.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.datatable.online%2Fzh%2Fdownload%2Fv7.98.1.603.html" target="_blank"&gt;&lt;img alt="Redis 命令瀏覽截圖" src="https://oscimg.oschina.net/oscnet/up-4edbd0b56b08cdaa3afda34416dd305aae0.png" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353226/kangaroo-7-98-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353226/kangaroo-7-98-1</guid>
      <pubDate>Fri, 09 May 2025 23:12:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
  </channel>
</rss>
