<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 繁體中文（台灣）</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 10 Jun 2025 07:45:47 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>蘋果發佈 Containerization：在 macOS 上運行 Linux 容器的 Swift 框架</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                            &lt;p&gt;Containerization 是 Swift 編寫的容器運行時，用於在 macOS 上運行 Linux 容器。使用了 Apple 芯片的 Virtualization.framework。&lt;/p&gt;

&lt;p&gt;Containerization 提供的 API 用於：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;管理 OCI 鏡像&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;與遠程註冊中心交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;創建並填充 ext4 文件系統&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;與 Netlink 套接字家族交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;創建針對快速啓動時間優化的 Linux 內核&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成輕量級虛擬機&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管理虛擬機的運行時環境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生成並與容器化進程交互&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 Rosetta 2 在 Apple 芯片上執行 x86_64 進程&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;Containerization 框架賦予開發者直接在 Mac 上創建、下載或運行容器鏡像的能力，其基於針對 Apple 芯片優化的開源框架構建，能夠對容器映像進行安全隔離。&lt;/p&gt;

&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f12698847fd251962a8dabcb596a127209c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/containerization</link>
      <guid isPermaLink="false">https://www.oschina.net/p/containerization</guid>
      <pubDate>Tue, 10 Jun 2025 07:18:12 GMT</pubDate>
    </item>
    <item>
      <title>阿里通義實驗室開源檢索增強預訓練框架 MaskSearch</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里通義實驗室&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FjabNf48U-HoN9W648dmX2Q" target="_blank"&gt;發佈&lt;/a&gt;並開源了 MaskSearch 預訓練框架，聲稱能讓 AI 學會「主動搜索 + 多步推理」，從而更準確、更智能地回答複雜問題。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="385" src="https://oscimg.oschina.net/oscnet/up-66d5bfa06d72ffa4b1078a43c0bdfd45eba.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根據介紹，MaskSearch 的核心在於它提出的一種全新預訓練任務——&lt;strong&gt;檢索增強掩碼預測（RAMP）&lt;/strong&gt;&amp;nbsp;，在這個任務中，模型需要填補句子中的掩碼部分，並且必須通過主動搜索和多步推理來完成任務。&lt;/p&gt; 
&lt;p&gt;&lt;img height="403" src="https://oscimg.oschina.net/oscnet/up-fc9d9a6a5fdacfd87e065f2589f2309ab08.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#4a4a4a"&gt;&lt;span&gt;例如，給定一個句子：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;Andrew Barto received his&amp;nbsp;&lt;span&gt;[mask]&lt;/span&gt;&amp;nbsp;with distinction in&amp;nbsp;&lt;span&gt;[mask]&lt;/span&gt;&amp;nbsp;&lt;span style="color:#ca7d37"&gt;from&lt;/span&gt;&amp;nbsp;the University of Michigan in&amp;nbsp;&lt;span style="color:#0e9ce5"&gt;1970&lt;/span&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#4a4a4a"&gt;&lt;span&gt;AI 需要通過搜索引擎查找相關信息，逐步推理出被遮蓋的部分。模型首先分析上下文，判斷需要查找的信息是「學位類型」和「專業方向」。隨後，它調用搜索引擎進行查詢，得到關於 Andrew Barto 的相關信息，並從中提取出關鍵片段：「Andrew Barto, B.S., math, University of Michigan, 1970」。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#4a4a4a"&gt;&lt;span&gt;接着，AI 進行推理整合，最終填補掩碼輸出完整句子：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style="color:#dd1144"&gt;Andrew&lt;/span&gt;&amp;nbsp;&lt;span style="color:#dd1144"&gt;Barto&lt;/span&gt;&amp;nbsp;received his B.&lt;span&gt;S&lt;/span&gt;.&amp;nbsp;&lt;span style="color:#ca7d37"&gt;with&lt;/span&gt;&amp;nbsp;distinction&amp;nbsp;&lt;span style="color:#ca7d37"&gt;in&lt;/span&gt;&amp;nbsp;math&amp;nbsp;&lt;span style="color:#ca7d37"&gt;from&lt;/span&gt;&amp;nbsp;the&amp;nbsp;&lt;span style="color:#dd1144"&gt;University&lt;/span&gt;&amp;nbsp;&lt;span style="color:#ca7d37"&gt;of&lt;/span&gt;&amp;nbsp;&lt;span style="color:#dd1144"&gt;Michigan&lt;/span&gt;&amp;nbsp;&lt;span style="color:#ca7d37"&gt;in&lt;/span&gt;&amp;nbsp;&lt;span style="color:#0e9ce5"&gt;1970&lt;/span&gt;。&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;實驗表明，即使是小模型（如 Qwen2.5-1.5B），在經過 MaskSearch 預訓練後，也能在多個開放域問答任務中取得顯著提升。例如，在 Bamboogle 數據集中性能提升超過 11.78% ，真正做到了「小模型也能挑戰大模型」。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="354" src="https://oscimg.oschina.net/oscnet/up-b3ddb53ca899c492045ff28febdbd54f73f.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354614</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354614</guid>
      <pubDate>Tue, 10 Jun 2025 07:04:12 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>蘋果設備端和服務器端基礎語言模型的更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文翻譯自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmachinelearning.apple.com%2Fresearch%2Fapple-foundation-models-2025-updates" target="_blank"&gt;https://machinelearning.apple.com/research/apple-foundation-models-2025-updates&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ab638eada802c4871bb91a726b10d31eabc.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;藉助 Apple Intelligence，我們將在人們每天使用的應用和體驗中集成強大的生成式人工智能，同時保護用戶的隱私。在 2025 年全球開發者大會（WWDC）上，我們推出了一代全新的語言基礎模型，這些模型專門設計用於增強我們最新軟件版本中的 Apple Intelligence 特性。我們還推出了新的 Foundation Models 框架，該框架讓應用開發者可以直接訪問 Apple Intelligence 核心的設備端基礎語言模型。&lt;/p&gt; 
&lt;p&gt;我們構建了這些生成模型，以支持我們在各平台中集成的廣泛智能功能。這些模型提升了工具使用和推理能力，能夠理解圖像和文本輸入，運行更快且更高效，並且支持 15 種語言。我們的最新基礎模型經過優化，可在 Apple 芯片上高效運行，包括一個緊湊型的、約 30 億參數的模型，以及一個基於服務器的混合專家模型，其架構專為&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsecurity.apple.com%2Fblog%2Fprivate-cloud-compute%2F" target="_blank"&gt;私有云計算&lt;/a&gt;設計。這兩個基礎模型是蘋果為支持我們的用戶而創建的更大生成模型家族的一部分。&lt;/p&gt; 
&lt;p&gt;在此概述中，我們詳細介紹了我們設計的模型架構、用於訓練的數據、所採用的訓練配方、用於優化推理的技術，以及與同類模型相比的評估結果。在整個過程中，我們強調瞭如何在設備和私有云計算上實現速度和效率的提升，同時擴展了能力並提高了質量。最後，在我們持續致力於維護核心價值觀的承諾下，我們展示了負責任的人工智能原則如何貫穿整個模型開發過程。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d77e148d22b633cb086c702429e723f9622.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;圖 1：蘋果基礎模型的建模概述&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;模型架構&lt;/h2&gt; 
&lt;p&gt;我們開發了設備端和服務器模型，以滿足廣泛的表現和部署需求。設備端模型針對效率進行了優化，並針對 Apple 芯片進行了定製，使推理具備低延遲且資源使用極少的特性，而服務器模型則設計用於提供高準確性和可擴展性，以處理更復雜的任務。共同而言，它們構成了一個互補的解決方案集，能夠適應多種應用場景。&lt;/p&gt; 
&lt;p&gt;我們通過開發新的模型架構，提高了兩種模型的效率。對於端側模型，我們將完整模型分成兩個塊，深度比例為 5:3。塊 2 的所有鍵值（KV）緩存都直接與塊 1 最終層生成的 KV 緩存共享，從而將 KV 緩存的內存使用量減少了 37.5%，顯著提高了首次令牌生成時間。我們還為服務器模型開發了新的架構，引入了並行軌道混合專家（PT-MoE）設計（見&lt;a href="https://www.oschina.net/news/354610/apple-foundation-models-2025-updates#figure2"&gt;圖 2&lt;/a&gt;）。該模型由多個較小的 Transformer 組成，稱為軌道，這些軌道獨立處理令牌，僅在每個軌道塊的輸入和輸出邊界進行同步。每個軌道塊還具有自己的 MoE 層。結合軌道獨立性帶來的軌道級並行性，這種設計顯著減少了同步開銷，使模型能夠高效擴展，同時在不犧牲質量的情況下保持低延遲。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-0c199164ae8858ba38229a44aa3a9b9c5e2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;圖 2：PT-MoE 架構示意圖。每個軌道由多個軌道塊組成，每個軌道塊包含固定數量的 transformer/MoE 層。假設總共有 L 層和軌道塊深度 D，那麼我們從 2L（張量並行）的同步開銷減少到 L/D（軌道並行）。例如，如果 D = 4，PT 可將同步開銷減少 87.5%。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;為支持更長的上下文輸入，我們設計了一種交錯注意力架構，結合滑動窗口局部注意力層、旋轉位置嵌入（RoPE）和無位置嵌入（NoPE）的全局注意力層。這種設置提高了長度泛化能力，減少了 KV 緩存大小，並在長上下文推理中保持模型質量。&lt;/p&gt; 
&lt;p&gt;為了啓用視覺能力，我們開發了一個在大規模圖像數據上訓練的視覺編碼器。它由一個用於提取豐富特徵的視覺主幹網絡和一個將特徵與 LLM 的標記表示對齊的視覺-語言適配器組成。我們使用標準的 Vision Transformer（ViT-g）作為服務器模型，參數量為 10 億；而用於設備端部署的更高效 ViTDet-L 主幹網絡參數量為 3 億。為了進一步有效捕捉並整合局部細節和更廣泛的全局上下文，我們在標準的 ViTDet 中添加了一個新穎的註冊窗口（RW）機制，使得全局上下文和局部細節都能被有效捕捉。&lt;/p&gt; 
&lt;h2&gt;訓練數據&lt;/h2&gt; 
&lt;p&gt;我們相信通過使用多樣且高質量的數據來訓練我們的模型。這包括我們從出版商處獲得許可的數據、從公開可用或開源數據集精心整理的數據，以及由我們的網絡爬蟲 Applebot 爬取的公開信息。我們在訓練基礎模型時不會使用用戶的私人個人數據或用戶交互數據。此外，我們採取措施應用過濾器，以刪除某些類別的人口識別信息，並排除粗俗和不安全的內容。&lt;/p&gt; 
&lt;p&gt;此外，我們繼續遵循倫理網絡爬蟲的最佳實踐，包括遵循廣泛採用的 robots.txt 協議，允許網頁發佈者選擇性地退出其內容被用於訓練 Apple 的生成基礎模型。網頁發佈者可以對 Applebot 可以查看的頁面以及這些頁面如何被使用進行精細控制，同時這些頁面仍會出現在 Siri 和 Spotlight 的搜索結果中。&lt;/p&gt; 
&lt;h3&gt;文本數據&lt;/h3&gt; 
&lt;p&gt;儘管如上所述保留了某些排除項，我們繼續從由 Applebot 抓取的網絡內容中獲取我們模型預訓練數據的重要部分，這些內容涵蓋了數百億頁的網頁，涉及廣泛的語言、地區和主題。鑑於網絡內容的雜亂性，Applebot 採用了先進的抓取策略，以優先獲取高質量和多樣化的網頁內容。特別是，我們專注於捕獲高保真度的 HTML 頁面，這些頁面豐富了數據集，不僅包含文本，還包含結構化的元數據，以對媒體內容與周圍文本內容進行對齊。為了提高相關性和質量，系統利用了多種信號，包括基於領域級別的語言識別、主題分佈分析以及 URL 路徑模式的啓發式方法。&lt;/p&gt; 
&lt;p&gt;我們特別注重準確地從文檔和現代網站中提取內容。我們通過無頭渲染增強了文檔集合，實現了全頁加載、動態內容交互和 JavaScript 執行，這對於從網頁架構中提取數據至關重要。對於依賴動態內容和用戶交互的網站，我們啓用了完整的頁面加載和交互模擬，以可靠地從複雜頁面中提取有意義的信息。我們還將在提取流程中整合大型語言模型（LLMs），尤其是在領域特定文檔中，因為它們通常比傳統基於規則的方法表現更佳。&lt;/p&gt; 
&lt;p&gt;除了先進的爬蟲策略，我們還顯著擴大了訓練數據的規模和多樣性，並納入了大量高質量的通用領域、數學和編程內容。我們還擴展了多語言支持，以支持即將在今年下半年推出的新的語言。&lt;/p&gt; 
&lt;p&gt;我們認為高質量的過濾在整體模型性能中起着關鍵作用。我們通過減少對過於激進的啓發式規則的依賴，並引入更多基於模型的過濾技術，優化了我們的數據過濾流程。通過引入基於模型的信號，我們能夠保留更多具有信息量的內容，從而獲得更大規模且質量更高的預訓練數據集。&lt;/p&gt; 
&lt;h3&gt;圖像數據&lt;/h3&gt; 
&lt;p&gt;為了增強我們的模型，併為 Apple Intelligence 功能提供視覺理解能力，我們將在預訓練流程中引入圖像數據，利用高質量的授權數據以及公開可用的圖像數據。&lt;/p&gt; 
&lt;p&gt;使用我們的網頁爬蟲策略，我們獲取了帶有對應 alt 文本的圖像對。除了過濾以確保符合法律要求外，我們還過濾了數據質量，包括圖像與文本的一致性。去重後，這一過程產生了超過 100 億對高質量的圖像-文本對。此外，我們通過保留從爬取文檔中原始觀察到的文本上下文來創建圖像-文本交錯數據。在過濾質量和法律合規性後，這產生了 1.75 億個交錯的圖像-文本文檔，包含超過 5.5 億張圖像。由於網絡爬取的圖像-文本對通常較短，且往往無法全面描述圖像的視覺細節，我們使用合成圖像描述數據來提供更豐富的描述。我們開發了一個內部的圖像描述模型，能夠提供不同細節層次的高質量描述，從關鍵詞到段落級的全面描述，生成了超過 50 億個圖像-描述對，這些數據被用於預訓練的各個階段。&lt;/p&gt; 
&lt;p&gt;為提高模型在文本豐富的視覺理解方面的能力，我們整理了多種文本豐富的數據集，包括通過授權數據、網絡爬蟲和內部合成方式獲取的 PDF、文檔、手稿、信息圖、表格和圖表。我們隨後從圖像數據中提取文本，並從圖像數據中生成轉錄文本和問答對。&lt;/p&gt; 
&lt;p&gt;我們整理了多種圖像-文本數據類型：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;高質量標題數據和基於語義的標題&lt;/strong&gt;：我們使用對比語言-圖像預訓練（CLIP）模型和光學字符識別（OCR）工具作為過濾器，從上述合成圖像標題數據中獲取高質量圖像。然後，我們使用內部的定位模型對標題中的名詞進行定位，並在名詞後附加座標，形成基於語義的標題。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;表格、圖表和圖表&lt;/strong&gt;：對於圖表和圖表，我們首先讓內部的 LLM 生成合成數據字段和相應的值，然後讓 LLM 編寫代碼，根據之前合成的數據樣本生成各種類型的圖表和圖表。最後，我們將圖表、圖表和數據樣本輸入教師模型，以生成用於模型訓練的問答對。對於表格，我們從公開網站中解析表格並將其轉換為 markdown，然後使用教師模型生成的圖像-markdown 配對以及圖像-合成問答對用於模型訓練。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;預訓練&lt;/h2&gt; 
&lt;p&gt;我們的預訓練配方已演進，以擴展 Apple Intelligence 能力，支持更多語言以及更廣泛的功能，包括需要圖像理解的功能。&lt;/p&gt; 
&lt;p&gt;預訓練在多個階段進行，其中第一個且計算需求最高的階段僅針對文本模態。我們使用蒸餾損失訓練設備端模型，但沒有采用大型密集模型作為教師模型並從頭開始預訓練，而是利用少量最高質量的文本數據，對一個預訓練的約 3B 模型中的 64 個專家、每兩層混合專家（MoE）進行稀疏升維處理。這將教師模型的訓練成本降低了 90%。然而，我們從頭開始在 14T 文本標記上訓練了稀疏服務器模型。&lt;/p&gt; 
&lt;p&gt;為了更好地支持新語言，我們在這一階段將文本分詞器的詞彙量從 10 萬擴展到 15 萬，僅用 25% 更多的標記，就實現了對許多額外語言的表示質量。為了實現視覺感知，我們使用 CLIP 風格的對比損失訓練了設備端和服務器端的視覺編碼器，對 60 億張圖像-文本對進行對齊，從而得到了具有良好視覺基礎的編碼器。&lt;/p&gt; 
&lt;p&gt;在預訓練的第二階段，我們使用一個小的解碼器，將視覺編碼器與一個視覺-語言適應模塊聯合訓練，利用高質量文本數據、交錯的圖像-文本數據和領域特定的圖像-文本數據，對圖像特徵與模型表示空間進行對齊。然後，我們利用這些視覺編碼器和預訓練模型，提升代碼、數學、多語言、長上下文理解能力，並通過多個連續的預訓練階段融入圖像理解。&lt;/p&gt; 
&lt;p&gt;在持續預訓練階段，我們調整了數據集的混合比例，同時結合經過驗證正確的合成數據，以提升代碼、數學和多語言能力。隨後，我們通過多模態適應引入了視覺理解，而不會損害模型的文本能力。在此階段，我們從頭開始訓練了一個視覺-語言適應模塊，以連接視覺編碼器到兩個模型。在最終的持續預訓練階段，我們訓練模型以處理顯著更長的上下文長度，使用最多 65K 個標記的序列，這些序列來自自然發生的長格式數據、專門針對特定能力設計的合成長格式數據，以及之前預訓練輪次中的混合數據。&lt;/p&gt; 
&lt;h2&gt;後訓練&lt;/h2&gt; 
&lt;p&gt;與我們在預訓練中的方法類似，我們演進我們的後訓練流程，以支持語言擴展和視覺理解。&lt;/p&gt; 
&lt;p&gt;我們通過結合人工編寫的數據示例和合成數據對監督微調（SFT）進行了擴展，重點提升核心視覺能力。這包括常識知識、推理、文本豐富的圖像理解、文本與視覺定位，以及多圖像推理。我們進一步通過檢索額外圖像併合成其對應的提示和響應，來增強視覺 SFT 數據的多樣性。&lt;/p&gt; 
&lt;p&gt;我們利用這一 SFT 階段進一步啓用工具使用和多語言支持。我們設計了一種過程監督標註方法，其中標註人員向工具使用代理平台發起查詢，返回平台的完整軌跡，包括工具調用細節、相應的執行響應以及最終響應。這使標註人員能夠檢查模型的預測並糾正錯誤，從而生成一個樹狀結構的數據集用於教學。為了擴展到更多語言，我們默認將輸出語言與輸入語言匹配，但我們也通過創建一個包含多種語言的多樣化數據集，啓用了提示和響應使用不同語言的選項。&lt;/p&gt; 
&lt;p&gt;我們在 SFT 階段之後，對設備端模型和服務器端模型均應用了基於人類反饋的強化學習（RLHF）。同時，我們提出了一種基於模型多輪生成獎勵方差的新型提示選擇算法，用於為 RLHF 訓練定製提示數據集。我們的評估結果顯示，RLHF 在人類和自動基準測試中均帶來了顯著提升。此外，儘管我們在 SFT 和 RLHF 階段均引入了多語言數據，但我們發現 RLHF 在 SFT 基礎上提供了顯著提升，導致人類評估中的勝敗比達到 16:9。&lt;/p&gt; 
&lt;p&gt;為繼續提升模型在多語言性能上的質量，我們使用了指令遵循評估（IFEval）和 Alpaca Evals，並以 GPT-4o 作為評判者。我們收集了每種支持語言中由母語者撰寫的 1000 個提示。通過仔細的提示微調，我們實現了自動評估與人類評估之間的良好對齊，從而加快了迭代速度。&lt;/p&gt; 
&lt;h2&gt;優化&lt;/h2&gt; 
&lt;p&gt;在過去一年中，我們擴展了 Apple Intelligence 的功能，並在提高推理效率、減少設備端和服務器端模型的功耗的同時，提升了模型的質量。&lt;/p&gt; 
&lt;p&gt;我們使用量化感知訓練（QAT）將設備端模型壓縮到每權重 2 位（bpw），採用了一種新穎的可學習權重裁剪和權重初始化組合。服務器端模型則使用了一種基於塊的紋理壓縮方法，稱為自適應可擴展紋理壓縮（ASTC）。雖然 ASTC 最初是為圖形管線開發的，但我們發現它在模型壓縮方面也非常有效。ASTC 解壓過程在 Apple GPU 中實現了專用硬件組件，使權重解碼無需引入額外的計算開銷。&lt;/p&gt; 
&lt;p&gt;對於兩種模型，我們對嵌入表進行了 4 位量化——對於設備端模型，使用 QAT 與基礎權重聯合訓練；而對於服務器端模型，則使用後訓練量化。鍵值緩存（KV cache）每個權重量化為 8 位。然後，我們使用額外的數據訓練低秩適配器，以恢復由於這些壓縮步驟而損失的質量。通過這些技術，我們觀察到一些輕微的質量退化，甚至有微小的提升，例如，對於設備端模型，在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2210.03057" target="_blank"&gt;MGSM&lt;/a&gt;上出現了約 4.6% 的退化，在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2009.03300" target="_blank"&gt;MMLU&lt;/a&gt;上提升了 1.5%；而對於服務器端模型，在 MGSM 上退化了 2.7%，在 MMLU 上退化了 2.3%。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/144031_zIWy_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;表 1. On-Device 和 Server 基礎模型的壓縮和比特率。&lt;/p&gt; 
&lt;h2&gt;基礎模型框架&lt;/h2&gt; 
&lt;p&gt;新的基礎模型框架為開發者提供了訪問權限，使他們能夠使用搭載在設備上的約 30 億參數語言模型，開始創建自己可靠、適用於生產的生成式 AI 功能。Apple Intelligence 核心的約 30 億參數語言基礎模型在多種文本任務上表現出色，例如摘要、實體提取、文本理解、細化、簡短對話、生成創意內容等。它並非設計成一個用於一般世界知識的聊天機器人。我們鼓勵應用開發者使用此框架來構建有助於他們應用的特色功能。&lt;/p&gt; 
&lt;p&gt;我們框架的亮點是一種直觀的 Swift 方法，用於受限解碼，稱為引導生成。通過引導生成，開發者可以直接使用豐富的 Swift 數據結構，只需在 Swift 結構體或枚舉上添加一個&lt;code&gt;@Generable&lt;/code&gt;宏註解。這之所以可行，是因為與模型、操作系統和 Swift 編程語言的垂直集成。它始於 Swift 編譯器宏，這些宏將開發者定義的類型轉換為標準化的輸出格式規範。在提示模型時，框架會將響應格式注入提示中，而模型能夠理解並遵守該格式，因為其在專門設計的引導生成規範數據集上進行了後訓練。接下來，一個操作系統守護進程採用高度優化且互補的受限解碼和推測解碼實現，以提高推理速度，同時確保模型的輸出符合預期格式。基於這些保證，框架能夠可靠地從模型輸出創建 Swift 類型的實例。這通過讓應用開發者編寫更簡單的代碼，而這些代碼又由 Swift 類型系統支持，從而簡化了開發者的體驗。&lt;/p&gt; 
&lt;p&gt;工具調用為開發者提供了定製 ~3B 模型能力的權力，通過創建提供模型特定信息源或服務的工具來實現。&lt;/p&gt; 
&lt;p&gt;框架對工具調用的處理方式基於引導生成。開發者提供簡單的 Tool Swift 協議實現，框架會自動且最優地處理並行和串行工具調用可能帶來的複雜調用圖。模型在工具使用數據上的微調提高了該框架功能的可靠性。&lt;/p&gt; 
&lt;p&gt;我們精心設計了該框架，以幫助應用開發者充分利用設備上的模型。對於需要教會約 3B 模型完全新技能的專用應用場景，我們還提供了一個 Python 工具包，用於訓練排名 32 的適配器。由該工具包生成的適配器與基礎模型框架完全兼容。然而，適配器必須隨着基礎模型的新版本重新訓練，因此在徹底探索基礎模型能力之後，才應在高級應用場景中考慮部署一個適配器。&lt;/p&gt; 
&lt;h2&gt;評估&lt;/h2&gt; 
&lt;p&gt;我們使用人類評估者對我們的設備端和服務器端模型進行了離線質量評估。我們評估了標準的基本語言和推理能力，包括分析推理、頭腦風暴、聊天、分類、封閉式問題和回答、編碼、創意寫作、提取、數學推理、開放式問題和回答、改寫、摘要以及工具使用。&lt;/p&gt; 
&lt;p&gt;隨着我們模型支持的語言和區域的擴展，我們也擴展了評估任務集，使其具有區域特定性。人類評分者評估模型生成的響應是否聽起來符合該區域用戶的母語。例如，當一個模型回應來自英國用戶的一個英語體育問題時，預期該模型知道「足球」比「足球」更符合當地習慣用語。評分者可以針對模型響應中的多種問題進行標記，包括不當地域化的術語或不自然的短語。區域特定的評估使用了與英語美國區域類似的分類，只是排除了像數學和編程這樣的技術領域，這些領域大多本質上是地域無關的。&lt;/p&gt; 
&lt;p&gt;我們發現，我們的設備端模型在所有語言中均表現良好，優於稍大的 Qwen-2.5-3B 模型，並在英語中與較大的 Qwen-3-4B 和 Gemma-3-4B 模型具有競爭力。我們的服務器端模型在與 Llama-4-Scout 模型的對比中表現良好，Llama-4-Scout 的總大小和活躍參數數量與我們的服務器模型相當，但落後於較大的模型，如 Qwen-3-235B 和專有版本的 GPT-4o。&lt;/p&gt; 
&lt;h3&gt;文本響應的人類評估&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/144120_VNv0_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;圖 3：在將 Apple 的基準模型與公開可訪問模型進行並列評估時，文本響應中被首選的響應比例。結果按 3 個地區組呈現，這是我們觀察 Apple Intelligence 國際化方式的一種視角。例如，英語（非美國）包括英國英語、加拿大英語等其他語言。PFIGSCJK 指的是葡萄牙語、法語、意大利語、德語、西班牙語、簡體中文、日語和韓語。&lt;/p&gt; 
&lt;p&gt;隨着我們的模型支持擴展到圖像模態，使用了圖像-問題對的評估集來評估圖像理解能力。該評估集包含與文本評估集相似的類別，以及圖像特定的類別，如信息圖，這些類別挑戰模型對文本豐富的圖像進行推理。我們比較了設備端模型與類似規模的視覺模型，即 InternVL-2.5-4B、Qwen-2.5-VL-3B-Instruct 和 Gemma-3-4B，並將我們的服務器模型與 Llama-4-Scout、Qwen-2.5-VL-32B 和 GPT–4o 進行比較。我們發現，蘋果的設備端模型在與較大的 InternVL 和 Qwen 相比時表現良好，在與 Gemma 競爭時也表現出競爭力，而我們的服務器模型在推理 FLOPS 僅為一半的情況下，優於 Qwen-2.5-VL，但落後於 Llama-4-Scout 和 GPT–4o。&lt;/p&gt; 
&lt;h3&gt;圖像響應的人類評估&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0610/144211_J6Df_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;圖 4：在將蘋果基礎模型與可比模型進行圖像響應並列評估時，首選響應的比例。&lt;/p&gt; 
&lt;p&gt;除了評估基礎模型的通用能力外，還對適配器進行了特徵特定的評估。例如，考慮基於適配器的視覺智能功能，該功能可以從傳單的圖片中創建日曆事件。收集了一組覆蓋廣泛環境設置、相機角度和其他挑戰性場景的傳單作為評估集。該集用於評估模型準確從傳單中提取信息（包括日期和地點）以正確創建日曆事件的能力。&lt;/p&gt; 
&lt;h2&gt;負責任的人工智能&lt;/h2&gt; 
&lt;p&gt;Apple Intelligence 是在每一步都基於我們的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finvestor.apple.com%2Four_values%2F" target="_blank"&gt;核心價值觀&lt;/a&gt; 設計，並建立在行業領先的隱私保護基礎之上。此外，我們還制定了我們的負責任的人工智能原則，以指導我們如何開發人工智能工具，以及支撐這些工具的模型。這些原則體現在使 Apple Intelligence 成為可能的架構的每一個階段，並連接了功能和工具與專用模型：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;通過智能工具賦能用戶：&lt;/strong&gt; 我們識別 AI 可以負責任地用於滿足特定用戶需求的領域，並創建相應的工具。我們尊重用戶如何選擇使用這些工具來實現他們的目標。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代表我們的用戶：&lt;/strong&gt; 我們打造深度個性化的產品，目標是真實地代表全球的用戶。我們持續努力避免在我們的 AI 工具和模型中延續刻板印象和系統性偏見。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;精心設計：&lt;/strong&gt; 在我們的整個流程中，包括設計、模型訓練、特徵開發和質量評估等階段，我們都會採取預防措施，以識別我們的 AI 工具可能被誤用或導致潛在危害的方式。我們將通過用戶反饋持續監控並主動改進我們的 AI 工具。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;保護隱私：&lt;/strong&gt; 我們通過強大的設備端處理和突破性的基礎設施，如私有云計算，來保護用戶的隱私。我們在訓練基礎模型時，不會使用用戶的私人個人數據或用戶交互數據。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;這些原則指導我們在產品開發週期中的各項工作，影響我們的產品設計、政策、評估和緩解措施。作為蘋果對負責任 AI 的承諾的一部分，我們繼續識別並緩解使用基礎模型固有的風險，例如幻覺和對提示注入的易受性。我們的安全分類法幫助我們識別需要謹慎處理的敏感內容。&lt;/p&gt; 
&lt;p&gt;為評估 Apple Intelligence 的安全性，我們在部署之前評估了基礎模型以及每個使用這些模型的功能。對於基礎模型，我們結合了內部和外部的人類評估與自動評分，並將我們的模型與外部模型進行比較以進行基準測試。我們構建了針對性的安全性評估數據集，以評估基礎模型在摘要、問答和頭腦風暴等任務上的表現，特別是在處理高風險和敏感內容時的表現。對於各個功能，我們設計了專注於用戶面對風險的數據集，以專門識別不想要或未預期的結果，以及測試質量問題在應用於敏感的特定應用程序內容時可能產生的影響。例如，我們在設計新的基礎模型框架和支持資源時特別謹慎，以幫助提高應用程序中生成式 AI 的安全性。該框架通過內置的安全防護措施來確保基本的安全性，以減輕有害的模型輸入和輸出。為了幫助應用程序設計師和開發者將適合他們應用程序的 AI 安全性納入考慮，我們創建了教育資料，例如新的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fdesign%2Fhuman-interface-guidelines%2Fgenerative-ai" target="_blank"&gt;生成式 AI 人機界面指南&lt;/a&gt; 以指導負責任的 AI 原則。&lt;/p&gt; 
&lt;p&gt;隨着我們向新語言擴展功能，我們也在不同地區和文化中擴展了安全表示，並持續改進以適應我們用戶廣泛的文化和語言多樣性。除了遵守當地的法律和法規外，我們還結合了高質量的外部代表性數據源，與內部和外部的法律、語言和文化專家合作，並審查了以往產品決策的先例，以確保我們的方法在語境中是尊重且相關的。為了設計多語言使用的緩解措施，我們從基礎模型層面的多語言預訓練對齊開始，然後擴展到針對特定功能的適配器，這些適配器整合了安全對齊數據。此外，我們擴展了我們的防護模型，這些模型旨在攔截有害提示，並在保持多語言適配器的同時，使用語言特定的訓練數據。我們還開發了定製數據集，以緩解模型輸出中的文化特定風險和偏見及刻板印象。同樣，我們通過機器翻譯和定向合成數據生成等工具，將我們的評估數據集擴展到多種語言和地域，並由母語者進行完善。最後，我們在各個功能上進行了人工紅隊測試，以識別每個地區特有的風險。&lt;/p&gt; 
&lt;p&gt;我們持續監控並主動改進我們的功能，藉助用戶反饋。例如，在圖像遊樂場中，用戶可以通過點擊「點贊」或「踩踏」來對生成的圖像提供反饋，還可以添加評論。應用程序開發者也可以通過&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fbug-reporting%2F" target="_blank"&gt;反饋助手&lt;/a&gt; 提供反饋。來自用戶和開發者的反饋，以及評估數據和其他指標，幫助我們持續改進 Apple Intelligence 功能和模型。&lt;/p&gt; 
&lt;h2&gt;結論&lt;/h2&gt; 
&lt;p&gt;我們非常興奮地使 Apple Intelligence 核心語言基礎模型更加高效和強大，從而解鎖一系列集成在我們軟件平台中的有用功能，併為全球眾多語言的用戶帶來這些功能。我們還為應用開發者提供了直接訪問我們設備上的語言基礎模型的新 Foundation Models 框架。應用開發者可以利用無需成本的 AI 推理功能，僅通過幾行代碼即可實現，從而通過幾行代碼將文本提取和摘要等能力帶入他們的應用中。我們的最新基礎模型在每一步都體現了我們的核心價值觀，例如我們對隱私的承諾，以及我們的負責任 AI 方法。我們期待在未來的技術報告中分享有關我們語言基礎模型更新的更多細節。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354610/apple-foundation-models-2025-updates</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354610/apple-foundation-models-2025-updates</guid>
      <pubDate>Tue, 10 Jun 2025 06:43:12 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>美團王興詳解 AI 佈局：No Code 平台免費開放，1680 個應用已上線</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在近日於北京美團總部恆電大廈舉行的股東大會上，美團創始人王興&lt;span&gt;首次&lt;/span&gt;系統闡述了公司在人工智能領域的戰略佈局和發展規劃，揭示了美團在 AI 浪潮中的深度思考與大膽實踐。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;王興將美團的 AI 發展劃分為不同階段。早期，公司已在外賣配送的路由和派單系統中應用深度神經網絡算法。當前階段則聚焦於大語言模型及其衍生應用的開發與部署。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;面對 AI 領域的激烈競爭，美團在過去近三年時間裏進行了大規模投入。王興坦言，硬件投入尤其巨大，"卡是很貴的，而且還不好買，機房也得提早準備"。在人才爭奪方面，由於&lt;span&gt;頂級&lt;/span&gt;AI 人才極度稀缺，薪酬水平被推至新高，人才獲取和保留成為重大挑戰。&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;No Code 革命：讓非程序員也能編程&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;美團 AI 應用的一大亮點是內部研發的 No Code 平台。該平台讓公司兩萬多名研發人員，包括產品經理、UI 設計師、商業分析師甚至 HR 和財務人員，都能通過 AI 輔助完成編程工作。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;王興強調，No Code 的核心價值在於實現"0 到 1"的突破，讓原本不擅長編程的員工也能獨立開發應用。"只要他有想法，AI 能自動幫他生成代碼"，這大幅提升了團隊整體的創新能力和工作效率。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;目前，美團已將 No Code 平台免費向公眾開放，平台上已有 1680 個應用正式發佈並可免費使用。&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;理性看待 AI 發展週期：短期高估，長期低估&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;對於 AI 技術的發展前景，王興指出，人們往往"容易高估一、兩年能夠發生的變化，但是低估十年發生變化"。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;王興認為，儘管 ChatGPT 發佈至今已兩年半，AI 雖取得顯著進展，但相比早年智能手機的革命性影響，還未從根本上改變人們的生活方式。然而，從十年維度看，AI 將帶來翻天覆地的變化。&lt;/p&gt; 
&lt;p style="margin-left:0px; margin-right:0px; text-align:left"&gt;&lt;strong&gt;財務考量：短期承壓，長期受益&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;談及 AI 投入對公司財務表現的影響，王興明確表示，AI 鉅額投入在短期內"不見得那麼正向"，需要股東保持耐心。但從長期視角，他堅信科技力量最終能提升生產力，更好地服務於美團"幫大家吃得更好，生活得更好"的使命。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354604</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354604</guid>
      <pubDate>Sun, 11 May 2025 06:26:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>全球首個 AI 芯片設計系統發佈</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;全球首個基於人工智能技術的處理器芯片軟硬件全自動設計系統「啓蒙」近日正式發佈。該系統能實現從芯片硬件到基礎軟件的全流程自動化設計，意味着實現 AI 設計芯片，而且其設計在多項關鍵指標上達到人類專家手工設計水平。相關研究成果近日發佈於預印本網站 arXiv。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;img alt="" height="288" src="https://oscimg.oschina.net/oscnet/up-db5d4d90ec1bfadbda426806d4a67345e79.webp" width="300" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;span style="color:#000000"&gt;「啓蒙 1 號」實物。圖片來自相關公開論文&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在 CPU 自動設計方面，利用「啓蒙」系統實現國際首個全自動化設計的 CPU 芯片「啓蒙 1 號」，5 小時內完成 32 位 RISC-V CPU 的全部前端設計，性能達到 Intel 486 水平，規模超過 400 萬個邏輯門，目前已完成流片。其升級版「啓蒙 2 號」為國際首個全自動設計的超標量處理器核，性能達到 ARM Cortex A53 水平，規模擴大至 1700 萬個邏輯門。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這項研究有望改變處理器芯片軟硬件的設計範式。它不僅能顯著減少人工參與、提升設計效率、縮短設計週期，更能針對特定應用場景需求實現快速定製化設計，靈活滿足日益多樣化的芯片設計需求。&lt;/span&gt;（&lt;span style="color:#000000"&gt;科技日報&lt;/span&gt;）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354601</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354601</guid>
      <pubDate>Sun, 11 May 2025 06:14:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Linux 基金會推出 FAIR 包管理器項目，打造去中心化 WordPress 生態</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Linux 基金會上週&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Flinux-foundation-announces-the-fair-package-manager-project-for-open-source-content-management-system-stability" target="_blank"&gt;宣佈&lt;/a&gt;&lt;/u&gt;推出 FAIR 包管理器項目，旨在打造一個去中心化的 WordPress 插件與主題生態系統，該項目意圖將控制權歸還給網站託管服務商和開發者，被業界廣泛認為是回應 WP Engine 爭議事件的一項延伸舉措。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9818ada8ca862301eb4dd9cf16b05bbd370.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;WordPress 聯合創始人 Matthew Mullenweg 去年對競爭對手 WP Engine 發動了攻擊，引發了一場至今尚未解決的訴訟。期間他還通過其控制的 WordPress.org 開源項目劫持了 WP Engine 的插件。&lt;/p&gt; 
&lt;p&gt;用於分發 WordPress 插件的 FAIR 包管理器項目試圖解決這一問題，它將確保 WordPress 插件不受任何一方的控制。它是中心化 WordPress.org 插件和主題生態系統的去中心化替代，旨在將控制權交還給 WordPress 託管者和開發商。它採用了聯邦式開源架構。&lt;/p&gt; 
&lt;h3&gt;FAIR 項目目標&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;去中心化&lt;/strong&gt; ：消除對任何單一來源核心更新、插件、主題和翻譯的依賴，實現跨生態系統的聯邦化，整合來自任何來源的插件，構建更強大的開源軟件供應鏈。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;增強安全性&lt;/strong&gt; ：減少發送給商業實體的自動瀏覽器數據傳輸和遙測數據，促進 WordPress 與歐洲通用數據保護條例的一致性，同時支持現代安全實踐，建立供應鏈安全，包括改進加密安全措施、增強瀏覽器兼容性檢查等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;促進創新與協作&lt;/strong&gt; ：通過提供更多的選項來控制所依賴的工具，促進商業插件開發者、託管商和應用開發者之間的創新，鼓勵各方參與貢獻，推動 WordPress 生態系統的整體發展。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FAIR 功能和特點&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;即插即用&lt;/strong&gt; ：FAIR 套件管理器可以作為一個即插即用型 WordPress 插件使用，能夠平滑替換現有依賴 &lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FWordPress.org" target="_blank"&gt;WordPress.org&lt;/a&gt; API 的集中式服務架構。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;多種部署方式&lt;/strong&gt; ：託管服務商可通過提供可直接安裝在現有 WordPress 站點上的獨立插件，或通過 FAIR 官方發行版實現網站的自動部署這兩種方式來部署 FAIR 系統。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;增強隱私保護&lt;/strong&gt; ：通過減少不必要的數據傳輸，提升用戶隱私保護水平。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;關於 FAIR 項目的詳情，訪問 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffairpm" target="_blank"&gt;https://github.com/fairpm&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354583/lf-announces-the-fair-package-manager-project</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354583/lf-announces-the-fair-package-manager-project</guid>
      <pubDate>Sun, 11 May 2025 04:03:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>ChatGPT 業績狂飆，年收入首次突破百億大關</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在短短三年的時間裏，美國人工智能研究公司 OpenAI 憑藉其熱門聊天機器人 ChatGPT，實現了令人矚目的業績，年化經常性收入（ARR）已突破 100 億美元大關。根據&lt;span&gt;最新&lt;/span&gt;數據顯示，OpenAI 的 ARR 去年為約 55 億美元，這意味着今年增長近 80%。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;ARR 是企業從訂閲服務或產品中獲得的預期年度收入，尤其適用於評估那些基於訂閲模式（如 SaaS 服務）的企業，因為它能反映出企業從現有客戶那裏獲得的穩定和週期性收入。OpenAI 的發言人透露，這一數據不僅包含了消費者產品和 ChatGPT 商業版本的收入，還涵蓋了 API 的銷售，但並不包括與微軟的授權收入和其他大額交易。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="316" src="https://oscimg.oschina.net/oscnet/up-6a5ee1c98aeae2080e11f341b57ef05b7f1.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，OpenAI 目前已擁有 300 萬付費商業用戶，比 2 月份的 200 萬大幅增加。分析人士認為，這一用戶增長也為 OpenAI 的高估值提供了支持。目前，OpenAI 的估值大約是其收入的 30 倍，這顯示出其投資者對公司未來增長的樂觀預期。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;今年 3 月，OpenAI 完成了一輪高達 400 億美元的融資，這也成為了有史以來&lt;span&gt;最大&lt;/span&gt;的私營科技融資案。值得一提的是，日本軟銀集團已經取代微軟，成為 OpenAI 的&lt;span&gt;第一&lt;/span&gt;大投資者。儘管如此，OpenAI 的首席執行官 Sam Altman 仍強調，微軟將繼續為其提供強大的計算資源，兩者的合作關係依舊穩固。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在技術合作方面，蘋果公司在最近的 WWDC 大會上宣佈，將把 OpenAI 的圖像生成功能整合到自家的 Image Playground 功能中，ChatGPT 將幫助用戶進行圖像調整。這一舉措將進一步推動 OpenAI 的技術在日常生活中的應用。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;儘管 OpenAI 在盈利能力上仍面臨挑戰，去年其虧損達到約 50 億美元，但公司設定的目標是在 2029 年實現年收入 1250 億美元。這需要更多的資金支持與市場擴展，才能實現這一驚人的增長速度。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354580</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354580</guid>
      <pubDate>Sun, 11 May 2025 03:44:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>在零售技術做 AI 的 95 後：我們這樣搞定技術難題</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style="text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//247a59458ebef2dc06a95ca9f37d70cf.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在京東零售技術團隊中，有很多年輕的算法工程師，他們大多是 95 後，在加入京東的短短几年內，用實力「啃」下了一個個硬骨頭。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;從大模型訓練的效率優化、生成效果的極致調優，到算法落地的工程難題、業務場景的創新應用，他們用行動證明——&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;做難而正確的事，才是技術人最快的成長路徑&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;每個技術突破的背後，是數百次實驗的堅持，是推翻重來的勇氣，更是對技術極致的追求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一起看看這羣技術年輕人解決技術難題的故事。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//6dee54f0cc28c36ae7b16ec9369cc295.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技術難題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;判斷廣告圖片合不合格就像評價"這幅畫美不美"，涉及大量主觀標準，人類一眼能看出的商品變形、錯位等問題，AI 評委經常"看不懂"。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;現有的獎勵模型給出的決策常常無法精準指導 AI 調整，如何讓 AI 像人類一樣精準理解圖片中複雜的審美和商業要求，並給出具體改進方向的評判指引？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的解題思路：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;拿到這道題時，我在思考：是否可以用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;多個獎勵小模型的組合&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;來替代單一獎勵大模型呢？讓每個小模型專注評判圖片的某一類問題，如商品形狀、擺放位置、色彩搭配等，降低單一模型的學習難度，同時提升評判的精細度；另一方面多獎勵模型意味着更靈活的業務規則嵌入和更豐富的模型組合方式，提高了獎勵信號質量的上限。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我和團隊一起完成了一套&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;基於人類反饋的可信賴廣告圖像生成的訓練和推理框架&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，這個框架的運作流程可以分為訓練階段和推理階段。訓練階段，生成模型根據商品透底圖產出廣告圖後，由多個專注細分任務的小獎勵模型生成多維質量信號，通過強化學習微調生成模型，使其逐步修正問題；在推理階段，生成模型輸出的廣告圖經同一組獎勵模型聯合決策，自動判斷生成的廣告圖能否直接上線，無需人工審核。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基於這套框架，生成圖片可用率 98% 的情況下，召回率提升了近 30%，可以高效、批量化製作商品的 AIGC 廣告圖片。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//1b620ee41b6908acac897ed07cf162d7.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的成長筆記：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;成長的最佳途徑在於不斷反思和覆盤。在每次項目結束後，我都會總結成功的經驗和需要改進的地方，將這些經驗和教訓形成可複用的方法論，不僅幫助自己成長，也能幫助團隊中的其他成員提高工作效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;入職前我的研究方向並非圖像生成，而是圖像分割、目標檢測等任務。雖然應用的算法有差異，但是同為深度學習相關任務，提升模型性能時的優化思路、訓練技巧乃至模塊實現方式都有很多共通之處，其技術迭代的方向和角度，也往往能帶給我很多啓發，跨領域的知識遷移，往往能碰撞出意想不到的創新火花。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//06ce8d2472ca178ef096bf9820d05bb3.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技術難題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;query 擴展是一種有助於縮小用戶搜索詞與商品描述之間差距的好方法。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;想象一下，你在京東 APP 搜索"養生神器"，理想情況下希望出現保溫杯、頸椎按摩儀等商品，但傳統的神經網絡機器翻譯模型在遇到新穎的用戶搜索意圖時，可能無法生成有效的擴展 query，無法召回很多相關商品。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何突破傳統 query 擴展的侷限性，讓 AI 學會舉一反三，讓搜索引擎召回更多相關且優質的商品？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的解題思路：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#820014"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;大模型的盛行啓發了我和團隊，query 擴展本身就可以是一個生成任務，而大模型的大參數量又可以提升泛化性，正好可以解決我們所遇到的問題。同時，InstructGPT 論文中提出的利用 PPO 提升 LLM 效果的思路，不僅能夠克服傳統「死記硬背」訓練數據的問題，還能讓模型在實際應用中更加靈活和智能，就這樣，我們堅定了大模型+強化學習的技術路線。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基於這一思路，我和團隊研究了一種&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;基於大語言模型的 query 擴展框架&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，該框架分為三個訓練階段：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;電商領域的預訓練、任務驅動的微調和基於搜索引擎的強化學習&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;首先，我們利用消費者行為數據和京東商品數據對 LLM 進行預訓練，這一階段為大模型裝備了一個強大的「知識庫」，讓它具備深入理解電商領域知識和用戶購物行為的能力。接下來，基於搜索日誌篩選出高質量的 query 擴展數據，對模型進行了任務驅動的微調，在大模型已經具備電商知識的基礎上，打磨模型在 query 擴展特定任務上的效果，讓模型能更準確理解用戶的搜索意圖。最後，利用強化學習進一步優化模型的目標對齊，通過模擬離線搜索引擎，設計了多粒度的獎勵函數，優化擴展 query 所檢索到的相關產品數量，在線實驗的轉化率提升也證明瞭我們方案的有效性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//6c3dc35d14b2b08765e9fd3026c3e99c.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的成長筆記： &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;面對技術難題時，我認為最有效的方法是通過分析具體案例 Case 來準確定位問題所在，並通過實驗來驗證不同的解決方案。這種方法不僅能夠幫助我們深入理解問題的本質，還能確保選擇的解決方案是最優的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;另外，我還會定期看頂會 paper、跟蹤開源社區動態進行技術積累，在面對問題時能更快定位問題，高效提出解法。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//561bfb1ed561c0948b3fd3ed52d8bac6.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技術難題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;優化京東商家智能助手的過程就像教一個實習生處理問題，傳統方法（監督學習）就像讓資深客服手把手教他每句話該怎麼回。雖然能保證基本合格，但這個實習生永遠無法超越師傅的水平，遇到新問題就束手無策。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何通過有效的指導和激勵，幫助這位「實習生」不斷提升技能，在「教練」的指導下，突破人類經驗的限制，實現自我進化？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的解題思路：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在大模型訓練過程中，如果僅基於傳統監督微調手段，模型效果會以人類標籤為上限，而我們的目標是助力模型從人類指導轉向 AI 自我引導、進一步優化模型效果。於是我轉向強化學習，對比了兩種方案：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、類似 DPO 的隱式獎勵方案，像是給學生樹立正面榜樣和反面典型，讓他自行學習優點、規避錯誤。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、類似 RLHF 的顯式獎勵方案，像是先通過一系列答案和對應分數告訴教練如何打分，再由教練實時訓練。這個方法效果更穩定，但訓練資源消耗更大、同時十分依賴「教練」的質量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如何培養這個高質量教練呢？我設計了一套&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Agent 全鏈路評估技術&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，針對不同類型問題給出不同評分標準，保障局部與端到端兩類視角的評估。對明確答案的問題直接判對錯，並檢查對應的思考過程；對開放性問題則用 AI 來評分。評估時區分模型生成質量與環境反饋結果，例如：當 Agent 正確調用 API 卻因外部故障失敗時，系統會給出高思維分+低環境分。通過區分"AI 想對了但執行出錯"和"AI 本身就想錯了"的情況，精準定位問題來源，為後續優化指明方向。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;現在，京東商家助手就像有個"AI 教練團"，邊服務邊進化。用算法解決算法的問題，正是技術最迷人的地方。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//7e58340baf3718aa55430cd75ec36eb4.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的成長筆記：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;技術突破往往需要跳出常規思維，即使是「看似不可能」的任務也都是從實際應用場景中提煉出來的，一定存在合理性與可實現的底層邏輯。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在解決技術問題時，我首先會進行問題的框架梳理與模塊拆解，明確頂層設計，然後逐步細化到具體的實施要點。首先確認要達成的目標，識別核心難點，分析技術要點是否已掌握或需要學習，此外還要尋找業界案例或替代方案，以及評估團隊協作需求等。通過將問題具體化，找到解決方案，即使遇到無法完成的任務，也能提供清晰的調研結論。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//e27df1c43f411f7ad0f2b19d84843f8c.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技術難題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;文生圖大模型能夠根據文本生成高質量圖像的能力而備受青睞。然而這些模型往往有巨大的參數量，在電商場景下會佔用大量算力資源且推理速度較慢。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何精準識別並裁剪模型中的冗餘部分，同時確保模型性能不受影響呢？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這一過程就像「修剪花園」，識別珍貴的花卉與徒耗養分的雜草，讓花園重煥生機。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的解題思路：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在模型優化過程中，我發現通過&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;FFT（快速傅裏葉變換）技術&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;進行頻域分析，就像使用了顯微鏡來觀察，更直接地捕獲模型冗餘和有效特徵的差異。具體來説，低頻和高頻的圖片特徵在頻域上的輸出會有明顯的變化，這意味着可以利用 FFT 技術來定位模型中的冗餘部分。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;然而，僅僅依靠頻域分析還存在一個難題：很難確定一個明確的閾值來有效冗餘和有效特徵。為此我還引入了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;RDP 算法（迭代端點擬合算法）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，這就像是一種高級的探測儀器，能夠自動識別頻譜變化趨勢中的關鍵拐點。結合這兩種方法，我成功定位並移除了模型中的冗餘部分。結果實驗顯示，模型訓練吞吐量提升了 40%，性能效率顯著提升。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這一成果不僅證明瞭創新方法的有效性，也是我首次在工業級項目中將基礎算法理論創新與實際應用完美結合，通過技術探索，成功解決了複雜的工程問題，積累了寶貴的經驗。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分享一段這個項目中重要的一段代碼：通過遞歸的方式擬合頻譜曲線，在誤差儘可能小的情況下，找到頻譜曲線中最重要的點，這些點即為 transformer 中的有效 block。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;rdp&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; epsilon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"""
    Ramer-Douglas-Peucker 算法，用於曲線簡化。
    points: 曲線上的點序列
    epsilon: 簡化容差，越大簡化越多
    """&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;perpendicular_distance&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;pt&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_start&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_end&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 計算點 pt 到線段 (line_start, line_end) 的垂直距離&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; np&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;array_equal&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;line_start&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_end&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; np&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;linalg&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;norm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;pt &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_start&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; np&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;abs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;np&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;cross&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;line_end &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_start&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_start &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; pt&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; np&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;linalg&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;norm&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;line_end &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; line_start&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;rdp_recursion&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; epsilon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 遞歸執行 RDP 算法，找出距離最遠的點&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        dmax &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        index &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        end &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;len&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;for&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; i &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;in&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;range&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; end &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            d &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; perpendicular_distance&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;i&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; d &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; dmax&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                index &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; i
                dmax &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; d
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 若最遠距離大於容差 epsilon，繼續分割曲線&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; dmax &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; epsilon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            results1 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; rdp_recursion&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;index&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;+&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; epsilon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            results2 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; rdp_recursion&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;index&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; epsilon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; results1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;+&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; results2
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;else&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 距離小於容差，直接簡化成端點&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; rdp_recursion&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;points&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; epsilon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的成長筆記：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AIGC 與大模型的快速演進，技術更新速度加快，對算法工程師提出從單純研發走向落地應用與創新融合的更高要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;面對快速變化的時代和複雜的業務，我會主動追蹤前沿進展，跟進頂會、開源社區的動態，保持對領域趨勢的敏鋭性，同時提升的跨領域技能與知識，深入理解用戶需求與市場趨勢，結合算法能力提供真正有商業價值的方案，掌握良好的代碼工程實踐、持續集成和自動化部署，提高算法從實驗到生產的效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;hr&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//787ecd148fa56064da92dd38e2da6744.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;技術難題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在智能導購場景中，用戶常提出包含具體場景參數的需求，如"我家的桌子長 130cm，寬 60cm，推薦一個大小合適的置物架"。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;如何讓大模型準確理解用戶需求，並將其精準映射到商品庫的結構化參數？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的解題思路：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這一技術難點在於語義複雜性和商品描述與用戶需求的精準匹配，一方面需要理解用戶語言中的隱含條件，比如「大小合適"需轉換為"長度≤130cm 且寬度≤60cm」，另一方面要準確匹配商品庫的結構化參數，如貨架尺寸、承重等，這需要突破語義理解、多意圖混雜等難題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;過程中，我進行了模型訓練，使用通用強化學習方法提升語義理解能力，通過數據閉環持續優化用戶意圖識別。並篩選高質量數據訓練模型，確保處理新需求時仍保持高準確率。此外，我還將京言的多個模型整合成一個統一的系統，每個功能對應一個獨立的代理。通過讓單個智能體處理多種任務，在需要時進行人工幹預，進一步提升大模型的效果，確保系統既高效又靈活，能夠更好地服務於用戶。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;大模型語義推理&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;多輪對話引導用戶&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;完善需求，將技術參數轉化為用戶語言，結合電商知識，動態生成易懂的解釋。京言上線以來，活躍用戶平均對話次數增加，購買轉化率持續攀升，實現了"越用越懂你"的智能導購體驗。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這是我在進行多任務訓練的時候，通過探針觀察模型訓練狀態：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;def&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;get_token_prob&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;prompt&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; target_token&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 編碼輸入並定位預測位置&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    inputs &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; tokenizer&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;prompt&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; return_tensors&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"pt"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    input_ids &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; inputs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;input_ids
    target_len &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;len&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;tokenizer&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;encode&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;target_token&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; add_special_tokens&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;False&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 獲取模型輸出 logits&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;with&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; torch&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;no_grad&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        outputs &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; model&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;**&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;inputs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    next_token_logits &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; outputs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;logits&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 取最後一個位置的預測&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 轉換概率分佈&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    probs &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; F&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;softmax&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;next_token_logits&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; dim&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 獲取目標 token 的 id（處理多 token 情況）&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    target_ids &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; tokenizer&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;encode&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;target_token&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; add_special_tokens&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;False&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;# 返回改 token 的概率&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; probs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; target_ids&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;[&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;item&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;我的成長筆記：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在模型訓練過程中，數據清洗和過濾是關鍵，但過程往往充滿挑戰。有時候，花整整一週時間合成數據、清洗數據、再到數據配比，最終訓練出的模型卻表現不佳，難免讓人沮喪。但我始終相信，每一次失敗都有價值。歷史數據不僅能幫助分析問題，還能用於構建更優質的訓練樣本，支撐下一次嘗試。當方向不對時，就果斷調整策略，帶着經驗重新出發。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這就是技術人的成長——在不斷試錯中積累經驗，在失敗中尋找突破，最終一步步實現更好的結果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18483708</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18483708</guid>
      <pubDate>Sun, 11 May 2025 03:37:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>我對各種 AI Coding Agent 工具的看法</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文已獲授權轉載。 &amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;原文：《我對各種 AI Coding Agent 工具的看法》 &amp;nbsp;&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxxchan.me%2Fai%2F2025%2F06%2F08%2Fai-coding.html" target="_blank"&gt;https://xxchan.me/ai/2025/06/08/ai-coding.html &amp;nbsp; &amp;nbsp;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;作者：xxchan&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Agentic coding 或許是當下最火（最卷）的方向，一萬家公司在做。並且隔三差五就在社交媒體上看到又有什麼新工具、誰家又出什麼新功能了（又 blow 誰的 mind 了，又顛覆誰誰了）。這還挺讓人困惑的，我發現很多人會問 「這些 AI coding 工具真有那麼牛嗎？」，或者 「XX 和 YY 到底有啥區別」。不少人自己試用了一下，感覺不過如此，於是迅速下頭。同時，我還發現還有不少程序員連&amp;nbsp;&lt;strong&gt;Cursor&lt;/strong&gt;&amp;nbsp;都沒用過。&lt;/p&gt; 
&lt;p&gt;我平時很喜歡把玩各種 agentic coding tool，因此忍不住想鋭評一番。這個領域無疑充滿了大量的 hype，但仔細看，還是能分辨出不同產品間的差異，甚至整個行業的發展方向。&lt;/p&gt; 
&lt;p&gt;Agent 能做什麼不能做什麼，以及如何用好它，這裏面有很多「手藝」的成分。所以這事兒很難解釋清楚，瞭解它們的最好方式還是得自己上手試。看再多別人的使用感受，都不如自己玩一把來得真切（但我還是忍不住想講講我的看法）。這篇文章，就是試圖把我關於各種 AI coding 工具那些零散的觀察和思考，整理成一篇比較長的文字。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;一些背景&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;總的來説，我很相信 「agent coding 能成」 這個未來。具體點説，我相信未來 AI agent 可以獨立在一個大型項目中，端到-端地完成複雜的開發任務（加功能、修 bug、重構）。&lt;/p&gt; 
&lt;p&gt;首先交代一下，我主要的工作是寫開源流數據庫&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frisingwavelabs%2Frisingwave" target="_blank"&gt;RisingWave&lt;/a&gt;，一個超過 60 萬行代碼的 Rust 項目，還算比較複雜。雖然一些上下文明確的小活兒，我已經習慣了讓 AI 來幹，但説實話，我暫時還沒有大規模、嚴肅地用 AI coding 去做那些真正困難的開發任務。同時，我也沒仔細想過未來模型的能力邊界，以及實現 agent 的具體技術難點在哪。所以，這篇文章主要基於我的直覺，是對各個工具的感性分析。另外也不是一篇教你怎麼用、怎麼選的攻略。&lt;/p&gt; 
&lt;p&gt;不過給自己找補一下，我感覺之所以不敢大規模嘗試，還是有原因的，主要還是「窮人思維」在作祟：Agent 還是太貴了！一個任務跑下來，隨隨便便就是 5 到 10 刀。這裏可能存在一個傑文斯悖論：如果它變得更便宜，我反而會用得更多，最後花掉更多的錢……另外現在工具太多了，而要真正用出差異，可能得花上一週以上的時間去深度體驗，但訂閲和切換的成本又讓人望而卻步。&lt;/p&gt; 
&lt;p&gt;下面開始正題。我們先按工具逐一分析，最後再聊些更宏觀的話題。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;具體產品分析&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Cursor：野心勃勃的領跑者&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Cursor&lt;/strong&gt;&amp;nbsp;現在毋庸置疑是 AI Code Editor 這個賽道的老大哥。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0.50/1.0 版本里藏着的線索&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;説起來，我動筆寫這個，很大一個 trigger 是看了&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2Fchangelog%2F0-50" target="_blank"&gt;cursor 0.50 的 changelog&lt;/a&gt;（然而拖到今天他們&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2Fchangelog%2F1-0" target="_blank"&gt;1.0&lt;/a&gt;&amp;nbsp;都發了……），裏面透露了很多有意思的點，有點暗示未來方向的意味：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simpler, unified pricing&lt;/strong&gt;&amp;nbsp;Cursor 之前的定價模式有點臭名昭著，它引入了一個定義模糊的「fast request」，不同模型還對應不同的數量。新版統一成了「Requests」（其實也沒太大區別）。 更重要的是很多人覺得一個月 20 刀很貴，我倒認為這一定價太低了，他們很可能在虧錢。按 request 計費本身就不太合理，尤其在 agent 時代，一個請求可能跑很久、燒很多 token。當然，這也可能是種「健身房模式」，讓用量少或短對話的用戶，來平衡高用量用戶的成本。但另一個不合理之處在於，這會驅使它去優化 token 成本（比如壓縮上下文），而用戶想要的卻是最大化的效果。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Max mode&lt;/strong&gt;&amp;nbsp;按照官方説法，「It's ideal for your hardest problems」。在我看來，這有點吹牛。我的理解是，Max mode 就是不再精細化管理上下文，同時上了 token-based billing。在過去，模型長上下文能力不強時，精細控制或許能省錢且效果好（因為模型會被無效信息誤導）。但現在模型能力提升太快，這種控制反而成了負優化。有趣的是，像 Roo Code 這樣的開源 BYOK 方案，一直宣傳的就是「Include full context for max performance」。所以 Cursor 這波操作，有點像開倒車，或者説是早期的優化成了現在的技術債。他們那句「If you've used any CLI-based coding tool, Max mode will feel like that - but right in Cursor」給人的感覺更微妙了。既然我可以用 CLI-based agent，為什麼還要在 Cursor 裏用一個要額外收 20% margin 的版本呢？&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fast edits for long files with Agent:&lt;/strong&gt;&amp;nbsp;這也是個有點像開倒車的改動。它給我的感覺是，開始使用基於文本的方法來直接應用大模型的輸出。Cursor 之前一直吹噓自己的 apply model，這事兒可能做得太早了。以前模型不夠準，需要複雜的 apply 邏輯；以後模型越來越強，這種複雜性可能就沒那麼必要了。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Background Agent &amp;amp; BugBot&lt;/strong&gt;&amp;nbsp;總的來説 「Agent mode」 頂多算是輔助駕駛，真正的 Agent 是你能以更輕鬆的方式給他派活。Background Agent 是你派個活就不用管了，BugBot 是自動 code review。後面必定還會出例如在 GitHub 上 assign 個 issue 就開始幹活了之類的功能，成為一個全能的合格牛馬。 這個信號非常明確：&lt;strong&gt;Cursor 要和 Devin 硬碰硬了&lt;/strong&gt;。這是個非常自然的方向，用過 Cursor agent mode 的人，很可能都想過能不能讓它同時幹兩件事。在本地做這個有難度，放到雲端就順理成章了。&amp;nbsp;&lt;strong&gt;Cursor vs Devin&lt;/strong&gt;，有點像&lt;strong&gt;特斯拉 vs Waymo&lt;/strong&gt;。後者一開始就直接做終極目標自動駕駛，前者則是發展成熟、用戶規模大了以後逐漸轉向更自動的方向。這條路的好處是用戶期待會低一點，壞了能人，可以自己動手改。依賴現有的其他做的好的體驗還可以繼續保持一定的用戶黏性。相比之下，Devin 如果一開始的體驗不及預期，用戶很可能就流失了。（當然，對 pro user 來説，在本地 checkout 修改不是難事，但 Cursor 有大量相對小白的用戶，為他們提供簡單的 UIUX 也是一個點。）&lt;/li&gt; 
 &lt;li&gt;還有一些 1.0 的小改進 
  &lt;ul&gt; 
   &lt;li&gt;支持了 memory：我認為同樣是所有 ai agent 的必備功能。&lt;/li&gt; 
   &lt;li&gt;Richer Chat responses：支持了 mermaid，以及 markdown table 渲染。説明 chat 體驗還是有東西卷的（提升一點用戶粘性）&lt;/li&gt; 
   &lt;li&gt;但總的來説 1.0 主要感覺是 marketing 為主的一個版本，並沒有什麼質變（相比之下 0.50 倒是更震驚我一點）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;與 Cursor 的激進大動作相應的則是&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F05%2F04%2Fcursor-is-reportedly-raising-funds-at-9-billion-valuation-from-thrive-a16z-and-accel%2F" target="_blank"&gt;Anysphere, which makes Cursor, has reportedly raised $900M at $9B valuation&lt;/a&gt;。對應 OpenAI 想要收購 windsurf 的新聞，可見 Cursor 急切的想要一統江湖的野心。融了這麼多錢，我猜他們下一步很可能就是訓練自己的模型。除此以外，它也完全有可能會收購市場上的其他玩家，成為一個整合者的角色。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;回過頭來説，Cursor 到底好在哪？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;其實我當初（2024/05）用 curosr 完全是為了他驚豔的&amp;nbsp;&lt;strong&gt;TAB 功能&lt;/strong&gt;。在早期我幾乎不用 AI chat，甚至能忍着很多非常影響體驗的 editor bug 還要用。 相比 GitHub Copilot 的「append only」補全，想修改就得刪了重來；Cursor 的生成「Edit」，幫你修改代碼，顯然是更「正確」的形態，而且準確率相當不錯。它的補全還能在改完一處後，跳到後面同時修改多處，這在重構時極其有用。例如改一個類型簽名的時候 IDE 不太能智能重構，要手動改很多地方，而 Cursor 解決了這個痛點。&lt;/p&gt; 
&lt;p&gt;就為了這個 TAB 功能，我心甘情願地付了 20 刀。&lt;/p&gt; 
&lt;p&gt;後來在我沒意識到的時候 「Agent mode」 在 non-coder 中先火了。我才後知後覺地發現了 agent 的能力。（而且 Cursor 一直沒漲價啊！所以現在在讓用戶逐漸適應 token based billing 了） 不知道這個火是不是偶然，因為在我看來其他的 AI IDE 或者 end-to-end 的 coding 平台或多或少都能做類似的事情，Cursor 現在在 Agent 上甚至是比較落後的。但或許是它做的早，抓住了時間窗口，在大眾心裏建立起了品牌。AI coding 平台的切換成本其實有點玄學，一方面真的要切的話並不難，體驗沒有質的差距，沒有真正的壁壘；另一方面這個幹活的東西，用順手了也懶得換。&lt;/p&gt; 
&lt;p&gt;他們有一篇&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cursor.com%2Fblog%2Fproblems-2024" target="_blank"&gt;Our Problems&lt;/a&gt;，看他之前畫的餅其實都是 AI-assisted coding 的範疇，現在感覺在 agent 的時代稍微有點過時了。AI assisted coding 的 UX 感覺還是有很多可以做的事情的，但現在大力做 Agent 的話可能會沒那麼優先了。&lt;/p&gt; 
&lt;p&gt;所以，Cursor 的好在哪？它好在一種奇妙的組合拳上。它先用一個真正懂開發者的殺手級功能（那個無敵的 TAB Edit）抓住了最挑剔的核心用戶，然後又敏鋭地捕捉到了 Agent 的浪潮，在大眾心中成功地將自己與「AI 編程」這個概念劃上了等號，哪怕它的技術在現在並非最領先。這種「硬核實力」&lt;strong&gt;和&lt;/strong&gt;「抓風口能力」的結合，再配上一點先發優勢的「玄學」，最終成就了它現在的地位。&lt;/p&gt; 
&lt;p&gt;現在如果你不知道什麼工具最適合自己，那 Cursor 可能是一個比較穩的選擇：有充足資金，不一定是最強但肯定差不到哪去。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Cursor 的終局是什麼？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;當初就有很多人説，Cursor 做的事為什麼要 fork VS Code？我曾認為「為了 AI 特化的體驗」是答案（例如 Cursor TAB）。但現在，VS Code、&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.augmentcode.com%2F" target="_blank"&gt;Augment Code&lt;/a&gt;&amp;nbsp;也在追趕，Cursor 自己反而沒有做出更多讓人眼前一亮的獨特 UX。&lt;/p&gt; 
&lt;p&gt;我現在對這件事的判斷是：&lt;strong&gt;Cursor 想做一個大而全、ALL-in-one 平台，佔據開發者的入口&lt;/strong&gt;。（GitHub Copilot 或許也想，但它還是不夠快。）之前提的「我能在 CLI 裏用 agent」，實際上是説 Agent 並不需要 IDE 就能工作。但我在自己淺淺用了一下 Cursor 的 background Agent 之後，發現這個體驗很自然。很多東西不必做在 IDE 裏，但反過來説，也不是不能做在 IDE 裏。既然 IDE 是工程師每天花時間最多的地方，那為何不把所有 coding 相關的東西都塞進來，成為一個一站式的 hub？&lt;/p&gt; 
&lt;p&gt;至於其他的 AI code editor（windsurf/trae，以及開源的 cline/roo code），我感覺比較難與 Cursor 有一戰之力。我的觀點是，Agent 是大趨勢，而做好 Agent 之後，對 AI-assisted coding 的依賴反而小了。當工程師需要自己寫代碼時，最終還是會迴歸到傳統的 IDE 體驗。這些工具雖然可能在某些體驗上有優勢（比如 windsurf 據説對複雜項目的上下文管理更智能），但普通用戶沒那個耐心去深度比較。在資本的沖刷下，這些微小差異可能會被逐漸抹平，甚至收購整合。做 Agent 就更是燒錢了。反倒是像&amp;nbsp;&lt;strong&gt;Zed&lt;/strong&gt;&amp;nbsp;這種完全重頭再來的 code editor，説不定可以搞出點新花樣來。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;關於「壁壘」&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Cursor 的創始人曾談過他們對「壁壘」的看法：在這個發展過快，未來的想象空間也仍然很大的領域，&lt;strong&gt;壁壘的本質就是「快」&lt;/strong&gt;。只要你夠快，就能領先。反之無論你當前的技術有多強、產品體驗有多好，一旦你在某個階段慢下來，就可能被超越、被取代，非常殘酷。&lt;/p&gt; 
&lt;p&gt;我在這個事情上沒完全想明白。我曾經覺得靠「體驗」是可以成為壁壘的。但或許那只是你做的事情不夠大。如果足夠大，那麼巨頭一定會出手自己做，然後用技術（模型）和資源能力比你做的更好。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;VS Code/GitHub Copilot&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Copilot&lt;/strong&gt;&amp;nbsp;絕對是里程碑，是第一個讓人感覺「能用」的 AI coding 工具。但後來，它的體驗逐漸被後起之秀超越。我猜測可能的理由包括：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;OpenAI/微軟重心轉移（比如微軟大力搞 copilot for office）&lt;/li&gt; 
 &lt;li&gt;畢竟微軟是個巨廠，層層審批，Github Copilot 拿不到太多資源&lt;/li&gt; 
 &lt;li&gt;Copilot 本身當初可能是想着做做看，做出效果以後也沒想好再往後能怎麼做，而且 coding 模型的發展緩慢（Codex 是 GPT-3 的一個 finetune 版本），後面專注提升基座能力去了，沒人/資源專門訓練 coding 特化模型&lt;/li&gt; 
 &lt;li&gt;Copilot 用戶（特別是 enterprise 用戶）多了以後不好大刀闊斧地改體驗，領先佔據市場反而成了包袱&lt;/li&gt; 
 &lt;li&gt;受限於 VS Code 的殼，不像 fork 的 AI IDE 可以亂改，要往主分支裏塞 AI 相關的東西可能還是要掂量一下，特別是在當年 AI coding 還原非共識，有很多程序員反感 AI&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;但是 VS Code 最近逐漸把功能慢慢都加上了。甚至還發了一篇有意思的宣言：&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fblogs%2F2025%2F05%2F19%2FopenSourceAIEditor" target="_blank"&gt;&lt;strong&gt;VS Code: Open Source AI Editor&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;長遠看&amp;nbsp;&lt;strong&gt;VS Code 可能還是會重回巔峯&lt;/strong&gt;。理由很簡單：大廠認真起來是很嚇人的（比如 gemini）。當 AI coding 成為共識，微軟投入足夠資源，體驗差異很可能被逐漸抹平（比如 Cursor TAB 這種東西 Copilot 沒理由不做），除非他們持續在「AI Editor 的 UX 創新」上整新活。但是目前看來並沒有。更重要的一點是，既然 agent 不需要 IDE 就能工作，那麼程序員自己寫代碼時，還是會迴歸到功能紮實、bug 更少的傳統 IDE。這也是 Cursor 的一大弱點，它在 IDE 本身的迭代上，似乎總比 VS Code 慢半拍。&lt;/p&gt; 
&lt;p&gt;未來，VS Code 和 Cursor 兩分天下，感覺也挺有可能。喜歡古典和喜歡大而全的人，各取所需。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Claude Code&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;接着聊聊真正的 CLI-based agent。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxxchan.me%2Fai%2F2025%2F05%2F06%2Fclaude-code.html" target="_blank"&gt;上次的文章分析過&lt;/a&gt;，&lt;strong&gt;Claude Code&lt;/strong&gt;&amp;nbsp;是個做的很用心的產品。它給了我一種「確實應該能 work」的感覺，以及第一次讓我思考 agent 好像並不需要 IDE。&lt;/p&gt; 
&lt;p&gt;相比於 IDE 或者瀏覽器裏的 agent，CLI-based agent 本質上沒太大差距，最主要的區別可能就是對 prompt 和 tool 的設計。但它的優點是可以 iterate faster。因為能做的事情更少，反而可以專注在 agent 最本質的地方。因此正如上次的文章分析的，claude code 的 prompt 包括 tool spec 寫的都非常的長。我自己使用下來的體感是感覺 claude code 明顯要比 Cursor 更「聰明」一點。這只是因為 prompt 調教的水平嗎？還是説 Claude Code 有特供的模型？（感覺暫時不太像，但未來不好説）&lt;/p&gt; 
&lt;p&gt;Claude Code 其實並不只能跑在自己本地的 terminal 裏，現在已經可以在 GitHub 上 @它，然後自己幹活了（跑在 CI 裏）。但它的思路並非深度集成，而更像是利用 CLI 無限的可組合性（所以非常第一性原理做事？）。&lt;/p&gt; 
&lt;p&gt;在過去這一個月裏，Anthropic 又有一些明顯的動作，讓人感覺想要力推 claude code：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 Code with Claude 大會上發佈了 Claude Code 1.0，以及 4.0 新模型&lt;/li&gt; 
 &lt;li&gt;斷供 windsurf&lt;/li&gt; 
 &lt;li&gt;Claude 20 塊的 pro plan 也可以用 claude code 了，大大降低試用門檻。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;最後一點讓我果斷訂閲了 Pro Plan。我試了一下，在達到 usage limit 之前（幾個小時後刷新），我讓 Claude Code 跑了一個比較複雜的重構任務，大概持續了三四十分鐘。這個用量如果按 API token 計費，少説也得 10 刀。這或許就是&amp;nbsp;&lt;strong&gt;LLM 原廠做 agent 的一個優勢&lt;/strong&gt;：反正機器已經在那裏了，可以把閒時資源充分利用起來。而做應用的公司，又不可能去整租機器。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Anthropic 做 Claude Code 的真實意圖是什麼？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我其實還沒完全看懂，Anthropic 做 Claude Code 的最終目的到底是什麼？是想做一個好用的產品，還是想用它幫助模型訓練本身？OpenAI 現在明顯在花力氣做 ChatGPT 這個產品，未來的想法大概是把 ChatGPT 作為一個入口，讓它成為一個調度型的 agent。那 Claude Code 在這件事上的定位又是什麼？&lt;/p&gt; 
&lt;p&gt;這一方面涉及對 Coding 這個市場的規模到底有多大的判斷。從 Cursor 一開始的估值來看，大家普遍認為也就那樣——因為開發者羣體的體量就那麼大。但現在 Vibe Coder 起來以後，整個故事又被撐大了不少。&lt;/p&gt; 
&lt;p&gt;不過，回到 Anthropic 這麼一家大模型公司，直接下場卷應用層的東西，是否有點「不體面」？或許他們的目的並不是要把市場上其他人都吃掉，而是帶着一定的試驗心態，看看這種東西到底能做成什麼樣子。但説起應用層，Claude App 裏面其實也有很多非常漂亮的功能，比如它的 Artifact，體驗明顯比 ChatGPT 好很多，雖然 Claude App 整體上很挫。&lt;/p&gt; 
&lt;p&gt;當然，更有可能的目的還是&lt;strong&gt;通過用戶使用它的產品來收集數據，最終用於訓練模型&lt;/strong&gt;。 因為像 Cursor 這種合作伙伴的用戶行為數據，它可能是拿不到的。所以它得自己做一個完整的產品，把整個鏈條打通。而且，Cursor 裏那些亂七八糟的功能它可能也不太需要，它更關注的是訓練模型過程中，真正與 Coding 直接相關的部分。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;從「聰明」到「持久」的進化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;説回模型訓練，Claude Code 宣稱能獨立跑七個小時，給我的感覺是：現在模型的「聰明程度」短期內好像有點提不上去了，於是大家開始發力做「長期任務執行」（所謂 Agent）——讓模型持續工作得更久、更自主，並且能用工具來輔助提升自己。&lt;/p&gt; 
&lt;p&gt;在使用中，能很明顯地觀察到模型的一些新行為：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;它會先説：「我接下來要做 123」，體現出任務規劃能力；（我原來覺得需要外化的 TODO list，但它似乎在內化這個能力）&lt;/li&gt; 
 &lt;li&gt;它會先寫一個方案，然後寫到一半突然説：「讓我想一想有沒有更簡單的方式」，然後重頭來過。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這些行為看着其實還挺好笑的，但也清晰地揭示了往 agent 這條路上走。&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fampcode.com%2F" target="_blank"&gt;&lt;strong&gt;Amp&lt;/strong&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;他們整體上給我一種很有「產品 sense」，「很懂 agent 應該怎麼 work」的感覺。但其實就是 claude code - like。我能想到他們的優勢是 move （slightly） faster（？）；有 sourcegraph 這個 code search &amp;amp; indexing 後端能力（真的有用嗎？）；不和 claude 一家強綁定，在別的模型追上的時候可以切；另外他們毫不掩飾、充滿原則性的產品哲學可能可以贏得一批用戶的深度信賴。他們是這麼説的：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Amp is unconstrained in token usage (and therefore cost).&amp;nbsp;&lt;strong&gt;Our sole incentive is to make it valuable&lt;/strong&gt;, not to match the cost of a subscription.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No model selector, always the best models.&lt;/strong&gt;&amp;nbsp;You don’t pick models, we do. Instead of offering selectors and checkboxes and building for the lowest common denominator, Amp is built to use the full capabilities of the best models.&lt;/li&gt; 
 &lt;li&gt;Built to change.&amp;nbsp;&lt;strong&gt;Products that are overfit on the capabilities of today’s models will be obsolete in a matter of months.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;他們的&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fampcode.com%2Ffif" target="_blank"&gt;「&lt;strong&gt;Frequently Ignored Feedback&lt;/strong&gt;」&lt;/a&gt;&amp;nbsp;也很有意思（用戶：我要 xxx；amp：不，你不要），體現出他們對 Agent 的深刻理解：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Requiring edit-by-edit approval traps you in a&amp;nbsp;&lt;strong&gt;local maximum&lt;/strong&gt;&amp;nbsp;by impeding the agentic feedback loop. You’re not giving the agent a chance to iterate on its first draft through review, diagnostics, compiler output, and test execution. If you find that the agent rarely produces good enough code on its own,&amp;nbsp;&lt;strong&gt;instead of trying to 「micro-manage」 it,&lt;/strong&gt;&amp;nbsp;we recommend writing&amp;nbsp;&lt;strong&gt;more detailed prompts&lt;/strong&gt;&amp;nbsp;and improving your&amp;nbsp;&lt;strong&gt;AGENT.md&lt;/strong&gt;&amp;nbsp;files.&lt;/li&gt; 
 &lt;li&gt;Making the costs salient will make devs use it less than they should. Customers tell us they don’t want their devs worrying about 10 cents here and there. We all know the dev who buys $5 coffee daily but won’t pay for a tool that improves their productivity.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;非常 Opinionated，有點「果味」。&lt;/p&gt; 
&lt;p&gt;除此以外，他們還做了個 leader board &amp;amp; share thread 功能，很有意思，可以在團隊內激起一些奇妙的火花。&lt;/p&gt; 
&lt;p&gt;但短期內有點謹慎不看好，因為 Claude Code 已經足夠好用了，而且綁定 Claude 訂閲有巨大的成本優勢……Amp 目前的收費模式是完全 pass-through 按 token 收費（沒有 margin）。那雖然他們不盈利，可能也不會太燒錢。可以拭目以待一下。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;OpenAI Codex （in ChatGPT）&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;上個月，OpenAI 也發佈了自己的全自動 coding agent。是完全符合我對 agent 的想象的產品形態。我之前就在想，為什麼我不能在手機上給 Cursor 派活？現在通過 ChatGPT 就能實現了。&lt;/p&gt; 
&lt;p&gt;但要看懂這個動作，就不能只盯着 coding。雖然他們收購了 Windsurf，但我認為&amp;nbsp;&lt;strong&gt;OpenAI 的野心遠不止在 coding 市場上分一杯羹，他們更想做的是讓 ChatGPT 成為未來的調度入口，甚至是一個操作系統&lt;/strong&gt;。 Codex 的目的，或許只是為了比較專業的「高價值用戶」能做更多事情，從而提高用戶粘性。而收購 Windsurf，看中的可能是他們對 long context 的管理能力和寶貴的用戶數據，從而賦能模型能力提升。&lt;/p&gt; 
&lt;p&gt;偏題説一嘴，ChatGPT 的整體體驗遠超其他官方 AI app，比如説&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;memory：有一種很神奇的感覺，但對我個人而言提供的「價值」似乎還沒那麼大，真有偏個人思考的問題我還是更願意問沒有 memory，甚至更難用的 gemini。&lt;/li&gt; 
 &lt;li&gt;o3 的 web search 體驗過於好。相當於 mini 版 deep research&lt;/li&gt; 
 &lt;li&gt;雖然也不能説非常絲滑，還是時不時有點 bug，但還是比其他家好太多了。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Devin&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;當年在 AI coding 還沒那麼普及的時候他們就打着 「First AI Software Engineer」 的旗號，要做全自動 end-to-end。初次發佈後 500 刀/月的高價也是讓人望而卻步。並且試過的人也説它笨。&lt;/p&gt; 
&lt;p&gt;現在變成 20 刀起訂，pay as you go 以後我立馬試了試。&lt;/p&gt; 
&lt;p&gt;給我整體的感覺是，模型智力水平一般般。但他們的產品整體上也是一種「基本上能 work」的感覺。我有一種強烈的預感，在經過適當的 prompt engineering 之後，它能工作得很好。他們現在的説法也是很實在：「&lt;strong&gt;Treat Devin like a junior engineer&lt;/strong&gt;」。（其實任何 Agent 產品目前大概都是這個狀態。）&lt;/p&gt; 
&lt;p&gt;這是我第一次真切地感受到 agent 燒錢的威力。我讓它處理一個 issue，它可以自主探索出一個框架（花了 2 個 ACU，每個 2.25 美元）。但後面讓他改 bug，就有點改不對了，開始亂撞，很快就飆到了 4 個 ACU，20 刀迅速蒸發。或許現在的最佳用法是，先用它生成一個初版，然後手工或用 Cursor 精修。（當然，現在 Cursor 也有了 background agent，界限開始模糊了。）&lt;/p&gt; 
&lt;p&gt;對 devin（包括現在 Curosr remote agent）來説，還有一筆 vCPU 的錢。例如 m5.4xlarge（16C64G）ondeman $0.768/h。其實相比 token 並不算很貴……&lt;/p&gt; 
&lt;p&gt;在 Agent 成為大熱門之後，&lt;strong&gt;Devin&lt;/strong&gt;&amp;nbsp;直接受 Cursor、claude code、Codex 等各個方向的夾擊了。&lt;/p&gt; 
&lt;p&gt;Devin 目前的優勢在於 integration（能直接在 Slack、Linear &amp;amp; Jira 上派活）和較高的產品完成度（設計良好的 knowledge base、playbook 系統）。但這種「髒活累活」能撐起它的估值，能成為壁壘嗎？直覺上，這些是任何一個好的 agent 都必須具備的功能。感覺 agent 這個領域確實需要大量時間去打磨體驗，但資本似乎太急了。&lt;/p&gt; 
&lt;p&gt;他們最新版又出了一個&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxxchan.me%2Fai%2F2025%2F06%2F08%2F%2520https%3A%2F%2Fcognition.ai%2Fblog%2Fdevin-2-1" target="_blank"&gt;Confidence rating&lt;/a&gt;&amp;nbsp;功能很不錯，可以避免用戶因過高預期而燒錢搞出一堆垃圾。其實這也是 agent 挺有意思的一個地方，你用的不對的話就會效果又差又燒錢。換個角度説，一個好的程序員或者乙方不應該你説什麼就做什麼，而是會試圖理解你的意圖，為什麼你想做這個，以及有什麼潛在的坑。&lt;/p&gt; 
&lt;p&gt;他們的 deepwiki 也有點像是秀肌肉，可能體現了他們在 agent 上的技術積累。畢竟，他們是一開始就融巨資自研大模型、奔着超大上下文去的團隊。或許他們有很多的卡，在成本上也有優勢。&lt;/p&gt; 
&lt;p&gt;在寫這篇文章的時候又看到一個新的平台&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FFactoryAI%2Fstatus%2F1927754706014630357" target="_blank"&gt;Factory&lt;/a&gt;，看起來也是叫板 devin。它的 release 感覺 too good to be true：「Factory integrates with your entire engineering system (GitHub, Slack, Linear, Notion, Sentry) and serves that context to your Droids as they autonomously build production-ready software.」。但我仔細看了一家這家公司成立甚至比 devin 還早一點。他們的 demo 視頻中，一個有意思的地方是他所有的 integration 都是要跳回到它 factory 的頁面上的（比如在 slack 裏@它，它給一個鏈接）。它的體驗其實是你在它的 portal 上完成所有事情，拉取 linear、GitHub、slack 的 context。（説個不恰當的比喻，這看着有點像 coding 領域的 Manus。）相比之下 devin 是讓你在 Slack、Linear 上直接和它交互，更加的 in-context，in-flow。但 anyways，有競爭是好事。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;v0&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;上面其實説的都是比較偏為 engineer 設計的工具（不管是全自動還是半自動），下面開始聊聊更偏 「non-coder」 或者 「product」 向的平台。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v0&lt;/strong&gt;&amp;nbsp;是 coding 垂類賽道中更垂的一個，更偏前端 UI prototype。你可以把它想象成一個用自然語言驅動的 Figma，直接在 v0 裏就能把界面「畫」出來。另外一個討巧的地方是利用 React/shadcn UI 的組件化能力，它生成的東西直接能整合到自己的代碼裏，是個能用的東西。&lt;/p&gt; 
&lt;p&gt;Vercel 這家公司一直很講究「品味」，他們憑藉在前端領域的深厚積累，把 v0 這個垂類的體驗做得非常好。但可以想見，v0 的流暢體驗背後，肯定有大量的工程優化，比如套用模板、專門微調模型，以及一套精心設計的 workflow 來保證生成效果。&lt;/p&gt; 
&lt;p&gt;一個有意思的動向是他們最近&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvercel.com%2Fblog%2Fv0-composite-model-family" target="_blank"&gt;發佈了自己的模型&lt;/a&gt;，並且開放了 API。他們對此的解釋是：「Frontier models also have little reason to focus on goals unique to building web applications like fixing errors automatically or editing code quickly. You end up needing to prompt them through every change, even for small corrections.」 非常合理，但是這是不是屬於雕花？當然對於 deliver 一個好用的產品來説，雕花是必須的。但我有一點看不懂他們為啥要出 api，可能一方面是回收訓模型的成本，一方面是開始探索讓自己成為一個「被調度的 agent」。&lt;/p&gt; 
&lt;p&gt;但感覺他們並不滿足於只做 UI，他現在的定位已經是 「Full stack vibe coding platform」 了，另外一方面他們也在做 GitHub sync 等和現有代碼整合的工作，而不再是隻能在 v0 平台上生成。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Bolt / Replit / Lovable：「想法到應用」 Vibe Coding platform&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;這一類的產品，其實有點大同小異。它們都是端到端的全棧平台，或者叫 app builder，有個更好聽的名字叫「idea to app」。&lt;/p&gt; 
&lt;p&gt;相比 Cursor，他們解決的痛點一是部署（包括前後端以及數據庫），二是更絲滑的 vibe coding 體驗：我在 Cursor 裏生成的代碼反正也不看，為什麼還要展示 code diff？直接 chat - live preview 才是更直接的體驗。另外它們應該有一定的項目模板成分，讓首條 prompt to app 的體驗感受非常好。&lt;/p&gt; 
&lt;p&gt;雖然它們各自定位可能略有不同，比如開發者可能更喜歡 Bolt，非開發者更喜歡 Lovable（純瞎説），但本質上做的事情是一樣的：讓用戶在接近零手動改代碼的情況下，搞出一個能用的產品來。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Vibe Coding 平台的困境&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這個事情的 tricky 之處在於，如果他們的目標是 deliver 最終產品給用戶，那用戶的期待會很高。在比較嚴肅的場景下，用戶往往需要非常具體的修改，全權讓 AI 來改不一定能達到效果，而且還很費錢。我在用 Cursor 糊前端的時候，感覺加功能很爽，但想微調按鈕位置、佈局、交互邏輯時，它往往就改不對了。&lt;/p&gt; 
&lt;p&gt;雖然有些 vibe coding 平台也提供一定的 online code editor 能力，但真到了需要精細控制的時候，會寫代碼的人可能還是會回到 Cursor，因為那裏最順手。可一旦回到了 Cursor，後續的開發可能就沒必要再回到 vibe coding 平台了。部署的痛點是一次性的，CI/CD 搞好之後，改完代碼 push 一下就行。&lt;/p&gt; 
&lt;p&gt;精細開發的話，Cursor 的 agent 或許能提供更精確的 context。這些 vibe coding 的平台或許也可以把 coding agent 的能力都提上去，但是他們要做的事情太多了，把一個平台打造好得花很多精力。他們在 coding 的技術積累肯定是不如 Cursor 等 for developer 的平台。&lt;/p&gt; 
&lt;p&gt;簡言之，&lt;strong&gt;vibe coding 平台在嚴肅、複雜場景下的上限可能不足。&lt;/strong&gt;&amp;nbsp;如果只做簡單的小項目或者 demo，價值肯定是有的，但有多少用戶願意為此買單，我就不懂了。這個故事，其實在 Vercel/Neon 這類主打「開發者體驗」的 PaaS 平台上已經發生過：大家都説體驗好，但等項目做大以後，很多人還是默默地遷移到了 AWS。&lt;/p&gt; 
&lt;p&gt;再換個角度，我大膽猜想一下：未來，Cursor 完全可以把 vibe coding / app builder 的體驗也做好。開屏界面搞成一個對話框，同時把 live preview、Supabase/Vercel 整合等功能都做了，到時這些平台就更危了。更何況，vibe coding 這個概念本來就是在 Cursor 上火起來的，對那些想 build product 的人來説，「看到代碼」這件事或許並不是多大的阻礙。我大膽預測，一年後 Cursor 可能就會這麼做。&lt;/p&gt; 
&lt;p&gt;也可以看看 Lovable 的&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.lovable.dev%2Ffaq%23what-is-the-difference-between-lovable-and-cursor" target="_blank"&gt;FAQ&lt;/a&gt;&amp;nbsp;裏自己寫的和其他平台/Cursor 的比較：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;大部分的點都是 「just better」，「way more natural」，「Attention to detail」，比較虛的。在普通的產品上或許有説服力，但在 AI coding 競爭這麼激烈的領域，想保持領先太難了。&lt;/li&gt; 
 &lt;li&gt;他們有個 visual editor 其實挺有意思，可以直接所見即所得地修改 UI 元素，一定程度可以解決之前説的微調麻煩的問題。但我試了一下，目前效果還比較一般，只能改改字的內容、字號、margin 之類的，並不能實現拖拽等功能。這個故事長遠看也很好聽 - 甚至可以吃掉 figma？但是感覺技術難度極其大。（讓我想到現在連個真正好用的 mermaid 圖 visual editor 都沒有）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;YouWare：User Generated Software 的激進實驗&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;AI coding 真正讓人興奮的地方，在於它所展現的「自然語言調度算力」的能力。這讓普通人能使用代碼這個工具去解決他們自己的之前無法被滿足的需求：一個&amp;nbsp;&lt;strong&gt;User Generated Software (UGS)&lt;/strong&gt;&amp;nbsp;的時代，正在到來。&lt;/p&gt; 
&lt;p&gt;在所有產品中，&lt;strong&gt;YouWare&lt;/strong&gt;&amp;nbsp;彷彿是一個精準為此而生的平台，它把 UGS 作為了自己唯一的目標。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;把 AI coding 做成內容社區，這對嗎？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我一開始對 YouWare 謹慎不看好。&lt;/p&gt; 
&lt;p&gt;它給我的感覺，是想把 UGC 時代那套（社區、流量、平台）的想法，生搬硬套到 UGS 上來。如果他做一個新的內容平台，是要和抖音、小紅書競爭注意力的，但感覺不如他們好刷。個性化的娛樂需求已經被短視頻充分滿足了。（……嗎？在我説完這句話之後，又突然感覺短視頻還是沒那麼好刷，也總覺得也總找不到符合我偏好的遊戲。）&lt;/p&gt; 
&lt;p&gt;我最初的想法是：UGS 的潛力在於滿足海量的、未被滿足的長尾工具需求。用戶不缺動機，只缺能力。如果是為瞭解決自己的痛點，那用戶幹完活就走了，不一定有分享或分發的慾望（或者在 Twitter/小紅書上發發就夠了），更不會沒事幹去一個工具網站上「刷」來「刷」去。&lt;/p&gt; 
&lt;p&gt;YouWare 認為許多人並不知道自己可以做什麼，因此需要一個平台來激發他們的思考和創造欲，社交元素在此便扮演了激發靈感的角色。&lt;/p&gt; 
&lt;p&gt;v0、Lovable 這些平台，雖然也號稱小白可用，也做一點社區，但它們仍然會把代碼展示給用戶，會彈出 build error，會讓你去連接 Supabase。它們的假設用戶，依然是有一定技術背景的「專業人士」（如產品經理、設計師）。例如這段：「Lovable provides product managers, designers, and engineers with a shared workspace to build high-fidelity apps, collaborate effectively, and streamline the path to production-ready code.」&lt;/p&gt; 
&lt;p&gt;而 YouWare 的激進之處在於，它&lt;strong&gt;完全不給用戶看代碼&lt;/strong&gt;。它面向的 non-coder 是更廣泛的普通人。&lt;/p&gt; 
&lt;p&gt;這有點像小紅書限制圖文的字數，通過一種限制，反而最大化了目標用戶的可用性。對於一個完全不懂技術的人來説，看到 build error 意味着終點，而在 YouWare 裏，這個終點被隱藏了。&lt;/p&gt; 
&lt;p&gt;上面説工具需求和娛樂需求的區別，其實小紅書也可以被看作是一個用戶記錄的工具，而且小紅書火起來很大程度上是它「有用」。&lt;/p&gt; 
&lt;p&gt;在我自己試用過 YouWare 之後（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youware.com%2Fprofile%2FuNYPe0WjpUVfW21IOleyYTlMIWf1" target="_blank"&gt;我生成的東西&lt;/a&gt;），感受到了一些有趣的點&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;確實有點毒性（以及免費額度非常重要）。比如我會有個腦洞就想扔上去看看行不行。如果用其他的平台搞正經項目的話我會更要掂量一下再做。（我心裏預期包含了 debug 成本等，畢竟我是想要一個真的能用的東西。在 mental burden 上，YouWare &amp;lt; Lovable &amp;lt; Cursor，但有用性可能相反）。這種感覺和我用 cursor 的 background agent 時很像，都是「跑跑看，反正不虧」。&lt;/li&gt; 
 &lt;li&gt;它真的隱藏了代碼細節，包括失敗。Lovable 在我試用的時候初次生成報錯的概率還是挺大的（雖然點一下也就修了），而 YouWare 沒出現過。&lt;/li&gt; 
 &lt;li&gt;它鼓勵「玩耍」。YouWare 的 Remix 和 Boost 功能也挺有意思的（先不談效果好不好）。很符合「用戶並不知道他想 build 什麼東西」的出發點，鼓勵探索和再創作。 
  &lt;ul&gt; 
   &lt;li&gt;但突然發現這東西很多家都有了，甚至連 claude artifact 都做了類似的功能，而且完成度高得驚人。）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;一堆關於 YouWare 的零散思考&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Vibe Coder 是什麼樣的人？&lt;/strong&gt;&amp;nbsp;UGC 時代出現了一個新東西叫專業「創作者」，現在的「vibe coder」倒是有點像。但內容創作者的收入主要靠流量和商單，而 vibe coder 更接近獨立開發者，他們想的是 build 自己的產品，然後靠賣軟件或訂閲賺錢。賣軟件終究要靠解決實際需求，然後去各個平台推廣，而不是等着別人在你的 UGS 平台上刷到你（例如去發小紅書而不是等人在 GitHub 上刷到你）。。 ……想到這裏，我開了個腦洞：真要做的話，豈不是應該做&amp;nbsp;&lt;strong&gt;vibe coder 的 OnlyFans&lt;/strong&gt;，而不是 YouTube/Instagram？🤣&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代碼確實有娛樂需求&lt;/strong&gt;（有個東西叫創意編程）…但還是那句話，娛樂需求是要競爭注意力的。再其中的一個小用法是把文章變成交互式網站，滿足教育學習的需求，比如這些： 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fciechanow.ski%2Fbicycle%2F" target="_blank"&gt;https://ciechanow.ski/bicycle/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgarden.bradwoods.io%2F" target="_blank"&gt;https://garden.bradwoods.io/&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fencore.dev%2Fblog%2Fqueueing" target="_blank"&gt;https://encore.dev/blog/queueing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.redblobgames.com%2Fpathfinding%2Fa-star%2Fintroduction.html" target="_blank"&gt;https://www.redblobgames.com/pathfinding/a-star/introduction.html&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Power User vs. 小白用戶：&lt;/strong&gt;&amp;nbsp;這兩者的需求是矛盾的，一個平台很難同時滿足。YouWare 顯然選擇了後者。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;輸出形式的侷限：&lt;/strong&gt;&amp;nbsp;為什麼目前這類 coding 平台（包括 Devin、Lovable 等）的最終產出大多是網站？對於許多小型工具性需求，命令行或桌面應用或許更直接、更高效。當然，從 UX 角度看，網站對普通用戶最友好。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;成本問題&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;作為內容平台，有很大的合規風險和成本問題。但可能也沒那麼難，畢竟 deepseek 都能在國內上了。&lt;/li&gt; 
   &lt;li&gt;host 網站的成本問題。以及不同形式的網站可能有不同的計算需求，對熱門項目可能還得動態 scale。&lt;/li&gt; 
   &lt;li&gt;Agent 的巨大算力成本。相比 UGC，用戶生產內容時其實平台沒什麼成本，但 UGS 則不一樣。相比 Amp 説我的優化目標就是最大效用，這裏 YouWare 的賬就更難算了，這裏有很大的生成效果和成本之間的 tradeoff 要做。 這就引到一個核心問題是它鼓勵用戶創造，那盈利模式是什麼？如果沿用傳統平台的流量廣告模式，考慮到巨大的成本，盈利上限恐怕不高。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;是否要對特定場景優化？&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;例如現在平台上可能有過半用戶會用來寫報告什麼的。但其實這是類 deepresearch 功能，在 YouWare 裏做效果會很一般。Manus/flowith 倒是估計會優化（Manus 最近還真特化了 slides 功能，讓我有點無語，説好的通用 Agent 最後還是做這種東西去了）。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;數據驅動平台演化？&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;我一開始很困惑於為何 YouWare（包括 Manus 等）在能力尚不完善的階段就大力買流量推廣。而不是先將產品效果打磨得更好再推廣。可能是他們已獲得充足融資，急於擴張。&lt;/li&gt; 
   &lt;li&gt;但在產品成熟前就推出，可以幫助他們瞭解用戶到底想 build 什麼，然後針對性地優化。我之前可能低估了社交對於激發用戶創造力的作用。這可能類似於一種進化算法，或者「偉大無法被計劃」的理念：讓用戶自由探索，或許能裂變出意想不到的創新。YouWare 團隊的字節背景，想必會沿用數據驅動的決策方式，通過用戶行為來讓平台演化，或許做着做着就能發現奇妙的突破點。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;YouWare 的未來&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;我相信一家公司是有它的基因的。YouWare 的字節剪映 PM 創始人背景，或許才能想出這麼個玩意兒。&lt;/p&gt; 
&lt;p&gt;雖然上面分析的很多東西可能 Lovable 會往 YouWare 的方向靠，更加隱藏代碼；或者 YouWare 往普通的 Agent 平台上靠，提高 ultility，但期待未來的結果。我覺得 YouWare 的形態未來一定不是現在這樣。同時我越來越覺得 YouWare 的出發點很有意思，或許能做出一些不一樣的事情。這個團隊可能比做 coding 的人更懂創作、平台和消費者，比懂創作者的人更懂 AI coding。&lt;/p&gt; 
&lt;p&gt;YouWare 的目標並非最大化 utility，而是&lt;strong&gt;激發普通人的 creativity&lt;/strong&gt;。當然 utility 也要至少 good enough。&lt;/p&gt; 
&lt;p&gt;一個殘酷的問題是未來會 curosor 的人越來越多了，會不會就吃掉這種傻瓜工具了？可能會想攝影師用相機和普通人用手機拍照可以共存一樣，程序員和 vibe coder 共存。另一個想法是我最近越來越覺得，當前的 AI 正在加劇馬太效應（或許從 200 刀訂閲就開始了）。懂得如何用好 AI、並能負擔得起開銷的人（比如真見過人用 Cursor 一天消耗好幾百刀），與普通人的差距會越來越大。對於那些不那麼樂於動腦、需求表達不清的普通用戶，他們會被「淘汰」嗎？這個未來太殘忍，我有點不願設想，寧願投身對抗潮流。從這個角度看，YouWare 這種致力於服務廣大普通人的嘗試讓我覺得很有價值。&lt;/p&gt; 
&lt;p&gt;當然雖然 YouWare 很有想法。但認知能否成功轉化為可落地的產品並實現商業價值，尚存不確定性。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Big picture：行業格局/技術方向分析&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;在逐一審視了牌桌上的這些玩家之後，讓我們向後退一步，看看整個 AI coding 領域的全景。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;賽道細分&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;AI coding 還可以細分為幾個小方向。一個產品可能會跨多個方向&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI-assisted Coding:&lt;/strong&gt;&amp;nbsp;以&amp;nbsp;&lt;strong&gt;Cursor&lt;/strong&gt;&amp;nbsp;和&amp;nbsp;&lt;strong&gt;GitHub Copilot&lt;/strong&gt;&amp;nbsp;為代表，它們是現有開發工作流的「增強器」，致力於讓專業開發者寫代碼更快、更爽。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end Agent&lt;/strong&gt;&amp;nbsp;以&amp;nbsp;&lt;strong&gt;Devin&lt;/strong&gt;、&lt;strong&gt;Claude Code&lt;/strong&gt;&amp;nbsp;和&amp;nbsp;&lt;strong&gt;Amp&lt;/strong&gt;&amp;nbsp;為代表，它們的目標是成為能獨立完成任務的「初級工程師」，將開發者從執行者提升為任務的分配者和審查者。Agent 同時也可能是作為合作者，特別是 Claude Code 這樣 CLI based agent，我既可以和他 pair programming，也可以請他幫我幹活。 到 2025 年 Q3，硅谷將形成共識，認為 Agent 可以達到甚至替代 mid-level software engineer 的水平。評論區對此多持懷疑態度。我的看法是，Agent 或許不一定會完全「替代」，但它極有可能成為 mid-level 工程師的得力「合作伙伴」。從這個角度理解，我認為其預測是相當有道理的。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vibe Coding / UGS:&lt;/strong&gt;&amp;nbsp;以&amp;nbsp;&lt;strong&gt;v0&lt;/strong&gt;&amp;nbsp;和&amp;nbsp;&lt;strong&gt;YouWare&lt;/strong&gt;&amp;nbsp;為代表，它們試圖將代碼的能力賦予非開發者，讓他們通過自然語言創造應用和工具，一個更偏向「產品原型」，一個則更激進地走向「內容社區」。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;「半成品」的尷尬現狀，依然不夠理想的成本與性能&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;我們必須承認一個現實：&lt;strong&gt;Agent 依然是一個「半成品」&lt;/strong&gt;。它的效果還不足以真正端到端地交付一個完美的結果，有時甚至不如我們自己動手來得省事。（比如還是手動調 button 爽）&lt;/p&gt; 
&lt;p&gt;但我們也能清晰地看到 agent 的進化路徑：從最早在 ChatGPT 裏手動複製粘貼，到後來在 IDE 裏進行單輪對話，再到如今的 Cursor Background Agent 和 Claude Code，&lt;strong&gt;Agent 能夠獨立工作的時間越來越長，做事的數量和質量都越來越高，這無疑是一個不可逆轉的趨勢。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;或許我們應該換個心態：把它想象成一個外包合作方。你把任務派給它，讓它幹一段時間，然後你來檢查、給反饋，而不是指望它一次性搞定。這和我們與人類外包商（也就是「Agent」）的合作模式，並無二致。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;成本的詛咒，與模型的賭局&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;與此同時，Agent 是個非常貴的東西。這出了讓用戶不敢大規模使用之外，也讓 agent 應用公司陷入兩難：是繼續不計成本地提升效果，還是轉而研究各種「奇技淫巧」「雕花」以降本增效？但存在性能和成本的 tradeoff。我不知道是否可能同時兼顧兩者，比如團隊的一部分專注於性能提升，另一部分研究成本優化。如果完全不考慮成本控制，高昂的價格也可能會嚇退用戶。但 AI Agent 公司是否真的那麼急於獲客？或許也不然。&lt;/p&gt; 
&lt;p&gt;這裏存在的一個更大的變數：如果上游的 LLM 廠商大幅降價，那麼之前在成本優化上所做的努力，比如辛辛苦苦優化了 30%-50%，就可能因為外部因素而顯得「白費功夫」。當然，也存在原廠優化不力，或者他們轉而發展自家 Agent 業務的可能性。因此，對於 AI Agent 創業公司而言，其決策中充滿了需要「賭」的成分。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Agent 需要哪些能力？怎麼做 coding agent？&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;從各個產品的探索中，我們可以窺見一個好的 Agent 需要具備哪些能力：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Memory/知識庫&lt;/strong&gt;：例如能自動學習 Cursor rule。（devin/manus 都有了）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Long context 能力&lt;/strong&gt;：indexing &amp;amp; RAG？ 
  &lt;ul&gt; 
   &lt;li&gt;我對這點的作用是有點存疑的。現在進入 Agent 時代之後，Agent 可以自己去 grep 代碼找到 context。而且這和我自己開發的流程也很像。還是大量依賴字符串搜索，並不是什麼聰明的辦法。但其實 grep 僅限於知道要改什麼的時候。「xxx 是怎麼 work 的」這種模糊的問題就不行了。&lt;/li&gt; 
   &lt;li&gt;但對 long context 的考驗其實挺難驗證的，需要用的很深才能知道到底什麼水平。我也還沒有用出感覺來。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task 能力&lt;/strong&gt;&amp;nbsp;之前我覺得必須需要外化的 todo list，但是現在好像 claude 開始內化這種能力了（但直覺上還是外部的更好？）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;主動溝通與 Interaction&lt;/strong&gt;:&amp;nbsp; 一個好的 Agent 不應該你説什麼就做什麼。它應該像一個好的乙方，會反問、會澄清意圖、會評估風險（比如 Devin 的「置信度評級」）。例如「我要做一個 ppt」，就問用戶你有沒有已經有的素材，或者課本資料提供等。deep research 類產品在這這事情上做的也不錯。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;話説回來，做好 coding agent 是不是需要你自己用 coding agent 用的很好？&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;最後的思考：我們與 AI 的關係&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;那自然語言調度算力與 User-Generated Software 這個概念，可能 somehow 已成為行業共識，但其具體的實現形式，則遠未達成一致。&lt;/p&gt; 
&lt;p&gt;聊了這麼多，最後還是回到我們自己身上。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;普通人到底該怎麼選？&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;總的來説，現在所有的工具都處於一個「still early, but already useful (if used correctly)」的階段。它們在簡單的小活兒或生成 demo 上表現不錯，但在複雜場景下，則非常考驗使用者的「手藝」。&lt;/p&gt; 
&lt;p&gt;這門「手藝」既包括 prompt engineering 的技巧，也包括對代碼和 Agent 工作原理的理解。「瞭解 ai 能力邊界」也是個有點説爛了的東西。所以，未來能把 Agent 用得最好的，大概率還是專業人士。這就像專業攝影師和普通人的手機拍照，工具模糊了專業間的邊界（比如工程師可以搞設計，PM 可以寫 demo），但最終還是拉開了上限。&lt;/p&gt; 
&lt;p&gt;Agent 可能是越用越好用的東西，需在團隊裏一起探索最佳實踐、積累 prompt 技巧和知識庫，本身就是一種投資。&lt;/p&gt; 
&lt;p&gt;但我也時常懷疑，研究這些東西會不會是徒勞？等到模型能力到達某個奇點，我們直接擁抱最終形態就行了，中間的各種探索和使用經驗都會過時。這或許是對的。多説無益，我也不再想按着別人的頭讓他用 AI，but I just can't help playing with it, it's fun! 😁🤪&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;當 LLM 生成的能力趨向無限的時候，我們要用他來生成什麼？&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;一個更深層的問題：AI 的發展和我到底有什麼關係？就像我不怎麼看論文，感覺離我很遠。雖然 ChatGPT 讓我學習任何東西都變得容易多了，我動不動想到啥就要和它探討半天，但我反而更累了。我真的需要了解這麼多東西嗎？&lt;/p&gt; 
&lt;p&gt;Coding Agent 的發展能讓我寫越來越多的代碼，那我要把那些東西都做出來嗎？當生成的能力趨向無限時，我們到底要用它來生成什麼？&lt;/p&gt; 
&lt;p&gt;YouWare 這樣的產品或許是一種答案。&lt;/p&gt; 
&lt;p&gt;又或者，這本身就是一個不存在的問題，就像實現可控核聚變之後應該怎麼辦？能人人開上高達嗎？&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354572</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354572</guid>
      <pubDate>Sun, 11 May 2025 03:23:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>FreeBSD 14.3 正式發佈，包含網絡驅動程序更新和 OpenZFS 更新</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;作為 FreeBSD 15 在今年晚些時候發佈前的過渡，FreeBSD 14.3 穩定版今日正式發佈，這是 stable/14 分支的第四個發行版本。&lt;/p&gt; 
&lt;p&gt;FreeBSD14.3 將 FreeBSD 15 中的多項改進移植回 FreeBSD 14 系列，並進行了一些例行軟件包更新和其他修復。&lt;/p&gt; 
&lt;p&gt;FreeBSD 14.3-RELEASE 的一些亮點包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新 ZFS 支持以支持 OpenZFS 2.2.7。&lt;/li&gt; 
 &lt;li&gt;基於 Linux 6.14 內核代碼合併 Realtek RTW88 和 RTW89 WiFi 驅動程序。&lt;/li&gt; 
 &lt;li&gt;LinuxKPI 代碼已改進，支持加密卸載以及 802.11n 和 802.11ac 標準。&lt;/li&gt; 
 &lt;li&gt;Intel IX 以太網驅動程序增加了對 x550 1000BAS-BX SFP 模塊的支持。&lt;/li&gt; 
 &lt;li&gt;Thor2 PCI ID 已添加到 Broadcom NetXtreme 「BNXT」 驅動程序中，並支持 400G 速度光模塊。&lt;/li&gt; 
 &lt;li&gt;XZ 5.8.1、OpenSSH 9.9p2、OpenSSL 3.0.16 以及許多其他軟件包更新。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Syscons 作為舊版系統控制枱驅動程序現已棄用。Syscons 與 UEFI 不兼容，不支持 UTF-8，並且被 Giant 鎖定。&lt;/p&gt; 
&lt;p&gt;請訪問&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Freleases%2F14.3R%2Fannounce%2F"&gt;FreeBSD.org&lt;/a&gt;&amp;nbsp;下載並瞭解更多有關今日發佈的 FreeBSD 14.3 版本的詳細信息。&lt;/p&gt; 
&lt;p&gt;可以從以下站點下載 FreeBSD 14.3-RELEASE：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.freebsd.org%2Freleases%2FISO-IMAGES%2F14.3%2F"&gt;https://download.freebsd.org/releases/ISO-IMAGES/14.3/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FreeBSD 14.3-RELEASE 虛擬機鏡像可以從以下位置下載：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.freebsd.org%2Freleases%2FVM-IMAGES%2F14.3-RELEASE%2F"&gt;https://download.freebsd.org/releases/VM-IMAGES/14.3-RELEASE/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FreeBSD 14.3-RELEASE BASIC-CI 鏡像可以從以下位置下載：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.freebsd.org%2Freleases%2FCI-IMAGES%2F14.3-RELEASE%2F"&gt;https://download.freebsd.org/releases/CI-IMAGES/14.3-RELEASE/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FreeBSD 14.3-RELEASE OCI 容器鏡像可以從以下位置下載：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.freebsd.org%2Freleases%2FOCI-IMAGES%2F14.3-RELEASE%2F"&gt;https://download.freebsd.org/releases/OCI-IMAGES/14.3-RELEASE/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;並且也可在 Docker 和 GitHub 容器存儲庫中使用。&lt;/p&gt; 
&lt;p&gt;有關安裝 FreeBSD 或將現有計算機更新至 14.3-RELEASE 的説明，請參閲：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.freebsd.org%2Freleases%2F14.3R%2Finstallation%2F"&gt;https://www.FreeBSD.org/releases/14.3R/installation/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FreeBSD 14.3-RELEASE 將支持到 2026 年 6 月 30 日。上一發行版 FreeBSD 14.2-RELEASE 將於 2025 年 9 月 30 日終止支持。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354571/freebsd-14-3</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354571/freebsd-14-3</guid>
      <pubDate>Sun, 11 May 2025 03:13:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>AI 造物社區外包需求——智能小動物超聲培訓系統</title>
      <description/>
      <link>https://www.oschina.net/ai-creation/details/2018</link>
      <guid isPermaLink="false">https://www.oschina.net/ai-creation/details/2018</guid>
      <pubDate>Sun, 11 May 2025 03:03:00 GMT</pubDate>
    </item>
    <item>
      <title>DeepSeek 前高管祕密創業，新 AI Agent 項目已獲頂級 VC 押注</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;據虎嗅消息&lt;/span&gt;&lt;span&gt;，國內大模型公司 DeepSeek 的一位核心高管已於半年前悄然離職創業，並計劃在 2025 年聖誕節前後推出其&lt;span&gt;首款&lt;/span&gt;Agent 產品。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;有接近人士向虎嗅透露，該高管曾擔任 DeepSeek 的「CTO」角色，不過也有知情人指出，DeepSeek 內部架構中並無明確設置「CTO」職位。該職位在名義上可能並不存在，但確有高管承擔類似的技術統籌與研發決策職責。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="260" src="https://oscimg.oschina.net/oscnet/up-1aaf0f82dce771f012b5835523640f473d1.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;另據可靠消息，這一創業項目目前已獲得某頭部 VC 的融資支持，具體金額暫未披露。從時間線來看，項目正在加速推進，預計將在年底正式對外發布，瞄準 AI Agent 賽道的新一輪競爭。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;據悉，這位前 DeepSeek 高管在任期間，曾主導核心技術方向，並深度參與公司關鍵產品的研發推進。他的離職及創業，或意味着國內 AI 大模型生態中，一場新的中堅力量正在形成。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;當前，大模型廠商紛紛將注意力從模型能力轉向實際落地，AI Agent 被視為最具潛力的應用場景之一。隨着創業者與資本的持續湧入，這一賽道的競爭也日益升溫。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354565</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354565</guid>
      <pubDate>Sun, 11 May 2025 03:02:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>WWDC25 面向開發者的更新亮點：基礎模型框架、Xcode 26、Swift 6.2、App Intents……</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;u&gt;&lt;a href="https://www.oschina.net/news/354559"&gt;除了全新的系統&lt;/a&gt;&lt;/u&gt;，蘋果在 WWDC25 上還發布了許多適用於開發者工具的新技術與改進：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基礎模型框架&lt;/li&gt; 
 &lt;li&gt;Xcode 26&lt;/li&gt; 
 &lt;li&gt;App Intents&lt;/li&gt; 
 &lt;li&gt;Swift 6.2&lt;/li&gt; 
 &lt;li&gt;Containerization 框架&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;strong&gt;基礎模型框架 (&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#474747"&gt;Foundation Models Framwork&lt;/span&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;新的基礎模型框架可使所有開發者使用免費的 AI 推理，為用戶帶來基於 Apple 智能、支持離線使用且保護隱私的智能新體驗。&lt;/p&gt; 
&lt;p&gt;由於該框架原生支持 Swift，開發者僅需使用區區三行代碼，即可對 Apple 智能模型進行輕鬆調用。框架中自帶引導式生成和工具調用等技術，可供開發者將生成式能力輕鬆植入現有 app 內部。例如，開發者 Automattic 將該框架應用於旗下手記寫作 app Day One，為用戶提供以隱私為中心的智能功能。&lt;/p&gt; 
&lt;p&gt;「基礎模型框架幫助我們重新設想了手記的可能。」Automattic Day One 主管 Paul Mayne 表示，「現在我們能夠將智能功能與隱私保護相結合，充分體現對用戶的高度重視。」&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Xcode 26&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Xcode 26 滿載有助於開發者將構想化為現實的智能功能與體驗。&lt;/p&gt; 
&lt;p&gt;開發者可以將大語言模型直接接入現有編程工具，編寫代碼、運行測試和製作文檔；對設計進行迭代；修正錯誤；以及更多操作。開發者也可選用最符合自身需求的模型，例如使用來自其他提供商的 API 密鑰，或在搭載 Apple 芯片的 Mac 上運行本地模型。&lt;/p&gt; 
&lt;p&gt;Coding Tools 幫助開發者順利推進工作流，更高效地完成任務。開發者可在代碼中的任何位置調用 Coding Tools，該工具能夠提供生成預覽或 Playground 等建議操作，或解決特定問題，也可以直接為其他任務生成具體的提示詞。&lt;/p&gt; 
&lt;p&gt;Xcode 26 還推出其他有助於開發者保持專注、提高工作效率的功能，包括重新設計的導覽體驗、對本地化目錄作出改進，以及對語音控制功能的進一步支持，例如聽寫 Swift 代碼和完全通過語音方式導覽 Xcode 界面。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;App Intents&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;開發者可以藉助 App Intents 將 app 的操作和內容與貫穿各個平台的系統體驗深度整合， 包括 Siri、聚焦、小組件、控制等等。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Swift 6.2&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Swift 6.2 推出多項強大功能，以提升性能、併發及與 C++、Java 與 JavaScript 等其他語言的互操作性。通過與開源社區的合作，Swift 6.2 現已支持 WebAssembly。&lt;/p&gt; 
&lt;p&gt;基於 Swift 6 嚴格的併發檢查功能，Swift 6.2 簡化了單線程代碼的寫作。開發者現可將模塊或獨立文件配置為默認運行於主 Actor 環境，從而省去額外註解的必要。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Containerization 框架&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Containerization 框架賦予開發者直接在 Mac 上創建、下載或運行容器映像的能力。其基於針對 Apple 芯片優化的開源框架構建，能夠對容器映像進行安全隔離。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f12698847fd251962a8dabcb596a127209c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;詳情查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fnewsroom%2F2025%2F06%2Fapple-supercharges-its-tools-and-technologies-for-developers%2F" target="_blank"&gt;https://www.apple.com.cn/newsroom/2025/06/apple-supercharges-its-tools-and-technologies-for-developers/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354563/wwdc25-technologies-for-developers</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354563/wwdc25-technologies-for-developers</guid>
      <pubDate>Sun, 11 May 2025 02:53:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>WWDC25 開幕：多款新系統亮相、引入全新設計語言</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;6 月 10 日，蘋果舉辦 WWDC25 全球開發者大會，並在首場發佈會公佈 iOS 26、iPadOS 26、watchOS 26、macOS Tahoe 26、visionOS 26、tvOS 26 等多款新系統。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c14d9b9ed96cdf3a70d31288b4550dec672.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;更多內容查看蘋果官方新聞稿：&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fcn%2Fnewsroom%2F2025%2F06%2Fapple-introduces-a-delightful-and-elegant-new-software-design%2F" target="_blank"&gt;Apple 推出靈動活潑、賞心悅目的新軟件設計&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fnewsroom%2F2025%2F06%2Fmacos-tahoe-26-makes-the-mac-more-capable-and-productive-than-ever%2F" target="_blank"&gt;macOS Tahoe 26 讓 Mac 更強大、更高效、更智能&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fnewsroom%2F2025%2F06%2Fipados-26-introduces-powerful-new-features-that-push-ipad-even-further%2F" target="_blank"&gt;iPadOS 26 推出強大新功能，令 iPad 特有的功能與多用性再上一層樓&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fnewsroom%2F2025%2F06%2Fapple-elevates-the-iphone-experience-with-ios-26%2F" target="_blank"&gt;Apple 推出 iOS 26，再次提升 iPhone 體驗&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fnewsroom%2F2025%2F06%2Fwatchos-26-delivers-more-personalized-ways-to-stay-active-and-connected%2F" target="_blank"&gt;watchOS 26 以更具個性的方式助力用戶充滿活力、保持健康、聯絡無間&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.apple.com.cn%2Fnewsroom%2F2025%2F06%2Fvisionos-26-introduces-powerful-new-spatial-experiences-for-apple-vision-pro%2F" target="_blank"&gt;visionOS 26 為 Apple Vision Pro 帶來全新強大空間體驗&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;新系統全部採用名為「Liquid Glass（液態玻璃）」的全新設計語言，是繼 iOS 7 後的又一次重大設計革新，並按照年份將所有系統的版本命名統一更改為 26。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-bf6304b3294602fd26c3e07a13b98afb90d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="800" src="https://static.oschina.net/uploads/space/2025/0610/103619_DRmE_2720166.png" width="800" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-070fa90d123030e18c55aab3b8db5ec5228.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-c5f83aec051267d80ebd13b87fa67d34a6d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-5519b3f2d071f7e311837e5cdbb48d54bc6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;設計風格更改之外，iOS 26 重新設計了多款系統應用佈局，進一步整合了 Apple Intelligence 功能，併為包括 CarPlay 在內的多項內置應用與服務新增功能。watchOS 26 引入了新手勢與更智能的智能疊放預測。macOS Tahoe 26 大幅提升了聚焦搜索的功能性。iPadOS 26 帶來了全新的窗口系統、文件應用與預覽應用等。&lt;/p&gt; 
&lt;ul&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354559</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354559</guid>
      <pubDate>Sun, 11 May 2025 02:37:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>任正非：將來是千百種開源軟件滿足整個社會需要</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;近日，在深圳華為總部，圍繞大眾關心的一些熱點話題，人民日報記者一行與華為首席執行官任正非面對面交流。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;「不去想困難，幹就完了，一步一步往前走」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：面對外部封鎖打壓，遇到很多困難，心裏怎麼想？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：沒有想過，想也沒有用。不去想困難，幹就完了，一步一步往前走。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：昇騰芯片被「警告」使用風險，對華為有什麼影響嗎？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：中國做芯片的公司很多，許多都做得不錯，華為是其中一家。美國是誇大了華為的成績，華為還沒有這麼厲害。要努力做才能達到他們的評價。我們單芯片還是落後美國一代，我們用數學補物理、非摩爾補摩爾，用羣計算補單芯片，在結果上也能達到實用狀況。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：如果説有困難，主要困難是什麼？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：困難就困難嘛，什麼時候沒有困難？刀耕火種的時候不困難嗎？石器時代不困難嗎？人類用石器的時候，哪能想到有高鐵。中國在中低端芯片上是可以有機會的，中國數十、上百家芯片公司都很努力。特別是化合物半導體機會更大。硅基芯片，我們用數學補物理、非摩爾補摩爾，利用集羣計算的原理，可以達到滿足我們現在的需求。軟件是卡不住脖子的，那是數學的圖形符號、代碼，一些尖端的算子、算法壘起來的，沒有阻攔索。困難在我們的教育培養、人才梯隊的建設。中國將來會有數百、數千種操作系統，支持中國工業、農業、醫療等的進步。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：現在對華為讚揚的聲音很多，對華為的認同度很高。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：説我們好，我們壓力也很大。罵我們一點，我們會更清醒一點。我們做的是商品，人們使用就會有批評，這是正常的。我們允許人家罵。只要講真話，即使是批評，我們也支持。贊聲與罵聲，都不要在意，而要在乎自己能不能做好。把自己做好，就沒有問題。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：從您面對困難、批評的心態，感受到您有一顆強大的內心，就是不在乎是表揚還是批評，而是堅定做好自己的事。這應該是華為能走到今天的一個重要原因。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：説我們好的還是太多了，大家更多要去理解搞理論研究的人，他們曲高和寡，老百姓不瞭解，而且他們要幾十年、上百年才看得見貢獻。無端指責他們，是不利於國家長遠發展的。我們要理解支持搞理論工作的。我們要理解他們的胸懷，他們偉大的默默無聞，才是我們國家的希望。不要捧一個壓一個，搞理論研究的是國家未來的希望。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;「理論科學家是孤獨的，我們要有戰略耐心，要理解他們」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：怎麼看基礎理論研究？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：當我國擁有一定經濟實力的時候，要重視理論特別是基礎理論的研究。基礎研究不止 5—10 年，一般要 10 年、20 年或更長的時間。如果不搞基礎研究，就沒根。即使葉茂，欣欣向榮，風一吹就會倒的。買國外的產品很貴，因為價格裏面就包含他們在基礎研究上的投入。所以，中國搞不搞基礎研究，也要付錢的，能不能付給自己搞基礎研究的人。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：對基礎研究，人們可能一時難以理解，會問研究這個有什麼用，能產生什麼效益。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：科學的突破，世界上理解的人本來就少，不理解的人就不要去評價。愛因斯坦發現光線會彎曲，是一百年後再證實的。貴州有個農學家羅登義，上世紀四十年代，他分析研究水果蔬菜營養成分的時候，發現一種維生素含量很高的野果子刺梨。中國那時還在抗戰時期，社會教育水平還很低，沒幾個人懂。後來寫了一篇論文，説刺梨是維 C 之王。經歷了近百年，貴州把它做成了一種天然富含維生素的刺梨飲料，維生素飲料中的奢侈品，近百元一瓶，受到追捧，刺梨產業成為農民脫貧致富的渠道。人們才真實認識了在抗日烽火時，在一張破桌旁的羅登義。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：很多研究成果看似一時無關痛癢，最後往往都有大用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：理論科學家是孤獨的，我們要有戰略耐心，要理解他們。屠呦呦做青蒿素是一樣的。還有「探索創新、至誠報國」的黃大年也是一樣的。他們頭腦中的符號、公式、思維，世界上能與他們溝通的只有幾個人。對理論科學家要尊重，因為我們不懂他的文化，社會要寬容，國家要支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：基礎研究週期會很漫長，但企業是需要講效益的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：我們一年 1800 億投入研發，大概有 600 億是做基礎理論研究，不考覈。1200 億左右投入產品研發，投入是要考覈的。沒有理論就沒有突破，我們就趕不上美國。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：這是一種長期主義，聽説華為就有個「黃大年茶思屋」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：黃大年是個偉大的科學家，我國是在海灣戰爭中發現這個人的。美軍在直升機下有一個吊艙，探測薩達姆埋在沙漠裏的武器，一開戰就準確把它消滅了。再一找，才知道這吊艙是中國人做的，黃大年在英國大學做的一個探礦吊艙，北約用來做武器用。他辭職回國做了吉林大學老師。他用自己的錢，向學校要了一間 40 平米的房子，開了一個茶思屋負責提供免費咖啡，開展「一杯咖啡吸收宇宙能量」。我們得到他家族的授權，利用他的名字，做了一個黃大年茶思屋非盈利的網絡平台，免費讓大家查閲世界的科技信息。同時，對基礎研究開放喇叭口，和各大院校合作。這些都是戰略性投入，不考覈的。基礎理論這一塊，我們內部建立一個機制，什麼時候能做出來不知道，對科學家也不做要求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;「社會主義的一個目的就是為了發展社會」&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：美國經濟學家理查德·沃爾夫等專家認為，美國為何沒有像中國那樣發達的高鐵系統，主要是因為美國走的是資本主義道路，做什麼都要賺錢。中國走的是社會主義的道路，國家主張的是社會效益，高鐵、重載鐵路、先進的電力網絡、發達的高速公路以及通往鄉村的水泥路，遍佈各處的水利設施、星羅棋佈的發電廠……這些並不賺錢，但墊起一個發達的社會基礎，為工業、農業現代化作出了貢獻，體現的是國有企業的社會價值。而對有競爭的商品實行市場化，通過市場的競爭來調節，使其實現商業價值，依法納稅貢獻社會。對此，您怎麼看？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：為什麼不賺錢的事，只有社會主義做？社會主義的一個目的就是為了發展社會。我國搞的社會主義市場經濟體制是偉大的壯舉。從基礎設施建設看，我們也只能走社會主義市場經濟的道路，不然高鐵、高速公路、水壩……這些東西都建不起來。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：您對人工智能的未來前景怎麼看？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：人工智能也許是人類社會最後一次技術革命，當然可能還有能源的核聚變。人工智能發展要經歷數十年、數百年。不要擔心，中國也有很多優勢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：您怎麼看這些優勢？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：中國有數億青少年，他們是國家的未來。總書記講過，一個國家、一個民族的強盛，總是以文化興盛為支撐的。人工智能在技術上的要害，是要有充足的電力、發達的信息網絡。發展人工智能要有電力保障，中國的發電、電網傳輸都是非常好的，通信網絡是世界最發達的，東數西算的理想是可能實現的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：其他優勢呢？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：芯片問題其實沒必要擔心，用疊加和集羣等方法，計算結果上與最先進水平是相當的。軟件方面，將來是千百種開源軟件滿足整個社會需要。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：怎麼看中國的未來？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：弗裏德曼離開我們公司，自己買了一張二等座的高鐵票，去感受中國。後來寫了篇文章《我看到了未來，它不在美國》。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：我們看過這篇文章，他認為：「中國製造業像今天這樣強大的原因，不僅在於它的高質量，能更便宜地生產東西，也在於它能更快、更好、更智能地生產東西，而且正在越來越多地將人工智能融入產品中。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：從根本上説，算法不掌握在 IT 人手裏面，而是掌握在電力專家、基建專家、煤炭專家、醫藥專家、各類行業專家……手裏面。實踐層面看，中國製造業人工智能運用非常快，會誕生很多中國模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：民營企業發展，需要國家提供什麼支持？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：法治化、市場化，政府依法依規行政。企業主要是價值創造、技術突破，遵紀守法，依法納稅。這個和諧的發展模式，就會讓經濟活力一點點地散發出來。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;問：怎麼看待開放與發展？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;答：國家越來越開放，開放會促使我們更加進步。國家在黨的領導下，行政上是統一的，政令是通達的，逐步形成統一的大市場是可能的，一定會突破所有的封鎖，實現偉大的復興。 (來源:人民日報)&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354552</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354552</guid>
      <pubDate>Sun, 11 May 2025 02:12:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Solon Flow Helloworld（通用流編排框架）</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#24292e; text-align:start"&gt;探索視頻：&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?isOutside=true&amp;amp;aid=114633566389996&amp;amp;bvid=BV1mLTAzsEBV&amp;amp;cid=30342844001&amp;amp;p=1" style="box-sizing: border-box; color: rgb(36, 41, 46); font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;" width="700" referrerpolicy="no-referrer"&gt;&lt;/iframe&gt;&lt;/p&gt; 
&lt;h3&gt;1、新建項目&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;可以用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Fstart%2F" target="_blank"&gt;Solon Initializr&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;生成一個模板項目。新建項目之後，添加依賴&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;org.noear&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;groupId&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span&gt;&amp;lt;&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;solon-flow&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;artifactId&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span&gt;&amp;lt;/&lt;span style="color:#e45649"&gt;dependency&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2、添加配置&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;添加應用配置：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;solon.flow:&lt;/span&gt;
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"classpath:flow/*.yml"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;添加流處理配置（支持 json 或 yml 格式），例：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;flow/demo1.chain.yml&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;&lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;
&lt;span style="color:#986801"&gt;layout:&lt;/span&gt; 
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n1"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"start"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n2"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"activity"&lt;/span&gt;, &lt;span style="color:#986801"&gt;link:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;task:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"System.out.println(\"hello world!\");"&lt;/span&gt;}
  &lt;span style="color:#4078f2"&gt;-&lt;/span&gt; { &lt;span style="color:#986801"&gt;id:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"n3"&lt;/span&gt;, &lt;span style="color:#986801"&gt;type:&lt;/span&gt; &lt;span style="color:#50a14f"&gt;"end"&lt;/span&gt;}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;示意圖：&lt;/p&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//730d1e295b9510105280a40cb44b7888.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;3、代碼應用&lt;/h3&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;註解模式&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Component;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.annotation.Inject;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.core.bean.LifecycleBean;
&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.flow.FlowEngine;

&lt;span style="color:#4078f2"&gt;@Component&lt;/span&gt;
&lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;class&lt;/span&gt; &lt;span style="color:#c18401"&gt;DemoCom&lt;/span&gt; &lt;span style="color:#a626a4"&gt;implements&lt;/span&gt; &lt;span style="color:#c18401"&gt;LifecycleBean&lt;/span&gt; {
    &lt;span style="color:#4078f2"&gt;@Inject&lt;/span&gt; 
    &lt;span style="color:#a626a4"&gt;private&lt;/span&gt; FlowEngine flowEngine;
    
    &lt;span style="color:#4078f2"&gt;@Override&lt;/span&gt;
    &lt;span style="color:#a626a4"&gt;public&lt;/span&gt; &lt;span style="color:#a626a4"&gt;void&lt;/span&gt; &lt;span style="color:#4078f2"&gt;start&lt;/span&gt;&lt;span&gt;()&lt;/span&gt; &lt;span style="color:#a626a4"&gt;throws&lt;/span&gt; Throwable {
        flowEngine.eval(&lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#24292e; text-align:start"&gt;原生 Java 模式&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-java"&gt;&lt;span style="color:#a626a4"&gt;import&lt;/span&gt; org.noear.solon.flow.FlowEngine;

&lt;span style="color:#986801"&gt;FlowEngine&lt;/span&gt; &lt;span style="color:#986801"&gt;engine&lt;/span&gt; &lt;span&gt;=&lt;/span&gt; FlowEngine.newInstance();

&lt;em&gt;//加載鏈配置&lt;/em&gt;
engine.load(&lt;span style="color:#50a14f"&gt;"classpath:flow/*"&lt;/span&gt;);

&lt;em&gt;//執行&lt;/em&gt;
engine.eval(&lt;span style="color:#50a14f"&gt;"c1"&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354549</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354549</guid>
      <pubDate>Sun, 11 May 2025 02:10:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>連接關鍵點：使用 ES|QL 聯接實現更豐富的可觀測性洞察</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;作者：來自 Elastic&amp;nbsp;&lt;/span&gt;Luca Wintergerst&lt;/p&gt; 
&lt;p&gt;&lt;img height="539" src="https://oscimg.oschina.net/oscnet/up-615c860617e5f908110763171caf738b13c.png" width="1041" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;ES|QL 的 LOOKUP JOIN 現已進入技術預覽階段，它允許你在查詢時對日誌、指標和追蹤進行豐富處理，無需在攝取時進行&lt;/span&gt;非規範化&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;。動態添加部署、基礎設施或業務上下文，減少存儲佔用，加速 Elastic Observability 中的根本原因分析。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;連接關鍵點：使用 ES|QL 聯接實現更豐富的可觀測性洞察&lt;/h2&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;你可能已經看到我們最近發佈的關於&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.elastic.co%2Fblog%2Fesql-lookup-join-elasticsearch" target="_blank"&gt;Elasticsearch 中引入 SQL 風格聯接&lt;/a&gt;的公告，也就是 ES|QL 的 LOOKUP JOIN 命令（目前處於技術預覽階段！）。雖然那篇文章介紹了基礎內容，但現在我們將從可觀測性的角度更深入地探討這一功能。這項新的聯接能力，如何幫助工程師和 SRE 更好地理解日誌、指標和追蹤數據，同時通過減少數據反規範化來提升 Elasticsearch 的存儲效率？&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;span style="background-color:#eef0f4; color:#4f4f4f"&gt;：在深入細節之前，需要再次強調，這項功能目前依賴一個特殊的查找索引（lookup index）。目前&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;還無法&lt;/strong&gt;&lt;span style="background-color:#eef0f4; color:#4f4f4f"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;對任意索引進行 JOIN 操作。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;可觀測性不只是收集數據，更重要的是理解數據。很多時候，原始遙測數據 —— 例如一條日誌、一項指標或一個追蹤片段——缺乏快速診斷或影響評估所需的完整上下文。我們需要關聯數據、使用業務或基礎設施上下文對其進行豐富，並提出更高級的問題。&lt;/p&gt; 
&lt;p&gt;傳統上，在 Elasticsearch 中實現這些能力的方法包括在攝取時對數據進行非規範化（例如通過使用 enrich processor 的 ingest pipeline），或在客戶端執行聯接。&lt;/p&gt; 
&lt;p&gt;通過在數據流入時添加必要的上下文（如主機詳情或用戶屬性），每個文檔在進入索引時就已準備好用於查詢和分析，無需後續額外處理。這種方法在很多場景下運行良好，特別是當引用數據變化緩慢或豐富字段對幾乎每次查詢都至關重要時。&lt;/p&gt; 
&lt;p&gt;但隨着環境變得越來越動態和多樣化，頻繁更新引用數據（或避免在每個文檔中重複存儲字段）的需求也暴露了一些權衡和限制。&lt;/p&gt; 
&lt;p&gt;在 Elasticsearch 8.18 和 9.0 中引入的 ES|QL LOOKUP JOIN 提供了另一種更加靈活的選擇，適用於那些需要實時查找和最小重複數據的場景。這兩種方法 —— 攝取時豐富與查詢時 LOOKUP JOIN —— 根據更新頻率、查詢性能和存儲考量等不同用例需求，可以互為補充並同時有效。&lt;/p&gt; 
&lt;h2&gt;為什麼在可觀測性中使用 Lookup Join&lt;/h2&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;code&gt;Lookup join&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;保持了靈活性。你可以在查詢時根據需要動態決定是否查找額外信息來輔助調查。&lt;/p&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;以下是一些示例：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;&lt;strong&gt;部署信息&lt;/strong&gt;：是哪個版本的代碼在產生這些錯誤？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;&lt;strong&gt;基礎設施映射&lt;/strong&gt;：是哪個 Kubernetes 集羣或雲區域延遲較高？使用了什麼硬件？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;&lt;strong&gt;業務上下文&lt;/strong&gt;：這個性能下降是否影響到了關鍵客戶？&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;&lt;strong&gt;團隊歸屬&lt;/strong&gt;：哪個團隊負責這個拋出異常的服務？&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;要把這類信息完美地反規範化到每一條日誌或指標數據中，既困難又低效。而且像部署列表、服務器清單、客戶等級或服務歸屬這類查找&lt;span style="color:#4ea1db !important"&gt;數據集&lt;/span&gt;，通常和遙測數據是獨立變化的。&lt;/p&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;code&gt;LOOKUP JOIN&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在這裏非常適用，原因如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;查找索引可寫：&lt;/strong&gt;更新你的部署列表、CMDB 導出或值班表到查找索引中，下一次的 ES|QL 查詢會立即使用這些最新數據。無需重新執行復雜的 enrich 策略或重新索引數據。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;靈活性：&lt;/strong&gt;你可以在查詢時決定需要聯接哪個上下文。也許你今天關注的是部署版本，明天關注的則是雲區域。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;更簡單的設置：&lt;/strong&gt;如之前的文章所説，不需要維護任何 enrich 策略。只需創建一個帶有 index.mode: lookup 的索引並加載你的數據——每個查找索引最多支持 20 億條文檔。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;可觀測性使用場景與 ES|QL 示例&lt;/h2&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;現在讓我們看一些示例，瞭解&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Lookup Join&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;如何提供幫助。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;使用部署上下文豐富錯誤日誌&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;假設你發現&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;checkout-service&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的錯誤突然增加。你的日誌已經流入數據流中，但它們只包含服務名稱。這些文檔本身沒有任何與部署活動相關的信息。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM logs-*
  | WHERE log.level == "error"
  | WHERE service.name == "opbeans-ruby"&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;你需要知道這些錯誤是否與最近的部署有關。為此，我們可以維護一個名為&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;deployments_info_lkp&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的索引（設置為&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;index.mode: lookup&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;），它將服務名稱映射到其部署時間。這個索引可以在每次部署發生時由我們的 CI/CD 流水線自動更新。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PUT /deployments_info_lkp
{
  "settings": {
    "index.mode": "lookup"
  },
  "mappings": {
    "properties": {
      "service": {
        "properties": {
          "name": {
            "type": "keyword"
          },
          "deployment_time": {
            "type": "date"
          },
          "version": {
            "type": "keyword"
          }
        }
      }
    }
  }
}
 
# Bulk index the deployment documents
POST /_bulk
{ "index" : { "_index" : "deployments_info_lkp" } }
{ "service.name": "opbeans-ruby", "service.version": "1.0", "deployment_time": "2025-05-22T06:00:00Z" }
{ "index" : { "_index" : "deployments_info_lkp" } }
{ "service.name": "opbeans-go", "service.version": "1.1.0", "deployment_time": "2025-05-22T06:00:00Z" }&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;利用這些信息，你現在可以編寫一個將這兩個數據源連接起來的查詢。&lt;/p&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;ES|QL 查詢：&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM logs-* 
  | WHERE log.level == "error"
  | WHERE service.name == "opbeans-ruby"
  | LOOKUP JOIN deployments_info_lkp ON service.name &lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;這本身就是排查問題的重要一步。現在每條錯誤日誌中都包含了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;deployment_time&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;列。接下來的最後一步是利用這個字段進行進一步篩選。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="發現" src="https://oscimg.oschina.net/oscnet//90dcf764988bfb694a2c5201ac777e24.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;我們從 lookup 索引中連接到的任何數據，都可以像 ES|QL 查詢中其他常規可用數據一樣處理。這意味着我們可以基於它進行過濾，並檢查是否有最近的部署。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM logs-*
  | WHERE log.level == "error"
  | WHERE service.name == "opbeans-ruby"
  | LOOKUP JOIN deployments_info_lkp ON service.name 
  | KEEP message, service.name, service.version, deployment_time 
  | WHERE deployment_time &amp;gt; NOW() - 2h&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img alt="發現 2" src="https://oscimg.oschina.net/oscnet//803e8424abc6161921bd69895c5346d2.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;使用 JOIN 節省磁盤空間&lt;/h3&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;通過在每條日誌事件中直接包含主機操作系統或雲服務商等上下文信息來反規範化數據，雖然查詢方便，但會增加存儲消耗，尤其是在高流量數據流中。與其重複存儲這些經常冗餘的信息，不如利用 join 按需獲取，從而節省寶貴的磁盤空間。雖然壓縮通常能很好地處理重複數據，但完全移除這些字段仍能顯著減少存儲。&lt;/p&gt; 
&lt;p&gt;在這個示例中，我們使用了 1,000,000 條 Kubernetes 容器日誌數據，採用 Kubernetes 集成的默認映射，&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;啓用了 l&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.elastic.co%2Fdocs%2Fmanage-data%2Fdata-store%2Fdata-streams%2Flogs-data-stream" target="_blank"&gt;ogsdb 索引模式&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;。&lt;/span&gt;該索引的初始大小為 35.5MB。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET _cat/indices/k8s-logs-default?h=index,pri.store.size
### 
k8s-logs-default       35.5mb&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;通過磁盤使用情況 API（&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.elastic.co%2Fdocs%2Fapi%2Fdoc%2Felasticsearch%2Foperation%2Foperation-indices-disk-usage" target="_blank"&gt;disk usage API&lt;/a&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;），我們觀察到像&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;host.os&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;cloud.*&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;這樣的字段大約佔據了磁盤上索引總大小（35.5MB）的 5%。這些字段在某些情況下有用，但像&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;這樣的信息很少被查詢。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// Example host.os structure
"os": {
  "codename": "Plow", "family": "redhat", "kernel": "6.6.56+",
  "name": "Red Hat Enterprise Linux", "platform": "rhel", "type": "linux", "version": "9.5 (Plow)"
}
 
// Example cloud structure
"cloud": {
  "account": { "id": "elastic-observability" },
  "availability_zone": "us-central1-c",
  "instance": { "id": "5799032384800802653", "name": "gke-edge-oblt-edge-oblt-pool-46262cd0-w905" },
  "machine": { "type": "e2-standard-4" },
  "project": { "id": "elastic-observability" },
  "provider": "gcp", "region": "us-central1", "service": { "name": "GCE" }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;與其在每個文檔中存儲這些信息，不如在 ingest pipeline 中去除這些字段：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PUT _ingest/pipeline/drop-host-os-cloud
{
  "processors": [
      { "remove": { "field": "host.os" } },
      { "set": { "field": "tmp1", "value": "{{cloud.instance.id}}" } }, // Temporarily store the ID
      { "remove": { "field": "cloud" } },                             // Remove the entire cloud object
      { "set": { "field": "cloud.instance.id", "value": "{{tmp1}}" } }, // Restore just the cloud instance ID
      { "remove": { "field": "tmp1", "ignore_missing": true } }         // Clean up temporary field
    ]
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;重新索引（並強制合併為一個段）後，索引大小如下，節省了大約 5% 的空間。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;GET _cat/indices/k8s-logs-*?h=index,pri.store.size
### 
k8s-logs-default             33.7mb
k8s-logs-drop-cloud-os       35.5mb&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;現在，為了在分析時重新獲得被移除的 host.os 和 cloud.* 信息，而不必存儲在每條日誌中，我們可以創建一個 lookup 索引。該索引將存儲完整的主機和雲元數據，使用我們在日誌中保留的 cloud.instance.id 作為鍵。這個 instance_metadata_lkp 索引會比節省的空間小得多，因為它只需為每個唯一實例存儲一條文檔。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Create the lookup index for instance metadata
PUT /instance_metadata_lkp
{
  "settings": {
    "index.mode": "lookup"
  },
  "mappings": {
    "properties": {
      "cloud.instance.id": {  # The join key we kept in the logs
        "type": "keyword"
      },
      "host.os": {           # The full host.os object we removed
        "type": "object",
        "enabled": false      # Often don't need to search sub-fields here
      },
      "cloud": {             # The full cloud object we removed (mostly)
         "type": "object",
         "enabled": false     # Often don't need to search sub-fields here
      }
    }
  }
}
 
# Bulk index sample instance metadata (keyed by cloud.instance.id)
# This data might come from your cloud provider API or CMDB
POST /_bulk
{ "index" : { "_index" : "instance_metadata_lkp", "_id": "5799032384800802653" } }
{ "cloud.instance.id": "5799032384800802653", "host.os": { "codename": "Plow", "family": "redhat", "kernel": "6.6.56+", "name": "Red Hat Enterprise Linux", "platform": "rhel", "type": "linux", "version": "9.5 (Plow)" }, "cloud": { "account": { "id": "elastic-observability" }, "availability_zone": "us-central1-c", "instance": { "id": "5799032384800802653", "name": "gke-edge-oblt-edge-oblt-pool-46262cd0-w905" }, "machine": { "type": "e2-standard-4" }, "project": { "id": "elastic-observability" }, "provider": "gcp", "region": "us-central1", "service": { "name": "GCE" } } }&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#4d4d4d"&gt;通過這種設置，當你需要日誌的完整主機或雲上下文時，只需在 ES|QL 查詢中使用 LOOKUP JOIN，並繼續基於 lookup 索引中的數據進行過濾。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM logs-* 
  | LOOKUP JOIN instance_metadata_lkp ON cloud.instance.id 
  | WHERE cloud.region == "us-central1"&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這種方法允許我們在需要時查詢完整上下文（例如，按 host.os.name 或 cloud.region 過濾日誌），同時通過避免冗餘數據的反規範化，顯著減少高流量日誌索引的存儲佔用。&lt;/p&gt; 
&lt;p&gt;需要注意的是，低基數的元數據字段通常壓縮效果很好，這裏大部分存儲節省來自 host.os.name 和 cloud.instance.name 字段的 「text」 映射。請務必使用 disk usage API 來評估這種方法是否適合你的具體用例。&lt;/p&gt; 
&lt;h2&gt;開始使用 Observability 的 Lookup&lt;/h2&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;創建必要的 lookup 索引很簡單。正如我們最初的博客文章所述，你可以使用 Kibana 的索引管理界面、Create Index API 或文件上傳工具，關鍵是在索引設置中將 "index.mode" 設置為 "lookup"。&lt;/p&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;對於 Observability，可以考慮自動填充這些 lookup 索引：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;定期從你的 CMDB、CRM 或 HR 系統導出數據。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;讓你的 CI/CD 流水線在成功部署後更新 deployments_lkp 索引。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="color:#4d4d4d; margin-left:0; margin-right:0"&gt;使用 Logstash 等工具，配置 elasticsearch 輸出寫入你的 lookup 索引。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;性能和替代方案説明&lt;/h2&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;雖然功能強大，但 joins 並非免費。每個 LOOKUP JOIN 都會增加查詢的處理開銷。對於非常靜態的上下文數據（例如主機永久所在的雲區域）且幾乎每次查詢都需要時，傳統的在 ingest 時豐富數據的方法，可能在特定查詢上性能更優，前期處理和存儲開銷換取查詢速度。&lt;/p&gt; 
&lt;p&gt;但是，對於 Observability 中常見的動態、靈活和有針對性的豐富場景，比如映射不斷變化的部署、用戶分組或團隊結構，LOOKUP JOIN 提供了一個高效且更易管理的解決方案。&lt;/p&gt; 
&lt;h2&gt;結論&lt;/h2&gt; 
&lt;p style="color:#4d4d4d; margin-left:0; margin-right:0; text-align:start"&gt;ES|QL 的 LOOKUP JOIN 讓你能在查詢時輕鬆關聯並豐富日誌、指標和跟蹤數據，結合最新的外部信息；你可以更快地從發現問題到理解其範圍、影響和根本原因。&lt;/p&gt; 
&lt;p&gt;該功能目前在 Elasticsearch 8.18 和 Serverless 中處於技術預覽階段，現已在 Elastic Cloud 上可用。我們鼓勵你用自己的 Observability 數據試用，並通過 Discover 中 ES|QL 編輯器的「Submit feedback」按鈕分享反饋。期待看到你如何用它來連接系統中的點！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354548</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354548</guid>
      <pubDate>Sun, 11 May 2025 02:07:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>一個 Transformer 訓練生成式模型的例子</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;最近在看 chatGPT,想着 chatGPT 是怎麼訓練出來的，不涉及神經網絡算法，可以使用 Transformer 玩一下&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import torch
import torch.nn as nn
import torch.nn.functional as F
from torch.utils.data import Dataset, DataLoader

# 構造詞表
vocab = ["&amp;lt;PAD&amp;gt;", "&amp;lt;BOS&amp;gt;", "&amp;lt;EOS&amp;gt;", "明天", "天氣", "很", "好"]
word2idx = {w: i for i, w in enumerate(vocab)}
idx2word = {i: w for w, i in word2idx.items()}

# 示例訓練數據：輸入和標籤都偏移一位
# 輸入: &amp;lt;BOS&amp;gt; 明天，天氣，很
# 輸出: 明天，天氣，很 好

inputs = torch.tensor([
    [word2idx["&amp;lt;BOS&amp;gt;"], word2idx["明天"], word2idx["天氣"], word2idx["很"]]
])

labels = torch.tensor([
    [word2idx["明天"], word2idx["天氣"], word2idx["很"], word2idx["好"]]
])

class TinyTransformerModel(nn.Module):
    def __init__(self, vocab_size, d_model=32, nhead=2, num_layers=2):
        super().__init__()
        self.embedding = nn.Embedding(vocab_size, d_model)
        self.pos_encoding = nn.Parameter(torch.randn(1, 100, d_model))  # 最多 100 個詞
        encoder_layer = nn.TransformerEncoderLayer(d_model, nhead)
        self.transformer = nn.TransformerEncoder(encoder_layer, num_layers)
        self.fc = nn.Linear(d_model, vocab_size)

    def forward(self, x):
        x = self.embedding(x) + self.pos_encoding[:, :x.size(1)]
        x = self.transformer(x)
        return self.fc(x)
model = TinyTransformerModel(vocab_size=len(vocab))
optimizer = torch.optim.Adam(model.parameters(), lr=0.01)
loss_fn = nn.CrossEntropyLoss()

for epoch in range(50):
    model.train()
    out = model(inputs)  # [batch_size, seq_len, vocab_size]
    loss = loss_fn(out.view(-1, len(vocab)), labels.view(-1))
    optimizer.zero_grad()
    loss.backward()
    optimizer.step()
    
    if epoch % 20 == 0:
        print(f"Epoch {epoch}, loss: {loss.item():.4f}")



def generate(model, start_tokens, max_len=5):
    model.eval()
    input_ids = torch.tensor([start_tokens])
    for _ in range(max_len):
        with torch.no_grad():
            logits = model(input_ids)
        next_token = logits[0, -1].argmax().item()
        input_ids = torch.cat([input_ids, torch.tensor([[next_token]])], dim=1)
        if next_token == word2idx["&amp;lt;EOS&amp;gt;"] or len(input_ids[0]) &amp;gt; max_len:
            break
    return [idx2word[i] for i in input_ids[0].tolist()]

# 測試
generated = generate(model, [word2idx["&amp;lt;BOS&amp;gt;"]])
print("生成結果：", " ".join(generated))
&lt;/code&gt;&lt;/pre&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354538</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354538</guid>
      <pubDate>Sun, 11 May 2025 01:27:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>Dell Pro Desktop 全新 AI PC 家族，現已上市！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//e15edc4c6886f8a4bcebd56717987997.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//e2bf758ff39ceae2449b75689e268602.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//47faff018eb323c18432666ebcebae0f.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//027214075b798f1f6d7c71ad1a3e05ee.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ebf2fa"&gt;當混合辦公成為新常態，企業的設備採購清單開始經歷殘酷的 "適者生存" 法則——那些傳統設備正在被掃地出門，取而代之的是能適配敏捷辦公的智能新物種。就在昨天，戴爾科技強勢出手，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ebf2fa"&gt;全面升級了 Dell Pro DT 產品線，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ebf2fa"&gt;從體積僅為 1.2L 的小清新 Dell Pro Micro，到擁有強大算力的 Dell Pro Tower，掀起了一場顛覆辦公效率的智能革命，重新定義了企業的數字戰鬥力！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#0076ce"&gt;&lt;span style="background-color:#ffffff"&gt;商用台式機首款 AI PC&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro DT 系列 AI PC 已於 3 月 27 日正式上市，作為全新登場的 「實力派選手」，它傳承自全球單一品牌銷量第一的 OptiPlex 商用台式機。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;憑藉着諸多超能力，完美契合現代商業用戶五花八門的需求。到底有多厲害？一起來瞧瞧！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;Dell Pro DT 在&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;可靠性方面&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;絕對行業領先，首年平均無故障率高達&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;99%，高效散熱設計&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;更是功不可沒，即便長時間高負荷運行，也能冷靜應對，穩定得不像話。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//db4401eb30a14bfd90a930b412cf90df.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;不僅如此，Dell Pro DT 選用的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;可溯源部件&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;都遵循高標準，從全球一線供應商處精挑細選優質電子元器件，每一個部件都品質過硬。而且，它還通過了&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;軍標測試認證，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;嚴格的質量控制讓它無懼任何惡劣環境，始終穩如泰山，持續為商業用戶高效運轉。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;「易管理」&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;是商用客戶的核心需求。商用客戶台式機部署的數量級別通常在成百上千台，如何在不同使用地點部署機器？如何給這些不同地點的設備安裝軟件？如果發生故障，如何儘快維護修復，保證用戶業務運行的連續穩定運行？這些都是 IT 最重要的考慮因素和麪臨的挑戰。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://p3-sign.toutiaoimg.com/tos-cn-i-6w9my0ksvp/e05934c8e620469fa2d5499d5edb415f~tplv-tt-shrink:640:0.image?lk3s=06827d14&amp;amp;traceid=20250610070747C08ECE13D534D0524AB9&amp;amp;x-expires=2147483647&amp;amp;x-signature=3tcneRISEqHpB0jZOeno2K5aaWs%3D" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;但您不用擔心，管理難題在 Dell Pro DT 面前根本不是事兒！它通過&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;統一的平台和芯片組設計，支持超多管理功能。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;不管是面對多種 CPU 選擇，還是要管理大量設備，IT 人員都能輕鬆拿捏，彷彿擁有了「一鍵管理」的超能力。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;再看看它的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;升級維護設計，電源指示燈&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;清晰明瞭，免工具機箱讓操作更加便捷，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;模塊化端口&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;更是大大簡化了硬件維護的複雜度。此外，Dell Pro DT 還提供長達&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;24 個月的穩定生命週期支持，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;為客戶業務的持續運轉保駕護航，讓商業用戶毫無後顧之憂。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;在靈活部署方面，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;Dell Pro DT 產品線超豐富，貼心打造了&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;4 大系列，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;滿足不同用戶的個性化需求。性能強勁的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;Dell Pro Tower 系列，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;採用標準體積商用台式機設計，是追求極致性能用戶的不二之選；Dell Pro Slim 系列擁有&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;8.4L&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;緊湊機身，小巧玲瓏卻能量巨大；超級輕薄小巧的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;Dell Pro Micro 系列，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;方便攜帶，適合經常移動辦公的朋友；還有搭配&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;24 英寸全高清觸控屏&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;Dell Pro 24 All-in-One Plus 一體機，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#f6faff"&gt;集多種功能於一身，顏值與實力並存。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//3e6052c528a9b51085285eb8586d3b4f.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;值得關注的是，隨着新一代處理器的問世，也讓 Dell Pro DT 產品線擁有了&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;更強的 AI 與計算性能。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//de9f0824559de1a91285bcf512e1547d.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;根據戴爾官方提供測試數據顯示，搭載&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;英特爾® 酷睿™ Ultra 7 265&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的台式機產品在 SYSMark 25 測試中系統性能相比第 14 代英特爾® 酷睿™ i7-14700 提升了&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;5%，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;能夠提供更流暢的體驗和更高的效率；在 PC Mark10 測試中辦公生產力性能提升了&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;15%，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;可更快完成日常辦公任務，提高工作效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;通過 Cinebench R23 測試，英特爾® 酷睿™ Ultra 7 265 的多線程 CPU 操作性能相比第 14 代英特爾® 酷睿™ i7-14700 提升了&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;35%，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;在處理需要大量計算資源和多線程支持的任務時，如視頻編輯、3D 渲染等，能夠發揮出強大的性能優勢。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;在 Dell Pro DT 的四大產品線陣營中，均可看到英特爾® 酷睿™ Ultra 處理器或 AMD 鋭龍 9000 系列的身影，滿足用戶各種應用場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;下面，就讓我們來具體瞭解一下這四大產品陣營吧！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:16px; margin-right:16px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#0073d0"&gt;&lt;span style="background-color:#f0f6ff"&gt;01，&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#0672cb"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Tower，性能強勁的模塊化台式機典範&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Tower 系列，作為 OptiPlex 家族的經典傳承者，那可是相當厲害，堪稱台式機領域的「多面手」。它不僅在絕大部分商用及企業級辦公場景中如魚得水，更是在需要高性能計算、多屏協作的專業領域揮灑自如，像工程設計的複雜建模、視頻渲染的燒腦運算等場景，都能輕鬆 hold 住，絕對是辦公及專業人士的得力助手。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Tower 系列內部還藏着「小心機」，根據不同配置分為&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Tower Plus 和 Dell Pro Tower 兩款產品。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;先來説説 Dell Pro Tower Plus，它搭載最新一代英特爾® 酷睿™ Ultra 處理器，性能強大。它的機箱體積也從之前的 18.6L 縮小到&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;14.6L，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;同時電源也升級成&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;360W 白金版，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;能耗更低，體積進一步減小。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//5951d6c61a59202ac24299f9950250d8.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;再來看 Dell Pro Tower，機箱容積保持不變&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;這寬敞的空間，就像給電腦硬件們打造了一個豪華大別墅。在這裏，高主頻的 AMD 鋭龍 8000 或英特爾® 酷睿™ Ultra 處理器可以盡情施展拳腳，最高還能支持&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;128GB 大容量 DDR5 內存，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;處理再多任務都不在話下。要是你有專業軟件需求，還可搭配&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;NVIDIA RTX™ A400 或 AMD RX740 專業顯卡，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;有了它們，可輕鬆搞定 AutoCAD 的複雜圖紙繪製、Premiere Pro 的視頻編輯，分分鐘讓你的工作效率直線上升。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//7f439525a4840f877bf92e64ef52fe98.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Tower 還有一個超酷的特色——&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;模塊化散熱系統。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;內部&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;雙風扇和熱管&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;強強聯合，頂部&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;蜂窩狀通風孔&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;設計巧妙，哪怕設備高負載運行，CPU 溫度也能被穩穩控制，完全不用擔心電腦會因為過熱而 「鬧脾氣」。更貼心的是，它&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;支持工具免拆維護，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;用戶自己就能輕鬆更換硬盤或者擴展內存，就像給電腦做個簡單的 「小手術」，方便又快捷。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//5b2b9cf24c4be721b5ff962259b03a3f.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;不僅如此，Dell Pro Tower 還支持&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;三屏聯動的 3×DP 1.4a 接口，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;再配上&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Windows 11 Pro 系統，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;多任務切換無縫銜接，處理文檔的時候，效率直接翻倍。想象一下，三個屏幕同時展示不同文檔，操作起來行雲流水，辦公體驗不要太爽！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:16px; margin-right:16px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#0073d0"&gt;&lt;span style="background-color:#f0f6ff"&gt;02，&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#0672cb"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Slim，性能與小體積的完美融合&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;全新的 Dell Pro Slim 系列簡直是全能選手，商務辦公、醫療科研、教育教學、創意設計通吃，小體積的機身裏藏着 AI 黑科技，讓你的工作效率直接開掛！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Slim 系列同樣分為&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Slim Plus 和 Dell Pro Slim 兩款產品。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;先説 Pro Slim Plus，堪稱台式機界的「小金剛」——&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;8.4L 迷你機箱&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;塞進英特爾® 酷睿™ Ultra 處理器，內置&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;13 TOPS&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;超強算力的 NPU 芯片，本地 AI 處理快如閃電！開視頻會議時自動生成會議紀要，分析數據分分鐘搞定，再也不用等雲端的「蝸牛速度」。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//31eac446feb8823daed5563689a5968b.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;你以為小體積就等於弱性能？那就大錯特錯了！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Slim Plus 可是隱藏的性能怪獸：最高支持&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;128GB DDR5 內存+4TB HDD+3×2TB M.2 SSD&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的豪華配置，金融建模、醫療影像處理穩如老狗。顯卡從&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;AMD RX6300 到專業級 NVIDIA RTX™ A400&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;任選，多屏辦公、3D 渲染全都能打，小機箱也有大心臟！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//569c6b75acc71aae0b697ea161913919.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;另一邊的 Dell Pro Slim 硬件支持方面則更勝一籌，雙平台 CPU 隨心選——英特爾® 酷睿™ Ultra 處理器、AMD Ryzen™ 5-8600/7-8700 處理器甚至第 14 代英特爾® 酷睿™ i7 處理器全都能安排上，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;65W&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;高性能釋放，無論你是 Intel 黨還是 AMD 粉都能滿足。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//f61623fe0b8ee873147b5b83cf295d4d.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Slim 這次升級堪稱全面進化：AI 算力直接拉滿，散熱系統悄悄內卷，噪音降低&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;57%&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;讓辦公室更安靜；PCIe 插槽多到離譜，擴展設備隨便插；&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Wi-Fi 6E、2.5G 網卡、8K 視頻輸出&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;一應俱全，妥妥的未來辦公標配。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:16px; margin-right:16px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#0073d0"&gt;&lt;span style="background-color:#f0f6ff"&gt;03，&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#0672cb"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Micro，小身材也能爆發大能量&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Micro 系列簡直是電腦界的「拇指姑娘」——&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;1.2L&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的超迷你機箱比大瓶可樂還小，卻塞進了足以顛覆認知的硬核配置，單根線纜就能搞定視頻、數據和電源，讓你的桌面從此告別 "蜘蛛網"！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//901a03267d67098b2d333dee7c3f1bb1.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Micro 系列也分為兩款產品，分別是&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro Micro Plus 和 Dell Pro Micro。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;先説 Dell Pro Micro Plus，別看它身材袖珍，內置的英特爾® 酷睿™ Ultra 處理器（最高可選&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;65W&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的 Ultra 9）配上&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;6 個 USB-A、2 個 USB-C，3 個原生 DP 接口&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;能同時懟&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;4 台顯示器，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;還能選&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;HDMI 或 DP 2.1&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;實現 8K 超清輸出。更誇張的是，它居然有&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;10 種模塊化擴展端口，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;簡直是接口界的變形金剛！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//ad575d06b46768ee854aa5b0f9054d76.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;另一邊的 Dell Pro Micro 也不含糊，CPU 陣容堪稱豪華：英特爾® 酷睿™ Ultra 處理器最高支持&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;35W&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的 Ultra 7、第 14 代英特爾® 酷睿™處理器，還有 AMD Ryzen™ 5-8600/7-8700 系列處理器任選，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;35W&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的 R7 Pro 性能直接拉滿，小機身也能爆發大能量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//22d5e2756879198872c49e09ab13d161.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;對比前代 OptiPlex Micro，Dell Pro Micro 這次升級堪稱「靜音革命」：散熱設計優化後，運行溫度直降&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;8%，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;噪音減少&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;32%，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;辦公環境瞬間安靜如圖書館。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;最絕的是它的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;5 種支架設計，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;想掛牆上、立桌上、塞顯示器背後都行，無論是移動辦公、教室管理還是零售門店的數字標牌，這台巴掌大的 AI 電腦都能輕鬆拿捏。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//d3394a1272bdcdcb9cb7b919e3149a08.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:16px; margin-right:16px; text-align:justify"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#0073d0"&gt;&lt;span style="background-color:#f0f6ff"&gt;04，&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#0672cb"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro 24 All-in-One Plus，一體化的智能會議中心&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;把 AI 裝進 24 英寸屏幕裏，這就是全新的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro 24 All-in-One 系列，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;開會、辦公、設計全場景通吃，從此告別主機堆桌角的煩惱！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;這次戴爾直接放大招，推出&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Plus 版和標準版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;兩款神機。全系搭載英特爾® 酷睿™ Ultra 處理器，本地 AI 算力直接拉滿，開視頻會議時&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;自動優化畫質音質，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;分析數據快到飛起，再也不用苦等雲端處理！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//98f5f904d38cbd105b5b3995f2a0208d.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Plus 版更是暗藏玄機，可選配&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;AMD RX6500 獨顯&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;讓圖形處理能力瞬間開掛，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;5K@60Hz&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的 DP 輸出和&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;4K@60Hz&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;的 HDMI 接口，高分辨率多屏擴展輕鬆搞定。更絕的是它的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Pro 2.0 設計，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;銀色機身配雙支架，標準版深灰色沉穩大氣，擺在辦公室瞬間提升科技感。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//bbdd8e8765fdd979f002fcb3b504e3e4.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;Dell Pro 24 All-in-One 搭配的&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;24 英寸全高清屏&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;自帶&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;100Hz 高刷和低藍光認證，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;觸控/非觸控隨心切換。內置&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;5MP HDR 攝像頭（Plus 版還能升級帶 IR 的 5MP 神器），&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;搭配&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;數字麥克風陣列和智能功放，&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;視頻會議秒變電影級畫質，連對方的睫毛都看得清清楚楚！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;img src="https://oscimg.oschina.net/oscnet//eb75eb17637b5590971a6950800481f7.jpg" referrerpolicy="no-referrer"&gt; 
 &lt;p style="margin-left:0px; margin-right:0px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;怎麼樣？Dell Pro DT 系列正在顛覆認知！一場靜默的效率革命正在每個工位悄然上演。當 AI 算力注入桌面終端，商用 PC 不再是被動等待指令的機器，而是進化成能自主決策的智能夥伴。這台看似普通的辦公設備，已植入了能感知工作場景的 "數字大腦"，通過 CPU 與 NPU 的雙引擎驅動，讓本地化智能處理成為辦公新常態。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#222222; margin-left:8px; margin-right:8px; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;&lt;span style="background-color:#ffffff"&gt;你準備好迎接它了嗎？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354517</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354517</guid>
      <pubDate>Sat, 10 May 2025 23:14:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>實時多模態如何重塑未來交互？我們邀請 Gemini 解鎖了 39 個實時互動新可能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;大家好～這是 Voice Agent 學習筆記系列的第二十八篇。我是課代表十三👩 💻。&lt;/p&gt; 
&lt;p&gt;在剛剛過去的 Google I/O 開發者大會上，Google 展示了其在人工智能領域的最新進展。從升級搜索引擎到推出生成式內容工具，再到硬件的更新，Google 正以驚人的速度將 AI 全面融入其生態體系。&lt;/p&gt; 
&lt;p&gt;大會上，Google 發佈了多個實時多模態新品，包括支持音視頻輸入的多模態模型 &lt;strong&gt;Gemma 3n&lt;/strong&gt; 、升級主動音視頻功能的 &lt;strong&gt;Gemini Live API&lt;/strong&gt; 、支持實時雙語翻譯配音的 &lt;strong&gt;Google Meet&lt;/strong&gt; 、最新版 &lt;strong&gt;Project Astra&lt;/strong&gt; ……這些都預示着未來交互體驗的巨大變革。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8b9b0579397a562d3aff71aeb34066162cd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;早在今年 4 月，Google 就已發佈了 601 個世界領先企業的生成式 AI 案例。這些案例覆蓋了 11 個行業以及 6 種 AI 智能體類型。&lt;/p&gt; 
&lt;p&gt;我們從這 601 個案例中，邀請 Gemini 為我們挑出 39 個涉及實時互動的項目，並分析了其未來在 &lt;strong&gt;RTE 與 AI 融合發展方面的潛在可能性&lt;/strong&gt; ，希望可以給你帶來一些新的視野和思考。Enjoy~&lt;/p&gt; 
&lt;h2&gt;一、汽車與物流 Automotive &amp;amp; Logistics&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-07a589949421c07f1ab8bfc1fdb6772f7fd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;大陸集團攜手 Google Cloud 為汽車提供車載語音指令系統&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.大陸集團：車載語音指令系統&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;大陸集團（Continental）&lt;/strong&gt; 正藉助 Google 的數據和 AI 技術，致力於開發更安全、高效且以用戶體驗為中心的汽車解決方案。 這次合作的首批成果之一，是將 Google Cloud 的對話式 AI 技術集成到 Continental 的車載語音指令系統 Smart Cockpit HPC 中。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強型遠程診斷與輔助駕駛：&lt;/strong&gt; 當車載 AI 語音助手無法解決駕駛問題時，系統可無縫轉接至遠程專家。專家利用 RTC 實時視頻結合 AI 分析車輛數據，通過 AR 標註指引駕駛員操作或遠程控制輔助駕駛。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 賦能的緊急救援：&lt;/strong&gt; AI 可以理解語音求助並自動連接緊急服務。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;智能導航：&lt;/strong&gt; AI 驅動的導航系統能夠預測交通狀況，並通過 RTC 播報個性化路線建議。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.大眾汽車：myVW 應用虛擬助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;大眾汽車（Volkswagen of America）&lt;/strong&gt; 在 myVW 應用中集成了一款虛擬助手，方便駕駛員查閲車主手冊並解答疑問，例如「如何更換輪胎？」或「數字儀表盤上的這個指示燈代表什麼？」 此外，用戶還可以利用 Gemini 的多模態能力，通過智能手機攝像頭對準儀表盤，即可獲取關於指示燈的詳細信息和相關背景知識。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的視覺故障診斷：&lt;/strong&gt; 駕駛員通過 RTC 視頻上傳儀表盤或車輛部件圖像，AI 即時識別故障類型，並根據用戶手冊提供操作指導。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 引導的故障排除：&lt;/strong&gt; AI 可以根據駕駛員的反饋和車輛傳感器數據，提供個性化的解決方案，並指導駕駛員進行簡單維修。對於複雜的操作（如更換輪胎），AI 助手可通過 RTC 進行視頻演示，並結合 AR 技術，在駕駛員的手機屏幕上進行實時指導，確保操作的準確性和安全性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;專家遠程協助：&lt;/strong&gt; 如用戶無法通過 AI 解決問題，AI 可將用戶無縫接入專家客服，專家通過共享屏幕、AR 標註等方式遠程指導用戶進行故障診斷與排除。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.704 Apps：守護乘車出行安全的情緒檢測 APP&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;704 Apps 公司&lt;/strong&gt; 致力於為最後一公里運輸領域開發應用程序，每天連接着成千上萬的司機和乘客。在行程期間，車內人員對話的音頻內容會被髮送到 Gemini AI 模型，以測量乘客的情緒「溫度」。該工具能夠將「搶劫」、「襲擊」、「綁架」等特定詞語歸類為具有敵意，從而生成警報，以便在危險情況發生之前預先採取措施。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 預警觸發的一鍵報警：&lt;/strong&gt; 當 AI 檢測到車內出現高風險詞彙或異常行為時，自動觸發一鍵報警功能，駕駛員或乘客無需手動操作，即可將警報信息（包括實時位置、車內音頻視頻等）發送至監控中心或緊急聯繫人。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的安全乾預：&lt;/strong&gt; 結合 AI 情緒識別和 RTC 實時語音通話，客服人員可主動介入高風險行程，進行遠程安撫和安全指導，必要時聯繫警方，降低風險發生的概率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4.Nuro：AlloyDB 加持的自動駕駛解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Nuro: 一家自動駕駛公司，利用 AlloyDB 的向量搜索功能，提升其自動駕駛車輛對道路上各類物體的識別和分類精度。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 分析的車輛狀態監控：&lt;/strong&gt; 通過 RTC，遠程監控中心可實時獲取車輛傳感器數據、攝像頭圖像等，並利用 AI 進行分析，監測車輛運行狀態、電池電量、貨物狀態等，及時發現潛在問題。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 協同的安全接管：&lt;/strong&gt; 在複雜或不確定的環境中，遠程操作員可以隨時通過 RTC 遠程接管車輛控制，確保行駛安全。AI 系統仍然可以提供環境感知、路徑規劃等輔助信息，與操作員協同完成駕駛任務。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;二、商業和專業服務 Business &amp;amp; Professional Services&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f3ec761125253c471b30addea64ad92ff9d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Nowports 正利用 AI 技術革新物流行業&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.埃森哲：AI 賦能的零售虛擬助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;埃森哲（Accenture）&lt;/strong&gt; 正致力於改造一家大型零售商的客戶支持體系，通過部署虛擬助手，提供便捷的自助服務選項，從而提升整體客戶體驗。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 導購 + 個性化推薦：&lt;/strong&gt; 虛擬助手根據客戶瀏覽歷史和購買偏好，推薦個性化商品，並通過 RTC 發起視頻通話。AI 驅動的虛擬形象（例如時尚顧問）能夠分析客戶的面部特徵、穿搭風格等，提供個性化的商品推薦和搭配建議。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強的虛擬試穿與沉浸式體驗：&lt;/strong&gt; 客戶通過 RTC 連接，利用 AR/VR 技術進行虛擬試穿，體驗商品的真實效果，提升購買決策的準確性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.Quom：AI 驅動的金融普惠解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Quom&lt;/strong&gt; 是墨西哥一家專注於金融普惠的公司，他們開發了基於 AI 的對話式智能客服，旨在優化用戶和客戶支持體驗，並提供個性化服務。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 遠程金融顧問服務：&lt;/strong&gt; 客戶通過 RTC 與 AI 虛擬顧問進行視頻諮詢，AI 分析客戶財務狀況，提供個性化的理財建議和產品推薦。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 與人工服務的無縫銜接：&lt;/strong&gt; 如需人工幫助，AI 可將客戶無縫接入人工顧問，並共享會話記錄和分析結果，確保高效便捷的服務體驗。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.Juganu：智慧城市/商店 SaaS 服務&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Juganu&lt;/strong&gt; 是一家專為智慧城市和智慧商店提供 SaaS 服務的公司，致力於使用 Google Cloud 實現實體店自動化和數字化。該公司已着手開發數字孿生技術，使零售商能夠通過虛擬視角管理門店，從而助力自動完成日常任務，提升運營效率，併為顧客帶來更優質的體驗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的遠程巡店與智能管理：&lt;/strong&gt; 管理人員通過 RTC 連接數字孿生門店，AI 實時分析監控畫面，自動識別異常情況（例如商品錯放、貨架空置），並自動通知相關人員處理。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 安全監控與行為分析：&lt;/strong&gt; 通過 RTC 連接攝像頭，AI 能夠實時識別人臉，分析人員的行為模式，識別異常行為（例如盜竊、破壞），並及時發出警報。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4.Nowports：智慧物流解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Nowports 正利用 AI 技術革新物流行業，力求在競爭中脫穎而出。他們通過分析關鍵運營數據，旨在精準預測市場動態，從而優化整個供應鏈流程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;貨物實時跟蹤與狀態監控：&lt;/strong&gt; 通過 RTC 實時獲取貨物位置信息，AI 分析運輸軌跡，自動檢測異常情況（例如偏離路線、長時間停留），並及時發出警報。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 預測的運輸狀態監控：&lt;/strong&gt; AI 分析歷史數據和實時信息，預測貨物運輸狀態（例如預計到達時間），並主動通知客戶，提升服務質量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 優化的車輛智能分配與路線優化：&lt;/strong&gt; 通過 RTC 實時獲取車輛位置和狀態信息，AI 根據訂單需求和路況信息，智能分配車輛，並根據交通數據和天氣信息，動態調整車輛行駛路線，提高運輸效率。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;三、金融服務 Financial Services&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-243dfb6e691edbb8fb7403d105b1eeca6de.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Nowports 正利用 AI 技術革新物流行業&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Contabilizei：金融服務 AI 解決方案 The Concierge&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Contabilizei&lt;/strong&gt; 正利用基於 Vertex AI 平台的 AI 解決方案「The Concierge」，提升巴西金融服務行業的客戶服務水平。該平台藉助 Vertex AI Search 和 Model Garden 等工具，能夠提供快速且個性化的客戶響應。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的稅務諮詢與申報指導：&lt;/strong&gt; AI 助手分析客戶財務數據，並通過 RTC 視頻向客戶講解稅務政策和申報流程，提供稅務優化建議，並自動檢查申報信息的準確性，減少出錯概率。客戶可通過屏幕共享，與 AI 顧問共同完成稅務申報。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 智能匹配的實時諮詢：&lt;/strong&gt; 當客戶需要向真人專家諮詢時，AI 能夠分析用戶問題，並自動匹配最合適的稅務或會計專家。隨後，通過 RTC 建立連接，確保問題得到高效解決。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.Albo ：利用 AI 技術革新客戶服務和金融教育模式&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Albo&lt;/strong&gt; 正在利用 AI 技術，革新墨西哥的客戶服務和金融教育模式。這家新興數字銀行通過優化流程，實現了更快捷高效的客戶響應，併為傳統金融服務覆蓋不足的用戶羣體，提供金融知識普及工具。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的遠程金融知識普及：&lt;/strong&gt; Albo 可利用 RTC 開展遠程金融培訓課程，向用戶普及金融知識，解答疑問。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的實時客服與業務辦理：&lt;/strong&gt; 通過 RTC 接入的客戶，AI 可分析用戶意圖，提供賬戶查詢、交易處理等自助服務，並根據用戶需求，自動轉接至人工客服。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.Discover Financial ：AI 虛擬助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Discover Financial&lt;/strong&gt; 開發了由生成式 AI 驅動的 Discover 虛擬助手。該助手不僅能直接為客戶提供幫助，還能向 Discover 的客服人員提供補充信息，從而在客戶偏好的任何渠道上，提供更流暢、高效且更令人滿意的互動體驗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的複雜問題診斷：&lt;/strong&gt; 客戶通過 RTC 發起視頻求助，AI 分析客戶提出的問題和展示的場景，輔助客服人員快速診斷問題，並提供解決方案。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 協同的多渠道無縫銜接：&lt;/strong&gt; AI 可根據客戶的問題類型和緊急程度，將客戶智能轉接到最合適的客服渠道（文字、語音、視頻），並自動同步會話記錄和用戶信息，確保問題得到及時解決。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 智能分析的定製化方案：&lt;/strong&gt; AI 分析客戶的財務狀況、消費習慣等，為客戶推薦最適合的金融產品和服務，提供定製化的金融解決方案。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;四、醫療保健與生命科學 Healthcare &amp;amp; Life Sciences&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-756aa09af6e100c6102d2650ee79fbc43f3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;墨西哥健康初創公司 Clivi 與 Google 合作構建個性化健康監測平台&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.Clivi ：個性化健康監測平台&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Clivi&lt;/strong&gt; 是一家墨西哥健康科技初創公司。他們與 Google Cloud 合作，構建了一個 Gen AI 平台，該平台能夠對患者進行個性化和持續監測，從而提供定製化的響應方案、提升醫療服務的質量和覆蓋範圍，並減少併發症的發生。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 智能分診與專家會診：&lt;/strong&gt; 患者發起諮詢後，AI 分析患者症狀和歷史病歷，智能分診到相應的科室或專家，提高就診效率。遠程專家可通過 RTC 與患者進行視頻會診，AI 實時分析患者的生理指標和影像資料，輔助專家做出更準確的診斷。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 實時監測與異常指標預警：&lt;/strong&gt; AI 實時分析患者的監測數據，自動識別異常指標，並及時通知醫生和患者，提前預防併發症的發生。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.Amigo Tech：智慧醫療平台 Amigo Intelligence&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Amigo Tech&lt;/strong&gt; 推出了基於 Google AI 技術的 Amigo Intelligence 平台，旨在自動化醫療流程、降低運營成本，並提升診所和醫療機構的效率。 該解決方案集成了病史自動採集、高級檢查分析、以及醫療 AI 聊天機器人等工具，從而變革了醫療管理模式。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 智能優化的客服與預約管理：&lt;/strong&gt; 患者可以向 AI 聊天機器人諮詢醫療相關問題，如預約掛號、查詢報告等，無需人工幹預，提高服務效率。AI 還可以分析歷史數據，預測患者的就診需求，優化預約排班，減少患者等待時間。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的遠程診斷與治療方案制定：&lt;/strong&gt; 患者通過 RTC 視頻與醫生進行遠程問診，AI 分析患者病史和症狀描述，輔助醫生進行診斷，並提供個性化的治療方案。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.拜耳：流感疫情預警與響應解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;拜耳（Bayer）&lt;/strong&gt; 利用 BigQuery 中的生成式 A 構建了一個數據代理，用於預測流感疫情爆發。該代理結合了 Google 搜索趨勢數據和拜耳的內部數據，從而實現基於實時數據和特定地理位置的醫療保健規劃。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 預測觸發的精準警報：&lt;/strong&gt; 基於 AI 預測的流感疫情爆發信息，通過 RTC 向該地區的公眾和醫療機構發佈實時警報，提醒做好防護措施。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 協同的交互式地圖與數據可視化：&lt;/strong&gt; 通過 RTC 實時更新疫情地圖，展示不同地區的流感病例數、傳播速度等信息，還能在地圖上展示醫療物資的分佈情況、供應量等信息，方便醫療機構及時調配資源，保障醫療供給。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4.Probrain ：個性化聽覺訓練解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Probrain&lt;/strong&gt; 提供個性化的聽覺刺激訓練服務。通過部署基於雲端的 Gen AI 解決方案，該公司實現了服務模式的現代化升級，並大幅降低了約 89% 的運營成本。最終用戶也因此受益，享受了近 50% 的費用節省。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的個性化遠程聽覺訓練與評估：&lt;/strong&gt; AI 虛擬教練通過 RTC 實時語音指導用戶進行聽覺刺激訓練，並根據用戶的反饋進行調整。AI 同時在線評估訓練效果，並提供個性化的訓練計劃。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;五、酒店與旅遊 Hospitality &amp;amp; Travel&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-217dc011e1ff3076591458393f65c5c693a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;BrushBuck Wildlife Tours 與 Google 合作追蹤季節性動物的遷徙路線&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.Hotelplan Suisse：智能旅行 AI 聊天機器人&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Hotelplan Suisse&lt;/strong&gt; 構建了一款聊天機器人，並基於公司深厚的旅行專業經驗對其進行了訓練，使得該機器人能夠實時回應客戶問詢。繼此舉取得成功後，該公司計劃使用生成式 AI 打造旅行相關內容。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的個性化行程規劃：&lt;/strong&gt; 聊天機器人根據客戶的偏好和預算，推薦個性化的旅行目的地和行程安排。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 虛擬導遊的景點講解：&lt;/strong&gt; 用戶在旅行過程中，可通過 RTC 連接 AI 虛擬導遊，獲得景點的詳細介紹和歷史文化背景。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.棒約翰：披薩界的智能需求預測工具&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;棒約翰（Papa John’s）&lt;/strong&gt; 披薩連鎖店正在利用 BigQuery、Vertex AI 以及 Gemini 模型，構建預測工具，以更準確地預測顧客在應用程序中的訂單需求。該公司還計劃優化會員忠誠度計劃，並提供更具個性化的營銷活動。 同時，棒約翰還計劃開發一款 AI 驅動的聊天機器人，以輔助處理顧客訂單。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的個性化語音/視頻點餐：&lt;/strong&gt; 用戶通過 RTC 進行語音/視頻點餐，AI 識別用戶的語音指令，並提供個性化的披薩推薦和搭配建議。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強的互動式菜單：&lt;/strong&gt; 用戶可通過 RTC 瀏覽互動式菜單，AI 提供詳細的菜品介紹和口味推薦，並支持在線定製披薩，滿足個性化需求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.六旗主題公園：智能遊園助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;六旗主題公園&lt;/strong&gt; 打造了一個行業領先的數字化助手，能夠解答遊客的疑問，並協助他們規劃行程。六旗還將藉助 Google Cloud 在人工智能、數據分析和基礎設施方面的強大能力，在旗下各主題公園中優化運營管理，提升個性化服務水平，從而全面改善遊客體驗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 個性化推薦的智能景點推薦：&lt;/strong&gt; AI 分析用戶的遊玩記錄和興趣偏好，推薦附近的景點和遊樂項目，並提供詳細的介紹和排隊時間信息。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強的互動地圖：&lt;/strong&gt; 通過 RTC 連接攝像頭，AI 能夠識別周圍環境，提供 AR 實景導航，引導用戶找到目標地點，並展示周邊設施信息。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4.BrushBuck Wildlife Tours：智能觀光方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;BrushBuck Wildlife Tours&lt;/strong&gt; 公司利用 Google Sheets 中的 Gemini 模型追蹤季節性動物的遷徙路線，確保每一位遊客都有機會在懷俄明州欣賞到令人驚歎的野生動物景觀。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTC 潛在性：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的實時野生動物觀光直播與專家互動：&lt;/strong&gt; 通過 RTC 實時直播野生動物遷徙畫面，AI 自動識別動物種類和行為，並提供相關信息。遊客可通過 RTC 與專家互動，提問和解答疑問。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;六、工業製造和電子 Manufacturing， Industrial &amp;amp; Electronics&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-06daba5580ff8e0cb9dbcc3720c3b0044dd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;三星 Ballie 球形機器人標誌着 AI 從工具向「生活伴侶」的範式轉變&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.三星：家庭伴侶機器人 Ballie&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三星 （Samsung）&lt;/strong&gt; 在其備受矚目的全新家庭伴侶機器人 Ballie 中應用了 Google 的生成式 AI 技術。Ballie 將能夠通過自然流暢的對話方式與用戶互動，協助管理家庭環境，包括調節燈光、迎接訪客、定製個性化日程安排、設置提醒事項等等。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;智能遠程監控與安全巡邏：&lt;/strong&gt; Ballie 可通過 RTC 進行家庭環境視頻巡邏，AI 自動識別異常情況，如陌生人闖入、電器故障等，並及時發出警報。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 識別寵物行為的遠程互動：&lt;/strong&gt; Ballie 通過 RTC 與寵物進行遠程互動，AI 識別寵物的情緒和需求，提供個性化的互動方式，如播放寵物喜歡的音樂、進行語音互動等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.Copel：電力公司 AI 智能體&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;巴西大型電力公司 &lt;strong&gt;Copel&lt;/strong&gt; 基於 Gemini Pro 1.5 開發了一款 AI 智能體。該智能體能夠與公司內部部署的 SAP ERP 系統進行交互，員工可以使用自然語言提出各種問題，從而簡化信息查詢流程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的電力系統遠程維護與故障診斷：&lt;/strong&gt; 現場工程師通過 RTC 視頻與遠程專家協作，AI 分析現場視頻和設備數據，輔助專家進行故障診斷和維護指導。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.拜耳作物科學公司：智能農業監控平台 Climate FieldView&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;拜耳作物科學公司（Bayer Crop Science）&lt;/strong&gt; 開發了 Climate FieldView，這是一個全面的農業平台。它整合了超過 250 層數據以及數十億個數據點，並利用人工智能提供建議，幫助農民優化田地設計和監控，從而提高產量和施肥效率。此外，該平台還有助於減少碳排放。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的遠程診斷與專家指導：&lt;/strong&gt; 農民通過 RTC 實時視頻監測農田，AI 分析作物生長情況和病蟲害情況，並提供專家指導和施肥建議。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 語音識別的智能控制：&lt;/strong&gt; 農民可以通過語音控制設備，AI 識別語音指令，並執行相應的操作，提高操作效率和安全性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;七、傳媒和遊戲 Media， Marketing &amp;amp; Gaming&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-66e60af761a1f85d75bb7b7ad18136bd92b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;AI 視頻平台 Synthesia 正在利用 Google Cloud 構建下一代先進的 AI 模型，更逼真地複製人類形象和聲音&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.金州勇士隊：個性化球賽觀賽解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;金州勇士隊 （The Golden State Warriors）&lt;/strong&gt; 將其所有數據整合到 BigQuery 統一數據平台中，以便該球隊能夠利用 Vertex AI 構建內容推薦引擎，為球迷提供相關且個性化的內容，包括實時比賽精彩片段、比分和統計數據，以及關於最新門票銷售或其他娛樂活動的提醒。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 賦能的個性化直播與多視角選擇：&lt;/strong&gt; 通過 RTC 提供比賽直播，AI 自動剪輯比賽精彩瞬間，生成精彩回放，供球迷隨時觀看。AI 還能根據用戶的偏好，推薦不同的觀看視角，滿足不同球迷的需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強的虛擬體驗與沉浸式觀賽：&lt;/strong&gt; 通過 RTC 連接 AR/VR 設備，AI 實時渲染比賽畫面，為球迷提供身臨其境的觀賽體驗。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.彭博社：智能博物館語音導覽&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;彭博社（Bloomberg）&lt;/strong&gt; 利用 Gemini 技術創建沉浸式語音導覽，從而提升博物館對視障人士的無障礙體驗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 語音合成的信息解讀：&lt;/strong&gt; AI 可以將展品的文字介紹、圖片描述等信息轉化為語音，幫助視障人士瞭解展品內容。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 智能回覆的實時問答：&lt;/strong&gt; 參觀者可以通過 RTC 向 AI 助手提問，AI 從知識庫中查找答案，並以語音形式回覆，幫助視障人士瞭解展品。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.Synthesia：個性化形象定製的 AI 視頻平台&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Synthesia&lt;/strong&gt; 是一家運營 AI 視頻平台的初創公司，該公司正在利用 Google Cloud 構建下一代先進的 AI 模型，這些模型能夠逼真地複製人類形象和聲音。此外，Synthesia 還在使用 Gemini 模型，以高速和高精度處理複雜的視覺和語言任務。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的虛擬形象實時互動與內容創作：&lt;/strong&gt; 用戶可通過 RTC 創建自己的虛擬形象，AI 實時捕捉用戶的表情和動作，並將其同步到虛擬形象上。用戶可使用虛擬形象進行視頻會議、直播互動和內容創作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4.Formula E：賽車數據監測智能體&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;賦能車手的實時決策平台&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Formula E&lt;/strong&gt; 開發了其車手智能體（Driver Agent），這是一個由 Vertex AI 和 Gemini 驅動的 AI 工具。Driver Agent 旨在分析比賽期間產生的大量多模態數據，併為車手提供可操作的見解。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的賽車手實時數據分析：&lt;/strong&gt; 通過 RTC 實時顯示車輛狀態（電量、速度、溫度等）和賽道環境（天氣、路況等）的關鍵數據，AI 分析數據的變化趨勢，為車手提供直觀的參考。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 連接的遠程指導與策略調整：&lt;/strong&gt; 教練可以通過 RTC 與車手進行實時語音溝通，調整比賽策略。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;八、公共服務與非盈利組織 Public Sector &amp;amp; Nonprofits&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-8ac548d2d8b3be06932e25f25aae39d9214.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Bower 將 AI 集成於服務中鼓勵用戶進行回收&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.Beyond 12：大學生對話式 AI 輔導工具&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Beyond 12&lt;/strong&gt; 公司在 Gemini 1.0 Pro 的幫助下開發了一款 AI 驅動的對話式輔導工具。該工具旨在服務於來自資源匱乏社區的首代大學生（指家中第一代上大學的學生）。這款 AI 工具能夠與學生互動，瞭解他們的背景和目標，解答疑問，並以個性化的方式評估他們的進展，且不會將他們與他人進行比較。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的遠程輔導與個性化指導：&lt;/strong&gt; 學生可以通過 RTC 與 AI 虛擬導師進行視頻交流，AI 分析瞭解學生的需求和目標，並提供個性化的學習建議。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 提供支持的心理疏導：&lt;/strong&gt; AI 可以識別學生的情緒風險，及時進行心理疏導，緩解學生的焦慮和壓力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.Bower：智能回收 APP&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;瑞典初創公司 Bower&lt;/strong&gt; 開發了一款應用程序，通過遊戲化的方式鼓勵用戶進行回收，並在北歐和英國地區為用戶提供獎勵。該公司已將生成式 AI 技術集成到該服務中，以便用戶更輕鬆地識別可回收物品，並將其輸入到應用程序中。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的視覺交互與智能物品識別：&lt;/strong&gt; 用戶可以通過 RTC 調用手機攝像頭，AI 實時掃描物品，自動識別物品類型和可回收性，並通過 AR 技術在屏幕上疊加回收指導信息，如正確的投放方式、回收點位置等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.明尼蘇達州車輛管理局：智能實時翻譯方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;明尼蘇達州車輛管理局（Division of Driver and Vehicle Services）&lt;/strong&gt; 利用雙向實時翻譯技術，幫助非英語使用者獲得駕照和其他相關服務。（客戶智能體）&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的實時翻譯：&lt;/strong&gt; 通過 RTC 提供實時雙向翻譯服務，幫助非英語使用者順利完成駕照考試。例如在填寫表格時，AI 可以實時將表格內容翻譯成用戶的語言，幫助用戶準確填寫信息。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;九、零售 Retail&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-19810d3ef7d694d4808a15f0dc0911ec3a2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;美國快餐巨頭 Wendy’s 推出 Wendy’s FreshAI 來優化點餐服務&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.BrainLogic：智能購物 AI 助手 Zapia&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;BrainLogic&lt;/strong&gt; 在 Vertex AI 平台上使用 Anthropic 的 Claude 模型推出了 Zapia。Zapia 是一款個人 AI 助手，旨在滿足拉丁美洲市場對會話式商務的偏好。Zapia 為數百萬用戶提供產品發現、本地商家搜索和購買輔助等功能，並獲得了超過 90% 的積極用戶反饋。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的遠程購物助理：&lt;/strong&gt; 用戶通過 RTC 視頻與 AI 購物助理互動，AI 根據用戶的歷史購買記錄、瀏覽行為和實時對話內容，推薦更符合用戶需求的商品。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強的視覺交互與場景化購物：&lt;/strong&gt; 用戶可以通過 RTC 調用手機攝像頭，拍攝商品或場景照片，以便 AI 助理更好地理解需求並提供建議。例如用戶可以展示家中環境，AI 根據照片提供家居搭配建議，並推薦合適的傢俱和裝飾品。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.台灣家樂福：AI 侍酒師&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;台灣家樂福&lt;/strong&gt; 的 AI 侍酒師是一項集成在其應用程序中的對話式 AI 服務，旨在幫助顧客根據個人喜好選擇葡萄酒。該服務由 Gemini 模型驅動，利用龐大的葡萄酒數據庫提供個性化的推薦，從而無縫銜接線上和線下購物體驗。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 識別酒標的便捷信息獲取：&lt;/strong&gt; 顧客可以通過 RTC 調用攝像頭，拍攝葡萄酒酒標，AI 自動識別酒款信息，並提供詳細的介紹和評價。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;個性化葡萄酒推薦與品鑑指導：&lt;/strong&gt; 顧客通過 RTC 視頻與 AI 侍酒師互動，AI 根據用戶的口味偏好和餐飲搭配推薦葡萄酒，並提供品鑑指導。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.家得寶：家庭裝修智能體 Magic Apron&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;家得寶 （The Home Depot）&lt;/strong&gt; 構建了 Magic Apron，這是一個 AI Agent，可以全天候提供專業指導，包括詳細的操作指南、產品推薦和評價摘要，從而簡化家庭裝修流程。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的遠程裝修指導與材料選購：&lt;/strong&gt; 用戶通過 RTC 視頻與 AI 裝修專家互動，AI 分析用戶房屋結構和裝修需求，並提供材料選購建議和施工指導。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 個性化的裝修方案推薦與虛擬預覽：&lt;/strong&gt; 用戶可以通過 RTC 分享房間照片或裝修風格偏好，AI 識別用戶喜好，推薦個性化的裝修方案， 並實時渲染效果圖，讓用戶提前看到裝修效果。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;4.Wendy’s：智能點餐解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Wendy’s Fresh AI&lt;/strong&gt; 將 Gemini 的對話式 AI 能力與音頻和視覺元素相結合，為 Wendy’s 的顧客打造高度個性化和定製化的體驗，確保體驗的一致性和愉悅性。同時，它也讓員工能夠專注於提供卓越的服務和餐食準備，標誌着快餐餐廳的下一個發展階段。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的個性化點餐指導與沉浸式菜單：&lt;/strong&gt; 通過 RTC 向顧客展示視頻菜單，AI 根據時間、天氣、顧客偏好等因素，動態更新菜單內容，推薦特色菜品和優惠套餐。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的互動問答：&lt;/strong&gt; 客戶通過手勢或語音與動態菜單進行互動，AI 實時響應，完成點餐和支付。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;十、技術 Technology&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9c0c8b058febad91f9657301e0115933626.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Flockx 致力於通過 AI 技術幫助用戶建立真實世界的社交聯繫&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.Abstrakt：支持情緒識別的智能聯絡中心解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Abstrakt&lt;/strong&gt; 公司利用 Vertex AI 技術，通過實時轉錄通話內容和評估用戶情緒，來提升聯絡中心客戶的體驗。這使得呼叫中心工作人員能夠進行更高效的對話，更快地解決問題，並提供更優質的客戶服務。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的情緒識別與智能客服調度：&lt;/strong&gt; AI 實時分析客服通話中的用戶情緒，並根據情緒狀態智能調度客服資源，優先處理情緒激動的用戶。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.Flockx：智能社交解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Flockx&lt;/strong&gt; 致力於消除人們的孤獨感。他們利用基於 Google Cloud 和 Elastic 構建的協作式 AI 代理技術，將個人與各種活動、社羣以及志同道合的人聯繫起來。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 實時匹配興趣相投的夥伴：&lt;/strong&gt; AI 根據用戶的興趣愛好、技能特長等信息，實時匹配合適的夥伴，方便用戶進行交流和合作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的活動體驗與沉浸式參與：&lt;/strong&gt; 用戶在匹配成功後可以通過 RTC 連接 VR 設備，參與虛擬現實活動，如演唱會、展覽會等，獲得身臨其境的體驗。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.Gojek：智能支付語音助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gojek&lt;/strong&gt; ，總部位於印度尼西亞的超級應用，推出了「Dira by GoTo AI」，這是一款印尼語 AI 語音助手，集成在其 GoPay 服務中。用戶可以通過語音指令操作，無需打字和滾動，即可用更少的步驟完成賬單支付和轉賬等任務。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 增強的語音支付與安全驗證：&lt;/strong&gt; 用戶通過 RTC 語音指令完成支付操作，AI 進行聲紋識別和人臉識別，確保支付安全。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的客服支持與個性化幫助：&lt;/strong&gt; 用戶可以通過 RTC 向 Dira 提問，AI 助手會從知識庫中查找答案，並以語音形式回覆，快速解決支付問題。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;十一、電信 Telecommunications&lt;/h2&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2278c98f10d6452be50bc68cb74d3a6e950.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;加拿大貝爾公司為其商業客戶構建可定製的聯繫中心解決方案&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.加拿大貝爾公司：可定製的聯絡中心解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;加拿大貝爾公司（Bell Canada）&lt;/strong&gt; 為其商業客戶構建了可定製的聯絡中心解決方案。該方案提供由 AI 驅動的智能客服，用於接聽來電。同時還提供「智能助手」（Agent Assist）功能，該功能在人工客服上線時進行監聽，並提供建議和情緒分析。AI 的應用已經為客戶運營節省了 2000 萬美元的成本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的智能客服與問題診斷：&lt;/strong&gt; AI 智能客服通過 RTC 視頻為用戶提供在線支持，並根據用戶問題類型進行智能分流。如 AI 無法解決問題，可將用戶無縫轉接至人工客服，並共享會話記錄和分析結果。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的情緒管理與主動關懷：&lt;/strong&gt; 通過 RTC 視頻通話，AI 實時分析客戶面部表情和語音語調，準確識別客戶情緒狀態，並自動向客服人員發送關懷提示，幫助客服人員提供更貼心的服務。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.意大利電信：AI 語音助手&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;意大利電信（TIM）&lt;/strong&gt; 部署了一款由 Google 提供技術支持的語音助手，用於處理大量客戶來電，效率提高了 20%。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 驅動的個性化服務推薦與業務辦理：&lt;/strong&gt; AI 分析用戶的使用習慣和消費行為，並通過 RTC 視頻向用戶推薦個性化的服務套餐。用戶可通過 RTC 在線辦理業務，無需前往營業廳。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI 輔助的可視化服務與直觀問題解決：&lt;/strong&gt; 用戶可以通過語音助手發起視頻客服請求，AI 自動識別問題類型，並將用戶連接到相應的客服人員或專家。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.巴西電信：客戶服務質量優化方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;巴西電信（TIM Brasil）&lt;/strong&gt; 利用 Google Cloud 的生成式 AI 技術，將客戶服務通話錄音轉錄成文本，然後以越來越高的精度對客戶需求進行分類、總結和評估。該解決方案可以協助客服人員的工作，併為團隊提供關於最佳實踐的反饋。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RTE+AI 潛在場景：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI 驅動的客戶服務質量監控與流程優化：&lt;/strong&gt; AI 分析 RTC 通話錄音和文本數據，評估客服服務質量，並發現服務流程中的瓶頸。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;原文鏈接：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.google.com%2Ftransform%2F101-real-world-generative-ai-use-cases-from-industry-leaders" target="_blank"&gt;https://cloud.google.com/transform/101-real-world-generative-ai-use-cases-from-industry-leaders&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;課代表留言：感謝 Gemini 對本文腦洞的大力支持🫰期待早日見到 Gemini 老師預判的未來 👀&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-9296e252d589f61c366ccc412fa389870d1.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;更多 Voice Agent 學習筆記：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSqXLZvq_zwWDcOVKbAb7HQ" target="_blank"&gt;級聯 vs 端到端、全雙工、輪次檢測、方言語種、商業模式…語音 AI 開發者都在關心什麼？丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F7QPgzp8kDR_9iHUa4oFeiA" target="_blank"&gt;a16z 最新報告：AI 數字人應用層即將爆發，或將孕育數十億美金市場丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FUM1qs2IT1S6kJ4sZf_k3uA" target="_blank"&gt;a16z 合夥人：語音交互將成為 AI 應用公司最強大的突破口之一，巨頭們在 B2C 市場已落後太多丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FWI0gE4x-TZG0gdgSV_bVSA" target="_blank"&gt;ElevenLabs 33 億美元估值的祕密：技術驅動+用戶導向的「小熊軟糖」團隊丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSVsgDF8F1hxy3-e5-ntGbw" target="_blank"&gt;端側 AI 時代，每台家居設備都可以是一個 AI Agent 丨 Voice Agent 學習筆記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F4K5wdUEDxrs1afHZSAIuqg" target="_blank"&gt;世界最炙手可熱的語音 AI 公司，舉辦了一場全球黑客松，冠軍作品你可能已經看過&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FJCYzc1Ig-HFFAN3sTQDYbw" target="_blank"&gt;多模態 AI 怎麼玩？這裏有 18 個腦洞&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrN9poD_X6SDxRLMsudg_xg" target="_blank"&gt;AI 重塑宗教體驗，語音 Agent 能否成為突破點？&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FeFS1mnAbUpAJdiLSSGWpSA" target="_blank"&gt;對話 TalktoApps 創始人：Voice AI 提高了我五倍的生產力，語音輸入是人機交互的未來&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fr2z1bilamX6YWTg90F8xYA" target="_blank"&gt;a16z 最新語音 AI 報告：語音將成為關鍵切入點，但非最終產品本身（含最新圖譜）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="241" src="https://oscimg.oschina.net/oscnet/up-23324d9a493f2da182646d4f0c393522663.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/354484</link>
      <guid isPermaLink="false">https://www.oschina.net/news/354484</guid>
      <pubDate>Sat, 10 May 2025 14:06:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
  </channel>
</rss>
