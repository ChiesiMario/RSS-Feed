<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Fri, 28 Feb 2025 07:38:12 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>Meta 計劃發佈獨立的 Meta AI 應用程序</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbc.com%2F2025%2F02%2F27%2Fmeta-plans-to-release-a-standalone-meta-ai-app.html&quot; target=&quot;_blank&quot;&gt;CNBC&lt;/a&gt; 援引知情人士消息稱，Meta 計劃在第二季度推出一款獨立的 Meta AI 應用程序，以更好地與 OpenAI 的 ChatGPT 和谷歌的 Gemini 等 AI 聊天機器人競爭。「這標誌着 Meta 首席執行官馬克·扎克伯格 (Mark Zuckerberg) 的計劃邁出了重要一步」&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;扎克伯格在今年 1 月份的公司第四季度財報電話會議上向分析師表示：「今年，高度智能和個性化的人工智能助手將服務超過 10 億人，我預計 Meta AI 將成為領先的人工智能助手。」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;與 ChatGPT 和 Perplexity 等競爭對手的生成式 AI 工具不同，Meta AI 目前僅通過網站和 Facebook 和 WhatsApp 等公司的應用程序供用戶使用。知情人士表示，儘管 Meta 旗下應用程序系列的龐大用戶羣可以訪問 Meta AI，但如果它作為獨立應用程序提供，用戶可能會與數字助理進行更深入的互動。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;今年 1 月，扎克伯格曾公開同意一位 Threads 用戶的觀點，即 Meta 應該為其數字助理創建一個獨立的移動應用程序。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;214&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7105eada1bedbd2babe612557700be0d148.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時，Meta 還計劃測試 Meta AI 的付費訂閲服務，以提供更強大的功能版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Meta AI 聊天機器人於 2023 年 9 月推出，定位為一款生成式人工智能數字助理，可以在其現有應用程序中根據用戶提示提供響應並創建圖像。目前，Meta AI 每月擁有超過 7 億活躍用戶。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336203/meta-plans-standalone-meta-ai-app</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336203/meta-plans-standalone-meta-ai-app</guid>
            <pubDate>Fri, 28 Feb 2025 07:21:05 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>EA 開源《命令與征服》系列經典遊戲</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;EA 宣佈正式開源了四款《命令與征服》系列經典遊戲，均採用 GPL 許可協議。包括《命令與征服：泰伯利亞的黎明》、《命令與征服：紅色警戒》、《命令與征服：叛逆者》和《命令與征服：將軍》。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsteamcommunity.com%2Flinkfilter%2F%3Fu%3Dhttps%253A%252F%252Fgithub.com%252Felectronicarts%252FCnC_Tiberian_Dawn&quot; target=&quot;_blank&quot;&gt;https://github.com/electronicarts/CnC_Tiberian_Dawn&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsteamcommunity.com%2Flinkfilter%2F%3Fu%3Dhttps%253A%252F%252Fgithub.com%252Felectronicarts%252FCnC_Red_Alert&quot; target=&quot;_blank&quot;&gt;https://github.com/electronicarts/CnC_Red_Alert&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsteamcommunity.com%2Flinkfilter%2F%3Fu%3Dhttps%253A%252F%252Fgithub.com%252Felectronicarts%252FCnC_Renegade&quot; target=&quot;_blank&quot;&gt;https://github.com/electronicarts/CnC_Renegade&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsteamcommunity.com%2Flinkfilter%2F%3Fu%3Dhttps%253A%252F%252Fgithub.com%252Felectronicarts%252FCnC_Generals_Zero_Hour&quot; target=&quot;_blank&quot;&gt;https://github.com/electronicarts/CnC_Generals_Zero_Hour&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;與此同時，EA 還宣佈為《命令與征服》系列遊戲引入 Steam Workshop 支持，以允許用戶上傳他們的自定義地圖。&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C&amp;amp;C Renegade&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C&amp;amp;C Generals &amp;amp; Zero Hour&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C&amp;amp;C 3 Tiberium Wars and Kane’s Wrath&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C&amp;amp;C Red Alert 3 &amp;amp; Uprising&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C&amp;amp;C 4 Tiberian Twilight&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;以及更新了所有任務編輯器和世界構建器工具，以便用戶可以直接將地圖發佈到 Steam 創意工坊。當用戶在 Steam 創意工坊上訂閲某個項目時（通過客戶端或網頁），遊戲現在會在下次啓動遊戲時將該內容拉下，並且地圖將顯示在單人/多人地圖選擇菜單中。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;為了支持 Steam 創意工坊，EA 發佈了一個「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Felectronicarts%2FCnC_Modding_Support&quot; target=&quot;_blank&quot;&gt;C&amp;amp;C Modding Support&lt;/a&gt;」包，該資源包包含了所有使用 SAGE 引，擎開發的《命令與征服》系列遊戲的源 XML、Schema、Script、Shader 和 Map 文件，為玩家和開發者提供了豐富的創作素材。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，他們還發布了一段新視頻，展示了早期開發過程中的一些罕見遊戲片段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;282&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-beb9bb44f7f46ad12623b6dba6258e49d12.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstore.steampowered.com%2Fnews%2Fapp%2F2229890%2Fview%2F502818210084553731&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336200/ea-open-sourced-command-conquer</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336200/ea-open-sourced-command-conquer</guid>
            <pubDate>Fri, 28 Feb 2025 07:08:05 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>百萬級羣聊的設計實踐</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section style=&quot;font-size: 14px;color: rgb(62, 62, 62);&quot;&gt; 
  &lt;section style=&quot;margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;&quot;&gt; 
    &lt;section style=&quot;color: rgba(0, 0, 0, 0.5);font-size: 13px;text-align: justify;&quot;&gt; 
     &lt;p&gt;作者：來自 vivo 互聯網服務器團隊- Cai Linfeng&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);padding: 10px;&quot;&gt; 
    &lt;section style=&quot;text-align: left;&quot;&gt; 
     &lt;section style=&quot;text-align: justify;line-height: 1.8;padding-right: 5px;padding-left: 5px;color: rgb(160, 160, 160);&quot;&gt; 
      &lt;p&gt;本文介紹了服務端在搭建 Web 版的百萬人級別的羣聊系統時，遇到的技術挑戰和解決思路，內容包括：通信方案選型、消息存儲、消息有序性、消息可靠性、未讀數統計。&lt;/p&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;現在 IM 羣聊產品多種多樣，有國民級的微信、QQ，企業級的釘釘、飛書，還有許多公司內部的 IM 工具，這些都是以客戶端為主要載體，而且羣聊人數通常都是有限制，微信正常羣人數上限是 500，QQ2000 人，收費能達到 3000 人，這裏固然有產品考量，但技術成本、資源成本也是很大的因素。而筆者業務場景上需要一個迭代更新快、輕量級（不依賴客戶端）、單羣百萬羣成員的純 H5 的 IM 產品，本文將回顧實現一個百萬人量級的羣聊，服務器側需要考慮的設計要點，希望可以給到讀者一些啓發。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;二、背景介紹&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;不同的羣聊產品，採用的技術方案是不同的，為了理解接下來的技術選型，需要先了解下這羣聊產品的特性。&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);height: auto;&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;單羣成員需要支撐百萬人，同時在線百萬級。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;功能、體驗要接近純客戶端實現方案。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;用戶端完全用 H5 承載。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;三、通信技術&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;即時通信常見的通信技術有短輪詢、長輪詢、Server-Sent Events(SSE)、Websocket。短輪詢和長輪詢適用於實時性要求不高的場景，比如論壇的消息提醒。SSE 適用於服務器向客戶端單向推送的場景，如實時新聞、股票行情。Websocket 適用於實時雙向通信的場景，實時性好，且服務端、前端都有比較成熟的三方包，如 socket.io，所以這塊在方案選擇中是比較 easy 的，前後端使用 Websocket 來實現實時通信。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;&quot;&gt; 
    &lt;span style=&quot;display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;font-size: 12px;text-shadow: rgb(204, 204, 204) 4px 3px;color: rgb(65, 95, 255);&quot; title=&quot;&quot;&gt;&lt;p&gt;彩蛋提醒&lt;/p&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;border-width: 1px;border-style: solid;border-color: rgb(192, 200, 209);margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;&quot;&gt; 
    &lt;p&gt;我們為大家準備了抽獎福利，請繼續閲讀下去。&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;四、消息存儲&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;羣聊消息的保存方式，主流有 2 種方式：讀擴散、寫擴散。圖 1 展示了它們的區別，區別就在於消息是寫一次還是寫 N 次，以及如何讀取。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100016471&quot; data-ratio=&quot;0.30092592592592593&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/281b8336-5821-4d8c-a063-ea27756fa35b.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;font-size: 12px;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 1&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;section&gt; 
   &lt;p&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;讀擴散&lt;/span&gt;就是所有羣成員共用一個羣信箱，當一個羣產生一條消息時，只需要寫入這個羣的信箱即可，所有羣成員從這一個信箱裏讀取羣消息。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;優點是寫入邏輯簡單，存儲成本低，寫入效率高。缺點是讀取邏輯相對複雜，要通過消息表與其他業務表數據聚合；消息定製化處理複雜，需要額外的業務表；可能還有 IO 熱點問題。&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;p&gt;舉個例子：&lt;/p&gt; 
     &lt;p&gt;很常見的場景，展示用戶對消息的已讀未讀狀態，這個時候公共羣信箱就無法滿足要求，必須增加消息已讀未讀表來記錄相關狀態。還有用戶對某條消息的刪除狀態，用戶可以選擇刪除一條消息，但是其他人仍然可以看到它，此時也不適合在公共羣信箱裏拓展，也需要用到另一張關係表，總而言之針對消息做用戶特定功能時就會比寫擴散複雜。&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;寫擴散&lt;/span&gt;就是每個羣成員擁有獨立的信箱，每產生一條消息，需要寫入所有羣成員信箱，羣成員各自從自己的信箱內讀取羣消息。&lt;br&gt;優點是讀取邏輯簡單，適合消息定製化處理，不存在 IO 熱點問題。缺點是寫入效率低，且隨着羣成員數增加，效率降低；存儲成本大。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;所以當單羣成員在萬級以上時，用寫擴散就明顯不太合適了，寫入效率太低，而且可能存在很多無效寫入，不活躍的羣成員也必須得有信箱，存儲成本是非常大的，因此採用讀擴散是比較合適的。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-left: 3px solid rgb(65, 94, 255);border-bottom-left-radius: 0px;padding-left: 8px;vertical-align: top;align-self: flex-start;flex: 0 0 auto;&quot;&gt; 
    &lt;section style=&quot;color: rgba(0, 0, 0, 0.5);font-size: 13px;text-align: justify;&quot;&gt; 
     &lt;p&gt;據瞭解，微信是採用寫擴散模式，微信羣設定是 500 人上限，寫擴散的缺點影響就比較小。&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;五、架構設計&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.1 整體架構&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;先來看看羣聊的架構設計圖，如圖 2 所示：&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100016472&quot; data-ratio=&quot;0.7398148148148148&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/8b97eb4a-1d53-4bd6-948b-a9ad9ab167ef.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 2&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;從用戶登錄到發送消息，再到羣用戶收到這條消息的系統流程如圖 3 所示：&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100016469&quot; data-ratio=&quot;0.4009259259259259&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/fa273377-a1c0-4297-9fd3-ab4c2f5b28e2.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 3&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
   &lt;li&gt;&lt;p&gt;用戶登錄，通過負載均衡，與&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;建立 Websocket 長連接。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;管理會話，管理羣與用戶的映射關係，在本地內存裏使用哈希表存儲，key 為 groupId，value 為 List&amp;lt;SocketIOClient&amp;gt;，同一個羣的用戶可能會在不同的集羣服務器上。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;向&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;羣組服務&lt;/span&gt;上報羣組路由，上報它的內網 IP 和它所管理的 groupIdList 的關係，這裏需要 2 種同步策略並行保證羣組路由信息的準確性：a.在用戶建立、斷開長連接時即刻上報；b.定時上報。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;羣組服務&lt;/span&gt;管理羣組路由，使用遠程中心緩存 Redis 管理 groupId 和連接服務器 IP 的關係，key 為 groupId，value 為 List，該 IP 為連接服務的內網 IP 地址，這裏會做上報的心跳判斷，超過 3 個心跳週期不上報，則認為已斷線。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;用戶在羣裏發佈一條消息，消息通過 Websokcet 送達&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;，然後經過&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;——&amp;gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;消息隊列&lt;/span&gt;——&amp;gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;羣組服務&lt;/span&gt;，消息在羣組服務裏經過頻控、安全檢查、格式轉換等一系列流程後入庫，持久化。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;羣組服務&lt;/span&gt;通過羣組路由管理獲取這條消息所屬羣的路由信息，即一組連接服務的 IP 地址，然後通過 HTTP 回調對應的&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;，通知它們有新消息產生，這裏只簡單傳遞消息 ID。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;收到 HTTP 請求後，根據會話管理查詢該羣所有用戶，給用戶發送新消息提醒。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;用戶收到新消息提醒，通過 Websocket 來&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;連接服務&lt;/span&gt;拉取該新消息具體詳情，然後根據消息協議展示在信息流裏。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.2 路由策略&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;用戶應該連接到哪一台連接服務呢？這個過程重點考慮如下 2 個問題：&lt;/p&gt; 
  &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
   &lt;li&gt;&lt;p&gt;儘量保證各個節點的連接均衡；&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;增刪節點是否要做 Rebalance。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;保證均衡有如下幾個算法：&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;輪詢&lt;/strong&gt;：挨個將各個節點分配給客戶端，但會出現新增節點分配不均勻的情況；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;取模&lt;/strong&gt;：類似於 HashMap，但也會出現輪詢的問題。當然也可以像 HashMap 那樣做一次 Rebalance，讓所有的客戶端重新連接。不過這樣會導致所有的連接出現中斷重連，代價有點大。由於 Hash 取模方式的問題帶來了一致性 Hash 算法，但依然會有一部分的客戶端需要 Rebalance；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;權重&lt;/strong&gt;：可以手動調整各個節點的負載情況，甚至可以做成自動的，基於監控當某些節點負載較高就自動調低權重，負載較低的可以提高權重；&lt;br&gt;筆者是採用輪詢 + 權重模式，儘量保證負載均衡。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.3 重連機制&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;當應用在擴縮容或重啓升級時，在該節點上的客戶端怎麼處理？&lt;br&gt;由於設計有心跳機制，當心跳不通或監聽連接斷開時，就認為該節點有問題了，就嘗試重新連接；如果客戶端正在發送消息，那麼就需要將消息臨時保存住，等待重新連接上後再次發送。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.4 線程策略&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;將連接服務裏的 IO 線程與業務線程隔離，提升整體性能，原因如下：&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;充分利用多核的並行處理能力：IO 線程和業務線程隔離，雙方都可以並行處理網絡 IO 和業務邏輯，充分利用計算機多核並行計算能力，提升性能；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;故障隔離：業務線程處理多種業務消息，有 IO 密集型，也有 CPU 密集型，有些是純內存計算，不同的業務處理時延和故障率是不同的。如果把業務線程和 IO 線程合併，就會有如下問題：某類業務處理較慢，阻塞 IO 線程，導致其他處理較快的業務消息響應不及時；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;可維護性：IO 線程和業務線程隔離之後，職責單一，有利於維護和定位問題。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.5 有狀態鏈接&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;在這樣的場景中不像 HTTP 那樣是無狀態的，需要明確知道各個客戶端和連接的關係。比如需要向客戶端廣播羣消息時，首先得知道客戶端的連接會話保存在哪個連接服務節點上，自然這裏需要引入第三方中間件來存儲這個關係。通過由連接服務主動上報給羣組服務來實現，上報時機是客戶端接入和斷開連接服務以及週期性的定時任務。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.6 羣組路由&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;設想這樣一個場景：需要給羣所有成員推送一條消息怎麼做？&lt;br&gt;通過羣編號去前面的路由 Redis 獲取對應羣的連接服務組，再通過 HTTP 方式調用連接服務，通過連接服務上的長連接會話進行真正的消息下發。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;5.7 消息流轉&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;連接服務直接接收用戶的上行消息，考慮到消息量可能非常大，在連接服務裏做業務顯然不合適，這裏完全可以選擇 Kafka 來解耦，將所有的上行消息直接丟到 Kafka 就不管了，消息由羣組服務來處理。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;六、消息順序&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;6.1 亂序現象&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;為什麼要講消息順序，來看一個場景。假設羣裏有用戶 A、用戶 B、用戶 C、用戶 D，下面以 ABCD 代替，假設 A 發送了 3 條消息，順序分別是 msg1、msg2、msg3，但 B、C、D 看到的消息順序不一致，如圖 4 所示：&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100016470&quot; data-ratio=&quot;0.475&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/ebbcc90d-7a30-4c02-94b6-ea2c7021780c.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 4&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;這時 B、C、D 肯定會覺得 A 在胡言亂語了，這樣的產品用戶必定是不喜歡的，因此必須要保證所有接收方看到的消息展示順序是一致的。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;6.2 原因分析&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;所以先了解下消息發送的宏觀過程：&lt;/p&gt; 
  &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
   &lt;li&gt;&lt;p&gt;發送方發送消息。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;服務端接收消息。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;服務端返回 ACK 消息。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;服務端推送新消息或客戶端拉取新消息。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;在上面的過程中，都可能產生順序問題，簡要分析幾點原因：&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;時鐘不一致&lt;/strong&gt;：多個客戶端、服務端集羣、DB 集羣，時鐘不能保證完全一致，因此不能用本地時間來決定消息順序。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;網絡傳輸&lt;/strong&gt;：發送消息環節，先發後至，到達服務器的順序可能是 msg2、msg1、msg3。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;多線程&lt;/strong&gt;：服務器考慮性能、吞吐量，往往會在多處環節採用線程池、異步去提升整體速度，因此也會產生順序問題。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;6.3 解決方案&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;6.3.1&amp;nbsp;單用戶保持有序&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;通過上面的分析可以知道，其實無法保證或是無法衡量不同用戶之間的消息順序，那麼只需保證同一個用戶的消息是有序的，保證上下文語義，所以可以得出一個比較樸素的實現方式：以服務端數據庫的唯一自增 ID 為標尺來衡量消息的時序，然後讓同一個用戶的消息處理串行化。那麼就可以通過以下幾個技術手段配合來解決：&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;發送消息使用 Websocket 發送，並且多次發送保持同一個會話，那麼 tcp 協議就保證了應用層收到的消息必定是有序的。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;在應用程序內部處理時，涉及相關多線程的模塊，根據 uid 進行 hash，匹配一個單線程的線程池，即同一個 uid 的消息永遠用同一個線程去處理，不同用戶之間仍是並行處理。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;在跨應用程序時，一般有 2 種處理方式：一是用 rpc 同步調用；二是利用消息中間件的全局有序。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;用戶端上做消息發送頻率限制，2 次發送必須間隔 1 秒，能大大降低亂序的可能性了。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;6.3.2&amp;nbsp;推拉結合&lt;/span&gt;&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;section&gt; 
   &lt;p&gt;到這裏基本解決了同一個用戶的消息可以按照他自己發出的順序入庫的問題，即解決了消息發送流程裏第一、二步。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
   &lt;p&gt;第三、四步存在的問題是這樣的：&lt;/p&gt; 
   &lt;p&gt;A 發送了 msg1、msg2、msg3，B 發送了 msg4、msg5、msg6，最終服務端的入庫順序是 msg1、msg2、msg4、msg3、msg5、msg6，那除了 A 和 B 其他人的消息順序需要按照入庫順序來展示，而這裏的問題是服務端考量推送吞吐量，在推送環節是併發的，即可能 msg4 比 msg1 先推送到用戶端上，如果按照推送順序追加來展示，那麼就與預期不符了，每個人看到的消息順序都可能不一致，如果用戶端按照消息的 id 大小進行比較插入的話，用戶體驗將會比較奇怪，突然會在 2 個消息中間出現一條消息。所以這裏採用推拉結合方式來解決這個問題，具體步驟如下：&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;用戶端發出消息，服務端將消息以羣維度按照消息的入庫順序緩存在 Redis 有序 SET。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;服務端推送給用戶端新消息提醒，內容是該新消息的 id。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;用戶端拉取消息，攜帶 2 個消息 id，startId 和 endId，startId：本地最新的完整消息 id；endId：服務端推送得到的新消息 id。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;服務端返回 2 個消息 id 區間內的消息列表。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img data-imgfileid=&quot;100016468&quot; data-ratio=&quot;0.13148148148148148&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/b4ba71dd-797b-4f61-8a2a-bd325e05fc07.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 5&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100016476&quot; data-ratio=&quot;0.36944444444444446&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/90da72d5-745c-46db-bf87-aa9f4dbe24df.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 6&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;舉例，圖 5 表示服務端的消息順序，圖 6 表示用戶端拉取消息時本地消息隊列和提醒隊列的變化邏輯。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
   &lt;li&gt;&lt;p&gt;t1 時刻用戶本地最新的完整消息是 msg1，即這條消息已經完整展示給用戶。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;t2 時刻收到服務端推送的 msg3 新消息提醒，放到提醒隊列，此時用戶看不到這條消息。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;t3 時刻向服務端拉取消息詳情，請求參數為 startId：msg1，endId：msg3，服務端會按順序一起返回 2 個消息區間內的所有消息的詳情即 msg2、msg4、msg3，將消息詳情同步寫入到消息隊列，此時用戶可以看到刷新出 3 條消息。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;t4 時刻用戶還會收到 msg2、msg4 的新消息提醒，用戶端校驗消息隊列已經存在 msg2、msg4 的詳情，忽略該新消息提醒。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-left: 3px solid rgb(65, 94, 255);border-bottom-left-radius: 0px;padding-left: 8px;vertical-align: top;align-self: flex-start;flex: 0 0 auto;&quot;&gt; 
    &lt;section style=&quot;color: rgba(0, 0, 0, 0.5);text-align: justify;&quot;&gt; 
     &lt;p&gt;通過推拉結合的方式可以保證所有用戶收到的消息展示順序一致。細心的讀者可能會有疑問，如果聊天信息流裏有自己發送的消息，那麼可能與其他的人看到的不一致，這是因為自己的消息展示不依賴拉取，需要即時展示，給用戶立刻發送成功的體驗，同時其他人也可能也在發送，最終可能比他先入庫，為了不出現信息流中間插入消息的用戶體驗，只能將他人的新消息追加在自己的消息後面。所以如果作為發送者，消息順序可能不一致，但是作為純接收者，大家的消息順序都是一樣的。&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;七、消息可靠性&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;在 IM 系統中，消息的可靠性同樣非常重要，它主要體現在：&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;消息不丟失&lt;/strong&gt;：對發送人來説，必須保證消息能入庫；對接收者來説，不管是在線還是離線，都能保證收到。但是這裏的不丟失，只是説以最大努力去保證，並不是説完全不丟失。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;消息不重複&lt;/strong&gt;：這很容易理解，同一條消息不能重複出現。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;7.1 消息不丟失設計&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
   &lt;li&gt;&lt;p&gt;&lt;strong&gt;傳輸協議保障&lt;/strong&gt;：首先 TCP 是可靠的協議，能較大程度上保證消息不丟失。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;strong&gt;增加 ACK 機制&lt;/strong&gt;：服務端在執行完消息處理的所有流程後，給發送者發送 ACK；假如發送者在超時時間內沒有收到 ACK 消息，則進行一定次數的重試，重新發送；當重發次數超過預設次數，就不再重發，消息發送失敗。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;strong&gt;最終一致性&lt;/strong&gt;：這是對接收者而言，如果某條新消息提醒因網絡等其他原因丟失，用戶沒有收到這條消息提醒，那麼用戶就不會去拉消息詳情，在用戶視角就是沒有看到這條消息。但是當後續的新消息提醒送達時，可以依賴前面提到的拉取機制拿到一個區間內的消息列表，這裏就包含了丟失的消息，因此能達到最終一致性。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;7.2 消息不重複設計&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;增加 UUID&lt;/strong&gt;：每條消息增加 UUID，由客戶端創建消息時生成，同一個用戶的消息 UUID 唯一。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;服務端&lt;/strong&gt;：用戶 ID+UUID 在數據庫做聯合唯一索引，保證數據層面消息不重複。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;&lt;strong&gt;用戶端&lt;/strong&gt;：進行兜底，構造一個 map 來維護已接收消息的 id，當收到 id 重複的消息時直接丟棄。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;八、未讀數統計&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;為了提醒用戶有新消息，需要給用戶展示新消息提醒標識，產品設計上一般有小紅點、具體的數值 2 種方式。具體數值比小紅點要複雜，這裏分析下具體數值的處理方式，還需要分為初始打開羣和已打開羣 2 個場景。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;p&gt;&lt;strong&gt;已打開羣&lt;/strong&gt;：可以完全依賴用戶端本地統計，用戶端獲取到新消息後，就將未讀數累計加 1，等點進去查看後，清空未讀數統計，這個比較簡單。&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section&gt; 
   &lt;p&gt;&lt;strong&gt;初始打開羣&lt;/strong&gt;：由於用戶端採用 H5 開發，用戶端沒有緩存，沒有能力緩存最近的已讀消息遊標，因此這裏完全需要服務端來統計，在打開羣時下發最新的聊天信息流和未讀數，下面具體講下這個場景下該怎麼設計。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;既然由服務端統計未讀數，那麼少不了要保存用戶在某個羣裏已經讀到哪個消息，類似一個遊標，用戶已讀消息，遊標往前走。用戶已讀消息存儲表設計如圖 7 所示：&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img data-imgfileid=&quot;100016474&quot; data-ratio=&quot;0.38055555555555554&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/db8336c9-2e83-48c6-913a-b3c6a95811c3.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 7&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section&gt; 
   &lt;p&gt;遊標 offset 採用定時更新策略，連接服務會記錄用戶最近一次拉取到的消息 ID，定時異步上報批量用戶到羣組服務更新 offset。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;該表第一行表示用戶 1 在 id=89 的羣裏，最新的已讀消息是 id=1022 消息，那麼可以通過下面的 SQL 來統計他在這個羣裏的未讀數：&lt;br&gt;&lt;span style=&quot;background-color: rgb(204, 204, 204);&quot;&gt;select count(1) from msg_info where groupId = 89 and id &amp;gt; 1022&lt;/span&gt;。但是事情並沒這麼簡單，一個用戶有很多羣，每個羣都要展示未讀數，因此要求未讀數統計的程序效率要高，不然用戶體驗就很差，很明顯這個 SQL 的耗時波動很大，取決於 offset 的位置，如果很靠後，SQL 執行時間會非常長。筆者通過 2 個策略來優化這個場景:&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;調整產品設計：未讀數最大顯示調整為 99+。算是產品上的一個讓步，有很多產品也採用這個方案，所以用戶也是有這個心智的，99+表示「有很多新消息」，至於具體多少，是幾百、幾千很多時候不是特別重要。所以問題就變得簡單多了，只要計算遊標是否在最新的 100 條消息以內還是以外。&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;合理利用數據結構：因為有羣內有很多人，每個人登錄的時候都需要統計，所以每次都去查 MySQL 是比較低效的，因此筆者的方案是在 Redis 裏設計一個有界的 ZSET 結構。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;&quot;&gt; 
    &lt;img data-imgfileid=&quot;100016473&quot; data-ratio=&quot;0.09537037037037037&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/86be57ec-7d58-4c9d-a48f-dae4e2ea583c.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;text-align: center;color: rgb(204, 204, 204);&quot;&gt; 
   &lt;p&gt;圖 8&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;如上圖 8 所示，每個羣都會構建一個長度為 100，score 和 member 都是消息 ID，可以通過 &lt;span style=&quot;background-color: rgb(204, 204, 204);&quot;&gt;zrevrank&lt;/span&gt; 命令得到某個 offset 的排名值，該值可以換算成未讀數。比如：用戶 1 在羣 89 的未讀消息數，&lt;span style=&quot;background-color: rgb(204, 204, 204);&quot;&gt;&#39;zrevrank 89 1022&#39; = 2&lt;/span&gt;，也就是有 2 條未讀數。用戶 2 在羣 89 的未讀數，&lt;span style=&quot;background-color: rgb(204, 204, 204);&quot;&gt;&#39;zrevrank 89 890&#39; = nil&lt;/span&gt;，那麼未讀數就是 99+。同時消息新增、刪除都需要同步維護該數據結構，失效或不存在時從 MySQL 初始化。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;九、超大羣策略&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section&gt; 
   &lt;p&gt;前面提到，設計目標是在同一個羣裏能支撐百萬人，從架構上可以看到，連接服務處於流量最前端，所以它的承載力直接決定了同時在線用戶的上限。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;影響它的因素有：&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;服務器自身配置：內存、CPU、網卡、Linux 支持的最大文件打開數；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;應用自身配置：應用本身啓動需要的內存，如 Netty 依賴的堆外內存，大量的本地緩存；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;性能要求：當連接數不斷變大時，消息分發的整體耗時肯定在不斷增加，因此要關注最慢的分發耗時要滿足即時性要求；&lt;br&gt;結合以上情況，可以測試出固定配置服務器單點能支持的最大用戶連接數，假如單機能支持 20000 個用戶連接，那麼百萬在線連接，在連接服務層用 50 個服務的集羣就能解決。&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;9.1 消息風暴&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;當同時在線用戶數非常多，例如百萬時，會面臨如下幾個問題：&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
   &lt;li&gt;&lt;p&gt;&lt;strong&gt;消息發送風暴&lt;/strong&gt;：極端情況下，用戶同時發送消息，假設服務端承載住了這些流量，那麼瓶頸其實在用戶端，第一用戶端會經歷網絡風暴，網卡帶寬能否支撐是一個大問題；第二假設網卡能通過這些流量，用戶端上百萬條消息該如何展示，要是瞬間刷出這些消息，用戶端 CPU 能否撐住又是個問題，即使能抗住用戶體驗也很糟糕，根本就看不清消息，一直在飛速刷屏。因此服務端可以在發送消息風暴時做好限流、丟棄策略，給到用戶友好的提示。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;strong&gt;消息提醒風暴&lt;/strong&gt;：一條新消息的產生，就要推送提醒消息百萬次，對服務器來説，要考量整體推送完成的時效性，如果時效性差，對有些用戶來説，就是消息需要較長時間才刷出來，出現明顯的延遲。新消息持久化後，羣組服務 HTTP 回調一組連接服務，單羣百萬在線用戶，需要 50 台連接服務集羣，那麼回調 50 次，為了保證時效性，因此這裏要併發回調，並設置合理的線程池，然後連接服務收到回調後也需要併發完成對羣用戶的新消息提醒推送。&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;strong&gt;消息拉取風暴&lt;/strong&gt;：連接服務收到拉取消息事件，需要去羣組服務獲取消息詳情，QPS 就非常高了，理論上集羣達到 100wQPS，20 台羣組服務，那麼每台羣組服務就是 5wQPS。這裏的策略是在鏈路前端連接服務上進行流量過濾，因為用戶都是請求同一個羣的同一條消息或附近的消息，那麼就可以在連接服務裏設計羣消息的本地緩存，所有用戶都只從本地緩存裏讀，如果本地緩存裏沒有，就放一個線程去羣組服務請求加載緩存，其他線程同步等待，這樣就大大降低了打到羣組服務的 QPS。&lt;/p&gt;&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;9.2 消息壓縮&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section&gt; 
   &lt;p&gt;如果某一個時刻，推送消息的數量比較大，且羣同時在線人數比較多的時候，連接服務層的機房出口帶寬就會成為消息推送的瓶頸。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;做個計算，百萬人在線，需要 5 台連接服務，一條消息 1KB，一般情況下，5 台連接服務集羣都是部署在同一個機房，那麼這個機房的帶寬就是 1000000*1KB=1GB，如果多幾個超大羣，那麼對機房的帶寬要求就更高，所以如何有效的控制每一個消息的大小、壓縮每一個消息的大小，是需要思考的問題。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;經過測試，使用 protobuf 數據交換格式，平均每一個消息可以節省 43% 的字節大小，可以大大節省機房出口帶寬。&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;font-size: 15px;&quot;&gt; 
   &lt;p&gt;&lt;span style=&quot;font-size: 16px;color: rgb(65, 95, 255);&quot;&gt;9.3 塊消息&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section&gt; 
   &lt;p&gt;超大羣裏，消息推送的頻率很高，每一條消息推送都需要進行一次 IO 系統調用，顯然會影響服務器性能，可以採用將多個消息進行合併推送。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;&lt;strong&gt;主要思路&lt;/strong&gt;：以羣為維度，累計一段時間內的消息，如果達到閾值，就立刻合併推送，否則就以勻速的時間間隔將在這個時間段內新增的消息進行推送。&lt;/p&gt; 
   &lt;p&gt;&lt;br&gt;時間間隔是 1 秒，閾值是 10，如果 500 毫秒內新增了 10 條消息，就合併推送這 10 條消息，時間週期重置；如果 1 秒內只新增了 8 條消息，那麼 1 秒後合併推送這 8 條消息。&lt;br&gt;這樣做的好處如下：&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: transparent;padding: 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;&quot;&gt; 
     &lt;ol class=&quot;list-paddingleft-1&quot; style=&quot;padding-left: 40px;list-style-position: outside;&quot;&gt; 
      &lt;li&gt;&lt;p&gt;提升服務器性能：減少 IO 系統調用，減少用戶態與內核態之前的切換；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;減少傳輸量：合併消息後，可以減少傳輸多餘的消息頭，進一步壓縮消息大小；&lt;/p&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;p&gt;提升用戶體驗：一定程度上能減小消息風暴，消息渲染的節奏比較均勻，帶給用戶更好的體驗；&lt;/p&gt;&lt;/li&gt; 
     &lt;/ol&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);&quot;&gt; 
    &lt;p&gt;&lt;strong&gt;十、總結&lt;/strong&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;在本文中，筆者介紹了從零開始搭建一個生產級百萬級羣聊的一些關鍵要點和實踐經驗，包括通信方案選型、消息存儲、消息順序、消息可靠性、高併發等方面，但仍有許多技術設計未涉及，比如冷熱羣、高低消息通道會放在未來的規劃裏。IM 開發業界沒有統一的標準，不同的產品有適合自己的技術方案，希望本文能夠帶給讀者更好地理解和應用這些技術實踐，為構建高性能、高可靠性的羣聊系統提供一定的參考。&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-right: 0%;margin-bottom: 20px;margin-left: 0%;justify-content: flex-start;display: flex;flex-flow: row;&quot;&gt; 
   &lt;section style=&quot;display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;&quot;&gt; 
    &lt;section style=&quot;margin-top: 0.5em;margin-bottom: 0.5em;&quot;&gt; 
     &lt;section style=&quot;border-top: 1px dotted rgb(90, 98, 114);&quot;&gt; 
      &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;display: inline-block;vertical-align: middle;width: 20%;align-self: center;flex: 0 0 auto;&quot;&gt; 
    &lt;section style=&quot;text-align: center;color: rgb(45, 66, 87);font-size: 11px;&quot;&gt; 
     &lt;p&gt;END&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;&quot;&gt; 
    &lt;section style=&quot;margin-top: 0.5em;margin-bottom: 0.5em;&quot;&gt; 
     &lt;section style=&quot;border-top: 1px dotted rgb(90, 98, 114);&quot;&gt; 
      &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: center;&quot;&gt; 
   &lt;section style=&quot;padding-left: 1em;padding-right: 1em;display: inline-block;&quot;&gt; 
    &lt;span style=&quot;display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);font-size: 12px;color: rgb(255, 255, 255);&quot; title=&quot;&quot;&gt;&lt;p&gt;粉絲福利&lt;/p&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;border-width: 1px;border-style: solid;border-color: rgb(192, 200, 209);margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);&quot;&gt; 
    &lt;section&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;vivo 互聯網技術為開發者朋友們提供了 iQOO &amp;amp; NBA 聯名款周邊（各 1 個），快來領取吧！&lt;/p&gt; 
     &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 10px;&quot;&gt; 
     &lt;section style=&quot;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;&quot;&gt; 
      &lt;section style=&quot;text-align: center;line-height: 0;&quot;&gt; 
       &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;border-style: solid;border-width: 5px;border-color: rgb(238, 243, 255);width: 100%;height: auto;&quot;&gt; 
        &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100016477&quot; data-ratio=&quot;0.6944444444444444&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e0b00897-c5bc-4b1f-80e1-1ccaab36377a.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
     &lt;section style=&quot;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;padding-right: 15px;padding-left: 15px;&quot;&gt; 
      &lt;section style=&quot;&quot;&gt; 
       &lt;section style=&quot;text-align: center;font-size: 12px;color: rgb(192, 174, 255);letter-spacing: 2px;&quot;&gt; 
        &lt;p&gt;✦&lt;/p&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
      &lt;section style=&quot;&quot;&gt; 
       &lt;section style=&quot;text-align: center;font-size: 21px;color: rgb(192, 174, 255);letter-spacing: 2px;&quot;&gt; 
        &lt;p&gt;✦&lt;/p&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
      &lt;section style=&quot;&quot;&gt; 
       &lt;section style=&quot;text-align: center;font-size: 12px;color: rgb(192, 174, 255);letter-spacing: 2px;&quot;&gt; 
        &lt;p&gt;✦&lt;/p&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
     &lt;section style=&quot;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;&quot;&gt; 
      &lt;section style=&quot;text-align: center;line-height: 0;&quot;&gt; 
       &lt;section style=&quot;vertical-align: middle;display: inline-block;line-height: 0;border-style: solid;border-width: 5px;border-color: rgb(238, 243, 255);width: 60%;height: auto;&quot;&gt; 
        &lt;img data-imgfileid=&quot;100016475&quot; data-ratio=&quot;1.0333333333333334&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/23f5a0fe-5e80-4cd6-b509-a3492ef43e68.png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot; style=&quot;vertical-align: middle;width: 100%;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
    &lt;section&gt; 
     &lt;p&gt;&lt;span style=&quot;color: rgb(160, 160, 160);font-size: 13px;&quot;&gt;iQOO x NBA 聯名洗漱包 x1&lt;/span&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;span style=&quot;color: rgb(160, 160, 160);font-size: 13px;&quot;&gt;iQOO x NBA 聯名運動水杯 x1&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;參與方法：&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(65, 95, 255);&quot;&gt;&lt;strong&gt;轉發&lt;/strong&gt;&lt;/span&gt;本篇內容&lt;strong&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;到朋友圈&lt;/span&gt;&lt;/strong&gt;，&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;&lt;strong&gt;截圖&lt;/strong&gt;&lt;/span&gt;保存界面，再到 vivo 互聯網技術微信&lt;strong&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;後台發送「v 愛技術」&lt;/span&gt;&lt;/strong&gt;參與抽獎，上傳截圖即可。（&lt;strong&gt;請保留朋友圈分享鏈接至開獎當天&lt;/strong&gt;）&lt;/p&gt; 
     &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(65, 94, 255);&quot;&gt;&lt;strong&gt;開獎時間：2024 年 2 月 28 日 20:00&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;獎品將通過郵寄發放，中獎者需在&lt;strong&gt;5 天內&lt;/strong&gt;提供收貨信息。(聯繫本號後台）&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;注意：&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;1.我們將會通過人工審核截圖進行校對。未及時提供收貨信息或未完成所有步驟的參與者將視為自動放棄。&lt;/p&gt; 
     &lt;p style=&quot;text-align: left;&quot;&gt;2. 活動解釋權歸 vivo 互聯網技術所有。&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
  &lt;section style=&quot;margin-top: 10px;margin-bottom: 10px;text-align: left;&quot;&gt; 
   &lt;section style=&quot;padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;&quot;&gt; 
    &lt;span style=&quot;display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);color: rgb(255, 255, 255);&quot; title=&quot;&quot;&gt;&lt;p&gt;猜你喜歡&lt;/p&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;border-width: 1px;border-style: solid;border-color: transparent;margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;&quot;&gt; 
    &lt;section style=&quot;font-size: 13px;text-align: left;&quot;&gt; 
     &lt;p&gt;1.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247499846%26idx%3D1%26sn%3D60135e9871209d2c57e1eec2b062db7a%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;RocksDB 內存超限問題剖析&lt;/a&gt;&lt;/p&gt; 
     &lt;p&gt;2.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247500064%26idx%3D1%26sn%3Dcfd8f7bfd1281432d0276097838b42db%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;NLLB 與 ChatGPT 雙向優化：探索翻譯模型與語言模型在小語種應用的融合策略&lt;/a&gt;&lt;/p&gt; 
     &lt;p&gt;3.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247500102%26idx%3D1%26sn%3D59ea19fe37d083fff3300fa97a2ba19e%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot; data-linktype=&quot;2&quot;&gt;vivo HTTPDNS 端到端體驗優化實踐&lt;/a&gt;&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;/section&gt; 
 &lt;section class=&quot;mp_profile_iframe_wrp&quot;&gt; 
  &lt;mp-common-profile class=&quot;js_uneditable custom_select_card mp_profile_iframe&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzI4NjY4MTU5Nw==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt45QXJZicZ9gaNU2mRSlvqhQd94MJ7oQh4QFj1ibPV66xnUiaKoicSatwaGXepL5sBDSDLEckicX1ttibHg/0?wx_fmt=png&quot; data-nickname=&quot;vivo 互聯網技術&quot; data-alias=&quot;vivoVMIC&quot; data-signature=&quot;分享 vivo 互聯網技術乾貨與沙龍活動，推薦最新行業動態與熱門會議。&quot; data-from=&quot;0&quot; data-is_biz_ban=&quot;0&quot; data-service_type=&quot;2&quot;&gt;&lt;/mp-common-profile&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公眾號 - vivo 互聯網技術（vivoVMIC）。&lt;br&gt;如有侵權，請聯繫 support@oschina.cn 刪除。&lt;br&gt;本文參與「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源創計劃&lt;/a&gt;」，歡迎正在閲讀的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/vivotech/blog/17779597</link>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/17779597</guid>
            <pubDate>Fri, 28 Feb 2025 06:27:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>百度將於 3 月 16 日發佈文心大模型 4.5</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;百度&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FfErfpPI5opivfBQpj-151Q&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;，將於 3 月 16 日發佈文心大模型 4.5。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;994&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0228/140204_bngG_2720166.png&quot; width=&quot;1400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;據官方介紹，文心大模型 4.5 在基礎模型能力上有大幅提升，且具備原生多模態、深度思考等能力。百度文心大模型是全球最早對標 GPT 的 LLM 大模型，並將在今年內發佈 5.0 版本。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;2&lt;/span&gt;月&lt;span&gt;14&lt;/span&gt;日，百度就已宣佈將在未來幾個月中陸續推出文心大模型&lt;span&gt;4.5&lt;/span&gt;系列，並於&lt;span&gt;6&lt;/span&gt;月&lt;span&gt;30&lt;/span&gt;日起正式開源。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;390&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0214/103039_F4FT_3820517.png&quot; width=&quot;678&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;據介紹，隨着文心大模型的迭代升級，其訓練和推理成本正在迅速下降。不久前，百度創始人李彥宏在迪拜&lt;span&gt;AI&lt;/span&gt;峯會上表示，當前的創新速度比以往快得多，大模型的推理成本每年能降低&lt;span&gt;90%&lt;/span&gt;以上，並表示將持續投入&lt;span&gt;AI&lt;/span&gt;基礎設施，以打造下一代大模型。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336166</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336166</guid>
            <pubDate>Fri, 28 Feb 2025 06:02:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>「嘎子哥」謝孟偉開賣 AI 課，宣稱 DeepSeek 引爆流量</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;網友發現，曾主演《小兵張嘎》的演員「嘎子哥」謝孟偉有了新的直播方向，從賣白酒轉賣 AI 課程。直播截圖顯示，嘎子哥直播宣稱「&lt;em&gt;&lt;strong&gt;deepseek 引爆流量，只需要對着鏡頭説 123123，就能生成幾十種語言視頻&lt;/strong&gt;&lt;/em&gt;」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bdd647c4bb59b164245cf65e82b9bf12899.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;從直播截圖來看，嘎子哥的 DeepSeek 課程收費 10.9 元。網友在直播間調侃稱：「你能玩明白嗎？嘎子。」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336150</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336150</guid>
            <pubDate>Fri, 28 Feb 2025 03:52:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>「老牌命令行 Shell」 Fish Shell 正式發佈 4.0，完全用 Rust 重寫核心 C++ 代碼</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffish-shell%2Ffish-shell%2Freleases%2Ftag%2F4.0.0&quot; target=&quot;_blank&quot;&gt;Fish Shell 4.0 已正式發佈&lt;/a&gt;，最大變化就是&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;用 Rust 重寫了核心 C++ 代碼&lt;/strong&gt;&lt;/span&gt;，這意味着依賴關係和構建方式的鉅變，但這對終端用戶沒有直接影響。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;fish 是適用於 Linux、macOS 的命令行 Shell，已有 20 年曆史，其名字取於 &quot;the friendly interactive shell&quot; 的首字母簡稱，最大特點就是方便易用、功能強大、智能並且用戶友好。很多其他 Shell 需要配置才有的功能，fish 默認提供，不需要任何配置。&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fbaec1727fade017d5a8401ecdff3d369fb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;其它變化包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新的 bind 鍵符號&lt;/li&gt; 
 &lt;li&gt;相同種子將生成與之前版本不同的隨機值&lt;/li&gt; 
 &lt;li&gt;Ctrl-C 將默認清除命令行&lt;/li&gt; 
 &lt;li&gt;Windows Subsystem for Linux 調整&lt;/li&gt; 
 &lt;li&gt;Fish 能作為自安裝二進制文件構建，等等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffishshell.com%2Fdocs%2Fcurrent%2Frelnotes.html&quot; target=&quot;_blank&quot;&gt;詳情查看 Release Notes&lt;/a&gt;&lt;/u&gt;。&lt;/p&gt; 
&lt;p&gt;有關 Fish Shell 用 Rust 重寫 C++ 的更多細節，可查看此前的報道：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/327176/fishshell-rustport&quot; target=&quot;news&quot;&gt;Fish Shell 分享從 C++ 切換到 Rust 的經驗&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/268315&quot; target=&quot;news&quot;&gt;Fish Shell 採用 Rust 重寫會導致性能下降&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/226616/fish-shell-be-rewritten-rust&quot; target=&quot;news&quot;&gt;Fish Shell 計劃採用 Rust 重寫&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336135/fish-shell-4-0-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336135/fish-shell-4-0-0-released</guid>
            <pubDate>Fri, 28 Feb 2025 03:05:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>DeepSeek 開源周第五日：高性能並行文件系統 3FS</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;DeepSeek 開源周第五日，&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fdeepseek_ai%2Fstatus%2F1895279409185390655&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;&lt;/u&gt;面向 DeepSeek 全數據訪問的推進器 3FS。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1208&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0228/105107_eEOh_2720166.png&quot; width=&quot;1278&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fire-Flyer 文件系統（Fire-Flyer File System, 3FS）&lt;/strong&gt;是一款並行文件系統，支持 V3/R1 版本中訓練數據預處理、數據集加載、檢查點保存 / 重載、推理階段的向量嵌入搜索及 KVCache 查找。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;開源地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2F3FS&quot; target=&quot;_blank&quot;&gt;https://github.com/deepseek-ai/3FS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;基於 3FS 的數據處理框架 Smallpond：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdeepseek-ai%2Fsmallpond&quot; target=&quot;_blank&quot;&gt;https://github.com/deepseek-ai/smallpond&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3FS 性能亮點&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;集羣高吞吐：在 180 節點集羣中，3FS 實現了高達 6.6 TiB/s 的聚合讀取吞吐量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;基準測試優異：在 25 節點集羣的 GraySort 基準測試中，3FS 達到了 3.66 TiB / min 的吞吐量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;單節點高性能：每個客戶端節點的 KVCache 查找峯值吞吐量超過 40 GiB/s。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;架構先進&lt;strong&gt;：&lt;/strong&gt;&amp;nbsp;3FS 採用去中心化架構，並具備強一致性語義。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3FS 應用場景&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;3FS (Fire-Flyer File System) 是一款高性能的分佈式文件系統，旨在解決 AI 訓練和推理工作負載帶來的挑戰，利用現代 SSD 和 RDMA 網絡提供共享存儲層，簡化分佈式應用程序的開發。其核心優勢在於高性能、強一致性和易用性，能夠有效支持各種 AI 工作負載，包括數據準備、數據加載、檢查點設置和推理緩存。&lt;/p&gt; 
&lt;p&gt;3FS 在 DeepSeek 的 V3 / R1 版本中得到廣泛應用，涵蓋了訓練數據預處理、數據集加載、檢查點保存 / 重新加載、嵌入向量搜索以及推理過程中的 KVCache 查找等關鍵環節。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Smallpond&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此外，DeepSeek 還開源了基於 3FS 的數據處理框架 Smallpond，是一款構建於 DuckDB 和 3FS 之上的輕量級數據處理框架。它擁有高性能數據處理能力，可擴展至 PB 級數據集，並且操作簡便，無需長期運行的服務。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;【DeepSeek 開源周完整回顧】&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/336131&quot; target=&quot;news&quot;&gt;DeepSeek 開源周第五日：高性能並行文件系統 3FS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335953&quot; target=&quot;news&quot;&gt;DeepSeek 開源周第四日：DualPipe、EPLB 優化並行策略&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335779/deepseek-deepgemm&quot; target=&quot;news&quot;&gt;DeepSeek 開源周第三日：開源 DeepGEMM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335624/deepseek-deepep&quot; target=&quot;news&quot;&gt;DeepSeek 開源周第二日：開源 DeepEP 通信庫&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335425/deepseek-flashmla&quot; target=&quot;news&quot;&gt;「DeepSeek 開源周」首發項目：FlashMLA&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336131/deepseek-opensource-week-3fs</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336131/deepseek-opensource-week-3fs</guid>
            <pubDate>Fri, 28 Feb 2025 02:47:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 正式發佈 GPT-4.5 模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;今日凌晨，OpenAI &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fintroducing-gpt-4-5%2F&quot; target=&quot;_blank&quot;&gt;正式發佈 GPT-4.5 模型&lt;/a&gt;&lt;/u&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0228/101700_vzaG_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;GPT-4.5 支持聯網搜索，並能夠處理文件和圖片上傳，還可以使用 Canvas 來進行寫作和編程。&lt;/p&gt; 
&lt;p&gt;不過，目前 GPT-4.5 還不支持多模態功能，如語音模式、視頻和屏幕共享。GPT-4.5 主要通過「無監督學習」（就是自己從大量數據中學習）變得更聰明，而不是像 OpenAI o1 或者 DeepSeek R1 那樣專注於推理能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;簡單説，GPT-4.5 知道的更多，而 o1 系列更會思考&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;API 價格方面，因 GPT-4.5 計算量極大，成本高昂，相較於 GPT-4o 價格有了較高上漲——價格漲到了 75 美元 / 百萬 tokens，是 GPT-4o 的 30 倍，更是 DeepSeek 的 280 倍。&lt;/p&gt; 
&lt;p&gt;Sam Altman 提到，&lt;strong&gt;GPT-4.5 不是推理型模型&lt;/strong&gt;，不會在基準測試中碾壓其他模型。在目前曝出的實測中，性能的提升遠沒有價格大。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0228/102206_sah1_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;GPT-4.5 更新要點如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;知識更廣泛：它學習了更多的信息，所以懂的東西比以前多&lt;/li&gt; 
 &lt;li&gt;更少胡説八道：減少了「幻覺」（就是 AI 編造事實的情況）&lt;/li&gt; 
 &lt;li&gt;更懂人心：「情商」更高，更能理解你的真實意圖&lt;/li&gt; 
 &lt;li&gt;對話更自然：聊天感覺更像和真人交流，不那麼機械&lt;/li&gt; 
 &lt;li&gt;創意更豐富：在寫作和設計方面表現更好&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;從今天開始，ChatGPT Pro 用戶已經可以用上 GPT-4.5（研究預覽版）了。下週，將會逐步開放給 Plus 和 Team 用戶；再下一週則是 Enterprise 和 Edu 用戶。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336125/openai-gpt-4-5</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336125/openai-gpt-4-5</guid>
            <pubDate>Fri, 28 Feb 2025 02:17:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>字節跳動開源 AIBrix：專為 vLLM 打造的可擴展、高性價比控制面</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;vLLM 日前宣佈了由字節跳動開發的 AIBrix 大模型推理系統正式開源，為 vLLM 推理引擎提供可擴展且高性價比的控制面。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AIBrix 作為一個開源項目，旨在為構建可擴展的推理基礎設施提供核心組件。它提供了一套雲原生解決方案，專注於優化大語言模型（LLM）推理的部署、管理和擴展能力，並針對企業級需求進行了深度適配。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;408&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0226/164138_QBGT_4252687.jpeg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;首版 AIBrix 聚焦以下核心功能：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高密度 LoRA 管理：簡化對輕量級的、低秩模型適配的支持；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;LLM 網關和路由：高效管理和分配多個模型和副本的流量；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;針對 LLM 應用的自動擴展器：根據實時需求動態調整推理資源；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;統一 AI 運行時：多功能 sidecar 容器，支持指標標準化、模型下載和管理；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;分佈式推理：可擴展架構，支持多節點大規模推理負載；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;分佈式 KV 緩存：支持高容量、跨引擎的 KV 重用；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;高性價比異構資源調度：支持混合 GPU 推理，在保障 SLO 的前提下降低成本；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;GPU 硬件故障檢測：主動檢測 GPU 硬件異常。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;AIBrix 的願景與行業合作&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AIBrix 基於「系統與推理引擎協同設計」的理念，核心目標是以雲原生方式在 Kubernetes 上構建可擴展的推理系統。展望未來，項目團隊計劃通過以下舉措繼續探索協同設計方法：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;擴展分佈式 KV 緩存：支持更廣泛的場景，如預填充（Prefill）與解碼（Decode）聚合、請求遷移、跨實例 KV 複用等，提升內存效率與推理靈活性；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;引入傳統資源管理原則：將 QoS（服務質量）、優先級調度、公平性等機制應用於 LLM 推理，實現請求級多租戶，確保資源高效分配；&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;基於性能天花板的性能分析：通過性能剖析提升計算效率，為多樣化負載提供強 SLO 保障的推理性能。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336124/aibrix-open-source</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336124/aibrix-open-source</guid>
            <pubDate>Fri, 28 Feb 2025 02:17:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>騰訊混元新一代快思考模型 Turbo S 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;騰訊混元新一代快思考模型 Turbo S 正式發佈。&lt;/p&gt; 
&lt;p&gt;公告稱，區別於 Deepseek R1、混元 T1 等需要「想一下再回答」的慢思考模型，混元 Turbo S 能夠實現「秒回」，更快速輸出答案，吐字速度提升一倍，首字時延降低 44%。在知識、數理、創作等方面，混元 Turbo S 也有不錯表現。&lt;/p&gt; 
&lt;p&gt;通過長短思維鏈融合，混元 Turbo S 在保持文科類問題快思考體驗的同時，基於自研混元 T1 慢思考模型合成的長思維鏈數據，顯著改進了理科推理能力，實現模型整體性能明顯提升。&lt;/p&gt; 
&lt;p&gt;在業界通用的多個公開 Benchmark 上，混元 Turbo S 在知識、數學、推理等多個領域，展現出對標 DeepSeek V3、GPT 4o、Claude 等一系列業界領先模型的效果表現。&lt;/p&gt; 
&lt;p&gt;架構方面，創新採用 Hybrid-Mamba-Transformer 融合模式，混元 Turbo S 有效降低了傳統 Transformer 結構的計算複雜度，減少了 KV-Cache 緩存佔用，實現訓練和推理成本的下降。&lt;/p&gt; 
&lt;p&gt;新的融合模式突破了傳統純 Transformer 結構大模型面臨的長文訓練和推理成本高的難題。一方面，發揮了 Mamba 高效處理長序列的能力；另一方面，也保留 Transformer 擅於捕捉複雜上下文的優勢，最終構建了顯存與計算效率雙優的混合架構。&lt;/p&gt; 
&lt;p&gt;這也是工業界首次成功將 Mamba 架構無損地應用在超大型 MoE 模型上。通過模型架構上的技術創新，混元 Turbo S 部署成本大幅下降，持續推動大模型應用門檻降低。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;344&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4abaacd31a444217c6439574c9d1649dba7.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;279&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d371fbd287c01368c3fd7fd4559a1d2fd9c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;作為旗艦模型，混元 Turbo S 未來將成為騰訊混元系列衍生模型的核心基座，為推理、長文、代碼等衍生模型提供基礎能力。&lt;/p&gt; 
&lt;p&gt;基於 Turbo S，通過引入長思維鏈、檢索增強和強化學習等技術，混元也推出了具備深度思考的推理模型 T1。&lt;/p&gt; 
&lt;p&gt;該模型此前已在騰訊元寶全量上線（騰訊混元 T1 模型面向所有用戶開放），用戶可以選擇 Deepseek R1 或騰訊混元 T1 模型進行回答。騰訊混元 T1 模型正式版也將很快上線，對外提供 API 接入等服務。&lt;/p&gt; 
&lt;p&gt;當前，開發者和企業用戶已經可以在騰訊雲上通過 API 調用騰訊混元 Turbo S ，即日起一週內免費試用。（騰訊混元 turbos 模型 API 免費試用申請： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.tencent.com%2Fapply%2Fp%2Fi2zophus2x8%25EF%25BC%2589&quot; target=&quot;_blank&quot;&gt;https://cloud.tencent.com/apply/p/i2zophus2x8）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;定價上，Turbo S 輸入價格為 0.8 元/百萬 tokens，輸出價格為 2 元/百萬 tokens，相比前代混元 Turbo 模型價格下降數倍。騰訊元寶即將逐步灰度上線混元 Turbo S，用戶在元寶內選擇「Hunyuan」 模型並關閉深度思考即可體驗使用。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336120</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336120</guid>
            <pubDate>Fri, 28 Feb 2025 01:58:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>微軟 Phi-4 家族新成員：Phi-4 多模態和 Phi-4 迷你</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;微軟於 2024 年 12 月發佈了&lt;a href=&quot;https://www.oschina.net/news/324769/microsoft-phi-4-newest-small-language-model&quot;&gt; Phi-4&lt;/a&gt;，這是一款在同類產品中表現卓越的小型語言模型（SLM）。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f367ea7f93b5fdbf9d981567729ae9c09b9.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;今日，微軟宣佈為 Phi-4 家族推出兩款全新模型：&lt;strong&gt;Phi-4 多模態（Phi-4-multimodal）和 Phi-4 迷你（Phi-4-mini）&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7cafa9bb4bd60b2af030be75ea2a3fd600e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Phi-4 多模態模型是微軟首款集成語音、視覺和文本處理的統一架構多模態語言模型&lt;/strong&gt;，參數量達 56 億。在多項基準測試中，Phi-4 多模態的表現優於其他現有的先進全模態模型，例如谷歌的 Gemini 2.0 Flash 和 Gemini 2.0 Flash Lite。&lt;/p&gt; 
&lt;p&gt;在語音相關任務中，Phi-4 多模態在自動語音識別（ASR）和語音翻譯（ST）方面超越了 WhisperV3 和 SeamlessM4T-v2-Large 等專業語音模型。微軟表示，該模型在 Hugging Face OpenASR 排行榜上以 6.14% 的詞錯誤率位居榜首。&lt;/p&gt; 
&lt;p&gt;在視覺相關任務中，Phi-4 多模態在數學和科學推理方面表現出色。在文檔理解、圖表理解、光學字符識別（OCR）和視覺科學推理等常見多模態能力方面，該模型與 Gemini-2-Flash-lite-preview 和 Claude-3.5-Sonnet 等流行模型相媲美甚至超越。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Phi-4 迷你模型則專注於文本任務&lt;/strong&gt;，參數量為 38 億。其在文本推理、數學計算、編程、指令遵循和函數調用等任務中表現優異，超越了多款流行的大型語言模型。&lt;/p&gt; 
&lt;p&gt;為確保新模型的安全性和可靠性，微軟邀請了內部和外部安全專家進行測試，並採用了微軟人工智能紅隊（AIRT）制定的策略。經過進一步優化後，Phi-4 迷你和 Phi-4 多模態模型均可通過 ONNX Runtime 部署到設備端，實現跨平台使用，適用於低成本和低延遲場景。&lt;/p&gt; 
&lt;p&gt;目前，Phi-4 多模態和 Phi-4 迷你模型已在 Azure AI Foundry、Hugging Face 和 NVIDIA API 目錄中上線，供開發者使用。&lt;/p&gt; 
&lt;p&gt;相關鏈接&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fmicrosoft%2Fphi-4&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/microsoft/phi-4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fazure.microsoft.com%2Fen-us%2Fblog%2Fempowering-innovation-the-next-generation-of-the-phi-family%2F&quot; target=&quot;_blank&quot;&gt;https://azure.microsoft.com/en-us/blog/empowering-innovation-the-next-generation-of-the-phi-family&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fmicrosoft%2FPhi-4-multimodal-instruct&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/microsoft/Phi-4-multimodal-instruct&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336055/ms-phi-family</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336055/ms-phi-family</guid>
            <pubDate>Thu, 27 Feb 2025 11:01:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Scorecards：開源項目安全性評分應用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fscorecard.dev%2F&quot; target=&quot;_blank&quot;&gt;Scorecards&lt;/a&gt;&lt;/u&gt;&amp;nbsp;是谷歌開發，由開源安全基金會 (OpenSSF) 開源的首批項目之一，其目標是為開源項目自動生成一個 &quot;安全分數&quot;，以幫助用戶確定用例的信任度、風險和安全態勢。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;718&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0227/184109_SvIp_2720166.png&quot; width=&quot;2386&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Scorecards 定義了初始評估標準，它被用於以一種完全自動化的方式為開源項目生成一個評分卡。評分卡的每項檢查都可以被控制是否啓用，部分評估指標包括定義良好的安全策略、代碼審查流程以及使用模糊測試和靜態代碼分析工具的持續測試覆蓋率。每項安全檢查都會返回一個布爾值以及信任度分數。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0227/183922_O5Hc_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;隨着 Scorecards 被廣泛使用，谷歌會通過 OpenSSF 的社區貢獻來改進這些指標。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336054</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336054</guid>
            <pubDate>Thu, 27 Feb 2025 10:41:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>KubeSphere 企業版 v4.1.3 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;KubeSphere 企業版始終致力於為企業提供安全、穩定、高效的雲原生全棧管理能力。在 4.1.3 版本中，KubeSphere 聚焦可觀測性深度優化、策略管理靈活升級與安全隔離能力增強，推出多項新特性與優化，進一步釋放企業雲原生基礎設施的潛力，助力業務高效運行與智能管理！&lt;/p&gt; 
&lt;h2&gt;核心升級一覽&lt;/h2&gt; 
&lt;h3&gt;全新智能可觀測性，提升運維效率&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;新增 Grafana Alloy for WizTelemetry 擴展組件&lt;/strong&gt; Grafana Alloy 作為新一代高性能、廠商中立的 OpenTelemetry Collector 分發版，支持採集 Kubernetes 日誌、Prometheus 指標、OpenTelemetry 鏈路追蹤等多元數據，並內置 MySQL、Kafka、Redis 等 20+ 中間件 Exporter，實現一站式指標抓取與遠程寫入。結合 KubeSphere 企業版的可觀測能力，企業可快速構建覆蓋全棧的監控體系，精準定位性能瓶頸。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7d076c7c23c00142406d2b7f4e45055da8d.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;OpenSearch ISM 索引管理全面替代 Curator&lt;/strong&gt; 審計、事件、日誌、通知等擴展組件全面支持 OpenSearch ISM（索引生命週期管理），提供更靈活、自動化的索引策略配置（如滾動更新、冷熱分層、自動清理），優化存儲資源利用率，保障日誌與監控數據長期穩定存儲。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;GPU 監控面板增強，加速 AI 基礎設施管理&lt;/strong&gt; 同步上游 kube-prometheus 最新面板，新增多維度 GPU 資源監控視圖（顯存利用率、算力負載、任務調度等），為 AI 訓練、推理等場景提供精細化洞察，助力企業高效管理 AI 算力資源。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;策略管理更靈活，安全合規再升級&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Gatekeeper 內置模板管理功能上線&lt;/strong&gt; 支持通過 &lt;strong&gt;values.yaml 一鍵配置模板安裝策略：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;templates.fullInstall&lt;/code&gt;：快速部署所有內置 OPA 策略模板，滿足開箱即用需求。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;templates.customInstall&lt;/code&gt;：按需選擇模板（如資源配額限制、鏡像校驗、網絡策略），適配多業務場景。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-9aaff9f8bb8c248812fbabdc4fb9f9e9b80.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這一功能的推出，極大簡化了策略部署流程，提升了安全合規管理的靈活性與可維護性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;網絡隔離白名單配置優化&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;支持跨企業空間（Workspace）查詢並選擇，所有命名空間（Namespace），打破原有白名單僅限當前空間的限制。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;新增 system 級別白名單，允許關鍵系統組件（如監控、日誌服務）跨隔離環境通信，保障核心服務穩定性。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cc1c3a34cb41b902a5ed8846344f1ce5a15.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這一優化特別適用於金融、政務等高合規行業，安全隔離生產環境與測試環境，同時能夠保障核心系統無縫通信。&lt;/p&gt; 
&lt;h3&gt;更穩定、更兼容，助力企業高效升級&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;修復 20+ 已知問題，涵蓋監控數據採集異常、權限校驗邏輯優化、UI 交互體驗提升等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;全面兼容 Kubernetes 1.28 及主流雲廠商基礎設施，確保企業平滑升級。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;KubeSphere 企業版 4.1.3 是您的不二之選&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;智能可觀測：從基礎設施到應用層，實現數據採集、分析、告警的全鏈路閉環，快速定位故障。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;策略即代碼：通過聲明式配置與 GitOps 集成，確保安全策略的版本化、自動化管理。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安全無死角：網絡隔離、資源審計、合規檢查多維度護航，滿足金融、政務等嚴監管場景需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;開箱即用：40+ 擴展組件、100+ 內置策略模板，快速構建企業級雲原生平台。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;KubeSphere 企業版 4.1.3 版本以卓越的性能、強大的功能和靈活的配置，為企業雲原生管理帶來了全新的體驗和價值。選擇 KubeSphere 企業版 4.1.3，就是選擇更智能、更安全、更高效的雲原生未來。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;瞭解更多&lt;/strong&gt; ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkubesphere.cloud%2Fdocs%2Fkse%2Frelease-notes%2Fv4.1.3&quot; target=&quot;_blank&quot;&gt;KubeSphere 4.1.3 版本説明&lt;/a&gt; &lt;strong&gt;立即升級&lt;/strong&gt; ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.qingcloud.com%2Fpage%2F23555798970015596%2F4c97b2026cb84249be20d94e71b647cf%3Fcl_track%3Daec50%2F&quot; target=&quot;_blank&quot;&gt;開啓雲原生新篇章&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本文由博客一文多發平台 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom&quot; target=&quot;_blank&quot;&gt;OpenWrite&lt;/a&gt; 發佈！&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4197945/blog/17780777</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/17780777</guid>
            <pubDate>Thu, 27 Feb 2025 10:28:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Kimi 最新模型 k1.6 曝光，編程能力超越 GPT o3</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;全球知名動態基準測試平台&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flivecodebench.github.io%2Fleaderboard.html&quot; target=&quot;_blank&quot;&gt;LiveCodeBench&lt;/a&gt;信息顯示，Kimi k1.6 超過 GPT o3mini、o1 等模型，登頂第一。&lt;/p&gt; 
&lt;p&gt;月之暗面研究員 Flood 在社交平台表示，k1.6 是基於 k1.5 做的訓練，性能還在提升中。月之暗面聯合創始人張予彤在朋友圈表示，「k1.6 還沒有發佈，但看到 LiveCodeBench 的成績感到開心，期待智能模型的持續進化。」&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;629&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0227/164947_bfIa_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336022</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336022</guid>
            <pubDate>Thu, 27 Feb 2025 08:45:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>雷軍闢謠成為中國「新首富」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;來自公眾號 &lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;三言 Pro&lt;/span&gt; 的消息稱，針對小米創始人雷軍身家超過農夫山泉創始人鍾睒睒、升任「中國新首富」的消息，雷軍在武大校友羣回應稱：假新聞。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;479&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-40aaebcdd4663e04133c986ae9570e87067.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前彭博富豪榜單和福布斯的實時榜單都顯示，鍾睒睒仍然是中國首富。彭博富豪榜單中國企業家排名，目前鍾睒睒以 574 億美元財富排名第一，馬化騰以 565 億財富排名第二，雷軍則以 469 億元財富排名第三。&lt;/p&gt; 
&lt;p&gt;以 574 億美元計算，按照當前匯率折算，鍾睒睒大約個人財富 4167 億元。而雷軍個人財富為 3404 億元。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;214&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f9fcd9f23b5b5d8d316bd5c7cbbe0d5bd32.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;而據福布斯的實時榜單顯示，鍾睒睒以 564 億美元財富排名第一，馬化騰以 530 億財富排名第二，張一鳴以 456 億美元財富排名第三，雷軍以 430 億美元財富排名第四。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;201&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2b1879f88498691abc1b706e1a6b6faeb2d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336018</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336018</guid>
            <pubDate>Thu, 27 Feb 2025 08:25:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源是夢想消亡的地方</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;原文：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.trevorlasn.com%2Fblog%2Fopen-source-is-where-dreams-go-to-die&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;Open-source is where dreams go to die&lt;/span&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;span style=&quot;color:#000000&quot;&gt;作者：Trevor I. Lasn&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;最近，我讀了《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmarcan.st%2F2025%2F02%2Fresigning-as-asahi-linux-project-lead%2F&quot; target=&quot;_blank&quot;&gt;辭去 Asahi Linux 項目負責人&lt;/a&gt;》這篇文章，感觸頗深。又一位才華橫溢的開發者因維護開源軟件的繁重需求而精疲力盡。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FHector_Martin_%28hacker%29&quot; target=&quot;_blank&quot;&gt;Hector Martin (marcan)&lt;/a&gt; 花了數年時間將 Linux 移植到 Apple Silicon 上——這是一項令人難以置信的技術成就——最終卻因疲憊和幻滅而選擇離開。&lt;/p&gt; 
&lt;p&gt;這樣的故事在開源領域以令人沮喪的頻率重複上演。充滿熱情的開發者創造了有價值的東西，免費與世界分享，然後看着他們的禮物變成吞噬他們生活的負擔。&lt;/p&gt; 
&lt;p&gt;最初的熱愛逐漸轉變為無償的技術支持。用戶提交錯誤報告時，彷彿他們是付費客戶，要求立即修復和新功能，而自己卻毫無貢獻。Asahi Linux 團隊在沒有文檔的情況下逆向工程了 Apple 的複雜硬件——在企業環境中，這一壯舉可能需要花費數百萬美元——然而，當用戶的特定外設無法完美工作時，他們卻抱怨不已。&lt;/p&gt; 
&lt;p&gt;開源的經濟模式從根本上就是破碎的。大多數維護者從未因他們的努力獲得一分錢，儘管他們創造的軟件支撐着價值數十億美元的公司和關鍵基礎設施。少數通過贊助實現財務可持續性的開發者只是極少數，他們是「精英中的精英」，其項目要麼達到了極高的知名度，要麼滿足了關鍵的行業需求。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;381&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-50ee8f665f3558285784ae210a50aeb9b85.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;span style=&quot;color:#000000&quot;&gt;(Image from XKCD)&lt;/span&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;對於其他人來説，開源變成了一種單向關係：只有付出，幾乎沒有回報。你犧牲晚上和週末的時間來維護軟件，而用戶卻將你的志願工作視為理所當然。源源不斷的需求逐漸侵蝕了啓動項目的熱情。最終，維護項目感覺像是一份無薪的第二職業，而不是一種充實的愛好。&lt;/p&gt; 
&lt;p&gt;Marcan 的辭職並不是性格或承諾的失敗——而是一個系統可預見的結局，這個系統從維護者身上榨取價值，直到他們崩潰。他的故事應該成為對「免費」軟件真實成本的警示。每個開源項目背後都是一個時間和精力有限的人，他們通常在沒有報酬或認可的情況下工作。&lt;/p&gt; 
&lt;p&gt;除非我們從根本上改變對開源工作的價值認知和支持方式，這些項目將繼續成為夢想破滅的地方——在用戶理所當然的要求、不可持續的經濟模式以及隨之而來的不可避免的倦怠中崩潰。&lt;/p&gt; 
&lt;p&gt;幸運的是，並非一切都是壞的；GitHub 正在通過其贊助計劃推動更多的贊助。Sentry 也有一個類似的項目，名為「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.trevorlasn.com%2Fblog%2Fcan-open-source-pledge-fix-open-source-sustainability&quot; target=&quot;_blank&quot;&gt;Open Source Pledge&lt;/a&gt;」。我希望更多的公司能夠效仿並支持開源社區。現在是時候回饋那些讓開源成為可能的人了。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336005</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336005</guid>
            <pubDate>Thu, 27 Feb 2025 07:50:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>如意玲瓏應用構建指南（一）：規範體系與配置文件全解析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;在 Linux 生態中，軟件包的分發與管理一直是開發者與用戶關注的焦點。如意玲瓏（Linyaps）作為一種新興的容器化應用格式，憑藉其輕量化、強隔離、跨發行版兼容等特性，正在為 Linux 應用生態注入新的活力。無論是開發者還是技術愛好者，掌握玲瓏應用的構建方法都至關重要。&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;本篇作為&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0FoyZ9FfJ6wxbzborTNjmQ&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;「如意玲瓏應用構建從入門到實戰」&lt;/strong&gt;系列的第一章&lt;/a&gt;，將帶您系統&lt;strong&gt;梳理&lt;/strong&gt;&lt;strong&gt;玲瓏應用構建的核心基礎知識&lt;/strong&gt;，涵蓋構建流程、規範要求與關鍵配置文件。通過理解這些基礎概念，您將能夠為後續的實操教程打下堅實根基，從容應對從代碼到安裝包的每一步挑戰。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;01 玲瓏應用構建基本步驟&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在正式開始構建一個玲瓏應用工程前, 我們需要了解一個玲瓏應用從資源 (源代碼、二進制文件等) 輸入到應用安裝包導出所經過的基本步驟，來確定我們需要準備哪些必要文件。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;獲&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;取構建目標源文件 (開源項目源代碼、應用二進制文件等)；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;根據源文件判斷玲瓏應用構建類型, 選擇合適的構建方案；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;準備符合要求的玲瓏構建環境；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;按照構建類型及源代碼內容定製構建配置文件 linglong.yaml ；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;準備&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;應用所使用的通用類資源，圖標以及其他非二進制資源。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;02 玲瓏應用構建工程所需材料&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;結合上述的知識，我們可以瞭解到一個玲瓏應用在構建的全過程中，主要涉及到以下的文件:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用構建工程配置文件 linglong.yaml；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;應用源代碼/需要封裝的二進制文件等資源；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;非二進制文件等通用資源。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;03&amp;nbsp;玲瓏應用遵循的主流規範&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;每一個 Linux 桌面軟件包管理方案為了能夠保障完整的功能和良好的體驗，均需要遵守軟件包管理方案提出的各類規範要求以最大限度發揮軟件包管理方案的功能並保障應用生態體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;如意玲瓏也並不總是特立獨行, 需要滿足一定的規範來保障如意玲瓏生態得以持續穩步發展。目前如意玲瓏生方案遵守以下主流的規範：&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;Freedesktop XDG 規範；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用目錄結構規範；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用構建工程配置文件 linglong.yaml 規範。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.1 Freedesktop XDG 規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用解決方案遵循 Freedesktop XDG 規範，一款正常的圖形化應用應具備圖標文件、desktop 文件並符合 Freedesktop XDG 規範；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用圖標文件應該根據不同尺寸歸類到 $PREFIX/share/icons/hicolor/ 目錄下；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;應用容器中使用 XDG_DATA_DIRS 等變量, 支持讀寫宿主機中的用戶目錄；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;3.2 玲瓏應用目錄結構規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用遵循 $PREFIX 路徑規則,該變量自動生成, 應用所有相關文件需存放於此目錄下, 該目錄層級下存在 bin、share 等目錄；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用容器中的應用將不被允許讀取宿主機中系統目錄中的二進制文件、運行庫；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在構建工程中, 構建工程目錄將會被映射到玲瓏容器中, 掛載為 /project；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用容器中運行庫、頭文件所在目錄將根據運行環境類型而異：&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;foundation 類：在玲瓏容器中映射為普通系統路徑 /usr/bin、/usr/include 等, 作為基礎運行系統環境存在；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;runtime 類：在玲瓏容器中映射為 runtime 容器路徑 /runtime/usr/bin /、runtime/usr/include 等，作為基礎運行系統環境存在。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;默認情況下, 玲瓏容器內部的環境變量已自動處理好路徑識別問題, 如：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PATH=szbt@szbt-linyaps23:/project$ echo $PATH
/bin:/usr/bin:/runtime/bin:/opt/apps/com.tencent.wechat/files/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;通用表達為:&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;PATH=szbt@szbt-linyaps23:/project$ echo $PATH
/bin:/usr/bin:/runtime/bin:$PREFIX/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/sbin:/usr/sbin&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;04&amp;nbsp;玲瓏應用構建工程通用資源的規範&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在玲瓏應用構建工程中，不同的資源文件均需要遵循相關規範以確保構建、體驗能夠滿足要求。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.1 icon 圖標目錄規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;依據玲瓏遵循的 Freedesktop XDG 規範及玲瓏應用目錄結構規範，圖標根據不同尺寸放置在對應的目錄中。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;主流的非矢量圖標尺寸有: 16x16、24x24、32x32、48x48、128x128、256x256、512x512。為保障圖標在系統中能夠獲得較佳的體驗效果, 因此需要至少一個尺寸不小於 128x128 的非矢量圖標文件, 矢量圖標則不存在該限制。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;因此, 一款玲瓏應用安裝目錄中, icons 圖標目錄應為以下示例，其中&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;scalable 目錄用於放置矢量圖標文件, 一般為 .svg 格式。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$PREFIX/share/icons/hicolor/16x16/apps
$PREFIX/share/icons/hicolor/24x24/apps
$PREFIX/share/icons/hicolor/32x32/apps
$PREFIX/share/icons/hicolor/48x48/apps
$PREFIX/share/icons/hicolor/128x128/apps
$PREFIX/share/icons/hicolor/256x256/apps
$PREFIX/share/icons/hicolor/512x512/apps
$PREFIX/share/icons/hicolor/scalable/apps&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;假設你的玲瓏應用同時提供尺寸為 128x128 的非矢量圖標文件 linyaps-app-demo.png 和 128x128 的矢量圖標文件 linyaps-app-demo.svg，在玲瓏容器中應當表現為以下狀態：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$PREFIX/share/icons/hicolor/128x128/apps/linyaps-app-demo.png
$PREFIX/share/icons/hicolor/scalable/apps/linyaps-app-demo.svg&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;注意，為了避免圖標衝突被覆蓋，圖標文件名請使用應用唯一英文名稱或玲瓏應用 id。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;4.2 desktop 文件規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;玲瓏應用兼容大部分符合 Freedesktop XDG 規範的 desktop 啓動文件, 其中有以下字段需要額外注意：&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:123px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:20.35pt; text-align:center; vertical-align:middle&quot;&gt;&lt;span&gt;字段&lt;/span&gt;&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:20.35pt; text-align:center; vertical-align:middle&quot;&gt;&lt;span&gt;值要求&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;Exec&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;該值用於設置點擊此 desktop 文件時執行的指令, 需要與 linglong.yaml 中的 command 值保持一致。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;Icon&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;該值用於設置該 desktop 文件顯示的應用圖標, 需要與 icons 圖標目錄規範中的圖標文件名一致, 此值不需要文件名後綴。&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;因此, 一個符合玲瓏應用規範的 desktop 文件可以參考：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;org.qbittorrent.qBittorrent.desktop
[Desktop Entry]
Categories=Network;FileTransfer;P2P;Qt;
Exec=/opt/apps/org.qbittorrent.qBittorrent/files/bin/qbittorrent %U
Comment=Download and share files over BitTorrent
Icon=qbittorrent
MimeType=application/x-bittorrent;x-scheme-handler/magnet;
Name=qBittorrent
Type=Application
StartupWMClass=qbittorrent
Keywords=bittorrent;torrent;magnet;download;p2p;

StartupNotify=true
Terminal=false&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;05&amp;nbsp;玲瓏應用構建工程 linglong.yaml 規範&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;正如其他傳統包管理套件一樣, 手動創建一個玲瓏應用構建工程需要設置構建規則文件&amp;nbsp; linglong.yaml，在構建規則中, 則根據用途劃分為&lt;strong&gt;全局字段&lt;/strong&gt;及&lt;strong&gt;定製化字段&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;請注意，案例中 linglong.yaml 正文內所有空格符號、佔位符均為有效字符, 請勿刪除或變更格式。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5.1 全局字段規範&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在 linglong.yaml 中, 對於不受構建類型影響的字段我們稱為全局字段, 主要有以下參考的規範。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;1. 一個可以正常開始構建工程的 linglong.yaml&amp;nbsp;應包含以下的關鍵部分:&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:#3e3e3e; display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:230px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;模塊&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;解釋&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;構建工程版本號&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;package&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用基本信息&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;base&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用容器基礎環境及版本設置, 基礎環境中包含了部分基礎運行庫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;runtime&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;玲瓏應用運行庫 runtime 及版本設置, 當 base 中的基礎運行庫滿足程序運行要求時, 此模塊可刪除&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;command&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用容器啓動時執行的命令, 與 desktop 文件的 Exec 字段內容一致&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;sources&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用構建工程源文件類型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;build&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用構建工程將要執行的構建規則&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;package&amp;nbsp;模塊中存在數個子模塊:&lt;/span&gt;&lt;/p&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; border-collapse:collapse; box-sizing:border-box !important; display:table; height:156px; margin:0px 0px 10px; max-width:100%; outline:0px; overflow-wrap:break-word !important; padding:0px; width:677px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;子模塊&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;解釋&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;id&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用 id/包名&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;name&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用名稱, 使用英文名稱&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用版本號&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用類型, 默認為&amp;nbsp;&lt;span&gt;app&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;description&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;玲瓏應用描述&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;2. 玲瓏應用遵循 $PREFIX 路徑規則，該變量自動生成，應用所有相關文件需存放於此目錄下. 構建規則中若有需要涉及安裝文件的操作均需要安裝到 $PREFIX 路徑下。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;其中&amp;nbsp;$PREFIX 變量名即為填寫的實際內容，&lt;strong&gt;請勿使用絕對路徑或任何具有絕對值作用的內容代替&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;3. 玲瓏應用目前遵循&lt;strong&gt;四位數字&lt;/strong&gt;的版本號命名規則，不符合規則無法啓動構建工程&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;4. base、runtime 版本支持自動匹配最新版本尾號，版本號可以僅填寫版本號的前三位數字，如：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;當 base org.deepin.foundation 同時提供 23.0.0.28、23.0.0.29, 若 linglong.yaml 中僅填寫：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;base: org.deepin.foundation/23.0.0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;那麼在啓動玲瓏應用構建工程時, 將會默認採用最高版本號的 23.0.0.29。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;5. 玲瓏應用構建工程配置文件目前不直接兼容其他包構建工具的配置文件，需要根據構建工程配置文件案例來進行適配修改。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;詳細可參考：&lt;/span&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;https://linyaps.org.cn/guide/start/whatis.html&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;&lt;strong&gt;5.2 定製化字段&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;根據玲瓏應用構建工程源文件類型, 又可將玲瓏應用構建工程劃分為&lt;strong&gt;本地文件文件構建&lt;/strong&gt;&amp;nbsp;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;git 源碼倉庫拉取構建&lt;/strong&gt;，不同類型則需要填寫不同的 linglong.yaml。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;玲瓏應用構建工程源文件類型 sources 主要支持這幾種類型: git、local、file、archive。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;完整説明可參考：&lt;/span&gt;&lt;span style=&quot;color:#4f81bd&quot;&gt;https://linyaps.org.cn/guide/start/whatis.html&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;strong&gt;5.2.1&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;git 拉取源碼編譯模式&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;當玲瓏應用構建工程需要通過 git 拉取開源項目倉庫資源到本地進行構建時, 此事 sources 應當設置為 git 類型, 並根據要求填寫 linglong.yaml。並需要根據規範編寫 sources 與 build 模塊。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;1. sources&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  - kind: git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    url: https://githubfast.com/qbittorrent/qBittorrent.git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    version: release-4.6.7&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    commit: 839bc696d066aca34ebd994ee1673c4b2d5afd7b&lt;/span&gt;&lt;/code&gt;
&lt;code&gt;&lt;span&gt;  - kind: git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    url: https://githubfast.com/arvidn/libtorrent.git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    version: v2.0.9&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    commit: 4b4003d0fdc09a257a0841ad965b22533ed87a0d&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:196px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;名稱&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;描述&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件類型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; text-align:center; vertical-align:middle&quot;&gt;url&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:36pt; vertical-align:middle&quot;&gt;需要通過 git 拉取的源代碼倉庫地址, 該倉庫需要支持 git 功能. 當網絡狀態不佳時, 可採用鏡像地址代替&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;version&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;指定源代碼倉庫的版本號, 即 tag 標籤, 或拉取主線 master&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:52.5pt; text-align:center; vertical-align:middle&quot;&gt;commit&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:52.5pt; vertical-align:middle&quot;&gt;根據該倉庫 commit 變動歷史拉取源碼, 此處填入 commit 對應的值, 將會應用該倉庫截止本 commit 的所有變更. *此字段優先級高於 version, 請勿填入 version 合併時間之後的任何 commit&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;該模式支持同時添加多個 git 倉庫作為 sources 拉取。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;2. build&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;build&lt;/span&gt;: &lt;span style=&quot;color:#dd1144&quot;&gt;|&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;mkdir&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;-p ${PREFIX}/bin/ ${PREFIX}/share/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;  ##Apply patch for qBittorrent&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;cd&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;/project/linglong/sources/qBittorrent.git&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  &lt;span&gt;git&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;apply -v /project/patches/linyaps-qBittorrent-4.6.7-szbt2.patch&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此模塊為構建規則正文，路徑遵守玲瓏應用目錄結構規範。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;在 sources 拉取到本地後, 倉庫文件將會存放在 /project/linglong/sources 目錄中，此時不同倉庫目錄以 xxx.git 命名；支持運用 git patch 功能對源代碼進行便捷維護。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;&lt;strong&gt;5.2.2&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;本地資源操作模式&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;當玲瓏應用構建工程需要對構建目錄中的文件操作時，此時 kind 應當設置為 local 類型, 並根據要求填寫 linglong.yaml，此時需要根據規範編寫 sources 與 build 模塊。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1. sources&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sources:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;source:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  - kind: local&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;    name: &quot;qBittorrent&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;table cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:&amp;quot;PingFang SC&amp;quot;,system-ui,-apple-system,BlinkMacSystemFont,&amp;quot;Helvetica Neue&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei UI&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; height:78px; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:677px; word-spacing:0px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;名稱&lt;/td&gt; 
   &lt;td style=&quot;background-color:#4472c4; border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;描述&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;kind&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件類型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; text-align:center; vertical-align:middle&quot;&gt;name&lt;/td&gt; 
   &lt;td style=&quot;border-color:#9bc2e6; border-style:solid; border-width:0.5pt; height:19.5pt; vertical-align:middle&quot;&gt;源文件名稱標識, 不具備實際用途&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;注意，當 kind 應當設置為 local 類型時, 構建工程將不會對任何源文件進行操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;2. build&amp;nbsp;示例&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;build: |&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  ##Build main&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  mkdir /project/src/qBittorrent-release-4.6.7-szbt2/build&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  cd /project/src/qBittorrent-release-4.6.7-szbt2/build&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  cmake -DCMAKE_BUILD_TYPE=Release \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;        -DCMAKE_INSTALL_PREFIX=$PREFIX ..&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  make -j$(nproc)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  make install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;此模塊為構建規則正文，路徑遵守玲瓏應用目錄結構規範，此時 build 規則支持多種寫法以模擬人為操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;注意需要確保此構建規則所有步驟均可以正常被執行, 否則將會中斷當次構建任務。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;5.2.3&amp;nbsp;容器內部手動操作模式&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;若計劃直接進入玲瓏容器手動操作而不是通過構建規則文件 linglong.yaml,那麼應該參考，本地資源操作模式&amp;nbsp;填寫 linglong.yaml&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;sources 部分寫法與本地資源操作模式一致；&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;color:#000000; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;由於使用手動操作, 因此不需要完整且可以正常被執行的 build 規則, 此時 linglong.yaml 用於生成符合描述的玲瓏容器而不是執行所有任務，具體操作將在後續關於容器內部構建文件的案例中詳細展示。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;以上便是玲瓏應用構建的一些基礎知識，相信您已對玲瓏應用構建的規範、目錄結構、資源配置及關鍵文件（如 linglong.yaml）有了較全面的認知。這些知識不僅是構建流程的「地圖」，更是規避常見陷阱的「指南針」。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0FoyZ9FfJ6wxbzborTNjmQ&quot; target=&quot;_blank&quot;&gt;在接下來的系列推文中，我們將&lt;strong&gt;深入實戰環節&lt;/strong&gt;&lt;/a&gt;。準備好您的開發環境，下一站，我們將帶大家&lt;strong&gt;在玲瓏容器中編譯基於 Qt5 的開源應用！&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/336001</link>
            <guid isPermaLink="false">https://www.oschina.net/news/336001</guid>
            <pubDate>Thu, 27 Feb 2025 07:34:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>IBM Granite 3.2 系列模型開源發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;IBM &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ibm.com%2Fnew%2Fannouncements%2Fibm-granite-3-2-open-source-reasoning-and-vision&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;推出最新的 Granite 3.2 系列模型，依舊在 Apache 2.0 許可下開源。「以實驗推理功能和首個官方視覺語言模型（VLM）為首，Granite 3.2 為 Granite 系列引入了多項重要的新功能。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;主要信息概覽：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新款 &lt;strong&gt;Granite 3.2 8B Instruct 和 Granite 3.2 2B Instruct&lt;/strong&gt; 提供實驗性的思路鏈推理功能，可顯著提高其遵循複雜指令的能力，同時不會犧牲整體性能。推理過程可以打開或關閉，從而高效利用計算資源。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;與 IBM 的推理擴展技術相結合，Granite 3.2 8B Instruct 的擴展思維過程使其能夠達到或超越更大模型的推理性能，包括 GPT-4o 和 Claude 3.5 Sonnet。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;新開發的多模式模型&lt;strong&gt;Granite Vision 3.2 2B&lt;/strong&gt;特別注重文檔理解，其性能突出，可與尺寸為其 5 倍的開放模型相媲美。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Granite Timeseries 模型系列的最新成員&lt;strong&gt;Granite-Timeseries-TTM-R2.1&lt;/strong&gt;擴展了 TTM 的預測能力，除了之前的 TTM 模型已經支持的分鐘和小時預測任務之外，還包含每日和每週預測。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;為 &lt;strong&gt;Granite Guardian 3.2&lt;/strong&gt; 引入了新的模型大小，其中包括從 3B-A800M MoE 語言模型衍生的變體。新模型在性能損失最小的情況下提高了效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Granite Embedding 模型系列現在包括學習稀疏嵌入的能力。Granite -Embedding-30M-Sparse 可在不同的資源和延遲預算之間平衡效率和可擴展性。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;247&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-734609651e706f86443082405306c2a0613.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;219&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5861924d6216e8e1bd964342a61ddfaec61.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-01d6625e86edda352221a94d16367faf0c4.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更多詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ibm.com%2Fnew%2Fannouncements%2Fibm-granite-3-2-open-source-reasoning-and-vision&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335996/ibm-granite-3-2</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335996/ibm-granite-3-2</guid>
            <pubDate>Thu, 27 Feb 2025 07:16:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>特斯拉國內 FSD 和美國版 FSD 有什麼區別？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;特斯拉中國日前宣佈，2024.45.32.12 已開始分批次推送，城市道路 Autopilot 自動輔助駕駛功能上線，這也意味着特斯拉 FSD 正式落地中國。&lt;/p&gt; 
&lt;p&gt;不過，已經升級過的車主經過實測，國內版的 FSD 只能算是具備領航功能的高階智駕，而這又與美版 FSD 有多大區別呢？汽車之家為此製作了一圖説明。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-473e140ae45657efcec09d140953dcbee28.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;從定位上來看，特斯拉中國的輔助駕駛系統，允許在部分結構化的公共道路上開啓智駕，在城中村、夜市街此類場景可用度不高；而&lt;strong&gt;美國版 FSD 在車位設定目的地後支持一鍵開啓智駕&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;同時，美版 FSD 具備自動找車位能力，中國版的則不具備。&lt;/p&gt; 
&lt;p&gt;FSD 的可用度方面，中國版接管率較高，偏向輔助駕駛系統；美國版的較低，更接近完全自動駕駛。&lt;/p&gt; 
&lt;p&gt;在車輛的硬件支持上，中國版 FSD 僅支持 HW4.0 車機芯片，而美版則支持 HW2.5 及以上版本，適用車型範圍更廣。&lt;/p&gt; 
&lt;p&gt;最後，價格方面，中國版 FSD 售價 6.4 萬元，美版為 8000 美元（約合人民幣 5.8 萬元）。&lt;/p&gt; 
&lt;p&gt;對比來看，美國版的 FSD 系統，不僅售價比中國版便宜，而且支持車型範圍更廣，功能也更完善、好用。&lt;/p&gt; 
&lt;p&gt;不過，有報道指出，當前特斯拉給車主推送的輔助駕駛功能屬於「殘血版」FSD，而「滿血版」系統當前正在國內進行測試優化，預計 3、4 月份開啓推送。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335957&quot; target=&quot;news&quot;&gt;特斯拉 FSD 國內訓練數據合規，但仍處於 L2 級自動駕駛級別&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335792&quot; target=&quot;news&quot;&gt;特斯拉 FSD 闖紅燈，馬斯克回應：我們用了中國互聯網上的公開視頻數據來訓練&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/335712&quot; target=&quot;news&quot;&gt;特斯拉 FSD 部分能力在中國已推送，命名為「FSD 智能輔助駕駛功能」&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335994</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335994</guid>
            <pubDate>Thu, 27 Feb 2025 07:11:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>韓國數據中心建設一再遲滯</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;科技日報首爾 2 月 26 日電（記者薛嚴）韓國數據中心協會近日表示，2021 年至 2024 年間，共有 16 個已公開宣佈的數據中心項目被暫停或取消。在首爾和京畿道，受民間投訴影響，從獲得建築許可到開始施工的時間被一再延長，部分建設項目被迫下馬。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;全球雲計算代表企業之一亞馬遜雲計算服務曾於 2023 年 10 月宣佈，將投資 7.85 萬億韓元，在韓建設首個數據中心。作為該投資計劃的第一步，亞馬遜在仁川西區工業園區開建一個大型數據中心，業務規模超過 5000 億韓元，需要約 100 兆瓦電力。目前距離宣佈投資已過去一年零四個月，該數據中心建設仍處於起步階段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;而亞馬遜雲計算服務在馬來西亞的數據中心於 2023 年 3 月宣佈，2024 年 8 月即竣工開放；在印度和澳大利亞的數據中心從宣佈到正式開放用了約兩年時間；在泰國的數據中心於 2022 年 10 月宣佈，2025 年 1 月投入運營。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;韓國業界研判，由於韓國獨特的民事訴訟風險，全球大型科技公司今後可能不會考慮將該國作為人工智能數據中心建設地。三星證券在近期的報告中指出，曾有某全球雲服務提供商計劃將韓國打造為人工智能數據中心，但最近放棄了該計劃，正轉向日本、印度、馬來西亞等國。由於包括亞馬遜和微軟在內的大型科技公司十分重視當地情緒和輿論風險，韓國業界擔心，他們會在人工智能時代的尖端技術基礎設施建設方面明顯落後。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/335990</link>
            <guid isPermaLink="false">https://www.oschina.net/news/335990</guid>
            <pubDate>Thu, 27 Feb 2025 06:54:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>