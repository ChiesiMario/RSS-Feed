<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Wed, 04 Jun 2025 12:44:23 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>快手開源</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;快手 Kwaipilot 團隊&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FEcH4GMRtVkvGByonRU5H-Q" target="_blank"&gt;宣佈開源 &lt;/a&gt;&lt;/u&gt;KwaiCoder-AutoThink-preview 自動思考大模型，針對近期深度思考大模型存在的「過度思考」問題進行了深入研究。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/191858_01w7_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;團隊不僅提出了一種全新的自動思考模型訓練範式，還基於傳統強化學習算法（GRPO），創新性地提出了帶有過程監督的強化學習方法 Step-SRPO，以進一步提升模型在複雜任務中的表現。&lt;/p&gt; 
&lt;p&gt;該模型融合了」思考「和」非思考「能力，並具備根據問題難度自動切換思考形態的能力。通過進行這種思考形態訓練，模型在多個「思考」和「非思考」評測榜單上均實現了性能提升，其中在部分代碼和數學類的任務上，開啓自動思考模式下的模型得分提升高達 20 分左右。更有趣的是，在部分榜單中，即使模型沒有開啓思考模式，受益於更優的推理形態，性能也有小幅上漲。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/191933_Ixbf_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;Kwaipilot 團隊表示，&lt;/span&gt;未來&lt;span style="font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;,&amp;quot;Segoe UI&amp;quot;,&amp;quot;PingFang SC&amp;quot;,&amp;quot;Hiragino Sans GB&amp;quot;,&amp;quot;Microsoft YaHei&amp;quot;,&amp;quot;Helvetica Neue&amp;quot;,Helvetica,Arial,sans-serif"&gt;將基於 preview 版本模型，進一步增強推理能力，支持更完善的思考中工具使用能力，並將全部技術細節、訓練方法開源。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;模型開源地址：&lt;/strong&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FKwaipilot%2FKwaiCoder-AutoThink-preview" target="_blank"&gt;https://huggingface.co/Kwaipilot/KwaiCoder-AutoThink-preview&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353578</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353578</guid>
      <pubDate>Sun, 11 May 2025 11:21:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>WWDC25 看點：iOS 26、設備端 AI 模型開放、全新 UI</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;蘋果正式&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIwOTA2MzYwNA%3D%3D%26mid%3D2247517452%26idx%3D1%26sn%3D2892dc9e8dbe37d550f0589e5c6e934c%26scene%3D142%23wechat_redirect" target="_blank"&gt;宣佈&lt;/a&gt;將在北京時間 6 月 10 日至 14 日舉行年度全球開發者大會（WWDC25）。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/184449_HkMX_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;蘋果將帶來自 2013 年 iOS 7 發佈以來最重大的變革，從操作系統命名規則的歷史性調整到界面設計的全面革新，再到人工智能服務的深度整合。&lt;/p&gt; 
&lt;p&gt;據多個信源的知情人士透露，在 WWDC25 上，蘋果將宣佈改變其沿用多年的系統命名方式——&lt;a href="https://www.oschina.net/news/352495/apple-to-rebrand-device-operating-systems-ios-26"&gt;用年份標識取代順序版本號&lt;/a&gt;。這一調整將適用於蘋果所有的操作系統，包括 iOS、iPadOS、macOS、watchOS、tvOS 和 visionOS。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/184601_kL4m_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;系統外觀方面，蘋果將採用代號為"Solarium"的全新 UI。&lt;/p&gt; 
&lt;p&gt;新 UI 特點包括：明亮、半透明的玻璃質感元素、浮動式控件和彈出式菜單、更圓潤的圖標設計，接近「圓角方形」形態、以及統一的導航邏輯。&lt;/p&gt; 
&lt;p&gt;Solarium 意為「陽光房」，總體將會更光滑、現代，其借鑑了 visionOS 的大量元素，也就是會使用更多三維立體毛玻璃的設計。&lt;/p&gt; 
&lt;p&gt;此前的消息指出只有 iOS、iPadOS 和 macOS 會採用這個新 UI，而實際上它將拓展到所有蘋果的操作系統上，包括 tvOS 和 watchOS 都將全部進行重新設計，以保持體驗一致。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/184626_3MJt_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;蘋果在去年的 WWDC 重磅推出 Apple Intelligence——然而卻是畫了一張大餅。&lt;/p&gt; 
&lt;p&gt;所以今年 WWDC 將不會有太多 AI 上的大更新，在用户體驗層面，可能會帶來 Apple 智能驅動的全新省電功能以及 AI 健康功能，並且將會為 Siri 語音助手引入 Google Gemini 助手。&lt;/p&gt; 
&lt;p&gt;對了，在 iOS 18 上延期的個人助理版 Siri 預計將於今年秋季配合 iPhone 17 系列最終發佈。&lt;/p&gt; 
&lt;p&gt;另一個比較大的更新是&lt;a href="https://www.oschina.net/news/350896"&gt;蘋果將開放其設備端的 AI 模型接口&lt;/a&gt;，允許開發者將 Apple 智能的大語言模型集成到自己的應用之中。&lt;/p&gt; 
&lt;p&gt;儘管 WWDC 主要聚焦軟件，但硬件新品仍有可能亮相。在 WWDC25 上，蘋果可能公佈的硬件有：配備 M4 系列芯片的新款 Mac Pro；配備攝像頭、支持手勢控制的新款 AirPods Pro 3。&lt;/p&gt; 
&lt;p&gt;相關來源&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkyNjU2ODM2NQ%3D%3D%26mid%3D2247613651%26idx%3D2%26sn%3Dd7d365a18fd87761a6e3e1e9eebc7d54%26scene%3D142%23wechat_redirect" target="_blank"&gt;WWDC25 前瞻：iOS 19 跳至 26，iPad 全面「Mac 化」&lt;/a&gt;&lt;br&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjgzMTAwODI0MA%3D%3D%26mid%3D2652410254%26idx%3D1%26sn%3D0cdc786424018e5234810b65e28de7ef%26scene%3D142%23wechat_redirect" target="_blank"&gt;iPhone 新系統「陽光房」：毛玻璃設計，打通蘋果全家桶&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353573</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353573</guid>
      <pubDate>Sun, 11 May 2025 10:47:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>AIFlowy v1.0.5 發佈，一個 AI 產品的底座和基石</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;AIFlowy v1.0.5 已經發布，一個 AI 產品的底座和基石。&lt;/p&gt; 
&lt;h2&gt;v1.0.5 2025-06-04&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增：插件新增，試運行，功能&lt;/li&gt; 
 &lt;li&gt;新增：工作流增加自定義圖標功能&lt;/li&gt; 
 &lt;li&gt;新增：iframe 匿名訪問功能，會話消息記錄通過 redis 進行緩存&lt;/li&gt; 
 &lt;li&gt;新增：bot 設計頁面新增插件、工作流、知識庫未綁定時摺疊面板展開的文字提示&lt;/li&gt; 
 &lt;li&gt;新增：修復 node 的狀態在執行時未自動變化的問題&lt;/li&gt; 
 &lt;li&gt;新增：為 ChainStartEvent 和 ChainResumeEvent 添加獲取初始化參數的功能&lt;/li&gt; 
 &lt;li&gt;新增：優化 JsExecNode 在每次執行腳本時新建一個獨立 Context&lt;/li&gt; 
 &lt;li&gt;優化：升級 AF 到最新版本，以修復在 Code 節點中，無法通過 . 讀取 map 內容的問題&lt;/li&gt; 
 &lt;li&gt;優化：優化登錄頁面&lt;/li&gt; 
 &lt;li&gt;優化：優化 UI 細節&lt;/li&gt; 
 &lt;li&gt;優化：優化 Event 的 toString&lt;/li&gt; 
 &lt;li&gt;修復：修復使用 qwen-plus 調用 function_call 沒有正確拼接大模型返回的參數問題&lt;/li&gt; 
 &lt;li&gt;修復：修復 S3 存儲，知識庫上傳文件後報錯 close #ICAUI2&lt;/li&gt; 
 &lt;li&gt;修復：修復 deepSeek-chat 大模型調用 function_call 提交參數類型前綴必須小寫問題&lt;/li&gt; 
 &lt;li&gt;修復：修復 deepSeekchat 大模型調用 function_call 類轉換失敗問題 close #ICBGBX&lt;/li&gt; 
 &lt;li&gt;修復：修復使用 qwen-plus 調用 function_call 沒有正確拼接大模型返回的參數問題&lt;/li&gt; 
 &lt;li&gt;修復：function call 消息存入數據庫&lt;/li&gt; 
 &lt;li&gt;修復：bot 設計頁面，插件、工作流、知識庫彈窗支持分頁&lt;/li&gt; 
 &lt;li&gt;修復：外部鏈接匿名訪問 bot，會話增刪改查，外部聊天記錄清除&lt;/li&gt; 
 &lt;li&gt;修復：升級 agents-flex ，解決 milvus 向量化維度不一致問題&lt;/li&gt; 
 &lt;li&gt;修復：修復 es 知識庫無法檢索問題&lt;/li&gt; 
 &lt;li&gt;修復：更新 TinyFlow 並修復 close #ICBOOD&lt;/li&gt; 
 &lt;li&gt;修復：修復插件使用 apiKey 進行認證，headers 中的參數未正確添加到請求頭問題， 修復修改插件未，提交 tokenValue 問題&lt;/li&gt; 
 &lt;li&gt;修復：修復 js 中無法通過 "." 調用 map 數據的問題&lt;/li&gt; 
 &lt;li&gt;修復：解決外部打開聊天時，bot 預設的問題、歡迎語失效的問題 close #ICCHE6&lt;/li&gt; 
 &lt;li&gt;修復：優化大模型調用報錯時的提示信息&lt;/li&gt; 
 &lt;li&gt;修復：解決外部打開聊天時，無法觸發 function calling 的 bug&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情查看：&lt;a href="https://gitee.com/aiflowy/aiflowy/releases/v1.0.5"&gt;https://gitee.com/aiflowy/aiflowy/releases/v1.0.5&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353568</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353568</guid>
      <pubDate>Sun, 11 May 2025 10:07:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>VTJ 上線 AI 識別 Sketch 和 Figma 設計稿</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;div&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;VTJ 的 AI 助手支持識別 Sketch 和 Figma 設計稿的元數據，當需要高精度還原設計圖時，您可以使用這種方式通過 AI 開發頁面組件。 Sketch 和 Figma 的元數據文件是一個 json 格式的文件，可以通過 VTJ 官方提供的插件導出。&lt;/p&gt; 
 &lt;h2&gt;Sketch 元數據導出插件&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fmeta.html%23sketch%25E5%2585%2583%25E6%2595%25B0%25E6%258D%25AE%25E5%25AF%25BC%25E5%2587%25BA%25E6%258F%2592%25E4%25BB%25B6" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;h3&gt;安裝 Sketch 插件&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fmeta.html%23%25E5%25AE%2589%25E8%25A3%2585sketch%25E6%258F%2592%25E4%25BB%25B6" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href="https://gitee.com/newgateway/vtj-sketch-plugin/raw/master/vtj.sketchplugin.zip" target="_blank"&gt;下載 vtj-sketch-plugin 插件&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;解壓後把&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;vtj.sketchplugin&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;複製到 Sketch 的插件文件夾，即完成安裝。&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h3&gt;導出 Sketch 元數據&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fmeta.html%23%25E5%25AF%25BC%25E5%2587%25BAsketch%25E5%2585%2583%25E6%2595%25B0%25E6%258D%25AE" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;打開 Sketch，選中你需要導出的圖層，然後點擊菜單：&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;插件 &amp;gt; vtj-sketch-plugin &amp;gt; 導出圖層元數據&lt;/code&gt;。 選擇文件保存位置，即可導出 json 文件。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//dee5d3b3d631506e30a87643c0ef3679.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;h2&gt;Figma 元數據導出插件&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fmeta.html%23figma%25E5%2585%2583%25E6%2595%25B0%25E6%258D%25AE%25E5%25AF%25BC%25E5%2587%25BA%25E6%258F%2592%25E4%25BB%25B6" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href="https://gitee.com/newgateway/vtj-figma-plugin/raw/master/vtj-figma-plugin.zip" target="_blank"&gt;下載 vtj-figma-plugin 插件&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;解壓 zip，打開 Figma 客户端，打開菜單：&lt;code&gt;Plugins &amp;gt; Development &amp;gt; import plugin from manifest&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;選擇解壓後的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;manifest.json&lt;/code&gt;文件完成安裝&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h3&gt;導出 Figma 元數據&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fmeta.html%23%25E5%25AF%25BC%25E5%2587%25BAfigma%25E5%2585%2583%25E6%2595%25B0%25E6%258D%25AE" target="_blank"&gt;&lt;/a&gt;&lt;/h3&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;打開 Figma 客户端，選中您需要導出的圖層，點擊菜單&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Plugins &amp;gt; Development &amp;gt; Figma 元數據導出工具&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;打開插件。插件顯示後點擊&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;導出為 JSON&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;按鈕。 選擇文件保存位置，即可導出 json 文件。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//0e92dbdc6bd5f914b511a370bb271936.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e2e549b608007d3c8fabc4119c7a76bd.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;h2&gt;AI 識別元數據&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2Fguide%2Fmeta.html%23ai%25E8%25AF%2586%25E5%2588%25AB%25E5%2585%2583%25E6%2595%25B0%25E6%258D%25AE" target="_blank"&gt;&lt;/a&gt;&lt;/h2&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;打開 VTJ 設計器在，在 AI 助手新建話題，選擇元數據，選擇導出的 Sketch 或 Figma 元數據 json 文件，即可通過 AI 高精度還原設計圖。&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//c66bd5502a0de54df1904ee32b93e021.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//aa5adc00f71e48a34bb9fbd0d7957db2.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="background-color:#ffffff; color:#3c3c43"&gt;Pager&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353558</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353558</guid>
      <pubDate>Sun, 11 May 2025 09:20:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>🎉🎉🎉Nebula Framework 1.0.0 正式發佈：領域驅動模型 (DDD) 設計思想</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;div&gt; 
 &lt;h3&gt;軟件簡介&lt;/h3&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;Nebula Framework 是一款適合初始 DDD 領域設計的用户使用的框架，本框架基於我自己開發的第一代 CDP 開發框架全新重構的一款開發框架。在第一代 CDP 開發框架中，雖然引入了 DDD（領域驅動設計）的開發理念，但還不夠成熟。因此，我重新開發了 Nebula Framework，技術上進行了全面升級，包括：&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;DDD 開發理念的進一步完善和深化。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;Spring Boot 從 2.0 升級到 3.0。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;JDK 從 8.0 升級到 17。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&amp;nbsp;單體應用，摒棄複雜的代碼架構。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&amp;nbsp;配套前端框架實現 nebula-admin。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;前端框架從基於 Vue 2.0 的 Vue-Element-Admin 切換到基於 React 的 Ant Design 5.0，使前端界面更加現代化。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;定義&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;Nebula Framework 是一套基於&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Spring Boot 3.0&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Java 17&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;開發的開發框架，適合個人小項目開發，並且正在努力發展成為適閤中小企業使用的開發平台。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;模塊組成&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;nebula-framework-core&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：核心基礎模塊，可用於搭建 Web 框架。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;nebula-framework-auth&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：集成登錄驗證及權限驗證的框架。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;nebula-framework-system&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：為&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Nebula Admin&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;前端項目開發的系統管理模塊。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;nebula-framework-development&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：為&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Nebula Admin&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;開發的開發管理模塊。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;nebula-framework-generator&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：基於 Maven 插件的代碼生成插件。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;功能特點&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;模塊化設計&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：可根據需求選擇模塊集成。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;完善的驗證機制&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：集成完善的登錄驗證及權限驗證機制。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;代碼生成工具&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：提供代碼生成工具，提高開發效率。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;企業級應用開發&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：適合企業級應用開發。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;技術棧升級&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：全面升級技術棧，提升性能和開發體驗。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;輕量封裝&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：不過渡封裝，基於穩定的開源框架，方便查詢相關的資料解決問題。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;領域驅動設計&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;業務代碼遵循 DDD 規範，但規範靈活，可根據項目需求調整使用其他開發理念。框架雖然基於 DDD 開發，但不會限制用户使用其他開發理念，開發者可以根據項目特點自由選擇最適合的開發方式。比如，用户可以選擇使用傳統的三層架構，也可以選擇使用基於事件驅動的 CQRS 架構。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;配套前端框架 - Nebula Admin&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;定義&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#000000"&gt;Nebula Admin 是一個基於現代前端技術棧構建的後台管理系統框架，採用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;作為前端框架，結合&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Ant Design 5.0&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;組件庫。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;功能模塊&lt;/strong&gt;&lt;/p&gt; 
    &lt;table border="1" cellpadding="1" cellspacing="0" style="border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px 0px 20px; max-width:100%; overflow:auto; width:800px; word-break:keep-all"&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;模塊分類&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;功能項&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;模塊作用&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;備註&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;首頁&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;-&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;系統概覽和快捷入口&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;系統默認展示頁面&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;組織管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;業務單元&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;管理企業組織架構和業務單元&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;組織管理模板是業務模塊的一個實現&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;部門管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;管理部門層級和設置&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;人員管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;管理系統用户信息&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;崗位管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;定義和管理崗位職責&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;系統管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;字典管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;管理系統字典數據&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;角色管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;配置角色權限&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;用户管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;配置角色權限&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;日誌管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;操作日誌&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;記錄用户操作歷史&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;登錄日誌&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;跟蹤用户登錄情況&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;異常日誌&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;記錄系統異常信息&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;開發管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;菜單管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;配置系統菜單結構&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;接口管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;管理系統 API 接口&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;用户角色權限配置&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;個人管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;個人信息&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;查看和修改個人資料&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;用於修改個人信息和密碼重置&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;技術棧&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;前端&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：基於 UmiMax 開發，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Ant Design 5.0&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;組件庫&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;後端&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：基於 Spring Boot 3.0 和 Java 17 開發，使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;MyBatis&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;作為 ORM 框架。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;優勢&lt;/strong&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;強大的功能特性&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：支持模塊化開發、權限控制和國際化等功能。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;現代化的前端界面&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：基於 React 和 Ant Design 5.0，界面更加現代化，提升用户體驗。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#e24864"&gt;-&lt;/span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;強大的生態支持&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;：可與&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;Ant Design Pro&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;、&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;UmiJS&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;、&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;DvaJS&lt;/strong&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;等生態項目結合，提升開發效率和功能豐富度。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;界面展示&lt;/strong&gt;&lt;/p&gt; 
    &lt;table border="1" cellpadding="1" cellspacing="0" style="border-collapse:collapse; border-spacing:1px; border:none; box-sizing:border-box; color:#444444; display:block; font-size:14px; line-height:inherit; margin:0px; max-width:100%; overflow:auto; width:800px; word-break:keep-all"&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;組織管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="首頁" src="https://oscimg.oschina.net/oscnet//5a453df216e43701c80f8e99423fdf79.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="業務單元" src="https://oscimg.oschina.net/oscnet//50394f01940199208cf6c480cf387ae8.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="部門管理" src="https://oscimg.oschina.net/oscnet//573ec9f562cb57dacceeca22522d0cac.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="人員管理" src="https://oscimg.oschina.net/oscnet//faaa9fb1244822e27cd0f35dd36e80b7.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="崗位管理" src="https://oscimg.oschina.net/oscnet//d43d5c2daaa5d594049bf500d2b70073.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;系統管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="字典管理" src="https://oscimg.oschina.net/oscnet//66a7ce64c1bbfe38b9af948ea058acca.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="角色管理" src="https://oscimg.oschina.net/oscnet//bc691eee4f4687649772fb5022e7ecf2.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img alt="用户管理" src="https://oscimg.oschina.net/oscnet//e545206f2bbecb6f8409f58cee4576c2.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;日誌管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//9c7ea5a473b01c18503192ad89b66ce2.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4a123d3b5c0ec66c3303b73f299f9ad3.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;開發管理&lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&amp;nbsp;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//f967cda2bd58b057712fd43232a02663.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
       &lt;td style="border-color:#dddddd; border-style:solid; border-width:1px"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//9d12f27216b0cf9962a6eb274a748bd3.png" referrerpolicy="no-referrer"&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353550/nebula-framework-1-0-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353550/nebula-framework-1-0-0</guid>
      <pubDate>Sun, 11 May 2025 09:02:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>Agents-Flex v1.1.7 發佈，大語言模型應用開發框架</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Agents-Flex v1.1.7 已經發布，大語言模型應用開發框架。&lt;/p&gt; 
&lt;p&gt;此版本更新內容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增: 為 ChainStartEvent 和 ChainResumeEvent 添加獲取初始化參數的功能&lt;/li&gt; 
 &lt;li&gt;新增: StreamResponseListener 添加 onMatchedFunction 方法&lt;/li&gt; 
 &lt;li&gt;新增: 添加 openai 兼容 api 的其他第三方 api 測試&lt;/li&gt; 
 &lt;li&gt;優化: 添加 FunctionPrompt 的 toString 方法&lt;/li&gt; 
 &lt;li&gt;優化: 優化 ImagePrompt 的方法&lt;/li&gt; 
 &lt;li&gt;優化: 優化 ToolPrompt 支持多個方法調用&lt;/li&gt; 
 &lt;li&gt;優化: 優化 Stream 模型下的 Function Call&lt;/li&gt; 
 &lt;li&gt;優化: 優化 SseClient 的 tryToStop 方法&lt;/li&gt; 
 &lt;li&gt;優化: 優化 FunctionCall 以及添加 toString 方法&lt;/li&gt; 
 &lt;li&gt;優化: 優化 OpenAILlm.java&lt;/li&gt; 
 &lt;li&gt;優化: 優化 JsExecNode 在每次執行腳本時新建一個獨立 Context&lt;/li&gt; 
 &lt;li&gt;優化: 優化 Event 的 toString&lt;/li&gt; 
 &lt;li&gt;修復： node 的狀態在執行時未自動變化的問題&lt;/li&gt; 
 &lt;li&gt;修復：使用 qwen-plus 調用 function_call 沒有正確拼接大模型返回的參數問題&lt;/li&gt; 
 &lt;li&gt;修復: 修復 DeepseekLlmUtil 類型轉換錯誤&lt;/li&gt; 
 &lt;li&gt;修復: HistoriesPrompt 的 toMessages 可能多次添加 systemMessage 的問題&lt;/li&gt; 
 &lt;li&gt;修復：修復 CodeNode 的 js 無法通過 "." 調用 map 數據的問題&lt;/li&gt; 
 &lt;li&gt;修復：修復阿里雲百鍊 text-embedding-v3 向量化使用 milvus 使用默認向量模型導致兩次維度不一致問題&lt;/li&gt; 
 &lt;li&gt;修復：qwen3 非流式返回設置 enable_thinking 為 false&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情查看：&lt;a href="https://gitee.com/agents-flex/agents-flex/releases/v1.1.7"&gt;https://gitee.com/agents-flex/agents-flex/releases/v1.1.7&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353544</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353544</guid>
      <pubDate>Sun, 11 May 2025 08:49:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>通用型 AI 智能體 Manus 新增「文字生成視頻」功能</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;通用型 AI 智能體 Manus 新增了原生的「文字生成視頻」功能，目前已經面向付費會員用户開放搶先體驗，Basic、Plus、Pro 用户現可使用文本指令生成視頻。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height="994" src="https://static.oschina.net/uploads/space/2025/0604/162810_kMej_2720166.png" width="1266" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Manus 在 X 平台上&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FManusAI_HQ%2Fstatus%2F1929913745503072551" target="_blank"&gt;表示&lt;/a&gt;&lt;/u&gt;，其 AI 智能體可以在幾分鐘內根據文本提示詞生成結構化、井然有序的視頻故事，後續將面向所有人推出。&lt;/p&gt; 
&lt;p&gt;&lt;img height="956" src="https://static.oschina.net/uploads/space/2025/0604/163121_BzOt_2720166.png" width="1904" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/163210_3iIk_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGAfTx0wXC4vFYgQAyLaGLQ" target="_blank"&gt;據介紹&lt;/a&gt;，Manus 視頻生成功能建立在大型行動模型（LAM）技術基礎上。不同於傳統 AI 僅專注於單一任務，Manus 採用向量化處理方式，通過跨應用調用工具來實現從用户指令到最終成果的完整流程。&lt;/p&gt; 
&lt;p&gt;當用户需要生成視頻時，系統並非直接生成，而是智能調度各類資源，整合多種技術手段，最終呈現高質量視頻內容。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353537/manus-video-generation</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353537/manus-video-generation</guid>
      <pubDate>Sun, 11 May 2025 08:33:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>開源文件同步工具 Syncthing 2 即將發佈正式版</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Syncthing 是一款跨平台的開源文件同步工具，可以在兩台或多台計算機之間同步文件。昨日在發佈 v1.29.7 的同時，發佈了 v2.0.0-rc.19。&lt;/p&gt; 
&lt;p&gt;Syncthing 2 的主要變化為數據庫後端從 LevelDB 切換到 SQLite。並且確認 Syncthing 1.x 版本很快將被 Syncthing 2.x 版本取代，版本 2 帶來了新的數據庫格式和各種清理功能，但協議仍然與 Syncthing 1 兼容。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Syncthing 2&amp;nbsp;&lt;/strong&gt;的重要變化&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;數據庫後端切換&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;數據庫由 LevelDB 更換為 SQLite。首次啓動時會進行數據庫遷移，&lt;strong&gt;大型&lt;/strong&gt;部署可能需要較長時間。新數據庫更易於理解和維護，預期也更加穩定、少 Bug。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;刪除項自動清理&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;被刪除的文件信息不再永久保留在數據庫中，而是默認在六個月後自動遺忘。如果需要更長保留時間，可以通過--db-delete-retention-interval 命令行選項或相應環境變量設置為零（永久保留）或指定更長時間。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;命令行參數現代化&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;命令行參數解析方式升級，不再支持單橫線長選項（如 -home），必須使用雙橫線（如 –home）。部分選項已重命名，部分變為子命令。所有 serve 相關選項現在也可用環境變量配置。詳細用法可通過 syncthing --help 和 syncthing serve --help 查看。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;取消滾動哈希檢測&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;不再支持對文件移動內容的滾動哈希檢測，因為實際效果有限。這樣掃描和同步速度更快、更高效。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;首次啓動不再自動創建「默認文件夾」&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新版本首次啓動時不會再自動生成默認同步文件夾。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;多連接默認啓用&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;v2 設備之間默認使用多條連接。現在默認開啓三條連接：一條用於索引元數據，兩條用於數據傳輸。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;目前 Syncthing 2 已經發布到 v2.0.0-rc.19，相信很快將正式發佈。官網無此版本消息，需要在&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsyncthing%2Fsyncthing%2Freleases%2Ftag%2Fv2.0.0-rc.19" target="_blank"&gt;GitHub 獲取&lt;/a&gt;更多信息。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;轉載自：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.appinn.com%2Fsyncthing2%2F" target="_blank"&gt;https://www.appinn.com/syncthing2/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353524/syncthing-v2-0-0-rc19</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353524/syncthing-v2-0-0-rc19</guid>
      <pubDate>Sun, 11 May 2025 07:47:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>中國 AI Coding 市場在 2025 年迎來應用爆發期</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;國際數據公司（IDC）於近日發佈了《中國市場代碼生成產品評估，1H25》，報告對 AI Coding 產品進行了市場分析和調研，並測試了中國市場的主流產品，從核心代碼實現、註釋質量、工程化引導三個維度進行模型打分，並對產品整體能力進行評估，來為市場用户提供選型參考。&lt;/p&gt; 
&lt;p&gt;根據報告數據，AI Coding 市場在 2025 年迎來應用爆發期，更多技術供應商基於代碼工程化優勢發佈和更新產品，&lt;strong&gt;AI 編碼助手在產品界限上逐漸模糊，集成編程助手、工具、模型、對話交互界面等多種能力&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;此外，各個模型之間的差距在縮小，已經可以幫助開發者完成簡單任務的端到端實現，並對複雜任務搭建框架，在 RAG / 知識庫、聯網搜索、跨文件檢索上持續更新，各家廠商的競爭也逐漸收斂到用户入口和獨立 IDE 產品上。&lt;/p&gt; 
&lt;p&gt;中國市場仍有極大發展空間，AI 編程助手對開發者的覆蓋率在 30%。而美國已有 91% 的開發者使用 AI 工具，且超過 50% 的受訪者表示採用 OpenAI ChatGPT 來創建生產級應用程序。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/152404_eUUg_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/152711_rUXz_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0604/152733_keWG_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;另一項調研顯示，使用 AI 編碼助手的開發人員平均生產力提高了 35%，其中超過 20% 的受訪者表示對其生產效率的提升超過 50%。&lt;/p&gt; 
&lt;p&gt;開發者使用 AI 編程助手可以執行各種與開發相關的任務，不僅是代碼生成和補全，還包括單元測試生成、代碼版本自動升級以及自定義企業編碼規範。約 50% 的開發者認為增強團隊協作、提高工作滿意度、加快問題解決速度是編程助手的主要優勢，當前 AI 的核心能力在於提高開發者的生產效率，並非創新。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353521</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353521</guid>
      <pubDate>Sun, 11 May 2025 07:28:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>「互聯網女皇」發佈 340 頁 AI 趨勢報告</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;被稱為「互聯網女皇」的 Mary Meeker 在沉寂數年後，於 2025 年 5 月 30 日再次發佈了其標誌性的深度趨勢報告 &lt;em&gt;《Trends – Artificial Intelligence》。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;這位曾經的摩根士丹利明星分析師，如今的風險投資公司 Bond Capital 創始合夥人，通過這份長達 340 頁的重磅報告詳細介紹了 AI 的發展現況、未來趨勢等內容。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-ffbb618303f41e093ce8bb8a50c8fd50dc7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151307_ToP4_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;如果用一個詞來形容這份報告，會是「史無前例」，即 AI 史無前例的發展速度和普及度：AI 的用户增長、技術迭代和全球擴散速度遠超以往任何技術浪潮，如互聯網。&lt;/p&gt; 
&lt;p&gt;報告稱：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ChatGPT 在 17 個月內用户數就突破了 8 億，這是史無前例的；&lt;/li&gt; 
 &lt;li&gt;AI 公司數量以及如此多的公司實現高年經常性收入的速度是史無前例的；&lt;/li&gt; 
 &lt;li&gt;AI 模型的推理成本下降速度是史無前例的——雖然訓練一個大模型的成本最高要 10 億美元，但推理成本兩年內下降了 99%；&lt;/li&gt; 
 &lt;li&gt;AI 公司以極低成本匹配競爭對手模型功能的速度也是史無前例的。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151356_jTsS_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151448_ufHT_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/151723_EMvF_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;報告指出，AI 唯一沒有超越其它科技革命的領域是財務回報，暫時還不知道哪些公司能成長為長期盈利的下一代科技巨頭。&lt;/p&gt; 
&lt;p&gt;Mary 在報告中提到，目前主流的 AI 企業其估值與收入的差距過大。具體來看，Perplexity 在估值/收入倍數中，達到了約 75 倍的差距，而 OpenAI 則以 92 億美元的年收入、預計 3000 億美元的估值獲得了 33 倍的差距。&lt;/p&gt; 
&lt;p&gt;而在近一年時間中，中國的模型通過低成本的方式，打破了各大 AI 企業的高昂價格「泡沫」。Mary 對此表示：「投資人，請只投你願意損失的金額」。&lt;/p&gt; 
&lt;p&gt;更多報告內容查看：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bondcap.com%2Freports%2Ftai" target="_blank"&gt;https://www.bondcap.com/reports/tai&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353516/trends%E2%80%93artificial-intelligence</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353516/trends%E2%80%93artificial-intelligence</guid>
      <pubDate>Sun, 11 May 2025 07:15:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>SQL 優化：提升數據庫性能的藝術</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;隨着大數據時代的到來，數據庫在處理海量數據和複雜查詢時的重要性愈發凸顯。而對於開發人員和數據庫管理員來説，SQL 優化是一個必須掌握的技能。SQL 優化不僅能提高查詢效率，減少資源消耗，還能提升整個應用系統的響應速度和用户體驗。在本文中，我們將深入探討 SQL 優化的常見技巧和策略，幫助你在實際工作中應對各種性能瓶頸。&lt;/p&gt; 
&lt;h2&gt;什麼是 SQL 優化？&lt;/h2&gt; 
&lt;p&gt;SQL 優化指的是通過一系列方法和技巧，使得 SQL 查詢語句的執行更加高效，減少系統資源的消耗，進而提升數據庫的整體性能。SQL 優化可以從多個層面進行，包括數據庫設計優化、查詢語句優化、索引優化以及硬件資源的合理利用等。&lt;/p&gt; 
&lt;h2&gt;SQL 優化的基本原則&lt;/h2&gt; 
&lt;p&gt;在進行 SQL 優化之前，我們需要理解幾個基本的優化原則：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;減少 I/O 操作&lt;/strong&gt;：每次查詢都需要訪問磁盤，因此減少不必要的磁盤 I/O 操作是提高性能的關鍵。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;減少數據掃描量&lt;/strong&gt;：儘量避免全表掃描，選擇性地讀取數據，能夠有效減少查詢的開銷。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;避免不必要的排序和計算&lt;/strong&gt;：排序和計算會消耗大量的 CPU 和內存資源，儘量避免不必要的計算和排序。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;使用合適的索引&lt;/strong&gt;：合理的索引可以大大提高查詢效率，但索引的創建也需要謹慎，過多的索引會增加數據庫的寫入開銷。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;考慮執行計劃&lt;/strong&gt;：通過分析查詢的執行計劃，可以幫助識別出性能瓶頸所在。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;常見的 SQL 優化技巧&lt;/h2&gt; 
&lt;h3&gt;1. 使用索引優化查詢&lt;/h3&gt; 
&lt;p&gt;索引是數據庫優化中最常用的工具之一。通過索引，數據庫可以更快速地查找到目標數據，避免全表掃描。但索引的使用也要講究方法，濫用索引會導致性能下降。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;選擇性字段&lt;/strong&gt;：對於高選擇性的字段（例如主鍵、唯一鍵），索引效果最好。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;避免在小表上創建索引&lt;/strong&gt;：小表查詢的速度通常較快，創建索引可能得不償失。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;合理使用聯合索引&lt;/strong&gt;：聯合索引可以提升多列查詢的效率，但過多的聯合索引會增加數據庫的負擔。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. 優化 SQL 查詢語句&lt;/h3&gt; 
&lt;p&gt;編寫高效的 SQL 語句是 SQL 優化的基礎，下面是一些常見的優化建議：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;**避免 SELECT ***：在查詢時，儘量明確指定需要的列，而不是使用&lt;code&gt;SELECT *&lt;/code&gt;，這樣可以減少不必要的數據傳輸。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;避免在 WHERE 子句中使用函數&lt;/strong&gt;：在&lt;code&gt;WHERE&lt;/code&gt;子句中使用函數（例如&lt;code&gt;DATE()&lt;/code&gt;、&lt;code&gt;LOWER()&lt;/code&gt;等）會導致全表掃描，儘量避免。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;合理使用 JOIN&lt;/strong&gt;：JOIN 操作有時會導致大表之間的全表掃描，儘量避免連接大量數據，必要時使用&lt;code&gt;INNER JOIN&lt;/code&gt;替代&lt;code&gt;LEFT JOIN&lt;/code&gt;，因為&lt;code&gt;INNER JOIN&lt;/code&gt;效率更高。&lt;/li&gt; 
 &lt;li&gt;**避免在子查詢中使用 SELECT ***：子查詢中如果使用了&lt;code&gt;SELECT *&lt;/code&gt;，會導致不必要的數據計算，儘量只選擇需要的列。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;限制返回的行數&lt;/strong&gt;：通過使用&lt;code&gt;LIMIT&lt;/code&gt;或&lt;code&gt;TOP&lt;/code&gt;限制返回的數據行數，避免返回大量無用的數據。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. 合理設計數據庫表&lt;/h3&gt; 
&lt;p&gt;數據庫的設計對性能有着直接的影響。良好的數據庫設計能夠減少查詢時的數據冗餘，並提高數據的可訪問性。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;規範化與反規範化&lt;/strong&gt;：數據庫表的規範化可以減少數據冗餘，提高數據一致性；但在某些場景下，反規範化（例如合併表）能夠減少 JOIN 的次數，提升查詢效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;數據類型選擇&lt;/strong&gt;：選擇合適的數據類型可以有效減少存儲空間，進而提高查詢效率。例如，使用&lt;code&gt;INT&lt;/code&gt;代替&lt;code&gt;VARCHAR&lt;/code&gt;存儲數字類型數據。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;避免使用過長的文本字段&lt;/strong&gt;：過長的&lt;code&gt;TEXT&lt;/code&gt;或&lt;code&gt;BLOB&lt;/code&gt;字段在查詢時可能會佔用大量資源，儘量避免在查詢中直接使用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. 優化索引的使用&lt;/h3&gt; 
&lt;p&gt;合理使用索引能夠顯著提高 SQL 查詢性能，但過多的索引會導致數據庫更新操作變慢，甚至影響數據庫的寫入性能。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;單列索引與複合索引&lt;/strong&gt;：在創建索引時，儘量使用複合索引，特別是對於多列查詢的情況。複合索引在涉及多個字段的查詢時，會顯著提高性能。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;定期維護索引&lt;/strong&gt;：隨着數據的不斷更新，索引可能會變得低效。定期重建或優化索引可以保持查詢效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;避免在頻繁更新的列上創建索引&lt;/strong&gt;：索引的創建和維護會增加寫操作的開銷，因此在寫入頻繁的字段上不要創建索引。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;5. 使用查詢緩存&lt;/h3&gt; 
&lt;p&gt;許多數據庫管理系統（如 MySQL）提供查詢緩存功能。如果一個查詢請求的結果已經被緩存，那麼在後續相同查詢請求時，數據庫可以直接返回緩存中的結果，而不需要重新計算。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;開啓查詢緩存&lt;/strong&gt;：在適當的場合，可以啓用數據庫的查詢緩存功能，減少數據庫的計算壓力。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;定期清理緩存&lt;/strong&gt;：緩存中的數據有時會失效，需要定期清理和更新緩存。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;6. 分區表與分庫分表&lt;/h3&gt; 
&lt;p&gt;對於海量數據表，分區表與分庫分表是一種常見的優化方式。通過將數據分佈到多個物理存儲位置，可以提高查詢性能，降低單一數據庫的壓力。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;分區表&lt;/strong&gt;：將大表按某些規則（如時間、ID 範圍等）劃分為多個分區，每個分區可以單獨存儲和查詢。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;分庫分表&lt;/strong&gt;：將數據庫按照一定規則（如按用户 ID、地理區域等）進行拆分，減少單一數據庫的壓力，提高查詢效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SQL 優化的監控與分析&lt;/h2&gt; 
&lt;p&gt;在進行 SQL 優化時，除了優化策略外，監控和分析執行計劃同樣重要。常見的分析工具包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;EXPLAIN 命令&lt;/strong&gt;：在執行 SQL 語句時，使用&lt;code&gt;EXPLAIN&lt;/code&gt;命令可以查看查詢的執行計劃，幫助開發者瞭解查詢是如何執行的，以及可能存在的瓶頸。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;慢查詢日誌&lt;/strong&gt;：通過開啓慢查詢日誌，可以記錄所有執行時間超過閾值的查詢，幫助開發者找到性能瓶頸並進行針對性優化。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;數據庫性能監控工具&lt;/strong&gt;：例如，MySQL 的&lt;code&gt;Percona Toolkit&lt;/code&gt;、Oracle 的&lt;code&gt;AWR 報告&lt;/code&gt;，以及 PostgreSQL 的&lt;code&gt;pg_stat_statements&lt;/code&gt;等工具，能夠幫助開發者實時監控數據庫的性能，並提供優化建議。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;結語&lt;/h2&gt; 
&lt;p&gt;SQL 優化是一項系統化的工作，需要從數據庫設計、查詢語句、索引策略以及硬件資源等多個方面入手。通過掌握常見的 SQL 優化技巧和策略，我們可以在開發過程中有效提升數據庫的性能，確保系統能夠應對高併發、大數據量的挑戰。&lt;/p&gt; 
&lt;p&gt;當然，SQL 優化並非一蹴而就，它需要不斷的實踐和經驗積累。在優化過程中，合理平衡查詢效率與系統資源消耗，始終是我們追求的目標。希望本文的分享能為你的 SQL 優化之路提供一些幫助和啓發。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353509</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353509</guid>
      <pubDate>Sun, 11 May 2025 06:56:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>Anthropic 「封殺」 Windsurf</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;AI 編程工具 Windsurf 開發商&lt;u&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwindsurf.com%2Fblog%2Fanthropic-models" target="_blank"&gt;發佈公告稱&lt;/a&gt;&lt;/u&gt;，Anthropic 在幾乎沒有預先通知的情況下切斷了 Windsurf 的 API 訪問權限。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/143502_jh84_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;根據 Windsurf 的聲明，Anthropic 在提前不到一週的通知時間內，切斷了其幾乎所有 Claude 3.x 模型的直接訪問權限 (first-party capacity)，具體涉及的模型包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Claude 3.5 Sonnet&lt;/li&gt; 
 &lt;li&gt;Claude 3.7 Sonnet&lt;/li&gt; 
 &lt;li&gt;Claude 3.7 Sonnet Thinking&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;由於 Windsurf 從未獲得 Claude 4 的直接訪問權限，等於直接被 Anthropic 徹底封殺了。&lt;/p&gt; 
&lt;p&gt;Windsurf CEO Varun Mohan&amp;nbsp;表示，Windsurf 一直希望支付服務費用以獲得完整訪問權限，對 Anthropic 這一決定和通知時間之短感到失望。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0604/144530_0dYo_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Windsurf 目前雖有部分第三方算力資源，但遠不能滿足需求，短期內可能影響用户訪問 Claude 模型的穩定性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353506</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353506</guid>
      <pubDate>Sun, 11 May 2025 06:42:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>SQLE 4.2505.0 正式版發佈！企業級權限管理下放</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;🎉&lt;/span&gt;&lt;span&gt;&amp;nbsp;SQLE 4.2505.0 正式版發佈 🎉&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h3&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;🤗 歡迎體驗 🤗&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;社區版&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;新版權限管理（&lt;span&gt;企業版功能下放&lt;/span&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;結構對比優化亮點&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;專業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;與&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;社區版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;同步更新&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;支持多網絡區部署 SQLE&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新版 TopSQL 性能分析&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;專業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;（文末下載）&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;（體驗環境）已發佈更新，歡迎體驗！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;🎈 新功能&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;社區版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;新版權限管理&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;這次更新給您帶來什麼好處？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;企業級權限管理下放到社區版&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;團隊管理更高效：想了解用户的項目參與情況，不用一個個查詢，一鍵就能看查看&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;權限管理更安全：每個用户的平台角色清清楚楚，方便做好權限控制&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;角色權限與使用場景&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;系統管理員&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;適用對象&lt;/span&gt;&lt;span&gt;：IT 管理人員、平台維護人員&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要職責&lt;/span&gt;&lt;span&gt;：負責平台整體運維、用户權限配置、系統參數設置等全局管理工作&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;審計管理員&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;適用對象&lt;/span&gt;&lt;span&gt;：合規部門人員、內審人員&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要職責&lt;/span&gt;&lt;span&gt;：系統操作日誌審計、權限變更記錄查看、合規檢查等&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;項目總監&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;適用對象&lt;/span&gt;&lt;span&gt;：項目負責人、部門主管&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要職責&lt;/span&gt;&lt;span&gt;：項目配置管理、團隊成員分配、項目權限管理等&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;普通用户&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;適用對象&lt;/span&gt;&lt;span&gt;：日常業務操作人員&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;主要職責&lt;/span&gt;&lt;span&gt;：執行具體項目任務、查看被授權的項目內容&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;使用方法&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;打開用户管理頁面&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;在列表中，您可以直接看到：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;每個用户的權限角色（比如系統管理員、普通用户等）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;他們參與的所有項目&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;點擊用户信息，可以查看更詳細的權限設置&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;需要調整用户權限時，直接在這裏操作即可&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;img alt="" height="887" src="https://oscimg.oschina.net/oscnet//18205ed22a6a710fb0abd728997bb101.png" width="1604" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;結構對比優化亮點&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;差異高亮：自動標記關鍵差異類型，問題點一目瞭然。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;結果統計：智能彙總差異數量與分佈，快速評估影響範圍，支持按差異類型一鍵篩選，精準定位問題。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="1040" src="https://oscimg.oschina.net/oscnet//d1712c5184d3a4d90bd28d0e07818419.png" width="1497" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;結構對比頁&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:left"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;支持多網絡區部署 SQLE&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;適用場景&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;數據庫分散在不同地區的機房（如北京、上海、廣州），每次管理都要切換多個系統，繁瑣又耗時。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;企業網絡安全策略嚴格，跨區域訪問數據庫受限，運維效率大打折扣，但你又必須遵守合規要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;怎麼辦？試試新推出的跨網絡區域數據庫統一管理功能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;功能價值&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;統一管理，省時省力：無需跳轉多個系統，單界面即可操作所有區域的數據庫，節省運維時間。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;安全與效率兼得：各區域保持網絡隔離，數據訪問權限嚴格受控，完全符合等保要求。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;智能數據同步：關鍵配置和監控數據自動彙總到中心區，備份/審計更輕鬆。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;如何使用？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;管理員分區域：管理員在系統中創建對應網絡區域的「可用區」（如 Zone-北京、Zone-上海）。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;成員登錄即用：成員按權限進入對應可用區，像管理本地數據庫一樣操作。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;img alt="" height="264" src="https://oscimg.oschina.net/oscnet//1f6fb9280ea3a440d25f0749ceb6bb06.webp" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&lt;/h4&gt; 
&lt;h4&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🕹️&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;新版 TopSQL 性能分析&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;當你的數據庫變慢時，是不是總遇到這些問題？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;系統突然卡頓，卻找不到是哪條 SQL 在「偷吃」 CPU 和內存&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;面對密密麻麻的性能數據，像看天書一樣無從下手&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;管理多種數據庫時，要反覆切換不同的監控工具&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;現在有了更聰明的解決方案！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;新版 TopSQL 性能分析就像給數據庫裝上 「CT 掃描儀」&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一眼鎖定問題 SQL&lt;/span&gt;&lt;span&gt;：按照執行次數、總執行時間、CPU 執行時間、邏輯讀、物理讀等指標實行自動抓取 TOP10 語句，直接標出「拖後腿」的語句。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;多數據庫統一看板&lt;/span&gt;&lt;span&gt;：不論用 Oracle 還是 PostgreSQL，一個界面全搞定。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;智能問題下鑽&lt;/span&gt;&lt;span&gt;：從歷史曲線一眼看出性能惡化時間點。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;三步就能用起來&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;進入平台頁面，進入【SQL 管控配置】&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;選擇需要管控的數據源（支持 Oracle / DB2 / 達夢 / PostgreSQL / OceanBase），配置 TopSQL。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;打開 TopSQL 管控頁面，性能瓶頸自動暴露。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這次升級讓數據庫優化變得像看天氣預報一樣簡單——打開頁面，性能問題一目瞭然。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;下次數據庫報警時，試試這個會「自動診斷」的新功能？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="447" src="https://oscimg.oschina.net/oscnet//53543bd620a84bf807663ab6ba3ef891.webp" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;智能掃描詳情頁&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;📜 版本日誌&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;社區版&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;優化&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3045] 增加刷新 Token 功能&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3041] 優化審核 SQL 不會自動換行&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3020] 冗餘索引規則優化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms/issues/458] 配置 DMS 倉庫開源許可證&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms/issues/400] 補充數據源插件 Logo&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;Bug 修復&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[#3007] 修復添加數據源時重置後項目和業務無法再次選擇問題&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3023] 修復配置數據源「工作台查詢是否需要審核」設置等級生效情況與預期不符問題&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/3050] 修復項目概覽數據源柱狀圖的提示信息不顯示並報錯&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle/issues/2602] 修復 Scannerd Token 失效的問題 [actiontech/dms/issues/453] 修復 HTTP Verb Tampering 漏洞&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2353] 規則列表新增數量標記&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2374] 權限整理&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/1639] 智能掃描：支持 TDSQL 監控庫慢日誌&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/541] 多網絡區部署 DMS 方案&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/560] 用户自定義密碼複雜度的規則&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/508] DMS 同步 DMP 數據源區分項目&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;優化&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2318] 優化 SQL 管控定時抓取數據的 SQL 性能，降低客户生產環境後端數據庫 IO&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2352] 慢日誌掃描任務高優先級配置優化&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2357] 數據庫結構對比頁面優化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2356] Oracle Top SQL 功能重構&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;Bug 修復&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2375] 修復 Oracle 插件內存和 CPU 資源異常升高&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2371] 修復工單審核過程會觸發 panic&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2361] 修復 Token 刷新失敗時頁面白屏：異常處理邏輯不完整導致無法正常跳轉登錄頁&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2358] 修復 DB2 配置掃描 TopSQL 採集異常&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/577] 修復編輯數據源在什麼都沒修改的情況下點擊提交出現連通性報錯&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/570] 修復用户權限足夠的情況下創建數據庫帳號失敗&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;[actiontech/dms-ee/issues/220] 修復外部數據源同步效果不符合預期問題&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;🧩 版本選擇&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;社區版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;輕量級 MySQL 開發治理工具，滿足個人和小團隊的基礎 SQL 開發需求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;專業版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多數據源開發治理平台，為中小團隊提供更豐富的數據庫變更管控能力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;企業級數據資產合規平台，滿足大型企業的數據安全與管控要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="989" src="https://oscimg.oschina.net/oscnet//944950ce75be8f8be243316c9aa7c90e.png" width="1560" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;🤗 我們為&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;社區版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;和&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;準備了在線體驗環境，歡迎體驗。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="519" src="https://oscimg.oschina.net/oscnet//44934cacf564efe14493faccc3ec676c.webp" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;社區版：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;http://demo.sqle.actionsky.com/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;http://demo.sqle.actionsky.com:8889/&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;🙋‍♂️&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;用户名：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;admin&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;🔑&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;密 &amp;nbsp; 碼：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;專業版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;調填寫調研問卷（掃碼或點擊&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;原文鏈接&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;）獲取安裝包。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="300" src="https://oscimg.oschina.net/oscnet//014a87e8ea8c7109cfbfed3b6bd321bb.jpg" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;SQLE 4.2505.0&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;專業版&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;🔗&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;企業版獲取：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;可通過海報下方的小程序進行商務諮詢或預約演示。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="8750" src="https://oscimg.oschina.net/oscnet//2129537bc1bf41230f0143f8f4661874.png" width="5250" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353503/sqle-4-2505-ga</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353503/sqle-4-2505-ga</guid>
      <pubDate>Sun, 11 May 2025 06:31:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>QuantumGuard OS 發佈：全球首個融合後量子加密的物聯網邊緣操作系統</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;QuantumGuard OS 發佈：全球首個融合後量子加密的物聯網邊緣操作系統，通過 FIPS 140-3 認證&amp;nbsp;&lt;em&gt;在物聯網安全威脅日益嚴峻的背景下，QuantumGuard OS 的發佈標誌着邊緣計算安全進入新紀元。這款全球首個融合後量子加密技術的物聯網操作系統，不僅通過嚴苛的 FIPS 140-3 認證，更重新定義了設備級數據保護標準。本文將深度解析其架構特性、加密原理及行業應用價值。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;QuantumGuard OS 發佈：全球首個融合後量子加密的物聯網邊緣操作系統，通過 FIPS 140-3 認證&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;後量子加密技術的革命性突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;QuantumGuard OS 的核心突破在於其集成的格基加密（Lattice-based Cryptography）算法，這種被 NIST 選為後量子加密標準的技術，能夠有效抵抗量子計算機的暴力破解。傳統 RSA 加密在量子計算面前僅需數分鐘即可被攻破，而格基加密的數學複雜性使其破解時間預估超過 1000 年。在邊緣計算場景中，系統採用混合加密模式，既兼容現有 AES-256 標準，又無縫銜接抗量子算法，這種雙重保障機制為智能電錶、工業傳感器等設備提供了前所未有的安全基線。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;FIPS 140-3 認證的深層意義&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;獲得美國聯邦信息處理標準（FIPS）最高級別認證，意味着 QuantumGuard OS 的加密模塊經受了包括物理防篡改、側信道攻擊防禦等 11 類嚴苛測試。特別值得注意的是其"零信任密鑰派生"機制，每個設備在啓動時都會動態生成專屬加密種子，即使同一批次的設備也不會存在密鑰重複問題。對於醫療物聯網中的胰島素泵、工業控制系統的 PLC 等關鍵設備，這種認證級別的安全保障能有效阻斷供應鏈攻擊。認證過程中，系統在-40℃至 85℃的極端温度範圍內仍保持加密穩定性，這為户外物聯網設備部署掃清了障礙。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;邊緣計算架構的獨特設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;區別於傳統物聯網操作系統，QuantumGuard OS 採用微內核架構將安全域（Security Domain）與功能域嚴格隔離。其內存保護單元（MPU）可實現亞毫秒級的上下文切換，使得加密運算對設備性能的影響降至 5% 以下。在智慧城市的路況監測場景中，系統表現出驚人的能效比——處理 1080P 視頻流時的功耗僅為同類系統的 1/3。獨特的"安全飛地"設計允許敏感數據在加密狀態下直接進行邊緣計算，這種隱私增強技術（PET）完美解決了人臉識別等場景的數據合規難題。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;抗量子攻擊的實際防禦能力&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;通過模擬量子攻擊環境的壓力測試，QuantumGuard OS 展現出令人信服的防禦能力。其採用的 CRYSTALS-Kyber 密鑰封裝機制，在模擬 1000 量子比特（Qubit）攻擊時仍保持加密有效性。對於智能電網中的電錶數據採集，系統實現了端到端的量子安全隧道，每個數據包都經過獨立加密且具備前向安全性。更值得關注的是其"加密敏捷性"設計，當監測到異常解密請求時，系統可在 50ms 內自動切換至備用的 SIKE 加密算法，這種動態防禦機制遠超傳統物聯網系統的響應速度。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;跨行業應用場景解析&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在工業 4.0 領域，QuantumGuard OS 已成功部署於西門子新一代 PLC 控制器，其安全啓動（Secure Boot）功能可檢測 0.1% 的固件篡改。車聯網方面，系統支持 V2X 通信的毫秒級密鑰輪換，滿足自動駕駛對實時安全的需求。農業物聯網中，結合國密 SM9 算法特別優化了傳感器節點的能耗表現，使得土壤監測設備的電池壽命延長至 5 年。醫療行業應用更具突破性，系統通過"分片加密"技術實現了 ECG 數據在邊緣端的匿名化處理，既滿足 HIPAA 合規要求，又保留了數據分析價值。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;QuantumGuard OS 的誕生不僅解決了物聯網設備面臨的量子計算威脅，其通過 FIPS 140-3 認證更樹立了行業安全新標杆。從加密算法革新到邊緣架構優化，這套系統為智能城市、工業互聯網等關鍵領域提供了面向未來的安全基座。隨着量子計算時代的臨近，這種融合經典加密與後量子防禦的混合方案，或將成為物聯網操作系統的標準配置。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353495</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353495</guid>
      <pubDate>Sun, 11 May 2025 06:10:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>NeuralFabric 1.0 開源：基於 Rust 的分佈式 AI 訓練框架，實現邊緣集羣千卡級線性加速</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;NeuralFabric 1.0 開源：基於 Rust 的分佈式 AI 訓練框架，實現邊緣集羣千卡級線性加速 &lt;em&gt;在人工智能技術飛速發展的今天，分佈式訓練框架正成為突破算力瓶頸的關鍵。NeuralFabric 1.0 作為首個基於 Rust 語言開發的邊緣計算專用框架，通過創新的拓撲感知調度算法，在千卡級集羣中實現了近乎線性的加速比。本文將深入解析其架構設計、性能優勢以及在邊緣計算場景中的獨特價值。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;NeuralFabric 1.0 開源：基於 Rust 的分佈式 AI 訓練框架，實現邊緣集羣千卡級線性加速&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;革命性的框架架構設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NeuralFabric 1.0 採用分層式微服務架構，將傳統參數服務器模式與 AllReduce 算法進行深度融合。其核心組件包括分佈式張量存儲引擎、動態拓撲管理器以及基於 WASM（WebAssembly）的算子加速模塊。這種設計使得框架在邊緣計算環境下，能夠智能感知設備間的網絡拓撲結構，自動優化通信路徑。測試數據顯示，在 1000 張 NVIDIA T4 顯卡組成的異構集羣中，ResNet-152 模型的訓練速度較傳統框架提升 3.2 倍。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rust 語言帶來的性能突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;為什麼選擇 Rust 作為開發語言？這源於其對內存安全的嚴格保證與零成本抽象特性。NeuralFabric 1.0 利用 Rust 的所有權系統，實現了無鎖併發的梯度聚合機制，避免了傳統 C++框架中常見的內存競爭問題。特別值得注意的是，框架中的通信層採用 tokio 異步運行時，配合自定義的 RDMA（遠程直接內存訪問）協議棧，將千卡集羣的通信延遲控制在 200 微秒以內。這種語言級優化使得框架在邊緣設備的資源受限環境中，仍能保持穩定的吞吐量。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;邊緣計算場景的專項優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;針對邊緣計算節點分佈廣、網絡異構的特點，NeuralFabric 1.0 引入了多項創新技術。其動態分片算法能夠根據設備算力差異，自動調整模型分區大小；而跨地域的梯度壓縮傳輸技術，則通過混合精度量化和稀疏矩陣編碼，將跨數據中心的通信流量減少 78%。在實際部署案例中，某自動駕駛公司在全球 200 個邊緣節點上部署該框架後，模型迭代週期從 2 周縮短至 36 小時。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;線性加速背後的核心技術&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;實現千卡級線性加速的關鍵在於 NeuralFabric 1.0 的三重創新：是拓撲感知的環形通信算法，通過構建最優化的 AllReduce 路徑，將通信開銷與設備數量解耦；是流水線式的梯度聚合機制，使計算與通信完全重疊；是自適應批處理技術，根據實時網絡狀況動態調整微批次大小。在 ImageNet 數據集上的測試表明，當 GPU 數量從 256 張擴展到 1024 張時，訓練速度提升比例達到理論值的 96%。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;開源生態的戰略佈局&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NeuralFabric 1.0 採用 Apache 2.0 開源協議，其代碼庫包含完整的 CI/CD（持續集成/持續交付）工具鏈和 Kubernetes 算子。社區版特別提供了與 PyTorch 生態的無縫對接接口，開發者可以通過簡單的裝飾器語法，將現有模型遷移到分佈式環境。框架還內置了可視化調試工具，能夠實時展示梯度流動路徑和計算熱點，這對優化分佈式訓練策略具有重要價值。目前已有超過 40 家機構參與貢獻，形成了活躍的技術生態。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;行業應用與未來展望&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在醫療影像分析領域，某三甲醫院利用 NeuralFabric 1.0 構建的聯邦學習系統，實現了跨院區的隱私保護訓練；工業質檢場景中，框架的實時模型更新能力幫助客户將缺陷識別準確率提升 12%。未來版本計劃引入量子梯度優化算法，並支持更多異構計算設備。隨着 5G 邊緣計算的普及，這種專為分佈式環境設計的訓練框架，有望成為下一代 AI 基礎設施的核心組件。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NeuralFabric 1.0 通過系統級的創新設計，成功解決了大規模分佈式訓練中的通信瓶頸問題。其開源策略和技術先進性，正在重塑邊緣計算時代的 AI 開發範式。對於需要處理海量數據的行業用户而言，這個基於 Rust 的高性能框架，無疑是加速 AI 落地的關鍵利器。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353493</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353493</guid>
      <pubDate>Sun, 11 May 2025 06:09:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>FusionCore 1.0 發佈：全球首個支持 Rust 語言的安全邊緣計算平台，通過 SESIP 認證</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;em&gt;隨着邊緣計算技術的快速發展，安全性和開發效率成為行業核心痛點。FusionCore 1.0 的正式發佈標誌着邊緣計算領域的重要突破——這是全球首個原生支持 Rust 編程語言並通過 SESIP(物聯網安全評估標準) 認證的安全邊緣計算平台。本文將深入解析該平台的技術架構、安全特性及其對物聯網生態的變革性影響。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;FusionCore 1.0 發佈：全球首個支持 Rust 語言的安全邊緣計算平台，通過 SESIP 認證&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;技術架構的革命性突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FusionCore 1.0 採用微內核架構設計，其核心創新在於完全基於 Rust 語言構建。這種內存安全的系統編程語言從根本上杜絕了緩衝區溢出等常見漏洞，使得平台在邊緣計算場景下的可靠性提升顯著。平台支持容器化部署，每個計算單元都運行在獨立的沙箱環境中，這種隔離機制與 Rust 的所有權系統形成雙重保護。特別值得注意的是，其事件驅動架構能夠實現微秒級響應，這對工業自動化等實時性要求高的場景意味着什麼？正是這種技術組合使 FusionCore 1.0 在性能與安全之間取得了完美平衡。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SESIP 認證的安全保障體系&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;作為首個通過 SESIP Level 2 認證的邊緣計算平台，FusionCore 1.0 建立了完整的安全防護鏈。從硬件信任根開始，平台實現了安全啓動、運行時防護、數據加密的全流程保護。其獨特的可信執行環境 (TEE) 設計，使得敏感數據即使在邊緣節點被物理獲取的情況下也能保持安全。認證過程中特別驗證了平台抵抗側信道攻擊的能力，這在金融邊緣計算等場景為何如此關鍵？平台還集成了符合 GDPR 標準的數據脱敏模塊，確保隱私計算需求得到滿足。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Rust 語言帶來的開發範式變革&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FusionCore 1.0 對 Rust 語言的原生支持徹底改變了邊緣應用開發模式。開發者可以直接使用 Rust 的 async/await 語法編寫高性能併發代碼，無需擔心傳統 C/C++開發中的內存安全問題。平台提供的 SDK 包含豐富的硬件抽象層 (HAL)，使得針對不同邊緣設備的移植工作變得異常簡單。更令人振奮的是，其跨平台編譯工具鏈支持將同一套代碼編譯為 x&lt;br&gt; 86、ARM 甚至 RISC-V 架構的可執行文件，這種"一次編寫，到處運行"的特性如何降低開發者的學習成本？統計顯示，採用 Rust 開發的邊緣應用代碼缺陷率比傳統語言降低達 73%。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;邊緣計算場景的性能優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;針對邊緣計算的特殊需求，FusionCore 1.0 實現了多項創新性優化。其輕量級調度器可在資源受限的設備上高效管理計算任務，內存佔用控制在驚人的 128KB 以內。平台獨有的預測性資源分配算法，能夠根據歷史數據預加載可能需要的計算資源，這使得流媒體分析等應用的延遲降低了 40%。在能耗管理方面，平台支持動態電壓頻率調整 (DVFS)，這對電池供電的物聯網終端意味着什麼？正是這些優化使 FusionCore 1.0 在樹莓派級別的設備上也能流暢運行復雜的 AI 推理任務。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;行業應用與生態建設&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;FusionCore 1.0 已經成功部署在智能製造、智慧城市等多個領域。在汽車電子領域，平台的安全特性使其成為車載 ECU(電子控制單元) 的理想選擇；在醫療物聯網中，其通過 HIPAA 合規性驗證的特性備受青睞。平台開發者社區正在快速增長，目前已貢獻了超過 200 個開源驅動和組件。更值得關注的是，其與主流雲平台的無縫集成能力，如何幫助企業構建真正的邊雲協同架構？行業分析顯示，採用 FusionCore 1.0 的企業平均縮短了 60% 的邊緣應用上線週期。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;未來發展與技術路線圖&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;根據官方披露的技術路線圖，FusionCore 將在 2.0 版本引入量子安全加密算法，以應對未來計算安全挑戰。平台還計劃增加對 WebAssembly 的支持，進一步擴展其多語言運行時能力。在硬件加速方面，下一代版本將深度優化對 NPU(神經網絡處理器) 的支持，這對邊緣 AI 應用意味着怎樣的性能飛躍？值得期待的是，平台團隊正在與多個標準組織合作，推動建立基於 Rust 的邊緣計算開放標準，這或將重塑整個物聯網安全開發生態。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;FusionCore 1.0 的發佈標誌着邊緣計算進入安全可信的新紀元。作為全球首個支持 Rust 語言並通過 SESIP 認證的平台，它不僅解決了傳統邊緣計算的安全痛點，更通過創新的技術架構為開發者提供了高效可靠的解決方案。隨着生態系統的不斷完善，該平台有望成為智能邊緣時代的核心基礎設施，推動物聯網應用向更安全、更高效的方向發展。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353488</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353488</guid>
      <pubDate>Sun, 11 May 2025 06:00:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>得物自研 DScript 2.0 腳本能力從 0 到 1 演進</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;h1&gt;一、前言&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在高併發推薦引擎場景中，C++的極致性能往往以開發效率為妥協，尤其在業務頻繁迭代時，C++的開發效率流程成為顯著瓶頸。傳統嵌入式腳本（如 Lua）雖支持動態加載，但其與 C++的交互成本（如虛擬棧數據中轉、類型轉換）仍會帶來額外性能損耗。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;為此，我們探索設計 DScript2.0——一種與 C++內存佈局及調用約定深度兼容的動態腳本語言，通過自研編譯器實現即時編譯與無縫嵌入，嘗試在保留腳本靈活性的同時，儘可能貼近 C++的原生性能，為性能與效率的平衡提供了輕量化解決方案。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;二、動態腳本在引擎中的引用&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;C++引擎的迭代效率瓶頸&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在搜推引擎中的實踐中，出於對高併發場景下極致性能的追求，使用 C++進行引擎自研成為了一種業界常態。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;眾所周知，C++通過開放底層控制權限（如內存分配，指令優化等），提升了可達的性能上限，但這種提升伴隨了大量底層細節的處理，消耗了更多的開發時間，追求性能優先的同時，卻又限制了開發效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我們希望能夠在保持性能的同時，提升引擎的開發效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;利用嵌入式腳本提升迭代效率&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;我們的目標是尋求一種平衡性能與迭代效率的方案，一種主流方案是在 C++中嵌入腳本語言。例如，在遊戲引擎和 Nginx 開發中集成 Lua，在 C/C++代碼中實現性能需求，結合腳本代碼中實現控制邏輯，從而提升開發效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;嵌入式腳本對迭代效率的提升&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持動態加載，無需編譯部署。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;無需 C/C++經驗，腳本學習成本低，提升參與迭代的人力總量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;引擎的迭代拆解&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;引擎內部的技術性迭代&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;業務側的需求支持&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;業務側的需求非常適合引入嵌入式腳本，實現對易變需求的自迭代，提升開發效率，這也是一種業界主流方案。例如，一些搜索中台中，對於相關性和粗排邏輯封裝為插件，業務側的算法工程師使用 Lua 開發計算邏輯，可以極大地提升迭代效率。&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;嵌入式腳本的額外性能開銷&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在引擎中嵌入腳本，雖然可以提升迭代效率，但並非全無代價，高階語言與低階語言的交互存在着額外的性能開銷。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;例如，Lua 和 C++的交互機制基於 Lua 提供的虛擬棧來實現，這個棧是兩者進行數據交換的核心通道。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;使用虛擬棧實現語言交互存在額外的開銷，包括但不限於壓棧和彈棧操作、棧空間管理、類型檢查和轉換、複雜數據結構的處理等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//3e6d8349d3c8b462cc5a9df4bd5e9d57.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;更加極致的方案&amp;nbsp;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;基於以上的瓶頸，我們期望一種更加極致的方案，實現性能與效率的平衡。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;嵌入式腳本的額外性能開銷&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;（主要源於兩種語言在 ABI 層面的不一致）&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;函數調用約定不一致，需要一個虛擬棧進行中轉。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;數據類型內存佈局不一致，需要額外的檢查和轉換。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;一個直觀的解決方案就是我們設計一種編程語言，在底層實現上與 C++具有一致內存佈局與調用約定，從而消除額外的轉換開銷。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;同時，這種編程語言可以在 C++嵌入，也支持即時編譯，提升效率的同時，也擁有與原生 C++近似的執行性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;以上是我們規劃 DScript2.0 項目初衷。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;三、DScript2.0 的編譯器實現&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;語法設計&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 被設計為一種輕量級面向過程的編程語言，同時它也是靜態類型的編譯語言。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在語法支持上，包含了基礎數據類型、變量、運算符、控制流和函數，額外支持了與 C++的語言互操作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;數據類型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;int，long，bool，float，double，void&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;變量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;自定義變量，隱式類型轉換。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;C++變量：支持訪問和操作外部註冊的 C++變量，支持 C++的結構體部分操作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;運算符&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;算術運算符：+，-，*，/，%&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;關係運算符：==，!=，&amp;gt;=，&amp;gt;，&amp;lt;=，&amp;lt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;邏輯運算符：!，&amp;amp;&amp;amp;，||&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;賦值運算符：=，+=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;自增自減運算符：++i，--i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;控制流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;分支語句：if (...) else if (...) else&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;循環語句: for 循環&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;函數&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;自定義函數：基礎類型值傳遞，對象類型引用傳遞。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;C++API：支持調用外部註冊的 C++函數。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;淺析編譯器架構&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//0002b3da20c2712954db692af8d1c91b.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（編譯器的三段結構）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;一個完整的編譯器通常由三個主要部分組成：前端、優化器和後端。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;前端：&lt;/strong&gt;負責詞法分析、語法分析、語義分析、生成中間代碼。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;優化器（中端）：&lt;/strong&gt;負責對中間代碼進行優化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;後端：&lt;/strong&gt;負責將中間代碼轉換成目標機器的的機器碼。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;基於 LLVM 實現 DScript2.0 編譯器&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//afd841f8ba9fca992d5f2b6f32ec9dcc.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;LLVM 是一個模塊化且高度可重用的編譯器基礎設施項目。它提供了前端、優化器和後端工具鏈，已支持多種編程語言和平台。LLVM 具有跨平台性，允許開發者靈活定製編譯流程，提供高級優化能力，支持即時編譯，被廣泛用於編譯器開發、虛擬機和代碼分析工具場景。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;採用 LLVM 實現 DScript2.0 的優勢&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;提升開發效率：&lt;/strong&gt;LLVM 的前端、中端和後端採用了模塊化設計，每個部分都可以獨立替換或擴展，這種靈活性使得 LLVM 非常適合定製編譯器，&lt;strong&gt;我們可以複用 LLVM 的中端與後端，專注於前端開發，減少開發成本。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持高級優化：&lt;/strong&gt;LLVM 提供了一套強大的優化工具，能夠對代碼進行靜態和動態優化。這些優化不僅能夠提高代碼的執行效率，還可以減少代碼體積。&lt;strong&gt;這是 DScript2.0 理論上可能提供接近原生 C++性能的關鍵因素之一。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;支持即時編譯：&lt;/strong&gt;LLVM 支持即時編譯（JIT），通過 JIT 編譯，LLVM 能夠在運行時生成和執行代碼，大大提升了執行效率。通過運行時進行編譯後運行，&lt;strong&gt;這是 DScript2.0 理論上可能提供接近原生 C++性能的關鍵因素之二&lt;/strong&gt;。支持在線的即時編譯能力，&lt;strong&gt;同時也是算子開發與分發效率的保障。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;DScript2.0 編譯器架構&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//972c134f7ea81077c7a1ed3e97e7c6c6.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;DScript2.0 編譯器同樣包含前端、中端、後端三部分，前端能力自研，優化器和後端基於 LLVM 的 Pass 和 JIT 實現。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;編譯器最終輸出為 x86_64 平台的可執行二進制，以 JIT 實例的方式常駐內存，通過入口函數地址執行。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;編譯器支持注入 C++類型與函數參與編譯，實現 DScript2.0 對 C++的調用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;編譯器前端實現&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;前端的實現流程&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;編譯器前端的任務是&lt;strong&gt;將源碼轉換為優化器可處理的中間代碼&lt;/strong&gt;，這個轉換的流程通常包含 4 個步驟：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;詞法分析&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;語法分析&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;語義分析&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;中間代碼生成&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//34e7a033f0a4360ff25f44ea62bd08ad.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（編譯器前端架構）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;詞法分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;原理：&lt;/strong&gt;源代碼是一堆連續的字符，計算機要先識別出這些字符組成的基本單元，才能進一步理解代碼含義。就像讀句子先得認出單詞一樣，這是理解程序的第一步。詞法分析的本質是&lt;strong&gt;將代碼的字符流，轉換為更易處理的 token 流。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;輸入與輸出：字符流-&amp;gt;記號流（Tokens）。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;詞法分析器&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 中了使用 Flex，可以根據自定義的正則表達式規則，自動生成詞法分析的掃描器，減少手工編寫詞法分析器的工作量。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;&amp;nbsp;Flex 工作流程&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4f5ea2329f5f69d9eee567e4741fa745.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;&amp;nbsp;Flex 語法&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在 Flex 的定義文件中包含三部分：&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;定義段：&lt;/strong&gt;包含頭文件和全局變量，如輸入和輸出流的定義。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;規則段：&lt;/strong&gt;由模式和對應的動作組成。當掃描器匹配到模式時，執行對應的動作。例如，匹配到"int"字符串時，將其識別為 INT 標識。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;用户代碼段：&lt;/strong&gt;通常可以在此區域定義&lt;strong&gt;&amp;nbsp;main()&amp;nbsp;&lt;/strong&gt;函數，它調用&lt;strong&gt;&amp;nbsp;yylex()&amp;nbsp;&lt;/strong&gt;，啓動詞法分析過程。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;示例：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/* 定義段段開始 */
/* 引入的 c/c++代碼 */
%{
#include &amp;lt;string&amp;gt;
%}


/* 正則表達式的宏定義 */
LineTerminator &amp;nbsp; &amp;nbsp; &amp;nbsp; \n|\r|\r\n
WhiteSpace &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [ \t\f]|{LineTerminator}
Identifier &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; [a-zA-Z_][a-zA-Z0-9_]*
/* 定義段結束 */


%%




/* 規則段開始 */
/* 規則：正則表達式 { return 傳遞給語法分析器的記號類型 } */
"int"&amp;nbsp;{&amp;nbsp;return&amp;nbsp;INT; }
"float"&amp;nbsp;{&amp;nbsp;return&amp;nbsp;FLOAT; }
"void"&amp;nbsp;{&amp;nbsp;return&amp;nbsp;VOID; }


{Identifier} {
&amp;nbsp; &amp;nbsp; yylval.identifier = new std::string(yytext);
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;IDENTIFIER;
}
{LineTerminator} {}
{WhiteSpace} {}


&amp;lt;&amp;lt;EOF&amp;gt;&amp;gt; {
&amp;nbsp; &amp;nbsp;&amp;nbsp;return&amp;nbsp;END;
}
/* 規則段結束 */




%%




/* 用户代碼段開始 */
/* 用户代碼段結束 */&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;匹配規則&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;最長匹配：當多個規則可匹配時，Flex 選擇&lt;strong&gt;最長匹配&lt;/strong&gt;的詞素。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;最先定義：若多個規則長度相同，則選擇&lt;strong&gt;最先定義&lt;/strong&gt;的規則。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;語法分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;原理：&lt;/strong&gt;語法分析的原理是根據上下文無關文法（CFG）對輸入的 tokens 序列進行分析，驗證其是否符合某種語言的語法規則，並構建對應的抽象語法樹。其核心在於建立程序的分層邏輯結構，並確保這種結構符合語法約束。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;輸入與輸出：記號流-&amp;gt;抽象語法樹（AST）。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;由語法分析原理拆分&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;結構驗證：&lt;/strong&gt;檢查記號流的排列是否符合語法規則，DScript2.0 的語法規則由上下文無關文法（CFG）描述，驗證算法採用了自底向上的 LR 算法。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;// 示例：分支語法規則：if (conditon) { stmts }
// 符合語法規則
if&amp;nbsp;(a &amp;lt;&amp;nbsp;1) {


// 不符合語法規則
if&amp;nbsp;a &amp;lt;&amp;nbsp;1&amp;nbsp;{&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;層次構建：&lt;/strong&gt;將線性的記號流轉換為樹狀或嵌套的語法結構，以抽象語法樹為例：&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;int&amp;nbsp;func(int&amp;nbsp;a)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;int&amp;nbsp;b = a +&amp;nbsp;1;
&amp;nbsp;&amp;nbsp;return&amp;nbsp;b;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FunctionDefinition
&amp;nbsp; ├── ReturnType:&amp;nbsp;int
&amp;nbsp; ├── FunctionName: func
&amp;nbsp; ├── Parameters
&amp;nbsp; │ &amp;nbsp; └── Parameter
&amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; ├──&amp;nbsp;Type:&amp;nbsp;int
&amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; └── Name: a
&amp;nbsp; └── Body
&amp;nbsp; &amp;nbsp; &amp;nbsp; ├── VariableDeclaration
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; ├──&amp;nbsp;Type:&amp;nbsp;int
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; ├── Name: b
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; └── InitialValue
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; └── +
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ├── Variable: a
&amp;nbsp; &amp;nbsp; &amp;nbsp; │ &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── Constant:&amp;nbsp;1
&amp;nbsp; &amp;nbsp; &amp;nbsp; └── ReturnStatement
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; └── Variable: b
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;上下文無關文法（CFG)&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;上下文無關文法（CFG） 是編譯器語法分析的核心工具，用於形式化描述編程語言的語法結構。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;其核心要素包括：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;終結符&lt;/strong&gt;（如標識符、運算符），對應詞法分析的 Token，不可再分解。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;非終結符&lt;/strong&gt;（如表達式、語句），需通過產生式規則展開為終結符或其他非終結符。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;產生式規則（如 E → E + T）&lt;/strong&gt;&amp;nbsp;，定義語法結構的生成方式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;起始符號&lt;/strong&gt;（如&lt;strong&gt;&amp;nbsp;Program&amp;nbsp;&lt;/strong&gt;），代表語法分析的入口。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;產生式規則定義示例：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/* 局部變量聲明 -&amp;gt; 類型，變量聲明 */
/* 例如&amp;nbsp;int&amp;nbsp;a =&amp;nbsp;1&amp;nbsp;*/
/* Type 對應 int&amp;nbsp;*/
/* Variable_Declartor 對應 a =&amp;nbsp;1&amp;nbsp;*/
Local_Variable_Declartor -&amp;gt;
&amp;nbsp; &amp;nbsp; Type Variable_Declartor;


/* 變量聲明 -&amp;gt; 變量 ID 或，變量 ID = 變量初始化 */
Variable_Declartor -&amp;gt;&amp;nbsp;
&amp;nbsp; &amp;nbsp; Variable_ID
&amp;nbsp; &amp;nbsp; | Variable_ID EQ Variable_Initializer;


/* 變量 ID -&amp;gt; 標識符 */ &amp;nbsp; &amp;nbsp;
Variable_ID -&amp;gt; IDENTIFIER;


/* 變量初始化 -&amp;gt; 任意表達式 */
Variable_initializer -&amp;gt; expression;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;示例中根據形式化的語法，描述了變量定義和變量初始化規則。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;示例中包含 4 條產生式規則：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;局部變量聲明規則&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;變量聲明表達式規則&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;變量 ID 規則&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;變量初始化規則&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;終止符：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Type 對應一個 C++的 TypeNode&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;IDENTIFIER 對應詞法定義的 Token&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;語法分析器&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;語法分析器採用 Bison 來實現，Bison 可以與 Flex 進行協作，將詞法分析器生成的記號序列解析為語法樹，供編譯器進一步處理。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;通過與 Flex 協同工作，Bison 可以自動化地處理複雜的語法分析任務，使編譯器的開發更加高效和靈活。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;語義分析&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;原理：&lt;/strong&gt;通過遍歷抽象語法樹，實現上下文相關的文法檢查，對程序的類型、作用域和標識符等進行詳細檢查，&lt;strong&gt;確保程序在邏輯上符合編程語言的規則，同時生成中間表示代碼&lt;/strong&gt;，作為優化器或後端的輸入。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;輸入與輸出：&lt;/strong&gt;抽象語法樹-&amp;gt;中間代碼。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;語法分析與語義分析的區別：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;輸出目標不同：語法分析的主要任務是將記號流轉換為結構化信息，語義分析是將結構化信息翻譯為優化器可以處理的中間表示語言。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;語法正確的語句，語義未必正確：&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;例如，有函數原型&lt;strong&gt;&amp;nbsp;void echo(int a)&amp;nbsp;&lt;/strong&gt;，在調用時&lt;strong&gt;&amp;nbsp;int b = echo("a")&amp;nbsp;&lt;/strong&gt;，這是符合語法的，但不符合語義。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;再比如，語言要求使用變量前先定義，在未定義變量&lt;strong&gt;&amp;nbsp;a&amp;nbsp;&lt;/strong&gt;的前提下，執行賦值&lt;strong&gt;&amp;nbsp;a = 1;&amp;nbsp;&lt;/strong&gt;，這樣也是符合語法但不符合語義的。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;語義分析的主要任務&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;符號表管理&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;作用域解析&lt;/strong&gt;：追蹤變量/函數的作用域（如塊級作用域、全局作用域）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;符號綁定：&lt;/strong&gt;將標識符與其聲明關聯（如變量類型、函數簽名）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;重複定義檢查：&lt;/strong&gt;禁止同一作用域內同名符號的重複聲明。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;類型系統校驗&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;類型推斷與檢查：&lt;/strong&gt;驗證表達式和操作的合法性，如&lt;strong&gt;&amp;nbsp;int a = "str";&amp;nbsp;&lt;/strong&gt;類型不匹配。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;隱式類型轉換：&lt;/strong&gt;處理類型提升，如&lt;strong&gt;&amp;nbsp;int + float&amp;nbsp;&lt;/strong&gt;自動轉為浮點運算。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;函數簽名匹配：&lt;/strong&gt;檢查實參與形參的個數、類型一致性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;控制流合法性&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;語句上下文檢查：&lt;/strong&gt;確保&lt;strong&gt;&amp;nbsp;break&amp;nbsp;&lt;/strong&gt;僅在循環內、&lt;strong&gt;&amp;nbsp;return&amp;nbsp;&lt;/strong&gt;與函數返回類型一致。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;可達性分析：&lt;/strong&gt;檢測不可達代碼（如&lt;strong&gt;&amp;nbsp;return&amp;nbsp;&lt;/strong&gt;後的語句）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;常量表達式求值&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;優化常量計算（如&lt;strong&gt;&amp;nbsp;const x = 2 + 3*4; &amp;nbsp;&lt;/strong&gt;直接計算為&lt;strong&gt;&amp;nbsp;14&amp;nbsp;&lt;/strong&gt;）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;用於數組長度、條件編譯等需編譯期確定值的場景。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;中間代碼生成&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;中間代碼的生成流程是通過遞歸遍歷 AST 完成的，將語義檢查無誤的邏輯，轉換為中間表示語言，這是編譯器前端工作的最後一步。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 中使用了&lt;strong&gt;LLVM IR&lt;/strong&gt;作為中間代碼語言，它介於高級語言和目標代碼之間，既能表達高級語言的抽象概念，又能適應底層機器代碼的生成需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;LLVM IR 提供了豐富的指令集，涵蓋了從基本運算到複雜控制流、內存操作、同步操作等各種編程需求。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;LLVM IR 指令集示例&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//fffc0e15f1be962695432d3b2b69989a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;轉換示例：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;int&amp;nbsp;func(int&amp;nbsp;a)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;int&amp;nbsp;b = a +&amp;nbsp;1;
&amp;nbsp;&amp;nbsp;return&amp;nbsp;b;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（源代碼）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;; 函數定義: 函數名為 func，返回類型為 i32（32 位整數），參數為 i32 類型的 a
define i32 @func(i32 %a) {
entry:
&amp;nbsp; ; 定義局部變量 b，並將其初始化為 a +&amp;nbsp;1&amp;nbsp;的結果
&amp;nbsp; %b = add i32 %a,&amp;nbsp;1


&amp;nbsp; ; 返回 b 的值
&amp;nbsp; ret i32 %b
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#a0a0a0"&gt;（與之對應的 LLVM 的中間代碼）&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;編譯器中端：中間代碼優化&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4427d784ffc7bf64021b597373528883.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;在 DScript2.0 中，優化器是通過&lt;strong&gt;複用 LLVM 的中端優化能力&lt;/strong&gt;來實現的，通過一系列 LLVM 預置的優化遍 (Pass)，對程序生成的中間代碼進行優化，以&lt;strong&gt;提高代碼的性能。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;中端的輸出為優化過後的 IR 指令，這些 IR 指令需要提供給後端進行編譯。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在 LLVM 中，優化遍是指按照一定順序執行的一個或多個優化算法。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;以下是一些常用的優化算法：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//aa73fe5a522d09fac64f469c9f1c016a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;編譯器後端：即時編譯&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//7ffd47a0be70b88382e468d14fe98757.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 使用 LLVM 的 ORC JIT 作為即時編譯器的實現，支持在程序運行時編譯腳本，並通過查找函數地址的方式執行腳本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;採用即時編譯器的優勢：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;避免了開發調試過程中，頻繁的啓停程序，&lt;strong&gt;提升迭代效率。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;且經過編譯的代碼，在執行時能夠顯著&lt;strong&gt;提升運行性能。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;語言互操作性&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;語言互操作性是指不同編程語言能夠相互調用、協同工作的能力。通過這種能力，開發者可以在同一項目中結合多種語言的優勢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;例如，&lt;strong&gt;C++ 與 Lua 的結合&lt;/strong&gt;是就互操作的經典場景，常見於遊戲開發、搜推引擎、嵌入式系統等領域。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;在我們的需求中，要支持動態腳本訪問引擎的表列資源，就需要 DScript2.0 也能具備與 C++交互操作的能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 與 C++的語言互操作性體現在&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;DScript2.0 可以調用 C++的函數，並向 C++傳遞數據。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;C++可以調用 DScript2.0 的函數，並向 DScript 腳本傳遞數據。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;DScript2.0 可以訪問和操作 C++傳遞的基礎類型和結構體類型變量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;調試能力&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;u&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 基於 GDB 實現了基本的調試能力：&lt;/span&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持通過 Attach 進程進行實時調試&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持在 coredump 中保留棧信息&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;調試能力的實現主要基於 GDB 的通用調試接口，在編譯 DScript2.0 源碼時，生成調試信息，插入到 LLVM IR 的元數據中，然後通過 JIT 的監聽器掛載 GDB 調試接口，並注入調試信息，最終實現調試能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//712d0be95e399fdf471e33364f57da3d.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#000000"&gt;異常處理&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 中也實現了異常處理能力，主要包括了硬件異常的主動防禦和跨 C++與 DScript2.0 邊界的異常傳播。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;硬件異常防禦&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;程序異常可以劃分為硬件異常和主動異常：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;硬件異常&lt;/strong&gt;是底層不可控錯誤，硬件異常的處理需依賴信號鈎子或語言運行時封裝。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;典型例子：&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;段錯誤（SIGSEGV）：&lt;/strong&gt;非法內存訪問&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;浮點運算錯誤（SIGFPE）：&lt;/strong&gt;如整數除零或浮點運算異常&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;非法指令（SIGILL）：&lt;/strong&gt;執行未定義的機器指令&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;總線錯誤 （SIGBUS）：&lt;/strong&gt;如未對齊的內存訪問&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;主動異常&lt;/strong&gt;是代碼邏輯的一部分，用於可控的錯誤處理與資源管理，主動異常由開發者顯式拋出，也可由語言運行時隱式轉換。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;u&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;※ &amp;nbsp;硬件異常的主動防禦&lt;/strong&gt;&lt;/span&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 在語言層面上，對代碼引發的硬件異常進行了主動防禦。實現上，是在語義分析階段，對中間代碼添加防禦邏輯，防禦策略則採用了可被捕獲的主動異常拋出。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;例如下圖所示，在編譯階段，編譯器對於結構體指針進行了空引用檢查邏輯，將硬件異常轉換為了主動異常，而主動異常可以通過捕獲來進行處理，避免了進程崩潰。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//6c7e8cac4f4f5824c798faa662322910.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;跨語言邊界傳播&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;因為 DScript2.0 的語言互操作性特性，會涉及到 C++與 DScript2.0 的函數互相調用（如下圖所示），就會涉及到異常處理時，異常在 C++和 DScript2.0 之間傳播，即所謂跨語言邊界。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 主要實現瞭如下的異常傳播機制：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;腳本調用 C++ 函數時若拋出異常，在腳本端不進行捕獲，但支持異常傳播到 C++端，同時正常完成棧回退。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;C++ 調用腳本函數時若拋出異常，可以在 C++ 端捕獲。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//4ca2105f8da79d27155676715456951f.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h1&gt;四、DScript2.0 在線開發工作流&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet//304b49d4719757821cbf6154aa5b5807.webp" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 通過平台化實現了在線開發的工作流：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;引擎集成：以 SDK 方式與引擎進行集成，提供在線編譯和加載的能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在線 IDE：實現編輯、編譯的在線開發環境。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在線工作流：通過平台化支持腳本的在線分發與管理。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;五、總結&lt;/h1&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;DScript2.0 的實踐為推薦引擎的敏捷迭代探索了一條新路徑。通過編譯器架構與 C++底層機制的高度兼容設計，它在降低跨語言交互成本、支持動態加載等方面展現出潛力，同時保持了接近原生 C++的運行時性能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;其即時編譯能力與在線開發流程，使業務團隊能獨立完成邏輯更新，減少對傳統 C++開發中編譯部署的依賴，初步驗證了兼顧性能與效率的可能性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未來，我們計劃進一步完善調試工具鏈與異常處理機制，並探索其在混合語言場景下的擴展性，以更輕量的方式推動引擎架構的持續優化。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;&lt;strong&gt;算法團隊大量 HC，歡迎加入我們：&lt;/strong&gt;得物技術大量算法崗位多地上線，「職」等你來！&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顧&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;1.&lt;/span&gt;社區造數服務接入 MCP｜得物技術&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;2.&lt;/span&gt;CSS 闖關指南：從手寫地獄到「類」積木之旅｜得物技術&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;3.&lt;/span&gt;從零實現模塊級代碼影響面分析方案｜得物技術&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;4.&lt;/span&gt;以細節詮釋專業，用成長定義價值——對話@孟同學 ｜得物技術&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#586c90"&gt;5.&lt;/span&gt;得物可觀測平台架構升級：基於 GreptimeDB 的全新監控體系實踐&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;文 / 明遠&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;關注得物技術，每週更新技術乾貨&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;要是覺得文章對你有幫助的話，歡迎評論轉發點贊～&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#3e3e3e"&gt;未經得物技術許可嚴禁轉載，否則依法追究法律責任。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353485</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353485</guid>
      <pubDate>Sun, 11 May 2025 05:46:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>NebulaFlow 重構邊緣計算：分佈式 AI 推理框架正式開源，低延遲賦能工業物聯網</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;em&gt;在工業物聯網 (IIoT) 與邊緣計算深度融合的今天，NebulaFlow 開源框架的發佈標誌着分佈式 AI 推理技術邁入新階段。本文深度解析該框架如何通過創新的數據流編排機制，在工業質檢、設備預測性維護等場景中實現毫秒級響應，同時揭示其三層異構計算架構如何平衡算力成本與推理精度。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;NebulaFlow 重構邊緣計算：分佈式 AI 推理框架正式開源，低延遲賦能工業物聯網&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;邊緣計算範式下的 AI 推理困境與破局&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;傳統雲計算架構在工業物聯網場景中面臨的根本矛盾，在於數據傳輸延遲與集中式算力分配間的不可調和性。NebulaFlow 創新性地採用邊緣節點協同推理策略，將 AI 模型拆解為可動態部署的微服務單元。通過實時監控網絡帶寬波動和設備算力狀態，系統能自主決策將 ResNet-34 等視覺模型的卷積層部署在網關設備，而全連接層下沉至邊緣服務器。這種混合精度推理機制使得汽車焊接質量檢測的端到端延遲從傳統方案的 800ms 降至驚人的 93ms，同時保持 99.2% 的缺陷識別準確率。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三層異構架構的算力編排奧秘&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NebulaFlow 框架最核心的競爭力在於其"終端-邊緣-近雲"三級計算架構設計。在半導體晶圓檢測的實際部署中，框架的資源調度器會智能識別：輕量級 YOLOv5 模型的前處理階段適合部署在帶 NPU(神經網絡處理單元) 的工業相機，特徵提取層分配至工廠級邊緣服務器集羣，而複雜的分類決策則交由廠區級 GPU 節點完成。這種動態負載均衡策略使得單台注塑機的狀態監測年運維成本降低 47%，而分佈式推理過程中的梯度同步開銷控制在總耗時的 15% 以內。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;數據流編排引擎的技術突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;框架內置的 Fluid DAG 引擎徹底改變了傳統 AI 流水線的剛性結構。當處理風力發電機組的振動信號時，系統能根據傳感器數據的信噪比動態調整 STFT(短時傅裏葉變換) 的窗口參數，並智能跳過噪聲幹擾嚴重時段的數據預處理。這種具有容錯能力的流式計算模式，使得 200ms 時間窗內的特徵提取完成率從固定管道的 82% 提升至 98.7%。特別值得注意的是，引擎支持 TensorRT 和 ONNX Runtime 的混合部署，這讓同一套 LSTM 模型能在不同代際的工業設備上保持一致的預測性能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;開源生態帶來的產業變革機遇&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;NebulaFlow 選擇 Apache 2.0 協議開源的戰略決策，正在催生工業 AI 領域的"安卓時刻"。其模塊化設計允許西門子等設備廠商快速集成私有協議棧，同時保持核心調度算法的持續升級。在首批試點項目中，某鋼鐵集團通過複用框架的模型分片功能，僅用 3 周就完成了軋鋼温度預測系統的跨廠區部署。更值得關注的是社區貢獻的 ROS2-Nebula 適配器，這使 AGV 調度系統的路徑規劃延遲突破性地降至 50ms 量級。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;工業級可靠性的實現路徑&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;為滿足製藥行業 GMP(藥品生產質量管理規範) 的嚴苛要求，框架創新性地引入了雙通道容錯機制。當檢測到某邊緣節點心跳丟失時，不僅會立即觸發鄰近節點的模型熱遷移，還會自動啓用壓縮感知技術對缺失數據進行重建。在疫苗灌裝產線的 72 小時連續測試中，系統在模擬 20% 節點故障的情況下仍保持 99.99% 的批次合格判定準確率。這種魯棒性很大程度上源於其獨特的聯邦式檢查點機制，該技術將模型狀態同步的帶寬消耗降低了 60%。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;NebulaFlow 的開源標誌着邊緣 AI 推理進入"生產就緒"階段，其價值不僅體現在技術參數上的突破，更在於重構了工業智能化的實施範式。從半導體到能源裝備，該框架證明分佈式推理完全可以兼顧實時性與準確性，而其開放的架構更將加速工業元宇宙的生態構建。隨着 5G-Advanced 網絡的普及，這套框架有望成為連接物理世界與數字孿生的神經網絡。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353481</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353481</guid>
      <pubDate>Sun, 11 May 2025 04:49:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>騰訊開源跨平台框架 ovCompose，助力全端應用開發</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;近日，騰訊開源平台正式推出了由騰訊視頻團隊主導開發的跨平台框架 ovCompose。該框架基於 Compose Multiplatform 生態構建，旨在解決 JetBrains Compose Multiplatform 當前不支持鴻蒙系統的問題，並改善 iOS 平台上佈局受限的情況，從而幫助開發者更高效地打造全平台應用。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;在騰訊大前端 Oteam 的推動下，騰訊視頻團隊還推出了 KuiklyBase，涵蓋 Kotlin/Native 對鴻蒙系統的適配、組件生態建設、編譯流程優化、堆棧還原以及工具鏈完善等多個方面。這一系列技術方案有效提升了 Kotlin Multiplatform（KMP）開發者在鴻蒙平台上的開發效率。目前，ovCompose 與 KuiklyBase 已在 GitHub 上開源發佈。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;現階段，ovCompose 已在騰訊視頻的鴻蒙平台全面應用，成為首個實現全跨端覆蓋的 App。而 KuiklyBase 的核心能力也已在包括騰訊視頻、QQ 瀏覽器、騰訊體育在內的十餘款 App 中落地使用。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;通過採用一套代碼覆蓋 Android、iOS 與鴻蒙三大平台的開發模式，業務開發效率明顯提升。隨着鴻蒙系統的持續演進，ovCompose 與 KuiklyBase 的應用範圍也將逐步拓展至電視端與 PC 端。&lt;/p&gt; 
&lt;p style="color:#4d4f53; margin-left:0; margin-right:0; text-align:start"&gt;值得關注的是，近年來 Kotlin Multiplatform（KMM）生態不斷成熟，Kotlin-Native 在多個場景下的執行性能已超越 Kotlin-JVM。然而，Compose Multiplatform 在跨平台方面的技術尚未完全成熟。未來，ovCompose 與 KuiklyBase 將繼續圍繞以下方向進行優化：提升垃圾回收機制在實際業務中的表現、推進 Kotlin-Native 的組件化能力、優化 Kotlin-Native 的開發體驗，以及進一步統一 UIKit 與 Skia 的渲染模式，力求為開發者提供更流暢、更高效的跨端開發體驗。&lt;/p&gt; 
&lt;p&gt;https://github.com/Tencent-TDS/ovCompose-sample/blob/main/README-zh_CN.md&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353476</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353476</guid>
      <pubDate>Sun, 11 May 2025 04:04:00 GMT</pubDate>
      <author>來源: 投稿</author>
    </item>
    <item>
      <title>Yandex 發佈全球最大開源音樂推薦數據集 Yambda</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;Yandex &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsspai.com%2Flink%3Ftarget%3Dhttps%253A%252F%252Fwww.prnewswire.com%252Fnews-releases%252Fyandex-releases-worlds-largest-event-dataset-for-advancing-recommender-systems-302468616.html" target="_blank"&gt;發佈&lt;/a&gt;開源音樂推薦數據集 Yambda，包含近 50 億次匿名用户與流媒體平台 Yandex Music 音軌的互動數據。&lt;/p&gt; 
&lt;p&gt;Yandex 表示，該數據集來自旗下流媒體音樂服務的 My Wave 推薦系統，所有用户和跟蹤數據都使用數字標識符匿名化處理：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;包含了跨度 10 個月、47.9 億次匿名用户交互，擁有來自 100 萬用户的數據和 939 萬個曲目的匿名描述符&lt;/li&gt; 
 &lt;li&gt;包括隱式交互（偵聽）和顯式交互（喜歡、不喜歡和刪除）兩種反饋類型，並提供 50 億、5 億和 5000 萬三種數據集大小，&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height="1154" src="https://static.oschina.net/uploads/space/2025/0604/112437_dqLB_2720166.png" width="2026" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;相比現有的 Spotify Million Playlists、Netflix Prize dataset 等數據集，Yambda 在數據規模和時效性方面都更為出色。&lt;/p&gt; 
&lt;p&gt;Yambda 可作為通用基準用於電子商務、社交網絡和短視頻平台的推薦系統測試，現已在 Hugging Face 上提供：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fdatasets%2Fyandex%2Fyambda" target="_blank"&gt;https://huggingface.co/datasets/yandex/yambda&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/353465/yandex-releases-worlds-largest-event-dataset</link>
      <guid isPermaLink="false">https://www.oschina.net/news/353465/yandex-releases-worlds-largest-event-dataset</guid>
      <pubDate>Sun, 11 May 2025 03:25:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
