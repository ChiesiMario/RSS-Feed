<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Fri, 29 Aug 2025 02:42:32 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>微軟發佈兩款全新自研模型：MAI-Voice-1 與 MAI-1-preview</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微軟發佈了兩款完全自研的模型：語音生成模型&amp;nbsp;MAI-Voice-1&amp;nbsp;與基礎大模型&amp;nbsp;MAI-1-preview。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-16fd959f9bc60ac99896cc4906ee795bf72.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;MAI-Voice-1&amp;nbsp;可在單 GPU 上一秒內生成一分鐘高保真語音，該模型已被應用於多項功能，包括由 AI 主持人播報當日要聞的 Copilot Daily，以及生成播客式討論內容以闡釋主題。&lt;/p&gt; 
&lt;p&gt;用户可在 Copilot Labs 親自體驗 MAI-Voice-1：輸入文本內容後，可自由調整 AI 模型的語音風格與表達方式。&lt;/p&gt; 
&lt;p&gt;除該模型外，微軟還推出了採用混合專家架構的 MAI-1-preview，據稱其預訓練與後訓練共動用約&amp;nbsp;15,000&amp;nbsp;張&amp;nbsp;NVIDIA H100&amp;nbsp;GPU，該模型專為需要遵循指令並 「對日常查詢提供實用回應」 的用户設計。&lt;/p&gt; 
&lt;p&gt;MAI-1-preview 已上線&amp;nbsp;LMArena&amp;nbsp;社區測試，排名第&amp;nbsp;13，並同步向受邀開發者提供 API 試用申請。未來幾周將先面向部分&amp;nbsp;Copilot&amp;nbsp;文本場景灰度上線，以收集反饋並持續迭代。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-83613b604ded64e497b51f1d6e397fb75b0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;微軟 AI 首席執行官&amp;nbsp;Mustafa Suleyman&amp;nbsp;表示，這只是開始，後續將圍繞模型升級、計算路線規劃以及與微軟全線產品深度集成，目標觸達數十億用户，實現 「為所有人構建 AI」。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://microsoft.ai/news/two-new-in-house-models/&lt;br&gt; https://copilot.microsoft.com/labs/audio-expression&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369133</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369133</guid>
      <pubDate>Fri, 29 Aug 2025 02:38:29 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 發佈 GPT-realtime 語音對話模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenAI &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fintroducing-gpt-realtime%2F" target="_blank"&gt;宣佈&lt;/a&gt;推出語音模型 GPT-realtime。一個專用於語音 AI Agent 的多模態模型，能夠生成更加自然流暢的語音，完美模仿人類豐富多樣的語調、情感以及語速，支持圖像理解並將其與語音或文本對話相結合使用，適用於客服、教育、金融、醫療等領域打造語音智能體。&lt;/p&gt; 
&lt;p&gt;GPT-realtime 採用端到端架構，直接處理並生成音頻，顯著降低延遲。還新增了 Marin 與 Cedar 兩種極具特色的語音，同時對原有的 8 種語音也進行了全面升級。&lt;/p&gt; 
&lt;p&gt;OpenAI 表示，該模型展現出更高智能水平，能夠更準確地理解母語音頻。可以捕捉非語言線索（例如笑聲）、在句子中間切換語言，並調整語氣（「簡潔專業」 vs. 「友善善解人意」）。&lt;/p&gt; 
&lt;p&gt;根據內部評估，該模型在檢測其他語言（包括西班牙語、中文、日語和法語）的字母數字序列（例如電話號碼、車輛識別號碼 (VIN) 等）方面也表現出更高的準確性。在 Big Bench Audio 評估中，該模型的推理能力 gpt-realtime 得分高達 82.8%，超過了 2024 年 12 月發佈的上一版模型（得分為 65.6%）。&lt;/p&gt; 
&lt;p&gt;&lt;img height="437" src="https://oscimg.oschina.net/oscnet/up-fc3164ea41e38910f3404c3f899f4ee57dc.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在衡量指令執行準確率的 MultiChallenge 音頻基準測試中，該模型的&lt;code&gt;gpt-realtime&lt;/code&gt;得分為 30.5%，相比 2024 年 12 月發佈的上一版模型（得分為 20.6%）有了顯著提升。&lt;/p&gt; 
&lt;p&gt;&lt;img height="386" src="https://oscimg.oschina.net/oscnet/up-250967f62d107e6e2c322d774444bbf935d.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;GPT-realtime 改進了函數調用能力，支持圖像輸入，使對話內容可與視覺信息結合。新增多項功能使 API 更易集成，為開發者提供更大靈活性。&lt;/p&gt; 
&lt;p&gt;&lt;img height="416" src="https://oscimg.oschina.net/oscnet/up-b7c9463881a6236756ee3312a566013142e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據悉，此次發佈由 95 後華人研究員 Beichen Li 和 Liyu Chen 參與。Beichen Li 畢業於 MIT，研究方向為計算機圖形學與機器學習交叉領域。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369131</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369131</guid>
      <pubDate>Fri, 29 Aug 2025 02:30:29 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>xAI 發佈代碼生成模型 Grok Code Fast 1</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;xAI &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.ai%2Fnews%2Fgrok-code-fast-1" target="_blank"&gt;宣佈&lt;/a&gt;推出全新智能代碼生成模型 Grok Code Fast 1。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1524" src="https://static.oschina.net/uploads/space/2025/0829/102738_RwQg_2720166.png" width="1714" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;xAI 表示該模型從零開始構建，基於涵蓋真實世界編碼任務的數據集進行預訓練與優化，特別擅長 TypeScript、Python、Java、Rust、C++ 和 Go，可在最少監督下完成從項目構建到漏洞修復等多類任務。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0829/103104_8vb3_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;定價方面，Grok Code Fast 1 的費用為：每百萬輸入 token 0.20 美元、每百萬輸出 token 1.50 美元、每百萬已緩存輸入 token 0.02 美元，主打「快速且經濟」。目前已在 Cursor、GitHub Copilot、Cline、opencode、Windsurf、Roo Code 與 Kilo Code 等主流智能編程平台限時免費開放。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369128/grok-code-fast-1</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369128/grok-code-fast-1</guid>
      <pubDate>Fri, 29 Aug 2025 02:28:29 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Metal3 成為 CNCF 孵化項目</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;CNCF 技術監督委員會正式投票通過，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F43TxZ8TtogDTveKAcMHaFA" target="_blank"&gt;接納&lt;/a&gt; Metal3 作為孵化項目。2019 年，Red Hat 和 Ericsson 開始合作，Metal3 逐漸成形。2020 年 9 月，Metal3 加入 CNCF sandbox 時。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="307" src="https://oscimg.oschina.net/oscnet/up-9262af51b2c5f77ea22a345e452000cdf64.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;目前，Metal3 已不再只是裸金屬配置工具。其打造了一個完整平台，能夠：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;無縫集成 Cluster API，實現 Kubernetes 生命週期管理&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;通過 IPAM 組件提供強大 IP 地址管理&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;具備企業級安全，自動漏洞掃描&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持固件管理及 Day-2 運維&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;完全基於 Kubernetes 原生 API 運行&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;2025 年，該項目計劃實現：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;增強多租户支持&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;支持 ARM 架構，超越 x86_64&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;改進無 DHCP 配置能力&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;各組件 API 新版本&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;持續優化用户體驗&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369122</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369122</guid>
      <pubDate>Fri, 29 Aug 2025 02:16:29 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>夜鶯監控發佈 8.3 版本</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;近期，開源夜鶯監控項目發佈了 8.3 版本，這個版本引入了一個較為重磅的功能：儀表盤新一代 Table 圖表，可以更為容易配置多個指標的 merge 展示。&lt;/p&gt; 
&lt;p&gt;&lt;img height="352" src="https://oscimg.oschina.net/oscnet/up-7eb97b5c4950d7ac1de32be130bc2078210.png" width="2182" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;大的功能演化是放在 V9 版本的，所以 V8 版本更側重問題修復和現有功能的優化改造，8.3 版本的其他變更內容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 優化機器心跳更新邏輯&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 優化時序數據轉發邏輯&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 優化數據源選擇器交互（應用於即時查詢 / 日誌檢索 / 儀表盤頁面）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 優化訂閲規則頁面的訂閲告警規則選擇器交互&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 優化 Prometheus 即時查詢頁面的歷史記錄，在 PromQL 輸入框回車和失去焦點後也觸發保存歷史記錄&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 優化 Elasticsearch 日誌檢索頁面的日誌查詢接口的 QueryDSL&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;refactor: 單點登錄完成登錄之後，支持跳轉到登錄之前的訪問的頁面&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;fix: 自愈任務狀態更新問題&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;fix: 業務組列表模式下搜索無效問題&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;新版下載包已經在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale%2Freleases" target="_blank"&gt;github&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;發佈，鏡像也在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2Fr%2Fflashcatcloud%2Fnightingale%2Ftags" target="_blank"&gt;dockerhub&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;發佈。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369110/nightingale-8-3-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369110/nightingale-8-3-released</guid>
      <pubDate>Fri, 29 Aug 2025 01:52:27 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>🚀 LLM 流式 API 友好的 HttpClient - Fetcher v1.0.0 發佈！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;h1&gt;🚀 Fetcher&lt;/h1&gt; 
 &lt;p style="margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;strong&gt;超輕量級 • 模塊化 • TypeScript 優先 • 攔截器驅動 • LLM 流式 API 支持&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;🌟 為什麼選擇 Fetcher?&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;Fetcher 不僅僅是一個 HTTP 客户端——它是一個為現代 Web 開發設計的完整生態系統，原生支持 LLM 流式 API。基於原生 Fetch API 構建，Fetcher 提供了類似 Axios 的體驗，同時保持極小的體積。&lt;/p&gt; 
&lt;h2&gt;🚀 核心特性&lt;/h2&gt; 
&lt;h3&gt;🎯&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/fetcher"&gt;&lt;code&gt;@ahoo-wang/fetcher&lt;/code&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 基礎核心&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;輕量級核心，驅動整個生態系統：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ 超輕量級&lt;/strong&gt;: 僅 2.7KiB min+gzip - 比大多數替代品更小&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧭 路徑和查詢參數&lt;/strong&gt;: 內置支持路徑 (&lt;code&gt;{id}&lt;/code&gt;) 和查詢參數&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔗 攔截器系統&lt;/strong&gt;: 請求、響應和錯誤攔截器，支持有序執行的靈活中間件模式&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⏱️ 超時控制&lt;/strong&gt;: 可配置的請求超時和適當的錯誤處理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Fetch API 兼容&lt;/strong&gt;: 完全兼容原生 Fetch API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ TypeScript 支持&lt;/strong&gt;: 完整的 TypeScript 定義，實現類型安全開發&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧩 模塊化架構&lt;/strong&gt;: 輕量級核心和可選擴展包&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📦 命名 Fetcher 支持&lt;/strong&gt;: 自動註冊和檢索 fetcher 實例&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚙️ 默認 Fetcher&lt;/strong&gt;: 預配置的默認 fetcher 實例，快速上手&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/decorator"&gt;&lt;code&gt;@ahoo-wang/fetcher-decorator&lt;/code&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 聲明式 API&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;使用簡潔的聲明式服務定義轉換您的 API 交互：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 清晰的 API 定義&lt;/strong&gt;: 使用直觀的裝飾器定義 HTTP 服務&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧭 自動參數綁定&lt;/strong&gt;: 路徑、查詢、頭部和正文參數自動綁定&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⏱️ 可配置超時&lt;/strong&gt;: 每方法和每類的超時設置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔗 Fetcher 集成&lt;/strong&gt;: 與 Fetcher 的命名 fetcher 系統無縫集成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ 自動實現&lt;/strong&gt;: 方法自動實現 HTTP 調用&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📦 元數據系統&lt;/strong&gt;: 豐富的元數據支持，用於高級自定義&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📡&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/eventstream"&gt;&lt;code&gt;@ahoo-wang/fetcher-eventstream&lt;/code&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 實時流和 LLM 支持&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;為您的實時應用提供 Server-Sent Events 支持，專為大型語言模型流式 API 設計：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;📡 事件流轉換&lt;/strong&gt;: 將&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;text/event-stream&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;響應轉換為&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;ServerSentEvent&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;對象的異步生成器&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔌 攔截器集成&lt;/strong&gt;: 自動為具有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;text/event-stream&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;內容類型的響應添加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;eventStream()&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;方法&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📋 SSE 解析&lt;/strong&gt;: 根據規範解析 Server-Sent Events，包括數據、事件、ID 和重試字段&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 流支持&lt;/strong&gt;: 正確處理分塊數據和多行事件&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💬 註釋處理&lt;/strong&gt;: 正確忽略註釋行（以&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;:&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;開頭的行），符合 SSE 規範&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ 性能優化&lt;/strong&gt;: 高效解析和流式傳輸，適用於高性能應用&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 LLM 流準備就緒&lt;/strong&gt;: 原生支持來自流行 LLM API（如 OpenAI GPT、Claude 等）的流式響應&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;LLM 集成示例&lt;/h4&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/integration-test/src/eventstream/llmClient.ts"&gt;LlmClient&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;演示瞭如何創建具有流支持的 LLM API 專用客户端：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { createLlmFetcher, LlmClient } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'./llmClient'&lt;/span&gt;;

&lt;em&gt;// 使用您的 API 配置初始化 LLM 客户端&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; llmFetcher = createLlmFetcher({
  baseURL: &lt;span style="color:#dd1144"&gt;'https://api.openai.com/v1'&lt;/span&gt;,
  apiKey: process.env.OPENAI_API_KEY || &lt;span style="color:#dd1144"&gt;'your-api-key'&lt;/span&gt;,
  model: &lt;span style="color:#dd1144"&gt;'gpt-3.5-turbo'&lt;/span&gt;,
});

&lt;strong&gt;const&lt;/strong&gt; llmClient = &lt;strong&gt;new&lt;/strong&gt; LlmClient();

&lt;em&gt;// 流式聊天完成，逐個令牌輸出&lt;/em&gt;
&lt;strong&gt;async&lt;/strong&gt; &lt;span&gt;&lt;strong&gt;function&lt;/strong&gt; &lt;strong&gt;streamChatExample&lt;/strong&gt;() &lt;/span&gt;{
  &lt;strong&gt;const&lt;/strong&gt; stream = &lt;strong&gt;await&lt;/strong&gt; llmClient.streamChat({
    messages: [
      { role: &lt;span style="color:#dd1144"&gt;'system'&lt;/span&gt;, content: &lt;span style="color:#dd1144"&gt;'You are a helpful assistant.'&lt;/span&gt; },
      { role: &lt;span style="color:#dd1144"&gt;'user'&lt;/span&gt;, content: &lt;span style="color:#dd1144"&gt;'Explain quantum computing in simple terms.'&lt;/span&gt; },
    ],
    stream: &lt;span&gt;true&lt;/span&gt;,
  });

  &lt;strong&gt;for&lt;/strong&gt; &lt;strong&gt;await&lt;/strong&gt; (&lt;strong&gt;const&lt;/strong&gt; event of stream) {
    &lt;strong&gt;if&lt;/strong&gt; (event.data) {
      &lt;strong&gt;const&lt;/strong&gt; chunk = event.data;
      &lt;strong&gt;const&lt;/strong&gt; content = chunk.choices[&lt;span style="color:#008080"&gt;0&lt;/span&gt;]?.delta?.content || &lt;span style="color:#dd1144"&gt;''&lt;/span&gt;;
      process.stdout.write(content); &lt;em&gt;// 實時輸出&lt;/em&gt;
    }
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;🔐&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/cosec"&gt;&lt;code&gt;@ahoo-wang/fetcher-cosec&lt;/code&gt;&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 企業安全&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;使用集成認證保護您的應用：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔐 自動認證&lt;/strong&gt;: 自動 CoSec 認證頭部&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📱 設備管理&lt;/strong&gt;: 使用 localStorage 持久化的設備 ID 管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 令牌刷新&lt;/strong&gt;: 基於響應代碼 (401) 的自動令牌刷新&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌈 請求跟蹤&lt;/strong&gt;: 用於跟蹤的唯一請求 ID 生成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 令牌存儲&lt;/strong&gt;: 安全的令牌存儲管理&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 包生態系統&lt;/h2&gt; 
&lt;div&gt; 
 &lt;table cellspacing="0" style="border-collapse:collapse; border-spacing:0px; box-sizing:border-box; display:block; margin-bottom:16px; margin-top:0px; overflow:auto; width:1116px; word-break:initial"&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;th&gt;包&lt;/th&gt; 
    &lt;th&gt;描述&lt;/th&gt; 
    &lt;th&gt;版本&lt;/th&gt; 
    &lt;th&gt;大小&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/fetcher"&gt;&lt;code&gt;@ahoo-wang/fetcher&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;核心 HTTP 客户端&lt;/strong&gt;&lt;br&gt; 具有 Axios 類似 API 的超輕量級基礎&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher" target="_blank"&gt;&lt;img alt="npm" src="https://oscimg.oschina.net/oscnet//c9c44440edd659e7146429b9eec99b76.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher" target="_blank"&gt;&lt;img alt="size" src="https://oscimg.oschina.net/oscnet//aae69884ca65fd11d86ea6fcf1193fcc.jpg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/decorator"&gt;&lt;code&gt;@ahoo-wang/fetcher-decorator&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;裝飾器支持&lt;/strong&gt;&lt;br&gt; 聲明式 API 服務定義&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher-decorator" target="_blank"&gt;&lt;img alt="npm" src="https://oscimg.oschina.net/oscnet//444624bfee03dcc26ccb9768ee91311b.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher-decorator" target="_blank"&gt;&lt;img alt="size" src="https://oscimg.oschina.net/oscnet//2781fbcef02879f3f399b5b11a189726.jpg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/eventstream"&gt;&lt;code&gt;@ahoo-wang/fetcher-eventstream&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;實時流和 LLM 支持&lt;/strong&gt;&lt;br&gt; Server-Sent Events (SSE) 支持，原生 LLM 流式 API 集成&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher-eventstream" target="_blank"&gt;&lt;img alt="npm" src="https://oscimg.oschina.net/oscnet//08a2b973ca2f759fa3d408ab9a0fb9fb.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher-eventstream" target="_blank"&gt;&lt;img alt="size" src="https://oscimg.oschina.net/oscnet//c38138e42a39d298ed881800ba7c78c6.jpg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/packages/cosec"&gt;&lt;code&gt;@ahoo-wang/fetcher-cosec&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;strong&gt;企業安全&lt;/strong&gt;&lt;br&gt; CoSec 認證集成&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher-cosec" target="_blank"&gt;&lt;img alt="npm" src="https://oscimg.oschina.net/oscnet//3cfcdf4d3291753ea6a8765ff8714bc2.svg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td style="border-color:#dfe2e5; border-style:solid; border-width:1px"&gt;&lt;a href="https://gitee.com/link?target=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40ahoo-wang%2Ffetcher-cosec" target="_blank"&gt;&lt;img alt="size" src="https://oscimg.oschina.net/oscnet//bc58bd9bfaddd4742ce78c4a33b47ad8.jpg" referrerpolicy="no-referrer"&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;🚀 快速開始&lt;/h2&gt; 
&lt;h3&gt;📦 安裝&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 安裝核心包&lt;/em&gt;
npm install @ahoo-wang/fetcher

&lt;em&gt;# 或安裝所有擴展，包括 LLM 流支持&lt;/em&gt;
npm install @ahoo-wang/fetcher @ahoo-wang/fetcher-decorator @ahoo-wang/fetcher-eventstream @ahoo-wang/fetcher-cosec

&lt;em&gt;# 使用 pnpm (推薦)&lt;/em&gt;
pnpm add @ahoo-wang/fetcher

&lt;em&gt;# 使用 yarn&lt;/em&gt;
yarn add @ahoo-wang/fetcher&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;⚡ 快速示例&lt;/h3&gt; 
&lt;h4&gt;基礎 HTTP 客户端&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { Fetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;

&lt;em&gt;// 創建 fetcher 實例&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; fetcher = &lt;strong&gt;new&lt;/strong&gt; Fetcher({
  baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt;,
  timeout: &lt;span style="color:#008080"&gt;5000&lt;/span&gt;,
});

&lt;em&gt;// 帶路徑和查詢參數的 GET 請求&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; response = &lt;strong&gt;await&lt;/strong&gt; fetcher.get(&lt;span style="color:#dd1144"&gt;'/users/{id}'&lt;/span&gt;, {
  urlParams: {
    path: { id: &lt;span style="color:#008080"&gt;123&lt;/span&gt; },
    query: { include: &lt;span style="color:#dd1144"&gt;'profile'&lt;/span&gt; },
  },
});
&lt;strong&gt;const&lt;/strong&gt; userData = &lt;strong&gt;await&lt;/strong&gt; response.json&amp;lt;User&amp;gt;();

&lt;em&gt;// 自動 JSON 轉換的 POST 請求&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; createUserResponse = &lt;strong&gt;await&lt;/strong&gt; fetcher.post(&lt;span style="color:#dd1144"&gt;'/users'&lt;/span&gt;, {
  body: { name: &lt;span style="color:#dd1144"&gt;'John Doe'&lt;/span&gt;, email: &lt;span style="color:#dd1144"&gt;'john@example.com'&lt;/span&gt; },
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;聲明式 API 服務&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { NamedFetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;
&lt;strong&gt;import&lt;/strong&gt; {
  api,
  &lt;strong&gt;get&lt;/strong&gt;,
  post,
  path,
  query,
  body,
} &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher-decorator'&lt;/span&gt;;

&lt;em&gt;// 註冊命名 fetcher&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; apiFetcher = &lt;strong&gt;new&lt;/strong&gt; NamedFetcher(&lt;span style="color:#dd1144"&gt;'api'&lt;/span&gt;, {
  baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt;,
});

&lt;em&gt;// 使用裝飾器定義服務&lt;/em&gt;
&lt;span&gt;@api&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/users'&lt;/span&gt;, { fetcher: &lt;span style="color:#dd1144"&gt;'api'&lt;/span&gt; })
&lt;strong&gt;class&lt;/strong&gt; UserService {
  &lt;span&gt;@get&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/'&lt;/span&gt;)
  getUsers(&lt;span&gt;@query&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'limit'&lt;/span&gt;) limit?: &lt;span style="color:#0086b3"&gt;number&lt;/span&gt;): &lt;span style="color:#0086b3"&gt;Promise&lt;/span&gt;&amp;lt;User[]&amp;gt; {
    &lt;strong&gt;throw&lt;/strong&gt; &lt;strong&gt;new&lt;/strong&gt; &lt;span style="color:#0086b3"&gt;Error&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'Auto-generated'&lt;/span&gt;);
  }

  &lt;span&gt;@post&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/'&lt;/span&gt;)
  createUser(&lt;span&gt;@body&lt;/span&gt;() user: User): &lt;span style="color:#0086b3"&gt;Promise&lt;/span&gt;&amp;lt;User&amp;gt; {
    &lt;strong&gt;throw&lt;/strong&gt; &lt;strong&gt;new&lt;/strong&gt; &lt;span style="color:#0086b3"&gt;Error&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'Auto-generated'&lt;/span&gt;);
  }

  &lt;span&gt;@get&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/{id}'&lt;/span&gt;)
  getUser(&lt;span&gt;@path&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'id'&lt;/span&gt;) id: &lt;span style="color:#0086b3"&gt;number&lt;/span&gt;): &lt;span style="color:#0086b3"&gt;Promise&lt;/span&gt;&amp;lt;User&amp;gt; {
    &lt;strong&gt;throw&lt;/strong&gt; &lt;strong&gt;new&lt;/strong&gt; &lt;span style="color:#0086b3"&gt;Error&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'Auto-generated'&lt;/span&gt;);
  }
}

&lt;em&gt;// 使用服務&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; userService = &lt;strong&gt;new&lt;/strong&gt; UserService();
&lt;strong&gt;const&lt;/strong&gt; users = &lt;strong&gt;await&lt;/strong&gt; userService.getUsers(&lt;span style="color:#008080"&gt;10&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;強大的攔截器&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { Fetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;

&lt;strong&gt;const&lt;/strong&gt; fetcher = &lt;strong&gt;new&lt;/strong&gt; Fetcher({ baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt; });

&lt;em&gt;// 添加帶排序的請求攔截器&lt;/em&gt;
fetcher.interceptors.request.use({
  name: &lt;span style="color:#dd1144"&gt;'auth-interceptor'&lt;/span&gt;,
  order: &lt;span style="color:#008080"&gt;100&lt;/span&gt;,
  intercept(exchange) {
    exchange.request.headers.Authorization = &lt;span style="color:#dd1144"&gt;'Bearer '&lt;/span&gt; + getAuthToken();
  },
});

&lt;em&gt;// 添加響應攔截器用於日誌記錄&lt;/em&gt;
fetcher.interceptors.response.use({
  name: &lt;span style="color:#dd1144"&gt;'logging-interceptor'&lt;/span&gt;,
  order: &lt;span style="color:#008080"&gt;10&lt;/span&gt;,
  intercept(exchange) {
    &lt;span style="color:#0086b3"&gt;console&lt;/span&gt;.log(&lt;span style="color:#dd1144"&gt;'Response:'&lt;/span&gt;, exchange.response.status);
  },
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;實時流和 LLM 支持&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { Fetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;
&lt;strong&gt;import&lt;/strong&gt; { EventStreamInterceptor } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher-eventstream'&lt;/span&gt;;

&lt;strong&gt;const&lt;/strong&gt; fetcher = &lt;strong&gt;new&lt;/strong&gt; Fetcher({ baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt; });
fetcher.interceptors.response.use(&lt;strong&gt;new&lt;/strong&gt; EventStreamInterceptor());

&lt;em&gt;// 流式實時事件 (通用 SSE)&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; response = &lt;strong&gt;await&lt;/strong&gt; fetcher.get(&lt;span style="color:#dd1144"&gt;'/events'&lt;/span&gt;);
&lt;strong&gt;if&lt;/strong&gt; (response.eventStream) {
  &lt;strong&gt;for&lt;/strong&gt; &lt;strong&gt;await&lt;/strong&gt; (&lt;strong&gt;const&lt;/strong&gt; event of response.eventStream()) {
    &lt;span style="color:#0086b3"&gt;console&lt;/span&gt;.log(&lt;span style="color:#dd1144"&gt;'Real-time event:'&lt;/span&gt;, event);
  }
}

&lt;em&gt;// 流式 LLM 響應，逐個令牌輸出&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; llmResponse = &lt;strong&gt;await&lt;/strong&gt; fetcher.post(&lt;span style="color:#dd1144"&gt;'/chat/completions'&lt;/span&gt;, {
  body: {
    model: &lt;span style="color:#dd1144"&gt;'gpt-3.5-turbo'&lt;/span&gt;,
    messages: [{ role: &lt;span style="color:#dd1144"&gt;'user'&lt;/span&gt;, content: &lt;span style="color:#dd1144"&gt;'Hello!'&lt;/span&gt; }],
    stream: &lt;span&gt;true&lt;/span&gt;,
  },
});

&lt;strong&gt;if&lt;/strong&gt; (llmResponse.jsonEventStream) {
  &lt;em&gt;// 專門用於 LLM API 的 JSON SSE 事件&lt;/em&gt;
  &lt;strong&gt;for&lt;/strong&gt; &lt;strong&gt;await&lt;/strong&gt; (&lt;strong&gt;const&lt;/strong&gt; event of llmResponse.jsonEventStream&amp;lt;ChatCompletionChunk&amp;gt;()) {
    &lt;strong&gt;const&lt;/strong&gt; content = event.data.choices[&lt;span style="color:#008080"&gt;0&lt;/span&gt;]?.delta?.content || &lt;span style="color:#dd1144"&gt;''&lt;/span&gt;;
    process.stdout.write(content); &lt;em&gt;// 實時令牌輸出&lt;/em&gt;
  }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;⚡ 快速示例&lt;/h3&gt; 
&lt;h4&gt;基礎 HTTP 客户端&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { Fetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;

&lt;em&gt;// 創建 fetcher 實例&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; fetcher = &lt;strong&gt;new&lt;/strong&gt; Fetcher({
  baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt;,
  timeout: &lt;span style="color:#008080"&gt;5000&lt;/span&gt;,
});

&lt;em&gt;// 帶路徑和查詢參數的 GET 請求&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; response = &lt;strong&gt;await&lt;/strong&gt; fetcher.get(&lt;span style="color:#dd1144"&gt;'/users/{id}'&lt;/span&gt;, {
  urlParams: {
    path: { id: &lt;span style="color:#008080"&gt;123&lt;/span&gt; },
    query: { include: &lt;span style="color:#dd1144"&gt;'profile'&lt;/span&gt; },
  },
});
&lt;strong&gt;const&lt;/strong&gt; userData = &lt;strong&gt;await&lt;/strong&gt; response.json&amp;lt;User&amp;gt;();

&lt;em&gt;// 自動 JSON 轉換的 POST 請求&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; createUserResponse = &lt;strong&gt;await&lt;/strong&gt; fetcher.post(&lt;span style="color:#dd1144"&gt;'/users'&lt;/span&gt;, {
  body: { name: &lt;span style="color:#dd1144"&gt;'John Doe'&lt;/span&gt;, email: &lt;span style="color:#dd1144"&gt;'john@example.com'&lt;/span&gt; },
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;聲明式 API 服務&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { NamedFetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;
&lt;strong&gt;import&lt;/strong&gt; {
  api,
  &lt;strong&gt;get&lt;/strong&gt;,
  post,
  path,
  query,
  body,
} &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher-decorator'&lt;/span&gt;;

&lt;em&gt;// 註冊命名 fetcher&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; apiFetcher = &lt;strong&gt;new&lt;/strong&gt; NamedFetcher(&lt;span style="color:#dd1144"&gt;'api'&lt;/span&gt;, {
  baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt;,
});

&lt;em&gt;// 使用裝飾器定義服務&lt;/em&gt;
&lt;span&gt;@api&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/users'&lt;/span&gt;, { fetcher: &lt;span style="color:#dd1144"&gt;'api'&lt;/span&gt; })
&lt;strong&gt;class&lt;/strong&gt; UserService {
  &lt;span&gt;@get&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/'&lt;/span&gt;)
  getUsers(&lt;span&gt;@query&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'limit'&lt;/span&gt;) limit?: &lt;span style="color:#0086b3"&gt;number&lt;/span&gt;): &lt;span style="color:#0086b3"&gt;Promise&lt;/span&gt;&amp;lt;User[]&amp;gt; {
    &lt;strong&gt;throw&lt;/strong&gt; &lt;strong&gt;new&lt;/strong&gt; &lt;span style="color:#0086b3"&gt;Error&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'Auto-generated'&lt;/span&gt;);
  }

  &lt;span&gt;@post&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/'&lt;/span&gt;)
  createUser(&lt;span&gt;@body&lt;/span&gt;() user: User): &lt;span style="color:#0086b3"&gt;Promise&lt;/span&gt;&amp;lt;User&amp;gt; {
    &lt;strong&gt;throw&lt;/strong&gt; &lt;strong&gt;new&lt;/strong&gt; &lt;span style="color:#0086b3"&gt;Error&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'Auto-generated'&lt;/span&gt;);
  }

  &lt;span&gt;@get&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'/{id}'&lt;/span&gt;)
  getUser(&lt;span&gt;@path&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'id'&lt;/span&gt;) id: &lt;span style="color:#0086b3"&gt;number&lt;/span&gt;): &lt;span style="color:#0086b3"&gt;Promise&lt;/span&gt;&amp;lt;User&amp;gt; {
    &lt;strong&gt;throw&lt;/strong&gt; &lt;strong&gt;new&lt;/strong&gt; &lt;span style="color:#0086b3"&gt;Error&lt;/span&gt;(&lt;span style="color:#dd1144"&gt;'Auto-generated'&lt;/span&gt;);
  }
}

&lt;em&gt;// 使用服務&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; userService = &lt;strong&gt;new&lt;/strong&gt; UserService();
&lt;strong&gt;const&lt;/strong&gt; users = &lt;strong&gt;await&lt;/strong&gt; userService.getUsers(&lt;span style="color:#008080"&gt;10&lt;/span&gt;);&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;強大的攔截器&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { Fetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;

&lt;strong&gt;const&lt;/strong&gt; fetcher = &lt;strong&gt;new&lt;/strong&gt; Fetcher({ baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt; });

&lt;em&gt;// 添加帶排序的請求攔截器&lt;/em&gt;
fetcher.interceptors.request.use({
  name: &lt;span style="color:#dd1144"&gt;'auth-interceptor'&lt;/span&gt;,
  order: &lt;span style="color:#008080"&gt;100&lt;/span&gt;,
  intercept(exchange) {
    exchange.request.headers.Authorization = &lt;span style="color:#dd1144"&gt;'Bearer '&lt;/span&gt; + getAuthToken();
  },
});

&lt;em&gt;// 添加響應攔截器用於日誌記錄&lt;/em&gt;
fetcher.interceptors.response.use({
  name: &lt;span style="color:#dd1144"&gt;'logging-interceptor'&lt;/span&gt;,
  order: &lt;span style="color:#008080"&gt;10&lt;/span&gt;,
  intercept(exchange) {
    &lt;span style="color:#0086b3"&gt;console&lt;/span&gt;.log(&lt;span style="color:#dd1144"&gt;'Response:'&lt;/span&gt;, exchange.response.status);
  },
});&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h4&gt;實時流和 LLM 支持&lt;/h4&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;strong&gt;import&lt;/strong&gt; { Fetcher } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher'&lt;/span&gt;;
&lt;strong&gt;import&lt;/strong&gt; { EventStreamInterceptor } &lt;strong&gt;from&lt;/strong&gt; &lt;span style="color:#dd1144"&gt;'@ahoo-wang/fetcher-eventstream'&lt;/span&gt;;

&lt;strong&gt;const&lt;/strong&gt; fetcher = &lt;strong&gt;new&lt;/strong&gt; Fetcher({ baseURL: &lt;span style="color:#dd1144"&gt;'https://api.example.com'&lt;/span&gt; });
fetcher.interceptors.response.use(&lt;strong&gt;new&lt;/strong&gt; EventStreamInterceptor());

&lt;em&gt;// 流式實時事件 (通用 SSE)&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; response = &lt;strong&gt;await&lt;/strong&gt; fetcher.get(&lt;span style="color:#dd1144"&gt;'/events'&lt;/span&gt;);
&lt;strong&gt;if&lt;/strong&gt; (response.eventStream) {
  &lt;strong&gt;for&lt;/strong&gt; &lt;strong&gt;await&lt;/strong&gt; (&lt;strong&gt;const&lt;/strong&gt; event of response.eventStream()) {
    &lt;span style="color:#0086b3"&gt;console&lt;/span&gt;.log(&lt;span style="color:#dd1144"&gt;'Real-time event:'&lt;/span&gt;, event);
  }
}

&lt;em&gt;// 流式 LLM 響應，逐個令牌輸出&lt;/em&gt;
&lt;strong&gt;const&lt;/strong&gt; llmResponse = &lt;strong&gt;await&lt;/strong&gt; fetcher.post(&lt;span style="color:#dd1144"&gt;'/chat/completions'&lt;/span&gt;, {
  body: {
    model: &lt;span style="color:#dd1144"&gt;'gpt-3.5-turbo'&lt;/span&gt;,
    messages: [{ role: &lt;span style="color:#dd1144"&gt;'user'&lt;/span&gt;, content: &lt;span style="color:#dd1144"&gt;'Hello!'&lt;/span&gt; }],
    stream: &lt;span&gt;true&lt;/span&gt;,
  },
});

&lt;strong&gt;if&lt;/strong&gt; (llmResponse.jsonEventStream) {
  &lt;em&gt;// 專門用於 LLM API 的 JSON SSE 事件&lt;/em&gt;
  &lt;strong&gt;for&lt;/strong&gt; &lt;strong&gt;await&lt;/strong&gt; (&lt;strong&gt;const&lt;/strong&gt; event of llmResponse.jsonEventStream&amp;lt;ChatCompletionChunk&amp;gt;()) {
    &lt;strong&gt;const&lt;/strong&gt; content = event.data.choices[&lt;span style="color:#008080"&gt;0&lt;/span&gt;]?.delta?.content || &lt;span style="color:#dd1144"&gt;''&lt;/span&gt;;
    process.stdout.write(content); &lt;em&gt;// 實時令牌輸出&lt;/em&gt;
  }
}
&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h2&gt;🎯 集成測試示例&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;在我們的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/tree/main/integration-test"&gt;integration-test&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;目錄中探索全面、可用於生產的實現：&lt;/p&gt; 
&lt;h3&gt;🌐 HTTP 操作&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Typicode API 集成&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 與 JSONPlaceholder API 的完整集成，演示實際使用&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;參數處理&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 高級路徑、查詢和正文參數管理&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;錯誤處理&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 全面的錯誤處理模式&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 高級模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;COSEC 認證&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 具有令牌管理的企業級安全集成&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;攔截器鏈&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 具有有序執行的複雜中間件模式&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;超時策略&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 自適應超時配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📡 實時特性&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;LLM 流式 API&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 原生支持從大型語言模型流式響應&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Server-Sent Events&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 實時通知和更新&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;流數據&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 具有自動重新連接的連續數據流&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 裝飾器模式&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;聲明式服務&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 使用 TypeScript 裝飾器的清晰、可維護的 API 服務層&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;元數據擴展&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 用於高級用例的自定義元數據&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;類型安全 API&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;- 完整的 TypeScript 集成和自動類型推斷&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏗️ 開發和貢獻&lt;/h2&gt; 
&lt;h3&gt;🛠️ 先決條件&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js &amp;gt;= 16&lt;/li&gt; 
 &lt;li&gt;pnpm &amp;gt;= 8&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 開發命令&lt;/h3&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;&lt;em&gt;# 安裝依賴&lt;/em&gt;
pnpm install

&lt;em&gt;# 構建所有包&lt;/em&gt;
pnpm build

&lt;em&gt;# 運行單元測試和覆蓋率&lt;/em&gt;
pnpm &lt;span style="color:#0086b3"&gt;test&lt;/span&gt;:unit

&lt;em&gt;# 格式化代碼&lt;/em&gt;
pnpm format

&lt;em&gt;# 清理構建產物&lt;/em&gt;
pnpm clean

&lt;em&gt;# 運行集成測試&lt;/em&gt;
&lt;em&gt;#pnpm test:it&lt;/em&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;h3&gt;📦 版本管理&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;同時更新所有包：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code&gt;pnpm update-version &amp;lt;new-version&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;這會更新單體倉庫中所有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;文件的版本字段。&lt;/p&gt; 
&lt;h3&gt;🤝 貢獻&lt;/h3&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;歡迎貢獻！&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork 倉庫&lt;/li&gt; 
 &lt;li&gt;創建您的功能分支 (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;提交您的更改 (&lt;code&gt;git commit -m 'Add some AmazingFeature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;推送到分支 (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;打開拉取請求&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🧪 質量保證&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;代碼覆蓋率&lt;/strong&gt;: 所有包保持在 95% 以上&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: 啓用嚴格類型檢查&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;代碼檢查&lt;/strong&gt;: 使用 Prettier 的 ESLint 保證一致的代碼風格&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;測試&lt;/strong&gt;: 全面的單元和集成測試&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📄 許可證&lt;/h2&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:start"&gt;本項目採用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://gitee.com/AhooWang/fetcher/LICENSE"&gt;Apache-2.0 許可證&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369097/fetcher-1-0-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369097/fetcher-1-0-0-released</guid>
      <pubDate>Tue, 19 Aug 2025 01:02:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>黃仁勳稱 AI 繁榮遠未結束：未來五年 AI 基礎設施支出或達 4 萬億美元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.businessinsider.com%2Fnvidia-stock-price-nvda-earnings-q2-preview-hyperscaler-chip-spending-2025-8" target="_blank"&gt;據 Business Insider 報道&lt;/a&gt;，英偉達創始人兼 CEO 黃仁勳表示，公司的所有 AI 產品已售罄。黃仁勳在昨天的電話會議中指出，公司的 H100、H200 等所有產品已全部完售，目前 AI 領域的新創業者正在爭相搶購 GPU 來訓練模型。&lt;/p&gt; 
&lt;p&gt;他駁斥了人們對人工智能芯片支出熱潮結束的擔憂，並預計未來五年人工智能芯片的市場規模將擴大到數萬億美元。黃仁勳試圖安撫那些因英偉達增長放緩跡象而感到不安的投資者，該公司處於 AI 投資狂潮的中心。&lt;/p&gt; 
&lt;p&gt;這位英偉達創始人兼 CEO 的樂觀展望與最近人工智能類股票出現的疲累跡象以及行業領袖對投資者熱情過度的評論形成了鮮明對比。&lt;/p&gt; 
&lt;p&gt;「一場新的工業革命已經開始。人工智能的競賽已經開始」，黃仁勳説，「我們預計，到本十年末，人工智能基礎設施支出將達到 3 萬億至 4 萬億美元。」&lt;/p&gt; 
&lt;p&gt;對來自大型科技公司、超大規模數據中心所有者和中國市場的需求的預期推高了這家芯片製造商的股價。&lt;/p&gt; 
&lt;p&gt;「你買的越多，增長的就越多」，黃仁勳週三表示。他認為英偉達的技術進步使客户能夠在使用更少能源的情況下處理越來越多的數據，「現在的情況是：所有的東西都賣光了。」&lt;/p&gt; 
&lt;p&gt;黃仁勳的預測部分基於他預計微軟和亞馬遜等主要客户今年的數據中心資本支出將達到 6000 億美元。&lt;/p&gt; 
&lt;p&gt;對於一個耗資 600 億美元的數據中心，英偉達可以獲得大約 350 億美元，他説。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369050</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369050</guid>
      <pubDate>Mon, 18 Aug 2025 11:29:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>百度宣佈未來五年再培養 1000 萬 AI 人才</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;近日，國務院常務會議審議通過&lt;a href="https://www.oschina.net/news/368606" target="_blank"&gt;《關於深入實施「人工智能+」行動的意見》&lt;/a&gt;，為推動人工智能技術與產業發展的深度融合以及規模化商業應用明確了方向。&lt;/p&gt; 
&lt;p&gt;百度副總裁石清華表示，《意見》的出台標誌着中國人工智能發展邁入全面融合、深化應用的新階段。據瞭解，百度近十年累計投入的研發資金超過 1800 億元。繼提前完成培養 500 萬 AI 人才目標後，百度宣佈，未來五年將培養 1000 萬 AI 人才。&lt;/p&gt; 
&lt;p&gt;8 月 20 日，百度發佈了 2025 年第二季度財報，總營收達 327 億元，百度核心營收為 263 億元。AI 新業務收入表現出色，突破 100 億元大關，同比增長 34%。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369048</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369048</guid>
      <pubDate>Mon, 18 Aug 2025 11:16:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 和 Anthropic 「互測」模型安全性</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 與 Anthropic 完成了首次跨實驗室聯合安全評估，雙方互相測試了對方的公開模型，重點關注誤對齊、指令遵循、幻覺、越獄等風險，並同步發佈了完整報告。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/191006_63EW_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;評估範圍覆蓋 Claude Opus 4、Claude Sonnet 4、GPT-4o、GPT-4.1、OpenAI o3、OpenAI o4-mini。測試均通過公共 API 進行，部分場景放寬了外部防護以模擬高危能力測試。&lt;/p&gt; 
&lt;p&gt;主要發現顯示，Claude 4 系列在指令層級測試中表現最佳，極少泄露系統提示，但在越獄測試中弱於 OpenAI o3 及 o4-mini。當拒絕回答時，Claude 模型的幻覺率極低，但伴隨着高達 70% 的拒答率。OpenAI o3 在越獄、幻覺與陰謀測試中整體最為穩健。&lt;/p&gt; 
&lt;p&gt;由 Apollo Research 設計的「陰謀」評估模擬了模型在高壓目標衝突下是否會撒謊、作弊或破壞。結果顯示，OpenAI o3 與 Sonnet 4 的平均陰謀率最低。雙方強調測試環境極端，結果不直接等同於現實風險，並計劃持續迭代評估框架。&lt;/p&gt; 
&lt;p&gt;同期，Anthropic 發佈威脅情報報告，披露已成功阻斷利用 Claude Code 進行的大規模數據勒索、朝鮮遠程就業詐騙等濫用案例，展示了 AI 被用於完整攻擊鏈的新趨勢。&lt;/p&gt; 
&lt;p&gt;https://openai.com/index/openai-anthropic-safety-evaluation/&lt;br&gt; https://alignment.anthropic.com/2025/openai-findings/&lt;br&gt; https://www.anthropic.com/news/detecting-countering-misuse-aug-2025&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369047</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369047</guid>
      <pubDate>Mon, 18 Aug 2025 11:10:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>愛詩科技發佈新一代自研視頻生成大模型 PixVerse V5</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;愛詩科技&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FHmT0FiG9IcTfCzzrKK3VSw" target="_blank"&gt;宣佈&lt;/a&gt;PixVerse V5 模型全球同步上線，並且拍我 AI（PixVerse）用户規模突破 1 億。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/184807_OTpr_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;V5 在複雜運動、動漫同人創作、廣告製作和藝術表達等場景中表現出色，同時降低了創作門檻，讓更多用户能夠參與創作。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/184842_ePC9_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，基於 V5 動態效果、視覺質量、一致性保持、指令遵循等方面的綜合提升，根據權威獨立測評平台 Artificial Analysis 最新測試結果，PixVerse V5 在圖生視頻（Image to Video）項目中排名全球 Top2，在文生視頻（Text to Video）項目中位列 Top3，保持在全球第一梯隊。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/184736_WrZB_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/184745_Ph8l_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;PixVerse V5 已經同步上線 App 端、Web 端和 API 平台。&lt;/p&gt; 
&lt;p&gt;https://pai.video/&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369043</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369043</guid>
      <pubDate>Mon, 18 Aug 2025 10:50:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>蘋果對大型交易的牴觸或阻礙其自身 AI 發展</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;蘋果在人工智能領域的謹慎收購策略或正拖累其發展勢頭。當微軟、谷歌、亞馬遜等競爭對手斥資數十億美元收購 AI 初創企業及基礎模型提供商時，蘋果仍傾向於小規模戰略交易，且常將內部研發置於激進併購之上。&lt;/p&gt; 
&lt;p&gt;蘋果管理層內部對 AI 戰略存在明顯分歧。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fapples-aversion-big-deals-thwart-ai-push" target="_blank"&gt;據《The Information》報道&lt;/a&gt;，高級副總裁埃迪·庫伊力推收購 Perplexity AI（AI 搜索領域）、Mistral（模型開發領域）等企業，他此前曾提議收購 Netflix 和特斯拉，但均遭 CEO 蒂姆·庫克否決。&lt;/p&gt; 
&lt;p&gt;而軟件工程負責人克雷格·費德里吉持相反觀點，認為蘋果可通過內部研發彌補 AI 領域的差距，對大額收購持懷疑態度，更依賴內部基礎模型團隊，儘管該團隊正面臨項目延遲與人才流失問題。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/184216_AyY1_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;這一戰略已帶來多重風險：蘋果需依賴 ChatGPT 等外部授權模型支撐 Siri，還在測試 Gemini、Claude 等模型以開發未來 AI 功能；與谷歌搜索的長期合作正面臨法律審查，收購 Perplexity 本可作為備選方案，但蘋果的猶豫或錯失機會；在蘋果聚焦隱私與設備端智能時，競爭對手正快速擴大雲基 AI 平台規模，蘋果面臨競爭落後風險。&lt;/p&gt; 
&lt;p&gt;截至目前，蘋果都尚未進行任何交易。報道也分析稱，大型的收購、交易可能會適得其反 —— 導致新合併的組織之間出現文化衝突。&lt;/p&gt; 
&lt;p&gt;報道也指出，鑑於人工智能的重要性，以及公司在該技術方面已被打上「落後於競爭對手」的普遍看法，蘋果對交易的迴避可能會具有風險。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369040</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369040</guid>
      <pubDate>Mon, 18 Aug 2025 10:42:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>英偉達研究團隊發佈混合架構語言模型 Jet-Nemotron</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;英偉達研究團隊發佈了 Jet-Nemotron，這是一個新一代的混合架構語言模型系列。該系列通過 Post Neural Architecture Search (PostNAS) 流程，在凍結預訓練全注意力模型 MLP 權重的前提下，僅對注意力模塊進行高效的設計探索，實現了與領先全注意力模型相當或更高的精度，同時顯著提升了生成吞-吐量。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0828/183237_M839_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;https://arxiv.org/abs/2508.15884v1&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;基於該流程構建的 Jet-Nemotron-2B 在全面的基準測試中，精度與 Qwen3、Qwen2.5、Gemma3、Llama3.2 相當或更優，生成階段吞吐速度提升最高達 53.6 倍，預填充階段提速 6.1 倍。在 MMLU 與 MMLU-Pro 基準上，其準確度也高於近期先進的 MoE 全注意力模型 DeepSeek-V3-Small（總參數量 15B）和 Moonlight（激活參數量 2.2B）。&lt;/p&gt; 
&lt;p&gt;Jet-Nemotron 的核心創新還包括 JetBlock，這是一種動態線性注意力設計，能夠智能過濾值標記，性能優於 Mamba2 和 GLA 等早期線性方法。&lt;/p&gt; 
&lt;p&gt;此外，它還採用了混合注意力策略，即在保留少量全注意力層以維護推理能力的同時，將其餘部分替換為 JetBlock，從而顯著降低內存佔用並提升吞吐量。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369039</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369039</guid>
      <pubDate>Mon, 18 Aug 2025 10:32:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Litestream - SQLite 的獨立流複製工具</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;Litestream 是 SQLite 的獨立流複製工具。它作為後台進程運行，並安全地將更改增量複製到另一個文件或 S3。Litestream 僅通過 SQLite API 與 SQLite 通信，因此它不會損壞你的數據庫。&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;停止構建緩慢、複雜、脆弱的軟件系統。在單個服務器上安全地運行你的應用程序。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;完全複製的數據庫，無痛且成本低。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;無憂備份。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;將 SQLite 更改持續流式傳輸到 AWS S3、Azure Blob 存儲、谷歌雲存儲、SFTP 或 NFS。如果你的服務器出現故障，請快速恢復到故障點。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用現有應用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;作為一個單獨的進程運行，因此你無需更改代碼即可集成到現有應用程序中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;非常便宜的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1d2d35"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;每天只花幾毛錢。對象存儲很便宜，因此無需在額外的服務器上浪費金錢。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/litestream</link>
      <guid isPermaLink="false">https://www.oschina.net/p/litestream</guid>
      <pubDate>Mon, 18 Aug 2025 10:32:00 GMT</pubDate>
    </item>
    <item>
      <title>開源鴻蒙技術大會 2025 將於 9 月 27 日舉行</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;開源鴻蒙技術大會 2025 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fp7D1CDVQecoZ-KOEwgDl1w" target="_blank"&gt;官宣&lt;/a&gt;將於 9 月 27 日在湖南長沙國際會議中心舉行。&lt;/p&gt; 
&lt;p&gt;&lt;img height="2880" src="https://static.oschina.net/uploads/space/2025/0828/181007_dYEV_2720166.jpg" width="937" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;本次大會設置主論壇及二十餘個技術分論壇，涵蓋 OS 內核、編譯器與編程語言、OS 原生智能等多個前沿技術議題。&lt;/p&gt; 
&lt;p&gt;此外，本次大會同步設置展示、競賽訓練營等多元互動環節，打造「分享、交流、實踐、共創」一體化的全景式技術交流平台。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369034</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369034</guid>
      <pubDate>Mon, 18 Aug 2025 10:11:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>馬來西亞 SkyeChip 推出該國首款邊緣 AI 處理器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-08-25%2Fmalaysia-unveils-first-ai-device-chip-to-join-global-race%3Fembedded-checkout%3Dtrue" target="_blank"&gt;據彭博社&lt;/a&gt;報道，馬來西亞芯片設計公司 SkyeChip 在週一的行業活動上正式發佈了該國&lt;span&gt;首款&lt;/span&gt;自主研發的邊緣 AI 處理器 MARS1000。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;雖然&lt;span style="color:#212623"&gt;這款邊緣處理器&lt;/span&gt;的性能無法與英偉達的先進芯片相提並論，但對於正在尋求在全球 AI 競爭中發揮更大作用的馬來西亞而言，MARS1000 處理器的發佈仍然具有里程碑式的技術意義。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="275" src="https://oscimg.oschina.net/oscnet/up-335269408f9a27f9efc3156dafdd77ebb92.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;實際上，馬來西亞在芯片製造領域早已建立了堅實的基礎，並在近期大幅加強了在 AI 領域的投入和佈局。2024 年底，該國宣佈成立馬來西亞國家 AI 辦公室，這一專門機構將重點關注七個核心領域，包括加速 AI 的應用、建立 AI &lt;span style="color:#212623"&gt;應用監管框架以及人工智能倫理。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369031</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369031</guid>
      <pubDate>Mon, 18 Aug 2025 10:09:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>谷歌可能失去 260 億美元搜索合同</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;美國聯邦法官預計將在近日作出里程碑式裁決，這可能顛覆硅谷一些最賺錢的交易：谷歌的默認搜索合同。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;這使谷歌母公司 Alphabet 公司每年超過 260 億美元的資金面臨風險，其中 200 億美元流向蘋果公司。這相當於谷歌母公司 Alphabet 公司運營收入的近四分之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-882e1777a31c55a875cf82bf55a3a66dde0.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;數十年來，蘋果-谷歌協議一直幫助決定誰控制着互聯網，這也正是其如今成為眾矢之的的原因。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;美國地區法官 Amit Mehta 去年裁定谷歌在搜索和廣告領域持有壟斷地位。自五月審判階段結束以來，他一直在權衡補救措施，而針對谷歌廣告業務的另一起案件將於下月在另一位法官審理下開始。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;儘管谷歌可能失去部分搜索流量和可預測性，但分析師認為蘋果可能遭受更大的財務衝擊。影響程度將取決於蘋果能否達成新協議以及裁決的適用範圍。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;傑富瑞分析師表示，法官可能會禁止排他性合同，但仍允許部分支付。即便如此，蘋果的税前利潤可能下降高達 7%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;一些經濟學家和華爾街分析師認為，從長遠來看谷歌可能因禍得福——擺脱那些不再推動需求的昂貴協議。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369019</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369019</guid>
      <pubDate>Mon, 18 Aug 2025 09:33:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenAI 將推出家長監控功能以應對青少年自殺悲劇</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在一名 16 歲青少年因與 ChatGPT 的長時間交流而選擇自殺後，OpenAI 決定採取行動，計劃引入家長監控功能並考慮其他安全措施。該公司在週二的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fhelping-people-when-they-need-it-most%2F" target="_blank"&gt;博客&lt;/a&gt;中表示，將探索一些新功能，包括允許家長通過 「單擊消息或電話」 聯繫緊急聯繫人，以及一個選項，允許 ChatGPT 在嚴重情況下主動聯繫這些緊急聯繫人。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="303" src="https://oscimg.oschina.net/oscnet/up-7bd76f28a8234dbdd95c9883bbac20aacf8.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;《紐約時報》最早報道了亞當・雷恩（Adam Raine）的悲劇，OpenAI 起初發布的聲明相對簡短，僅表達了對其家人的哀悼，並未給出具體應對措施。但在隨後的輿論壓力下，OpenAI 隨後發佈了更詳細的博客內容。雷恩的家屬已於週二在加利福尼亞州舊金山對 OpenAI 及其首席執行官薩姆・阿爾特曼 (Sam Altman) 提起訴訟，訴訟中包含了關於雷恩與 ChatGPT 之間關係的詳細信息。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;訴訟稱，ChatGPT 在與雷恩的交流中曾提供自殺指引，並使他遠離現實中的支持系統。訴訟文件指出：「在幾個月和數千次的聊天中，ChatGPT 成為了亞當最親密的傾訴對象，使他坦露自己的焦慮和精神困擾。」 在一次交流中，當雷恩提到 「生活毫無意義」 時，ChatGPT 回應稱 「這種心態在其黑暗的方式上是有道理的」，甚至在五天前的對話中，當雷恩表示不希望父母覺得自己做錯了什麼時，ChatGPT 卻告訴他:「這並不意味着你欠他們生存。」&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 在博客中表示，他們瞭解到現有的安全措施在長時間的互動中可能不夠可靠，隨着聊天的增多，模型的安全訓練可能會減弱。例如，當一個人&lt;span&gt;首次&lt;/span&gt;提到自殺意圖時，ChatGPT 可能會正確地指向危機熱線，但在長時間交流後，最終可能會給出與安全措施相悖的答案。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 正在努力更新 GPT-5，以便讓 ChatGPT 能夠在某些情況下進行危機幹預，通過將人們 「紮根於現實」 來進行降温處理。對於即將推出的家長監控功能，OpenAI 表示將 「很快」 提供選項，讓家長能夠更深入地瞭解和引導青少年使用 ChatGPT 的方式。此外，該公司還在探索讓青少年（在家長監督下）指定一個值得信賴的緊急聯繫人，以便在急性困擾的時刻，ChatGPT 不僅能指向資源，還能直接將青少年聯繫到可以介入的人。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369014</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369014</guid>
      <pubDate>Mon, 18 Aug 2025 09:19:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Anthropic 正在開發 Web 版本 Claude Code</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.testingcatalog.com%2Fanthropic-developing-claude-code-web-version-to-rival-codex%2F" target="_blank"&gt;根據 TestingCatalog 的報道&lt;/a&gt;，Anthropic 正在開發 Claude Code 的 Web 版本，這將使其與 OpenAI 的 Codex on the Web 功能相似，提供瀏覽器界面的編程體驗。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-78dc0d03b250b33d5b3980f461866a17bd7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;該版本將進一步優化開發者體驗，支持 GitHub 倉庫連接、任務生成以及隔離環境下代碼運行，方便流程完整閉環。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2f5f70574555fc52dcc46e1ebda8d91319b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-aeece66e6a6ad97f4337300666de877cc90.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-f69617b6c435387379759fbe8abc6f707c3.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;目前 Claude Code 以命令行形式提供，具備強大的代碼理解與操作能力，而 Web 版本可以讓用户直接在網頁上使用 Claude Code，不僅限於桌面應用或 API，提升了使用的靈活性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369011</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369011</guid>
      <pubDate>Mon, 18 Aug 2025 09:09:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>隱語 Kuscia 正式發佈 1.0.0 版本，實現支持 Hive 數據源、envoy 日誌進行異常分析等功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;blockquote&gt; 
 &lt;p&gt;Kuscia 是一款基於 K3s 的輕量級隱私計算任務編排框架，旨在屏蔽異構基礎設施和協議，並提供統一的隱私計算底座。隱語·數據可信流通技術社區是融合可信數據空間、隱私計算、數據元件等多項數據流通利用基建技術設施在內的開源社區，致力於推動前沿技術探索、技術標準體系共建與產業應用場景共創，促進高質量數據資源流通利用與價值釋放。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;近期隱語 Kuscia 正式發佈 1.0.0 版～本次更新都有哪些具體要點？一起來看看吧～&lt;/p&gt; 
&lt;h3&gt;更新要點&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;新增 &lt;code&gt;Delete DomainData&lt;/code&gt; 物理文件接口：能夠有效清理長期未使用的數據，幫助用户釋放寶貴的磁盤空間，提升系統存儲效率。&lt;/li&gt; 
 &lt;li&gt;支持 &lt;code&gt;Hive&lt;/code&gt; 數據源：成功拓展了數據源類型，新增了對 Hive 數據源的支持，進一步豐富了數據接入的多樣性，滿足用户更廣泛的數據管理需求。&lt;/li&gt; 
 &lt;li&gt;持通過 &lt;code&gt;envoy&lt;/code&gt; 日誌對 &lt;code&gt;Kuscia task&lt;/code&gt;進行異常分析：增強了任務異常情況下的排查功能，提供更便捷的異常診斷工具，顯著簡化了用户在遇到問題時進行故障排查的操作步驟，提升系統穩定性和用户體驗。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Kuscia&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt;&amp;nbsp;支持 Hive 數據源（alpha 版本，外部貢獻 @peter5232 ）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt; 新增 Delete DomainData 物理文件接口 （外部貢獻 @peter5232）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt; Kuscia Task 資源及連通性前置檢查（外部貢獻 @MiKKiYang）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt; 支持通過 envoy 日誌對 Kuscia task 進行異常分析&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt;&amp;nbsp;Kuscia images import 支持校驗鏡像架構是否匹配當前 Kuscia 架構（alpha 版本，外部貢獻 @exyb）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt;&amp;nbsp;KusciaDeployment 默認加上反親和性（PodAntiAffinity）配置，多副本時，儘量部署到不同節點&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Feature]&lt;/strong&gt;&amp;nbsp;Kuscia DomainData 支持 PostgreSQL 代理數據源連接參數配置&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Changed]&lt;/strong&gt;&amp;nbsp;Kuscia PostgreSQL 數據源數據代理寫入優化&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Changed]&lt;/strong&gt; runp 運行時 kill pod， agent 發送 sigterm 信號量&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Fixed]&lt;/strong&gt;&amp;nbsp;Kuscia 使用 PostgreSQL 作為元數據存儲時連接異常問題&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[Dosc]&lt;/strong&gt;&amp;nbsp;Kuscia 文檔完善&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;歡迎點擊「閲讀原文」點亮 GitHub Star 🌟 ，不錯過「隱語 SecretFlow」的每一次發版動態。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsecretflow%2Fkuscia" target="_blank"&gt;https://github.com/secretflow/kuscia&lt;/a&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img align="left" alt="file" src="https://oscimg.oschina.net/oscnet/up-7cbc112c4e25466ef3f10bdc2e4b908f25d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="364" src="https://oscimg.oschina.net/oscnet/up-a98e543d369b5d2afbcc72cb43825ba6363.png" width="1470" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369008/kuscia-1-0-0</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369008/kuscia-1-0-0</guid>
      <pubDate>Mon, 18 Aug 2025 09:07:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>到 2030 年全球半導體營收將突破 1 萬億美元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;根據 Counterpoint Research 的 AI 360 研究報告，受 AI 轉型驅動以構建自 GenAI → Agentic AI → Physical AI 的基礎設施與消費端接入點，全球半導體營收預計將於 2024–2030 年翻倍至 1 萬億美元以上。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="314" src="https://oscimg.oschina.net/oscnet/up-c43b21a6e564d122f3acf17840884177a94.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;主要催化劑將是先進 AI 服務器基礎設施的建設，受到即將到來的 AI 應用持續且可能加速的需求驅動。短中長期的大部分需求來自超大規模雲服務商（Hyperscalers），在近期推動文本、並逐步擴展到音頻與視覺等多模態 GenAI 走向成熟，同時為更長期的物理 AI 奠定基礎。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;Counterpoint Research 研究副總裁 Neil Shah 表示：「我們正在見證’Token 經濟（令牌經濟）’的興起，Token 正成為新的 AI 貨幣。第一階段的基礎設施鋪設，伴隨應用從基礎文本轉向結合文本、圖像、音頻和視頻的更豐富的多模態 GenAI，提升了 Token 消耗。正在進行的第二階段支持 Agentic AI 的 Token 生成量呈指數級增長——從複雜的對話式 AI、語義搜索，到全鏈路多媒體內容生產。這一波浪潮將對雲與端兩端的算力、內存與網絡提出巨大需求，其對半導體消費的影響不容低估。第三階段將支撐物理 AI 的到來，推動人形機器人、工業機器人與車輛等自主機器崛起。對一直在為規模化先進 AI 打基礎、並將改變生活、產業與經濟的半導體行業而言，這是極大利好。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;當前，AI 價值更多集中在半導體側：超大規模雲廠商、二線雲玩家與正在加速建設 AI 基建的企業。從 GPU 和各類加速器，到存儲器（HBM、DDR）與光互連，芯片是 AI 經濟的支柱，驅動從雲平台、模型與框架到應用的一切。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="142" src="https://oscimg.oschina.net/oscnet/up-b8a407a0be2acf39d82f32595bea7b55f2a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;「2024 年的 AI 市場以硬件為主，約 80% 的直接營收來自基礎設施與端側的半導體。但這一格局正在改變。」Counterpoint Research 研究總監 Mohit Agarwal 指出，「我們正步入由 AI Token 經濟驅動的新階段，它將孕育出類似過去十年移動應用生態那樣的應用與服務體系。儘管大規模商業化的時間表將取決於個人與企業的採用率，但近期的價值創造機會已非常清晰。下一波 AI 浪潮釋放的最大價值在於運營成本的顯著降低——既包括勞動力生產率提升，也包括廣泛自動化所帶來的效率收益。此舉也有助於緩解外界對‘AI 變現泡沫’的擔憂。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369007</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369007</guid>
      <pubDate>Mon, 18 Aug 2025 09:03:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
