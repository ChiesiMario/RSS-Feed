<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 18 Sep 2024 04:12:26 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>Java 23 / JDK 23 正式發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Java 23 現已全面&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmail.openjdk.org%2Fpipermail%2Fjdk-dev%2F2024-September%2F009395.html&quot; target=&quot;_blank&quot;&gt;推出&lt;/a&gt;。這是一個非 LTS（長期支持）版本，Oracle 僅提供六個月的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此版本包含 12 個 JEP，其中包括將 ZGC 的默認模式切換為分代模式。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;455：模式中的原始類型、instanceof 和 switch（Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;466：Class-File API（Second Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;467：Markdown 文檔註釋&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;469：Vector API（Eighth Incubator）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;473：Stream Gatherers（Second Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;471：棄用 sun.misc.Unsafe 中的內存訪問方法並刪除&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;474：ZGC：默認的分代模式&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;476：模塊導入聲明（Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;477：隱式聲明的類和實例主方法（Third Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;480：結構化併發（Third Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;481：範圍值（Third Preview）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;482：靈活的構造函數主體（Third Preview）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;與往常一樣，此版本還包含數百個較小的增強功能和數千個錯誤修復。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;下載地址：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjdk.java.net%2F23%2F&quot; target=&quot;_blank&quot;&gt;https://jdk.java.net/23/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;發行説明：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjdk.java.net%2F23%2Frelease-notes&quot; target=&quot;_blank&quot;&gt;https://jdk.java.net/23/release-notes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/312381/java-23-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/312381/java-23-released</guid>
            <pubDate>Wed, 18 Sep 2024 03:13:47 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Linux Kernel 6.11</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;Linus Torvalds 在內核郵件列表正式&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flkml.org%2Flkml%2F2024%2F9%2F15%2F282&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;了&amp;nbsp;Linux Kernel 6.11，以及開啓 6.12 合併窗口。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0918/102938_VsFH_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Linux 6.11 主要新特性包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;io_uring 子系統支持 bind() 和 listen() 操作，&lt;/li&gt; 
 &lt;li&gt;對實時內核減少延遲的新鎖定機制&lt;/li&gt; 
 &lt;li&gt;減少文本佔用錯誤信息 ETXTBSY&lt;/li&gt; 
 &lt;li&gt;支持用 Rust 開發塊驅動程序&lt;/li&gt; 
 &lt;li&gt;支持塊層的原子寫入操作&lt;/li&gt; 
 &lt;li&gt;專用 bucket slab 分配器加固內核防禦堆噴射（heap spraying）攻擊&lt;/li&gt; 
 &lt;li&gt;getrandom() 的 vDSO 實現，等等&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;此外，Linux 6.12 有望成為新的長期支持版本 (LTS)。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/312376/linux-6-11-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/312376/linux-6-11-released</guid>
            <pubDate>Wed, 18 Sep 2024 02:45:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>Linux 基金會宣佈成立 OpenSearch 軟件基金會</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Linux 基金會&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Flinux-foundation-announces-opensearch-software-foundation-to-foster-open-collaboration-in-search-and-analytics&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;成立 OpenSearch 軟件基金會。該基金會是一個社區驅動的倡議，旨在支持 OpenSearch 及其搜索軟件，全球開發者使用這些軟件構建搜索、分析、可觀測性和向量數據庫應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenSearch 軟件基金會將由 Linux 基金會託管，目前已得到了 AWS、SAP 和 Uber 以及 Canonical 等成員的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;288&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-90ed510c1445c5ba1d915830efd5a354230.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenSearch 成立於 2021 年，之前由 AWS&amp;nbsp; 託管。隨着 OpenSearch 軟件基金會的成立，AWS 將 OpenSearch 轉交給 Linux 基金會。該基金會將專注於支持 OpenSearch，以便它繼續被全球組織採用，推動關鍵業務工作負載。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AWS 搜索與雲運營副總裁 Nandini Ramani 稱：「將 OpenSearch 轉交給 Linux 基金會，我們為項目和社區的下一階段發展奠定了基礎。中立的治理將促進更大的合作，加上編程和運營資源，我們期待與新基金會共同努力，讓每個人都能繼續受益於 OpenSearch。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;延伸閲讀：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/137178/aws-opensearch&quot; target=&quot;_blank&quot;&gt;AWS 推出 OpenSearch：基於 Elasticsearch 的開源分支&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/309509/elasticsearch-is-open-source-again&quot; target=&quot;news&quot;&gt;Elasticsearch 再次開源&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/312371/linux-foundation-opensearch-software-foundation</link>
            <guid isPermaLink="false">https://www.oschina.net/news/312371/linux-foundation-opensearch-software-foundation</guid>
            <pubDate>Wed, 18 Sep 2024 02:22:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>凹語言 v0.16.0 中秋特別版本發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(60, 60, 67, 0.92)&quot;&gt;凹語言是國內首個面向 WebAssembly 設計的通用編程語言，也是國內首個被 CNCF 基金會 wasm 全景圖收錄的開源編程語言。&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(60, 60, 67, 0.92)&quot;&gt;新版本有以下更新：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;「國產語言論壇」被動關閉:&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://gitee.com/link?target=https%3A%2F%2Fzh-lang.osanswer.net&quot; target=&quot;_blank&quot;&gt;https://zh-lang.osanswer.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;增加&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;__package__&lt;/code&gt;/&lt;code&gt;__FILE__&lt;/code&gt;/&lt;code&gt;__LINE__&lt;/code&gt;/&lt;code&gt;__func__&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;預定義常量, 表示當前位置信息&lt;/li&gt; 
 &lt;li&gt;完善 wasm4 遊戲支持, 增加俄羅斯方塊/pong/life 等多個遊戲, 並提供在線試玩頁面&lt;/li&gt; 
 &lt;li&gt;重構&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;syscall&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;部分子包和文檔&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;以下是俄羅斯方塊的效果圖 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwa-lang.org%2Fwa%2Fw4-tetris%2F&quot; target=&quot;_blank&quot;&gt;https://wa-lang.org/wa/w4-tetris/&lt;/a&gt;)：&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;638&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f00b3fce61658618b7951e42d403f1ee597.jpg&quot; width=&quot;370&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//b8e0d42f0367c077b45c06977ee767dd.svg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;凹語言官網：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwa-lang.org%2F&quot; target=&quot;_blank&quot;&gt;https://wa-lang.org/&lt;/a&gt;&lt;/p&gt; 
   &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/312142/walang-0-16-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/312142/walang-0-16-released</guid>
            <pubDate>Sun, 15 Sep 2024 21:39:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>Redmonk：開源軟件許可變更及其對企業財務結果的影響</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Redmonk 高級分析師 Rachel Stevens &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fredmonk.com%2Frstephens%2F2024%2F08%2F26%2Fsoftware-licensing-changes-and-their-impact-on-financial-outcomes%2F&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;了一份研究報告，旨在探究：從開源許可證轉換為專有許可證的公司的財務狀況在許可證變更後是否有了實質性的改善？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;雖然因為奉行這一戰略並公開財務信息的公司數量很少，外部觀察者很難給出一個準確的回答，但 Rachel 認為，「即使在小樣本量內是否存在顯著的趨勢也是值得探討的。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該研究希望利用面向公開的財務數據來檢查：公司收入隨時間的變化、公司市值隨時間的變化、以及公司淨收入隨時間的變化。不過 Rachel 也聲明，相關數據集仍然存在很大的侷限性。因為財務結果並不僅僅受到許可證變更的影響，還與市場競爭、公司業績的其他方面以及總體宏觀經濟環境等其他因素有關。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀察的樣本主要有：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;MongoDB：&lt;/strong&gt;公司於 2017 年 10 月上市，在 2018 年 10 月將底層數據庫的許可證從 AGPL 更改為 Server Side Public License 。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Elastic：&lt;/strong&gt;公司於 2018 年 10 月上市。在 2021 年 1 月將底層 Elasticsearch 源代碼的許可證從 Apache 2.0 更改為雙重 SSPL/Elastic 許可證。（但在這份研究報告發布幾天後，Elasticsearch 又宣佈再次開源，計劃添加 AGPL 作為 ELv2 和 SSPL 之外的另一個許可選項。此舉或許也驗證了一個觀點：即專有許可並不一定更有利可圖。）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;HashiCorp：&lt;/strong&gt;公司於 2021 年 12 月上市。在 2023 年 8 月將其軟件許可證從 Mozilla Public License v2.0 更改為 Business Source License。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Confluent：&lt;/strong&gt;於 2018 年 12 月將其平台組件從 Apache 2.0 更改為 Confluent Community License，當時他們還是一傢俬營公司。之後於 2021 年 6 月上市。（與其他公司不同的是，Confluent 是在變更許可後才上的市，因此其變更前的財務信息是沒有公開的，無從得知。）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;收入&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;第一個問題是：更改許可證的公司收入是否會增加？下圖顯示了每家公司的收入隨時間的變化，藍色垂直線代表了更改許可證的時間。為了便於比較，X 軸和 Y 軸保持不變，這意味着較早上市的公司有更多可用數據。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;625&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8864aaf07a4fc32c2069f34f47e2a642153.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;結果表明，許可證變更後收入有所增加，但是增長率與許可證變更前的增長率並沒有實質性的差別。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;市值&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;下圖顯示了公司市值隨時間的變化；當公司市值高於其 IPO 估值時，線條為黑色，低於 IPO 估值時，線條為紅色。同樣，藍色垂直線代表了更改許可證的時間，X 軸和 Y 軸保持不變。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;625&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-047c3f0c5b02ca0bad05585d58aba8e83d3.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;鑑於 Mongo 的增長數字使圖表出現很大偏差，還為每個公司提供了一個自由浮動 y 軸的版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;625&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c845c7fa097950f7d293c518ed71a3c7a6b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;結果表明：MongoDB 在許可證變更後，公市值大幅增長。Elastic 有所增長，但速度要温和得多。HashiCorp 一直舉步維艱，許可證變更後估值有所下降。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;淨利&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;值得注意的是，上述公司目前均未實現盈利。這意味着估值主要取決於未來現金流的預期增長。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;625&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4838795f4988c87782a525d27c8695597aa.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;總的來説，分析師認為，這些公司在許可證變更後收入有所增長，但增長率並沒有顯著變化。且公司估值結果參差不齊，&lt;strong&gt;從開源許可證轉向專有許可證與公司價值提升之間似乎沒有明顯的聯繫&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevclass.com%2F2024%2F09%2F09%2Fredmonk-no-clear-link-between-moving-from-open-source-to-a-proprietary-license-and-increasing-company-value%2F&quot; target=&quot;_blank&quot;&gt;DevClass &lt;/a&gt;指出，轉向更嚴格的許可證的最大因素是超大規模雲供應商以服務形式提供開源軟件產品，從託管中獲利，但開源軟件的供應方卻沒有直接受益。MongoDB 早在 2018 年就&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theregister.com%2F2018%2F10%2F16%2Fmongodb_licensning_change%2F&quot; target=&quot;_blank&quot;&gt;表示&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;，「一旦開源項目變得有趣或流行，雲廠商就很容易獲取所有價值，且不會給社區帶來任何回報。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;專注於開源數據庫管理器的 Percona 聯合創始人 Peter Zaitsev 發表觀點稱，為了增加利潤而放棄開源許可證的做法不會成功，因為已經有大量代碼採用了寬鬆式許可證 (Permissive Licenses)，而且這種做法往往會阻礙創新。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/312020/redmonk-software-licensing-changes-financial</link>
            <guid isPermaLink="false">https://www.oschina.net/news/312020/redmonk-software-licensing-changes-financial</guid>
            <pubDate>Sun, 15 Sep 2024 01:07:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源日報 | 「純血」鴻蒙 9 月底正式發佈；VirtualBox 7.1；OpenAI o1 的價值及意義；雲計算的底色；豐田的軟件危機</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.14&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ithome.com%2F0%2F795%2F867.htm&quot; target=&quot;_blank&quot;&gt;華為「純血」鴻蒙系統 HarmonyOS NEXT 將於 9 月底推出正式版&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p&gt;鈦媒體獨家獲悉，正在舉行的 2024 年中國國際服務貿易交易會（以下簡稱「服貿會」）一場論壇上，華為鴻蒙行業解決方案總經理陳欣欣透露，華為完全自主開發、原生安全、原生智能的華為「純血」鴻蒙系統 HarmonyOS NEXT 將於今年 9 月底推出正式版本。&lt;/p&gt; 
 &lt;p&gt;「從發佈第一個版本到今年的 9 月份，這個（9 月）月底我們會正式發佈 HarmonyOS NEXT，這一版本是完全獨立開發、獨立自主的，而且是不兼容安卓系統。」陳欣欣表示。&lt;/p&gt; 
 &lt;p&gt;陳欣欣透露，截至目前，HarmonyOS 操作系統自發布以來歷經 4 代，目前鴻蒙生態設備已經超 9 億台，開發者數量達到 254 萬，應用開發服務月調用次數達到 827 億次。同時，鴻蒙還發起「耀星計劃」，將投入超過 70 億元人民幣，持續激勵鴻蒙原生應用、技術服務、SDK 等創新，打造鴻蒙生態體系。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311859/virtualbox-7-1-released&quot;&gt;VirtualBox 7.1 發佈&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;甲骨文稱 VirtualBox 7.1 是一個重大更新 —— 該版本啓用了具有 「現代化的外觀和體驗」 的新 UI，並提供了 「基礎」 和 「專業」 兩種 UI 模式（「Basic」 &amp;amp; 「Expert」），用於配置不同的界面功能。&lt;/p&gt; 
   &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-82dc07347e1e4f4b5f1b5b6d172ee054503.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;p&gt;值得關注的變化包括：&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;基於 Qt 6 的全新現代化 UI&lt;/li&gt; 
    &lt;li&gt;在 Wayland 環境下使用剪貼板共享功能&lt;/li&gt; 
    &lt;li&gt;支持 Apple Silicon&lt;/li&gt; 
    &lt;li&gt;優化屏幕錄製功能&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311858/google-search-internet-archive-wayback-machine&quot;&gt;谷歌在搜索結果集成互聯網檔案館「Wayback Machine」&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.archive.org%2F2024%2F09%2F11%2Fnew-feature-alert-access-archived-webpages-directly-through-google-search%2F&quot; target=&quot;_blank&quot;&gt;根據互聯網檔案館 (Internet Archive) 的官方公告&lt;/a&gt;，谷歌已開始在搜索結果中加入互聯網檔案館「Wayback Machine」的鏈接，此舉旨在為結果加入&lt;strong&gt;歷史背景（historical context）&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;谷歌表示：「我們知道，包括研究社區在內，許多人都希望能夠查看網頁的先前版本。因此，&lt;strong&gt;我們在 「關於本頁」 功能中添加了互聯網檔案館 Wayback Machine 的鏈接&lt;/strong&gt;，以便人們能夠快速獲取歷史背景，並通過搜索輕鬆訪問這些有幫助的信息。」&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c6b1529b72aa77f2692f7c1b7d4ac302ff0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311854&quot;&gt;快手自研 Spark 向量化引擎發佈，性能提升 200%&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Blaze 是快手自研的基於 Rust 語言和 DataFusion 框架開發的 Spark 向量化執行引擎，旨在通過本機矢量化執行技術來加速 Spark SQL 的查詢處理。現已開源發佈，開源版本全面兼容 Spark 3.0~3.5。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;公告稱，在 TPC-DS 1TB 的測試中，Blaze 相較於 Spark 3.3 版本減少了 60% 的計算時間、Spark 3.5 版本減少了 40% 的計算時間，並大幅降低了集羣資源的消耗；此外，Blaze 在快手內部上線的數倉生產作業也觀測到了平均 30% 的算力提升，實現了較大幅度的降本增效。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Spark+Blaze 的架構設計原理如下圖：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;270&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5c54e6e0d5b68a9d45a23bb4289cb006543.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;307&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fb4879973f0e55873be39c07a7c7bb0643f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F720078255&quot; target=&quot;_blank&quot;&gt;OpenAI o1 的價值及意義&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     &lt;span style=&quot;background-color:#ffffff; color:#191b1f&quot;&gt;所以目前大模型的核心能力提升，聚焦到不斷通過合成數據等方式構造更多比例的邏輯推理數據上來。但是大部分邏輯推理數據的形式是&amp;lt;問題，正確答案&amp;gt;，缺了中間的詳細推理步驟，而 o1 本質上是讓大模型學會自動尋找從問題到正確答案的中間步驟，以此來增強複雜問題的解決能力。 OpenAI o1 提到了關於 RL 在訓練和推理時候的 Scaling law，並指出這與預訓練時候的 Scaling law 具有不同特性。&lt;/span&gt;
    &lt;/div&gt; 
    &lt;div&gt;
     &amp;nbsp;
    &lt;/div&gt; 
    &lt;div&gt;
     &lt;span style=&quot;background-color:#ffffff; color:#191b1f&quot;&gt;很明顯，如果 o1 走的是 MCTS 搜索技術路線，那麼把 COT 拆分的越細（增加搜索樹的深度），或提出更多的可能選擇（節點的分支增多，就是説樹的寬度越寬），則搜索空間越大，找到好 COT 路徑可能性越大，效果越好，而訓練和推理的時候需要算力肯定越大。看上去有着效果隨着算力增長而增長的態勢，也就是所謂的 RL 的 Scaling law。這其實是樹搜索本來應有之義，我倒覺得把這個稱為 RL 的 Scaling law 有點名不副實。&lt;/span&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;張俊林&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fttarticle%2Fp%2Fshow%3Fid%3D2309405078432919978029&quot; target=&quot;_blank&quot;&gt;硬件工程師設計出錯是什麼體驗？&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;曾經我認為硬件工程師是一種需要具備高度產品設計思維的職業，從大學畢業到職場。但最近我知道了一種硬件工程師的高效率工作方式，抄板和開源文件借鑑。&lt;/p&gt; 
     &lt;p&gt;當然，抄來的板子也不一定適合自己的方案，抄來再改也能鍛鍊工程師的基本功的，至於出錯一是看什麼項目，二是看板子的成本，三是看工程師的工作經驗。剛入職場的新手肯定也就應該是可以慶幸可以參與一次項目了，出錯了表示還有很高的提升空間，而且接觸的項目肯定也是不太重要的，有點經驗的硬件工程師也就改板子，只要不是特別重大的錯誤，在公司越有經驗技術過硬還真就沒啥事。&lt;/p&gt; 
     &lt;p&gt;而且現在抄板和開源，從 0 開始做項目真的很少，所以俺的體驗就是集中在和老闆和客户討論改板子時祈禱千萬不要給我那種大項目，我還是小白。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;捷配 PCB&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FOwWrh2lA3&quot; target=&quot;_blank&quot;&gt;o1 在醫療數據集（AgentClinic-MedQA）上表現出色&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;o1 在醫療數據集（AgentClinic-MedQA）上表現出色，遠遠超越了 GPT-4o。以後 AI 在處理複雜醫療信息、提供準確診斷、給出醫療建議以及推薦治療方案方面的快速進步將會持續加速。&lt;/p&gt; 
    &lt;p&gt;像診斷疾病、解讀醫學影像和制定治療計劃等醫療任務，未來人工智能系統也許能比人類醫生更快、更一致的方式完成。 &lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;寶玉 xp&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1862172703%2FOwX41DI1c%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;開芯紅完成了超億元種子輪融資，依託「香山」處理器 IP 打造 RISC-V 生態圈&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     北京開芯紅科技有限公司（#開芯紅# ）於近日成功完成了超億元種子輪融資，本輪融資由啓航投資旗下北科中發展啓航基金、芯創二期基金領投，多家知名投資機構跟投。開芯紅是北京市開源芯片研究院唯一的成果轉化項目平台，公司依託開芯院「香山」系列高性能處理器 IP，致力於打造以「香山 IP 核定製優化+先進工藝芯片設計服務」平台服務型公司，成為中國 RISC-V 產業的生態發動機。
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;div style=&quot;text-align:right&quot;&gt;
     &lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt; 
     &lt;strong&gt;集微網官方微博&lt;/strong&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_7517400647_1c0126e4705905oqf2.html&quot; target=&quot;_blank&quot;&gt;中國人工智能核心產業規模已近 6000 億元&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;中國工業和信息化部信息技術發展司副司長楊亞俊 13 日表示，中國初步構建了較為全面的人工智能產業體系，相關企業超過 4500 家，核心產業規模已接近 6000 億元人民幣，產業鏈覆蓋芯片、算法、數據、平台、應用等上下游關鍵環節。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;人民資訊&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_1826017320_6cd6d02802001c97o.html&quot; target=&quot;_blank&quot;&gt;北京發出首張「具身智能機器人食品經營許可證」：AI 大廚即將登場&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;考慮到智能機器人進入餐飲領域後的監管空白，海淀區市場監管局還在全國率先制定了「餐飲服務智能機器人」的管理規範和 47 項監管項目，確保機器人安全上崗。屆時，在後廚忙着炸薯條、炸雞塊、炒飯的將不再是真人廚師，而是具有 AI 功能的機器人大廚。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;IT 之家&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMjM5ODIzNTc2MA%3D%3D%26mid%3D2661036700%26idx%3D3%26sn%3D0e5048efc3619b6baed2e68534bac468%26chksm%3Dbc0e0c0ab89c113c5636c6cbf1d87d77729eff8dfdb672753c46d16be152f75d3958adbb9c4a%23rd&quot; target=&quot;_blank&quot;&gt;回看十五年，雲計算的底色&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#292934&quot;&gt;從突破資源限制的起點出發，如今的雲計算不僅帶來技術的革新，更對整個經濟模式和社會結構進行了的一次深刻變革，與此同時支撐着 AI 共同驅動數字經濟飛輪向前。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#292934&quot;&gt;鈦媒體&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.eeo.com.cn%2F2024%2F0914%2F687440.shtml&quot; target=&quot;_blank&quot;&gt;AI 視頻「卷」成紅海，創業公司還有機會嗎&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;AI 視頻的未來聽起來很美好，但這個領域，目前並沒有出現一個出圈的爆款應用。無論是 AI 視頻產品還是由 AI 生成的視頻作品，都像是少數影視專業人士的玩具，侷限在小圈子範圍內，始終未能像 ChatGPT（美國頭部 AI 應用）一樣在大眾層面獲得認可。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;經濟觀察網&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnew.qq.com%2Frain%2Fa%2F20240913A08WGT00%3Fsuid%3D%26media_id%3D&quot; target=&quot;_blank&quot;&gt;豐田的軟件危機：做了很多，一無所獲&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;與電動化轉型上的遲鈍形象不同，豐田很可能是最早投身車載操作系統的車企。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;種種跡象表明，豐田章男很早就意識到，谷歌和微軟這類科技公司會憑藉軟件優勢切入汽車市場，並動搖由豐田主導的利益分配規則。從操作系統到自動駕駛，豐田在過去二十年間從未缺席。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;遠川科技評論&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8crvEaVTy7w&quot; target=&quot;_blank&quot;&gt;北清華、南交大，孵出 10 家人形機器人頂流創企&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;機器人這一產業的研究早期集中在高校和科研機構，其中清華大學和上海交通大學是我國機器人研究歷程較為悠久的院校，因此這一波人形機器人創業熱潮中呈現出「北清華、南交大」的格局，人形機器人競賽的創業者中有 14 位來自清華大學和上海交通大學。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;智東西&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsemgrep%2Fsemgrep&quot; target=&quot;_blank&quot;&gt;semgrep/semgrep&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;348&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1bdaf1b89258aad4562cc9005c7078c95c4.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsemgrep%2Fsemgrep&quot; target=&quot;_blank&quot;&gt;https://github.com/semgrep/semgrep&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Semgrep 是一個快速、開源的靜態分析工具，用於在編輯、提交和 CI 時查找錯誤並執行代碼標準。Semgrep 在你的電腦或構建環境中分析本地代碼：默認情況下，代碼永遠不會上傳。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/morflameblog/blog/15316524&quot; target=&quot;_blank&quot;&gt;可觀測性與傳統監控的區別和聯繫&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;可觀測性認為，你的應用是如何運行的以及是否在正確的運行，應該主動地、默認地通過 Metrics、Logging、Tracing、Events 等多種數據維度實時的暴露出來，然後通過工具進行可視化、告警、分析和數據洞察。對應用內部狀態和行為的暴露，是系統設計之初就要考慮的重要組成，是系統功能不可分割的一部分。在可觀測體系下，「埋點」 是一種文化，應用的開發者承擔着主體責任，系統的維護者反而作為數據的使用方存在。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;233&quot; src=&quot;https://fcpub-1301667576.cos.ap-nanjing.myqcloud.com/flashcat/images/blog/o11y-vs-mon/2.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/311797&quot; target=&quot;_blank&quot;&gt;deepin 25 開發計劃大揭秘：新增功能與性能優化一覽&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：這個版本號是什麼規則，怎麼跳過 24 了，按照年份來的？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：立項在哪一年就是那一年的年份做版本&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：嵌入式開發用 deepin 還是用 Ubuntu ?&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：能不能優化一下分屏的支持，看看 windows 的分屏多好用，我一開始雙屏幕用 deepin 有好多問題，後來一咬牙換成 49 寸帶魚屏了，分屏卻不方便&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：幸好我把自己電腦換成 win10 了。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：25❎&amp;nbsp;23.1✅&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/311859/virtualbox-7-1-released&quot; target=&quot;_blank&quot;&gt;VirtualBox 7.1 發佈&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：各位不要急着更新，更新完之後 linux 虛擬機不支持 3D 加速了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：vagrant 什麼時候支持 7.1 我才更&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkfbplH38IgDfdw0o-f0z-A&quot; target=&quot;_blank&quot;&gt;PHP 程序員相親時請注意用詞&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：看吧，我就説不能寫 PHP&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：就説寫世界上最好的編程語言。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：應該解釋 PHP 是面向對象工作。再解釋工作時候，我的對象給同事用，同事的對象也給我用，PHP 是開放的，對象是共享的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：沒錯呀有許多黃色網站都是 php 寫的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：是個拒絕的好方法&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：眾所周知 php！=程序員&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311972</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311972</guid>
            <pubDate>Sat, 14 Sep 2024 11:00:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>可觀測性與傳統監控的區別和聯繫</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;什麼是可觀測性？&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;可觀測性（Observability）是一種軟件開發和系統構建的哲學，是對系統內部狀態及行為的度量和推斷能力，通常包括日誌、指標、鏈路追蹤等多個度量維度。也就是説，在軟件開發和運維領域中，可觀測性是指對於一個複雜的系統，能夠通過監控、日誌、指標、追蹤等手段，快速地發現、診斷、解決問題的能力。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;Observability 最早是起源於控制論的一個概念：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;In 1960, Kálmán introduced a characterization he called observability to describe mathematical control systems in his paper. In control theory, observability is defined as a measure of how well internal states of a system can be inferred from knowledge of its external outputs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;傳統監控的侷限&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;從核心出發點來講，傳統的監控和可觀測性，背後解決的是同樣的問題，就是及時、準確的掌握系統的運行狀況，提升對系統運行的控制能力。因此常有人講可觀測性之於監控是「&lt;strong&gt;新瓶裝舊酒&lt;/strong&gt;」，換湯不換藥。實則不然，隨着技術架構的演進，傳統監控的侷限愈發突出：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;側重於依賴「經驗主義」，應對「已知問題」&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;傳統監控，要預先知曉採集哪些指標，添加什麼樣的告警策略，定製什麼樣的儀表盤，以便發現某種類型的故障後，採用什麼樣的 Runbook 來應對。比如技術團隊根據過往經驗，知道一台服務器上打開的文件句柄數量不能太多，超過某個上限就會影響到網絡通信以及文件讀寫，因此我們會採集一個&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;node_filefd_allocated&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的指標，然後配置一個告警策略：當&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;node_filefd_allocated &amp;gt; 1000k&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;則觸發告警，同時我們會提前製作一個 Linux 主機 Dashboard，其中包含有&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;node_filefd_allocated&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的趨勢圖。準備好這些工作之後，接下來就是守株待兔，等待告警的觸發，值班的技術團隊就可以按照 Runbook 中載明的排查步驟，檢查是否有進程泄露文件句柄，或者是否有大量的網絡鏈接建立等等。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;經驗主義，總是有限的，無法預知可能發生的各種未知的故障&lt;/strong&gt;。因此在實際情況中，告警策略的完善往往靠「故障覆盤」來驅動，每次故障覆盤後，必定會有的一個改進項：繼續完善監控、加更多的告警。技術團隊總會處於一種對未知故障缺乏掌控的不安全的狀態中，產生焦慮感，反過來又會促使技術團隊添加更多的監控，久而久之，告警會越加越多，卻又永遠不夠，告警風暴就這樣產生了。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;告警驅動的傳統監控，缺乏對故障的全局感知&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在傳統監控中，告警充當着舉足輕重的作用。當使用傳統監控方式，發出某個告警之後，值班的技術團隊看到的只是一個孤立的」技術問題「，這個技術問題的影響面有多大，重要程度如何，是否需要立即處理，是否需要上升和協同，很難快速的做出判斷。某個」技術問題「是否重要，是否緊急，不取決於該技術問題本身的難易程度，也不取決於所涉及的服務器規模多寡，唯一的衡量標準是」對用户體驗產生的影響有多大「。&lt;strong&gt;使用傳統監控無法快速的評估某個告警事件和用户體驗之間的必然聯繫&lt;/strong&gt;，導致無法投入準確的應急處置資源，無法確定合理的應急響應時效，也無法和其他資源產生有效的聯動協同，最終使得穩定性保障工作效率低下。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;傳統監控認為，系統的開發者和系統的維護者，職責是相對分割的，導致監控以外掛形式為主&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;系統在設計之初，開發者的重心在於完成必備的業務邏輯，對於自身運行狀態的暴露，並沒有考慮的很完善甚至有時候都沒有考慮。大家可能會經常遇到，做的好的開發者可能還會打印較為詳細的日誌，做的不好的，連日誌也打的不全，更不必説提供主動暴露系統狀態的 Metrics 接口或者為實現 Tracing 進行埋點了。一旦系統到了上線運行階段，維護人員接手後，往往只能開啓「外掛」模式，通過寫各種各樣的腳本，去探測進程是否存在、去分析匹配日誌中是否有關鍵的錯誤字段。如果要進一步統計系統的訪問量、訪問延遲、資源消耗等等，就會更加被動。&lt;strong&gt;「外掛」往往是傳統監控數據採集的特徵&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;傳統監控面向的通常是基礎設施，Metrics 是傳統監控的基礎&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;傳統監控面向基礎設施，基礎設施的變化較慢，且變化帶來的結果相對可預測。Metrics 類型的監控指標，具有采集存儲成本低、簡單直觀、易於聚合計算的特點，因此在過去的二三十年裏，基於 Metrics 為基礎，出現了各種各樣的採集器、時序數據庫、可視化工具、告警工具等，基於前面提到的」經驗主義「，尚能應付面向基礎設施的穩定性保障工作。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;傳統監控工具發展的三個階段&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;階段 1：Metrics 監控之&lt;em&gt;互聯網大流行前&lt;/em&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;互聯網大流行前，擅長於局部場景，部分工具到現在仍然被廣泛使用&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img src=&quot;https://fcpub-1301667576.cos.ap-nanjing.myqcloud.com/flashcat/images/blog/o11y-vs-mon/1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Cacti：最悠久的監控系統之一，2001 年 9 月，一個名叫 Lan Berry 的高中生，當時他還在為一家小的 ISP 廠商工作，為了更好地監控網絡質量，開發了 Cacti 的第一個版本，基於 RRDtool，提供更友好的使用體驗。&lt;/li&gt; 
  &lt;li&gt;Nagios：Nagios 可謂是早期告警方向事實上的工業標準，可以用來監控主機和網絡基礎設施，以及各種應用服務。在監控對象出現問題時，及時發送郵件或者短信通知相關人員；當問題解決後，發送恢復信息。一段時間的主流，後來以難用聞名。&lt;/li&gt; 
  &lt;li&gt;Ganglia： UC Berkeley 發起的一個開源集羣監視項目，設計用於測量數以千計的節點。主要是用來監控系統性能，如：cpu 、mem、硬盤利用率， I/O 負載、網絡流量情況等，至今仍然在 Hadoop 監控領域流行。&lt;/li&gt; 
  &lt;li&gt;RRDtool：在時間序列數據（time-series data）的存儲、展示方面，其獨創的 round-robin database 數據存儲格式，曾經是事實上的時序數據存儲工業標準。包括 Cacti、MRTG、Collectd、Ganglia、Zenoss 等系統，都是採用 RRDtool 的格式來存儲數據，以及使用 RRDtool 的 Graph 工具來繪圖。&lt;/li&gt; 
  &lt;li&gt;Collectd：定位是收集和傳輸數據。在告警方面不是 Collectd 的設計初衷，不過它也支持一些簡單的閾值判定，併發送告警信息。要支持更高級的一些告警需求，Collectd 可以和 Nagios 配合使用。&lt;/li&gt; 
  &lt;li&gt;StatsD：最早是 2008 年 Flickr 公司用 Perl 寫的，StatsD 其實就是一個監聽 UDP（默認）或者 TCP 的守護程序，根據簡單的協議收集 statsd 客户端發送來的數據，聚合之後，定時推送給後端，如 graphite 和 influxdb 等，再通過 grafana 等展示。&lt;/li&gt; 
  &lt;li&gt;Graphite：一個開源實時的、顯示時間序列度量數據的圖形系統。Graphite 並不收集度量數據本身，而是像一個數據庫，通過其後端接收度量數據，然後以實時方式查詢、轉換、組合這些度量數據。Graphite 支持內建的 Web 界面，它允許用户瀏覽度量數據和圖。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;階段 2：Metrics 監控之&lt;em&gt;互聯網快速發展期&lt;/em&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;互聯網快速發展的時代，監控往一體化方向發展，注重體驗的提升&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h4_6&quot;&gt;&lt;/span&gt; 
&lt;h4&gt;Zabbix&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;作為一款企業級分佈式監控系統，功能齊全，用户體驗良好，文檔完善，API 強大，存儲可以對接主要的 SQL 接口數據庫，適合於中小規模的公司或者團隊使用。Zabbix 由 Alexei Vladishev (阿列克謝.弗拉迪謝夫、拉脱維亞人）創建，目前由其成立的公司 —— Zabbix SIA（一家總部位於拉脱維亞里加的軟件公司） 積極的持續開發更新維護， 併為用户提供技術支持服務。&lt;/p&gt; 
&lt;span id=&quot;OSC_h4_7&quot;&gt;&lt;/span&gt; 
&lt;h4&gt;Open-Falcon&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;小米技術團隊於 2015 年開源的一款互聯網企業級監控系統，重在解決日益增長的監控數據量和監控系統的容量限制之間的矛盾。Open-Falcon 在架構設計上，一個最關鍵的考量點就是「&lt;em&gt;如何做到水平擴展&lt;/em&gt;」，底層存儲採用的是 RRDtool 標準。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在 Zabbix 被廣泛使用的時期，Open-Falcon 為何能夠在中國獲得重要影響力：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open-Falcon 的初衷就是解決 zabbix 在大數據量情況下無法擴展伸縮的問題；&lt;/li&gt; 
 &lt;li&gt;Open-Falcon 引入了標籤概念，該特性讓監控數據的分析變得非常靈活而強大，是下一代監控主要特點之一；&lt;/li&gt; 
 &lt;li&gt;Zabbix 的用户體驗在當時不太符合中國工程師的習慣；&lt;/li&gt; 
 &lt;li&gt;Open-Falcon 藉助小米在互聯網公司的影響獲得快速推廣；&lt;/li&gt; 
 &lt;li&gt;Zabbix 基於 C 語言開發，而 Open-Falcon 基於 Go 語言開發，在二開上更為友好；&lt;/li&gt; 
 &lt;li&gt;Open-Falcon 的中文文檔和支持能力；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;階段 3：Metrics 監控之&lt;em&gt;雲原生時代&lt;/em&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;color:#333333&quot;&gt;&lt;strong&gt;Prometheus 成為時代的王者&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h4_9&quot;&gt;&lt;/span&gt; 
&lt;h4&gt;Prometheus&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;由前 Google 工程師從 2012 年開始在 Soundcloud 以開源軟件的形式進行研發的系統監控和告警工具包，產品設計源於 Google 的 Borgmon。Prometheus 的開發者和用户社區非常活躍，Prometheus 於 2016 年 5 月加入 CNCF 基金會，成為繼 Kubernetes 之後的第二個 CNCF 託管項目。&lt;/p&gt; 
&lt;span id=&quot;OSC_h4_10&quot;&gt;&lt;/span&gt; 
&lt;h4&gt;Nightingale&lt;/h4&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;夜鶯 (Nightingale) 是一款開源雲原生監控工具，是中國計算機學會接受捐贈並託管的第一個開源項目，在 GitHub 上有 8000 顆星，有數千家企業用户使用。夜鶯集合了 Prometheus 和 Grafana 的優點，你可以在 UI 上管理和配置告警策略，也可以對分佈在多個 Region 的指標、日誌、鏈路追蹤數據進行統一的可視化和分析。&lt;/p&gt; 
&lt;span id=&quot;OSC_h4_11&quot;&gt;&lt;/span&gt; 
&lt;h4&gt;高性能時序數據庫代表&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prometheus：Prometheus 自帶的高性能單機存儲數據庫；&lt;/li&gt; 
 &lt;li&gt;InfluxDB：支持按標籤存儲查詢，該領域最著名的時序數據庫之一；&lt;/li&gt; 
 &lt;li&gt;TDengine：國內最著名的開源時序數據存儲之一，面向 IoT 領域，表結構存儲，支持 SQL 查詢；&lt;/li&gt; 
 &lt;li&gt;TimescaleDB：表結構存儲的代表，支持 SQL 查詢；&lt;/li&gt; 
 &lt;li&gt;VictoriaMetrics：被廣泛應用的標籤存儲時序數據庫，和 prometheus 做了無縫兼容；&lt;/li&gt; 
 &lt;li&gt;M3DB：Uber 開發開源，高性能可擴展時序數據庫，支持按標籤存儲查詢，兼容 prometheus，擴展性比 VictoriaMetrics 好，但運維更復雜；&lt;/li&gt; 
 &lt;li&gt;Mimir：Grafana 於 2022 年 3 月 30 日發佈的時序數據存儲，完全兼容 prometheus 生態；&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_12&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;可觀測性的特點&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;可觀測性認為，你的應用是如何運行的以及是否在正確的運行，應該主動地、默認地通過 Metrics、Logging、Tracing、Events 等多種數據維度實時的暴露出來，然後通過工具進行可視化、告警、分析和數據洞察。對應用內部狀態和行為的暴露，是系統設計之初就要考慮的重要組成，是系統功能不可分割的一部分。在可觀測體系下，「埋點」是一種文化，應用的開發者承擔着主體責任，系統的維護者反而作為數據的使用方存在。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img src=&quot;https://fcpub-1301667576.cos.ap-nanjing.myqcloud.com/flashcat/images/blog/o11y-vs-mon/2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;以終端用户發起對服務端的一次請求為例，在該請求的整個生命週期內，儘可能多的細節都應該被記錄下來，以便在未來的某個時刻用於 troubleshooting，這些細節數據可能包括：請求 ID（request_id）、請求頭（headers）、請求參數（parameters）、請求執行的時間（duration_time）、對下游的 rpc 調用（rpc_calls)、執行 rpc 調用的耗時、rpc 調用的結果、環境變量、元信息（metadata）等等。在可觀測體系下，這些數據都應該被實時的記錄下來，並以結構化的形式存儲。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;相較於傳統監控關注基礎設施，可觀測性強調面向」Application「。隨着雲原生架構和微服務模型的普及，現代化的應用出現了一些新的特點：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;相比單體應用，技術團隊面臨着更多的服務需要管理；&lt;/li&gt; 
  &lt;li&gt;很多服務之間都是松耦合，而且像雲數據庫、雲存儲、第三方 API 等服務，都不處於你的掌控之下；&lt;/li&gt; 
  &lt;li&gt;代碼的發佈和變更，頻率越來越高，持續集成、持續發佈成為主流；&lt;/li&gt; 
  &lt;li&gt;基礎設施動態化，容量也在動態的彈性伸縮；&lt;/li&gt; 
  &lt;li&gt;現代化的系統架構下，可能出現故障的點位越來越多」，長尾問題「出現的頻率也越來越高，難以定位和分析；&lt;/li&gt; 
  &lt;li&gt;研發工程師更多的參與到系統的運行維護工作中來；&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;span id=&quot;OSC_h3_13&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;OpenTelemetry&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;也被稱為 OTel。是一個供應商無關的開源可觀測性框架，用於測量、生產、收集、導出可觀測數據。可觀測數據主要包含 traces 鏈路、metrics 度量和 logs 日誌。使用 OpenTelemetry 後，可觀測的三要素日誌、鏈路追蹤、指標，將從過去的相互獨立，變的關聯性更強，方便我們進行更快速的問題定位：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;OTel&quot; src=&quot;https://fcpub-1301667576.cos.ap-nanjing.myqcloud.com/flashcat/images/blog/o11y-vs-mon/3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h3_14&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;Flashcat&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflashcat.cloud%2F&quot; target=&quot;_blank&quot;&gt;Flashcat&lt;/a&gt;是一個兼容 OpenTelemetry 的可觀測性平台，構建了一個數據、平台、場景打通的一體化可觀測方案，具有以下四個特點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;一體化&lt;/strong&gt;：從業務到應用到基礎實施，打通 Metrics、Logging、Tracing、Event，是一個立體的監控產品體系和解決方案。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;統一管理&lt;/strong&gt;：採集適配雲原生、公有云、物理機/虛擬機、混合雲等環境。產品層實現多環境、多集羣的監控統一管理。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;集成融合&lt;/strong&gt;：可集成企業內部已有的可觀測配套系統，無需推倒重來，串聯打通數據，發揮協同定位的價值。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;引導定位&lt;/strong&gt;：結合服務穩定性保障的理論實踐，從上往下引導用户按照最佳實踐，層層下鑽，加速故障處理。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;你可以通過 Flashcat 平台，有效改善以下問題：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;希望整個公司統一用一個工具，就可以支持指標、日誌、鏈路追蹤數據的採集、可視化、告警，免去搭建和維護多套 Prometheus、Zabbix、Grafana、ELK、Jaeger 的工作量。&lt;/li&gt; 
 &lt;li&gt;如果有在用多雲，並且在多個公有云監控控制枱來回切換不方便，希望監控數據、監控視圖都是統一的，有更一致的用户體驗，同時降低給所有的工程師開通公有云控制枱權限帶來的安全隱患。&lt;/li&gt; 
 &lt;li&gt;告警太多，工作老被打斷， 可以利用我們提供的 OnCall 值班平台（類似於 PagerDuty），支持告警聚合、降噪、認領、升級、排班，可以在飛書、釘釘、企微中接收和處理告警。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_15&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;最易被忽視的&lt;em&gt;OnCall&lt;/em&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;在傳統監控領域，OnCall 是最容易被技術團隊忽視的一個概念，運維和研發人員往往面臨以下典型的困擾：&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;技術團隊每天接收到大量的告警。&lt;/li&gt; 
  &lt;li&gt;很多告警長時間無響應，長期無人問津。&lt;/li&gt; 
  &lt;li&gt;告警與告警之間缺乏關聯性，處理效率低下。&lt;/li&gt; 
  &lt;li&gt;告警處理缺乏協同，處理過程不透明，信息難以共享，知識難以沉澱。&lt;/li&gt; 
  &lt;li&gt;很多告警並未準確反應實際情況，無謂的消耗技術團隊精力。&lt;/li&gt; 
  &lt;li&gt;客户/用户往往先於技術團隊發現故障，客户滿意度持續走低。&lt;/li&gt; 
  &lt;li&gt;無法量化的衡量應急響應的現狀和效率，無法制定出改進和優化路線。&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;img alt=&quot;OnCall&quot; src=&quot;https://fcpub-1301667576.cos.ap-nanjing.myqcloud.com/flashcat/images/blog/o11y-vs-mon/4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;一個好的 OnCall 工具，能夠大幅提升運維和研發人員的效率和幸福感：&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;告警聚合收斂&lt;/strong&gt;：解決告警風暴問題，按照業界的實踐，壓縮率為 70%~80%。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;告警全生命週期管理&lt;/strong&gt;：告警認領、轉派、升級，解決告警不能及時處理、告警漏處理、告警散落在各個監控系統的問題。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;告警排班&lt;/strong&gt;：引入值班表，以排班的形式高效的 OnCall，減少疏忽和失誤，減少告警對非值班 team 的打擾，讓團隊可持續發展。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;故障管理&lt;/strong&gt;：相關的告警聚合為故障，基於故障的告警處理協作模式，解決跨團隊協同不暢的問題。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;ChatOps 交互&lt;/strong&gt;：在電話、短信之外，通過各種 IM 觸達通知技術團隊，在 IM 中交互式的響應和處理告警。&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;沒有度量就沒有改進&lt;/strong&gt;，在實際工作中，運維負責人表面看到的是告警太多、團隊成員疲於奔命，但苦於看不清告警處理的工作量，沒法規劃協調補充人力，更嚴重的是看不清優化告警的方向，導致情況持續惡化，最終團隊散了，故障頻發。所以在告警處理的領域，尤其需要「可觀測」，推薦關注下面 5 個關鍵的 OnCall 度量指標：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;strong&gt;降噪比&lt;/strong&gt;：即告警的壓縮比，通過算法、規則將眾多相關的告警聚合後，再通知到值班人員。告警聚合能有效降低告警風暴，減少值班人員的工作量，提高信息處理的效率（&lt;code&gt;該指標越高越好&lt;/code&gt;）。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;響應比&lt;/strong&gt;：被認領的告警佔所有告警的比例。在告警管理領域，需要響應或者認領的告警，才是有用的告警，因此通過統計和觀察「響應比「，能整體的評估告警是否足夠有效和有用，並持續的推動提升告警」響應比「（&lt;code&gt;該指標越高越好&lt;/code&gt;）。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;告警總量&lt;/strong&gt;：一段時間窗口內產生的告警數量。過高的告警總量，意味着值班的壓力越大，對技術團隊注意力的幹擾越多，潛在的意味着告警的噪音可能也過大，因此過多的告警，會讓整個系統處於不可運維的狀態，應該該盡力的降低告警總量，譬如採用基於 SLO 的告警，就可以答覆降低該指標（&lt;code&gt;該指標越低越好&lt;/code&gt;）。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;MTTA（平均響應或認領用時）&lt;/strong&gt;：從告警發生到值班人員響應或者認領的時間間隔。越快的 MTTA，標誌着越高的告警處理效率，潛在的代表着越高的服務穩定性。通過 MTTA 我們可以有效的度量團隊的工作壓力，以便決策合適的資源投入，確保團隊始終處於可持續發展的狀態（&lt;code&gt;該指標合適就好&lt;/code&gt;）。&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;MTTR（平均恢復或解決用時）&lt;/strong&gt;：從告警發生到問題解決的時間間隔。越快的 MTTR，往往意味着團隊擁有更先進的觀測技術、更強大的基礎設施平台、更熟練的工作技能、以及對業務系統有更深入的理解（&lt;code&gt;該指標越快越好&lt;/code&gt;）。&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;&lt;strong&gt;兵器推薦：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;國外推薦採用&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpagerduty.com%2F&quot; target=&quot;_blank&quot;&gt;PagerDuty&lt;/a&gt;，PagerDuty 是全球範圍內 OnCall 產品的領導者。&lt;/li&gt; 
 &lt;li&gt;國內推薦採用&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflashcat.cloud%2Fproduct%2Fflashduty&quot; target=&quot;_blank&quot;&gt;FlashDuty&lt;/a&gt;，FlashDuty 是開源監控工具&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale&quot; target=&quot;_blank&quot;&gt;夜鶯&lt;/a&gt;背後的開發者團隊推出的 OnCall 產品，相比 PagerDuty 對國內的各種監控工具、IM 工具適配性更好，產品體驗也更簡潔。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_16&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;可觀測性的技術趨勢&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在可觀測性三大支柱在外，Continuous Profiling 作為一種持續性能分析技術，應用也越來越廣泛。Continuous Profiling 用於實時監測和分析應用程序的性能特徵。它通過不間斷地採集應用程序的性能數據，例如函數調用、內存使用情況、CPU 利用率等，以實現對應用程序性能的全面瞭解。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;eBPF（Extended Berkeley Packet Filter）是 Linux 內核的擴展功能，用於在內核層面執行安全、性能和觀測等任務。eBPF 技術允許用户在不修改內核代碼的情況下，通過安全的、可編程的虛擬機在內核中注入代碼。它能夠捕獲和處理系統的事件，例如網絡數據包、系統調用、文件訪問等，並進行實時分析或轉發，從而實現更高級的網絡分析、安全監控和性能優化等功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; text-align:left&quot;&gt;在可觀測性領域，Continuous Profiling 和 eBPF 技術都為開發人員和運維團隊提供了更加全面、實時和深入的監控能力。原文：《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflashcat.cloud%2Fblog%2Fobservability-vs-monitoring%2F&quot; target=&quot;_blank&quot;&gt;傳統監控與可觀測性的區別與聯繫&lt;/a&gt;》&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/morflameblog/blog/15316524</link>
            <guid isPermaLink="false">https://my.oschina.net/morflameblog/blog/15316524</guid>
            <pubDate>Sat, 14 Sep 2024 08:50:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>字節跳動開放計算最佳實踐，亮相 2024 開放計算中國峯會</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;img height=&quot;170&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c64b6e0967898ff29fd8cd7feb8253630cd.png&quot; width=&quot;900&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;8 月 8 日，2024 開放計算中國峯會在北京舉行，&amp;nbsp;全球開放計算組織 OCP 基金會首次頒發了開放計算最佳創新獎、開放計算最佳實踐獎和開放計算生態貢獻獎，用以表彰在開放計算領域做出卓越貢獻的社區成員。&lt;strong&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;字節跳動在本次大會中榮獲開放計算最佳實踐獎&lt;/span&gt;&lt;/strong&gt;，字節跳動開源委員會 TOC 戰略評審組委員、STE 團隊負責人張宇受邀接受 CSDN 採訪，分享了相關的開放計算實踐經驗。以下為本次採訪報道的內容。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#888888&quot;&gt;文章來源｜字節跳動 STE 團隊&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;開放計算作為一種數據中心產業協同創新的方式，經過多年發展，匯聚了廣泛的計算服務提供商、用户，為實現 IT 基礎設施在產品、規範、知識產權等方面的最大化的開放共享而共同努力，成果卓著。這其中，開放計算組織功不可沒。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;而隨着人工智能、大模型的爆發，傳統的計算正在朝着多模態、多元算力等智能計算融合發展，如何進一步實現生態協同、開放共贏，對開放計算提出了新的要求。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;8 月 8 日，由兩大開放計算組織 OCP（Open Compute Project）與 OCTC（開放計算標準工作委員會）聯合主辦的主題為「開放協同：協作、智慧、創新」的 2024 開放計算中國峯會在北京舉行，以期與全球開放計算領域的社區和企業領袖、技術專家以及行業先鋒，共同探討新時代開放計算技術的最新進展和實踐經驗，促進生態融合、智能化實踐和技術創新。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;為了表彰企業在開放計算領域的探索和實踐，OCP 首次頒發了年度開放計算最佳實踐獎。字節跳動因其在雲固件、OpenBMC、Universal Payload、液冷和整機櫃等多個領域的創新實踐，特別是&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;&lt;span&gt;在雲固件生態建設方面貢獻突出&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;，自 2021 年以來，已部署超過 1 萬台設備，並積極參與 OCP OSF 工作組的創建，完成多平台雲固件方案支持，獲得&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;開放計算最佳實踐獎&lt;/strong&gt;&lt;/span&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;720&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6cb587d8221292e22d97f67ce258722fc6a.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;在人工智能時代，業務對於底層計算、存儲、網絡、數據中心等方面的需求與日俱增，抖音、今日頭條、豆包等上層業務能夠穩定運行，高效、穩定、可靠的 IT 基礎設施功不可沒。這其中，開放計算相關的技術創新佔得一席之地。據瞭解，字節跳動一直致力於開放計算領域的創新和實踐，並在多個領域取得了顯著的成績，不僅提升了公司的業務效率，同時也為與業界提供了有益的方案和實踐經驗參考。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在服務器固件方面，字節跳動分別在 2021 年和 2023 年發佈了新一代的固件解決方案 Cloud Firmware 1.0 和 2.0，成為全球第一個在 x86 服務器中產品化 coreboot、LinuxBoot 固件解決方案的廠商，目前 3.0 正在開發中，支持更多架構平台。從 2020 年開始，在 OCP 社區和合作夥伴們共同探討和完善 Cloud Firmware 解決方案，共同打造更加開放、簡單易用、融合的&lt;/span&gt;固件新生態。Cloud Firmware 於 2022 年底被 OCP-OSF 接受為新一代固件解決方案並推廣，STE 團隊固件架構師葛士建也在 2023 年成為 OCP-OSF Project Leader，主導和推進固件開源工作。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;另外，通過擁抱開源創新和穩步迭代上量的策略，基於 OpenBMC 開源社區的原生方案，逐步開發形成了具備大批量工程交付成熟度的 BMC 產品。從 2021 年到現在，已經實現從 DPU 形態支持到 server 產品化全量覆蓋，並逐步上量。在 2024 年，進一步進行架構迭代，支持更廣泛的芯片平台和更全面的可觀測能力，為多元算力基礎設施提供了靈活、全面的運維管理解決方案。與此同時，積極貢獻社區生態，共向 OpenBMC 社區提交 310+ patches，取得了良好的社區認可。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;字節跳動不僅在服務器硬件方面開展創新實踐，而且隨着公司業務的擴展，對底層數據中心提出了更高的要求。與此同時，還在系統虛擬化、Linux 內核等方面持續進行創新和優化，以更好地滿足業務對數據中心的需求，達成提升效率、節省能耗、降低成本的目標。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;在系統虛擬化方面&lt;/strong&gt;，自主研發了面向雲原生場景的下一代高性能設備虛擬化框架 VDUSE（vDPA Device in Userspace），該框架能夠為容器和虛機提供統一的 I/O 虛擬化層。目前在雲原生場景下，容器/安全容器/虛機等計算資源側在實現分佈式塊/fs 等設備接入時依賴的接入方案多種多樣，無論是性能還是在高可用熱升級層面都面臨很多可用性/可靠性的挑戰。基於這個背景 STE 團隊與存儲團隊緊密合作完成了虛機/容器等資源的統一 VDUSE 接入方案，實現了高性能、高可用以及有狀態熱升級的核心特性支持，同時 VDUSE 方案也已經被合入到 Kernel / Qemu 等上游社區，作為 vDPA 用户態實現方案豐富了整體虛擬化設備接入的方案生態。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;在操作系統內核方面&lt;/strong&gt;，STE 團隊一直深耕在 Linux 內核的內存管理領域，一方面通過內核軟件層面的優化節省出更多的可用內存，另一方面降低內存緊張、跨節點內存訪問、內存鎖競爭等問題導致的系統穩定性風險。而在內存節省方面，除了之前已經被社區接納的 HVO（HugeTLB Vmemmap Optimization，一種內核內存去重技術方案），還在開發 PTE（Page Table Entry）頁面優化，在比較極端的情況下單機可以節省 100GB 的用户態頁表內存，目前方案和代碼已貢獻給 Kernel 社區。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;之所以能取得這樣的成績，在張宇看來，與公司的開放生態（開源）理念息息相關。「&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;字節跳動的開源理念是激發創造、擁抱開源，看重參與開源的長期價值，願與全球合作伙伴共同實現生態繁榮&lt;/strong&gt;&lt;/span&gt;」，張宇表示。&lt;/p&gt; 
&lt;p&gt;據瞭解，字節跳動的開源歷程經歷了使用開源、貢獻開源、主動開源三個階段。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;使用開源&lt;/strong&gt;&lt;/span&gt;：早期，公司內部積極採用開源技術來快速構建基礎設施技術中台能力，幫助公司解決基礎設施問題，加速核心業務迭代，推動了抖音、今日頭條等業務的發展。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;貢獻開源&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;：在使用開源過程中，逐步開始結合自身業務場景對相應的開源技術進行了優化改進，並反饋到社區中參與開源貢獻。例如雲固件 Cloud Firmware 就是針對固件技術的優化改進並反饋給 OCP 社區的，並由此成為開放計算領域的新一代固件的解決方案，在社區裏推廣開來。目前，雲固件 Cloud Firmware 已歷經兩次產品化迭代——LinuxBoot、coreboot。為了推動雲固件生態的繁榮，字節跳動於 2023 年聯合英特爾、浪潮信息、OCP-OSF 、OSFF 社區舉辦了雲固件沙龍交流會，推進雲固件領域的技術發展與合作共贏。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;主動開源&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;：而當貢獻累積越多之後，公司開始嘗試主動系統性地將自身的技術形成一個個項目，回饋給開源社區。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;此外，從與張宇的採訪過程中瞭解到，&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;字節跳動的企業文化注重開放、包容&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;，鼓勵員工發揮創造力，激發員工的奇思妙想。公司非常鼓勵大家進行技術創新，參與開源建設、行業技術交流，同時也會自行主辦一些技術會議，促進行業的交流合作、技術生態的發展，前面提到的雲固件沙龍交流會就是一個例子。在這樣的企業文化指引下，字節跳動技術創新實踐與開源社區形成了正向循環，在開放計算領域也由此碩果累累。因此，在本次開放計算大會中獲得評委的一致認可，獲得開放計算最佳實踐獎。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;當前，大模型引領的智能時代，正在重構人工智能基礎設施，數據中心迎來算力、網絡、存儲、管理、能效的全向 Scale 創新挑戰，需構建全球化的開放協作平台，合力解決上述重大問題，全面優化人工智能基礎設施。已走過參與開源，正在貢獻開源、主動開源的字節跳動，將繼續加大在開放計算領域的投入，與行業夥伴共同推動開放計算技術的發展，為用户提供更加高效、高質量的計算服務。同時也將積極參與開放計算標準的制定，為行業的規範化和可持續發展貢獻力量。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;未來，隨着技術的不斷進步和業務需求的持續增長，開放計算將在更多領域發揮重要作用。字節跳動將緊跟時代步伐，不斷探索創新，為開放計算的發展注入新的活力。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;color:#0654ea&quot;&gt;&lt;strong&gt;關於 STE 團隊&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;&lt;strong&gt;字節跳動 STE 團隊&lt;/strong&gt;&lt;/span&gt;（&lt;span&gt;System Technologies&amp;amp;Engineering，系統技術與工程&lt;/span&gt;），一直致力於操作系統內核與虛擬化、系統基礎軟件與基礎庫的構建和性能優化、超大規模數據中心的系統穩定性和可靠性建設、新硬件與軟件的協同設計等基礎技術領域的研發與工程化落地，具備全面的基礎軟件工程能力，為字節上層業務保駕護航。同時，團隊積極關注社區技術動向，擁抱開源和標準，歡迎更多同學加入我們，一起交流學習。掃描下方二維碼瞭解職位詳情，歡迎大家投遞簡歷至&lt;span style=&quot;color:#0052ff&quot;&gt;huangxuechun.hr@bytedance.com&lt;/span&gt;&lt;span style=&quot;color:#00c8d2&quot;&gt;&amp;nbsp;&lt;/span&gt;、&lt;span style=&quot;color:#0052ff&quot;&gt;wangan.hr@bytedance.com&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311920</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311920</guid>
            <pubDate>Sat, 14 Sep 2024 08:23:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>李飛飛創辦的 World Labs 獲 2.3 億美元融資</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;被譽為「AI 教母」的斯坦福大學教授李飛飛已經為她的新創業公司 World Labs 籌集了 2.3 億美元，投資者包括 Andreessen Horowitz、NEA 和 Radical Ventures。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;科技媒體&amp;nbsp;TechCrunch 曾在八月份報道，World Labs 的估值超過 10 億美元，其融資是在幾個月內分兩輪融資完成的。World Labs 成立於今年 4 月，在四個月內就從創始公司成長為獨角獸。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;371&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bcf34c9f750cb9da0eda82b2e5e2b5ef382.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;World Labs&amp;nbsp;希望在 2025 年推出首款產品，旨在構建能夠理解 3D 世界並與之互動的 AI 模型。World Labs 正在開發所謂的「large world models」，供藝術家、設計師、開發人員和工程師等專業人士使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Andreessen Horowitz 的普通合夥人 Martin Casado 透露，World Labs 的客户可能包括遊戲公司或電影製片廠。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311905/world-labs-230m-funding</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311905/world-labs-230m-funding</guid>
            <pubDate>Sat, 14 Sep 2024 07:21:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>java ORM 神器 mybatis-mp，新框架、新設計、更好用！！！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;h1&gt;官網 ：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;https://mybatis-mp.cn&lt;/a&gt;&lt;/h1&gt; 
&lt;h1&gt;為什麼推薦 mybatis-mp ？：&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;mybatis-mp 是一款超級強大的 ORM 框架&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;1：可多表 join（不再只能單表了）&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;2：良好 resultMap 結果映射能力（不怕映射錯誤了）&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;3：良好的擴展能力：orm+sql 模板 （讓 ORM 框架不再死板，擴展性極強）&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;4：就算 xml 也不用再增加什麼插件了，自帶 xml 分頁&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;5：強大的各種數據庫適配，可在一套代碼中，實現多個數據庫適配；真正的 ORM hibernate 都做不到&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;6：極簡的 api 設計，讓開發者，不再迷糊&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;7：還很多很多獨特優良的設計，只有前往體驗，才能感受了；不相信可以試試！！！&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;span&gt;&amp;nbsp;1.&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;單表 +@Fetch 註解 + fetchFilter 方法&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@Data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ResultEntity&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;) &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;SysUserVo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Integer id;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String userName;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String password;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Integer roleId;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; LocalDateTime create_time;

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@Fetch&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(source = SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;property&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;= &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;roleId&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, target = SysRole&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;targetProperty&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;= &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; List&amp;lt;SysRoleVo&amp;gt; sysRoles;

}&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List&amp;lt;SysUserVO&amp;gt; list = QueryChain.of(sysUserMapper)
        .from(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .fetchFilter(SysUserVO::getRoles,where-&amp;gt;where.eq(SysRole::getStatus,&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;))
        .returnType(SysUserVO&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .list();&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;fetchFilter 方法是對 @Fetch 註解的增強，沒有特殊要求一般，可忽略&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;2. 單表查詢&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUser sysUser = QueryChain.of(sysUserMapper)
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getId, 1)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getUserName,&#39;admin&#39;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .get();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3.VO 映射&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@Data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;@ResultEntity&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(SysUser.class)
public class SysUserVo {

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;Integer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;id&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;userName&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//字段名字不一樣時&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    @&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;ResultEntityField&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(property = &lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;pwd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;;

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;SysUserVO sysUserVO = QueryChain.of(sysUserMapper)
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getId, 1)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .e&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;&lt;span style=&quot;color:#032f62&quot;&gt;q(SysUser::getUserName,&#39;admin&#39;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .returnType(SysUserVO.class)
        .list();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4. join 查詢&lt;/h2&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@Data&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ResultEntity(SysUser.class)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;public&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;SysUserVo&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;{

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Integer id;

    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String userName;

    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//字段名字不一樣時&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@ResultEntityField(property = &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span&gt;&quot;password&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;private&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; String pwd;
    
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//映射一個對象 1 對 1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@NestedResultEntity(target = SysRole.class)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    prviate SysRole sysRole;
    
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;//映射多個對象 1 對多&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    &lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;&lt;span style=&quot;color:#6a737d&quot;&gt;@NestedResultEntity(target = SysRole.class)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
    prviate List&amp;lt;SysRole&amp;gt; sysRoles;

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List&amp;lt;SysUserRoleVO&amp;gt; list = QueryChain.&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;of&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(sysUserMapper)
        .&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;from&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .join(SysUser&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;, &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;SysRole&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#6f42c1&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .returnType(SysUserRoleVO&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#d73a49&quot;&gt;class&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
        .list();&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;還有很多很多超級方便有趣的寫法，歡迎大家來使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmybatis-mp.cn&quot; target=&quot;_blank&quot;&gt;https://mybatis-mp.cn&lt;/a&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;例如：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;1 . 多表 join A 內嵌 B B 內嵌 C 都可以&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;2 . 不使用 join 使用 @Fetch 註解 + fetchFilter 方法實現，將 A JOIN B 變成 query A + query B&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;3 . 使用 @Paging 註解，實現你的 xml 自動分頁&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;4 . 使用 SQL 模板，讓你 ORM 更簡單更容易擴展，再也不怕被框架限制了&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311901</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311901</guid>
            <pubDate>Sat, 14 Sep 2024 07:17:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>網信辦發佈《人工智能生成合成內容標識辦法 (徵求意見稿)》</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家互聯網信息辦公室&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cac.gov.cn%2F2024-09%2F14%2Fc_1728000680671017.htm&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;關於《人工智能生成合成內容標識辦法 (徵求意見稿)》公開徵求意見的通知。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時明確，行業組織、企業、教育和科研機構、公共文化機構、有關專業機構等研發、應用人工智能生成合成技術，未向境內公眾提供服務的，不適用本辦法的規定。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;231&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0914/141856_I69U_4252687.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中提到，人工智能生成合成內容標識包括顯式標識和隱式標識。顯式標識是指在生成合成內容或者交互場景界面中添加的，以文字、聲音、圖形等方式呈現並可被用户明顯感知到的標識。隱式標識是指採取技術措施在生成合成內容文件數據中添加的，不易被用户明顯感知到的標識。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;服務提供者提供的生成合成服務屬於《互聯網信息服務深度合成管理規定》第十七條第一款情形的，應當按照有關要求對生成合成內容添加顯式標識。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;互聯網應用程序分發平台在應用程序上架或上線審核時，應當核驗服務提供者是否按要求提供生成合成內容標識功能。用户向提供網絡信息內容傳播平台服務的服務提供者上傳生成合成內容時，應當主動聲明並使用平台提供的標識功能進行標識。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;任何組織和個人不得惡意刪除、篡改、偽造、隱匿本辦法規定的生成合成內容標識，不得為他人實施上述惡意行為提供工具或服務，不得通過不正當標識手段損害他人合法權益。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311893</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311893</guid>
            <pubDate>Sat, 14 Sep 2024 06:17:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>VirtualBox 7.1 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;VirtualBox 是一款功能強大的 x86 虛擬機軟件，它不僅具有豐富的特色，而且性能也很優異。VirtualBox 7.1&amp;nbsp;現已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.virtualbox.org%2Fwiki%2FChangelog&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;，這是一次重大更新。添加了以下新功能：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;GUI：現代化的外觀和感覺，提供了 「基礎」 和 「專業」 兩種 UI 模式（「Basic」 &amp;amp; 「Expert」）供用户選擇，UI 功能可減可全&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;OCI Integration：性能儀錶板現在顯示雲虛擬機的資源使用情況&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;OCI Integration：克隆計算實例&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;OCI Integration：重置計算實例&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Oracle VirtualBox 擴展包：更新 PUEL 許可證，刪除評估選項。如需評估使用擴展包，建議從 &amp;nbsp;Oracle Software Delivery Cloud 下載&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;VRDE：如果用户未使用自定義證書設置 TLS，建議使用自簽名證書啓用，包括在舊證書過期前簽發新證書&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;NAT：支持 IPv6 的新引擎&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;macOS/Arm host：適用於 Linux 和 BSD VM 的 Arm 虛擬化&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Linux host and guest：為 Clipboard sharing 添加了 Wayland 支持（bug#20808）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Shared Clipboard：添加了對在 Linux 和 Windows hosts / guests 上傳輸文件的初始支持。這需要安裝 7.1 Guest Additions。有關已知限制，可參閲用户指南&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Screen Recording：編碼管道的性能顯著提高，從而降低了錄製激活時的 CPU 佔用率。這需要在 Windows guests 上安裝 7.1 Guest Additions&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，還修復和/或添加了下列項目：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;VMM：修復了使用 Hyper-V 時對 CPUID 指令的 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FEFLAGS.TF&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;EFLAGS.TF&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt; 處理（bug#17961）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;virtio-net：針對 FreeBSD 12.3 和 pfSense 2.6.0 的後續修復（bug#21201）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;EFI：能夠為新創建的虛擬機添加新的 Microsoft DB/KEX 證書&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Oracle Extension Pack：修復了為完整 VM 加密提供加密支持模塊的問題&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;GUI：提高整體可訪問性&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;GUI：更新所用的 Qt 版本&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Unattended Installation：增加了對基於 subiquity/cloud-init 的安裝程序的支持；這使得能夠在 Unattended 模式下安裝更多基於 Linux 的現代客户操作系統&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Unattended Installation：增加了為 user 和 admin / root&amp;nbsp; 帳户指定單獨密碼的支持&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;VBoxManage：增加了顯示和（重新）附加虛擬機（視頻）錄製進度的功能&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;VBoxManage：添加了通過新的「mount」Guest Control 子命令查詢 guest 掛載點的功能。至少需要 7.1 Guest Additions&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Python：針對 Python 2.x 的 API 綁定現已標記為已棄用，並將在未來版本中刪除。建議用户升級代碼以使用 Python 3&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;VBoxShell：大量大大小小的錯誤修復 + Python 3.x 兼容性&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;詳情可查看：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.virtualbox.org%2Fwiki%2FChangelog&quot; target=&quot;_blank&quot;&gt;https://www.virtualbox.org/wiki/Changelog&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;下載地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.virtualbox.org%2Fwiki%2FDownloads&quot; target=&quot;_blank&quot;&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/304543/virtualbox-7-1-new-ui&quot; target=&quot;_blank&quot;&gt;VirtualBox 7.1 Beta 發佈：採用全新現代化 UI、更換 Logo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311859/virtualbox-7-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311859/virtualbox-7-1-released</guid>
            <pubDate>Sat, 14 Sep 2024 02:46:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>谷歌在搜索結果集成互聯網檔案館「Wayback Machine」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.archive.org%2F2024%2F09%2F11%2Fnew-feature-alert-access-archived-webpages-directly-through-google-search%2F&quot; target=&quot;_blank&quot;&gt;根據互聯網檔案館 (Internet Archive) 的官方公告&lt;/a&gt;，谷歌已開始在搜索結果中加入互聯網檔案館「Wayback Machine」的鏈接，此舉旨在為結果加入&lt;strong&gt;歷史背景（historical context）&lt;/strong&gt;。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0914/102711_OKOu_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;谷歌對 9to5Google &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F9to5google.com%2F2024%2F09%2F11%2Fgoogle-search-internet-archive-wayback-machine%2F&quot; target=&quot;_blank&quot;&gt;發表聲明稱&lt;/a&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;我們知道，包括研究社區在內，許多人都希望能夠查看網頁的先前版本。&lt;/p&gt; 
 &lt;p&gt;因此，&lt;strong&gt;我們在 「關於本頁 」功能中添加了互聯網檔案館 Wayback Machine 的鏈接&lt;/strong&gt;，以便人們能夠快速獲取歷史背景，並通過搜索輕鬆訪問這些有幫助的信息。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;谷歌快照此前提供了類似的功能，但該功能今年早些時候被谷歌殺死了。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1db958065a51564516fd6ec5c09f9897ce5.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;相關閲讀：&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/news/277666&quot;&gt;谷歌已從搜索結果頁面刪除「緩存鏈接」&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;現在谷歌與互聯網檔案館合作，將該功能重新提供給用户，只不過快照不是由它託管而是由一家非盈利組織託管。&lt;/p&gt; 
&lt;p&gt;要訪問互聯網檔案館的 Wayback Machine 鏈接，用户需要點擊搜索結果頁條目旁的三點按鈕，點擊「More about this page」。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c6b1529b72aa77f2692f7c1b7d4ac302ff0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;互聯網檔案館對此表示，雙方的合作突出了 Web 存檔的重要性。&lt;/p&gt; 
&lt;p&gt;關於 Wayback Machine 以及如何探索 Web 歷史的更多信息，請訪問 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweb.archive.org%2F&quot; target=&quot;_blank&quot;&gt;https://web.archive.org/&lt;/a&gt;。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸閲讀&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/113814/brave-browser-integrate-the-wayback-machine&quot; target=&quot;_blank&quot;&gt;404 也能訪問？Brave 原生集成 「網站時光機」 服務&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/121454/flash-animations-live-forever-at-the-internet-archive&quot; target=&quot;news&quot;&gt;互聯網檔案館永久保存 Flash 動畫&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311858/google-search-internet-archive-wayback-machine</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311858/google-search-internet-archive-wayback-machine</guid>
            <pubDate>Sat, 14 Sep 2024 02:40:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>快手自研 Spark 向量化引擎發佈，性能提升 200%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Blaze 是快手自研的基於 Rust 語言和 DataFusion 框架開發的 Spark 向量化執行引擎，旨在通過本機矢量化執行技術來加速 Spark SQL 的查詢處理。現已開源發佈，開源版本全面兼容 Spark 3.0~3.5。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;公告稱，在 TPC-DS 1TB 的測試中，Blaze 相較於 Spark 3.3 版本減少了 60% 的計算時間、Spark 3.5 版本減少了 40% 的計算時間，並大幅降低了集羣資源的消耗；此外，Blaze 在快手內部上線的數倉生產作業也觀測到了平均 30% 的算力提升，實現了較大幅度的降本增效。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Spark+Blaze 的架構設計原理如下圖：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;270&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5c54e6e0d5b68a9d45a23bb4289cb006543.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;307&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fb4879973f0e55873be39c07a7c7bb0643f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#3e3e3e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Blaze 架構中的核心模塊有四個，共同驅動着大數據性能的顯著提升。這些模塊分別為：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Native Engine：&lt;/strong&gt;基於 Datafusion 框架實現的與 Spark 功能一致的 Native 算子，以及相關內存管理、FFI 交互等功能。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;ProtoBuf：&lt;/strong&gt;定義用於 JVM 和 native 之間的算子描述協議，對 Datafusion 執行計劃進行序列化和反序列化。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;JNI Bridge：&lt;/strong&gt;實現 Spark Extension 和 Native Engine 之間的互相調用。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Spark Extension：&lt;/strong&gt;Spark 插件，實現 Spark 算子到 Native 算子之間的翻譯。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#3e3e3e; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;具體而言，Blaze 目前已具備以下關鍵能力：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Parquet 向量化讀寫能力：&lt;/strong&gt;實現了對 Parquet 格式數據的高效向量化讀寫，極大地提升了數據處理的速度與效率。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong style=&quot;color:#333333&quot;&gt;全面算子與表達式支持：&lt;/strong&gt;覆蓋了線上常用的所有算子與表達式，少量不支持的表達式和 UDF 也可以細粒度回退，確保用户能夠無縫遷移並享受向量化處理帶來的性能提升。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Remote Shuffle Service 集成：&lt;/strong&gt;內部集成了自研的 Remote Shuffle Service，同時我們也在和阿里合作，增加對 Apache Celeborn 的支持，預計 9 月份可以提交到社區。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style=&quot;text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;TPC-H/TPC-DS 測試優異表現：&lt;/strong&gt;在業界權威的 TPC-H/TPC-DS 基準測試中，Blaze 成功通過全部測試場景，並以 TPC-H 平均 3 倍以上、TPC-DS 2.5 倍的性能提升展示了其在複雜查詢處理上的卓越能力。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;img height=&quot;345&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d03108ca53dc6bf37862095a5681ed85a0f.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在真實的生產環境中,向量化引擎大規模上線應用，算力平均提升 30%+，成本節約年化數千萬元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;未來規劃&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;持續迭代優化，內部線上推全。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;支持更多引擎或場景，例如數據湖等。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;加強開源社區運營建設，共建生態繁榮。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F79vWI2O-Mef8lviGy0cTjg&quot; target=&quot;_blank&quot;&gt;查看官方公告&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311854</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311854</guid>
            <pubDate>Sat, 14 Sep 2024 02:13:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源日報 | OpenAI「草莓」發佈；Docker 修改訂閲計劃；中國最大 MoE 開源大模型；AI 編程提高局部生產效率；中東土豪盯上了半導體</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.13&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311730/openai-o1&quot;&gt;OpenAI 發佈全新的 o1 系列模型&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   OpenAI 宣佈推出其全新產品 OpenAI o1，也就是此前廣受期待的代號為「草莓（Strawberry）」模型。按照官方技術博客説法，o1 在推理能力上代表了人工智能最強的水平。「o1 在回答問題之前會先思考，它可以在回覆用户之前產生很長的內部思考鏈。」OpenAI CEO Sam Altman 表示：「OpenAI o1 是一個新範式的開始：可以進行通用複雜推理的 AI。」
  &lt;/div&gt; 
  &lt;div&gt;
   &amp;nbsp;
  &lt;/div&gt; 
  &lt;div&gt;
   &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-71a55861df9e8ce27d364a533b80051ac1d.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/311774/docker-november-2024-updated&quot;&gt;Docker 修改其訂閲計劃&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;Docker 宣佈正在重新制定其訂閲計劃，以便所有計劃都可以使用更多功能和服務，並且還將更新定價以反映新增功能。&lt;/p&gt; 
  &lt;p&gt;Docker 的計劃包括 Docker Personal、Docker Pro、Docker Team 和 Docker Business，這些計劃均經過重新制定，使客户能夠通過單一訂閲訪問所需的一切，並明確規定消費限制，還能夠根據需要添加更多內容。計劃變更將於 11 月 15 日生效。&lt;/p&gt; 
  &lt;p&gt;隨着新變化而來的還有價格的變化。Docker Personal 仍然免費，Docker Business 的定價也保持不變。Docker Pro 的價格從 5 美元 / 月漲至 9 美元 / 月，Docker Team 的價格從 9 美元 / 用户 / 月漲至 15 美元 / 用户 / 月。&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F2118746300%2F7e4980bc02001h73q&quot; target=&quot;_blank&quot;&gt;元象發佈中國最大 MoE 開源大模型，落地應用登頂港台榜&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;元象 XVERSE 發佈中國最大 MoE 開源模型：XVERSE-MoE-A36B，加速 AI 應用低成本部署，將國產開源提升至國際領先水平。&lt;/p&gt; 
   &lt;p&gt;該模型總參數 255B，激活參數 36B，達到 100B 模型性能的「跨級」躍升，同時訓練時間減少 30%，推理性能提升 100%，使每 token 成本大幅下降。&lt;/p&gt; 
   &lt;p&gt;免費下載大模型&lt;/p&gt; 
   &lt;p&gt;Hugging Face：https://huggingface.co/xverse/XVERSE-MoE-A36B&lt;br&gt; 魔搭：https://modelscope.cn/models/xverse/XVERSE-MoE-A36B&lt;br&gt; Github：https://github.com/xverse-ai/XVERSE-MoE-A36B&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1871474290%2FOwL5iplDT&quot; target=&quot;_blank&quot;&gt;神神叨叨的 OpenAI 和神神叨叨的草莓&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
      可以這麼理解，o1 的 Reasoning 不是靠 reflect 的，這是 relection70B 的方式，但在對一個靠知識驅動的模型讓它來去 reasoning 複雜的問題，其實就是自己問自己，還不是長步驟的思考（雖然 cot 能幫上一些忙）。o1 的 resaoning 的實現是數據集的方式，草莓 RL 吐出來的數據就是帶多步邏輯的，拿這個做 pretrain。
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;Transformer-周&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6974787068%2FOwHkTCeUr&quot; target=&quot;_blank&quot;&gt;英偉達 CEO 黃仁勳接受高盛採訪&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     英偉達 CEO 黃仁勳昨天在接受高盛採訪時，深度闡述了大家關心的重要問題：AI 市場的前景，英偉達的護城河，以及供應鏈安全等。投資者顯然對他的回答比較買賬，英偉達股價昨天至今上漲了將近 10%。這個採訪信息量很大，比美國總統選舉辯論精彩多了。無論是否同意他的觀點，都值得一讀。
    &lt;/div&gt; 
    &lt;div&gt;
     採訪全文見
     &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fseekingalpha.com%2Farticle%2F4720501-nvidia-corporation-nvda-ceo-jensen-huang-presents-goldman-sachs-communacopia-technology&quot; target=&quot;_blank&quot;&gt;https://seekingalpha.com/article/4720501-nvidia-corporation-nvda-ceo-jensen-huang-presents-goldman-sachs-communacopia-technology&lt;/a&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;硅谷陳源博士&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1873355712%2FOwHoRlzFZ&quot; target=&quot;_blank&quot;&gt;AI 編程能提高局部生產效率的一個確定性的例子&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;AI 編程能提高局部生產效率的一個確定性的例子: 在所有需要打日誌的地方，Copilot 都能在輸入一兩個 log 開頭的代碼後，自動補全猜測的規整的日誌打印，包含必要的局部變量打印。人工寫的時候，這點通常是費勁的，有經驗的程序員會力求打印好必要的 debug, info, warning, error 日誌。新手往往日誌不全或者不規整，診斷問題的時候就缺必要的日誌。不過 AI 插件應該做的更 Agent 一點，在 git 提交的時候，自動把所有該打日誌的地方批量補全，這是可以做到的，也是比較安全的操作。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;幻灰龍&lt;/strong&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1762253415%2FOwGhAbWxR&quot; target=&quot;_blank&quot;&gt;知識圖譜介紹：事物，而非字符串&lt;/a&gt;&lt;/h4&gt; 
   &lt;p&gt;最近 GraphRAG 比較受關注，翻譯一篇很早之前谷歌介紹知識圖譜搜索的文章，理解下底層邏輯。&lt;br&gt; 搜索在很大程度上與發現有關——這是人類學習和拓寬視野的基本需求。但搜索仍然需要用户付出很多努力。所以今天我真的很興奮的推出知識圖譜，它將幫助你快速輕鬆的發現新的信息。執行一個查詢，比如：[taj mahal]（泰姬陵），四十多年以來，搜索基本上是對查詢關鍵詞的匹配。對於搜索引擎來講，[taj mahal]這個關鍵詞只是兩個詞而已。&lt;/p&gt; 
   &lt;div&gt; 
    &lt;div style=&quot;text-align:right&quot;&gt;
     &lt;span style=&quot;color:#000000&quot;&gt;- 微博&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;
     &lt;strong&gt;慶豐&lt;/strong&gt;
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1233486457%2FOwHkP4N0M%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;一個獨特的數據集：提示詞數據集&lt;/a&gt;&lt;/h4&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
       這個數據集是從四個平台（Reddit、Discord、網站和開源數據集）中收集的 15140 個提示詞，時間範圍為 2022 年 12 月至 2023 年 12 月。其中，包括 1,405 個 Jailbreak 提示詞（有統計規模最大）。
       &lt;br&gt; 類比起來，提示詞數據集就相當於之前的代碼庫吧。
       &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fverazuo%2Fjailbreak_llms&quot; target=&quot;_blank&quot;&gt;https://github.com/verazuo/jailbreak_llms&lt;/a&gt;
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- 微博&amp;nbsp;&lt;/span&gt;&lt;strong&gt;高飛&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_1654203637_629924f5020012hi0.html&quot; target=&quot;_blank&quot;&gt;創新承壓、洗牌持續，摩爾線程要做「國產英偉達」？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;換言之，摩爾線程已建立從芯片、板卡、服務器、集羣到軟件的全棧 AI 智算產品線，市場認為摩爾線程是國內僅有能從功能上對標英偉達的國產 GPU 芯片廠商。但持續補齊軟件生態、AI 大模型技術迭代速度快帶來的技術持續創新壓力，以及國內 GPU 市場正進入洗牌階段，讓摩爾線程真正成為英偉達仍需持續發力。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;DoNews&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.thepaper.cn%2FnewsDetail_forward_28718832&quot; target=&quot;_blank&quot;&gt;大模型「鬼故事」纏上的不止百度&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;過去半年，市場對 AI 大模型的關注焦點從模型技術本身轉向了智能應用的實際落地，AI 預期也開始回調。因此，在基礎大模型的投入與 AI 應用落地之間做出取捨，實際上已成為所有大模型玩家不可迴避的共同難題。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;市象&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Froll%2F2024-09-13%2Fdoc-incnyivw9120216.shtml&quot; target=&quot;_blank&quot;&gt;旋智即將推出多核心處理器！助力實現高性能電機控制產品&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#292934&quot;&gt;隨着產業裝備更新、汽車電子、新型空調熱泵、工業控制等新興應用需求的發展，電機控制芯片市場正經歷快速增長，特別是對高能效、高性能電機控制處理器的需求急速上升。其中，國產替代空間巨大，亟待提升滲透率。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&amp;nbsp;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#292934&quot;&gt;網易新聞&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F7310786248%2F1b3c1bec801901mol4&quot; target=&quot;_blank&quot;&gt;中東土豪盯上了半導體&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;芯片已成為現代社會不可或缺的關鍵資源之一。中東對半導體的進軍，已然拉開帷幕，未來會如何演繹還不得而知。在推進先進人工智能的過程中，中東地區還面臨如何在沙漠中確保計算設施能夠有效運行，以及大量水資源消耗的問題。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;在中東的沙漠中，能否開出半導體的花，仍面臨諸多挑戰，前路漫漫。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;芯東西&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2F2024-09-13%2Fdetail-incnyivy5830670.d.html&quot; target=&quot;_blank&quot;&gt;我們的《黑神話：悟空》，應該由自己的網絡靶場來守護&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt;
  &lt;span style=&quot;color:#000000&quot;&gt;2024 年，《黑神話：悟空》在全球玩家的熱切期盼中上線，然而首個週末，Steam 平台卻因大規模 DDoS 攻擊而崩潰，上百萬玩家無法登錄。據悉，這次攻擊涉及近 60 個殭屍網絡，攻擊指令在一夜之間激增了 2 萬多倍，攻擊發生後，《黑神話：悟空》的實時在線人數一度驟降至百萬以下。這場惡意攻擊不僅重創了遊戲體驗，還為全球網絡平台敲響了警鐘，揭示了網絡攻擊的無處不在。&lt;/span&gt;
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;數據猿&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jfdaily.com%2Fnews%2Fdetail%3Fid%3D795582&quot; target=&quot;_blank&quot;&gt;外灘大會專門發起倡議 「開源」為何如此重要？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;隨着 AI 技術的發展，提高其安全性成為一個亟待解決的緊迫課題，而開源則是可靠一招。在日前舉行的外灘大會上，賽事組委會發起開源倡議——支持並鼓勵優秀參與者開源比賽模型，降低技術門檻、加強技術交流，進而幫助更多人檢測偽造內容，助力 AI 向善。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;上觀新聞&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fo2sh%2Fonefetch&quot; target=&quot;_blank&quot;&gt;o2sh/onefetch&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;368&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-442f7a4242ab3a475a9ba902eed757caf79.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fo2sh%2Fonefetch&quot; target=&quot;_blank&quot;&gt;https://github.com/o2sh/onefetch&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;Onefetch 是一款由&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;編寫的命令行 Git 信息工具，它將直接在終端中展示本地 Git 倉庫的項目詳情和代碼統計等內容。工具完全離線可用（不需要網絡連接)。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/meituantech/blog/10946678&quot; target=&quot;_blank&quot;&gt;分佈式因果推斷在美團履約平台的探索與實踐&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;美團履約平台技術部在因果推斷領域持續的探索和實踐中，自研了一系列分佈式的工具。本文重點介紹了分佈式因果樹算法的實現，並系統地闡述如何設計實現一種分佈式因果樹算法，以及因果效應評估方面 qini_curve/qini_score 的不足與應對技巧。希望能為從事因果推斷相關工作的同學們提供一些啓發或幫助。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;圖 1 美團履約因果推斷工具包&quot; height=&quot;178&quot; src=&quot;https://p0.meituan.net/travelcube/d7f63a42a10c2ddd373a56ac2d1204b6212498.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FTbbDsD4PNK6ttCvFAELxSg&quot; target=&quot;_blank&quot;&gt;「你的開源項目真不錯，但跟我的閉源軟件功能類似，所以希望你能閉源，好方便我割韭菜」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：現在很多開源確實導致了企業對程序員的需求沒有那麼大，所以現在那麼程序員被裁掉，而且企業之間都用開源相互惡性競爭，導致產品利潤減少，而且質量不高。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：你也是個奇葩&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：考慮過造張假鈔再要求人行別發行人民幣嗎&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：我有點懷疑那個閉源軟件是不是用了開源的代碼&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：別懷疑，現在沒有人能不依靠開源的力量從頭造輪子&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：哈哈哈哈哈哈，這人這個發言多少帶點腦缺&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：和大佬説話還班門弄斧的，問人家懂不懂網絡攻防&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：分分鐘已經找過 linux 要求閉源了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：李勝傳奇之重生之前幹 IT&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：憑本事吃飯，大佬開源的都是大佬玩剩下的，實在是可笑不自量&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：把 kvm、openstack、k8s、c、c++、python、go、postgres…等等全部閉源，他做一個出來收費，真是吃飽了，然後把鍋砸了的邏輯……格局太小了，一輩子吃不了幾個菜&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：這像是説，成龍不懂演戲，張學友不懂唱歌，哈哈&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 13：尤雨溪不懂 vue，jk 羅琳不懂哈利波特&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 14：&amp;gt; 無需 CA&amp;nbsp;證書即可捕獲 SSL/TLS 通訊明文，這個怎麼做到的 ……&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 15：直接用 ebpf 把密鑰截獲&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 16：國內開源屆現狀大賞&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 17：太抽象了，以至於我以為今天是愚人節&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 18：希望那人可以和鴻蒙對一下線，我看看誰能讓他的 ass off&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 19：他的意思是：我抄完了，你可以閉源了！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 20：難道他真的是天才&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 21：沒有開源的話，寫源碼的人不斷的在給自己打補丁，但是個人能力有限；對源碼有需求的，不斷在重複造輪子&lt;img alt=&quot;[破涕為笑]&quot; src=&quot;https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;。沒有開源精神，互聯網能發展到現在？？？這都是寫系統，寫語言的大佬們帶頭奉獻的結果&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 22：第一反應，不應該是合作嗎？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 23：不如 sspl 直接看源，閉源的都得逼着開給你&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 24：因為我無恥，所以我希望你跟我一樣無恥。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 25：沒有閉源的商業思維還想做閉源產品&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F4k5qIVcSDL2F5tVDBW3OUg&quot; target=&quot;_blank&quot;&gt;OpenAI「草莓」發佈：全新 o1 系列模型、具備類似人類的推理能力、開啓「推理時間擴展」範式時代&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：終於上道了，gpt 感覺就是玩具，推理才是真正實用的東西&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：實際使用下來，我個人的使用場景，並沒有看到 o1 的特別大的優勢。反而 Claude 3 Opus 依然效果是最好的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：希望工程師同行們可以指教我的看法是否正確，因為這方面我的掌握還不夠。我個人認為是不是他們在跨區域「適配數據」所謂的思考就是單純的「數據內容匹配」！如果 open ai 説他可以獨立思考那我個人認為，這種能力未來不好説但是現在並不存在！是不是又是個大忽悠，炒股票吹泡泡的套路。哈哈&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：AI 本質就是信息壓縮，那麼你相信 md5 可逆嗎，反正我不信它&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311802</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311802</guid>
            <pubDate>Fri, 13 Sep 2024 10:46:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>全球 6G 標準化工作進入實質階段</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;由中國移動代表擔任主報告人的 6G 場景用例與需求研究項目，已在澳大利亞墨爾本召開的第三代合作伙伴計劃（英文縮寫 3GPP，是制定全球通信國際標準的重要組織）業務與系統技術規範組全會上獲得通過。這是 3GPP 的首個 6G 標準項目，得到全球超過 90 家公司的支持，標誌着全球 6G 標準化工作正式進入實質階段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;第三代合作伙伴計劃（3GPP）是制定全球通信國際標準的重要組織，3GPP 根據國際電信聯盟（ITU）制定的框架，制定產業事實技術規範和標準，移動通信的全球 3G、4G、5G 標準均由該組織制定。3GPP 開始 6G 的標準化工作，意味着 6G 網絡產業化的正式開啓。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;據瞭解，業務場景定義了每一代通信系統的走向，是網絡性能、功能設計及服務能力的根本依據。中國公司此次擔任報告人，將協調管理 6G 標準制定節奏、牽引技術討論方向、主導形成有效結論，對標準有序推進和質量嚴格把控起到至關重要的作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本次通過的 6G 需求項目受到業界廣泛關注，全球超過 90 家公司參與，比 5G 需求項目的支持公司多了一倍多。政府部門、研究機構、垂直行業和終端公司的參與數量從 5G 時期的 8 家增長到 46 家。衞星公司從 5G 時期的「0」參與到 6G 時期 9 家公司積極參與，也體現了移動通信網絡邊界的不斷延伸拓展。從前期討論看，移動通信與算力及 AI 的融合、通信和感知的融合、空天地一體化的組網、沉浸式通信將成為代表性的新能力。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311800</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311800</guid>
            <pubDate>Fri, 13 Sep 2024 10:36:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>deepin 25 開發計劃大揭秘：新增功能與性能優化一覽</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeveloper-community%2Fplanning%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看 deepin 25 版本規劃&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;為使社區用户提前瞭解深度操作系統（以下簡稱「deepin」）版本規劃，深度團隊會在版本發佈前，提前公佈下一個預發佈版本的規劃目標，從技術與功能角度發佈規劃內容，以便大家初步了 deepin 的開發計劃。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin 25 計劃發佈時間為 2025 年年初，此版本主要目標是修復 deepin 23 中遺留問題，提升系統穩定性，同時完成技術更新換代（Treeland）的功能試點。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;版本發佈計劃&lt;/strong&gt;&lt;/h1&gt; 
&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; width:544.23pt&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;height:15.6pt; text-align:center; width:130.8pt&quot;&gt;deepin 23&lt;/td&gt; 
   &lt;td style=&quot;height:15.6pt; text-align:center; width:413.95pt&quot;&gt;2024 年 08 月【已發佈】&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td style=&quot;height:15.6pt; text-align:center&quot;&gt;deepin 25&lt;/td&gt; 
   &lt;td style=&quot;height:15.6pt; text-align:center&quot;&gt;2025 年 01 月 【開發中】&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;deepin 25 版本規劃&lt;/strong&gt;&lt;/h1&gt; 
&lt;table style=&quot;width:907px&quot;&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;功能新增&lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;開放 Treeland 預覽環境：帶來全新的桌面交互體驗與使用體驗&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;支持窗口管理器打開、關閉、最大、最小化等功能實現&lt;/li&gt; 
     &lt;li&gt;支持觸碰版多指觸碰跟隨展示支持，讓人機交互合一&lt;/li&gt; 
     &lt;li&gt;支持 alt+tab 窗口預覽效果實現&lt;/li&gt; 
     &lt;li&gt;支持多任務視圖切換方式全新交互形式&lt;/li&gt; 
     &lt;li&gt;基於行雲設計的全新控制中心（提供部分模塊）&lt;/li&gt; 
    &lt;/ul&gt; &lt;p&gt;安裝器：全盤加密支持使用 AES 加密方式&lt;/p&gt; &lt;p&gt;控制中心：更新模塊新增支持智能鏡像源選擇&lt;/p&gt; &lt;p&gt;如意玲瓏：提供 Appimage、Flatpak、DEB 轉制玲瓏工具&lt;/p&gt; &lt;p&gt;應用商店：支持 ARM、LoongArch 等架構&lt;/p&gt; &lt;p&gt;* 更多產品特性待版本發佈後揭曉&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;不可變系統&lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;開放不可變系統體驗版本（用於不可變系統體驗）&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;支持只讀掛載&lt;/li&gt; 
     &lt;li&gt;支持支持系統快照管理&lt;/li&gt; 
     &lt;li&gt;支持系統無憂還原&lt;/li&gt; 
     &lt;li&gt;apt/dpkg 支持只讀安裝 deb 包&lt;/li&gt; 
     &lt;li&gt;支持升級失敗自動回滾&lt;/li&gt; 
    &lt;/ul&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;性能優化&lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;優化鏡像文件大小&lt;/p&gt; &lt;p&gt;優化安裝器非中文環境的使用體驗，提升開箱即用體驗&lt;/p&gt; &lt;p&gt;優化 X11 環境下動效，提升用户交互感知&lt;/p&gt; &lt;p&gt;提升機械硬盤設備使用性能&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;問題修復&lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;對 X11 環境進行質量問題修復，提升系統穩定性與易用性&lt;/p&gt; &lt;p&gt;修復 deepin 23 遺留的任務欄、窗口圖標、啓動等的問題，提高 DDE 組件質量&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;其他&lt;/td&gt; 
   &lt;td&gt; &lt;p&gt;基礎組件更新：更新部分軟件包，提升系統穩定性&lt;/p&gt; &lt;p&gt;新平台支持：如意玲瓏對 ARM、LoongArch 架構支持&lt;/p&gt; &lt;p&gt;安全漏洞修復：及時跟進修復已知的安全漏洞&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;*以上核心特性規劃與最終發佈內容可能存在部分偏差，詳細功能敬請關注 deepin 25 版本發行註記。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;相關閲讀&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;deepin 23&amp;nbsp; 鏡像下載&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-23-is-officially-released%2F&quot; target=&quot;_blank&quot;&gt;deepin 23 發行註記&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 歷史版本鏡像（含 deepin 15）&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311797</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311797</guid>
            <pubDate>Fri, 13 Sep 2024 10:22:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>分佈式因果推斷在美團履約平台的探索與實踐</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;blockquote&gt; 
 &lt;p&gt;美團履約平台技術部在因果推斷領域持續的探索和實踐中，自研了一系列分佈式的工具。本文重點介紹了分佈式因果樹算法的實現，並系統地闡述如何設計實現一種分佈式因果樹算法，以及因果效應評估方面 qini_curve/qini_score 的不足與應對技巧。希望能為從事因果推斷相關工作的同學們提供一些啓發或幫助。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e809bdb66865f05c47ccb33debbaeb14106.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;1. 業務背景&lt;/h2&gt; 
&lt;p&gt;近年來，因果推斷在商品定價、補貼、營銷等領域得到廣泛應用並取得了顯著的業務效果提升，例如用户增長、活動營銷等業務場景。這些領域的共性是需要「反事實推斷能力」，傳統機器學習算法更關注預測問題，而因果推斷提供了更佳的反事實推斷能力。以營銷活動為例，我們不僅需要知道當前優惠券金額下，訂單數是多少（預測問題），還要知道在改變金額的情況下，訂單數會發生怎樣的變化（反事實問題）。&lt;/p&gt; 
&lt;p&gt;常見的因果建模方法主要包含 Meta-Learner、深度表徵學習和 Tree-Base 算法三大類。其中以因果樹為代表的 Tree-Base 算法泛化性強，適用於多種業務場景。相較於 Meta-Learner，樹模型建模流程簡單；相較於深度表徵學習，樹模型特徵處理和調參過程簡單並且具備極強的可解釋性。&lt;/p&gt; 
&lt;p&gt;開源社區湧現出了微軟的 EconML 和 DoWhy，Uber 的 CausalML，以及因果森林作者的 grf-lab 等等眾多優秀開源項目，但這些項目均為單機實現，不能滿足工業場景下億級樣本的模型訓練、評估、解釋分析。Meta-Learner 和深度表徵學習可以輕鬆藉助 XGBoost、LGBM、Spark MLlib、Tensorflow 等開源工具支持海量數據，但是這些項目都不支持因果樹相關的 Tree-Base 算法的分佈式訓練。&lt;/p&gt; 
&lt;p&gt;具體來説，XGBoost、LGBM、Spark Random Forests 等樹模型是為解決預測問題而提出的經典算法實現，而因果樹算法引入了新的訓練理論以及因果理論獨有的幹預變量、工具變量等概念。這意味着我們並不能通過對現有分佈式樹模型的簡單改造，來實現因果理論下樹模型的分佈式訓練，而是需要充分理解各類單機因果樹算法的原理之後，選擇合適的分佈式編程範式高效地實現出來。&lt;/p&gt; 
&lt;p&gt;為瞭解決上述問題，美團履約平台技術部對開源項目進行了精細梳理，集各家之所長實現了一套高性能的分佈式因果森林框架，在半小時內即可完成億級樣本 100 棵樹的訓練，突破了單機開源項目僅支持百萬級樣本的瓶頸。並經過複雜的抽象設計，最終實現通過自定義損失函數即可支持各類因果森林算法的能力，極大提升了框架的擴展性。&lt;/p&gt; 
&lt;p&gt;除此之外，美團履約平台技術部還在因果效應評估、觀測數據去偏等方面建設了大量高效實用的分佈式工具。本文將重點為大家分享如何設計實現一個分佈式的因果森林算法，以及因果效應評估方面的經驗技巧，將我們在分佈式因果推斷領域的一些探索和內部的實踐經驗分享給大家。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/d7f63a42a10c2ddd373a56ac2d1204b6212498.png&quot; alt=&quot;圖 1 美團履約因果推斷工具包&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;2. 分佈式因果森林框架&lt;/h2&gt; 
&lt;p&gt;因果森林算法的提出引發了 Tree-Base 算法應用於因果建模的研究熱潮，眾多學者相繼在因果森林的基礎上提出了多種多樣的改進算法。監督學習領域的樹模型有眾多優秀的開源分佈式實現，例如 Xgboost、LightGBM、Spark Random Forest 等等。&lt;/p&gt; 
&lt;p&gt;但是開源的因果樹模型分佈式實現基本處於空白狀態。因果樹算法引入了新的訓練理論（比如 Honesty Tree）並且因果樹的分裂還依賴於幹預變量、工具變量，這導致我們無法通過對現有分佈式樹實現做簡單來更改來實現。因此，我們立足於論文，充分調研並借鑑業內優秀的開源實現，最終設計實現了一套高性能的分佈式框架，並能提供統一的 Serving 方案。&lt;/p&gt; 
&lt;p&gt;藉助這套框架，新增因果森林類算法只需要專注於損失函數設計即可，完全不必考慮分佈式的工程實現。截止到目前，我們已經實現了四種因果森林算法，能夠靈活支持多維連續 treatment 和及工具變量，半小時內即可完成億級樣本 100 棵樹的訓練。下面我們將從技術選型與框架設計、性能優化、Serving 實現這幾個方面為大家介紹這套框架。&lt;/p&gt; 
&lt;h3&gt;2.1 技術選型與框架設計&lt;/h3&gt; 
&lt;p&gt;單機樹模型的工程實現可以概括為：遍歷所有潛在的切分點並計算分裂指標（損失函數），取指標指標最佳的分裂點分裂，不斷分裂樹節點直到滿足退出條件。而分佈式環境下每台機器只包含部分樣本，分佈式環境下任何全局指標計算都會帶來極大的通訊成本，因此需要選擇合適的分佈式架構幫助我們計算分裂指標。&lt;/p&gt; 
&lt;p&gt;因此，對於分佈式因果森林框架，我們關心三個問題：第一，如何計算因果樹的分裂指標（損失函數）；第二，如何求潛在分裂點；第三，選用何種分佈式編程架構。在此基礎上進一步抽象整合，就可以實現不同樹模型共用一套分佈式框架的目標。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;從論文出發&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;為了深入瞭解因果森林類算法，我們仔細閲讀了因果森林論文以及其作者 Susan Athey 的另一篇在因果領域有重要影響力的《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F1610.01271&quot; target=&quot;_blank&quot;&gt;Generalized Random Forests&lt;/a&gt;》論文。Susan Athey 認為隨機森林本質上是一種自適應的最近鄰算法（KNN），也就是通過對樣本空間的遞歸劃分從而找到距離該樣本點最近的 K 個點（落入同一個葉子節點）來表示該點的值。而因果森林算法本質上是隨機森林算法在因果推斷領域的一種特殊應用。&lt;/p&gt; 
&lt;p&gt;因果森林和傳統分類、迴歸森林一樣採用了二叉的 CART 樹（Classification And Regression Tree）作為基模型。與分類和歸回問題相同，特徵值僅用於樣本劃分而不參與分裂指標的計算。不同之處在於，分類和迴歸問題僅研究預測觀測值 Y，而因果建模需要研究 treatment、instrumental variable 等變量與觀測值 Y 之間的關聯。此外，多維連續 treatment 是學界的熱門研究方向。因此，相較於分類和迴歸問題，因果推斷需要在樣本表示上做出相應調整。&lt;/p&gt; 
&lt;p&gt;因果森林論文提出 honestyTree 的概念：將樣本分成 growSet 和 predictionSet 兩個部分，growSet 用於樹的生長，predictionSet 用於 prediction 值的計算。在論文《Generalized Random Forests》中證明瞭最小化子節點評估值與真實值之間的誤差等價於最大化左右節點間的異質性，並對 CART 樹的生長過程做了更加廣義的抽象，將其分解成 labeling step 和 regression step 兩步。Susan Athey 的單機 C++開源項目 grf-lab 中將這兩種觀點融合在一起，把樹的生長定義為 relabeling/splitting/prediction 三個步驟。&lt;/p&gt; 
&lt;p&gt;綜上，我們可以得出一些指導方案設計的結論：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;因果森林本質上是 CART 樹 Bagging 算法在因果建模領域的特殊應用。因此 CART 樹相關的論文和開源項目都可以廣泛借鑑。&lt;/li&gt; 
 &lt;li&gt;不同於 CART 樹，因果樹的樣本表示需要做相應抽象，根據不同算法靈活支持單維 treatment 多維 treatment 和工具變量。&lt;/li&gt; 
 &lt;li&gt;因果樹的支持 honestyTree，可以將樹的生長拆分為 relabeling/splitting/prediction 三個步驟，根據不同算法靈活實現。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Pre-sorted Algorithm Or Histogram-based Algorithm ？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;主流 CART 樹模型求分裂點的實現有兩種方式，以早期 XGBoost 為代表的預排序算法，以 LightGBM 和 SparkRandomForest 為代表的直方圖算法（目前 XGBoost 也提供了直方圖算法的實現）。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;預排序算法&lt;/strong&gt;：對每一個特徵的所有取值排序，依次遍歷這些值計算分裂指標，取指標最佳的分裂點將節點分裂為左右子節點。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;直方圖算法&lt;/strong&gt;：直方圖的主要思想是將連續特徵離散化到最大 k 個桶中，同時構造一個寬度為 k 的直方圖。在遍歷樣本時，以離散化值為索引在直方圖中累積統計量。遍歷每個特徵的每個分桶計算分裂指標，取指標最佳的分裂點將節點分裂為左右子節點。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://p1.meituan.net/travelcube/4851e0866552b7b91ee722833eda8fe935298.png&quot; alt=&quot;圖 2 離散化分桶&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/23437a2df5083d8b50106009269973e629162.png&quot; alt=&quot;圖 3 直方圖作差&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;相較於預排序的實現，直方圖算法的時間複雜度由$O(data&lt;em&gt;features)$降低為$O(bin&lt;/em&gt;features)$，同時離散化後的特徵內存佔用更低，並且可以通過直方圖作差的方式（父節點直方圖減去左節點直方圖）進一步降低計算量。受限於篇幅，預排序算法與直方圖算法的差異這裏不再贅述。最終我們選擇了直方圖算法方案，這也意味着需要在框架中採樣計算直方圖和特徵離散化的環節。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;AllReduce Or MapReduce ？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;工業界主流的分佈式機器學習架構有 AllReduce、ParameterServer、MapReduce 三種，其中 AllReduce 性能最高（ParameterServer 架構也可以和 AllReduce 結合，為了方便討論，這裏不再細究）。&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;架構&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;實現&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;性能&lt;/th&gt; 
   &lt;th align=&quot;left&quot;&gt;代表框架&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;AllReduce&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;C++&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;最優&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;XGBoost、微軟 LightGBM、谷歌 Tensorflow&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;ParameterServer&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;C++&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;居中&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;谷歌 Tensorflow (PS 模式)、Tencent Angel，主要應用在深度學習領域&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;MapReduce&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Java/Scala&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;一般&lt;/td&gt; 
   &lt;td align=&quot;left&quot;&gt;Spark MLlib、H2O （Uplift Random Forest）&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;因為 XGBoost 內建了一個 AllReduce 框架 RABIT 可以直接複用，因此我們迅速擬定了兩個調研方向——複用 XGBoost 的 AllReduce 高性能實現和 Spark MapReduce 實現。&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;方案&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;架構&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;明細&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;性能&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;技術棧&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;開發難度&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;測試難度&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;支持的樣本量級&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;方案 1&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;AllReduce&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;XGB RABIT + Spark&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;高&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;C++和 Scala&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;高&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;高&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;百億&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;方案 2&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;MapReduce&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Spark&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;一般&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;Scala/Java&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;較高&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;較高&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;十億&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;由於履約使用的樣本量在幾千萬級別，綜合考慮開發測試成本和訓練性能後，我們最終選擇了 MapReduce 方案。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;框架設計&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;綜合上文的分析，我們為分佈式因果森林框架設計了 4 個模塊：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/01a4da85b6b815345a2fc4eb1559f69646266.png&quot; alt=&quot;圖 4 分佈式因果森林框架&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;訓練入口與參數模塊&lt;/strong&gt;：抽象出 Abstract CFEstimator 用來整合樹模型的通用參數，新增算法繼承此類後添加專屬參數即可作為對應算法的訓練入口。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;樣本轉換模塊&lt;/strong&gt;：負責採樣構建直方圖與特徵離散化，上文中單維 treatment 多維 treatment、工具變量、觀測值 y 的轉換也封裝在此模塊中。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;森林生長模塊&lt;/strong&gt;：框架的核心模塊，使用 MapReduce 實現。包含隨機森林需要的樹採樣、特徵採樣，同時實現 honesty。抽象出 relabeling/splitting/predcition 這幾個接口，不同的算法按需實現樹的生長邏輯，並以此為基石抽象損失函數接口。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模型保存和 serving 模塊&lt;/strong&gt;：抽象出統一的樹模型保存和加載方案。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;2.2 性能優化&lt;/h3&gt; 
&lt;p&gt;在選定 MapReduce+直方圖的方案後，我們迅速將目光鎖定在同樣使用直方圖算法的 Spark RandomForest 算法上（以下簡稱 SparkRF）。我們在 SparkRF 上快速實現了一版分佈式因果森林框架，並進一步實現了&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2203.10975&quot; target=&quot;_blank&quot;&gt;Generalized Causal Forests&lt;/a&gt;算法。&lt;/p&gt; 
&lt;p&gt;但是測試過程中我們發現，隨着總節點數的增加，跨節點通信量（也就是 Shuffle）劇增，同時還非常容易溢出。為了支持更大規模的模型訓練，我們從跨節點通信、內存佔用、計算複雜度、剪枝以及 CPU 緩存命中優化等多個方面優化了整個框架。為了講清楚我們優化邏輯，大家先來看看 SparkRF 是如何實現的。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SparkRF 的實現&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;SparkRF 整個實現過程可以概括為如下幾個步驟：&lt;/p&gt; 
&lt;p&gt;（1）將全量樣本離散化並 cache 到內存，這一步包含三部分：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;採樣 collect 到 driver 為每個特徵等距分桶，得到潛在切分點 split。&lt;/li&gt; 
 &lt;li&gt;使用潛在切分點 split，將每個樣本的特徵離散化，此時特徵值從 double 被轉換成 int。&lt;/li&gt; 
 &lt;li&gt;根據樹採樣比例，為每條樣本生成標記數組（由 int 數組實現），標記這條樣本用於哪棵樹的生長。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（2）樹的生長&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;將整個森林看做一張圖，採用深度優先搜索待分裂的節點，一次迭代一組節點，由 maxMemoryInMB 參數控制節點數。&lt;/li&gt; 
 &lt;li&gt;根據樣本的標記數組，計算每個樣本在每個節點的每個 split 下的直方圖（統計信息）。&lt;/li&gt; 
 &lt;li&gt;通過 reduceByKey 算子，將同一個待分裂節點的所有 split 下的直方圖彙總到同一個 worker 中。&lt;/li&gt; 
 &lt;li&gt;將待分裂節點的每個切分點直方圖積分，例如 feature0 有 3 個切分點[a,b,c]，積分後為[a, a+b, a+b+c]，使用直方圖作差，計算左右子節點增益，獲取最佳切分點。&lt;/li&gt; 
 &lt;li&gt;將待分裂節點的最佳切分點 collect 回 driver，完成森林的生長。&lt;/li&gt; 
 &lt;li&gt;使用 rdd cache 記錄樣本所屬節點 id（由 useNodeIdCache 參數控制）或廣播模型。&lt;/li&gt; 
 &lt;li&gt;持續迭代直到達成退出條件。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;可以看到，Spark 的實現除了直方圖，還有不少精妙的地方。例如在每次可訓練的總結點數有限的情況下，深度優先搜索相較於廣度優先搜索更傾向於快速完成單棵樹的訓練，從而減少後續訓練需要廣播的樹模型。篇幅所限，下面將主要為大家介紹分佈式因果森林框架在內存佔用方面的優化。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;減少 Cache 體積&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;從上文可以看出，SparkRF 使用 int 來表示最大分桶個數，而 lightGBM 使用無符號 byte 來存儲，支持最多 256 個分桶。我們認為 128 個分桶足以支撐因果森林的業務需要，所以使用了有符號 byte 來表示分桶，相比 int 內存佔用減少至 1/4。&lt;/p&gt; 
&lt;p&gt;前文中提到，SparkRF 為每個樣本創建了一個標記數組。例如訓練一個 2 棵樹的森林，這個標記數組為[4,0]，這表示此樣本在 tree0 有放回採樣 4 次，在 tree1 未被使用。此外，框架需要支持 honestyTree，也就意味着需要另一個標記數組記錄樣本在 growSet 還是 predictionSet。考慮到無放回採樣足以覆蓋絕大部分場景，並且為了不引入第二個標記數組，我們最終選擇了 BitSet 實現。每棵樹最多使用 2 個 bit，1 個 bit 表示是否是該樹的樣本，1 個 bit 表示是否是 honesty 樣本。當關閉 honesty 或者不使用下采樣時，每棵樹只需要 1 個 bit，內存佔用最多減少至 1/32。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;支持更大模型廣播&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;上文中提到，SparkRF 每一輪迭代調用 reduceByKey 之前都需要計算出哪些樣本屬於待分裂的節點，Spark 通過 useNodeIdCache 參數提供了兩種策略：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;策略一&lt;/strong&gt;：每次迭代將樹模型跟隨閉包廣播到各個 worker 節點通過 predict 獲取節點 id。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;策略二&lt;/strong&gt;：使用 RDD[Array[Int]]類型來緩存當前樣本隸屬於每棵樹的哪個節點（例如訓練 100 棵樹，則創建長度為 100 的 int 數組，每一個元素記錄了此條樣本在對應下標的樹模型中的葉節點編號）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;從源代碼中我們發現，策略二每一輪迭代都會卸載上一輪持久化的 nodeIdCache，再創建一個新的 nodeIdCache 持久化到內存。以 1 億條樣本 100 棵樹的森林舉例，每一輪迭代就是 1 億個長度為 100 的 int 數組的創建與垃圾回收。實際測試中我們也發現策略二的效率不如方案一高。那麼策略一又如何呢？&lt;/p&gt; 
&lt;p&gt;SparkRF 在每一輪迭代中能夠訓練的最大節點數由 maxMemoryInMB 控制，我們希望通過增大這個參數來減少迭代次數。但隨着樹或樹深的增加，往往陷入增大該參數就導致樹模型廣播到 worker 溢出的尷尬境地。經過對 SparkRF 源碼分析，我們發現每個 LearningNode 都會存儲當前節點、左子節點、右子節點的直方圖，最終實現在一套通用框架下計算出每個節點的增益、純度、預測值等等屬性，但這導致了 3 倍的內存佔用。&lt;/p&gt; 
&lt;p&gt;考慮到因果森林 honestyTree 原則，葉節點 prediction 值的計算使用 predictionSet，因此生長過程中每個節點全都帶着 growSet 的直方圖是完全沒有意義的。因此我們優化了樹的生長邏輯，每個節點僅保留自身的直方圖，對於已分裂的節點則清除直方圖。以二叉滿樹為例，葉節點約佔整棵樹節點的 1/2，結合直方圖從 3 倍冗餘到 1 倍存儲，這一優化使樹模型直方圖的內存佔用下降到原本的 1/6，極大降低了模型體積。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;BenchMark&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;經過一系列優化，最終實現了百棵樹億級樣本小時級訓練的目標。&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;樣本量&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;特徵數量&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;樹棵樹&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;最大樹深&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;資源配置&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Generalized Causal Forest 算法&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;Continuous Causal Forest 算法&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;1 億&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;127&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;100&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;400*(7core16g)&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;29min&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;17min&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;備註：不同森林算法的複雜度不同，跨節點通訊量不同，總耗時會存在明顯的差異。&lt;/p&gt; 
&lt;h3&gt;2.3 Serving 實現&lt;/h3&gt; 
&lt;p&gt;因果森林本質上是隨機森林算法的變種，由一棵棵彼此獨立的二叉因果樹構成，每棵樹由 innerNode 和 leafNode 構成。其 prediction 的邏輯非常簡單，每棵因果樹單獨 predict 獲取 leafOutput 向量，森林中所有樹預估的 leafOutput 向量求均值即可得到森林的輸出值。因此，整個樹模型的結構其實非常清晰，innerNode 存儲特徵 split 信息，leafNode 存儲輸出向量。除此之外還包含 gain、impurity、count 等屬性用於計算特徵重要性。&lt;/p&gt; 
&lt;p&gt;模型 serving 除了性能還需要考慮模型離線存儲體積、模型的內存佔用、模型字段的擴展性。結合因果樹的特點，就需要特別注意 leafOutput 向量的實現。以下表中的場景為例，使用 float 數組大約就需要 500&lt;em&gt;4096&lt;/em&gt;40* 4 byte / 1024/ 1024 = 312.5mb，而 List 則需要約 4 倍內存，正因如此我們快速放棄了簡單快捷的 Protobuff 方案。&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align=&quot;center&quot;&gt;樹&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;樹深&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;滿樹節點數&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;滿樹葉節點數&lt;/th&gt; 
   &lt;th align=&quot;center&quot;&gt;葉節點統計指標長度&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align=&quot;center&quot;&gt;500&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;12&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;8191&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;4096&lt;/td&gt; 
   &lt;td align=&quot;center&quot;&gt;40（例如 ccf 算法 20 維 treatment 下的輸出）&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;為什麼要重視模型字段的擴展性呢？這是因為離線模型訓練追求快速迭代而在線 Serving 追求穩定性。模型的擴展性好，不僅可以輕鬆做到新版本服務向下兼容老模型，還可以做到在不使用新特性的情況下，老版本服務向上兼容新模型，從而減少在線服務更新發版的次數。綜合考慮以上因素以及對 Spark 的兼容性和對 java serving 生態的兼容性，我們設計瞭如下方案。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;使用 parquet 文件格式存儲模型文件。 
  &lt;ul&gt; 
   &lt;li&gt;字段擴展性：好，讀取類似 KV，模型文件可以隨意擴展而不影響線上服務&lt;/li&gt; 
   &lt;li&gt;模型內存體積：好，相較於 protobuf，可以逐行讀取轉換為 float 數組而非 Float List&lt;/li&gt; 
   &lt;li&gt;模型存儲體積：好，採用 snappy 算法壓縮&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;字段平鋪的方式存儲樹模型。相較於 SparkRF 的採用 tree-node 嵌套的方式，更利於字段擴展。雖然會帶 treeId 等個別字段的冗餘存儲，但是列存儲的壓縮效率非常高，影響很小。&lt;/li&gt; 
 &lt;li&gt;提供獨立 jar 包 cos-serving 實現模型加載和 prediction 的功能，實現了離線模型訓練升級而在線服務可以不升級的目標。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;我們將離線模型的保存和加載邏輯抽象封裝到了因果森林框架中，進一步增強了因果森林框架的擴展性，開發新森林算法時專注於將論文中樹的生長邏輯實現即可。&lt;/p&gt; 
&lt;h2&gt;3. 分佈式因果效應評估&lt;/h2&gt; 
&lt;p&gt;業內常見的因果效應評估手段主要評估 ITE 的序關係，例如 qini score 和 auuc。但是存在如下三方面不足：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;缺乏對數據和模型無偏性的校驗&lt;/li&gt; 
 &lt;li&gt;缺乏因果效應量級關係的評估，qini-score 和 auuc 只能反應彈性的序關係&lt;/li&gt; 
 &lt;li&gt;開源因果評估工具都是單機實現，僅支持百萬級樣本的計算&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;下文將為大家一一進行説明。&lt;/p&gt; 
&lt;h3&gt;3.1 無偏性校驗&lt;/h3&gt; 
&lt;p&gt;無偏性校驗分為數據無偏性和模型無偏性。&lt;/p&gt; 
&lt;p&gt;數據無偏性校驗可以通過 X⊥T 驗證。首先可以訓練一個 X-&amp;gt;T 的傾向性得分模型，如果傾向性得分模型的 auc 在 0.5 附近則説明 X 無法正確地預測 T，也就是説 X⊥T，此時數據無偏。例如，使用了 post-treatmen 特徵會導致特徵穿越，最終導致數據是有偏的，這時候使用 X⊥T 的校驗工具可以快速幫我們排查出這一類問題。&lt;/p&gt; 
&lt;p&gt;模型無偏性校驗使用 ITE⊥T 驗證。首先用訓練好的彈性模型在隨機實驗數據上預測 ITE，接着對樣本按照 ITE 升序排列後等頻分桶，計算每個 ITE 分桶下實驗組樣本佔比（下圖的 trtRatio 曲線）。理想情況下，每個 ITE 分桶中實驗組樣本佔比應該和隨機試驗中實驗組樣本佔比一致，此時 ITE 正交於 treatment。比如，隨機實驗中實驗組比對照組為 1 比 1，那麼 trtRatio 就應該在 1/2 附近浮動。如果 trtRatio 比例不符合預期，我們就可以進一步去排查模型結構的問題。這項工具更是作為標準測試組件融入到分佈式因果森林早期的開發過程中。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/4143f18914cfa26f00ddace0aa6cbdf3354727.png&quot; alt=&quot;圖 5 模型偏差大&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/c9066565b8c3cdcad38b2572e2f9a881343353.png&quot; alt=&quot;圖 6 模型偏差小&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3.2 因果效應量級關係評估&lt;/h3&gt; 
&lt;p&gt;因果效應的序關係和量級關係同樣重要，只是將彈性的序關係學習準確而沒有將彈性的量級關係學習準確，決策者無法預估該 treatment 對用户的影響程度。例如，將量級錯誤的彈性應用到運籌優化決策中，可能會導致無法滿足重要約束從而無法求得可行解。針對彈性量級無法評估的問題，我們在原有的 qini_curve 基礎上增加了 qini_pred_curve_counterfactual 和 qini_pred_curve。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;qini_curve 及其擴展&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;qini_pred_curve_counterfactual：將每個樣本按照模型預測的 ITE 降序排列，按照如下公式依次計算前 t 個樣本的反事實 qini_pred 即可得到曲線。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-5ecb167108beb8ff379cab897d06d6f09be.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過比較 qini_pred_curve_counterfactual 和 qini_curve 這兩條曲線的重合程度和右端點縱座標，我們可以觀察出 ITE 的預估量級和真實量級是否一致。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;qini_pred_curve&lt;/strong&gt;：每個樣本按照模型預測的 ITE 降序排列，按照如下公式依次計算前 t 個樣本的 qini_pred 即可得到曲線。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a3b2affd62412dbc8d62ea2a54687f455c5.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;qini_pred_curve 和 qini_pred_curve_counterfactual 差異越大，模型偏差越大，也就是 ITE 與 T 不正交。我們以下圖的案例來説明這三條曲線。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/be3f50392fd423182d5dafbd8b5a8472379525.png&quot; alt=&quot;圖 7 模型偏差大&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p1.meituan.net/travelcube/1898fa0ff4b6d85e0d86641c38174c1e383597.png&quot; alt=&quot;圖 8 模型偏差小&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;根據這些曲線的形狀、覆蓋面積、重合程度，我們可以得到如下的判斷：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;如果數據無偏，那麼 qini_pred_curve_counterfactual 會和 qini_pred_curve 重合，反之則表示數據有偏，即 ITE 不獨立於 T。&lt;/li&gt; 
 &lt;li&gt;qini_pred_curve_counterfactual 和 qini_curve 的右端點縱軸的差距，代表了彈性預估的量級和彈性真實的量級存的差距。&lt;/li&gt; 
 &lt;li&gt;label 曲線的 qini score&amp;gt;0.5，也就是 label 曲線有明顯向下的趨勢時，存在過擬合現象，即學到了負彈性。&lt;/li&gt; 
 &lt;li&gt;如果彈性模型對於彈性序關係和彈性量級關係學習得非常準確，那麼三條曲線會幾乎重合在一起。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;avgITE 和 ATE 的對比&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;上文中提到的三項指標都是累計因果效應的評估，我們還想更有針對性地觀察每個彈性分桶下預估因果效應和真實因果效應量級的差異，所以開發了 avgITE 和 CATE 的對比工具。&lt;/p&gt; 
&lt;p&gt;同樣將樣本按照模型預測的 ITE 降序排列，然後等頻分桶，統計每個分桶內預估 ITE 的均值（下圖的 avgITE 曲線）和 CATE 值（下圖的 cate 曲線）。對比 avgITE 和 CATE，可以評估出真實因果效應和預估因果效應量級的差異。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-82835cb07762e4fb5fc9f8b8c8a619acf49.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/734da9b3cb35ac978be28396ddf5bd0e288654.png&quot; alt=&quot;圖 9 預測與真實 ITE 量級偏差大&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3.3 分佈式評估體系&lt;/h3&gt; 
&lt;p&gt;早期我們也使用了 pandas 實現的單機評估算法，當樣本量增加到 400w 條以上時遇到了嚴重的單機瓶頸。為此，我們對上述評估指標全部做了分佈式改造。排序類指標的實現有分桶積分和逐條積分兩種實現思路。考慮到逐條積分會有更高的精度，最終選擇了分佈式環境下逐條積分的方案。&lt;/p&gt; 
&lt;p&gt;不僅如此，我們還使用 Spark 實現了帶權重的分佈式的因果效應評估，能夠支持十億樣本的評估。此外我們還融入了評估預估 y 與觀測值 Y 之間的差異的指標，包括 mae/mse/rmse，並將這些指標封裝到二元因果效應評估組件中。由於我們實現的部分因果森林算法能夠輸出多元 treatment 下預估的 y，因此我們還進一步封裝了多元因果效應（拆分成多個二元因果效應）評估功能。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://p0.meituan.net/travelcube/b6c0a0f476c06dd3b40373370fb88186213057.png&quot; alt=&quot;圖 10 Causal n Spark&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;4. 總結&lt;/h2&gt; 
&lt;p&gt;經過兩年持續迭代，我們實現的分佈式因果推斷工具包已經發展成集模型訓練、評估、去偏、Serving 於一身的綜合型因果工具包。我們內部為這個項目命名為 Causal On Spark，簡稱 COS。目前這個項目也已經全部集成到圖靈機器學習平台中。將來有機會我們會再次為大家分享美團履約技術團隊在分佈式因果推斷領域的探索和實踐經驗。&lt;/p&gt; 
&lt;h2&gt;5. 本文作者&lt;/h2&gt; 
&lt;p&gt;立煌、子青、鄭宸、琦帆、兆軍，均來自美團到家事業羣/履約平台技術部。&lt;/p&gt; 
&lt;h2&gt;6. 參考資料&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[1] Wager S, Athey S. Estimation and inference of heterogeneous treatment effects using random forests[J]. Journal of the American Statistical Association, 2018, 113(523): 1228-1242.&lt;/li&gt; 
 &lt;li&gt;[2] Athey S, Tibshirani J, Wager S. Generalized random forests[J]. The Annals of Statistics, 2019, 47(2): 1148-1178.&lt;/li&gt; 
 &lt;li&gt;[3] Li, G., Chen, Q., &amp;amp; Usunier, N. (2017). LightGBM: A Highly Efficient Gradient Boosting Decision Tree. Proceedings of the 31st International Conference on Neural Information Processing Systems (NIPS 2017), 3146-3154.&lt;/li&gt; 
 &lt;li&gt;[4] Chen, T., &amp;amp; Guestrin, C. (2016). XGBoost: A Scalable Tree Boosting System. Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD &#39;16), 785-794.&lt;/li&gt; 
 &lt;li&gt;[5] 微軟亞洲研究院：《開源 | LightGBM：三天內收穫 GitHub 1000 星》.&lt;/li&gt; 
 &lt;li&gt;[6] &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgrf-labs.github.io%2Fgrf%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://grf-labs.github.io/grf/index.html&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[7] &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgrf-labs.github.io%2Fgrf%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://github.com/uber/causalml&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[8] &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgrf-labs.github.io%2Fgrf%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://github.com/apache/spark&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/meituantech/blog/10946678</link>
            <guid isPermaLink="false">https://my.oschina.net/meituantech/blog/10946678</guid>
            <pubDate>Fri, 13 Sep 2024 08:24:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Docker 修改其訂閲計劃</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Docker 宣佈正在重新制定其訂閲計劃，以便所有計劃都可以使用更多功能和服務，並且還將更新定價以反映新增功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Docker 的計劃包括 Docker Personal、Docker Pro、Docker Team 和 Docker Business，這些計劃均經過重新制定，使客户能夠通過單一訂閲訪問所需的一切，並明確規定消費限制，還能夠根據需要添加更多內容。計劃變更將於 11 月 15 日生效。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;263&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ec29dec3f37fe212e7c8418cd5f44b2f9f3.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;所有計劃均包括訪問 Docker Desktop、Docker Hub、Docker Build Cloud、Docker Scout 和 Testcontainers Cloud。Team 和 Business 計劃將包括 Docker Scout 中的無限制漏洞分析，並且所有計劃現在都包括 Docker Build Cloud minutes 和 Docker Scout analyzed repos。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，Docker Hub 的鏡像拉取和存儲限制正在轉向基於消費的定價，Docker 表示這隻會影響最高級別的商業客户，相當於不到 3% 的賬户。提高鏡像拉取限制的目的是讓大多數服務賬户上的 Docker Team 和 Docker Business 客户受益，因為更高的限制將免除之前產生的費用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;隨着新變化而來的還有價格的變化。Docker Personal 仍然免費，Docker Business 的定價也保持不變。Docker Pro 的價格從 5 美元/月漲至 9 美元/月，Docker Team 的價格從 9 美元/用户/月漲至 15 美元/用户/月。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.docker.com%2Fblog%2Fnovember-2024-updated-plans-announcement%2F&quot; target=&quot;_blank&quot;&gt;查看官方博客&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311774/docker-november-2024-updated</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311774/docker-november-2024-updated</guid>
            <pubDate>Fri, 13 Sep 2024 07:38:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>Servo 網頁引擎助力打造全新瀏覽器 Verso，支持多視圖與多窗口</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;最近，Servo 開源社區宣佈他們正在使用 Servo 網頁引擎開發一款名為 Verso 的全新網頁瀏覽器。Servo 是由 Mozilla 主導開發的高性能網頁渲染引擎，其主要負責網頁腳本執行和佈局渲染等關鍵功能。去年 Servo 社區基於 egui 構建了新的瀏覽器 UI 後，今年 Servo 技術指導委員會（TSC）成員吳昱緯（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwusyong&quot; target=&quot;_blank&quot;&gt;@wusyong&lt;/a&gt;）進一步創建了 Verso 項目，旨在探索使用 Servo 打造功能完善網頁瀏覽器所需的特性。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;190&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f086f106e06bd7c81b1e5ad919a156651dc.png&quot; width=&quot;580&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Verso 項目的一大亮點是支持多視圖（multi-view）功能。通過在單個窗口中以標籤頁的形式創建多個網頁，Verso 還能利用額外的視圖繪製瀏覽器 UI 界面，從而在實戰中檢驗 Servo 是否能滿足各種實用需求，如彈窗、右鍵菜單、文件選擇器等。Servo 核心開發者@delan 為此提供了多視圖的基礎支持。&lt;/p&gt; 
&lt;p&gt;除了多視圖，Verso 還實現了多窗口（multi-window）功能。由於多窗口會影響到渲染、圖形 API、VR 等多個組件，Verso 開發者不得不從底層解決問題。Servo 目前使用基於 OpenGL 的 WebRender 進行渲染，要支持多窗口就需要支持多個 OpenGL surface。Verso 採用了單 context 多 surface 的方案，在節省內存和線程的同時，仍有一些需要進一步完善之處。&lt;/p&gt; 
&lt;p&gt;展望未來，Verso 將以多視圖和多窗口為基礎，持續探索瀏覽器 UI 構建。與此同時，Servo 社區還計劃從改進統計數據、支持更多 Web API、引入多進程架構和沙盒等方面，不斷完善 Servo 引擎本身。歐盟委員會旗下的 NLNet 基金會對這一開源項目提供了資助，表明開放的瀏覽器生態正在得到越來越多的認可與支持。我們也期待 Servo 和 Verso 能給 Web 開發領域帶來更多創新。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311754</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311754</guid>
            <pubDate>Fri, 13 Sep 2024 05:46:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
    </channel>
</rss>