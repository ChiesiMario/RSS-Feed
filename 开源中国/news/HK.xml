<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Tue, 22 Apr 2025 07:37:39 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>67 款 APP 違法收集使用個人信息被通報</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家網絡與信息安全信息通報中心近日&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrVjWOnNkjWhgC6sIL2JuWA&quot; target=&quot;_blank&quot;&gt;通報&lt;/a&gt;了 67 款違法違規收集使用個人信息情況移動應用。具體如下：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;1、在 App 首次運行時未通過彈窗等明顯方式提示用户閲讀隱私政策等收集使用規則；以默認選擇同意隱私政策等非明示方式徵求用户同意；個人信息處理者在處理個人信息前，未以顯著方式、清晰易懂的語言真實、準確、完整地向個人告知個人信息處理者的名稱或者姓名、聯繫方式、個人信息的保存期限等。涉及 11 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《客很多》（版本 2.8.9，百度手機助手）、《城泊通》（版本 3.2.1，360 手機助手）、《e 萬源》（版本 3.5.1，應用寶）、《贏海雲管船》（版本 2.12.6，應用寶）、《口袋家教學生》（版本 3.3.32，應用寶）、《約駕校》（版本 2.1.88，應用寶）、《物流頭條》（版本 1.7.5，360 手機助手）、《V 同城》（版本 2.0.6，應用寶）、《昕寶泊車》（版本 1.0.8，騰牛網）、《實景羅盤指南針》（版本 5.0.3，應用寶）、《高人匯》（版本 7.47，360 手機助手）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2、隱私政策未逐一列出 App（包括委託的第三方或嵌入的第三方代碼、插件）收集使用個人信息的目的、方式、範圍等。涉及 35 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;《甘肅高速》（版本 1.6.2，應用寶）、《福運萬年曆》（版本 1.0.6，華為應用市場）、《如意萬年曆》（版本 3.12，vivo 應用商店）、《客很多》（版本 2.8.9，百度手機助手）、《牧原通司機》（版本 2.4.4，87G 手遊網）、《趣衞課堂》（版本 3.0.6，當下軟件園）、《城泊通》（版本 3.2.1，360 手機助手）、《小蛙農服》（版本 2.1.8，應用寶）、《E 體教》（版本 2.0.16，應用寶）、《蜂雲匯優選》（版本 2.2，應用寶）、《德泰服務》（版本 3.2.8，應用寶）、《贏海雲管船》（版本 2.12.6，應用寶）、《口袋家教學生》（版本 3.3.32，應用寶）、《煤炭江湖》（版本 3.3.1，百度手機助手）、《阿吉泰》（版本 6.1.12，應用寶）、《約駕校》（版本 2.1.88，應用寶）、《雲端金融》（版本 1.3.4.001，應用寶）、《咪聊》（版本 1.4.8，360 手機助手）、《語文高分作文》（版本 1.054，360 手機助手）、《V 同城》（版本 2.0.6，應用寶）、《泛美教育》（版本 1.2，應用寶）、《龍投智慧停車》（版本 1.1.0，5577 網站）、《山西 ETC》（版本 1.6.3.4，蘋果應用商店）、《昕寶泊車》（版本 1.0.8，騰牛網）、《芬空間》（版本 4.1.6，豌豆莢）、《捷信金融》（版本 34.53.2，應用寶）、《車貸 e 通》（版本 3.4.0，豌豆莢）、《中華萬年曆》（版本 9.5.0，360 手機助手）、《萬年曆》（版本 7.1.5，百度手機助手）、《知命》（版本 7.4.0，應用寶）、《眾安貸》（版本 3.3.1，應用寶）、《匯通啓富-山西證券》（版本 7.7.4.1，vivo 應用商店）、《弘曆投教》（版本 1.3.9，小米應用商店）、《高人匯》（版本 7.47，360 手機助手）、《風暴迷城》（版本 1.04.06，當快軟件園）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3、個人信息處理者向其他個人信息處理者提供其處理的個人信息的，未向個人告知接收方的名稱或者姓名、聯繫方式、處理目的、處理方式和個人信息的種類，並取得個人的單獨同意；App 客户端向第三方提供個人信息，包括通過客户端嵌入的第三方代碼、插件等方式向第三方提供個人信息，未做匿名化處理。涉及 23 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《血糖記錄本》（版本 5.3.0，應用寶）、《甘肅高速》（版本 1.6.2，應用寶）、《超合金坦克大戰》（版本 3.4，應用寶）、《移動白條》（版本 1.0.0，vivo 應用商店）、《分期白條》（版本 1.0.0，應用寶）、《牧原通司機》（版本 2.4.4，87G 手遊網）、《信仁匯通》（版本 1.1.1，360 手機助手）、《E 體教》（版本 2.0.16，應用寶）、《蜂雲匯優選》（版本 2.2，應用寶）、《德泰服務》（版本 3.2.8，應用寶）、《口袋家教學生》（版本 3.3.32，應用寶）、《煤炭江湖》（版本 3.3.1，百度手機助手）、《阿吉泰》（版本 6.1.12，應用寶）、《龍投智慧停車》（版本 1.1.0，5577 網站）、《山西 ETC》（版本 1.6.3.4，蘋果應用商店）、《昕寶泊車》（版本 1.0.8，騰牛網）、《車貸 e 通》（版本 3.4.0，豌豆莢）、《武清村鎮銀行》（版本 6.4.5.3，vivo 應用商店）、《實景羅盤指南針》（版本 5.0.3，應用寶）、《知命》（版本 7.4.0，應用寶）、《村鎮銀行（福建農商）》（版本 1.3.2，vivo 應用商店）、《攜程金融》（版本 3.5.8，多多軟件站）、《蘭州銀行企業版》（版本 1.4.2，應用寶）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 4、App 未在徵得用户同意後開始收集個人信息或打開可收集個人信息的權限。涉及 10 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《準準》（版本 2.1.1，應用寶）、《哇題庫》（版本 3.1.4，應用寶）、《北大荒農服》（版本 40.00.15，應用寶）、《幫車寶》（版本 5.1.18，應用寶）、《糧信糧油信息網》（版本 23.1，應用寶）、《信仁匯通》（版本 1.1.1，360 手機助手）、《蜂雲匯優選》（版本 2.2，應用寶）、《龍投智慧停車》（版本 1.1.0，5577 網站）、《實景羅盤指南針》（版本 5.0.3，應用寶）、《知命》（版本 7.4.0，應用寶）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 5、未提供有效的更正、刪除個人信息及註銷用户賬號功能；雖提供了更正、刪除個人信息及註銷用户賬號功能，但未及時響應用户相應操作，需人工處理的，未在承諾時限內完成核查和處理。涉及 7 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《分期白條》（版本 1.0.0，應用寶）、《客很多》（版本 2.8.9，百度手機助手）、《華金教育》（版本 3.0.4，360 手機助手）、《加盟匯》（版本 1.1.6，360 手機助手）、《山西 ETC》（版本 1.6.3.4，蘋果應用商店）、《昕寶泊車》（版本 1.0.8，騰牛網）、《匯通啓富-山西證券》（版本 7.7.4.1，vivo 應用商店）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 6、投訴、舉報未在承諾時限內受理並處理；個人信息處理者未建立便捷的個人行使權利的申請受理和處理機制。涉及 9 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《超合金坦克大戰》（版本 3.4，應用寶）、《趣衞課堂》（版本 3.0.6，當下軟件園）、《城泊通》（版本 3.2.1，360 手機助手）、《e 萬源》（版本 3.5.1，應用寶）、《贏海雲管船》（版本 2.12.6，應用寶）、《曹操送》（版本 6.6.2，360 手機助手）、《物流頭條》（版本 1.7.5，360 手機助手）、《柚嘉健康醫生版》（版本 1.4.1，360 手機助手）、《華金教育》（版本 3.0.4，360 手機助手）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 7、未向用户提供撤回同意收集個人信息的途徑、方式；基於個人同意處理個人信息的，個人有權撤回其同意，個人信息處理者未提供便捷的撤回同意的方式。涉及 49 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《血糖記錄本》（版本 5.3.0，應用寶）、《甘肅銀行》（版本 7.2.1，應用寶）、《甘肅高速》（版本 1.6.2，應用寶）、《跑鬍子》（版本 2.0.7，應用寶）、《桂林字牌手機版》（版本 1.0.22.595，應用寶）、《超合金坦克大戰》（版本 3.4，應用寶）、《準準》（版本 2.1.1，應用寶）、《移動白條》（版本 1.0.0，vivo 應用商店）、《分期白條》（版本 1.0.0，應用寶）、《河北航空》（版本 2.2.5，360 手機助手）、《張家口銀行》（版本 6.0.0，應用寶）、《哇題庫》（版本 3.1.4，應用寶）、《客很多》（版本 2.8.9，百度手機助手）、《牧原通司機》（版本 2.4.4，87G 手遊網）、《問真八字排盤》（版本 2.4.9，當快軟件園）、《趣衞課堂》（版本 3.0.6，當下軟件園）、《珠子云計算》（版本 1.9.6，360 手機助手）、《北大荒農服》（版本 40.00.15，應用寶）、《城泊通》（版本 3.2.1，360 手機助手）、《幫車寶》（版本 5.1.18，應用寶）、《陽光村鎮銀行》（版本 2.0.1.0，360 手機助手）、《糧信糧油信息網》（版本 23.1，應用寶）、《E 體教》（版本 2.0.16，應用寶）、《蜂雲匯優選》（版本 2.2，應用寶）、《德泰服務》（版本 3.2.8，應用寶）、《e 萬源》（版本 3.5.1，應用寶）、《贏海雲管船》（版本 2.12.6，應用寶）、《口袋家教學生》（版本 3.3.32，應用寶）、《煤炭江湖》（版本 3.3.1，百度手機助手）、《阿吉泰》（版本 6.1.12，應用寶）、《雲端金融》（版本 1.3.4.001，應用寶）、《咪聊》（版本 1.4.8，360 手機助手）、《柚嘉健康醫生版》（版本 1.4.1，360 手機助手）、《語文高分作文》（版本 1.054，360 手機助手）、《華金教育》（版本 3.0.4，360 手機助手）、《加盟匯》（版本 1.1.6，360 手機助手）、《V 同城》（版本 2.0.6，應用寶）、《泛美教育》（版本 1.2，應用寶）、《龍投智慧停車》（版本 1.1.0，5577 網站）、《山西 ETC》（版本 1.6.3.4，蘋果應用商店）、《昕寶泊車》（版本 1.0.8，騰牛網）、《芬空間》（版本 4.1.6，豌豆莢）、《捷信金融》（版本 34.53.2，應用寶）、《武清村鎮銀行》（版本 6.4.5.3，vivo 應用商店）、《匯通啓富-山西證券》（版本 7.7.4.1，vivo 應用商店）、《覓睿》（版本 5.7.7，應用寶）、《弘曆投教》（版本 1.3.9，小米應用商店）、《蘭州銀行企業版》（版本 1.4.2，應用寶）、《風暴迷城》（版本 1.04.06，當快軟件園）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 8、通過自動化決策方式向個人進行信息推送、商業營銷，未同時提供不針對其個人特徵的選項，或者未向個人提供便捷的拒絕方式。涉及 4 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《河北航空》（版本 2.2.5，360 手機助手）、《芬空間》（版本 4.1.6，豌豆莢）、《中華萬年曆》（版本 9.5.0，360 手機助手）、《雲視通》（版本 10.6.16，應用寶）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 9、處理敏感個人信息未取得個人的單獨同意；個人信息處理者處理敏感個人信息的，未向個人告知處理敏感個人信息的必要性以及對個人權益的影響。涉及 5 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《準準》（版本 2.1.1，應用寶）、《客很多》（版本 2.8.9，百度手機助手）、《糧信糧油信息網》（版本 23.1，應用寶）、《小蛙農服》（版本 2.1.8，應用寶）、《攜程金融》（版本 3.5.8，多多軟件站）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 10、個人信息處理者處理不滿十四周歲未成年人個人信息的，未制定專門的個人信息處理規則；收集未成年人信息未取得監護人單獨同意。涉及 3 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《客很多》（版本 2.8.9，百度手機助手）、《趣衞課堂》（版本 3.0.6，當下軟件園）、《萬年曆》（版本 7.1.5，百度手機助手）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 11、個人信息處理者向中華人民共和國境外提供個人信息的，未向個人告知境外接收方的名稱或者姓名、聯繫方式、處理目的、處理方式、個人信息的種類以及個人向境外接收方行使本法規定權利的方式和程序等事項，並取得個人的單獨同意。涉及 1 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《客很多》（版本 2.8.9，百度手機助手）。&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 12、未採取相應的加密、去標識化等安全技術措施。涉及 10 款移動應用如下：&lt;br&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; 《客很多》（版本 2.8.9，百度手機助手）、《牧原通司機》（版本 2.4.4，87G 手遊網）、《朝暮計劃》（版本 2.2.5，豌豆莢）、《問真八字排盤》（版本 2.4.9，當快軟件園）、《趣衞課堂》（版本 3.0.6，當下軟件園）、《珠子云計算》（版本 1.9.6，360 手機助手）、《龍投智慧停車》（版本 1.1.0，5577 網站）、《山西 ETC》（版本 1.6.3.4，蘋果應用商店）、《芬空間》（版本 4.1.6，豌豆莢）、《雲視通》（版本 10.6.16，應用寶）。&lt;br&gt; &lt;br&gt; （注：文中所列移動應用檢測時間為 2025 年 3 月 1 日至 2025 年 4 月 8 日）&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345931</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345931</guid>
            <pubDate>Tue, 22 Apr 2025 07:04:30 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>微軟開源「原生 1-bit」模型：超過 20 億參數、大幅減少內存佔用</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;微軟近日發佈了 20 億參數的 1-bit 模型——BitNet b1.58 LLM 家族，稱此新型模型比主流 Transformer LLM 更不佔內存且更低能耗，適合在 CPU 或較小型硬件平台上執行。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Hugging Face 地址：https://huggingface.co/microsoft/bitnet-b1.58-2B-4T&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;微軟研究院與中國科學院研究人員 2023 年發佈名為&lt;em&gt;《BitNet: Scaling 1-bit Transformers for Large Language Models》&lt;/em&gt;的論文，首度發佈為大語言模型設計的 1-bit Transformer 架構，稱為 BitNet。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;652&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0422/144455_0wht_2720166.png&quot; width=&quot;1640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2310.11453&quot; target=&quot;_blank&quot;&gt;https://arxiv.org/pdf/2310.11453&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;微軟表示，這是第一個參數 20 億的開源原生 1-bit LLM。它是以 4 兆字詞的數據集訓練而成，具備 4096 token 的 context length。&lt;/p&gt; 
&lt;p&gt;研究團隊説明，在 BitNet b1.58 模型中，單一參數或權重是三元（ {-1, 0, 1}）的。此類新模型架構引入 BitLinear 作為 nn.Linear 層的替代，能夠訓練 1-bit 的權重，訓練出的 LLM 和同樣參數量及訓練字詞的全精度（FP16）Transformer LLM 模型相較，具有相同的困惑度（perplexity）及終端任務性能，但卻能大幅減少了內存佔用和能源耗損，就延遲性及傳輸率表現而言也更省成本。&lt;/p&gt; 
&lt;p&gt;微軟團隊認為，最重要的是， BitNet b1.58 提出了新的模型擴展法則，可用於訓練高性能及低成本的下時代 LLM，而且 BitNet b1.58 對 CPU 設備更為友善，更適合執行於邊緣和移動設備上，顯示出性能和能力。研究人員相信 1-bit LLM 可催生出新的硬件和為其優化的系統。&lt;/p&gt; 
&lt;p&gt;根據研究團隊比較測試，BitNet b1.58-3B/3.9B 版本佔用內存為 2.22GB 及 2.38GB，遠小於 LLaMA-3B 的 7.89GB。延遲性來看，BitNet b1.58-3B/3.9B 各為 1.87ms 及 2.11ms，優於 LLaMA-3B 的 5.07ms。二個 BitNet b1.58 的 PPL 以及零樣本訓練準確性表現，也都超越 LLaMA-3B。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-71148999f84c54ad70f9d7aa205865f74b4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;微軟已在 Hugging Face 開源三個版本的 Bitnet-b1.58 模型權重，一是 BitNet b1.58 2B4T，適合模型部署。二是 Bitnet-b1.58-2B-4T-bf16，僅適合模型訓練或微調。BitNet-b1.58-2B-4T-gguf 則包含 GGUF 格式的權重，兼容 bitnet.cpp 函數庫用於 CPU 推論。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0422/144344_1GHt_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;論文地址：https://arxiv.org/abs/2504.12285&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;但微軟也警告開發人員，目前 Transformers 函數庫的執行方式並沒有包含為 BitNet 設計、高度優化的計算核心，因此無法彰顯 BitNet 架構的好處。&lt;/p&gt; 
&lt;p&gt;所以，雖然開發人員可能會因這個模型使用了量化（quantized）的權重而看到節省了一點內存，但無法看出速度快、能耗低等性能優勢，因為 transformers 本身不支持 BitNet 所需要的底層運算加速。想要體驗論文中提到的性能（包括低功耗和高效率的推論），必須使用官方提供的 C++ 實例版本：bitnet.cpp。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345921/microsoft-bitnet</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345921/microsoft-bitnet</guid>
            <pubDate>Tue, 22 Apr 2025 06:47:30 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 發佈 Agent 開發指南</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;OpenAI 官方發佈了首個 Agent 開發指南，幫助開發者如何通過其 SDK 快速開發智能體。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0422/143339_bEYO_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.openai.com%2Fbusiness-guides-and-resources%2Fa-practical-guide-to-building-agents.pdf&quot; target=&quot;_blank&quot;&gt;https://cdn.openai.com/business-guides-and-resources/a-practical-guide-to-building-agents.pdf&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在這份指南中，OpenAI 詳細介紹了從智能體的大模型選擇，工具定義，複雜智能體，安全護欄等所有開發流程，並附加了大量實際開發案例。&lt;/p&gt; 
&lt;p&gt;即便你不使用 OpenAI 開源的 AgentSDK 來開發智能體，也可以作為開發參考樣本，它提供了清晰的開發框架和思路，無論是資深開發者還是剛入門的新人都能獲得很好的啓發。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345914/openai-a-practical-guide-to-building-agents</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345914/openai-a-practical-guide-to-building-agents</guid>
            <pubDate>Mon, 14 Apr 2025 06:34:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>​哥倫比亞大學退學生開發「AI 面試作弊神器」，融資 500 萬美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;哥倫比亞大學的兩位退學生 Chungin 「Roy」 Lee 和 Neel Shanmugam 聯合創辦的初創公司 Cluely，近日宣佈完成 530 萬美元的種子輪融資，投資方包括 Abstract Ventures 和 Susa Ventures。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Cluely 主要推出了一款名為 Interview Coder 的 AI 工具，該工具被稱為 「面試作弊神器」，能夠在各種場景中幫助用户隱秘使用人工智能，包括考試、銷售電話和求職面試等。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;349&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b9f0bdd893d0c8e90d81a5d9a3ab7cf6e80.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;這款工具的開發源於 Lee 在社交媒體平台 X 上的一則熱門帖子。Lee 透露，他和聯合創始人因共同開發 Interview Coder 而被哥倫比亞大學停學。該工具的核心是一個隱藏式的瀏覽器窗口，能夠在面試官或考官的視線之外工作，提供實時的信息和幫助。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Lee 目前擔任 Cluely 的首席執行官，他在採訪中提到，該 AI 工具在本月的年度經常性收入（ARR）已經突破 300 萬美元。Lee 表示，正是藉助這款工具，他成功獲得了亞馬遜的實習機會。雖然亞馬遜未對他的情況做出回應，但公司強調，所有面試者都不得使用任何未經授權的工具。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;聯合創始人 Neel Shanmugam 同樣年僅 21 歲，也曾是哥倫比亞大學的學生，現擔任 Cluely 的首席運營官。由於參與該工具的開發，他們都曾面臨校方的紀律處分。根據哥大學生報的報道，兩人目前已經正式退學，校方以保護學生隱私為由，拒絕對此事作出評論。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;起初，Cluely 的目標是幫助程序員解決 LeetCode 上的編程題目，這些題目在部分程序員中被視為老舊和浪費時間。Lee 自言，正是這款 AI 工具幫助他順利獲得了實習機會，這也引發了人們對使用 AI 工具在求職面試中是否合理的討論。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345910</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345910</guid>
            <pubDate>Mon, 14 Apr 2025 06:22:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI o3 模型基準測試成績遠低於官方宣傳分數</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F04%2F20%2Fopenais-o3-ai-model-scores-lower-on-a-benchmark-than-the-company-initially-implied%2F&quot; target=&quot;_blank&quot;&gt;根據 TechCrunch 的報道&lt;/a&gt;，OpenAI o3 模型的第一方與第三方基準測試結果存在顯著差異，引發了外界對其公司透明度和模型測試實踐的質疑。&lt;/p&gt; 
&lt;p&gt;去年 12 月，OpenAI 首次發佈 o3 模型時宣稱，該模型能夠在 FrontierMath 這一極具挑戰性的數學問題集上正確回答超過四分之一的問題。這一成績遠遠超過了競爭對手 —— 排名第二的模型僅能正確回答約 2% 的 FrontierMath 問題。&lt;/p&gt; 
&lt;p&gt;OpenAI 首席研究官 Mark Chen 在直播中表示：「目前市場上所有其他產品在 FrontierMath 上的成績都不足 2%，而我們在內部測試中，使用 o3 模型在激進的測試時計算設置下，能夠達到超過 25% 的正確率。」&lt;/p&gt; 
&lt;p&gt;然而，這一高分似乎是一個上限值，是通過一個計算資源更為強大的 o3 模型版本實現的，而並非是 OpenAI 上週公開發布的版本。&lt;/p&gt; 
&lt;p&gt;負責 FrontierMath 的 Epoch 研究所於上週五&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FEpochAIResearch%2Fstatus%2F1913379475468833146&quot; target=&quot;_blank&quot;&gt;公佈&lt;/a&gt;&lt;/u&gt;了其對 o3 模型的獨立基準測試結果，發現 o3 的得分僅為約 10%，遠低於 OpenAI 此前聲稱的最高分數。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1846&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0422/142113_mK3X_2720166.png&quot; width=&quot;1638&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這並不意味着 OpenAI 故意撒謊，該公司在 12 月份公佈的基準測試結果中也包含了一個與 Epoch 測試結果相符的較低分數。Epoch 還指出，其測試設置可能與 OpenAI 有所不同，並且其評估使用了更新版本的 FrontierMath。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345909/openais-o3-ai-model-scores-lower-on-a-benchmark</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345909/openais-o3-ai-model-scores-lower-on-a-benchmark</guid>
            <pubDate>Mon, 14 Apr 2025 06:22:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>真我推出首款 AI 翻譯耳機，支持 32 種語言翻譯</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;真我手機官方微博宣佈，其首款 AI 翻譯耳機 Bud Air7Pro 即將於 4 月 23 日下午 16 時正式上市。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;這款耳機將搭載訊飛的星火認知大模型 4.0Ultra，具備強大的翻譯能力，不僅能夠支持中文與 32 種語言的面對面翻譯，還具備同聲傳譯功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;337&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-523052d04106b4daf3c747474edf152e292.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;這款耳機的發佈將與真我 GT7 手機的新品發佈會一起進行，屆時將展示更多創新技術。真我 GT7 手機搭載的是天璣 9400+ 芯片，配備 7200mAh 的大電池，支持 100W 光速充電技術。此外，手機還採用全新的 GT 性能引擎 2.0，結合芯片級內核技術，承諾實現 「無限穩幀」，使得用户在玩遊戲時更加流暢。為了更好地散熱，GT7 還配備了行業最大 7700mm² 的單 VC 均熱板以及首發的冰感石墨烯材料，確保長時間使用的穩定性。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345904</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345904</guid>
            <pubDate>Mon, 14 Apr 2025 06:05:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Trae 重磅升級：全面開放自定義 AI 能力，用户可打造個人專屬「AI 工程師」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;隨着 AI 技術的迅猛發展，編程工具正經歷着深刻的變革。2025 年 4 月，Trae 新版本正式上線，不僅豐富了品牌內涵，也帶來了多項重磅升級，率先在行業內勾勒出具有想象力的個性化「AI 對話式編程新範式」。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;Trae 新版本將 Marscode 整合入「Trae」的品牌內涵中，統一了「Trae」的範式概念，緊密圍繞 AI 與人的「協作力」，突破了傳統 IDE 與 AI 插件助手形態邊界。與其他 IDE 工具相比，Trae 新版本可以提供更自動高效、協作流暢和個性定製的開發體驗，同時個性化與自由度也進一步提升，實現了用户可根據所需，在更短時間內完成複雜開發任務的 AI 協作能力，向着「打造真正的專屬 AI 工程師」這一目標繼續邁進，為用户提升開發效率和創新能力。&lt;/p&gt; 
&lt;h1&gt;對話式編程，更高效、更流暢、更定製&lt;/h1&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;升級中，Trae 新版本不僅帶來了智能體與上下文理解能力，還提供多種 AI 工具，並支持 MCP 自由接入各類外部資源；在產品交互形態上，Trae 新版本把原先的 Builder 與 Chat 板塊融合，打破了傳統以代碼為中心的 IDE 模式，率先一步走向「對話即編程」的未來開發模式，使 AI 的強大能力在編程領域以協作的方式深度釋放。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;@&lt;/strong&gt;&lt;strong&gt;智能體&lt;/strong&gt;&lt;strong&gt;：自定義屬於你的「&lt;/strong&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;strong&gt;研發夥伴」&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;具體來看，Trae 新版本引入了智能體系統，通過 Trae 內置的通用智能體@Builder，用户只需通過簡單的指令，即可實現「需求即代碼」，讓 AI 自主完成需求分析、方案規劃和任務執行。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;而更值得注意的是，Trae 新版本還上線了全新可自由配置的智能體體系。Trae 新版本允許用户自定義智能體，以適應不同研發需求。用户可以根據需求靈活定義工具、技能和任務邏輯，打造適配不同場景的專屬 AI 智能體，獲得自己的「AI 研發夥伴」。無論是複雜系統的構建還是日常代碼重構，這些智能體都能提供精準、高效的支持，使研發工作全流程「絲滑順暢」，配合緊密。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;#上下文理解：支持多類型文件輸入，更懂你的需求&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;Trae 新版本豐富的上下文理解能力，也成為其智能開發的關鍵。升級後的 Trae 新版本，上下文感知能力得到了顯著增強，可支持聯網搜索、文檔解析和代碼倉庫信息理解等多種功能。這種增強的上下文感知能力使得 Trae 能夠接收並理解更多類型的外部信息，包括但不限於產品原型文檔、figma 鏈接等多種類型上下文內容，從而更全面地理解開發者需求。另外，開發者還可以通過自定義 AI 工作規則 （Trae Rules），讓 AI 按照你的需求，執行個性化的任務。&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;打造開放&lt;/strong&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;strong&gt;工具體系，支持&lt;/strong&gt;&lt;strong&gt;MCP&lt;/strong&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;最後，Trae 還豐富了外部 AI 工具與資源接入的方式，不斷強化 AI 工具體系的生態化建設，帶來更強的任務處理能力與個性化程度。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;Trae 新版本現已支持 MCP（Model Context Protocol，模型上下文協議）協議，作為定義了應用程序和 AI 模型之間交換上下文信息方式，為大模型調用外部工具提供統一的標準的「入口」，此次 MCP 協議的實現為用户自由接入 AI 工具帶來了便利，進一步拓展了專屬「AI 團隊」定製的開放性。由此，Trae 新版本內的智能體可以自由調用外部的，帶有不同行業屬性的 AI 工具或資源，實現跨平台的系統集成、大規模數據處理和高級算法優化等，為各個領域、行業的開發任務帶來個性化定製，滿足不同的項目開發需求。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;例如，藉助前端 Agent，Trae 新版本，能夠調用 Figma 的 MCP 接口，快速將 UI 設計轉化為代碼。後端 Agent 則可操作數據庫，實現數據的增刪改查。更令人興奮的是，Trae 新版本的 Agent 還能連接 Blender 進行 3D 渲染，甚至通過音樂 MCP 接口進行音樂創作。這也表明 Trae 新版本不僅是一款編程工具，更是未來人類與 AI 交互的重要入口，它將極大地促進着人與 AI、AI 與 AI 之間的緊密協作。&lt;/p&gt; 
&lt;h1&gt;Trae 全新版本，創新 AI 編程協作新體驗&lt;/h1&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;不難看出，Trae 新版本從 AI 出發，為不同能力處於不同層次的開發者提供有效助力。對專業開發者而言，它可定義多種智能角色構建強大的「AI 團隊」，自動處理重複性任務，優化代碼質量和架構設計，助力其將精力聚焦於技術創新，突破效率瓶頸；對非專業開發者，它通過簡單對話將業務需求快速轉化為技術方案，跨越技術壁壘，加速創意驗證。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;Trae 新版本突破傳統工具的「中心執行者」侷限，重新定義了 AI 的開發範式，以「協作」替代「工具」，用「能力」突破「單向效率」，進一步清晰化「AI 工程師角色」，助力 AI 夥伴與人類研發者可以「各司其職」，雙向配合。可以説，它全方位、深層次協助開發者攻克難題，使其從繁瑣事務中解脱，重構創造力天花板。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;Trae 始終秉持「智能無限、協作無間」的核心價值，致力於成為真正的 AI 工程師，與開發者默契協作，高效完成任務。選擇 Trae，即選擇與智能夥伴同行，邁向無限可能的未來。&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;即刻百度搜索 Trae AI IDE，和我們一起，解鎖你的首個 AI 工程師夥伴吧！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345900</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345900</guid>
            <pubDate>Mon, 14 Apr 2025 05:57:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>Trae v1.3.0 發佈，新增 MCP 支持</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;字節跳動旗下的 AI 原生集成開發環境（AI IDE）Trae 已發佈 v1.3.0 版本，具體變更細節如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;合併 Chat 與 Builder 面板。你可以通過 @Builder 方式將 Builder 作為智能體使用。詳情參考《&lt;a href=&quot;https://www.oschina.net/ide/agent&quot;&gt;智能體&lt;/a&gt;》。&lt;/li&gt; 
 &lt;li&gt;支持將文檔內容和網頁內容作為上下文： 
  &lt;ul&gt; 
   &lt;li&gt;#Web：支持聯網搜索，AI 會自動提取網頁內的相關內容作為上下文。&lt;/li&gt; 
   &lt;li&gt;#Doc：支持通過 URL 或上傳 .md/.txt 文件的方式添加文檔集。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情參考《&lt;a href=&quot;https://www.oschina.net/ide/context&quot;&gt;上下文&lt;/a&gt;》。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持通過配置規則來規範 AI 的行為，包括： 
  &lt;ul&gt; 
   &lt;li&gt;個人規則：根據個人偏好創建適用於所有項目的規則。&lt;/li&gt; 
   &lt;li&gt;項目規則： 創建僅適用於當前項目的規則。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情參考《&lt;a href=&quot;https://www.oschina.net/ide/rules&quot;&gt;規則&lt;/a&gt;》。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;升級智能體（Agent）能力： 
  &lt;ul&gt; 
   &lt;li&gt;支持創建自定義智能體。你可以自定義智能體的提示詞和工具集。&lt;/li&gt; 
   &lt;li&gt;提供兩個內置智能體：Builder 和 Builder with MCP。&lt;/li&gt; 
   &lt;li&gt;支持為智能體開啓 「自動運行」 模式，使智能體自動執行命令和調用工具，同時支持配置命令黑名單。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情參考《&lt;a href=&quot;https://www.oschina.net/ide/agent&quot;&gt;智能體&lt;/a&gt;》。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持模型上下文協議（MCP）： 
  &lt;ul&gt; 
   &lt;li&gt;提供內置 MCP 市場，支持快速添加第三方 MCP Servers。&lt;/li&gt; 
   &lt;li&gt;支持將 MCP Server 添加到智能體進行使用，從而豐富智能體的能力。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情參考《&lt;a href=&quot;https://www.oschina.net/ide/model-context-protocol&quot;&gt;模型上下文協議&lt;/a&gt;》。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;259&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9610f08db7855b2462e630336227b4ed9d8.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更多詳情可查看 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.trae.ai%2Fide%2Fchangelog%3F_lang%3Dzh&quot; target=&quot;_blank&quot;&gt;changelog&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/336617&quot; target=&quot;_blank&quot;&gt;中國首款 AI IDE：Trae 國內版發佈&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345886/trae-1-3-0-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345886/trae-1-3-0-released</guid>
            <pubDate>Mon, 14 Apr 2025 03:53:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>谷歌 AI 概覽致網站點擊率暴跌 34.5%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#242424&quot;&gt;知名 SEO 工具提供商 Ahrefs 近期發佈一項研究，揭示了谷歌 AI 概覽功能對搜索結果頁面（SERP）點擊率的顯著負面影響。研究數據顯示，當搜索結果中出現 AI 概覽時，相關關鍵詞的平均點擊率驟降 34.5%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;392&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-92ed7fc38546395732f3309d9c08aa49267.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;該研究選取了 Ahrefs 關鍵詞資源管理器數據庫中的 30 萬個關鍵詞，其中一半觸發了 AI 概覽，另一半則未觸發。通過對比 2024 年 3 月（AI 概覽推出前）和 2025 年 3 月 (推出後) 的數據，研究人員發現，觸發 AI 概覽的關鍵詞平均點擊率從 0.073 大幅下降至 0.026。&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;令人擔憂的是，即使是未觸發 AI 概覽的信息類關鍵詞，其點擊率也從 0.056 降至 0.031。Ahrefs 的研究結果清晰地表明，谷歌的 AI 概覽功能正在顯著改變用户的搜索行為，並對網站的自然流量造成了嚴重衝擊。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345879</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345879</guid>
            <pubDate>Mon, 14 Apr 2025 03:33:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>生樹科技發佈高可控 AI 視頻大模型「Vidu Q1」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;生樹科技旗下的 Vidu AI 發佈了業內首個高可控 AI 視頻大模型「Q1」。&lt;/p&gt; 
&lt;p&gt;據介紹，Vidu Q1 在多主體細節可控、音效同步可控、畫質增強等方面都取得出色表現。並且 Vidu Q1 在四大核心能力進行了全面升級：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;極「質」高清：畫質細節全面提升，出片更清晰、更具質感；&lt;/li&gt; 
 &lt;li&gt;極「質」鏡頭：首尾幀銜接更順滑，鏡頭語言更具電影感；&lt;/li&gt; 
 &lt;li&gt;極「質」音效：一句話生成專屬音效，支持時段自定義和音效疊加；&lt;/li&gt; 
 &lt;li&gt;極「質」風格：動漫風格再度升級，穩定流暢、更具表現力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;目前，Vidu Q1 已上線 Vidu 官網，支持時長 5 秒、1080p 的視頻生成。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f651ce91fd82273f3e8e30d4ffdb4e2722.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;根據官方介紹，Vidu Q1 作為業內首個高可控 AI 視頻大模型，其在多主體細節可控（特別是動作、佈局可控）、音效同步可控、畫質增強等方面均取得顯著成效。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0422/113123_ip33_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;以多主體細節可控為例，在語義指令的基礎上，通過融入參考圖的視覺指令，Vidu Q1 支持對場景中多主體的位置、大小、運動軌跡等屬性進行更進一步的可控，對所有動作行為（出場、退場、坐立姿態、行動路線）進行精準調整。用户能夠明顯體驗到用更低的抽卡率實現更高質量的可控生成。&lt;/p&gt; 
&lt;p&gt;音效同步可控功能則確保了隨着視頻環境與畫面轉場，Vidu Q1 能夠輸出生成相應音效，並可精準控制每段音效的長短區間，精準設置每段音頻出現的時間點，如 0-2s 風聲、3-5s 雨聲等，節省時間的同時，也大大增強了視頻的沉浸感與感染力。&lt;/p&gt; 
&lt;p&gt;Vidu Q1 模型通過進一步增強畫質，則能夠為用户帶去更加清晰、細膩、逼真的視覺體驗。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345878</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345878</guid>
            <pubDate>Mon, 14 Apr 2025 03:31:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Java 開發玩轉 MCP：從 Claude 自動化到 Spring AI Alibaba 生態整合</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-d815590257bec8de39a8554864a558ad1b4.gif&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;摘要&lt;/h1&gt; 
&lt;p&gt;本文以原理與示例結合的形式講解 Java 開發者如何基於 Spring AI Alibaba 框架玩轉 MCP，主要包含以下內容。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;一些 MCP 基礎與快速體驗（熟悉的讀者可以跳過此部分）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如何將自己開發的 Spring 應用發佈為 MCP Server，驗證使用 Claude 或 Spring 應用作為客户端接入自己發佈的 Java MCP Server。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;發佈 stdio 模式的 MCP Server&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;發佈 SSE 模式的 MCP Server&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;開發另一個 Spring 應用作為 MCP Client 調用 MCP Server 服務&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 Claude 桌面應用接入我們的 Java MCP Server&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;3&quot;&gt; 
 &lt;li&gt;如何使用自己開發的 Spring 應用調用 MCP Server，包括調用自己發佈的 Java MCP Server，也包括市面上其他通用 MCP Server。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;配置並調用 stdio 模式的 MCP Server&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;配置並調用 SSE 模式的 MCP Server&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start=&quot;4&quot;&gt; 
 &lt;li&gt; &lt;p&gt;如何在 Spring AI Alibaba OpemManus 實現中使用 MCP 服務。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;關於存量應用如何一行代碼不動就可以被當作 MCP 服務被智能體調用，請關注後續文章解決方案。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Spring AI Alibaba 開源項目地址&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-ai-alibaba&quot; target=&quot;_blank&quot;&gt;https://github.com/alibaba/spring-ai-alibaba&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;本文外網博客地址&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava2ai.com&quot; target=&quot;_blank&quot;&gt;https://java2ai.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;本示例源碼地址&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples%2Ftree%2Fmain%2Fspring-ai-alibaba-mcp-example&quot; target=&quot;_blank&quot;&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-mcp-example&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;模型上下文協議（Model Context Protocol）入門&lt;/h1&gt; 
&lt;p&gt;2024 年 11 月，Anthropic 公司搞了個挺有意思的新玩意 - Model Context Protocol（模型上下文協議）簡稱為 MCP 協議。簡單來説，它就是給 AI 和各類工具數據之間搭了個標準化的&quot;橋樑&quot;，讓開發者不用再為對接問題頭疼了。&lt;/p&gt; 
&lt;p&gt;大模型應用可以使用別人分享的 MCP 服務來完成各種各樣的工作內容，你可以從這些地方獲取 MCP 服務：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;awesome-mcp-servers&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;mcp.so&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;MCP 協議在實際的應用場景上非常廣泛，列舉一些比較常見的應用場景：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;使用百度/高德地圖分析旅線計算時間&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;接 Puppeteer 自動操作網頁&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 Github/Gitlab 讓大模型接管代碼倉庫&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用數據庫組件完成對 Mysql、ES、Redis 等數據庫的操作&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用搜索組件擴展大模型的數據搜索能力&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.1 在 Claude Desktop 中體驗 MCP&lt;/h2&gt; 
&lt;p&gt;接下來我們使用 Claude 快速接入 Github 服務（提前申請 token），編輯一下 Claude Desktop 的配置文件：&lt;/p&gt; 
&lt;p&gt;macOS：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;~/Library/Application Support/Claude/claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;%APPDATA%\Claude\claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;添加如下內容，注意把&amp;lt;YOUR_TOKEN&amp;gt;替換成你自己申請的 token：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;{  &quot;mcpServers&quot;: {    &quot;github&quot;: {      &quot;command&quot;: &quot;npx&quot;,      &quot;args&quot;: [        &quot;-y&quot;,        &quot;@modelcontextprotocol/server-github&quot;      ],      &quot;env&quot;: {        &quot;GITHUB_PERSONAL_ACCESS_TOKEN&quot;: &quot;`&quot;      }    }  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;重啓 Claude 之後，可以看到已經加載了 MCP 對應的工具：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-dc8ec71d98792e7aa1c37e0066fbc80e7e4.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;點開之後可以看到具體的工具內容：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-91339cd4bb2dff78713d3257cbb2d70b586.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此時我們就可以享受 Github 服務提供的操作倉庫的能力：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-0c0e8d55e10b1d3455bd42dbf2b8b81bb6d.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;從圖上可以看到，通過創建倉庫 test-mcp 這樣的提示詞，Claude 的大模型自行判斷需要使用 mcp 中提供的 create_repository 能力，從而完成了倉庫的創建，接下來我們打開 Github 也確實發現了這個已經創建的倉庫。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3ffc610a8d015a7785f352b35962d5a6eb7.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過這種方式，大模型就可以利用 MCP 接入各式各樣的能力，完成各種更為複雜的工作。&lt;/p&gt; 
&lt;h2&gt;1.2 MCP 的架構&lt;/h2&gt; 
&lt;p&gt;MCP 主要分為 MCP 服務和 MCP 客户端：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;客户端：一般指的是大模型應用，比如 Claude、通過 Spring AI Alibaba、Langchain 等框架開發的 AI 應用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;服務端：連接各種數據源的服務和工具&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;整體架構如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-5fc217ae1f82b6165a2047cfcdd996f0582.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;整體的工作流程是這樣的：AI 應用中集成 MCP 客户端，通過 MCP 協議向 MCP 服務端發起請求，MCP 服務端可以連接本地/遠程的數據源，或者通過 API 訪問其他服務，從而完成數據的獲取，返回給 AI 應用去使用。&lt;/p&gt; 
&lt;h1&gt;在 Spring AI 中使用 MCP Server&lt;/h1&gt; 
&lt;h2&gt;2.1 Spring AI MCP 的介紹&lt;/h2&gt; 
&lt;p&gt;Spring AI MCP 為模型上下文協議提供 Java 和 Spring 框架集成。它使 Spring AI 應用程序能夠通過標準化的接口與不同的數據源和工具進行交互，支持同步和異步通信模式。整體架構如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a9b9ba381218e4de5dcd333b213facd50e5.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Spring AI MCP 採用模塊化架構，包括以下組件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Spring AI 應用程序：使用 Spring AI 框架構建想要通過 MCP 訪問數據的生成式 AI 應用程序&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Spring MCP 客户端：MCP 協議的 Spring AI 實現，與服務器保持 1:1 連接&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通過 Spring AI MCP，可以快速搭建 MCP 客户端和服務端程序。&lt;/p&gt; 
&lt;h2&gt;2.2 使用 Spring AI MCP 快速搭建 MCP Server&lt;/h2&gt; 
&lt;p&gt;Spring AI 提供了兩種機制快速搭建 MCP Server，通過這兩種方式開發者可以快速向 AI 應用開放自身的能力，這兩種機制如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;基於 stdio 的進程間通信傳輸，以獨立的進程運行在 AI 應用本地，適用於比較輕量級的工具。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;基於 SSE（Server-Sent Events） 進行遠程服務訪問，需要將服務單獨部署，客户端通過服務端的 URL 進行遠程訪問，適用於比較重量級的工具。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;接下來逐一介紹一下這兩種方式的實現，示例代碼可以通過如下鏈接獲取：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples%2Ftree%2Fmain%2Fspring-ai-alibaba-mcp-example%2Fstarter-example%2Fserver&quot; target=&quot;_blank&quot;&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-mcp-example/starter-example/server&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;2.2.1 基於 stdio 的 MCP 服務端實現&lt;/h3&gt; 
&lt;p&gt;基於 stdio 的 MCP 服務端通過標準輸入輸出流與客户端通信，適用於作為子進程被客户端啓動和管理的場景。&lt;/p&gt; 
&lt;h4&gt;添加依賴&lt;/h4&gt; 
&lt;p&gt;首先，在項目中添加 Spring AI MCP Server Starter 依賴：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;&amp;lt;dependency&amp;gt;
   &amp;lt;groupId&amp;gt;org.springframework.ai&amp;lt;/groupId&amp;gt;
   &amp;lt;artifactId&amp;gt;spring-ai-mcp-server-spring-boot-starter&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;配置 MCP 服務端&lt;/h4&gt; 
&lt;p&gt;在 application.yml 中配置 MCP 服務端，這次要實現的是一個天氣服務：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;spring:
  main:
    web-application-type: none  # 必須禁用 web 應用類型
    banner-mode: off           # 禁用 banner
  ai:
    mcp:
      server:
        stdio: true            # 啓用 stdio 模式
        name: my-weather-server # 服務器名稱
        version: 0.0.1         # 服務器版本
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;實現 MCP 工具&lt;/h4&gt; 
&lt;p&gt;使用 &lt;a href=&quot;https://my.oschina.net/u/999979&quot;&gt;@Tool&lt;/a&gt; 註解標記方法，使其可以被 MCP 客户端發現和調用，通過 @ToolParameter 註解工具的具體參數：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;@Service
public class OpenMeteoService {

    private final WebClient webClient;

    public OpenMeteoService(WebClient.Builder webClientBuilder) {
        this.webClient = webClientBuilder
                .baseUrl(&quot;https://api.open-meteo.com/v1&quot;)
                .build();
    }

    @Tool(description = &quot;根據經緯度獲取天氣預報&quot;)
    public String getWeatherForecastByLocation(
            @ToolParameter(description = &quot;緯度，例如：39.9042&quot;) String latitude,
            @ToolParameter(description = &quot;經度，例如：116.4074&quot;) String longitude) {

        try {
            String response = webClient.get()
                    .uri(uriBuilder -&amp;gt; uriBuilder
                            .path(&quot;/forecast&quot;)
                            .queryParam(&quot;latitude&quot;, latitude)
                            .queryParam(&quot;longitude&quot;, longitude)
                            .queryParam(&quot;current&quot;, &quot;temperature_2m,wind_speed_10m&quot;)
                            .queryParam(&quot;timezone&quot;, &quot;auto&quot;)
                            .build())
                    .retrieve()
                    .bodyToMono(String.class)
                    .block();

            // 解析響應並返回格式化的天氣信息
            // 這裏簡化處理，實際應用中應該解析 JSON
            return &quot;當前位置（緯度：&quot; + latitude + &quot;，經度：&quot; + longitude + &quot;）的天氣信息：\n&quot; + response;
        } catch (Exception e) {
            return &quot;獲取天氣信息失敗：&quot; + e.getMessage();
        }
    }

    @Tool(description = &quot;根據經緯度獲取空氣質量信息&quot;)
    public String getAirQuality(
            @ToolParameter(description = &quot;緯度，例如：39.9042&quot;) String latitude,
            @ToolParameter(description = &quot;經度，例如：116.4074&quot;) String longitude) {

        // 模擬數據，實際應用中應調用真實 API
        return &quot;當前位置（緯度：&quot; + latitude + &quot;，經度：&quot; + longitude + &quot;）的空氣質量：\n&quot; +
                &quot;- PM2.5: 15 μg/m³ (優)\n&quot; +
                &quot;- PM10: 28 μg/m³ (良)\n&quot; +
                &quot;- 空氣質量指數 (AQI): 42 (優)\n&quot; +
                &quot;- 主要污染物: 無&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這裏使用了 OpenMeteo， OpenMeteo 是一個開源的天氣 API，為非商業用途提供免費訪問，無需 API 密鑰。&lt;/p&gt; 
&lt;h4&gt;註冊 MCP 工具&lt;/h4&gt; 
&lt;p&gt;在應用程序入口類中註冊工具：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;
@SpringBootApplication
public class McpServerApplication {

    public static void main(String[] args) {
        SpringApplication.run(McpServerApplication.class, args);
    }

    @Bean
    public ToolCallbackProvider weatherTools(OpenMeteoService openMeteoService) {
        return MethodToolCallbackProvider.builder()
                .toolObjects(openMeteoService)
                .build();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;運行服務端&lt;/h4&gt; 
&lt;p&gt;在控制枱中執行如下命令，編譯並打包應用：&lt;/p&gt; 
&lt;p&gt;Terminal window&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;mvn clean package -DskipTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2.2.2 基於 SSE 的 MCP 服務端實現&lt;/h3&gt; 
&lt;p&gt;基於 SSE 的 MCP 服務端通過 HTTP 協議與客户端通信，適用於作為獨立服務部署的場景，可以被多個客户端遠程調用，具體做法與 stdio 非常類似。&lt;/p&gt; 
&lt;h4&gt;添加依賴&lt;/h4&gt; 
&lt;p&gt;首先，在您的項目中添加依賴&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;&amp;lt;dependency&amp;gt;
   &amp;lt;groupId&amp;gt;org.springframework.ai&amp;lt;/groupId&amp;gt;
   &amp;lt;artifactId&amp;gt;spring-ai-mcp-server-webflux-spring-boot-starter&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;配置 MCP 服務端&lt;/h4&gt; 
&lt;p&gt;在 application.yml 中配置 MCP 服務端：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;server:
  port: 8080  # 服務器端口配置

spring:
  ai:
    mcp:
      server:
        name: my-weather-server    # MCP 服務器名稱
        version: 0.0.1            # 服務器版本號
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;實現 MCP 工具&lt;/h4&gt; 
&lt;p&gt;與基於 stdio 的實現完全相同：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;@Service
public class OpenMeteoService {

    private final WebClient webClient;

    public OpenMeteoService(WebClient.Builder webClientBuilder) {
        this.webClient = webClientBuilder
                .baseUrl(&quot;https://api.open-meteo.com/v1&quot;)
                .build();
    }

    @Tool(description = &quot;根據經緯度獲取天氣預報&quot;)
    public String getWeatherForecastByLocation(
            @ToolParameter(description = &quot;緯度，例如：39.9042&quot;) String latitude,
            @ToolParameter(description = &quot;經度，例如：116.4074&quot;) String longitude) {

        try {
            String response = webClient.get()
                    .uri(uriBuilder -&amp;gt; uriBuilder
                            .path(&quot;/forecast&quot;)
                            .queryParam(&quot;latitude&quot;, latitude)
                            .queryParam(&quot;longitude&quot;, longitude)
                            .queryParam(&quot;current&quot;, &quot;temperature_2m,wind_speed_10m&quot;)
                            .queryParam(&quot;timezone&quot;, &quot;auto&quot;)
                            .build())
                    .retrieve()
                    .bodyToMono(String.class)
                    .block();

            // 解析響應並返回格式化的天氣信息
            return &quot;當前位置（緯度：&quot; + latitude + &quot;，經度：&quot; + longitude + &quot;）的天氣信息：\n&quot; + response;
        } catch (Exception e) {
            return &quot;獲取天氣信息失敗：&quot; + e.getMessage();
        }
    }

    @Tool(description = &quot;根據經緯度獲取空氣質量信息&quot;)
    public String getAirQuality(
            @ToolParameter(description = &quot;緯度，例如：39.9042&quot;) String latitude,
            @ToolParameter(description = &quot;經度，例如：116.4074&quot;) String longitude) {

        // 模擬數據，實際應用中應調用真實 API
        return &quot;當前位置（緯度：&quot; + latitude + &quot;，經度：&quot; + longitude + &quot;）的空氣質量：\n&quot; +
                &quot;- PM2.5: 15 μg/m³ (優)\n&quot; +
                &quot;- PM10: 28 μg/m³ (良)\n&quot; +
                &quot;- 空氣質量指數 (AQI): 42 (優)\n&quot; +
                &quot;- 主要污染物: 無&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;註冊 MCP 工具&lt;/h4&gt; 
&lt;p&gt;在應用程序入口類中註冊工具：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;@SpringBootApplication
public class McpServerApplication {

    public static void main(String[] args) {
        SpringApplication.run(McpServerApplication.class, args);
    }

    @Bean
    public ToolCallbackProvider weatherTools(OpenMeteoService openMeteoService) {
        return MethodToolCallbackProvider.builder()
                .toolObjects(openMeteoService)
                .build();
    }

    @Bean
    public WebClient.Builder webClientBuilder() {
        return WebClient.builder();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;運行服務端&lt;/h4&gt; 
&lt;p&gt;在控制枱中輸入命令，運行服務端：&lt;/p&gt; 
&lt;p&gt;Terminal window&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;服務端將在 &lt;a href=&quot;http://localhost:8080&amp;nbsp;啓動。&quot;&gt;http://localhost:8080 啓動。&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;2.3 在 Claude 中測試 mcp 服務&lt;/h2&gt; 
&lt;p&gt;在上一小節中我們編寫完了 MCP 服務，這些服務到底是否能正常運行呢？在 Claude Desktop 中可以測試一下。&lt;/p&gt; 
&lt;p&gt;修改配置文件，添加 weather 的配置，一定要注意 jar 包的路徑必須是全路徑：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;
{
    &quot;mcpServers&quot;: {
        &quot;github&quot;: {
            &quot;command&quot;: &quot;npx&quot;,
            &quot;args&quot;: [
                &quot;-y&quot;,
                &quot;@modelcontextprotocol/server-github&quot;
            ],
            &quot;env&quot;: {
                &quot;GITHUB_PERSONAL_ACCESS_TOKEN&quot;: your token
            }
        },
        &quot;weather&quot;: {
            &quot;command&quot;: &quot;java&quot;,
            &quot;args&quot;: [
                &quot;-Dspring.ai.mcp.server.stdio=true&quot;,
                &quot;-Dspring.main.web-application-type=none&quot;,
                &quot;-Dlogging.pattern.console=&quot;,
                &quot;-jar&quot;,
                &quot;&amp;lt;修改為 stdio 編譯之後的 jar 包全路徑&amp;gt;&quot;
            ],
            &quot;env&quot;: {}
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;重啓 Claude 之後看到，我們編寫的兩個 Tool 已經被加載進來了：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7100c9aa308868624320ef584dc031a03a3.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;輸入提示詞，查詢今天北京的空氣質量：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-9c703b86db11f95394387ebef38334cbba5.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Claude 觸發了我們自己編寫的天氣服務，展示了完整的數據：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-27bb9775a7a87b3e1b7ad03aef1de146eb3.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上面使用了 stdio 的方式在 Claude Desktop 中使用我們自己編寫的 MCP 服務，但是很可惜 Claude Desktop 不支持直接通過 SSE 模式訪問，必須使用 mcp-proxy 作為中介，所以這裏我們不再演示 Claude Desktop 接入 SSE 模式的 MCP 服務。&lt;/p&gt; 
&lt;h1&gt;在 Spring AI Alibaba 中集成 Mcp Client&lt;/h1&gt; 
&lt;p&gt;對於客户端，Spring AI 同樣提供了 stdio 和 SSE 兩種機制快速集成 MCP Server，分別對應到 MCP Server 的 stdio 和 SSE 兩種模式，參考代碼如下：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples%2Ftree%2Fmain%2Fspring-ai-alibaba-mcp-example%2Fstarter-example%2Fclient&quot; target=&quot;_blank&quot;&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-mcp-example/starter-example/client&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;3.1 基於 stdio 的 MCP 客户端實現&lt;/h2&gt; 
&lt;p&gt;基於 stdio 的實現是最常見的 MCP 客户端實現方式，它通過標準輸入輸出流與 MCP 服務器進行通信。這種方式適用於使用了 stdio 方式本地部署的 MCP 服務器，可以直接在同一台機器上啓動 MCP 服務器進程。&lt;/p&gt; 
&lt;h3&gt;添加依賴&lt;/h3&gt; 
&lt;p&gt;首先，在項目中添加 Spring AI MCP starter 依賴：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.ai&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-ai-mcp-client-spring-boot-starter&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;!-- 添加 Spring AI MCP starter 依賴 --&amp;gt;
&amp;lt;dependency&amp;gt;
   &amp;lt;groupId&amp;gt;org.springframework.ai&amp;lt;/groupId&amp;gt;
   &amp;lt;artifactId&amp;gt;spring-ai-mcp-client-spring-boot-starter&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;配置 MCP 服務器&lt;/h3&gt; 
&lt;p&gt;在 application.yml 中配置 MCP 服務器：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;spring:
  ai:
    dashscope:
      # 配置通義千問 API 密鑰
      api-key: ${DASH_SCOPE_API_KEY}
    mcp:
      client:
        stdio:
          # 指定 MCP 服務器配置文件路徑（推薦）
          servers-configuration: classpath:/mcp-servers-config.json
          # 直接配置示例，和上邊的配製二選一
          # connections:
          #   server1:
          #     command: java
          #     args:
          #       - -jar
          #       - /path/to/your/mcp-server.jar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這個配置文件設置了 MCP 客户端的基本配置，包括 API 密鑰和服務器配置文件的位置。你也可以選擇直接在配置文件中定義服務器配置，但是還是建議使用 json 文件管理 mcp 配置。在 resources 目錄下創建 mcp-servers-config.json 配置文件：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;{
    &quot;mcpServers&quot;: {
        // 定義名為&quot;weather&quot;的 MCP 服務器
        &quot;weather&quot;: {
            // 指定啓動命令為 java
            &quot;command&quot;: &quot;java&quot;,
            // 定義啓動參數
            &quot;args&quot;: [
                &quot;-Dspring.ai.mcp.server.stdio=true&quot;,
                &quot;-Dspring.main.web-application-type=none&quot;,
                &quot;-jar&quot;,
                &quot;&amp;lt;修改為 stdio 編譯之後的 jar 包全路徑&amp;gt;&quot;
            ],
            // 環境變量配置（可選）
            &quot;env&quot;: {}
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這個 JSON 配置文件定義了 MCP 服務器的詳細配置，包括如何啓動服務器進程、需要傳遞的參數以及環境變量設置，還是要注意引用的 jar 包必須是全路徑的。&lt;/p&gt; 
&lt;h3&gt;編寫一個啓動類進行測試：&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;```java
@SpringBootApplication
public class Application {

    public static void main(String[] args) {
        // 啓動 Spring Boot 應用
        SpringApplication.run(Application.class, args);
    }

    [@Bean](https://my.oschina.net/bean)
    public CommandLineRunner predefinedQuestions(
            ChatClient.Builder chatClientBuilder,
            ToolCallbackProvider tools,
            ConfigurableApplicationContext context) {
        return args -&amp;gt; {
            // 構建 ChatClient 並注入 MCP 工具
            var chatClient = chatClientBuilder
                    .defaultTools(tools)
                    .build();

            // 定義用户輸入
            String userInput = &quot;北京的天氣如何？&quot;;
            // 打印問題
            System.out.println(&quot;\n&amp;gt;&amp;gt;&amp;gt; QUESTION: &quot; + userInput);
            // 調用 LLM 並打印響應
            System.out.println(&quot;\n&amp;gt;&amp;gt;&amp;gt; ASSISTANT: &quot; +
                chatClient.prompt(userInput).call().content());

            // 關閉應用上下文
            context.close();
        };
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;這段代碼展示瞭如何在 Spring Boot 應用中使用 MCP 客户端。它創建了一個命令行運行器，構建了 ChatClient 並注入了 MCP 工具，然後使用這個客户端發送查詢並獲取響應。在 Spring AI Alibaba 中使用 Mcp 工具非常簡單，只需要把 ToolCallbackProvider 放到 chatClientBuilder 的 defaultTools 方法中，就可以自動的適配。

通過命令啓動程序進行測試：

Terminal window

```plaintext
mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;啓動之後顯示結果為，從日誌可以看到我們自己編寫的 mcp server 被調用了，返回了數據：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;&amp;gt;&amp;gt;&amp;gt; QUESTION: 北京的天氣如何？
2025-03-31T17:56:17.931+08:00 DEBUG 23455 --- [mcp] [pool-1-thread-1] io.modelcontextprotocol.spec.McpSchema   : Received JSON message: {&quot;jsonrpc&quot;:&quot;2.0&quot;,&quot;id&quot;:&quot;60209de5-3&quot;,&quot;result&quot;:{&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\&quot;當前天氣:\n 温度: 18.6°C (體感温度: 15.1°C)\n 天氣: 多雲\n 風向: 南風 (4.7 km/h)\n 濕度: 18%\n 降水量: 0.0 毫米\n\n 未來天氣預報:\n2025-03-31 (週一):\n 温度: 2.4°C ~ 19.5°C\n 天氣: 多雲\n 風向: 南風 (8.4 km/h)\n 降水量: 0.0 毫米\n\n2025-04-01 (週二):\n 温度: 7.6°C ~ 20.6°C\n 天氣: 多雲\n 風向: 西北風 (19.1 km/h)\n 降水量: 0.0 毫米\n\n2025-04-02 (週三):\n 温度: 6.9°C ~ 18.4°C\n 天氣: 晴朗\n 風向: 西北風 (12.8 km/h)\n 降水量: 0.0 毫米\n\n2025-04-03 (週四):\n 温度: 7.0°C ~ 19.8°C\n 天氣: 多雲\n 風向: 南風 (16.3 km/h)\n 降水量: 0.0 毫米\n\n2025-04-04 (週五):\n 温度: 7.5°C ~ 21.6°C\n 天氣: 多雲\n 風向: 西北風 (19.6 km/h)\n 降水量: 0.0 毫米\n\n2025-04-05 (週六):\n 温度: 5.6°C ~ 20.7°C\n 天氣: 多雲\n 風向: 西風 (16.5 km/h)\n 降水量: 0.0 毫米\n\n2025-04-06 (週日):\n 温度: 8.4°C ~ 22.3°C\n 天氣: 晴朗\n 風向: 南風 (9.4 km/h)\n 降水量: 0.0 毫米\n\n\&quot;&quot;}],&quot;isError&quot;:false}}
2025-03-31T17:56:17.932+08:00 DEBUG 23455 --- [mcp] [pool-1-thread-1] i.m.spec.McpClientSession                : Received Response: JSONRPCResponse[jsonrpc=2.0, id=60209de5-3, result={content=[{type=text, text=&quot;當前天氣:\n 温度: 18.6°C (體感温度: 15.1°C)\n 天氣: 多雲\n 風向: 南風 (4.7 km/h)\n 濕度: 18%\n 降水量: 0.0 毫米\n\n 未來天氣預報:\n2025-03-31 (週一):\n 温度: 2.4°C ~ 19.5°C\n 天氣: 多雲\n 風向: 南風 (8.4 km/h)\n 降水量: 0.0 毫米\n\n2025-04-01 (週二):\n 温度: 7.6°C ~ 20.6°C\n 天氣: 多雲\n 風向: 西北風 (19.1 km/h)\n 降水量: 0.0 毫米\n\n2025-04-02 (週三):\n 温度: 6.9°C ~ 18.4°C\n 天氣: 晴朗\n 風向: 西北風 (12.8 km/h)\n 降水量: 0.0 毫米\n\n2025-04-03 (週四):\n 温度: 7.0°C ~ 19.8°C\n 天氣: 多雲\n 風向: 南風 (16.3 km/h)\n 降水量: 0.0 毫米\n\n2025-04-04 (週五):\n 温度: 7.5°C ~ 21.6°C\n 天氣: 多雲\n 風向: 西北風 (19.6 km/h)\n 降水量: 0.0 毫米\n\n2025-04-05 (週六):\n 温度: 5.6°C ~ 20.7°C\n 天氣: 多雲\n 風向: 西風 (16.5 km/h)\n 降水量: 0.0 毫米\n\n2025-04-06 (週日):\n 温度: 8.4°C ~ 22.3°C\n 天氣: 晴朗\n 風向: 南風 (9.4 km/h)\n 降水量: 0.0 毫米\n\n&quot;}], isError=false}, error=null]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3.2 基於 SSE 的 MCP 客户端實現&lt;/h2&gt; 
&lt;p&gt;除了基於 stdio 的實現外，Spring AI Alibaba 還提供了基於 Server-Sent Events （SSE）的 MCP 客户端實現。這種方式適用於遠程部署的 MCP 服務器，可以通過 HTTP 協議與 MCP 服務器進行通信。&lt;/p&gt; 
&lt;h3&gt;添加依賴&lt;/h3&gt; 
&lt;p&gt;首先，在您的項目中添加 Spring AI MCP starter 依賴：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;&amp;lt;dependency&amp;gt;
   &amp;lt;groupId&amp;gt;org.springframework.ai&amp;lt;/groupId&amp;gt;
   &amp;lt;artifactId&amp;gt;spring-ai-mcp-client-webflux-spring-boot-starter&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;配置 MCP 服務器&lt;/h3&gt; 
&lt;p&gt;在 application.yml 中配置 MCP 服務器，這裏需要指定 SSE 啓動的服務地址，之前我們在 8080 端口上啓動了對應的服務：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;spring:
  ai:
    dashscope:
      api-key: ${DASH_SCOPE_API_KEY}
    mcp:
      client:
        sse:
          connections:
            server1:
              url: http://localhost:8080  #服務地址
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;使用 MCP 客户端&lt;/h3&gt; 
&lt;p&gt;使用方式與基於 stdio 的實現相同，只需注入 ToolCallbackProvider 和 ChatClient.Builder：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;
@SpringBootApplication
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }

    @Bean
    public CommandLineRunner predefinedQuestions(ChatClient.Builder chatClientBuilder,
                                                ToolCallbackProvider tools,
                                                ConfigurableApplicationContext context) {
        return args -&amp;gt; {
            // 構建 ChatClient 並注入 MCP 工具
            var chatClient = chatClientBuilder
                    .defaultTools(tools)
                    .build();

            // 使用 ChatClient 與 LLM 交互
            String userInput = &quot;北京的天氣如何？&quot;;
            System.out.println(&quot;\n&amp;gt;&amp;gt;&amp;gt; QUESTION: &quot; + userInput);
            System.out.println(&quot;\n&amp;gt;&amp;gt;&amp;gt; ASSISTANT: &quot; + chatClient.prompt(userInput).call().content());

            context.close();
        };
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;通過命令啓動程序進行測試：&lt;/p&gt; 
&lt;p&gt;Terminal window&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;啓動之後會有報錯：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;Caused by: java.lang.IllegalStateException: Multiple tools with the same name (spring-ai-mcp-client-getWeatherForecastByLocation, spring-ai-mcp-client-getAirQuality)
        at org.springframework.ai.mcp.SyncMcpToolCallbackProvider.validateToolCallbacks(SyncMcpToolCallbackProvider.java:126) ~[spring-ai-mcp-1.0.0-20250325.064812-147.jar:1.0.0-SNAPSHOT]
        at org.springframework.ai.mcp.SyncMcpToolCallbackProvider.getToolCallbacks(SyncMcpToolCallbackProvider.java:110) ~[spring-ai-mcp-1.0.0-20250325.064812-147.jar:1.0.0-SNAPSHOT]
        at org.springframework.ai.autoconfigure.mcp.client.McpClientAutoConfiguration.toolCallbacksDeprecated(McpClientAutoConfiguration.java:196) ~[spring-ai-mcp-client-spring-boot-autoconfigure-1.0.0-M6.jar:1.0.0-M6]
        at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
        at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.2.0.jar:6.2.0]
        ... 23 common frames omitted
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;從日誌上分析，是因為註冊了相同的服務名 spring-ai-mcp-client-getWeatherForecastByLocation 和 spring-ai-mcp-client-getAirQuality，但是從代碼上分析，這兩個服務我們都只註冊了一次，那為什麼會報錯呢？&lt;/p&gt; 
&lt;p&gt;其實這是 Spring AI 目前的一個 BUG，Spring AI 提供了兩個自動配置類去生成客户端工具處理 MCP 服務中 Tool 的獲取，分別是 &lt;code&gt;SseHttpClientTransportAutoConfiguration&lt;/code&gt; 和 &lt;code&gt;SseWebFluxTransportAutoConfiguration&lt;/code&gt;。這兩個自動配置類提供了同步和異步兩種方式，本身應該是互斥的，但是 Spring AI 對於互斥的處理上出了問題，導致兩個自動配置類都會加載。&lt;/p&gt; 
&lt;p&gt;SseWebFluxTransportAutoConfiguration 的加載：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-23f083ecc527f820de6224e9f193917d921.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; SseHttpClientTransportAutoConfiguration 的加載：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-5496d48d41852976e888713691a2d965c87.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 兩個自動配置類加載之後，就會向提供 SSE 服務的 MCP 服務申請 Tool，這樣就導致同樣的 Tool 被申請了兩次，自然就會重複了。解決方案也非常簡單，在啓動類上排除 SseHttpClientTransportAutoConfiguration 實現就可以了。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;@SpringBootApplication(exclude = {
        org.springframework.ai.autoconfigure.mcp.client.SseHttpClientTransportAutoConfiguration.class
})
public class Application {
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;再次通過命令啓動程序進行測試：&lt;/p&gt; 
&lt;p&gt;Terminal window&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;mvn spring-boot:run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這一次就輸出了正確的結果：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-65be3a0a46eec7ce73a9d4be0526d25bd08.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;在 Spring AI Alibaba 的 Open Manus 中體驗 MCP&lt;/h1&gt; 
&lt;p&gt;Spring AI Alibaba 中提供了 Open Manus 的實現，整體架構如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a8cb185c8c8fb7b11e7600330bb7e53ee80.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在執行階段，會調用各種 Tool 來完成任務，如果我們能使用 MCP 增加 Tool 的能力，那勢必能 Open Manus 如虎添翼，接下來我們就來看一下 Open Manus 中是如何去使用 MCP 的。&lt;/p&gt; 
&lt;p&gt;源代碼如下：&lt;/p&gt; 
&lt;p&gt;++&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-ai-alibaba%2Ftree%2Fmain%2Fcommunity%2Fopenmanus%2B%2B%EF%BB%BF&quot; target=&quot;_blank&quot;&gt;https://github.com/alibaba/spring-ai-alibaba/tree/main/community/openmanus++﻿&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;添加依賴&lt;/h3&gt; 
&lt;p&gt;首先，在項目中添加 Spring AI MCP starter 依賴：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.springframework.ai&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;spring-ai-mcp-client-spring-boot-starter&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${spring-ai.version}&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;配置 MCP 服務器&lt;/h3&gt; 
&lt;p&gt;在 application.yml 中已經配置了 MCP 服務器，設置客户端請求服務端的超時時間為 1 分鐘：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2f766be6cb3b55abb90c7f7596d015fcee7.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;添加 mcp-servers-config.json，在 json 中配置了百度地圖。百度地圖核心 API 現已全面兼容 MCP 協議，是國內首家兼容 MCP 協議的地圖服務商。百度地圖已經完成了 8 個核心 API 接口和 MCP 協議的對接， 涵蓋逆地理編碼、地點檢索、路線規劃等。&lt;/p&gt; 
&lt;p&gt;使用百度地圖的 MCP，需要申請 ak：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flbsyun.baidu.com%2Fapiconsole%2Fkey%E3%80%82&quot; target=&quot;_blank&quot;&gt;https://lbsyun.baidu.com/apiconsole/key。&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;{
    &quot;mcpServers&quot;: {
        &quot;baidu-map&quot;: {
            &quot;command&quot;: &quot;npx&quot;,
            &quot;args&quot;: [
                &quot;-y&quot;,
                &quot;@baidumap/mcp-server-baidu-map&quot;
            ],
            &quot;env&quot;: {
                &quot;BAIDU_MAP_API_KEY&quot;: &quot;your_baidu_AK&quot;
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;將其中 BAIDU_MAP_API_KEY 修改為申請的 ak。&lt;/p&gt; 
&lt;h3&gt;使用 MCP 工具&lt;/h3&gt; 
&lt;p&gt;修改 LlmService 的構造方法源碼，在構造時直接通過 Spring 容器獲取 ToolCallbackProvider 並加入到 ChatClient.builder 中：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;public LlmService(ChatModel chatModel, ToolCallbackProvider toolCallbackProvider) {
    this.chatModel = chatModel;

    this.planningChatClient = ChatClient.builder(chatModel)
       .defaultSystem(PLANNING_SYSTEM_PROMPT)
       .defaultAdvisors(new MessageChatMemoryAdvisor(planningMemory))
       .defaultAdvisors(new SimpleLoggerAdvisor())
       .defaultTools(ToolBuilder.getPlanningAgentToolCallbacks())
       .defaultTools(toolCallbackProvider)
       .build();

    this.chatClient = ChatClient.builder(chatModel)
       .defaultSystem(MANUS_SYSTEM_PROMPT)
       .defaultAdvisors(new MessageChatMemoryAdvisor(memory))
       .defaultAdvisors(new SimpleLoggerAdvisor())
       .defaultTools(ToolBuilder.getManusAgentToolCalls())
       .defaultTools(toolCallbackProvider)
       .defaultOptions(OpenAiChatOptions.builder().internalToolExecutionEnabled(false).build())
       .build();

    this.finalizeChatClient = ChatClient.builder(chatModel)
       .defaultSystem(FINALIZE_SYSTEM_PROMPT)
       .defaultAdvisors(new MessageChatMemoryAdvisor(finalizeMemory))
       .defaultAdvisors(new SimpleLoggerAdvisor())
       .build();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;通過 defaultTools 將 mcp 服務提供的 tool 交給 ChatClient 處理。&lt;/p&gt; 
&lt;h3&gt;測試效果&lt;/h3&gt; 
&lt;p&gt;啓動 OpenManus，執行提示詞：規劃下從上海到北京的路線。但是如果這樣寫，可能會觸發 google search，我們可以優化下提示詞主動選擇百度地圖。&lt;/p&gt; 
&lt;p&gt;使用百度地圖規劃從北京市到上海市的路線&lt;/p&gt; 
&lt;p&gt;執行程序之後可以看到規劃之後的計劃：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;Steps:
0. [ ] [MANUS] 使用百度地圖的地理編碼服務獲取北京市和上海市的經緯度座標
1. [ ] [MANUS] 使用百度地圖的路線規劃服務計算從北京市到上海市的駕車路線
2. [ ] [MANUS] 分析並提供最終的路線信息，包括距離、預計耗時等
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;很顯然，這一次 OpenManus 選擇了我們集成的百度地圖 mcp server，我們來看一下結果。&lt;/p&gt; 
&lt;p&gt;獲取到了北京市和上海市的經緯度座標：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;Here is a summary of what we accomplished in this step:
- For Beijing, we received the coordinates: Longitude (lng): 116.4133836971231, Latitude (lat): 39.910924547299565.
- For Shanghai, we received the coordinates: Longitude (lng): 121.48053886017651, Latitude (lat): 31.235929042252014.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;計算從北京市到上海市的駕車路線：&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;Distance: The total distance of the route is 1,223,200 meters (approximately 1,223 kilometers).
Duration: The estimated travel time is 50,592 seconds (approximately 14 hours and 3 minutes).
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;結果：&lt;/p&gt; 
&lt;p&gt;總距離：約 1223 公里&lt;/p&gt; 
&lt;p&gt;預計耗時：約 12 小時 45 分鐘&lt;/p&gt; 
&lt;p&gt;主要途徑：京滬高速公路（G2）&lt;/p&gt; 
&lt;h1&gt;總結&lt;/h1&gt; 
&lt;p&gt;作為 AI 開發領域的革命性突破，Model Context Protocol（MCP）重新定義了智能體與工具生態的交互範式。通過標準化協議打通地圖服務、代碼倉庫、數據庫等核心工具鏈，MCP 不僅解決了傳統 AI 開發中跨平台對接的碎片化難題，更以&quot;開箱即用&quot;的輕量化集成模式，讓開發者能夠快速構建具備多模態能力的智能應用。&lt;/p&gt; 
&lt;p&gt;未來，隨着更多工具接入 MCP 生態，開發者只需專注於業務邏輯創新，而複雜的工具鏈整合將真正成為&quot;看不見的底層能力&quot;------這或許正是 AI 普惠化進程中，最具實際意義的技術躍遷。&lt;/p&gt; 
&lt;p&gt;Spring AI 中的 MCP 支持可以讓 Java 開發者輕鬆的將自己的應用發佈為 MCP Server 或者是作為消費者去集成任意的 MCP Server 實現。﻿Spring AI Alibaba 社區 3 羣：61290041831&lt;/p&gt; 
&lt;p&gt;Spring AI Alibaba 開源項目地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Falibaba%2Fspring-ai-alibaba&quot; target=&quot;_blank&quot;&gt;https://github.com/alibaba/spring-ai-alibaba&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Spring AI Alibaba 官網地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava2ai.com%2F&quot; target=&quot;_blank&quot;&gt;https://java2ai.com/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;本示例源碼地址：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspringaialibaba%2Fspring-ai-alibaba-examples%2Ftree%2Fmain%2Fspring-ai-alibaba-mcp-example&quot; target=&quot;_blank&quot;&gt;https://github.com/springaialibaba/spring-ai-alibaba-examples/tree/main/spring-ai-alibaba-mcp-example&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3874284/blog/18183807</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/18183807</guid>
            <pubDate>Mon, 14 Apr 2025 03:30:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>DeepMind 強化學習團隊副總裁：AI 的未來在於自主獲取經驗</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;近日，Google DeepMind 強化學習團隊副總裁 &lt;strong&gt;David Silver&lt;/strong&gt; 近日在一場重要播客中提出了關於 AI 未來發展的關鍵觀點。&lt;/p&gt; 
&lt;p&gt;作為 DeepMind 創始成員和 AlphaGo 項目的核心人物，Silver 認為 AI 未來的突破將來自於其自主獲取經驗的能力，而非繼續依賴人類數據。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f7c5f8582eaecd521a576c5a5487b897835.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Silver 在訪談中指出，AI 發展正從「人類數據時代」邁向「經驗時代」。他解釋道：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;目前的 AI 方法基於一個共同理念：提取人類擁有的全部知識並’喂’給機器。但真正的突破將來自於機器與世界互動，產生自身經驗的能力。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;以 AlphaGo 和 AlphaZero 為例，Silver 闡述了 AI 自主學習的威力。AlphaZero 通過完全摒棄人類棋譜數據，僅靠自我對弈獲取經驗，反而達到了超越人類和早期版本 AlphaGo 的水平。他稱這是 AI 領域的「苦澀教訓」——人類知識有時反而會限制 AI 的自主學習能力。&lt;/p&gt; 
&lt;p&gt;Silver 還談到了當前大語言模型中的強化學習應用。雖然基於人類反饋的強化學習 (RLHF) 幫助模型更符合人類偏好，但他認為這種方法無法讓 AI 超越人類知識的「天花板」。「如果系統根據人類反饋學習，它最終只會輸出人類認知內的內容，無法探索未知領域。」&lt;/p&gt; 
&lt;p&gt;Silver 將人類數據比作化石燃料，認為這是 AI 發展的「先發優勢」，但真正可持續的「燃料」是 AI 自主生成的經驗。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;當化石燃料耗盡後，我們需要某種可持續燃料來維持世界運轉。強化學習便是這種可持續燃料。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;推薦閲讀：&lt;a href=&quot;https://www.oschina.net/news/345290/ysy-the-second-half&quot; target=&quot;news&quot;&gt;OpenAI 研究員姚順雨：AI 將由解決問題轉為定義問題&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345875</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345875</guid>
            <pubDate>Mon, 14 Apr 2025 03:20:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>智元發佈具身智能一站式開發平台 Genie Studio</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;智元機器人發佈了&lt;strong&gt;行業首款&lt;/strong&gt;面向具身智能開發者的&lt;strong&gt;一站式開發平台 &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgenie.agibot.com%2Fgeniestudio&quot; target=&quot;_blank&quot;&gt;Genie Studio&lt;/a&gt;&lt;/u&gt;&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0422/104847_F9AB_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，Genie Studio 是智元機器人專為具身智能場景打造的一站式開發平台，具備&lt;strong&gt;數據採集&lt;/strong&gt;、&lt;strong&gt;模型訓練&lt;/strong&gt;、&lt;strong&gt;仿真評測&lt;/strong&gt;、&lt;strong&gt;模型推理&lt;/strong&gt;的全鏈路產品能力，讓「採」、「訓」、「測」、「推」每個環節都能找到標準化解決方案。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0422/104715_vA3r_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;平台優勢如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;提供覆蓋數據全生命週期的數據解決方案，高效採集海量數據，單機單日產能高達 1000 條。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;提供自研和主流開源機器人基座模型，打通訓練、微調、量化、部署鏈路，降低訓練門檻。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;提供仿真評測能力，擁有 6000 + 物體資產與仿真場景，實現用户側場景重建、專家軌跡數據獲取、評測結果可視化。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;提供「⼀鍵真機部署」能力，輕鬆實現算法從雲端到真機環境的無縫遷移，比傳統方案單卡推理性能提升 2-3 倍。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;數據採集&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;數據採集模塊深度重構機器人數據生命週期，打造從多模態數據採集、流程化數據處理、可視化數據標註到數據集高效管理的一站式數據中樞，提供&lt;strong&gt;多本體、多末端的設備管理、批量模板化的數採任務生成、全鏈路標註與可視化審核、數據集管理、多維度指標看板&lt;/strong&gt;等配套的全流程功能服務；通過仿真場景重建和多種專家軌跡生成策略，結合域隨機化與數據增強技術，可支持&lt;strong&gt;大規模合成數據自動化採集&lt;/strong&gt;；對於複雜的操作任務，支持開發者通過&lt;strong&gt;遙操作採集精細操作數據&lt;/strong&gt;，並結合&lt;strong&gt;軌跡自動泛化&lt;/strong&gt;，在符合物理規律的基礎上實現大規模數據增廣。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;模型訓練&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;作為新一代具身智能訓練引擎，模型訓練模塊實現研發體驗的全面升級。獨創基於視頻的&lt;strong&gt;數據加載方案&lt;/strong&gt;，支持多種開源數據集的無縫接入。在保證隨機幀讀取靈活性的同時，充分利用 GPU 閒置的解碼模塊，&lt;strong&gt;降低網絡帶寬和存儲消耗&lt;/strong&gt;。深度集成基座模型和多種開源端到端具身模型，提供預訓練 / 微調的任務模板，配合自研的訓練研發框架，實現&lt;strong&gt;訓練效率的不斷提升&lt;/strong&gt;。平台構建從數據、研發到部署的全鏈路管理體系，標準化資源池管理、訓練鏡像、模型管理與編譯部署管線的深度集成，&lt;strong&gt;實現模型的端到端快速交付&lt;/strong&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;仿真評測&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;基於大規模、高精度的三維資產庫，仿真評測模塊為開發者提供&lt;strong&gt;豐富的仿真場景、物體資產和機器人模型&lt;/strong&gt;，能夠自動生成多樣化場景與任務，精準還原各類機器人的操作環境，構建從&lt;strong&gt;場景生成、模型推理、基準測試到結果可視化&lt;/strong&gt;的完整仿真評測流程，並且通過高效的仿真工具鏈，幫助用户快速&lt;strong&gt;驗證算法性能並優化模型。&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;仿真評測模塊還會為 Genie Studio 和 AgiBot World 生態社區的用户開源本地仿真評測工具，支持用户進行靈活高效的模型評測。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;模型推理&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;模型推理模塊直擊行業痛點，通過四大核心技術重構部署範式：&lt;strong&gt;模型編譯技術&lt;/strong&gt;突破硬件異構壁壘，實現算法 &quot;一次開發、多端部署&quot;；&lt;strong&gt;GDK（Genie Development Kit）開發組件&lt;/strong&gt;以標準化接口打通機器人硬件層，構建穩定可靠的真機通信底座；&lt;strong&gt;雲端一體化推理框架&lt;/strong&gt;將模型部署流程簡化為 &quot;一鍵真機部署&quot;，助力算法開發從雲端環境到實體機器人的遷移；配合全鏈路評測系統，不僅實現部署效果的量化評估，更構建起應用版本管理、遠程診斷、動態優化的閉環體系。這種 &quot;算法-部署-管理&quot; 的全棧式賦能，使開發者得以聚焦核心算法創新，真正突破具身智能規模化落地的 &quot;最後一公里&quot;，加速行業向標準化、平台化、量產化的新階段躍進。&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345864/agibot-geniestudio</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345864/agibot-geniestudio</guid>
            <pubDate>Mon, 14 Apr 2025 02:49:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>AI 搜索工具秘塔上線 AI 教學功能「今天學點啥」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;AI 搜索工具秘塔&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fxw8IWhTnSSJ6OOCJBEcbrg&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;&lt;/u&gt;推出「今日學點啥」AI 個性化教學功能，旨在「讓個性化定製的知識不再稀缺」。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0422/103425_RBID_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，用户對任何內容感興趣（不論是網頁、文章、講義，還是秘塔文庫覆蓋超一億的學術文獻）都可以一鍵讓塔子老師進行講解。塔子老師可以根據用户對該領域的瞭解，來個性化定製講解的幻燈片和講解的方式，力求把晦澀難懂的文章也講得生動有趣。&lt;/p&gt; 
&lt;p&gt;據悉，塔子老師擁有多種講解風格，如蘇格拉底、莎士比亞、屈原、李白等，並且用户可根據自己的喜好調節「初學者」「進階者」「專家」三個知識掌握程度。&lt;/p&gt; 
&lt;p&gt;秘塔方面表示，希望「今天學點啥」能夠成為一個激發好奇心和求知慾的平台，幫助大家找到自己的節奏，以深入淺出的方式，自由探究各類感興趣的任何領域。&lt;/p&gt; 
&lt;p&gt;目前，該功能已上線 PC 網頁端。體驗鏈接：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmetaso.cn%2Fstudy&quot; target=&quot;_blank&quot;&gt;metaso.cn/study&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345859</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345859</guid>
            <pubDate>Mon, 14 Apr 2025 02:35:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>榮耀在哈爾濱成立新公司，含智能機器人銷售業務</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;天眼查資料顯示，哈爾濱星耀終端有限公司於近日成立，法定代表人為文潔，註冊資本 200 萬人民幣。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;206&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-f9a3284834040e97a1c162e0dbeec698a8f.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該公司經營範圍含移動終端設備銷售、家用電器銷售、電子產品銷售、可穿戴智能設備銷售、智能機器人銷售、智能無人飛行器銷售、物聯網設備銷售等。股權全景穿透圖顯示，該公司由深圳星耀終端有限公司全資持股，後者為榮耀終端股份有限公司全資子公司。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345858</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345858</guid>
            <pubDate>Mon, 14 Apr 2025 02:31:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>ONLYOFFICE 協作空間 3.1 現已發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;全新升級的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Fdocspace.aspx&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;ONLYOFFICE&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/u&gt;&lt;u&gt;協作&lt;/u&gt;&lt;u&gt;空間&lt;/u&gt;&lt;/a&gt;有着約 40 項新功能和改進，將您的文檔協作和管理體驗提升到全新高度。閲讀本文，瞭解所有優化功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;742&quot; src=&quot;https://static-blog.onlyoffice.com/wp-content/uploads/2025/04/18114932/Blog-CN-OO-DocSpace-3.1.png&quot; width=&quot;1470&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;關於 ONLYOFFICE&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;ONLYOFFICE&lt;/strong&gt;&amp;nbsp;是一個國際開源項目，專注於高級和安全的文檔處理，可提供文本文檔、電子表格、幻燈片、表單和 PDF 編輯器。它高度兼容微軟 Office 格式，並提供數百種格式化和樣式工具。目前 ONLYOFFICE 有許多廣受歡迎的插件，其中&amp;nbsp;AI&amp;nbsp;插件可支持連接任意 AI 模型。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ONLYOFFICE&amp;nbsp;協作空間&lt;/strong&gt;旨在提升辦公文檔和其他內容的協作效率，讓用户能夠與同事、客户、合作伙伴、承包商、贊助商等多方人員順暢協作。該平台提供了一個基於房間的環境，可根據個人需求或項目目標組織清晰的文件結構。靈活的訪問權限和用户角色設置，可支持用户對整個或單獨房間的訪問權限調整。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;虛擬數據房間中基於角色的表單填寫&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;基於角色的高級功能在虛擬數據房間中首次亮相，優化效率的同時提高了安全性。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;輕鬆邀請您的團隊成員，並分配與公司架構匹配的角色。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：虛擬數據房間 -&amp;gt; 表單 -&amp;gt; 開始填寫&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1158&quot; src=&quot;https://oscimg.oschina.net/oscnet//2a7346e0a8eabae10dde1b3b96fa2367.jpg&quot; width=&quot;1921&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;通過表單填寫追蹤功能，實時監控進度。輕鬆掌握哪些表單已完成、哪些尚待處理。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：虛擬數據房間 -&amp;gt; 表單 -&amp;gt; 填寫狀態&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1158&quot; src=&quot;https://oscimg.oschina.net/oscnet//fa7602efa3a1418c4a011f1713217bee.jpg&quot; width=&quot;1921&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;輕鬆完成表單填寫，並檢索已完成的版本，確保每次流程無縫且輕鬆。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：虛擬數據房間 -&amp;gt; 完成&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;957&quot; src=&quot;https://oscimg.oschina.net/oscnet//958fc0c2062af0071c794e5fe99ae452.jpg&quot; width=&quot;1761&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;可重複使用&lt;/strong&gt;&lt;strong&gt;的&lt;/strong&gt;&lt;strong&gt;房間模板&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;直接根據現有房間，創建可重複使用的模板，簡化工作流程。只需點擊幾下，即可根據已保存的模板創建新房間，節省時間並提高效率。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：房間上下文菜單 -&amp;gt; 保存為模板&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;957&quot; src=&quot;https://oscimg.oschina.net/oscnet//7d26d7e1024dbb0e823304a47dfe3744.jpg&quot; width=&quot;1761&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;通過房間部分新添加的專用選項卡，輕鬆訪問所有模板。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：房間 -&amp;gt; 模板&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;957&quot; src=&quot;https://oscimg.oschina.net/oscnet//0dc4ae4cac6aded9e359d2e23e6099e0.jpg&quot; width=&quot;1761&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;房間共享&lt;/strong&gt;&lt;strong&gt;更簡單&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;現在公共、自定義和表單填寫房間的 URL 中添加了 Key 參數，便於即時共享 – 只需複製瀏覽器的 URL 就可以分享了！&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：複製房間網址&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;923&quot; src=&quot;https://oscimg.oschina.net/oscnet//ea6793285f76ac7b8ccd21ad66c9dc3d.png&quot; width=&quot;1864&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;改進&lt;/strong&gt;&lt;strong&gt;訪客&lt;/strong&gt;&lt;strong&gt;管理&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;跨團隊共享訪客&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;與外部用户的協作更加高效。只需生成併發送一個簡單的鏈接，即可與其他團隊成員共享訪客。您可以批准或拒絕共享的訪客，確認後，訪客將出現在您的訪客列表中，實現無縫溝通和協作。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：聯繫人 -&amp;gt; 訪客 -&amp;gt; 分享訪客&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;933&quot; src=&quot;https://oscimg.oschina.net/oscnet//05d2fc560fe729b8d4d882f6678a74b5.jpg&quot; width=&quot;1654&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;靈活&lt;/strong&gt;&lt;strong&gt;管理訪客角色&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;靈活管理訪客權限，增強控制。將訪客類型更改為用户、房間管理員或協作空間管理員。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：聯繫人 -&amp;gt; 訪客 -&amp;gt; 更改類型&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;964&quot; src=&quot;https://oscimg.oschina.net/oscnet//afc8fa552a3572883e8081e166d91dda.jpg&quot; width=&quot;1726&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;同樣，您可以根據需要將管理員恢復為用户或訪客。更新管理員類型時，其房間和文件將重新分配給其他聯繫人。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;新訪客對「文檔」部分的訪問權限將受到限制，僅限閲讀、下載和清除，且僅可訪問該部分 30 天。此期限過後，「文檔」部分將不再對訪客開放。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;優化&lt;/strong&gt;&lt;strong&gt;文件管理&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;快速共享 PDF 表單&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;直接從文件管理器共享 PDF 表單並進行填寫，而無需創建或共享房間。極大地縮短了工作流程並提高了效率。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：文檔 -&amp;gt; 表單 -&amp;gt; 填寫 -&amp;gt; 快速共享&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;964&quot; src=&quot;https://oscimg.oschina.net/oscnet//a7102ae6e749e8014c7ec7e72aa09f6c.jpg&quot; width=&quot;1726&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;管理文件版本和下載&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在版本歷史記錄面板中輕鬆刪除特定文件版本。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：文件上下文菜單 -&amp;gt; 顯示版本歷史記錄 -&amp;gt; 刪除&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;964&quot; src=&quot;https://oscimg.oschina.net/oscnet//4907dc1f0f1052c345b3ec49a95dd5d1.jpg&quot; width=&quot;1726&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;以非原始格式下載受密碼保護的文件時，可以更靈活地處理這些文件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;從下載列表中刪除該文件；&lt;/li&gt; 
 &lt;li&gt;輸入密碼繼續下載；&lt;/li&gt; 
 &lt;li&gt;以原始格式下載（無需密碼）。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：文件 -&amp;gt; 下載為 -&amp;gt; 選擇原始格式以外的格式&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1047&quot; src=&quot;https://oscimg.oschina.net/oscnet//7972a41e7285ab8c350071f6a333a15d.jpg&quot; width=&quot;1932&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;操作更流暢&lt;/strong&gt;：改進了文件操作進度顯示，隨時掌握每一步的進度。此外，您現在可以選擇在取消上傳時禁用確認彈窗，讓操作更加順暢。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：個人資料-&amp;gt;文件管理-&amp;gt;不再顯示取消通知&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;964&quot; src=&quot;https://oscimg.oschina.net/oscnet//d5ea2bd6b5b870ca697a0aff696f1917.jpg&quot; width=&quot;1726&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;964&quot; src=&quot;https://oscimg.oschina.net/oscnet//25ca5e2a04e435c72fea682a9c6ab144.jpg&quot; width=&quot;1711&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;新的設置和自定義&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;存儲加密&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;在自託管環境中對靜態數據啓用 AES-256 加密，以確保最高安全性。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：空間管理（協作空間服務器）-&amp;gt; 設置 -&amp;gt; 存儲&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img height=&quot;708&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c8a4fb0991cf0e248c39ded63e7bdab44bd.png&quot; width=&quot;1240&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;用户&lt;/strong&gt;&lt;strong&gt;更快&lt;/strong&gt;&lt;strong&gt;加入&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;禁用通過 LDAP 或單點登錄添加的用户的電子郵件驗證。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：集成 -&amp;gt; LDAP / 單點登錄&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1008&quot; src=&quot;https://oscimg.oschina.net/oscnet//c7a4307c7b173bc218d3809ca04448b9.jpg&quot; width=&quot;1702&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;數據存儲區域&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;輕鬆檢查您的雲協作空間指定的數據存儲區域，以獲得更高的透明度。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：存儲管理&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1008&quot; src=&quot;https://oscimg.oschina.net/oscnet//ddd65f7f9cb5881d3aff2e008f8b7bd9.jpg&quot; width=&quot;1786&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;深度鏈接設置&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;在移動瀏覽器中處理文檔時，用户可以選擇在瀏覽器中或直接在移動應用中打開文件，或者通過禁用此選項來簡化體驗。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：自定義 -&amp;gt; 常規&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1008&quot; src=&quot;https://oscimg.oschina.net/oscnet//ed14b90eaf5bba0831c3dc0f6e0af37f.jpg&quot; width=&quot;1765&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;更多&lt;/strong&gt;&lt;strong&gt;開發者設置&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;Webhook 觸發器&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;使用現成的觸發器，執行用户或房間創建、文件上傳或刪除、文件夾移動等操作。此外，管理員現在可以輕鬆地在一個地方查看所有已創建的 Webhook。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：開發人員工具* -&amp;gt; Webhook&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1008&quot; src=&quot;https://oscimg.oschina.net/oscnet//f22484a8efe268b6c191713bceb66397.jpg&quot; width=&quot;1818&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;改進嵌入設置&lt;/strong&gt;：您可以選擇 HTML、JavaScript 或 NPM 集成，以獲得更大的靈活性和簡便性，更好地滿足您的項目需求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：開發人員工具* -&amp;gt; JavaScript SDK&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1008&quot; src=&quot;https://oscimg.oschina.net/oscnet//e063579fc634bd55e864666a84e6d34f.jpg&quot; width=&quot;1821&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;*請注意：現在所有用户（訪客除外）都可以訪問開發人員工具部分。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;品牌名稱&lt;/strong&gt;&lt;strong&gt;：&lt;/strong&gt;只需點擊幾下即可自定義協作空間：輸入要顯示的品牌名稱，並直接根據文本生成自定義 Logo，以獲得個性化體驗。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;路徑：定製 -&amp;gt; 品牌&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;ONLYOFFICE 協作空間 3.1 發佈：虛擬數據房間中基於角色的表單填寫、房間模板、改進訪客管理等&quot; height=&quot;1009&quot; src=&quot;https://oscimg.oschina.net/oscnet//1af55907fb6a2a301a77f04604cf178e.jpg&quot; width=&quot;1692&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;獲取 ONLYOFFICE 協作空間 3.1&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;ONLYOFFICE 協作空間雲已經可獲取最新版本。立即&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Fdocspace-registration.aspx%3Futm_source%3Dblog%26utm_medium%3Darticle%26utm_campaign%3Ddocspace_3.1%23login&quot; target=&quot;_blank&quot;&gt;登錄協作空間&lt;/a&gt;，即可體驗所有新功能，如果您還沒有 ONLYOFFICE 協作空間賬户，也可以&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Fdocspace-registration.aspx%3Futm_source%3Dblog%26utm_medium%3Darticle%26utm_campaign%3Ddocspace_3.1&quot; target=&quot;_blank&quot;&gt;註冊一個免費帳户&lt;/a&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Fdownload.aspx%3Futm_source%3Dblog%26utm_medium%3Darticle%26utm_campaign%3Ddocspace_3.1%23docspace-enterprise&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;自託管協作空間&lt;/u&gt;&lt;/a&gt;的新版本即將推出，敬請期待！&lt;/p&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;strong&gt;相關鏈接&lt;/strong&gt;&lt;/h3&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Fdocspace.aspx%3Futm_source%3Dblog%26utm_medium%3Darticle%26utm_campaign%3Ddocspace_3.1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;ONLYOFFICE 協作空間&lt;/u&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Fdocspace-registration.aspx%3Futm_source%3Dblog%26utm_medium%3Darticle%26utm_campaign%3Ddocspace_3.1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;註冊免費帳户&lt;/u&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelpcenter.onlyoffice.com%2Fdocspace%3Futm_source%3Dblog%26utm_medium%3Darticle%26utm_campaign%3Ddocspace_3.1&quot; target=&quot;_blank&quot;&gt;&lt;u&gt;幫助中心&lt;/u&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345798/onlyoffice-docspace-3-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345798/onlyoffice-docspace-3-1-released</guid>
            <pubDate>Sun, 13 Apr 2025 11:47:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>預計中國市場 2025 年人形機器人本體產值將超 45 億元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據 TrendForce 集邦諮詢最新數據，中國市場已有 11 家主流人形機器人本體廠商啓動 2024 年量產計劃。其中，宇樹科技、優必選、智元機器人、銀河通用、眾擎機器人、樂聚機器人等 6 家領先企業更是將 2025 年的量產規劃設定在千台以上。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TrendForce 集邦諮詢預計，2025 年中國市場人形機器人本體產值有望突破 45 億元人民幣。加上馬斯克關於 Tesla Optimus 2025 年數千台量產目標，預計頭部本體廠商的量產計劃將拉動中國市場人形機器人零部件供應鏈生態佈局與完整性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;336&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-545b82ebd4c04ad7f2c9a719209e9659c66.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;當下人形機器人產品主要應用在 B 端工業場景、高校科研以及少部分 B 端商用場景，而 C 端家用場景要求人形機器人功能多元，對機器人數據處理和自主交互能力要求較高。人形機器人從 B 端跨越到 C 端應用場景需要政策、法規、技術等行業多方面的共同努力，C 端應用場景的商業化落地仍任重道遠。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345784</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345784</guid>
            <pubDate>Sun, 13 Apr 2025 09:43:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>得物自研 DGraph4.0 推薦核心引擎升級之路</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;一、前言&lt;/h1&gt; 
&lt;p&gt;DGraph 是得物自主研發的新一代推薦系統核心引擎，基於 C++語言構建，自 2021 年啓動以來，經過持續迭代已全面支撐得物社區內容分發、電商交易等核心業務的推薦場景。DGraph 在推薦鏈路中主要承擔數據海選和粗排序功能，為上層精排提供高質量候選集。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;核心技術特性：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;索引層 - 支持 KV（鍵值）、KVV（鍵-多值）、INVERT（倒排）、DENSE-KV（稠密鍵值）等。&lt;strong&gt;索引存儲&lt;/strong&gt;支持磁盤 &amp;amp; 內存兩種模式，在預發等延遲壓力低場景，通過磁盤索引使用低規格服務器提供基本服務。線上場景使用內存索引保證服務穩定性，提供毫秒級延遲響應。&lt;strong&gt;索引更新&lt;/strong&gt;支持雙 buff 熱更新【內存足夠】、服務下線滾動更新【內存受限】、Kafka 流式數據實時更新等三種模式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;查詢層 - 支持向量檢索 IVF &amp;amp; HNSW、鍵值 (KV) 查詢、倒排檢索、X2I 關聯查詢、圖查詢。對外提供 JavaSDK &amp;amp; C++ SDK。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;系統依賴架構：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;索引全生命週期管理由得物索引平台 DIP 統一管控。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;服務發現基於 ZooKeeper(zk)。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;集羣資源調度基於得物容器平台，目前已經支持 HPA。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;服務規模：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;目前在線 100+集羣，2024 年雙 11 在線突破了 100W qps。&lt;/p&gt; 
&lt;p&gt;本文主要介紹 DGraph 系統在 2024 年的一些重要改進點。主要包括兩次架構調整 + 性能優化 + 用户體驗提升方面的一些工作。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;二、架構升級&lt;/h1&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;2.1 垂直拆分業務集羣支持&lt;/h2&gt; 
&lt;p&gt;在 2023 年前，DGraph 系統始終採用單一集羣架構提供服務。該架構模式在平台發展初期展現出良好的經濟性和運維便利性，但隨着業務規模擴張，單集羣架構在系統層面逐漸顯露出三重剛性約束：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;存儲容量瓶頸 - 單節點內存上限導致數據規模受限；&lt;/li&gt; 
 &lt;li&gt;網絡帶寬瓶頸 - 單物理機 Pod 共享 10Gbps 帶寬，實際可用帶寬持續承壓，推薦引擎業務中部分核心集羣 200 餘張數據表（單表需 20 分鐘級更新）的實時處理需求已遭遇傳輸瓶頸；&lt;/li&gt; 
 &lt;li&gt;計算能力瓶頸 - 單實例最大 64 核的算力天花板，難以支撐複雜策略的快速迭代，核心場景響應時效與算法複雜度形成顯著衝突；&lt;/li&gt; 
 &lt;li&gt;穩定性 - 大規格集羣對於容器調度平台不友好，在擴容、集羣故障、集羣發佈時耗時較久；基於得物平台推薦數據量增長和算法迭代需求，我們實施業務垂直拆分的多集羣架構升級，通過資源解耦與負載分離，有效突破了單節點資源約束，為複雜算法策略的部署預留出充足的技術演進空間。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;系統改進點是在 DGraph 中增加了訪問了其他 DGraph 集羣 &amp;amp; FeatureStore 特徵集羣的能力 (圖 1)。為了成本考慮，我們複用了之前系統的傳輸協議 flatbuffers，服務發現仍基於 ZooKeeper。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c817ffca6dd3d7ecea36fdd95d20183d04a.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 1 DGraph 訪問架構改進&lt;/p&gt; 
&lt;p&gt;改造的難點在圖化集羣！&lt;/p&gt; 
&lt;p&gt;目前推薦業務的核心場景都進行了圖化改造，圖化查詢是把多路召回、打散、融合、粗排等策略打包到一個 DAG 圖中一次發送到 DGraph，DGraph 的算子調度模塊根據 DAG 的描述查詢索引數據 &amp;amp; 執行算子最終把結果返回給業務系統，但這些 DAG 圖規模都很大，部分業務 DAG 圖涉及 300+算子，因此如何在垂直拆分業務中把這些 DAG 圖拆分到不同的 DGraph 集羣中是一個非常複雜的問題，我們主要做了三方面改進：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;DAG 管理 - 集羣分主集羣和從集羣【多個】，DAG 圖部署在存在主集羣中，DIP 平台會分析 DAG 的拓步結構並把屬於從集羣的部分複製出來分發給從集羣，為了保證 DAG 的一致性，只允許從主集羣修改 DAG 圖；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;集羣劃分 - 通常按召回劃分，比如 Embedding 召回、X2I 召回、實驗召回可以分別部署在不同的集羣，另外也可以把粗排等算力需求大的部分單獨放在一個集羣，具體根據業務場景調整；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;性能優化 - 核心表多個集羣存放，減少主集羣和從集羣間數據交換量。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ed9ac500b1e0e379e07f0f870f4f6ae62bb.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 2 DGraph 業務垂直拆分集羣&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;2.2 分佈式能力支持&lt;/h2&gt; 
&lt;p&gt;垂直拆分集羣，雖然把推薦 N 路召回分散到了 M 個集羣，但是每個集羣中每個表依然是全量。隨着得物業務的發展，擴類目、擴商品，部分業務單表的數據量級已經接近單集羣的存儲瓶頸。因此需要 DGraph 中引入數據水平拆分的能力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3da38581237c44ef46782fe58c5c0566ed6.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 3 DGraph 分佈式集羣架構圖&lt;/p&gt; 
&lt;p&gt;在 DGraph 分佈式架構設計中，重點考慮了部署成本優化與業務遷移工作量：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;分佈式集羣採用【分片數 2】×【雙活節點 2】×【數據副本數 2】的最小拓撲結構，理論上需要 8 台物理節點保障滾動更新與異常容災時的穩定性。針對 CPU 負載較輕的場景，為避免獨立 Proxy 集羣帶來的額外資源開銷，DGraph 將 Proxy 模塊和 DGraph 引擎以對稱架構部署到所有節點，通過本地優先的智能路由策略（本地節點輪詢優先於跨節點訪問）實現資源利用率與訪問效率的平衡；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在業務兼容性方面，基礎查詢接口（KV 檢索、倒排索引、X2I 關聯查詢）保持完全兼容以降低遷移成本，而 DAG 圖查詢需業務側在查詢鏈路中明確指定 Proxy 聚合算子的位置以發揮分佈式性能優勢。數據鏈路層面，通過 DIP 平台實現索引無縫適配，支持 DataWorks 原有任務無需改造即可對接分佈式集羣，同時增量處理模塊內置分片過濾機制，可直接複用現有 Flink 實時計算集羣進行數據同步。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h1_5&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;三、性能優化&lt;/h1&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;3.1 算子執行框架優化&lt;/h2&gt; 
&lt;p&gt;在 DGraph 中，基於 DGraph DAG 圖 (參考圖 9) 的一次查詢就是圖查詢，內部簡稱 graphSearch。在一個 DAG 圖中，每個節點都是一個算子 (簡稱 Op)，算子通過有向邊連接其他算子，構成一個有向無環圖，算子執行引擎按 DAG 描述的關係選擇串行或者併發執行所有算子，通過組合不同算子 DAG 圖能在推薦場景中靈活高效的完成各種複雜任務。&lt;/p&gt; 
&lt;p&gt;在實際應用場景中受 DAG 圖規模 &amp;amp; 超時時間 (需要控制在 100ms 內) 限制，算子執行框架的效率非常重要。在最開始的版本中我們使用過 Omp &amp;amp; 單隊列線程池，集羣在 CPU 負載低於 30% 時表現尚可，但在集羣 CPU 負載超過 30% 後，rt99 表現糟糕。在降本增效的背景下，我們重點對算子執行框架進行了優化，引入了更高效的線程池 &amp;amp; 減少了調度過程中鎖的使用。優化後目前 DGraph 在 CPU 壓力超過 60% 依然可以提供穩定服務。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-314750530e377031be7838774eae9b7fecd.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 4 DGraph 算子執行框架優化&lt;/p&gt; 
&lt;p&gt;線程池優化：將原 1:N 的線程池-隊列架構調整為 M:N 分組模式。具體實現為將 N 個工作線程劃分為 M 個執行組（每組 N/M 線程），各組配備獨立任務隊列。任務提交採用輪詢分發機制至對應組隊列，通過資源分區有效降低線程調度時的鎖競爭強度。&lt;/p&gt; 
&lt;p&gt;調度器優化：在 DAG 調度過程中存在兩個典型多寫場景&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;前驅算子節點完成時需並行更新後繼節點標記；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;DAG 全局任務計數器歸零判斷。原方案通過全局鎖（Graph 鎖+Node 鎖）保障原子性，但在高負載場景引發顯著鎖競爭開銷，影響線程執行效率。經分析發現這兩個狀態變更操作符合特定併發模式：所有寫操作均為單調增減操作，因此可將鎖機制替換為原子變量操作。針對狀態標記和任務計數場景，分別採用原子變量的 FetchAdd 和 FetchSub 指令即可實現無鎖化同步，無需引入 CAS 機制即滿足線程安全要求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;3.2 傳輸協議編碼解碼優化&lt;/h2&gt; 
&lt;p&gt;優化 JavaSDK - DGraph 數據傳輸過程：在 DGraph 部分場景，由於請求引擎返回的數據量很大，解碼編碼耗時佔整個請求 20% 以上。分析已有的解碼編碼模塊，引擎在編碼階段會把待傳輸數據編碼到一個 FlatBuffer 中，然後通過 rpc 協議發送到業務側的 JavaSDK，sdk 解碼 FlatBuffer 封裝成 List&amp;lt;map&amp;gt; 返回給業務代碼，業務代碼再把 List&amp;lt;map&amp;gt; 轉化成 List&amp;lt;業務 Object&amp;gt;。過程中沒有併發 &amp;amp; sdk 側多了一層冗餘轉換。&lt;/p&gt; 
&lt;p&gt;優化方案如下：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;串行編碼調整為根據文檔數量動態調整編碼塊數量。各子編碼塊可以併發編碼解碼，加快編碼&amp;amp;解碼速度，提升整體傳輸性能；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;sdk 側由 Doc -&amp;gt; Map -&amp;gt; JavaObject 的轉化方式調整為 Doc -&amp;gt; JavaObject，減少解碼端算力開銷。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-781cc5f8b62293731a12f4578bddbafd4b1.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 5 DGraph 傳輸編碼解碼過程優化&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_8&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;四、用户體驗優化&lt;/h1&gt; 
&lt;span id=&quot;OSC_h2_9&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;4.1 DAG 圖調試功能優化&lt;/h2&gt; 
&lt;p&gt;目前我們已經把 DGraph DAG 圖查詢的調試能力集成到 DIP 平台。其原理是：DGraph 的算子基類實現了執行結果輸出，由於算子的中間結果數據量極大，當調試模塊發現調試標誌後會先把當前算子的中間結果寫入日誌中，數據按 TraceID + DAGID+ NodeID 組織，最終這些數據被採集到 SLS 日誌平台。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2d918720f61f5f0f7d019c68f05998aecca.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 6 DGraph DAG 圖查詢調試&lt;/p&gt; 
&lt;p&gt;從 DIP 平台調試 DAG 圖請求，首先通過 DGraph JavaSDK 的調試入口拿到 DAG 圖請求 json，填入 DIP 平台圖請求調試入口，發起請求。索引平台會根據請求體自動關聯 DAG 圖並結合最終執行結果通過頁面的方式展示。DIP 平台拿到結果後，在 DAG 圖中成功的算子節點標記為綠色，失敗的節點標記為紅色 (圖 6)。點擊任意節點可以跳轉到日誌平台查看該節點的中間結果輸出。可用於分析 DAG 圖執行過程中的各種細節，提升業務排查業務問題效率。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_10&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;4.2 DAG 圖支持 TimeLine 分析&lt;/h2&gt; 
&lt;p&gt;基於 Chrome 瀏覽器中的 TimeLine 構建，用於 DGraph DAG 圖查詢時算子性能分析優化工作。TimeLine 功能集成在算子基類中，啓動時會記錄每個算子的啓動時間、等待時間、完成時間、執行線程 pid 等信息，這些信息首先輸出到日誌，然後被 SLS 日誌平台採集。用户可以使用查詢時的 TraceID 在日誌平台搜索相關的 TimeLine 信息。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8775652c29620ccf9e0595b35dd3c9cebd3.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 7 DGraph DAG 圖例子&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6a92e653aa398223b8be061bf6a425c268d.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 8 使用瀏覽器查看 DGraph DAG 圖 TimeLine&lt;/p&gt; 
&lt;p&gt;當我們拿到請求的 TimeLine 信息後，通過瀏覽器加載可以通過圖形化的方式分析 DAG 執行過程中耗時分佈。圖 7 是一個 DAG 請求，它有 9 個算子節點，圖 8 是它的一次請求的 TimeLine。通過分析這些算子的耗時，可以幫助我們定位當前 DAG 圖查詢的瓶頸點在哪裏，從而精準去解決性能方面的問題。&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_11&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;4.3 DAG 圖支持動態子圖&lt;/h2&gt; 
&lt;p&gt;在 DAG 圖召回中，業務的召回通常都帶有一些固定模式，比如一個業務在一個 DAG 圖召回中有 N 路召回，每一路召回都是：① 查找數據；② 關聯可推池；③ 打散； 它們之間的區別可能僅僅是召回數據表名不同或者傳遞的參數不同。通常我們業務調整或者算法實驗調整隻需要增加或者減少部分召回，原有模式下這些操作需要去新增或者修改 DAG 圖，加上算法實驗很多，業務維護 DAG 圖的成本會非常高。&lt;/p&gt; 
&lt;p&gt;DAG 動態子圖的引入就是為瞭解決這類問題，首先我們在 DAG 圖中配置一個模板子圖，它僅僅描述一個行為模式，代表會涉及幾個算子，算子之間的關係如何，實際的參數以及召回路的數量則由業務方在發起請求時動態決定。子圖的執行和主圖的執行共用同一套調度框架，共享運行時資源以降低運行開銷。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-08756615857b6bf3b35868c2f1b8d772291.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;圖 9 DGraph 子圖&lt;/p&gt; 
&lt;p&gt;圖 9 是一個 DAG 召回使用 DAG 子圖後的變化，它有 8 路召回，一個 Merge 節點，這些召回分為兩類，一類是基於 KV 表 (ForwardSearch) 觸發的向量召回，另外一類是基於 KVV 表 (IvtSearch) 觸發的向量召回。引入 DAG 子圖後，在主圖中節點數量由 17 個降為 3 個。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_12&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;五、展望未來&lt;/h1&gt; 
&lt;p&gt;過去四年，DGraph 聚焦於實現得物推薦引擎體系從 0 到 1 的突破，重點完成了核心系統架構搭建、算法策略支持及業務迭代空間拓展，取得多項基礎性成果。基於 2024 年底的用户調研反饋結合 DGraph 當前的發展，後續將重點提升產品易用性、開發與運維效能及用户體驗，同時在系統穩定性、可擴展架構和平台化建設方面持續深化。&lt;/p&gt; 
&lt;p&gt;算法團隊大量 HC，歡迎加入我們：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247537831%26idx%3D1%26sn%3Ddb1464cd87a75dd8f7bcf512fb50bf70%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;得物技術大量算法崗位多地上線，「職」等你來！&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;文 / 尋風&lt;/p&gt; 
&lt;p&gt;關注得物技術，每週一、三更新技術乾貨&lt;/p&gt; 
&lt;p&gt;要是覺得文章對你有幫助的話，歡迎評論轉發點贊～&lt;/p&gt; 
&lt;p&gt;未經得物技術許可嚴禁轉載，否則依法追究法律責任。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/5783135/blog/18181570</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18181570</guid>
            <pubDate>Sun, 13 Apr 2025 09:35:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>字節系 Agent 產品 —— 釦子空間 (Coze Space) 開啓內測</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;4 月 18 日晚間，字節系 Agent 產品 —— 釦子空間 (Coze Space) &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FJlWyPmOwIYTXUD7tCvS1lg&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;&lt;/u&gt;開啓內測，定位通用 Agent。與其他類似產品如 manus 一樣，釦子空間採用了邀請碼制。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0421/173325_Er29_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0421/173418_u2N4_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;釦子空間有什麼特點？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🌟從回答問題，到解決問題，讓 Agent 幫你完成更多的工作&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;自動分析需求，拆解為多個子任務&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;自主調用工具（瀏覽器、代碼編輯器等），執行任務&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;輸出完整的結果報告，例如網頁、PPT 、飛書文檔等&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌟&lt;strong&gt;專家 Agent 生態，讓更專業 Agent 來為你提供服務&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;「華泰 A 股觀察助手」可以為你進行每日早報生成；針對股票分析問題，助手也能可以為你答疑解惑&lt;br&gt; &lt;img height=&quot;567&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0421/173807_CWme_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;「用户研究專家 」可以協助你進行用研資料深度分析，省時省力地助你獲取更多用户洞察&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌟&lt;strong&gt;探索/規劃雙模式，更好地和 Agent 一起協作完成高難度任務&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;探索模式：讓 AI 自主動態探索，完成速度更快&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;規劃模式：讓 AI 深度思考，適合高複雜性任務&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌟&lt;strong&gt;MCP 擴展集成，無限拓展 Agent 能力邊界&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;首批官方支持飛書多維表格、高德地圖、圖像工具、語音合成等 MCP&lt;br&gt; &lt;img height=&quot;566&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0421/173727_B7jG_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;即將支持「釦子開發平台」發佈 MCP 至「釦子空間」&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;釦子空間官網：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.coze.cn%2F&quot; target=&quot;_blank&quot;&gt;https://space.coze.cn/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345779/coze-space-preview</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345779/coze-space-preview</guid>
            <pubDate>Sun, 13 Apr 2025 09:34:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Meta 旗下 APP 禁用蘋果 Apple Intelligence</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;外媒報道稱，蘋果最新推出的 Apple Intelligence 功能在 Meta 旗下應用（包括 Facebook、Instagram、WhatsApp 和 Threads）中遭到禁用，用户無法使用其核心功能，如寫作工具 (Writing Tools) 和自定義表情符號生成器 (Genmoji)。此舉被認為與 Meta 推動自家 Meta AI 工具的戰略有關。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;223&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2e17e1e4324f772634e33ac142954924659.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Apple Intelligence 是蘋果於 2024 年隨 iOS18 推出的 AI 功能套件，旨在通過智能寫作、圖像生成和個性化體驗提升用户生產力。其中，寫作工具可實現文本校對、改寫和總結，Genmoji 則允許用户生成定製化表情符號。這些功能通常通過長按 iOS 文本輸入框激活，理論上適用於大多數應用。然而，Meta 旗下應用已明確禁用這些功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;自 2024 年 12 月起，Meta 開始逐步移除對 Apple Intelligence 的支持。用户在 Facebook、Instagram、WhatsApp 和 Threads 中無法調用寫作工具或 Genmoji，甚至此前可在 Instagram Stories 中使用的 Memoji 和鍵盤貼紙功能也被移除。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;相比之下，X（原 Twitter）、Bluesky 和 Signal 等第三方應用仍支持 Apple Intelligence 的寫作工具。值得注意的是，Apple Intelligence 在瀏覽器版本的 Meta 服務中仍可正常使用，因為瀏覽器環境不受 Meta 應用的限制。蘋果開發者文檔顯示，iOS 和 iPadOS 應用需主動選擇啓用 Apple Intelligence 功能，而 Meta 顯然選擇了禁用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Meta 並未公開解釋禁用 Apple Intelligence 的原因，但業內普遍認為，此舉旨在推廣其自研的 Meta AI 工具。Meta AI 基於 Llama 模型，已深度整合至 Facebook、Instagram、WhatsApp 和 Threads，提供文本生成、圖像創作和搜索增強等功能。例如，在 Instagram 中，用户嘗試編輯文本時，會看到「Write with AI」選項，引導至 Meta AI 界面，而非 Apple Intelligence。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345768</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345768</guid>
            <pubDate>Sun, 13 Apr 2025 08:47:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>