<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Mon, 25 Aug 2025 07:44:32 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>夸克發佈健康大模型技術報告</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;夸克正式發佈健康大模型技術報告《&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2508.11894" target="_blank"&gt;QuarkMed Technical Report&lt;/a&gt;》，首次公開了「主任醫師級」能力的技術實現細節。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此前，夸克健康大模型成功通過了中國 12 門核心學科的主任醫師筆試評測，成為國內首個完成這一挑戰的大模型。在與通用模型對比中，夸克健康大模型呈現出「難度越高、領先優勢越明顯」的性能曲線，尤其是在複雜醫學推理任務中實現突破。本次技術報告系統披露了這一突破背後的關鍵路徑與技術亮點。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;面對醫療模型需要高質量、高專業度訓練數據的問題，夸克健康大模型在模型訓練不同階段，使用了三類核心醫療數據:醫學資料、醫學知識和醫療記錄，數據總量高達約 1 萬億 Token。這些專業數據能有效彌補預訓練語料庫的不足，有助於提高模型的準確性與推理能力。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="167" src="https://oscimg.oschina.net/oscnet/up-3e0cefc34b2d4d5f0a8a7b7d8cf20ddb77d.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;為提升模型正確性、安全性以及複雜推理能力，夸克健康大模型引入兩個強化學習（RL）階段。第一階段通過大規模醫學強化學習，提升大模型在複雜場景中的推理能力。第二階段通過設計獎勵模型，從誠實性、有用性、內容合規性三個角度評估模型輸出質量、調整模型行為，使其符合人類偏好和價值觀。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="237" src="https://oscimg.oschina.net/oscnet/up-dae9b565c640c9a4f78f28fabf713547124.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;技術報告同時還公佈了多個性能測試結果。在 MedQA 等多個國際權威數據集測試中，夸克健康大模型相比 o3-mini 等同尺寸模型表現出了更優異的性能。在中國醫師資格考試（CPQExam）筆試評測中，筆試難度越高，夸克健康大模型領先優勢越明顯。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="168" src="https://oscimg.oschina.net/oscnet/up-38c36174a12617e5550ddda47e9bb2d29a8.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;報告中透露，夸克計劃將醫師考試測試集全面公開，以促進醫學相關的 AI 研究。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368339</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368339</guid>
      <pubDate>Mon, 25 Aug 2025 07:37:31 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>釘釘推出首款 AI 硬件：AI 錄音產品 DingTalk A1</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在釘釘十週年發佈會上，釘釘 CEO 陳航宣佈，釘釘推出 AI 錄音產品 DingTalk A1。釘釘表示，這是其首款 AI 硬件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="371" src="https://oscimg.oschina.net/oscnet/up-c10069d981c66aabcd63cd6a976d0226994.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;作為一款厚度僅 3.8 毫米的 AI 硬件產品，dingtalk A1 不僅小巧便攜，更是提高工作效率的得力助手。dingtalk A1 的使用方式非常簡單。對於 iOS 用户，只需將其貼在手機背面；而安卓用户則可以通過附贈的磁吸貼來體驗同樣的便捷。無論是在打電話、開會還是上課，dingtalk A1 都能將語音內容清晰地錄製下來。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;dingtalk A1 支持在 8 米內清晰收音，並提供 10000 分鐘的免費轉寫服務，轉寫準確率高達 97%。其內置的 36 個工作和生活 Agent 模板，為用户提供了多種選擇，使得會議記錄和工作總結更加輕鬆。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;dingtalk A1 還具備多維分析通話內容的能力。當客户撥打電話時，AI 小助理可以分析錄音，幫助銷售人員瞭解客户的購買意願和競爭優勢。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368336</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368336</guid>
      <pubDate>Mon, 25 Aug 2025 07:16:23 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Meta 與 Midjourney 達成授權合作</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Meta 首席 AI 官 Alexandr Wang&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Falexandr_wang%2Fstatus%2F1958983843169673367" target="_blank"&gt;宣佈&lt;/a&gt;，Meta 已與 Midjourney 達成合作，將獲得其美學技術 (Aesthetic Technology) 許可，將把 Midjourney 在圖像與視頻生成領域積累的美學技術整合到未來 Meta 的模型與產品中。&lt;/p&gt; 
&lt;p&gt;Wang 補充，此次合作由雙方研究團隊共同推進，旨在藉助 Midjourney 在技術與美學上的卓越表現，讓 「美」 觸達數十億用户。他強調，Meta 將堅持 all-of-the-above 策略，匯聚頂尖人才、擴展算力，並與行業最佳夥伴協作，以打造更優產品，後續進展將很快公佈。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0825/151337_EXfZ_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;作為知名的 AI 圖像和視頻生成工具提供商，Midjourney 在相關領域技術先進。而 Meta 近期大力投入 AI 研發，試圖追趕 OpenAI 和谷歌等競爭對手。公司創始人扎克伯格此前不惜重金從其他公司招攬 AI 人才，Alexandr Wang 正是在 Meta 以 143 億美元收購他聯合創立的 Scale AI 後，加入 Meta 擔任要職。&lt;/p&gt; 
&lt;p&gt;Meta 的 AI 佈局涵蓋諸多服務。其 AI 應用圍繞 AI 生成的圖像和視頻信息流構建；Facebook 發佈新帖時設有 AI 圖像創建按鈕；WhatsApp 和 Instagram 的聊天功能中也具備生成 AI 圖像的選項。此次與 Midjourney 合作，有望藉助其技術提升 Meta 用户生成的照片和視頻質量，進一步優化 AI 圖像和視頻功能。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368335</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368335</guid>
      <pubDate>Mon, 25 Aug 2025 07:15:23 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>DeepSeek 採用 UE8M0 FP8 標準：華為積極適配、徹底和英偉達決裂了</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;深度求索近日正式&lt;a href="https://www.oschina.net/news/367617"&gt;對外發布 DeepSeek-V3.1&lt;/a&gt;，官方提到 DeepSeek-V3.1 使用了 UE8M0 FP8 Scale 的參數精度。&lt;/p&gt; 
&lt;p&gt;在 DeepSeek 官方公眾號文章頁面，DeepSeek 進一步解釋稱：&lt;strong&gt;UE8M0 FP8 是針對即將發佈的下一代國產芯片設計&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0821/170943_HWBZ_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;FP 英文全稱為 Floating Point，是 IEEE 定義的標準浮點數類型。UE8M0 FP8 在 AI 模型領域代表一種模型精度。&lt;/p&gt; 
&lt;p&gt;人工智能領域的企業家與技術專家、清華大學計算機系人工智能所博士梁斌表示，UE8M0 FP8 和英偉達的 FP8 是兩個東西，兩套標準。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;DeepSeek 這次為什麼非要強調 UE8M0 FP8 呢？這個和英偉達的 FP8 是兩個東西，兩套標準，正式決裂。&lt;/p&gt; 
 &lt;p&gt;顯存的發展是有限的，而模型的發展是快速的，對每個參數的表達必須通過量化進行壓縮，FP36 就是 36 位表達一個參數，FP8 就是 8 位表達一個參數，在可接受的範圍內，肯定是越低的表達，在顯存裏面能裝下更多的參數。而就是 FP8 有英偉達的 E4M3 / E5M2 方案和 DS 的這個 UE8M0 方案，主要區別就是前者有 3-2 位的小數表達，後者沒有小數表達。&lt;/p&gt; 
 &lt;p&gt;前者精度好，後者功耗低，運算快，對芯片要求低。&lt;/p&gt; 
 &lt;p&gt;現在 DeepSeek 這麼搞，加上國產芯片都向這個標準靠攏，這是徹底和英偉達決裂了，以後其他推理模型，要麼選擇 DS 這套體系，要麼選擇英偉達體系，國內芯片公司也積極向這套體系靠攏。&lt;/p&gt; 
 &lt;p&gt;現在華為他們那邊真是為了適配這個標準，真是玩命幹，幹成了就是名垂千古，多大誘惑，而且我發現 DeepSeek 還真是有膽量，真是把國產大模型的發展推到了一個牛逼的高度上去，太了不起了。&lt;/p&gt; 
 &lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0825/145643_Tlcb_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;來源：&lt;em&gt;https://weibo.com/1497035431/Q1sKDAvWF&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368327</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368327</guid>
      <pubDate>Mon, 25 Aug 2025 06:57:23 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>基於 EventBridge 構築 AI 領域高效數據集成方案</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;作者：肯夢&lt;/p&gt; 
&lt;h2&gt;引言：AI 時代的數據處理變革&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-8cc1e7a6bfb9dd797a7f1292d623a6f6e4c.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;人工智能技術的發展經歷了從感知智能到生成智能，再到智能體和具身智能的跨越式演進。這一過程不僅體現在算法模型的不斷突破，更深刻地反映在對數據處理能力要求的根本性變化。根據麥肯錫的調研數據顯示，2022 年，全球有 50% 的公司部署了 AI 技術，投資超過總預算的 4%。生成式 AI（GenAI）的崛起進一步推動了企業轉型，其在流程優化、個性化服務等方面的應用已經超越了傳統 AI 的範疇。&lt;/p&gt; 
&lt;p&gt;在這一技術變革的浪潮中，數據處理能力的重要性愈發凸顯。傳統的數據處理架構主要圍繞結構化數據的批量處理而設計，採用的是相對靜態的 ETL 模式。然而，AI 時代的數據處理需求呈現出截然不同的特徵：&lt;strong&gt;數據源更加多樣化&lt;/strong&gt; ，包括文本、圖像、音頻、視頻等多模態數據；&lt;strong&gt;處理要求更加實時化&lt;/strong&gt; ，需要支持流式數據的即時處理和響應；&lt;strong&gt;應用場景更加智能化&lt;/strong&gt;，需要結合大語言模型的推理能力進行數據的理解、轉換和增強。&lt;/p&gt; 
&lt;p&gt;本文將從 AI 時代數據處理的挑戰與機遇出發，深入分析事件驅動架構在 AI 數據處理中的技術優勢，詳細闡述 &lt;strong&gt;EventBridge for AI ETL&lt;/strong&gt; 的實踐案例，展示其在不同應用場景中的價值。我們希望能夠為企業在 AI 轉型過程中的數據基礎設施建設，提供有價值的技術指導和實踐參考，推動 AI 技術在更廣泛領域的落地應用。&lt;/p&gt; 
&lt;h2&gt;一、AI 時代數據處理的挑戰與機遇&lt;/h2&gt; 
&lt;h3&gt;1. GenAI 的演進路徑分析&lt;/h3&gt; 
&lt;p&gt;生成式 AI 的發展經歷了從簡單到複雜、從單一到多元的演進過程，每個階段都對數據處理能力提出了不同的要求。深入理解這一演進路徑，對於把握 AI 數據處理的發展趨勢具有重要意義。&lt;/p&gt; 
&lt;h4&gt;最初起點：簡單模型 API 調用階段&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-a124f78045e9adf466dfc06f6e7b3ac865a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在生成式 AI 發展的初期階段，應用架構相對簡單直接。用户通過 Query 向大語言模型發送請求，模型基於預訓練的知識生成 Response 並返回給用户。這種架構雖然現在看來可能過於"簡陋"，但卻是許多初期現象級 AI 應用產品的起點，如文本總結、AI 算命、AI 情感分析等應用都採用了這種直白的架構模式。&lt;/p&gt; 
&lt;p&gt;在這個階段，數據處理的需求相對簡單，主要集中在 Prompt 的優化上。開發者需要通過精心設計的提示詞來引導模型生成期望的輸出，數據處理更多體現在輸入文本的預處理和輸出結果的後處理上。然而，這種簡單的架構很快就暴露出明顯的侷限性：模型的知識截止時間限制了其對最新信息的獲取能力，缺乏領域專業知識導致在特定場景下的表現不佳，無法處理個性化和上下文相關的複雜查詢。&lt;/p&gt; 
&lt;h4&gt;增強上下文：RAG 技術的興起&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-5d5b9498d0de35c167ba3f4e82d5bcb0b08.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;為瞭解決簡單模型 API 調用的侷限性，RAG（Retrieval-Augmented Generation）技術應運而生。RAG 的核心思想是在模型生成回答之前，先從外部知識庫通過之前用於搜廣推的向量檢索技術方案，檢索相關信息，然後將檢索到的信息作為上下文提供給模型，從而增強模型的生成能力。&lt;/p&gt; 
&lt;p&gt;RAG 技術的引入標誌着 AI 數據處理進入了一個新的階段，數據處理需求顯著增加，主要體現在兩個方面：首先是問題域特有信息的處理，例如在分析用户在某個平台的購買喜好時，需要實時獲取和處理用户在該平台的購買數據；其次是時效信息的處理，如股票信息、實時新聞等需要不斷更新的動態數據。&lt;/p&gt; 
&lt;p&gt;RAG 技術的實現需要構建一個完整的數據處理管道，包括數據收集、預處理、向量化、存儲、檢索和後處理等多個環節。這對數據處理系統的實時性、準確性和可擴展性提出了更高的要求。根據 Menlo Ventures 發佈的市場調研報告，RAG 以 51% 的市場份額在企業市場中佔據絕對優勢，充分説明其在實際應用中的重要地位。&lt;/p&gt; 
&lt;h4&gt;Agent 模式：智能體的規劃與工具能力&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-686c9ad4ec9e029054b610fae9f42473058.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;隨着 AI 技術的進一步發展，單純的檢索增強已經無法滿足複雜應用場景的需求。Agent 模式的出現代表了 AI 應用架構的又一次重大演進。Agent 是在特定環境下具備 plan+tools 能力的智能體，其中"特定環境"限制了 Agent 的創建面向特定的場景和問題域，"plan" 説明 Agent 具有思考和規劃能力，且能夠根據反饋進行循環迭代，"tools" 則是指 Agent 具備與外部交互的能力。&lt;/p&gt; 
&lt;p&gt;Agent 模式對事件驅動和數據處理提出了更加複雜和多樣化的需求。Agent 需要能夠動態地選擇和調用不同的工具來完成任務，這要求事件驅動系統具備高度的靈活性和可擴展性。同時，Agent 的規劃和決策過程需要基於實時的環境信息和歷史數據，這對數據的實時性和一致性提出了嚴格要求。&lt;/p&gt; 
&lt;h3&gt;2. 數據種類的多樣化挑戰&lt;/h3&gt; 
&lt;p&gt;AI 時代的數據處理面臨着前所未有的數據種類多樣化挑戰。與傳統的以結構化數據為主的處理模式不同，AI 應用需要處理包括文本、圖像、音頻、視頻在內的多模態數據，每種數據類型都有其獨特的處理要求和技術挑戰。&lt;/p&gt; 
&lt;h4&gt;結構化數據&lt;/h4&gt; 
&lt;p&gt;結構化數據具有固定的格式和明確的字段定義，是傳統數據處理系統最擅長處理的數據類型。在 AI 應用中，結構化數據主要來源於數據庫、數據倉庫、業務系統等，包括用户信息、交易記錄、日誌數據等。這類數據的處理相對成熟，主要挑戰在於如何高效地進行數據清洗、轉換和集成。&lt;/p&gt; 
&lt;p&gt;然而，即使是結構化數據的處理，在 AI 時代也面臨新的挑戰。首先是數據量的急劇增長，根據 IDC 的預測，全球數據量將從 2020 年的 64.2ZB 增長到 2025 年的 175ZB 。其次是數據源的多樣化，企業需要整合來自不同系統、不同格式的結構化數據。最後是實時性要求的提高，AI 應用往往需要基於最新的數據進行推理和決策。&lt;/p&gt; 
&lt;h4&gt;非結構化數據&lt;/h4&gt; 
&lt;p&gt;非結構化數據在 AI 應用中佔據越來越重要的地位。文本數據是較為通用的非結構化數據類型，包括文檔、郵件、社交媒體內容、客服對話等。這類數據的處理需要運用自然語言處理技術，包括分詞、實體識別、情感分析、語義理解等。&lt;/p&gt; 
&lt;p&gt;圖像和視頻數據的處理更加複雜，需要運用計算機視覺技術進行特徵提取、目標檢測、圖像分類等。音頻數據的處理則涉及語音識別、音頻分類、聲紋識別等技術。每種非結構化數據都需要專門的預處理、特徵提取和向量化技術，這大大增加了數據處理系統的複雜性。&lt;/p&gt; 
&lt;h4&gt;半結構化數據&lt;/h4&gt; 
&lt;p&gt;半結構化數據是介於完全結構化的數據和完全無結構的數據之間的一種數據形式。它不符合關係數據庫或其他數據表形式的嚴格結構，但包含標籤或其他標記，用於分隔語義元素和執行記錄和字段的層次結構。這使得它比非結構化數據更容易分析，也更具靈活性。&lt;/p&gt; 
&lt;p&gt;AI 系統，特別是機器學習和深度學習模型，需要大量的、多樣化的數據進行訓練和推理。半結構化數據憑藉其靈活性和豐富的上下文信息，在 AI 的多個關鍵環節中扮演着核心角色。譬如標註信息存儲，特徵工程，A2A Message Events 等等。&lt;/p&gt; 
&lt;h4&gt;多模態數據的融合處理&lt;/h4&gt; 
&lt;p&gt;隨着 AI 技術的發展，越來越多的應用需要同時處理多種模態的數據。例如，智能客服系統需要同時處理文本、語音和圖像信息；智能推薦系統需要結合用户的行為數據、內容特徵和社交關係等多維信息。多模態數據的融合處理不僅需要處理每種模態的數據，還需要建立不同模態之間的關聯和映射關係。&lt;/p&gt; 
&lt;p&gt;這種融合處理的挑戰在於如何保證不同模態數據的時間同步、語義一致和質量統一。同時，多模態數據的存儲和檢索也需要專門的技術支持，傳統的關係型數據庫往往無法滿足這種需求，需要採用向量數據庫、圖數據庫等新型存儲技術。&lt;/p&gt; 
&lt;h3&gt;3. 主流數據採集方式的演變&lt;/h3&gt; 
&lt;p&gt;AI 時代的數據採集方式相比傳統模式發生了顯著變化。傳統的數據採集主要依賴定期的批量抽取，而 AI 應用往往需要實時或近實時的數據流。這種變化對數據採集系統的架構和性能提出了新的要求。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;實時數據流採集&lt;/strong&gt;成為主流趨勢。通過消息隊列、流處理框架等技術，系統能夠實時捕獲和處理數據變化。Apache Kafka、Apache RocketMQ 等流處理平台在 AI 數據採集中發揮着越來越重要的作用。根據市場研究數據，流處理技術已經成為 2024 年數據集成的關鍵趨勢。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API 驅動的數據採集&lt;/strong&gt;也變得越來越普遍。通過 RESTful API、GraphQL 等接口，系統能夠按需獲取外部數據源的信息。這種方式特別適合處理第三方服務的數據，如社交媒體數據、天氣信息、金融數據等。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;事件驅動的數據採集&lt;/strong&gt;是另一個重要趨勢。當特定事件發生時，系統自動觸發數據採集和處理流程。這種方式能夠大大提高數據處理的效率和實時性，特別適合處理用户行為數據、系統日誌等事件型數據。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;4. AI 時代的數據集成挑戰&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-8972399c6e10cb00422a0c0e42751db5008.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;（圖源：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FRLanceMartin%2Fstatus%2F1673380038274695169%EF%BC%89" target="_blank"&gt;https://x.com/RLanceMartin/status/1673380038274695169）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;上圖是 Langchain 在 RAG 領域定義的數據集成。誠然它具有模塊化、聲明式設計，併為我們提供了大量實用程序和輔助功能，但是在工程化的複雜度依舊存在，我們依然會陷入針對 Data 領域的抽象和工程化實現。&lt;/p&gt; 
&lt;p&gt;所以，在 AI 與數據集成的實踐過程中，我們總結出企業普遍面臨三大核心痛點，這些痛點不僅影響了 AI 應用的開發效率，也制約了 AI 技術的規模化應用。&lt;/p&gt; 
&lt;h4&gt;擴展難：數據源異構性挑戰&lt;/h4&gt; 
&lt;p&gt;隨着企業數字化程度的提高，數據源的種類和數量呈爆炸式增長。企業需要整合來自 ERP、CRM、OA、電商平台、社交媒體、IoT 設備等各種系統的數據。這些數據源在數據格式、接口協議、更新頻率、訪問權限等方面存在巨大差異。&lt;/p&gt; 
&lt;p&gt;一個簡單的數據集成項目在初期往往進展順利，但隨着需要接入的數據源增加，系統的複雜度呈指數級增長。每增加一個新的數據源，開發團隊都需要了解其特定的數據格式和接口規範，開發相應的連接器和轉換邏輯，並進行充分的測試和驗證。這種線性增長的開發模式嚴重製約了 AI 項目的擴展能力。&lt;/p&gt; 
&lt;p&gt;更為嚴重的是，不同數據源之間往往存在數據格式不一致、字段命名不規範、數據質量參差不齊等問題。例如，同樣是用户信息，不同系統可能使用不同的用户 ID 格式，時間字段可能採用不同的時區和格式，地址信息可能有不同的結構化程度。這些差異需要在數據集成過程中進行統一處理，進一步增加了系統的複雜性。&lt;/p&gt; 
&lt;h4&gt;運維難：業務複雜性增長&lt;/h4&gt; 
&lt;p&gt;AI 數據處理系統的運維複雜性遠超傳統的數據處理系統。首先，AI 應用對數據的實時性要求更高，任何數據延遲都可能影響模型的推理效果。其次，AI 數據處理涉及多個環節，包括數據採集、清洗、轉換、向量化、存儲、檢索等，每個環節都可能出現問題。最後，AI 模型的迭代更新頻繁，數據處理邏輯也需要相應調整。&lt;/p&gt; 
&lt;p&gt;在實際運維過程中，運維團隊經常面臨各種突發問題：數據源突然變更接口格式導致數據採集中斷，數據質量問題導致模型推理結果異常，系統負載突增導致處理延遲，存儲空間不足導致數據丟失等。這些問題往往需要跨團隊協作解決，涉及數據工程師、算法工程師、運維工程師等多個角色。&lt;/p&gt; 
&lt;p&gt;傳統的運維方式主要依賴人工監控和處理，這種方式在面對 AI 數據處理系統的複雜性時顯得力不從心。企業迫切需要智能化的運維工具和自動化的故障處理機制，以降低運維成本和提高系統可靠性。&lt;/p&gt; 
&lt;h4&gt;穩定性差：數據鏈路可靠性問題&lt;/h4&gt; 
&lt;p&gt;數據鏈路的穩定性是 AI 應用能否成功上線生產環境的關鍵因素。在 AI 應用中，數據質量和處理鏈路的任何問題都可能導致模型推理結果的偏差甚至錯誤，進而影響業務決策和用户體驗。&lt;/p&gt; 
&lt;p&gt;數據鏈路的穩定性問題主要體現在幾個方面：數據丟失或重複，由於網絡故障、系統異常等原因導致數據在傳輸過程中丟失或重複處理；數據延遲，由於處理能力不足、網絡擁塞等原因導致數據處理延遲，影響 AI 應用的實時性；數據質量下降，由於數據源變更、處理邏輯錯誤等原因導致數據質量下降，影響模型的推理效果；系統故障，由於硬件故障、軟件 bug 等原因導致整個數據處理鏈路中斷。&lt;/p&gt; 
&lt;p&gt;這些穩定性問題的根本原因在於傳統數據處理架構的緊耦合設計。在緊耦合架構中，任何一個組件的故障都可能影響整個系統的運行。同時，缺乏有效的監控和告警機制，問題往往在造成嚴重影響後才被發現。&lt;/p&gt; 
&lt;p&gt;為瞭解決這些問題，業界開始探索&lt;strong&gt;基於事件驅動架構的松耦合設計&lt;/strong&gt;。通過將數據處理流程分解為獨立的事件和處理單元，系統能夠實現更好的容錯能力和可擴展性。同時，通過引入智能監控和自動恢復機制，系統能夠及時發現和處理各種異常情況，保證數據鏈路的穩定運行。&lt;/p&gt; 
&lt;h2&gt;二、AI 數據處理的技術基石 - 事件驅動架構&lt;/h2&gt; 
&lt;h3&gt;1. 事件驅動架構的核心概念&lt;/h3&gt; 
&lt;p&gt;事件驅動架構（Event-Driven Architecture，EDA）作為一種現代軟件架構模式，為解決 AI 時代數據處理的複雜性挑戰提供了強有力的技術基礎。&lt;/p&gt; 
&lt;h4&gt;Event 的本質：狀態變化的數字化表達&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-c23ddafbecbf58e1e1f100faae6584d1b30.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在事件驅動架構中，Event（事件）是系統的核心概念。簡單來説，事件就是狀態的顯著變化，是一切能夠輸入計算機中且能被處理的符號的數字化表達。這種定義看似簡單，但卻藴含着深刻的技術內涵。&lt;/p&gt; 
&lt;p&gt;以一個典型的 4S 店售賣汽車的業務場景為例，我們可以清晰地看到事件的本質特徵。當客户購買汽車並且其狀態從"For Sale"變為"Sold"時，這構成了一個銷售事件。成功交易後，從賬户中扣除金額形成了一個支付事件。用户點擊預訂試駕後，將預約信息添加到指定用户的操作產生了一個預約事件。甚至用户資料和預約單本身也可以被視為事件的載體。&lt;/p&gt; 
&lt;p&gt;這種事件化的思維方式具有重要的技術優勢。首先，事件提供了系統狀態變化的完整記錄，使得系統具備了天然的審計和回溯能力。其次，事件的異步特性使得系統組件之間能夠實現鬆散耦合，提高了系統的可擴展性和容錯能力。最後，事件的標準化格式使得不同系統之間的集成變得更加簡單和可靠。&lt;/p&gt; 
&lt;p&gt;在 AI 數據處理場景中，事件的概念得到了進一步的擴展和深化。&lt;strong&gt;數據的產生、變更、處理、存儲等各個環節都可以被抽象為事件。&lt;/strong&gt; 例如，當新的訓練數據上傳到系統時，產生數據接收事件；當數據經過清洗和轉換後，產生數據處理完成事件；當向量化處理完成後，產生向量生成事件；當數據成功存儲到向量數據庫後，產生數據入庫事件。這種事件化的處理方式使得整個 AI 數據處理流程變得清晰、可控和可監控。&lt;/p&gt; 
&lt;h3&gt;2. EventBridge 架構深度解析&lt;/h3&gt; 
&lt;p&gt;阿里雲 EventBridge 作為事件驅動架構的具體實現，在技術架構設計上充分體現了 EDA 的核心理念，同時針對 AI 數據處理的特殊需求進行了深度優化。&lt;/p&gt; 
&lt;h4&gt;源、過濾、轉換、目標&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-36fcd755cf41bdae351464035f803102931.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;EventBridge 的技術架構圍繞四大核心能力構建：源（Source）、過濾（Filter）、轉換（Transform）、目標（Sink）。這四大能力形成了完整的事件處理鏈路，為 AI 數據處理提供了全面的技術支撐。&lt;/p&gt; 
&lt;p&gt;源（Source）能力負責&lt;strong&gt;事件的接入和採集&lt;/strong&gt;。EventBridge 支持多種類型的事件源，包括結構化數據源和非結構化數據源。結構化數據源涵蓋了消息隊列（Kafka、RocketMQ 等）、數據庫（關係型數據庫、數據倉庫）、可觀測性平台（SLS、Prometheus）、API 接口等。非結構化數據源則包括對象存儲（CSV、PDF、TXT 等文件格式）以及各種自定義數據源。這種多樣化的數據源支持使得 EventBridge 能夠適應 AI 應用中複雜多變的數據接入需求。&lt;/p&gt; 
&lt;p&gt;過濾（Filter）能力提供了&lt;strong&gt;靈活的事件篩選機制&lt;/strong&gt;。通過事件模式匹配，系統可以根據預定義的規則對事件進行篩選和路由。EventBridge 支持多種匹配模式，包括指定值匹配、前綴匹配、包含匹配、除外匹配、多模式匹配等。這種細粒度的過濾能力使得系統能夠精確地控制事件的處理流程，避免不必要的計算資源消耗。&lt;/p&gt; 
&lt;p&gt;轉換（Transform）能力是 &lt;strong&gt;EventBridge 在 AI 領域的核心創新&lt;/strong&gt;。系統支持多種轉換方式，包括自定義代碼轉換、自定義模型轉換、自定義 API 轉換等。特別值得注意的是，EventBridge 集成了百鍊模型服務，能夠調用大語言模型進行智能化的數據轉換。這種 AI 驅動的轉換能力使得系統能夠處理傳統 ETL 工具難以處理的複雜數據轉換任務。&lt;/p&gt; 
&lt;p&gt;目標（Sink）能力負責&lt;strong&gt;處理後事件的輸出和存儲&lt;/strong&gt;。EventBridge 支持多種目標類型，包括消息隊列、數據庫、數據倉庫、可觀測性平台、函數計算、API 接口、通知服務等。這種多樣化的目標支持使得處理後的數據能夠靈活地流向不同的下游系統，滿足 AI 應用的多樣化需求。&lt;/p&gt; 
&lt;h4&gt;事件總線模型：N:M 的靈活路由&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-1f5e041eea91f019016746d410608279ec3.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;EventBridge 的事件總線模型採用了經典的 EDA（事件驅動）架構中的 N:M 模型，提供了多事件路由、事件匹配、事件轉換等核心能力，幫助用户快速搭建事件驅動架構。&lt;/p&gt; 
&lt;p&gt;在事件總線模型中，多個事件源可以同時向事件總線發送事件，事件總線根據預定義的規則將事件路由到相應的目標服務。這種 N:M 的路由模式具有重要的技術優勢。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;首先，它實現了事件源和目標服務之間的完全解耦，事件源不需要知道有哪些目標服務在消費事件，目標服務也不需要知道事件來自哪個源。&lt;/li&gt; 
 &lt;li&gt;其次，它支持動態的路由配置，可以在運行時添加或刪除事件源和目標服務，而不影響系統的正常運行。&lt;/li&gt; 
 &lt;li&gt;最後，它提供了強大的事件複製和廣播能力，一個事件可以同時被多個目標服務處理，實現了數據的多路分發。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在 AI 數據處理場景中，事件總線模型的這些特性具有重要價值。例如，當新的訓練數據到達時，可以同時觸發數據預處理、質量檢查、備份存儲等多個處理流程。當模型推理完成時，可以同時更新緩存、記錄日誌、發送通知等。這種並行處理能力大大提高了 AI 數據處理的效率。&lt;/p&gt; 
&lt;h4&gt;事件流模型：1:1 的高效傳輸&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-f8ed565c46144128d0540b598ec6333a67a.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;除了事件總線模型，EventBridge 還提供了事件流模型，採用標準的 Streaming（1:1）流式處理場景。事件流模型沒有總線概念，適用於端到端的數據轉儲、數據同步及數據處理等場景，幫助用户輕鬆構建雲上數據管道服務。&lt;/p&gt; 
&lt;p&gt;事件流模型的核心優勢在於其高效的點對點傳輸能力。在這種模型中，事件從源直接流向目標，中間經過匹配和轉換處理，但不需要經過複雜的路由邏輯。這種簡化的處理流程使得事件流模型在處理大量數據時具有更高的性能和更低的延遲。&lt;/p&gt; 
&lt;p&gt;在 AI 數據處理中，事件流模型特別適合處理實時數據流。例如，將實時產生的用户行為數據直接流式處理並存儲到向量數據庫中，或者將傳感器數據實時轉換為模型輸入格式。這種高效的流式處理能力為實時 AI 應用提供了重要的技術支撐。&lt;/p&gt; 
&lt;h3&gt;3. 事件驅動架構在 AI 領域的應用價值&lt;/h3&gt; 
&lt;p&gt;事件驅動架構在 AI 領域的應用價值不僅體現在技術層面的優勢，更重要的是它為 AI 應用的規模化部署和運營提供了堅實的基礎。&lt;/p&gt; 
&lt;h4&gt;鬆散耦合設計&lt;/h4&gt; 
&lt;p&gt;鬆散耦合是事件驅動架構的核心特徵，也是其在 AI 領域應用的重要價值所在。在 AI 系統中，不同的組件往往由不同的團隊開發和維護，包括數據工程團隊、算法團隊、平台團隊等。&lt;strong&gt;鬆散耦合的設計使得這些團隊能夠獨立地開發和部署各自的組件，而不需要過多地考慮其他組件的實現細節。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這種設計理念特別適合 AI 項目的迭代開發模式。AI 算法和模型往往需要頻繁地更新和優化，如果系統採用緊耦合的設計，每次算法更新都可能需要修改多個組件。而在鬆散耦合的架構中，算法的更新只需要修改相應的事件處理邏輯，不會影響其他組件的正常運行。&lt;/p&gt; 
&lt;h4&gt;可擴展性/穩定性保障&lt;/h4&gt; 
&lt;p&gt;AI 應用的負載往往具有很強的不確定性和波動性。在某些時段，系統可能需要處理大量的數據和請求；而在其他時段，系統的負載可能相對較低。&lt;strong&gt;事件驅動架構的可擴展性特徵使得系統能夠根據實際負載動態調整資源配置。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在事件驅動架構中，每個組件都可以獨立地進行擴展。當某個組件的處理能力不足時，可以增加該組件的實例數量，而不需要擴展整個系統。這種細粒度的擴展能力使得資源配置更加精確和高效。&lt;/p&gt; 
&lt;h4&gt;端到端的實時傳輸&lt;/h4&gt; 
&lt;p&gt;AI 應用往往對實時性有很高的要求，特別是在實時推理、智能客服等場景中。&lt;strong&gt;事件驅動架構的實時傳輸特性使得系統能夠快速響應各種事件，大大提高了 AI 應用的實時性。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;採用事件驅動架構的系統在可擴展性、可維護性和可靠性方面都有顯著提升&lt;/strong&gt; 。在 AI 領域，這些優勢更加明顯，因為 &lt;strong&gt;AI 應用往往需要處理更加複雜和多變的數據處理需求&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;三、解決方案詳解 EventBridge 多源 RAG 能力&lt;/h2&gt; 
&lt;p&gt;EventBridge 多源 RAG 能力代表了事件驅動架構在 AI 數據處理領域的重要突破。這一能力的核心價值在於將傳統的數據處理流程與現代 AI 技術深度融合，為企業構建智能化的數據管道提供了全新的技術範式。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-123f71ea4cd228e5b9f78b033e0552adf8b.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;1. 多源數據接入&lt;/h3&gt; 
&lt;p&gt;在 AI 時代，數據源的多樣性和複雜性達到了前所未有的程度。EventBridge 多源 RAG 能力通過統一的接入框架，實現了對各種異構數據源的無縫集成，為 AI 應用提供了豐富的數據基礎。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-3c487855e59a3783e7f1da61b7b2e2f363c.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;非結構化數據 Loader 技術&lt;/h4&gt; 
&lt;p&gt;非結構化數據在 AI 應用中佔據越來越重要的地位，特別是在 RAG（檢索增強生成）場景中。EventBridge 針對非結構化數據的處理需求，開發了一套完整的 Loader 技術體系，支持多種數據格式的智能解析和處理。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;分塊處理策略是非結構化數據處理的關鍵技術。&lt;/strong&gt; 在 RAG 應用中，長文檔需要被分割成適當大小的文本塊，以便進行向量化和檢索。&lt;strong&gt;EventBridge 提供了多種分塊策略，包括基於字符數的固定分塊、基於段落結構的邏輯分塊等。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;單文檔與批量加載是系統設計中的重要考慮因素。對於實時性要求較高的場景，系統支持單文檔的即時加載和處理，確保新文檔能夠快速進入 RAG 系統。對於批量數據處理場景，系統提供了高效的批量加載機制，支持並行處理和斷點續傳，確保大規模數據的可靠處理。&lt;/p&gt; 
&lt;h4&gt;結構化數據源集成&lt;/h4&gt; 
&lt;p&gt;結構化數據源的集成是 EventBridge 多源 RAG 能力的另一個重要組成部分。與非結構化數據不同，結構化數據具有明確的格式定義和字段結構，但其集成挑戰主要體現在數據源的多樣性和實時性要求上。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;數據系統集成是結構化數據接入的重要方式。EventBridge 支持主流的消息隊列（如 Kafka、RocketMQ、MQTT），日誌服務（如 SLS，Simple Log Service），數據庫服務（如 MySQL）等。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;實時流數據處理是 EventBridge 在結構化數據處理方面的重要創新。&lt;/strong&gt; 系統採用了流式處理架構，能夠實時處理高吞吐量的數據流。&lt;strong&gt;可實現複雜的流式數據轉換和聚合操作，為實時 RAG 應用提供豐富的事件源。&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;2. 向量數據庫入庫優化&lt;/h3&gt; 
&lt;p&gt;向量數據庫是 RAG 應用的核心基礎設施，EventBridge 在向量數據庫入庫方面的優化為 RAG 應用提供了高效、可靠的數據存儲支撐。&lt;/p&gt; 
&lt;h4&gt;向量數據庫支持&lt;/h4&gt; 
&lt;p&gt;隨着 AI 技術的發展，向量數據庫市場呈現出百花齊放的態勢。不同的向量數據庫在性能特徵、功能特性、成本結構等方面各有優勢。&lt;strong&gt;EventBridge 通過提供統一的向量數據庫接入接口，支持 Dashvector、Milvus 等主流向量數據庫產品&lt;/strong&gt;，為用户提供了靈活的選擇空間。&lt;/p&gt; 
&lt;h4&gt;傳統數據庫向量插件兼容&lt;/h4&gt; 
&lt;p&gt;除了向量數據庫，許多傳統數據庫也推出了向量擴展插件，如 PostgreSQL 的 PGvector、MySQL 的向量索引等。這些向量插件使得用户能夠在現有的數據庫基礎設施上實現向量存儲和檢索功能，降低了系統的複雜度和成本。&lt;strong&gt;EventBridge 也即將支持向量插件方式入庫&lt;/strong&gt;，為開發者帶來更多選擇。&lt;/p&gt; 
&lt;h4&gt;一鍵白屏化入庫體驗&lt;/h4&gt; 
&lt;p&gt;為了降低向量數據庫使用的技術門檻，&lt;strong&gt;EventBridge 提供了一鍵白屏化的入庫體驗&lt;/strong&gt;。用户只需要通過簡單的圖形界面配置，就能夠實現複雜的向量數據處理和入庫流程。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;直觀的拖拽式配置界面：用户可以通過拖拽的方式配置數據源、處理邏輯、目標數據庫等，系統會自動生成相應的處理流程。這種可視化的配置方式大大降低了系統使用的複雜度。&lt;/li&gt; 
 &lt;li&gt;豐富的預置模板：涵蓋常見的 RAG 應用場景，用户可以基於這些模板快速搭建自己的數據處理流程，然後根據具體需求進行定製化調整。&lt;/li&gt; 
 &lt;li&gt;完善的監控儀錶板和告警機制：用户可以實時查看數據處理的狀態、性能指標、錯誤信息等，及時發現和解決問題。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;四、解決方案詳解實時推理與異步推理能力&lt;/h2&gt; 
&lt;p&gt;EventBridge 在推理接入方面提供了靈活的選擇，支持實時推理和異步推理兩種模式，以滿足不同應用推理場景的需求。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-8f190f82a3a03b30828cb134e55685994ad.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;1. 智能數據轉換能力&lt;/h3&gt; 
&lt;p&gt;數據轉換是 ETL 流程中最複雜也是最關鍵的環節。EventBridge 多源 RAG 能力在數據轉換方面的創新，主要通過深度集成大語言模型（LLM）的推理能力，將其自然語言理解和生成能力引入數據處理流程，實現傳統 ETL 工具難以處理的複雜數據轉換任務。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在&lt;strong&gt;數據清洗&lt;/strong&gt;方面，LLM 能夠智能識別和處理各種數據質量問題。例如，基於上下文自動糾錯包含拼寫錯誤的文本數據；將格式不規範的地址信息標準化為統一格式；將包含縮寫和俚語的文本轉換為標準的表達方式。&lt;/li&gt; 
 &lt;li&gt;在&lt;strong&gt;數據增強&lt;/strong&gt;方面，LLM 能夠為原始數據添加語義信息，為 AI 應用提供更加豐富的數據基礎。例如，從產品描述文本中自動提取產品的關鍵特徵和屬性；分析用户評論的情感傾向和關鍵觀點；提取新聞文章的關鍵事件和實體信息。&lt;/li&gt; 
 &lt;li&gt;在&lt;strong&gt;數據轉換&lt;/strong&gt;方面，LLM 能夠實現複雜的格式轉換和結構重組，大大降低了數據集成的複雜度。例如，將非結構化的文本轉換為結構化的 JSON 格式；將表格數據轉換為自然語言描述；將多種數據源的信息融合為統一的數據模型等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2. 結構化輸出技術&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-ac9fde0573e27f999a7146f461853e0d542.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;結構化輸出是 EventBridge 在 AI 數據處理方面提供的重要能力。傳統的大語言模型輸出通常是非結構化的自然語言文本，往往需要進行二次解析和處理（例如，使用正則表達式、自然語言處理工具等方法從模型輸出中提取結構化信息），這個過程不僅複雜而且容易出錯。EventBridge 支持結構化輸出，使得大語言模型能夠直接生成 JSON、XML 等結構化的數據格式，避免了二次解析的複雜性，大大簡化了數據處理流程。&lt;/p&gt; 
&lt;p&gt;在實際應用中，結構化輸出技術能夠支持複雜的數據結構定義。用户可以定義包含嵌套對象、數組、枚舉值等複雜結構的輸出格式，模型會嚴格按照定義的格式生成輸出。這種精確的格式控制使得 AI 數據處理能夠與下游系統無縫集成。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JsonSchema 原生支持：&lt;/strong&gt; JsonSchema 是 JSON 數據格式的標準化描述語言，廣泛應用於 API 設計和數據驗證。EventBridge 提供了對 JsonSchema 的原生支持，允許用户定義期望的輸出格式，並確保模型輸出嚴格符合定義的格式。JsonSchema 支持複雜的數據結構定義，包括字段類型、約束條件、默認值等詳細信息，系統會在模型推理過程中進行實時驗證和糾正，確保數據處理結果的一致性和可靠性。對於支持 JsonSchema 的模型，系統會優先使用其原生能力進行結構化輸出，通常具有更好的性能和更高的準確性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;提示詞注入優化：&lt;/strong&gt; 對於不支持 JsonSchema 原生能力的模型，EventBridge 採用智能提示詞注入技術。系統會分析用户輸出格式，並結合模型特性，生成相應的提示詞模板並注入到模型的輸入中，引導模型生成符合要求的結構化輸出。系統將根據模型的輸出質量動態調整提示詞，優化輸出效果。在多輪對話和上下文處理方面，系統能夠智能管理提示詞上下文，維護完整的對話歷史，確保每輪輸出的格式一致。因此，EventBridge 能夠支持各類大語言模型，無論其是否原生支持結構化輸出，都能生成高質量的結構化數據，為用户提供更廣泛的模型兼容性和更大的選擇空間。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;五、EventBridge for AI ETL 的最佳實踐&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-f0e26cd6aafdad8a5d04ab44b70d07a64a8.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;EventBridge 通過豐富的應用場景實踐，為不同行業和業務需求提供了完整的解決方案。這些最佳實踐不僅驗證了技術方案的可行性，更為企業在 AI 數據轉型過程中提供了寶貴的經驗參考。&lt;/p&gt; 
&lt;h3&gt;1. 數據預處理（Data Preprocessing）&lt;/h3&gt; 
&lt;p&gt;數據預處理是機器學習和 AI 應用中的關鍵環節，數據質量直接影響模型的訓練效果和推理準確性。EventBridge 在數據預處理方面提供了全面的解決方案，特別是在 SFT（Supervised Fine-Tuning）訓練數據準備方面展現出獨特優勢。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-b83f1fd008d901e4c8b765be1f2c2240d15.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h4&gt;訓練數據準備&lt;/h4&gt; 
&lt;p&gt;監督微調（SFT）是大語言模型訓練中的重要環節，需要高質量的標註數據來指導模型學習特定任務的能力。EventBridge 通過事件驅動的數據處理流程，能夠高效地處理和準備 SFT 訓練所需的數據集。&lt;/p&gt; 
&lt;p&gt;在數據收集階段，系統能夠從多個數據源實時收集原始數據，包括用户對話記錄、文檔庫、知識庫、API 響應等。通過事件驅動的方式，當新的數據產生時，系統能夠立即觸發數據處理流程，確保訓練數據的時效性。例如，當客服系統產生新的對話記錄時，系統會自動提取對話內容，進行格式標準化，並添加到訓練數據集中。&lt;/p&gt; 
&lt;p&gt;在數據標註方面，EventBridge 集成了大語言模型的能力，能夠實現半自動化的數據標註。系統可以使用預訓練的模型對原始數據進行初步標註，然後通過人工審核和修正，形成高質量的訓練樣本。這種人機結合的標註方式大大提高了數據標註的效率和質量。&lt;/p&gt; 
&lt;p&gt;在數據格式轉換方面，不同的模型訓練框架往往需要特定的數據格式。EventBridge 能夠藉助中間函數計算節點，根據目標模型的要求，自動將數據轉換為相應的格式。例如，將對話數據轉換為 ChatML 格式，將問答數據轉換為 Alpaca 格式等。這種自動化的格式轉換能力大大簡化了數據準備的工作量。&lt;/p&gt; 
&lt;h4&gt;數據錯誤處理&lt;/h4&gt; 
&lt;p&gt;數據錯誤是影響 AI 模型性能的重要因素，包括數據缺失、格式錯誤、邏輯錯誤等多種類型。EventBridge 通過 LLM 節點和函數節點，能夠有效提高數據質量。&lt;/p&gt; 
&lt;p&gt;在數據缺失處理方面，系統採用了多種策略。對於數值型數據，可以使用均值、中位數、眾數等統計方法進行填充；對於分類型數據，可以使用最頻繁的類別進行填充；對於文本數據，可以使用語言模型生成合理的填充內容。系統會根據數據的特徵和業務需求自動選擇最合適的填充策略。&lt;/p&gt; 
&lt;p&gt;在格式錯誤處理方面，系統能夠智能識別和修復各種格式問題。例如，對於日期時間數據，系統能夠識別多種日期格式並統一轉換為標準格式；對於數值數據，系統能夠處理千分位分隔符、貨幣符號等格式問題；對於文本數據，系統能夠處理編碼問題、特殊字符等。&lt;/p&gt; 
&lt;p&gt;在邏輯錯誤處理方面，系統通過規則引擎和機器學習模型相結合的方式進行檢測和修復。例如，檢測年齡數據是否在合理範圍內，檢測地址信息是否符合地理邏輯，檢測業務數據是否符合業務規則等。當發現邏輯錯誤時，系統會根據預定義的修復策略進行自動修復或標記為需要人工處理。&lt;/p&gt; 
&lt;h4&gt;數據重複去除&lt;/h4&gt; 
&lt;p&gt;數據重複是大規模數據處理中的常見問題，特別是在多源數據集成的場景中。EventBridge 提供了多過濾和中間過程轉換，確保數據的唯一性和一致性。&lt;/p&gt; 
&lt;p&gt;在精確重複檢測方面，系統通過哈希算法快速識別完全相同的記錄。對於大規模數據集，系統採用了分佈式哈希計算，能夠在保證準確性的同時提高處理效率。&lt;/p&gt; 
&lt;p&gt;在近似重複檢測方面，系統使用了多種相似度計算方法。對於文本數據，採用編輯距離、餘弦相似度、Jaccard 相似度等方法；對於數值數據，採用歐氏距離、曼哈頓距離等方法；對於結構化數據，採用字段級別的相似度計算。系統會根據數據類型和業務需求自動選擇最合適的相似度計算方法。&lt;/p&gt; 
&lt;p&gt;在重複處理策略方面，系統提供了多種選擇。可以保留最新的記錄，保留質量最高的記錄，或者將重複記錄合併為一條記錄。系統還支持自定義的重複處理邏輯，用户可以根據具體的業務需求定義重複處理規則。&lt;/p&gt; 
&lt;h4&gt;數據缺失補全&lt;/h4&gt; 
&lt;p&gt;數據缺失是實際數據中的普遍現象，如何合理地處理缺失數據對模型性能有重要影響。EventBridge 可通過中間函數計算節點對數據進行處理和補全，提高數據的完整性和可用性。&lt;/p&gt; 
&lt;p&gt;在統計方法補全方面，系統支持多種經典的統計填充方法。對於數值型數據，可以使用均值、中位數、眾數、線性插值、多項式插值等方法；對於分類型數據，可以使用眾數、隨機填充、基於分佈的填充等方法。系統會根據數據的分佈特徵自動選擇最合適的填充方法。&lt;/p&gt; 
&lt;p&gt;在機器學習方法補全方面，系統使用訓練好的模型來預測缺失值。例如，使用迴歸模型預測數值型缺失值，使用分類模型預測分類型缺失值。這種方法能夠考慮數據之間的複雜關係，通常能夠獲得更好的填充效果。&lt;/p&gt; 
&lt;p&gt;在深度學習方法補全方面，系統採用了自編碼器、生成對抗網絡等深度學習技術。這些方法能夠學習數據的深層特徵和複雜模式，對於高維數據和複雜缺失模式具有更好的處理效果。&lt;/p&gt; 
&lt;h3&gt;2. RAG 檢索增強生成（Retrieval-augmented Generation）數據入庫&lt;/h3&gt; 
&lt;p&gt;RAG 技術作為當前 AI 應用的重要範式，其數據入庫過程的質量直接影響檢索和生成的效果。如上文介紹 EventBridge 在 RAG 數據入庫方面提供了從簡單到複雜的完整解決方案。&lt;/p&gt; 
&lt;h4&gt;簡易數據入庫流程&lt;/h4&gt; 
&lt;p&gt;對於單一數據源的 RAG 應用場景，EventBridge 提供了簡化的數據入庫流程。這種流程特別適合快速原型開發和小規模應用部署。&lt;/p&gt; 
&lt;p&gt;在數據源配置方面，用户只需要指定數據源的類型和連接信息，系統會自動處理數據的讀取和解析。支持的數據源包括對象存儲（OSS）中的文檔文件、數據庫中的文本字段、API 接口返回的文本數據等。&lt;/p&gt; 
&lt;p&gt;在文檔處理方面，系統提供了自動化的文檔解析和分塊處理。對於 PDF、Word、TXT 等常見文檔格式，系統能夠自動提取文本內容，並根據文檔結構進行智能分塊。分塊策略可以基於段落、章節、固定長度等多種方式，用户可以根據具體需求進行配置。&lt;/p&gt; 
&lt;p&gt;在數據入庫方面，系統支持多種向量數據庫，用户可以選擇最適合的存儲方案。系統會自動處理向量數據的索引構建和存儲優化，確保檢索性能和存儲效率。&lt;/p&gt; 
&lt;h4&gt;增強多源數據入庫&lt;/h4&gt; 
&lt;p&gt;對於複雜的企業級 RAG 應用，往往需要整合來自多個數據源的信息。EventBridge 的增強多源數據入庫能力能夠處理這種複雜場景的需求。&lt;/p&gt; 
&lt;p&gt;在多源數據協調方面，系統提供了統一的數據處理框架。不同數據源的數據會被轉換為統一的內部格式，然後進行統一的處理和存儲。這種設計使得系統能夠無縫地處理來自不同源的異構數據。&lt;/p&gt; 
&lt;p&gt;在數據融合方面，系統能夠智能地合併來自不同源的相關信息。例如，將產品數據庫中的產品信息與用户評論系統中的評論信息進行關聯，形成更加完整的產品知識。系統使用實體識別和關係抽取技術來發現數據之間的關聯關係。&lt;/p&gt; 
&lt;p&gt;在數據一致性方面，系統提供了多種一致性保證機制。包括數據版本管理、衝突檢測和解決、數據同步等。當多個數據源包含相同實體的不同信息時，系統能夠智能地進行信息合併和衝突解決。&lt;/p&gt; 
&lt;p&gt;在增量更新方面，系統支持實時的數據更新和同步。當源數據發生變化時，系統能夠自動檢測變化並更新相應的向量表示。這種增量更新能力確保了 RAG 系統能夠獲取最新的信息。&lt;/p&gt; 
&lt;h3&gt;3. 數據清洗與標準化 (Data Cleansing &amp;amp; Standardization)&lt;/h3&gt; 
&lt;p&gt;數據清洗與標準化是數據處理中的基礎環節，EventBridge 通過集成大語言模型的能力，實現了智能化的數據清洗和標準化處理。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-3df87a70b68bd54dc14cdef67a33e9f367b.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;地址信息的標準化是一個典型的數據清洗場景。在實際應用中，來自不同渠道的地址信息往往格式不一、存在錯別字、缺少關鍵信息等問題。EventBridge 通過 LLM 驅動的地址標準化能力，能夠將各種格式的地址信息轉換為統一的標準格式。&lt;/p&gt; 
&lt;p&gt;在地址解析方面，系統使用大語言模型來理解地址的語義結構。即使地址信息存在格式不規範、字段順序混亂等問題，模型也能夠準確識別出省、市、區、街道等各個組成部分。例如，對於"北京市海淀區中關村大街 1 號"這樣的地址，系統能夠準確解析出省份為"北京"，城市為"北京"，區縣為"海淀區"，街道為"中關村大街 1 號"。&lt;/p&gt; 
&lt;p&gt;在錯誤糾正方面，系統能夠自動識別和糾正地址中的錯別字和格式錯誤。例如，將"北京市海定區"糾正為"北京市海淀區"，將"中關村大街一號"標準化為"中關村大街 1 號"。系統使用了地理知識庫和語言模型相結合的方法，確保糾正的準確性。&lt;/p&gt; 
&lt;p&gt;在信息補全方面，系統能夠根據已有的地址信息補全缺失的部分。例如，根據詳細地址自動推斷郵政編碼，根據區縣信息補全城市和省份信息。系統集成了完整的地理信息數據庫，能夠提供準確的地理信息補全。&lt;/p&gt; 
&lt;p&gt;在格式標準化方面，系統將所有地址信息轉換為統一的標準格式。輸出格式包括結構化的字段信息（省、市、區、街道、郵政編碼等）和標準化的地址字符串。這種標準化的輸出格式便於後續的數據處理和分析。&lt;/p&gt; 
&lt;h3&gt;4. 合規與隱私保護 (Compliance &amp;amp; Privacy Protection)&lt;/h3&gt; 
&lt;p&gt;在數據處理過程中，合規與隱私保護是不可忽視的重要方面。EventBridge 提供了全面的合規和隱私保護能力，確保數據處理符合相關法規要求。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-f4754e678d447efd2520ac1f756e6a15001.png" alt="" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;數據脱敏是保護隱私的重要技術手段，EventBridge 可藉助大模型，實現隱私信息識別，隱私信息處理等多種數據脱敏處理場景。為用户提供端到端的數據處理能力。&lt;/p&gt; 
&lt;p&gt;通過這些全面的合規和隱私保護措施，EventBridge 可確保了企業應用中的數據處理過程的合法性和安全性，為企業數據提供可靠的合規安全保證。&lt;/p&gt; 
&lt;h2&gt;六、未來展望與發展路徑&lt;/h2&gt; 
&lt;p&gt;AI 數據處理領域技術正處於快速發展的階段，未來幾年將會出現更多的技術創新和應用突破。EventBridge 作為這一領域的重要參與者，期待與更多開發者共同推動 AI 數據處理技術的發展和應用。&lt;/p&gt; 
&lt;h3&gt;AI 數據處理技術的發展方向&lt;/h3&gt; 
&lt;p&gt;在技術發展方向上，AI 數據處理將朝着更加智能化、自動化、實時化的方向發展。&lt;/p&gt; 
&lt;p&gt;智能化方面，未來的數據處理系統將更加依賴 AI 技術來實現自動化的數據理解、清洗、轉換和增強。大語言模型的能力將進一步提升，能夠處理更加複雜的數據處理任務。同時，多模態 AI 技術的發展將使得系統能夠統一處理文本、圖像、音頻、視頻等多種類型的數據。&lt;/p&gt; 
&lt;p&gt;自動化方面，數據處理流程將更加自動化，減少人工幹預的需求。自動化的數據發現、數據治理、數據安全等功能將成為標準配置。機器學習技術將被廣泛應用於數據處理流程的優化，系統能夠自動學習和改進處理策略。&lt;/p&gt; 
&lt;p&gt;實時化方面，實時數據處理將成為主流需求。邊緣計算技術的發展將使得數據處理能夠在更接近數據源的地方進行，減少數據傳輸的延遲。流式處理技術將進一步成熟，能夠支持更加複雜的實時數據處理場景。&lt;/p&gt; 
&lt;h3&gt;行業標準化趨勢&lt;/h3&gt; 
&lt;p&gt;隨着 AI 數據處理技術的成熟，行業標準化將成為重要趨勢。標準化有助於降低技術門檻、促進技術交流、推動產業發展。在數據格式標準化方面，將出現更多的行業標準來規範數據的格式和結構，例如 CloudEvents 等。這些標準將有助於不同系統之間的數據交換和集成。&lt;/p&gt; 
&lt;p&gt;在 API 接口標準化方面，將出現統一的 API 規範來規範數據處理服務的接口。這些規範將有助於提高系統的互操作性和可移植性。&lt;/p&gt; 
&lt;h3&gt;技術挑戰與解決方案&lt;/h3&gt; 
&lt;p&gt;未來的發展過程中，AI 數據處理技術仍將面臨一些挑戰，需要持續的技術創新來解決。&lt;/p&gt; 
&lt;p&gt;在數據質量挑戰方面，隨着數據源的增加和數據量的增長，數據質量問題將更加突出。需要開發更加智能的數據質量檢測和修復技術，利用 AI 技術來自動識別和處理數據質量問題。&lt;/p&gt; 
&lt;p&gt;在性能挑戰方面，隨着數據處理需求的增長，系統的性能要求將更加嚴格。需要在算法優化、架構設計、硬件加速等方面持續創新，提升系統的處理能力。&lt;/p&gt; 
&lt;p&gt;在成本挑戰方面，AI 數據處理的成本仍然較高，特別是大語言模型的調用成本。需要通過技術優化、資源調度、成本控制等手段來降低使用成本。&lt;/p&gt; 
&lt;p&gt;在安全挑戰方面，數據安全和隱私保護的要求將更加嚴格。需要在數據加密、訪問控制、隱私計算等方面持續投入，確保數據的安全性。&lt;/p&gt; 
&lt;h2&gt;結語：構築 AI 時代的數據傳輸基礎設施&lt;/h2&gt; 
&lt;p&gt;通過將事件驅動架構的技術優勢與 AI 時代的數據處理需求深度融合，EventBridge 為企業構建智能化數據管道提供了全新的技術範式。&lt;/p&gt; 
&lt;p&gt;歡迎更多的數據側夥伴加入 EventBridge 的生態體系，共同構建更多的數據源連接器、處理算法、應用模板等。通過開放的技術合作，更好地滿足用户的多樣化需求。AI 時代的數據基礎設施建設是一個長期的過程，需要持續的技術創新和生態建設。我們相信，通過持續的努力和合作，我們能夠構建更加智能、高效、可靠的 AI 數據集成基礎設施，為人工智能技術的發展和應用提供強有力的支撐。&lt;/p&gt; 
&lt;p&gt;歡迎加入 EventBridge 用户交流羣（釘釘羣號：31481771）進行交流～&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/3874284/blog/18688934</link>
      <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/18688934</guid>
      <pubDate>Mon, 25 Aug 2025 06:52:23 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>Arch Linux 遭遇長達兩週 DDoS 攻擊，官網、論壇全波及</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Arch Linux 維護者 Cristian Heusel 在最近的一次更新中&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farchlinux.org%2Fnews%2Frecent-services-outages%2F" target="_blank"&gt;透露&lt;/a&gt;，過去兩週 Arch Linux 項目遭受了 DDoS 攻擊，導致這個流行的 Linux 發行版的服務多次中斷。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-e8756c080b8daa1fc05190f53f70579f8e8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Heusel 在帖子中表示：「Arch Linux 項目目前正在經歷一場持續的 DDoS 攻擊，這主要影響我們的主網頁、Arch 用户倉庫（AUR）和論壇。」&lt;/p&gt; 
&lt;p&gt;這場 DDoS 攻擊不僅影響了 Arch Linux 的主網站，還波及了 AUR，這是一個收集用户提交的軟件包描述文件的倉庫。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0825/143023_lRTg_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Arch Linux 團隊已經意識到這一問題，並正在與託管提供商合作，以減輕攻擊的影響，同時也在調查 DDoS 防護措施。攻擊的起源和動機的細節在調查繼續進行期間被保密，與此同時 Arch 團隊將通過服務狀態頁面提供定期更新。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368316</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368316</guid>
      <pubDate>Tue, 19 Aug 2025 06:30:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>醒醒吧，不要再做自嗨式開源了！</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;最近某上市公司旗下的 KubeSphere 項目宣佈停止對開源版本的支持，瞬間在開源社區裏引起了強烈反響。從項目的流行度角度來講，該項目是很成功的，在 Github 上有 1.6 萬的 Star。這次調整毫無徵兆且生硬粗魯，讓社區的用户憤慨不止，紛紛到 Github 上吐槽抱怨。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span&gt;過了幾天，官方在他們的產品官網出了一個公告，但還是堅持這次的調整。&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.kubesphere.com.cn%2Fforum%2Fd%2F24963-guan-yu-kubespherekai-yuan-xiang-mu-diao-zheng-de-gong-gao" target="_blank" rel="nofollow"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/a&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fask.kubesphere.com.cn%2Fforum%2Fd%2F24963-guan-yu-kubespherekai-yuan-xiang-mu-diao-zheng-de-gong-gao" rel="nofollow" target="_blank"&gt;&lt;u&gt;官方的聲明&lt;/u&gt;&lt;/a&gt;如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img height="710" src="https://oscimg.oschina.net/oscnet/up-159a3473634e8adf84c285470ab6a85768f.png" width="776" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#39485d"&gt;對官方做出的這種調整，我表示理解，畢竟企業做商業化策略調整，無可厚非。但行事上欠考慮，過於生硬，完全可以採取更温和的措施，幫助眾多用户完成過渡，尋求商業化策略調整和社區穩定的平衡點。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;今天我不是來批評 KubeSphere 團隊的，更想借這個事件，跟做開源的兄弟姐妹們説句掏心窩子的話：&lt;strong&gt;&lt;span style="color:#337fe5"&gt;醒醒吧，不要再做自嗨式的開源了&lt;/span&gt;&lt;/strong&gt;。KubeSphere 背後是一家上市公司在維護，都會遇到各種挑戰，更何況我們這些小團隊維護的開源項目呢？&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;自嗨式開源這個説法會比較直接，可能會讓有些朋友覺得不舒服。但確實是我的心裏話，希望能夠給到做開源的朋友們一些參考建議。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;&lt;strong&gt;&lt;span style="color:#337fe5"&gt;什麼是自嗨式開源呢？&lt;/span&gt;&lt;/strong&gt;主要是憑興趣做一個開源項目，選擇最寬鬆的授權協議，一個 star 就會讓自己高興半天，一次幾塊錢的打賞捐助就能讓自己滿血復活。這樣狀態的開源，就是自嗨式開源。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;興趣重要嗎？重要，但興趣是否等同於真實的用户場景呢？不一定。但我觀察到還是有大量的開源軟件作者憑興趣出發，做了一個開源項目後，堅信一定會有人使用，並堅持不懈地完善軟件。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span&gt;我曾經批評過一位朋友，他要做一個數據庫的管理軟件。我説數據庫管理軟件已經有很多開源的項目了，為啥要重新做一個呢？後來就沒有再聊過天。看開源軟件羣裏面，他現在不做數據庫管理軟件了，改做 UI 框架了。是因為在做數據庫管理軟件時，他把技術棧從原來的 C++換成了 C＃，但在用 C＃過程中發現沒有好用的跨平台的 UI，然後又開始做 UI 框架了。對這位朋友的技術和熱情我是非常欽佩的，但做開源項目也不能這樣豪橫任性吧。：）&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#39485d"&gt;所以做開源，&lt;strong&gt;&lt;span style="color:#337fe5"&gt;興趣不等同於真實場景，方向的選擇上還是要慎重&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;再來説協議。很多開源軟件的作者認為開源項目一定要用最寬鬆的協議，這樣軟件的開放性才是最純粹的。我猜很多開源軟件作者會把採用嚴格模式的協議當成一件羞恥的事情。做開源，怎麼可以用 GPL 這類的協議呢？但大家看賺錢的開源項目，都是採用嚴格模式的協議，或者在寬鬆協議基礎上加了很多的附加條件。比如最近比較火的智能體相關的項目，Dify、n8n 都是如此。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;所以做開源，一定要慎重選擇協議。KuberSphere 團隊之所以停止對開源軟件的支持，還不是因為有很多第三方的廠商拿着它去做項目嘛，從授權協議上來講，你又禁止不了這種行為，這就尷尬了。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;再來説説 Star。很多開源軟件的作者一直盯着 Star，覺得這是一個證明自己項目成功的關鍵標誌。Star 是説明你的用户比較多，但用户多不一定會帶來收益，帶來的可能是更多的 Issue、Feature，以及更多的要求和支持的需求。這個世界上不缺高 Star 的開源項目，有很多的高 Star 的開源項目最後不了了之，創始人甚至因為維護開源項目導致自己窮困潦倒。更有甚者，有的作者會採取一些手段來提高自己的 Star，這不過是掩耳盜鈴，自欺欺人而已。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;所以做開源，&lt;strong&gt;&lt;span style="color:#337fe5"&gt;Star 數量不重要，重要的是有商業訴求的真實用户&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;最後來説説捐助？很多開源軟件作者開通了打賞通道，還會在項目的顯著位置感謝這些打賞者。很多開源軟件作者看到有人捐助，就開心鼓舞，又動力滿滿了。有人打賞是好事情，我們也需要為這些打賞的網友們點個贊。但話説回來，做開源不可能只指望這些打賞啊，還是要靠能跑通的商業模式。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;所以做開源，&lt;strong&gt;&lt;span style="color:#337fe5"&gt;不能靠捐助，一定要跑通商業化這條路&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;這就是我想就 KuberSphere 這件事情跟做開源的兄弟姐們説的話，不要再苦哈哈地做自嗨式創業了。要認真思考自己的產品的方向，圍繞用户的真實場景設計自己的商業模式，跑通開源商業化之路，這樣才能夠更好地支持社區的用户，形成一個正向的循環。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;我之前有整理過系列的關於開源商業化的文章，大家可以參考：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fredirect-index-34578.html" rel="nofollow" target="_blank"&gt;&lt;span&gt;&lt;u&gt;關於開源軟件的七大錯誤認知（上）&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fredirect-index-34579.html" target="_blank" rel="nofollow"&gt;&lt;u&gt;關於開源軟件的七大錯誤認知（中）&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fredirect-index-34580.html" target="_blank" rel="nofollow"&gt;&lt;u&gt;關於開源軟件的七大錯誤認知（下）&lt;/u&gt;&lt;/a&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fredirect-index-34581.html" rel="nofollow" target="_blank"&gt;&lt;span&gt;&lt;u&gt;人間清醒，開源一定要做商業化&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zentao.net%2Fredirect-index-34582.html" rel="nofollow" target="_blank"&gt;&lt;span&gt;&lt;u&gt;開源軟件商業模式分析&lt;/u&gt;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/easysoft/blog/18689380</link>
      <guid isPermaLink="false">https://my.oschina.net/easysoft/blog/18689380</guid>
      <pubDate>Tue, 19 Aug 2025 06:07:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>ICEPOS 開源收銀系統新增語音播報助手</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;ICEPOS 開源收銀系統新增語音播報助手，有需要提升系統結算後語音提示的小夥伴可到 Gitee 下載開源的代碼&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitee.com/xmosnewone/voicehelper"&gt;https://gitee.com/xmosnewone/voicehelper&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="846" src="https://oscimg.oschina.net/oscnet/up-497aa3900ea9a22ecfabfbc405032df8220.png" width="1756" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;如上圖，請將助手文件放在 ICE.POS 下的 Common 文件夾內，可直接調用&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;如播報，某支付方式 "paytype" （支付方式名稱中文）， "totalAmount" 支付金額，可使用以下代碼 VoiceNotificationHelper.Instance.PlayPaymentSuccess(payType, totalAmount);&lt;/p&gt; 
&lt;p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"&gt;更多使用方法，可閲讀 VoiceNotificationHelper 助手代碼&lt;/p&gt; 
&lt;p&gt;非常感謝&amp;nbsp;&amp;nbsp;&lt;span style="color:#d35400"&gt; "極速蝸牛"&lt;/span&gt; 的無私貢獻！&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368306</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368306</guid>
      <pubDate>Tue, 19 Aug 2025 06:02:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>阿里開源 Mobile-Agent 3：強大的 GUI 代理家族</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;X-PLUG 團隊正式開源發佈了其&lt;span&gt;最新&lt;/span&gt;項目 Mobile-Agent-v3，這是一款基於 GUI-Owl 的跨平台多代理框架。Mobile-Agent-v3 具備強大的規劃、進度管理、反思和記憶能力，旨在提升用户的 GUI 自動化體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;GUI-Owl 作為 Mobile-Agent-v3 的基礎模型，融合了感知、基礎、推理、規劃和執行等多項功能，是一款原生的端到端多模態代理。它的設計使得跨平台交互和多回合決策變得更加流暢，具有明確的中間推理能力。這意味着用户在進行多任務操作時，可以獲得更為穩定的性能表現。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="293" src="https://oscimg.oschina.net/oscnet/up-83d380e25ecc335b28118c2c52837a64d6e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;X-PLUG 團隊特別提到，Mobile-Agent-v3 不僅在功能上進行了優化，同時還加強了異常處理和反思能力，確保在面對彈窗和廣告等幹擾時依然能夠保持高效的操作。此外，Mobile-Agent-v3 的關鍵信息記錄功能，使得跨應用任務的執行變得更加便捷，極大地方便了用户的日常操作。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;同時，Mobile-Agent 的多個前身版本，如 Mobile-Agent-v2 和 PC-Agent，分別在 NeurIPS2024 和 ICLR2025 的會議上獲得接受，顯示出該項目在學術研究領域的廣泛影響力。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;值得一提的是，X-PLUG 團隊還提供了豐富的資源支持，包括技術報告、演示視頻和代碼庫，使得開發者和研究人員能夠更深入地探索 Mobile-Agent 的潛力。通過這些資源，用户不僅可以體驗到 Mobile-Agent 的強大功能，還能夠參與到其後續的開發和優化中。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368304</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368304</guid>
      <pubDate>Tue, 19 Aug 2025 05:56:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>維基百科編輯總結識別 AI 寫作的關鍵特徵</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;近年來，人工智能技術的發展為我們帶來了許多便利，但同時也引發了關於其生成文本的準確性和可信度的討論。特別是在學術界，AI 生成的文字常常被視為一種捷徑，但這種捷徑的潛在問題不容忽視。維基百科作為一個以信任和人類可靠性為基礎的平台，明確禁止 AI 撰寫的文章，並在編輯之間整理出了一份清單，列出了能夠揭示 AI 寫作特徵的語言 「跡象」。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="328" src="https://oscimg.oschina.net/oscnet/up-39fa487950b41bb85349d0aec9efad5b09e.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;AI 生成的文本在語氣上往往顯得誇張，常常通過重複的措辭來強調某一內容的重要性。例如，AI 可能使用 「重要」 或 「具有歷史意義」 等詞彙，這種表達方式通常較為生硬。此外，AI 生成的段落常以簡潔的結論或觀點結束，給人一種像高中作文的感覺，而非專業百科全書的寫作風格。許多常見的連接詞如 「此外」、「還有」 等，使得文本顯得更正式，甚至有些僵硬，而人類編輯的文本通常會使用更自然的表達。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;格式也是識別 AI 文本的重要線索。AI 生成的文章常常會出現過多的列表，有時還伴隨不尋常的項目符號或編號方式。章節標題的書寫也常採用標題大小寫（每個主要單詞都大寫），而人類則更傾向於使用簡單的樣式。此外，AI 寫作中粗體文本的過度使用來強調某些短語，也是人類編輯較少採用的方式。更有趣的是，AI 文本中常常出現一些如過度使用破折號、錯誤位置的引號，甚至標題中夾雜的表情符號。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;引用部分常常是 AI 文本的致命弱點。AI 可能會編造一些不真實的鏈接，生成不存在的 ISBN 或 DOI，甚至引用一些並未在文中出現的 「專家」。有時，雖然文本中提到了一些參考文獻，但它們實際上並未在文章中列出。同時，維基百科特定標記中的錯誤，例如模板或類別使用不當，也能夠暴露 AI 寫作的痕跡。總的來説，AI 生成的文本通常比人類創作的內容更具可預測性，缺乏個性化的表達。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;儘管這些信號本身並不是確鑿的證據，但如果在文本中發現了多個類似的特徵，通常就值得引起關注。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368298</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368298</guid>
      <pubDate>Tue, 19 Aug 2025 05:47:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>為何精神控制類 Prompt 遠勝普通事務性 Prompt？</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;研究人員發起了主題"&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjieyibu.net%2Fa%2F87962" target="_blank"&gt;為何精神控制類 Prompt 遠勝普通事務性 Prompt&lt;/a&gt;"的研究，他們通過大量實驗數據直觀展示兩類 Prompt 在關鍵指標上的顯著差異。&lt;/p&gt; 
&lt;p&gt;以下數據基於最新公開文獻（IJCAI-2024、ACL-2025、arXIV-2024 等）與作者實測，覆蓋多個維度評估。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0825/120058_vuSy_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1110" src="https://static.oschina.net/uploads/space/2025/0825/115927_eS4R_2720166.png" width="1300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0825/120358_1Do5_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0825/120420_7B2F_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;最終得出如下結論：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;精神控制類 Prompt ≈ 把 RLHF 階段學到的"人類情緒映射"重新激活，併疊加稀缺、競爭、權威三重槓桿，從而把 LLM 的生成分佈強行壓到高 reward 區域——這就是它碾壓普通事務性 Prompt 的全部秘密。&lt;/strong&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368281</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368281</guid>
      <pubDate>Tue, 19 Aug 2025 04:04:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>FFmpeg 8.0</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fffmpeg.org%2F%2Fdownload.html%23release_8.0" target="_blank"&gt;&lt;span style="color:#000000"&gt;FFmpeg 8.0&amp;nbsp;「Huffman」&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt;現已&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fffmpeg.org%2F%2Findex.html%23pr8.0" target="_blank"&gt;正式&lt;/a&gt;。由於多次延期以及項目整個基礎架構的現代化升級，此版本是迄今為止規模最大的版本之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;新功能包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Native decoders：APV、ProRes RAW、RealVideo 6.0、Sanyo LD-ADPCM、G.728&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;VVC 解碼器改進：IBC、&amp;nbsp;ACT、調色板模式&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Vulkan compute-based codecs：FFv1（編碼和解碼）、ProRes RAW（僅解碼）&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;硬件加速解碼：Vulkan VP9、VAAPI VVC、OpenHarmony H264/5&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;硬件加速編碼：Vulkan AV1、OpenHarmony H264/5&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Formats：MCC、G.728、Whip、APV&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style="color:#000000"&gt;Filters：colordetect、pad_cuda、scale_d3d11、Whisper 等&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;新增了一類基於純 Vulkan 計算實現的解碼器和編碼器。Vulkan 是一套跨平台的開放標準 API，允許程序以各種方式使用 GPU 硬件，從屏幕繪圖到計算，再到通過自定義硬件加速器解碼視頻。這些編解碼器並非使用現有的自定義硬件加速器，而是基於計算着色器，並且適用於任何 Vulkan 1.3 實現。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;解碼器使用相同的 hwaccel API 和命令，因此用户無需執行任何特殊操作即可啓用它們，只需啓用&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrac.ffmpeg.org%2Fwiki%2FHWAccelIntro%23Vulkan" target="_blank"&gt;&lt;span style="color:#000000"&gt;Vulkan 解碼&lt;/span&gt;&lt;/a&gt;&lt;span style="color:#000000"&gt;即可使用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;編碼器（例如硬件加速編碼器）需要指定新的編碼器 (ffv1_vulkan)。目前，僅支持以下編解碼器：FFv1（編碼和解碼）和 ProRes RAW（僅解碼）。ProRes（編碼+解碼）和 VC-2（編碼+解碼）的實現已完成，目前正在審核中，將很快合併並在下一個次要版本中提供。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;只有專為並行解碼設計的編解碼器才能以這種方式實現，其他主流編解碼器目前尚未計劃支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;根據硬件的不同，這些新的編解碼器可以帶來非常顯著的性能提升，併為非線性視頻編輯器和無損屏幕錄製/直播等場景提供了新的可能性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;該項目最近已開始對其基礎架構進行現代化升級。郵件列表服務器已全面升級，並且最近開始通過&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.ffmpeg.org%2F" target="_blank"&gt;code.ffmpeg.org&lt;/a&gt;&amp;nbsp;&lt;span style="color:#000000"&gt;上的一個新 Forge 接受貢獻&lt;/span&gt;&lt;span style="color:#000000"&gt;，該平台運行於 Forgejo 實例。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;與往常一樣，官方建議用户、分銷商和系統集成商進行升級，除非他們使用當前的 git master。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368277/ffmpeg-8-0-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368277/ffmpeg-8-0-released</guid>
      <pubDate>Tue, 19 Aug 2025 03:50:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>蘋果開源長視頻多模態大語言模型 SlowFast-LLaVA-1.5</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;蘋果研究團隊開源了適配版 SlowFast-LLaVA 模型，在長視頻分析理解任務上表現超越更大規模模型。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;該模型通過雙流架構優化視頻處理效率，慢流以低幀率捕捉場景細節，快流以高幀率追蹤動作變化，解決了傳統模型逐幀分析導致的信息冗餘與上下文窗口溢出問題。其 10 億、30 億和 70 億參數版本在 LongVideoBench 等長視頻基準測試中均創佳績，10 億參數模型在 General VideoQA 任務中達 56.6 分，70 億參數模型在 Long-Form Video Understanding 任務中獲 71.5 分，且在圖像理解任務如知識推理、OCR 等方面表現出色。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-08322866780d415ba4fea5af0db98695175.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;目前模型輸入幀長限制為 128 幀，存在可能遺漏關鍵幀等侷限。團隊表示將探索內存優化技術提升性能。該模型基於公開數據集訓練並開源，為長視頻理解提供了新的高效解決方案。&lt;/p&gt; 
&lt;p&gt;https://github.com/apple/ml-slowfast-llava&lt;br&gt; https://huggingface.co/papers/2503.18943&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368273</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368273</guid>
      <pubDate>Tue, 19 Aug 2025 03:41:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>​OpenAI 提議為全體英國人免費提供 ChatGPT Plus，潛在成本高達 20 億英鎊</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;英國《衞報》近日報道了一項引人注目的提議：OpenAI 首席執行官薩姆・奧爾特曼與英國科技大臣彼得・凱爾討論，希望為英國民眾免費提供 ChatGPT Plus 訂閲服務。這項提議的潛在成本高達 20 億英鎊（約合 193.22 億元人民幣），但最終未能實現。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0px; margin-right:0px"&gt;&lt;img height="301" src="https://oscimg.oschina.net/oscnet/up-a763f4398950d8f390fa8ac7293c95916d7.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;根據知情人士的透露，這一構想是在舊金山的一次會議上提出的，旨在尋求 OpenAI 與英國之間更廣泛的合作機會。彼得・凱爾曾在今年 3 月和 4 月與奧爾特曼共進晚餐，並在 7 月簽署了一份諒解備忘錄，探索在英國公共服務中使用人工智能的可能性。該諒解備忘錄並非法律約束，可能使 OpenAI 能夠接觸到部分政府數據，並將其軟件應用於教育、國防、安全和司法等領域。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;彼得・凱爾在政府內一直積極推動人工智能的應用。今年 3 月，他曾直接向 ChatGPT 諮詢關於政府工作的問題，包括為何英國企業對人工智能的採納速度緩慢，以及他應該參加哪些播客節目。OpenAI 發言人表示，已有數百萬英國用户在每日免費使用 ChatGPT，並強調他們與英國政府的合作旨在推動人工智能的普及，確保更多人能夠從中受益。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;除了與英國的合作，OpenAI 近期還與多個國家的政府進行了接觸。值得注意的是，OpenAI 與阿聯酋達成協議，將在全國範圍內啓用 ChatGPT，並推動該技術在交通、醫療和教育等公共領域的應用。然而，生成式人工智能的發展也引發了一些爭議，尤其是關於版權問題。一些藝術家對政府修訂版權法的計劃提出了批評，認為允許 AI 企業在未經授權的情況下使用受版權保護的作品將損害創作者權益。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;對此，英國人工智能行業協會表示，政府在政策制定上過於偏向大型科技公司，忽視了中小企業的利益。對此，英國政府發言人回應稱，他們正在與 OpenAI 及其他領先的人工智能公司合作，探索在英國的投資機會，並在新技術公開之前嚴格測試其安全性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368271</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368271</guid>
      <pubDate>Tue, 19 Aug 2025 03:35:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Qwen Code v0.0.8 發佈，深度集成 VS Code</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Qwen Code&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FAlibaba_Qwen%2Fstatus%2F1959170659583476026" target="_blank"&gt;發佈了&lt;/a&gt;v0.0.8 版本，帶來深度 VS Code 集成、增強的 MCP 支持、優化的終端體驗以及多項新增可配置選項。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0825/111044_rH7z_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;更新説明&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;深度 VS Code 集成：直接在編輯器中獲取上下文感知建議和內聯差異！使用 /ide 初始化，即可增強您的工作流程。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;增強的 MCP 支持：通過 CLI 添加、刪除、列出 MCP 服務器（qwen mcp add|remove|list），以及對 MCP 根和多模式工具輸出（圖像、音頻等）的支持。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;響應式終端 UI：現在可以優雅地適應窄終端。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;反向搜索：在 shell 模式下按 Ctrl+R 可立即搜索命令歷史記錄。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;可定製的上下文壓縮：在 settings.json 中設置閾值。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;多目錄支持：啓動時自動加載多個目錄。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;隱藏行號：設置「showLineNumbers」：false 以實現更乾淨的複製粘貼。&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;附加功能：使用「disableUpdateNag」禁用更新提示：true&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情查看&amp;nbsp;&lt;em&gt;https://github.com/QwenLM/qwen-code/releases/tag/v0.0.8&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368266</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368266</guid>
      <pubDate>Tue, 19 Aug 2025 03:14:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>關於 EMQX 開源版生命週期結束及未來發展的通告</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;EMQX 中文社區&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fa_NHnvvlpfYaWfNk0kROuw" target="_blank"&gt;發佈&lt;/a&gt;了「關於 EMQX 開源版生命週期結束及未來發展的通告」表示，在&lt;span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"&gt;&lt;strong style="color:#343741"&gt;開源版本生命週期結束後，EMQX 開發工作將完成開源版和企業版的徹底融合&lt;/strong&gt;&lt;/span&gt;&lt;strong style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;span&gt;&lt;strong style="color:#343741"&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="315" src="https://oscimg.oschina.net/oscnet/up-d651756a602d70828a50956375ddd5ecf55.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;具體公告內容如下：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;尊敬的 EMQX 用户與社區夥伴，感謝您長期以來對 EMQX 的信任與支持。得益於全球開發者和企業用户的共同努力，始於 2013 年的開源項目 EMQX，現已發展成為全球領先的、專為實時智能設計的 MQTT 與 AI 一體化平台。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;根據 EMQX 長期執行的版本維護政策，每一個主要版本均享有自發布之日起 18 個月的維護期。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;EMQX 5.8 開源版於 2024 年 8 月發佈，將於 2026 年 2 月 28 日正式結束產品生命週期。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;為了提供更穩定、安全、高效的服務，並順應軟件行業的發展趨勢，我們特此發佈產&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;品通告：&lt;/span&gt;&lt;strong style="color:#343741"&gt;開源版本生命週期結束後，EMQX 開發工作將完成開源版和企業版的徹底融合&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;strong style="color:#343741"&gt;，邁向統一產品戰略新階段。&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;在此日期之後，映雲科技將不再為 EMQX 5.8 開源版提供任何形式的維護更新，包括但不限於 bug 修復、安全漏洞補丁和新功能開發。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;如果您使用的是 Apache 2.0 開源版本 EMQX，請務必注意 2026 年 2 月這個版本生命週期終結的時間點。以避免出現老版本 EMQX 軟件漏洞無人修復的風險。&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&lt;span style="color:#343741"&gt;我們建議您在接下來的 6 個月中遷移至功能完備、持續更新的統一版本。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;官方建議用户可選擇升級至 EMQX 企業版或 EMQX Cloud，同時為從開源版遷移至新版本的用户提供「無憂遷移」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368262</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368262</guid>
      <pubDate>Tue, 19 Aug 2025 03:06:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>今年我國智能算力規模增長將超 40%</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;從 2025 中國算力大會上了解到，中國算力平台正加快建設。目前，已有山西、遼寧、上海、江蘇等 10 個省區市的算力分平台正式接入。&lt;/p&gt; 
&lt;p&gt;中國信息通信研究院副院長魏亮表示：目前，中國算力平台實現了 100 多個算力服務商入駐，完成 1000 餘家行業用户註冊，接入主流基礎大模型和垂類模型近百個，為 1000 多個開發者提供多元的在線調用服務。&lt;/p&gt; 
&lt;p&gt;工業和信息化部日前印發的《算力互聯互通行動計劃》提出，到 2026 年，建立完備的算力互聯互通標準、標識和規則體系；到 2028 年，基本實現全國公共算力標準化互聯，形成具備智能感知、實時發現、隨需獲取能力的算力互聯網。&lt;/p&gt; 
&lt;p&gt;數據顯示，近年來，我國算力總規模年增速達到 30% 左右。在人工智能的快速發展帶動下，智能算力需求呈現迅猛增長態勢。&lt;/p&gt; 
&lt;p&gt;中國電信研究院發佈的《智算產業發展研究報告（2025）》顯示，隨着人工智能大模型加速賦能行業應用和智能終端，將進一步助力智能算力產業蓬勃發展。&lt;/p&gt; 
&lt;p&gt;中國電信研究院戰略發展研究所所長饒少陽表示，到 2035 年，人工智能將為我國的 GDP 貢獻超過 11 萬億，大概佔到 GDP 的 4% 到 5%。這個可能帶動算力的需求是十倍，甚至百倍的增長。&lt;/p&gt; 
&lt;p&gt;&lt;img height="255" src="https://oscimg.oschina.net/oscnet/up-464875f00f5deab54a2c320d4cccecb6766.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;工業和信息化部負責人表示，將引導各地合理佈局智能算力設施，逐步提高智能算力供給質量，滿足新興產業和未來產業發展需要。目前，智能算力已經廣泛應用於生成式大模型、自動駕駛、具身智能、智慧城市和工業製造等領域。通過算力應用大賽累計徵集的創新算力項目已經超過 2.3 萬個，在工業、金融、醫療、能源等領域實現了規模化複製推廣。預計 2025 年，我國智能算力規模增長將超過 40%。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368261</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368261</guid>
      <pubDate>Tue, 19 Aug 2025 02:59:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>JakartaOne Livestream 2025</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;JakartaOne Livestream 是 Jakarta EE 工作組面向開發人員及技術負責人的線上會議，主要關注企業級 Java 應用、雲原生技術，探討 Jakarta EE 技術發展現狀及未來趨勢。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;本次會議將帶領我們瞭解 Jakarta EE 規範最新進展，在 Azure 上的 MCP 優化和跟蹤，如何在如何快速從 JavaEE 遷移到 Jakarta EE，Java 怎樣適應雲原生時代敏捷運行需求，IBM Liberty 的新特性，以及 Java 在 AI 時代的最新開發實踐。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;&lt;span&gt;在本次 JakartaOne Livestream 會議上，您將有機會與全球頂級技術專家、開發者共同探討雲原生、AI 時代 Java 的發展趨勢。無論您是 Java 開發老手，還是新興的雲原生、AI 應用開發者，JakartaOne Livestream 都將是您不容錯過的技術盛宴。立即報名，加入我們，共同探索雲原生、AI 時代的無限可能！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;1. MicroProfile Telemetry&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在 Azure 上的應用實踐及基於 MCP 的性能優化&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;利用 Open Liberty MicroProfile Telemetry 2.0 在 Azure 上實現分佈式追蹤、指標收集和日誌聚合。開發 MCP 工具讀取遙測數據，集成到 VS Code GitHub Copilot 中，實現智能代碼性能分析與優化建議，構建從監控到代碼優化的完整閉環。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;2. CRaC &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;技術深度解析：Java 應用極速啓動與性能優化新路徑&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;解析 CRaC 技術如何通過快照與恢復機制，解決 Java 應用冷啓動慢、預熱久的痛點，對比 AOT 與 JIT 差異，解析底層實現與實戰應用，展現其在微服務與 Serverless 場景的價值。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;3. JakartaEE &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;與微服務開發&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;介紹 JakartaEE 11 的新特性，結合微服務開發解析我們日常開發中使用的 JakartaEE 規範，進一步瞭解 JakartaEE 標準規範，學習 JakartaEE 先進設計理念，深入使用 JakartaEE 規範，積極參與 JakartaEE 標準推廣，共促中國社區發展。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. &lt;span&gt;&lt;span&gt;Jakarta EE &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;現狀及未來展望&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;總結 Jakarta EE 11 規範改變，展現 Jakarta EE 12 的規劃。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5.&amp;nbsp;&lt;span&gt;&lt;span&gt;從 Java EE 到 Jakarta EE：零停機遷移 × 雲原生彈性實戰&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;10 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;年 Java 老兵現場演示 10 分鐘零停機遷移老系統到 Jakarta EE 11；QPS +18 %、內存 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;−&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;12 %&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;；一鍵生成 OCI 鏡像，接入 OpenTelemetry 與 KEDA，實現 Serverless 彈性到 0；開源 Maven 插件自動檢測 javax.* 殘留，PR 即時報錯。全程 Live Demo，腳本與 Helm Chart 當場放送。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6.&amp;nbsp;&lt;span&gt;&lt;span&gt;Java EE &amp;amp; Jakarta EE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;技術與 IBM Liberty 發展漫談&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;漫談企業級 Java 技術從 Java EE 到 Jakarta EE 演進歷程，IBM WebSphere Liberty 在雲原生場景下動態加載、秒級啓動、InstantOn 等特性助力企業應用，以及與 MicroProfile、Service Mesh 的協同實踐，並與開發者探討 Jakarta EE 11 中虛擬線程集成等前瞻特性與技術方向。同時，IBM 提供免費的遷移工具，助力開發者應用上雲或向高版本的 JDK 和 Java EE/Jakarta EE 規範進行升級演進！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368260</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368260</guid>
      <pubDate>Tue, 19 Aug 2025 02:55:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>EXCEL 導入 — 設計與思考</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;EXCEL 導入—設計與思考&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
  &lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;一、案例信息與設計&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
  &lt;span id="OSC_h2_2"&gt;&lt;/span&gt; 
  &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.1、案例需求與背景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;B2BTC 同城二期有一個 Excel 導入的功能，單次數據量小於一千，使用頻次不高。但涉及到多個字段組成唯一約束，即每條數據操作時要根據唯一性組合字段來操作，要確保數據表中的數據不違反唯一性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;每條數據涉及到多次查詢其他業務 RPC 來校驗、補充信息的訴求，即使有緩存，但也可能涉及到緩存不命中問題，即單條數據的校驗和導入的時效性保障不了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
  &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2、整體解決方案&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;以下四個方案為開發過程中依次思考的四個方案，沒有絕對利弊。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h4_4"&gt;&lt;/span&gt; 
  &lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2.1、初始構思開發方案（同步導入）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;首先想到的方案為常用的同步導入，即在一台容器的一個線程中完成 Excel 中數據的解析、校驗、導入、發送通知消息三部分流程。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;問題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.當數據量過大時，在單台服務器上操作時對服務器造成比較大的內存壓力。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.流程比較長，每條數據涉及多次 RPC 查詢，總體時間很長。接口 TP99 會比較高 + 用户體驗很差。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;優點：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.可以讓前端同步獲取導入結果。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-09-30-15-18DCieuAaQnMb9JRw.jpg" referrerpolicy="no-referrer"&gt; 
  &lt;/div&gt; 
  &lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;span id="OSC_h4_5"&gt;&lt;/span&gt; 
  &lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2.2、方案二（改進版）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;由於方案一時效不可控制，在參考了另外一個 Excel 導入場景後設計了以下方案：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基於原有的方案，該方案使用了線程池來校驗數據並通過 MQ 來異步地處理每條數據，這樣基於原有的方案有一定的效率提升。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但由於當時思考不充分，開發完成之後發現和實際場景不適配，並可能有 TP99 超時風險，只作為記錄。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;問題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.業務可以結束完全的異步，所有的導入結果都通過。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;優點：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.可以讓前端同步獲取校驗結果。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.線程池和異步處理一定程度上提升了數據處理效率。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;適用場景：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;本方案適用於前端需要同步獲取導入的結果，後端不涉及唯一性校驗（有單號等唯一主鍵信息）的場景，可以校驗數據之後進行批量插入（不用 MQ 來發消息異步處理數據）。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;方案本身沒有什麼問題，問題在於方案和引用場景不是最佳適配：本次導入不要求前端能即時獲取到導入的結果，因此無需在這裏同步獲取到結果之後再異步處理數據，可以將 excel 解析 + 數據校驗 + 處理消息統一均異步處理。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-09-30-15-21wkOxjIXV21gNOl8Z.jpg" referrerpolicy="no-referrer"&gt; 
  &lt;/div&gt; 
  &lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h4_6"&gt;&lt;/span&gt; 
  &lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2.3、方案三（最終版）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;由於業務方沒有同步獲取導入結果或者校驗結果的任何訴求&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，因此這裏將 excel 解析 + 數據校驗 + 處理消息統一均異步處理（JMQ 發消息給消費者來處理這些流程），只對必要的參數進行校驗。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於數據處理，將 Excel 數據拆分為每條的粒度，用，線程池來進行，數據校驗並處理，最終由主線程統計結果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;此外，在進行數據，查詢唯一性數據 + 操作數據（增加\刪除\修改） 的最小併發影響粒度加上 Redis 鎖來保障數據表的唯一性不會被破壞。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;問題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.所有的 excel 解析 + 數據校驗 + 處理消息，均在一台服務器上執行，對服務器的壓力會比較大。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;優點：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.用線程池處理消息，大大縮短了消息處理的時間，減少了單個服務器壓力。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.有兜底策略，可確保數據不丟失，導入流程可以正常且按時結束，不會無上限等待。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.除必要校驗的所有流程均異步處理，接口的 TP99 可靠且較快。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;適用場景：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.對數據完整性要求比較的業務。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.數據量不會太大的業務。（避免對單個容器造成較大壓力）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-09-30-15-21X6dCzL32YC39YXBg.jpg" referrerpolicy="no-referrer"&gt; 
  &lt;/div&gt; 
  &lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h4_7"&gt;&lt;/span&gt; 
  &lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.2.4、方案四（理想版）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於方案三，將所有的數據校驗 + 處理的流程都給一台服務器執行，造成單台服務器壓力比較大，且併發度不夠高，總體流程時效性可能得不到保障。因此設想了一個較為理想的方案四場景，適用於數據量大、對數據可靠性要求不高、時效性要求高的場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;相比方案三，方案四減少了對應的對賬、兜底機制，整體的流程還是異步進行。相比於線程池，用 JMQ 發送消息給，數據校驗並處理的 consumer 來處理消息並記錄結果到 Redis 來跟蹤導入進度。此外，在進行數據，查詢唯一性數據 + 操作數據（增加\刪除\修改）+ 更新 Redis 中最終結果，的最小併發影響粒度加上 Redis 鎖來保障數據表的唯一性不會被破壞。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;問題：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.沒有兜底策略，數據校驗處理的流程中可能出現有一條消息阻塞\丟失\意外結束，導致最終沒有線程統計結果併發送咚咚消息。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;優點：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.除必要校驗的所有流程均異步處理，接口的 TP99 可靠且較快。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.利用拆分導入數據 + 多個 Consumer 處理消息，大大縮短了消息處理的時間。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.拆分數據為消息異步處理，用了 JMQ 的重試機制來提升了數據處理的可靠性。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;適用場景：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.本方案適用於前端無需同步獲取導入的結果，後端可以完全異步處理數據的場景。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.對數據可靠性要求不是極高的業務，可接受小概率容錯。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.對導入結果失效有一定訴求的業務。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.數據量比較大或操作比較頻繁的業務。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;div&gt; 
   &lt;img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-09-30-15-2326yJTIdAN30fObxBo.jpg" referrerpolicy="no-referrer"&gt; 
  &lt;/div&gt; 
  &lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h1_8"&gt;&lt;/span&gt; 
  &lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;二、持續思考&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
  &lt;span id="OSC_h2_9"&gt;&lt;/span&gt; 
  &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.1 中間件的合理使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;合理利用 JMQ 來解耦、拆分業務邏輯可以 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;減少單台服務器實例內存或 CPU 的壓力、提高數據處理併發量&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，同時可以利用 MQ 的重試機制來儘可能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;保障對應業務的可用性&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同時，異步處理可能存在結果丟失的情況，在數據可靠性要求不高的場景可以合理捨棄這種小概率場景發生的問題（因為有重試還一直失敗）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;但在數據可靠性要求比較高的場景，需要有對應的對賬機制 + 兜底機制來統計數據的處理情況。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;（如 Excel 導入，可以將解析完成的數據，和 最終導入的數據進行一個數據對賬，如果有數據丟失或者無響應，發出告警，讓定時任務，或 人工進行二次核驗來確保數據可靠不丟失）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但中間件的過度使用使得服務過度依賴中間件的可靠性，問題追蹤定位難度會進一步加大，需要結合實際業務場景綜合權衡。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;span id="OSC_h2_10"&gt;&lt;/span&gt; 
  &lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.2 業務充分適配場景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在進行方案的技術設計時，不要只是照葫蘆畫瓢，要結合自己的業務場景、業務數據量、可靠性要求等場景充分考慮，借鑑其他方案的可用之處。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如本文檔中方案二借鑑了之前的方案設計，但沒有考慮自己的業務場景是不是與其適配，沒有充分適配自己的實際業務，還可能引入新的問題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;沒有最好的技術方案，只有適配於當前業務場景的最佳方案。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18688901</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18688901</guid>
      <pubDate>Tue, 19 Aug 2025 02:45:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>蘋果考慮使用谷歌 Gemini 為新版 Siri 構建定製 AI 模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;彭博社記者 Mark Gurman&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2025-08-22%2Fapple-explores-using-google-gemini-ai-to-power-revamped-siri"&gt;報道稱&lt;/a&gt;，蘋果正在與谷歌開展早期討論，考慮基於谷歌 Gemini 構建定製 AI 模型並在 Siri 中使用。蘋果還在同步權衡各種選擇，尚未確定是使用內部模型還是與第三方合作。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0825/103801_5VvN_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;報道指出，谷歌已經開始訓練一個可以在蘋果服務器上運行的模型。今年早些時候，蘋果還曾探索與 Anthropic 或 OpenAI 合作，評估 Claude 或 ChatGPT 是否能成為 Siri 的 「新大腦」。&lt;/p&gt; 
&lt;p&gt;目前，蘋果還需要幾周時間才能決定是繼續使用內部模型的 Siri，還是轉向合作伙伴。同時，蘋果還沒有確定這個合作伙伴是誰。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368256</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368256</guid>
      <pubDate>Tue, 19 Aug 2025 02:41:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
