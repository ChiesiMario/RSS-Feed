<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 09 Sep 2024 04:47:37 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>蘋果全新 A18 芯片基於 Arm 最新 V9 架構</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;英國媒體《金融時報》&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ft.com%2Fcontent%2F85f3efa0-c30d-4eaa-9a4d-5bd6c5243e9f&quot; target=&quot;_blank&quot;&gt;報道稱&lt;/a&gt;，蘋果計劃在週一的發佈會上推出 iPhone 16 系列新機，以及其採用的基於 Arm 最新 V9 架構的 A18 芯片。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0909/104852_1miq_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;A18 芯片預計將為 iPhone 16 系列帶來更強大的機器學習和圖像處理能力，從而優化用户體驗，並支持更多先進的 AI 功能。&lt;/p&gt; 
&lt;p&gt;蘋果已經在其最新的 MacBook M4 芯片中使用了 Arm 的 V9 架構，它表示 M4 為下一代 PC 帶來了「巨大飛躍」的性能提升，預計將在接下來幾個月內宣佈這些 PC 新品。&lt;/p&gt; 
&lt;p&gt;去年 9 月，蘋果與 Arm 簽署了一項協議，有效期至 2040 年「及以後」，確保在可預見的未來能夠使用其核心知識產權 Arm 架構，該架構用於其 iPhone 和 Mac 芯片。&lt;/p&gt; 
&lt;p&gt;這份多年期許可協議也為 Arm 帶來了巨大的推動力。Arm 首席執行官 Rene Haas 此前表示，最初於 2021 年推出的 V9 芯片架構帶來的專利費是其上一代 V8 的兩倍，後者可用於蘋果為 iPhone 15 Pro 和 Pro Max 設計的 A17 Pro 芯片。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ad2b9b0c319c1e99fcbaa79d9b1239690e6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;延伸閲讀：&lt;a href=&quot;https://www.oschina.net/news/268797&quot; target=&quot;_blank&quot;&gt;蘋果每台設備的 Arm 專利費比塑料薄膜還便宜&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311127/apple-a18-uses-arm-chip</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311127/apple-a18-uses-arm-chip</guid>
            <pubDate>Mon, 09 Sep 2024 03:02:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>TIOBE 9 月榜單：Java 上位，C 語言跌至歷史最低</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 公佈了 2024&amp;nbsp;年 9 月的&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;編程語言排行榜&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;57&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9e4bd293896dda588da5bbd0c0a6f22bf7e.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;自 6 月份被&amp;nbsp;C++&amp;nbsp;超越跌至榜單第三後，C 語言排名在本月再次下跌一位。目前榜單的 Top 5 位分別是：Python、C++、Java、C 和 C#。這也是自 2001 年 TIOBE 指數開始以來 C 語言的最低排名，C 語言是否正在失去魔力？&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE CEO Paul Jansen 點評稱，C 語言一直以來都嵌入式系統的最愛。到目前為止，C 語言唯一的嚴重缺點是它不是為擴展而設計的。由於缺乏面向對象特性，大型 C 程序難以維護。現在，嵌入式系統的功能趨於增長，因此代碼大小也隨之增長，而且由於越來越多的嵌入式編譯器具有良好的 C++ 支持，因此人們傾向於從 C 語言切換到 C++。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;尤其是美國政府開始明確表示希望禁止內存不安全的語言（如 C 語言），轉而支持內存安全的語言（如 Rust），很多公司正在考慮用 Rust 來替代 C。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Paul Jansen 認為，「C 可能會失去它的魅力，但它會在很長一段時間內保持在 TIOBE 指數前 10 名。因為它的裝機量驚人，是全球數以億計的安全關鍵系統的一部分。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;TIOBE 9 月 TOP 20 編程語言&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;415&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-10b8ae83c8a8fb66a41b7f40a86e9104b40.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;C 的排名從 3 跌至 4&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Java 的排名從 4 升至 3&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Visual Basic 的排名從 8 升至 7&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Go 的排名從 9 升至 8&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;SQL&amp;nbsp;的排名從 7 跌至 9&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Delphi/Object Pascal&amp;nbsp;排名從&amp;nbsp;12 升至 11&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;MATLAB&amp;nbsp;的排名從&amp;nbsp;11 跌至 12&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;R 語言的排名從 19 升至 15&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Ruby&amp;nbsp;的排名從&amp;nbsp;15 跌至 16&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Scratch&amp;nbsp;的排名從 20 升至 17&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;COBOL 重回&amp;nbsp;Top 20 至第 19 位&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Swift&amp;nbsp;的排名從&amp;nbsp;16&amp;nbsp;跌至 20&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;Assembly language&amp;nbsp;則跌出 Top 20 榜單（17→21）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;TOP 10 編程語言 TIOBE 指數走勢（2002-2024）&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;226&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b1b32c460a11413f4424844d8392e036841.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong style=&quot;color:#333333&quot;&gt;第 21-50 名編程語言排行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;428&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1e5e687f153ab6f10dc237953ca5360e88a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;第 51-100 名如下，由於它們之間的數值差異較小，僅以文本形式列出（按字母排序）：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;ABC, ActionScript, Algol, Apex, APL, Bash, Carbon, CFML, CHILL, CL (OS/400), CLIPS, Clojure, Crystal, Curl, DiBOL, Erlang, Forth, Groovy, Hack, Icon, Inform, Io, J, JScript, LabVIEW, Modula-2, Mojo, MQL5, NATURAL, Nim, OCaml, Occam, OpenCL, OpenEdge ABL, PL/I, PostScript, Q, Ring, Scheme, Smalltalk, Snap!, SPARK, Stata, SystemVerilog, Tcl, VHDL, Whitespace, Wolfram, X++, Zig&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;TIOBE 編程社區指數（The TIOBE Programming Community index）是一個衡量編程語言受歡迎程度的指標，該指數每月更新一次。評判的依據來自世界範圍內的工程師、課程和第三方供應商，包括流行的搜索引擎，如 Google、必應、雅虎、維基百科、亞馬遜、YouTube 和百度都被用於指數計算。值得注意的是，TIOBE 指數並不代表編程語言的好壞或編寫代碼的多少。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;該指數可以用來檢查你的編程技能是否還能跟上時代的步伐，或者在開始建立一個新的軟件系統時，基於指數對採用何種編程語言做出決策。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2Fprogramminglanguages_definition%2F&quot; target=&quot;_blank&quot;&gt;TIOBE 指數&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;的定義方式，以及詳細榜單信息&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F&quot; target=&quot;_blank&quot;&gt;均可查看官網&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311117/tiobe-index-202409</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311117/tiobe-index-202409</guid>
            <pubDate>Mon, 09 Sep 2024 02:40:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Zadig 上線字節飛書官方：先進組織，一站式高效協同解決方案</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;img height=&quot;1596&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b94b52e8b10d68adefc141d1fc01ab25034.png&quot; width=&quot;3750&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#fd2968&quot;&gt;先進團隊，先用飛書！&lt;/span&gt; 作為新一代高效協作的辦公工具，使用飛書已成為先進團隊的工作方式。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#fd2968&quot;&gt;發佈對了，就都對了！&lt;/span&gt; Zadig，基於雲原生技術和工程最佳實踐打造的 DevOps 平台 ，正式上線飛書官方：真正打通需求到發佈全生命週期，為企業帶來產研一站式高效協作方案。&lt;/p&gt; 
&lt;p&gt;Zadig 與飛書全家桶，這對代表先進生產力的組合，到底帶來了哪些神奇的效果？&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;Zadig x 飛書產研運一體化方案&lt;/h1&gt; 
&lt;p&gt;&lt;img height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b58b340edd051a46a58455ca3922db9521f.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Zadig 連通飛書項目管理、審批、IM 通知、機器人等協作套件，深度融合，在以下四大場景中讓產研協作更絲滑、更高效：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;需求管理：降低需求管理成本，明確需求進度，方便產品版本規劃。&lt;/li&gt; 
 &lt;li&gt;開發自測聯調：通過穩定的測試環境和自動化工作流程，減少研發手工操作，降低研發成本，提高交付效率。&lt;/li&gt; 
 &lt;li&gt;測試集成驗證：踐行測試驅動開發理念，實現測試過程前置，儘早發現問題，降低溝通和修復成本，實現安全可靠又高效的業務變更。&lt;/li&gt; 
 &lt;li&gt;運維生產發佈：自動化執行研發發佈規範，提升管理協作效率，降低人為事故的發生概率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;場景一：需求管理&lt;/h2&gt; 
&lt;p&gt;傳統的文檔管理方式中，需求雜亂，進展不明確，排期難度大且不透明。飛書中的項目視圖可以將需求流程可視化，進展一目瞭然；支持關鍵指標度量，驅動組織持續迭代。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;708&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c42bb72e82e0a0a3bac48b1a87f690da6a7.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;場景二：開發自測聯調&lt;/h2&gt; 
&lt;p&gt;研發工程師在自測聯調時面臨以下痛點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;需要人工部署新版本到開發環境，操作繁瑣且容易出錯。出現問題難診斷，需求交付效率低下。&lt;/li&gt; 
 &lt;li&gt;多人共享一套自測環境，資源使用衝突情況頻發；環境變更信息不透明無法追溯，團隊之間無法絲滑協作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Zadig 中提供了靈活易用的高併發工作流，多個微服務並行構建、部署、測試，提升代碼驗證效率；可一鍵拉起數套獨立的開發環境，且環境操作記錄公開透明，信息可追溯；支持飛書項目觸發器和 IM 通知，實現工作流任務執行完畢後自動更新飛書工作項狀態，及時推送環境更新信息，實現高效協作。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;879&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3a2e346e06d3ecc251d085aba3fa795afd6.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;場景三：測試集成驗證&lt;/h2&gt; 
&lt;p&gt;測試工程師在團隊協作中面臨以下痛點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多個成員共享一套測試環境，只能對某個固定的版本進行測試，多個功能無法並行驗證，功能驗證帶寬低下。&lt;/li&gt; 
 &lt;li&gt;測試用例管理困難，本地執行測試的可信度被質疑，自動化測試價值難以體現。&lt;/li&gt; 
 &lt;li&gt;測試結果口頭同步，團隊內碎片化溝通嚴重且信息難追溯。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Zadig 支持拉起多套獨立的驗證環境，服務版本可控，實現並行驗證；自動化測試執行過程公開透明，結合工作流測試結果反饋，實現測試前置，為開發賦能；飛書工作項狀態變更後自動觸發 Zadig 工作流實現測試流程自動化，降低溝通成本。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;711&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6d881721f1c06781a02fd2eaa0516fc4db9.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;場景四：運維生產發佈&lt;/h2&gt; 
&lt;p&gt;企業在生產發佈時面臨以下痛點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;生產發佈自動化難以實現，運維手工操作繁重。&lt;/li&gt; 
 &lt;li&gt;發佈前需要花大量時間進行人工梳理和彙總發佈版本信息，人工失誤會導致上線版本不完整，甚至出現嚴重的生產事故。&lt;/li&gt; 
 &lt;li&gt;傳統發佈審批使用工單系統，流程冗長且信息不精準；審批內容和實際發版內容存在出入，版本追溯困難。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Zadig 的發佈工作流可靈活編排配置變更 Nacos/Apollo、數據變更 DMS/MySQL，支持藍綠、金絲雀、分批次灰度、Istio 等多種發佈策略，實現安全可靠的發佈管理；通過多集羣、多項目視角呈現生產環境的狀態實現發佈過程的透明可靠可追溯；在發佈過程關鍵節點通過發佈工作流向負責人發起變更審批請求，快速跳轉到 Zadig 可審查發佈詳情，降低溝通成本減少信息差。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;781&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3f6e1db960ea6391eeaae2cbd4aec70b9d0.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;One More Thing：敏捷效能看板&lt;/h1&gt; 
&lt;p&gt;Zadig 提供從需求到發佈的產研運一體化支撐，自動收集研發交付全流程過程和結果數據，支持定製企業級 XOps 敏捷效能看板，用數據驅動增長。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1358&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-61392cde36cb3365a4eed2fc0ff8a1703e1.png&quot; width=&quot;2914&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_7&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;誰在用？&lt;/h1&gt; 
&lt;p&gt;&lt;img height=&quot;2306&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-734842e184e3a34191af13f030b2573e53f.png&quot; width=&quot;1792&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#ff4c88; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;strong&gt;掃碼即刻諮詢&lt;br&gt; 解鎖企業專屬最佳實踐方案！&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;942&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d28e269b606634af6c301b147a91bdf3fbf.png&quot; width=&quot;1796&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Zadig 在 Github&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://gitee.com/koderover/zadig&quot; rel=&quot;nofollow&quot;&gt;Zadig 在 Gitee&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;&lt;span&gt;推薦閲讀：&lt;/span&gt;&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#002a64; margin-left:0; margin-right:0&quot;&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11209278&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;講不清楚 Zadig 價值？看看他們怎麼説&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11210095&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Zadig 官網博客正式發佈，技術乾貨實踐管飽&lt;/a&gt;&amp;nbsp;/&lt;span style=&quot;background-color:#ffffff; color:#002a64&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://my.oschina.net/koderover/blog/10316143&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Jenkins 遷移 Zadig，新項目實施上線效率提升 6 倍&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/11555717&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;雲器科技為何選擇 Zadig 應對多雲發佈難題&lt;/a&gt;&amp;nbsp;/&amp;nbsp;&lt;a href=&quot;https://my.oschina.net/koderover/blog/13739473&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;Zadig 工作流如何聯動 Grafana 進行服務監測&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/koderover/blog/13742490</link>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/13742490</guid>
            <pubDate>Mon, 09 Sep 2024 02:14:56 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>網絡工程師使用 deepin 必需掌握的兩個工具 minicom 和 cutecom</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-use-minicom-and-cutecom%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Minicom（命令行工具）&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;minicom 屬於命令行工具，沒有圖像化界面，安裝包小，佔用系統資源小，使用 deepin 的超級終端窗口直接可以使用，優先推薦使用 minicom。&lt;/p&gt; 
&lt;p&gt;minicom 的主要用於串口通信。以下將分別介紹 minicom 的安裝步驟和使用方法。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;minicom 的安裝&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;minicom 的安裝方法主要依賴於你使用的 Linux 發行版。以 deepin 為例，可以通過以下步驟安裝 minicom：&lt;/p&gt; 
&lt;p&gt;1、打開終端：首先，需要打開你的 deepin 超級終端。&lt;/p&gt; 
&lt;p&gt;2、獲取 root 權限：為了安裝軟件，通常需要 root 權限。可以通過輸入 sudo su -來獲取。系統可能會要求你輸入管理員密碼。&lt;/p&gt; 
&lt;p&gt;3、使用 apt-get 安裝 minicom：deepin 及其衍生版（統信 UOS ）通常使用 apt 包管理器。在終端中輸入以下命令來安裝 minicom：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;sudo apt-get update # 更新軟件包列表&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;sudo apt-get install minicom&amp;nbsp;&amp;nbsp;# 安裝 minicom&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;這個命令會從 deepin 的軟件倉庫中下載並安裝 minicom。安裝過程中，系統可能會詢問你是否確認安裝，輸入 y 並按回車即可繼續。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;minicom 的使用&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;minicom 的使用主要涉及配置串口和進行串口通信。以下是基本的使用步驟：&lt;/p&gt; 
&lt;p&gt;1、配置串口：&lt;/p&gt; 
&lt;p&gt;啓動 minicom 配置工具：在終端中輸入 sudo minicom -s。這將啓動 minicom 的配置菜單。&lt;/p&gt; 
&lt;p&gt;選擇「Serial port setup」進行串口設置。你需要設置正確的串口設備（如/dev/ttyS0、/dev/ttyUSB0 等）、波特率、數據位、停止位等參數。&lt;/p&gt; 
&lt;p&gt;配置完成後，選擇「 Save setup as dfl 」保存為默認配置，並退出配置菜單。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1134&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240904095842.jpg&quot; width=&quot;1199&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;2、啓動 minicom：配置完串口後，可以直接在終端中輸入 sudo minicom 來啓動 minicom。如果之前已經保存了默認配置，minicom 將自動使用這些配置參數。&lt;/p&gt; 
&lt;p&gt;3、進行串口通信：啓動 minicom 後，你就可以開始與連接在指定串口上的設備進行通信了。你可以輸入命令並查看設備的響應。正常情況到此你會看到熟悉的設備調測界面，比如華為交換機會提示輸入 user 和 password。&lt;/p&gt; 
&lt;p&gt;4、退出 minicom：要退出 minicom，可以按 Ctrl+A，然後按 X 鍵。系統會詢問你是否確定退出，按 y 鍵確認即可。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;minicom 的常用功能（部分高級功能&lt;/strong&gt;&lt;strong&gt;）&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1、自動卷屏：按 Ctrl+A，然後按 W 鍵可以啓用自動卷屏功能，這樣當顯示的內容超過一行時，會自動換行顯示。&lt;/p&gt; 
&lt;p&gt;2、清除屏幕：按 Ctrl+A，然後按 C 鍵可以清除屏幕上的顯示內容。&lt;/p&gt; 
&lt;p&gt;3、瀏覽歷史顯示：按 Ctrl+A，然後按 B 鍵可以瀏覽 minicom 的歷史顯示內容。&lt;/p&gt; 
&lt;p&gt;4、發送文件：minicom 支持通過串口發送文件。具體方法可能因 minicom 版本和配置而異，通常需要使用特定的命令或選項。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;注意事項&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在使用 minicom 之前，請確保你有足夠的權限來訪問指定的串口設備。通常，這些設備文件位於/dev/目錄下，並且需要 root 權限才能訪問。進入查看驅動方法如下：&lt;/p&gt; 
&lt;p&gt;Lsusb#查看串口線驅動是否安裝正常， deepin 默認安裝。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;475&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240904095847.jpg&quot; width=&quot;1267&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;cd /dev 進入 dev 目錄&lt;/p&gt; 
&lt;p&gt;ls&amp;nbsp;查看 dev 下驅動是否存在 ttyUSB0&lt;/p&gt; 
&lt;p&gt;minicom 的配置和使用方法可能會因不同的 Linux 發行版和 minicom 版本而有所不同。如果你使用的是其他 Linux 發行版或 minicom 版本，請參考相應的文檔或幫助信息。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;Cutecom（圖形化調測工具）&lt;/strong&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;同樣在 deepin 上安裝和使用 cutecom 可進行串口調試，cutecom 是圖形化界面工具，類似用户熟悉操作 Windows 和 MacOS 工具，可以按照以下步驟進行：&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;安裝 cutecom&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1、使用 apt-get 安裝（適用於 deepin 及其衍生版）&lt;/p&gt; 
&lt;p&gt;打開 deepin 超級命令終端&lt;/p&gt; 
&lt;p&gt;安裝 cutecom：輸入 sudo apt-get install cutecom 命令，然後按照提示操作即可安裝 cutecom。&lt;/p&gt; 
&lt;p&gt;如果安裝失敗建議執行系統更行命令，確保系統保持在最新版本，輸入 sudo apt-get update 命令來更新你的軟件包列表，以確保安裝的是最新版本的軟件。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;使用 cutecom&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;1、啓動 cutecom&lt;/p&gt; 
&lt;p&gt;安裝完成後，你可以在終端中輸入 sudo cutecom 命令來啓動 cutecom。由於 cutecom 可能需要訪問串口設備，因此可能需要使用 sudo 來獲取必要的權限。&lt;/p&gt; 
&lt;p&gt;2、設置串口參數&lt;/p&gt; 
&lt;p&gt;查找串口：連接你的串口設備到計算機，然後在終端中輸入 dmesg | grep ttyS*（對於傳統的串口設備）或 dmesg | grep ttyUSB*（對於 USB 轉串口設備）來查找設備對應的串口名稱（如/dev/ttyS0、/dev/ttyUSB0 等）。&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;619&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/09/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240904095851.jpg&quot; width=&quot;650&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;配置串口參數：在 cutecom 界面中，點擊「 Settings 」按鈕進入設置界面，設置正確的串口名稱、波特率、數據位、停止位等參數。通常，波特率需要根據你的設備手冊進行設置。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;備註：在頂部，您可以看到小部件，您可以在其中調整串行通信設置。在此部分下方是輸出視圖，您可以在其中看到設備的所有內容&amp;nbsp;發回，也是不可打印的字符。在底部，您可以看到輸入區域， 使用輸入行輸入命令，以及包含輸入行歷史記錄的列表。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;3、連接串口設備&lt;/p&gt; 
&lt;p&gt;選擇串口：在 cutecom 的「 Device 」一欄中選擇你通過 dmesg 命令找到的串口名稱，或者手動輸入該名稱。&lt;/p&gt; 
&lt;p&gt;打開串口：點擊軟件左上角的「 Open Device 」按鈕來連接串口設備。&lt;/p&gt; 
&lt;p&gt;4、發送和接收數據&lt;/p&gt; 
&lt;p&gt;連接成功後，你就可以在 cutecom 的界面中發送和接收數據了。通常，cutecom 的界面會分為上下兩個窗口，上面的窗口用於顯示接收到的數據，下面的窗口用於輸入要發送的數據。&lt;/p&gt; 
&lt;p&gt;5、關閉連接&lt;/p&gt; 
&lt;p&gt;當你完成串口通信後，可以點擊軟件左上角的「 Close Device 」按鈕來關閉當前的串口連接。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;注意事項&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在使用 cutecom 之前，請確保你的 deepin 系統已經安裝了必要的串口驅動，並且串口設備已經正確連接到計算機上。（同 minicom 操作）&lt;/p&gt; 
&lt;p&gt;如果你的 Linux 發行版不支持 apt-get 包管理器，你可能需要查找適用於你的系統的其他安裝方法。&lt;/p&gt; 
&lt;p&gt;在使用 cutecom 進行串口通信時，請確保你瞭解串口通信的基本原理和參數設置方法，以避免通信失敗或數據丟失等問題。&lt;/p&gt; 
&lt;p&gt;感謝 deepin（深度）社區用户：UOS 大局觀的投稿。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;相關閲讀：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-use-minicom-and-cutecom%2F&quot; target=&quot;_blank&quot;&gt;查看原文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Ftable.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本鏡像（含 deepin V15&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-23-on-xiaomi-5%2F&quot; target=&quot;_blank&quot;&gt;如何在小米 5 平板上運行 deepin 23&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311103</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311103</guid>
            <pubDate>Mon, 09 Sep 2024 02:02:56 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>openKylin 亮相第十四屆智博會，以開源之力賦能數字經濟</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年 9 月 6 日，&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 世界數字經濟大會暨第十四屆智慧城市與智能經濟博覽會&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;（以下簡稱「智博會」）在寧波開幕。本屆&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;智博會&lt;/span&gt;&lt;span&gt;圍繞「數字賦能新型工業化」這一全新主題，以「1+1+4」模式策劃舉辦開幕、展覽展示和論壇研討、產數合作、賽事賦能、開放互動等 4 大板塊系列專項活動，超 300 家企業參展，匯聚了來自全國乃至全球的頂尖科技企業、專家學者及行業精英，共同探索「數字賦能」的無限可能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3966a281fb3e3773a177f5788b192e8428f.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社區秘書長餘傑&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;受邀參與&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;大會開源生態體系建設分論壇&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;，帶來&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;《麒麟開源生態建設實踐及體會》&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;主題演講，圍繞開源操作系統發展歷程、openKylin 社區及生態建設實踐，介紹 openKylin&lt;span style=&quot;color:#000000&quot;&gt;社區&lt;/span&gt;在版本構建、創新發展、技術生態、產業生態以及開發者和用户生態等領域的開源實踐成果，並分享社區在開源技術研發、開源社區建設、開源人才培養等方面的經驗體會。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;2115&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9dfc884925e7392aebeaf4626617c22f142.jpg&quot; width=&quot;3171&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，openKylin 社區參展本次大會展區，帶來社區開源技術、應用實踐等最新社區成果展示，&lt;span style=&quot;color:#000000&quot;&gt;吸引了眾多參展人員駐足交流，&lt;span style=&quot;color:#000000&quot;&gt;共同見證開源技術的蓬勃生機&lt;/span&gt;&lt;/span&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-63132482dfa8019a84ee7b7be163cf89cf4.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1067&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9d4e6314cc384b3ea72c70f873936f722a4.jpg&quot; width=&quot;1600&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 社區成立至今，已經聚集 6800 多位開發者，吸引來自操作系統、數據庫、辦公軟件、CPU、GPU、整機、人工智能優勢企業及高等院校等不同領域的 550 多家單位會員加入，併成立 110 多個 SIG 組開展技術創新。在合作伙伴與開發者共同推動下，openKylin 社區正在以較快的速度穩步發展，截至目前已發佈 8 個系統版本，實現了從系統效能、功能體驗、生態融合、應用開發等方面的全棧技術創新，將為圍繞系統上下游的軟硬件生態融合提供有力支撐。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;未來，openKylin 社區將繼續聚焦開源操作系統根技術，發揮社區平台支撐作用，聚合產、學、研、用及國內外開源力量，加速系統創新迭代，共同推動操作系統技術創新發展和生態繁榮建設。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/311092</link>
            <guid isPermaLink="false">https://www.oschina.net/news/311092</guid>
            <pubDate>Mon, 09 Sep 2024 01:32:56 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源日報 | Ilya 融資 10 億幕後大佬；VS Code 1.93；開源大模型新王幹翻 GPT-4o；與「蘋果税」的博弈；用 Mac 訓練機器人疊衣服</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.6&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310676&quot;&gt;蘋果批准了 iOS 版微信本週提交的更新&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;9 月 6 日，據彭博社報道，蘋果已經批准了騰訊本週提交的 iOS 系統微信更新，為雙方就&lt;strong&gt;應用內購費用&lt;/strong&gt;問題的持續談判贏得了更多時間。在此之前，App Store 上的微信已經有兩個多月沒有發佈更新。&lt;/p&gt; 
   &lt;blockquote&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cbe924a36238e3f21abac1446e659d7022c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-09-06%2Fapple-clears-wechat-for-iphone-16-as-talks-persist-over-app-fees&quot; target=&quot;_blank&quot;&gt;https://www.bloomberg.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
   &lt;/blockquote&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;據知情人士透露，蘋果本週批准了 iOS 版微信更新，新版本在朋友圈和直播功能方面進行了優化。這一決定有望平息中國市場對蘋果與騰訊就應用商店費用爭議可能升級的猜測。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;雙方分歧的焦點在於微信小遊戲平台。報道稱蘋果要求騰訊屏蔽小遊戲中的外部支付鏈接，並停止開發者利用平台內置消息功能引導用户使用其他支付渠道，從而保證能夠抽成 30%。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;蘋果還要求騰訊完全禁用遊戲內消息傳遞，但騰訊以過於激烈為由拒絕了這一要求。&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;知情人士稱，騰訊仍在與蘋果討論後續更新的潛在方案。蘋果代表拒絕置評，而騰訊則沒有回覆通過電子郵件發送的詢問。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310721/vs-code-1-93-released&quot;&gt;Visual Studio Code&lt;/a&gt;&lt;/span&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310721/vs-code-1-93-released&quot;&gt; 1.93&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c70f6188249bdf69402000e2242734552aa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310699/kde-report-2023&quot;&gt;KDE 發佈 2023 年度報告：再次虧損&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;KDE 是一個國際技術團隊，產品包括適用於 Linux 和 UNIX 平台的現代桌面系統、全面的辦公生產力和羣件套件以及數百種軟件，涵蓋互聯網和網絡應用程序、多媒體、娛樂、教育、圖形和軟件開發等多個類別。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;報告指出，KDE 在 2023 年的工作重點主要集中在構建 Plasma 6 方面，完成了很多出色的軟件開發工作。在 5 月份的一場會議中，Plasma 團隊討論了向 KF6 的過渡及其對 KDE 框架內依賴管理的影響。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中一個重大變化是重組了 colour scheme classes，以減少對&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Qt::Widgets&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的不必要依賴，特別是對於基於 QML 的移動應用程序。這種重組提高了效率並減少了軟件包的大小 -- 尤其是對於 Android APK 而言，它們可以佔到軟件包總大小的 20-25%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;但值得一提的是，KDE 在&amp;nbsp;2023 年的年收入仍略低於預期；總成本高於前幾年，主要原因是人員費用和活動相關費用。細分來看，企業支持和個人捐款仍然是其重要的收入來源，其中個人捐款增長尤為顯著。但一些傳統來源（如 Google Summer of Code）的收入略有下降。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5cf262499217ee79a5e626a9630aa1af7ba.webp&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1684197391%2FOvAy0vAZq&quot; target=&quot;_blank&quot;&gt;這個開源項目過於抽象&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;p&gt;Open and Shut 是一款通過打開、關閉筆記本電腦來發送莫斯電碼的開源工具。真的就是打開筆記本、合上筆記本來發送一次信號，組合起來成了莫斯電碼，太過於抽象了。&lt;/p&gt; 
        &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fveggiedefender%2Fopen-and-shut&quot; target=&quot;_blank&quot;&gt;https://github.com/veggiedefender/open-and-shut&lt;/a&gt;&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;&lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;小眾軟件&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGnrEPlKt-8CPhrMcwGRfaA&quot; target=&quot;_blank&quot;&gt;用 Mac 訓練個機器人疊衣服&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;該教程主要基於一種開源、價格友好的機器人套件 Koch v1.1 編寫，不過也可以通過改變配置輕鬆適應各種類型的機器人。&lt;/p&gt; 
   &lt;p&gt;Koch v1.1 由一個主導臂和一個從動臂組成，每個臂有 6 個電機。它可以和一個或多個攝像頭一起工作來記錄場景，這些攝像頭被用作機器人的視覺傳感器。在數據採集階段，你將通過移動主導臂來控制從動臂。這個過程被稱為「遙操作」。這種技術用於收集機器人軌跡。之後，你將訓練一個神經網絡來模仿這些軌跡，並部署網絡以使你的機器人能夠自主操作。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;&lt;span&gt;機器之心&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FDY2R77q6uzsMMsdGc6MLcw&quot; target=&quot;_blank&quot;&gt;批准 iPhone16 上架微信，與「蘋果税」的博弈並非不可能&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;騰訊和字節跳動之所以「逃」税，還有一部分原因是因為蘋果在世界各地的抽成並不相同。舉個例子：&lt;/p&gt; 
    &lt;p&gt;在美國本土，蘋果對企業的蘋果税為 27%，對小工作室或獨立開發者則是 12%；而對剛剛正面硬剛蘋果並取得勝利的歐盟地區，蘋果對企業的税率標準是 17%，對小工作室或獨立開發者的則是 10%；結果到了中國大陸地區，這個標準變成了大企業 30%，小工作室或獨立開發者為 15%。&lt;/p&gt; 
    &lt;p&gt;同時，在歐盟、美國和韓國等地區，蘋果也是允許應用內通過鏈接的形式引導用户在應用之外完成交易的，但在中國大陸卻不允許。&lt;/p&gt; 
    &lt;p&gt;按理説應用上架 App Store 後蘋果進行抽成其實無可厚非，但與安卓不同的是，這個「蘋果税」損害的並不是開發商的利益，而是用户。&lt;/p&gt; 
    &lt;p style=&quot;text-align:right&quot;&gt;- 微信&amp;nbsp;&lt;strong&gt;&lt;span&gt;不客觀實驗室&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cczWIhhr62&quot; target=&quot;_blank&quot;&gt;Ilya 融資 10 億幕後大佬：復刻 OpenAI 創始人，21 歲當蘋果 AI 總監，手握千卡算力集羣&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;OpenAI 前首席科學家伊爾亞·蘇茨科夫（Ilya Sutskever）的創企安全超級智能（SSI）在成立 2 個多月、僅有 10 名員工的情況下，一舉拿下 10 億美元融資，估值衝破 50 億美元（摺合約 356 億元人民幣）。&lt;/p&gt; 
  &lt;p&gt;為何 SSI 能以如此之快的速度，拿下大額融資？除了蘇茨科夫在 AI 圈的影響力之外，SSI 另一位擁有豐富創投經驗的神秘聯合創始人丹尼爾·格羅斯（Daniel Gross）也做出了重要貢獻。&lt;/p&gt; 
  &lt;p&gt;今年 6 月，格羅斯與蘇茨科夫和另一位從 OpenAI 出走的研究科學家丹尼爾·列維（Daniel Levy）共同創立 SSI，蘇茨科夫為首席科學家，列維為主要科學家，格羅斯則負責算力、籌款和人才引進。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;智東西&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cdKl09a9oK&quot; target=&quot;_blank&quot;&gt;阿斯麥 CEO：美國以國家安全之名對華設限，但如今更像「出於經濟動機」&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;據英國路透社 9 月 4 日報道，荷蘭半導體設備製造商阿斯麥公司首席執行官克里斯托夫·富凱當天在紐約花旗銀行的會議上表示，隨着時間推移，美國以「國家安全」之名實施的對華出口管制變得更像是「出於經濟動機」。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「要證明這事關國家安全，越來越難了。」富凱預測，未來反對美國管制的聲音將越來越多。「很可能會有更大的限制壓力，但同時也會出現更多反對聲」，在他看來，企業希望能達到一個平衡，因為做生意需要「一點確定性，一點穩定性」。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年 4 月，富凱從彼得·温寧克手中接棒，成為阿斯麥的掌舵人。多年來，他一直保持低調，很少公開談論地緣政治問題。從幾次公開表態中可以看出，富凱倡導全球技術合作，多次對半導體產業脱鈎斷鏈發出警告。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;觀察者網&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1808781410725306968%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;谷歌大手筆挖走創始人後 Character.AI 上演裁員風波&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;在科技行業的瞬息萬變中，初創公司的命運往往充滿了不確定性。據 The Information 報道，與谷歌達成重大交易不久後，美國人工智能創業公司 Character.AI 在當地時間 8 月 29 日進行了至少 5% 的裁員，主要涉及營銷和招聘崗位。在裁員前，Character.AI 擁有約 120 名員工。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;科創板日報&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.21jingji.com%2Farticle%2F20240906%2Fherald%2F8a3efa4b532c02da268377a8fe276ce7.html&quot; target=&quot;_blank&quot;&gt;Runway 突然刪庫跑路之後仍「歲月靜好」，信任正在被侵蝕&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Runway 將 HuggingFace 和 GitHub 平台上的資源全部移除，尤其是將 Stable Diffusion v1.5 刪除，不僅對依靠這個模型進行項目研究的人員和社區造成了影響，還引發了關於開源人工智能資源的可靠性和穩定性的問題，可能會侵蝕對人工智能開發協作性質的信任。&lt;/span&gt;&lt;/p&gt; 
  &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;此外，發佈者的突然跑路，也令 HuggingFace 和 GitHub 這類人工智能模型共享和協作主要平台面臨直接挑戰。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;21 世紀經濟報道&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8ceasbSi0Mq&quot; target=&quot;_blank&quot;&gt;對話帆軟：大模型不是 BI 的「萬能藥」，BI 也不是大模型的「低垂果實」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;「BI 領域肯定不止於大模型，還涉及到數據連接、圖表渲染、計算引擎、權限管理等各種基礎能力，沒有大模型之前，BI 也在用機器學習去解決一些問題，只是大模型是一個增強版的 AI 技術。另外，如果底層數據髒亂差，AI 也很難用起來，數據治理很重要，表面是大模型，冰山之下是數據治理。」翁林君説。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;鈦媒體&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.myzaker.com%2Fnews%2Farticle.php%3Fpk%3D66da9388b15ec0654c707fa9&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;開源大模型新王幹翻 GPT-4o，新技術可糾正自己幻覺，數學 99.2 分刷爆測試集&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;開源大模型王座突然易主，居然來自一家小創業團隊，瞬間引爆業界。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;新模型名為 Reflection 70B，使用一種全新訓練技術，讓 AI 學會在推理過程中糾正自己的錯誤和幻覺。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;量子位&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweggli-rs%2Fweggli&quot; target=&quot;_blank&quot;&gt;weggli-rs/weggli&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;343&quot; src=&quot;https://static.oschina.net/uploads/space/2021/1012/170634_nJ1c_4252687.gif&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fweggli-rs%2Fweggli&quot; target=&quot;_blank&quot;&gt;https://github.com/weggli-rs/weggli&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#24292f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;weggli 是一個快速且強大的 C 和 C++ 代碼庫語義搜索工具。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#24292f&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;weggli 根據用户提供的查詢對抽象語法樹執行模式匹配。它的查詢語言類似於 C 和 C++ 代碼，可以輕鬆將有趣的代碼模式轉換為查詢。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4662964/blog/15526100&quot; target=&quot;_blank&quot;&gt;HarmonyOS ArkUI 工程框架解析&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通過 HarmonyOS Developer 官網我們可以瞭解 ArkUI 是一套聲明式開放框架，開發者可以基於 ArkTS 語法設計一套極簡的 DSL 以及豐富的 UI 組件完成跨設備的界面開發。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;那麼 ArkUI 是如何實現這一套聲明式開放框架的呢？本文將通過分析開源的 HarmonyOS 渲染引擎 AceEngine 代碼以及配套工程能力來進行詳細解讀。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;208&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1c4a87a-eec8-4a93-aa63-a7e3a2d72b2e.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FjjJiGjA_jCBp3HLSiCqsng&quot; target=&quot;_blank&quot;&gt;蘋果批准了 iOS 版微信本週提交的更新&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：微信需要更新嗎，每次都是解決了一些已知問題&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：一人一個贊，坐等後續兩家撕逼&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：多大點事，蘋果用户多看點廣告，這個蘋果税不就抵了嘛&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：賊 t 目，iOS 微信消息總是延遲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：建議微信要硬氣！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：再更新，微信就能玩黑神話了。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：蘋果你這次不硬起來，我以後都不買蘋果的產品了！我肯定天天罵蘋果沒骨氣！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：建議微信學習 epic，硬扛到底，大不了下架唄，反正我可以不用&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2F%E5%BE%AE%E8%BD%AF%E5%9C%A8Windows+11%E9%9B%86%E6%88%90%E4%B8%AD%E5%9B%BD%E5%BC%80%E6%BA%90%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%9E%B6%E6%9E%84RWKV%E3%80%81%E8%A3%85%E6%9C%BA%E9%87%8F%E8%BF%915%E4%BA%BF&quot; target=&quot;_blank&quot;&gt;微軟在 Windows 11 集成中國開源大模型架構 RWKV、裝機量近 5 億&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：中國的大模型研究現在介於第一梯隊和第二梯隊之間，第一梯隊只有一個就是美國。windows 集成它也是因為中文語料環境佔優勢&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：rwkv 主要是英文語料，事實上遠沒有國內大模型中文語料來的多。早期 rwkv 甚至只支持英文&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：微軟給別人付費了嗎，給授權費了沒有。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：如果這個開源項目沒有商業授權協議，只有開源協議，那微軟不需要給他們付任何的錢。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：這個太牛了，我從版本 3 就開始用，真是見證了牛逼的過程，這可是一個個人的項目啊&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：微軟為什麼不用它投資的 OpenAI 呢&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：可我還是解決不了 rwkv 復讀機問題，中文比英文嚴重&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：可能微軟解決了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：竟，如此🐂🍺&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fq0LXvMeaVi0yMVz4_WVA8w&quot; target=&quot;_blank&quot;&gt;Java 程序員進國企，入職 3 個月還沒碰過代碼&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：趕緊跑路，跑路的時候咱倆置換下&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：想保持技術建議業餘時間參與開源項目&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：才三個月就坐不住了，你不適合大國企&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：國企的 IT 一般都是外包，本職工作是甲方去對接，不是寫代碼&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：這不叫凡爾賽啥叫凡爾賽&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：你不適合國企，換我來吧，我把互聯網公司的崗位給你，能讓你天天開心的寫很多代碼！很靈的，跟你匹配度非常高，來吧置換吧！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：欠卷&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：技術人員沒有閒的時候，開源技術，前沿技術，這些技術儲備能幹的活太多了，要有自己的思路，沒思路永遠是給別人幹。年少不珍惜好環境，後悔了再找真就沒有了，不過有些人確實不適合，只適合被安排的工作。還是找個適合自己的更重要。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：這不比寫 Java 強？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：找時間提升自己以後去外企可以提升能力也能 WLB&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310791</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310791</guid>
            <pubDate>Fri, 06 Sep 2024 13:12:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>HarmonyOS ArkUI 工程框架解析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section data-mpa-powered-by=&quot;yiban.io&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;&quot;&gt; 
  &lt;img class=&quot;rich_pages wxw-img __bg_gif&quot; data-backh=&quot;96&quot; data-backw=&quot;578&quot; data-cropselx1=&quot;0&quot; data-cropselx2=&quot;578&quot; data-cropsely1=&quot;0&quot; data-cropsely2=&quot;96&quot; data-imgfileid=&quot;503052169&quot; data-ratio=&quot;0.16666666666666666&quot; src=&quot;https://oscimg.oschina.net/oscnet/a9a34e77-55a3-4c9a-86ac-3e4ea58f99d7.gif&quot; data-type=&quot;gif&quot; data-w=&quot;636&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 677px !important;visibility: visible !important;background-size: 16px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;section data-mpa-template=&quot;t&quot; data-mpa-template-id=&quot;502&quot; data-mpa-category=&quot;模板&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt; 
  &lt;section data-mpa-category=&quot;模板&quot; data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;&quot;&gt; 
   &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;&quot;&gt; 
    &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;&quot;&gt; 
     &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
    &lt;/section&gt; 
    &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;&quot;&gt; 
     &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-right: 7px;outline: 0px;text-align: left;visibility: visible;&quot;&gt; 
      &lt;p data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &amp;quot;PingFang SC&amp;quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;/p&gt; 
     &lt;/section&gt; 
     &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;&quot;&gt; 
      &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section data-mid=&quot;&quot; style=&quot;-webkit-tap-highlight-color: transparent;padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;&quot;&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通過 HarmonyOS Developer 官網我們可以瞭解 ArkUI 是一套聲明式開放框架，開發者可以基於 ArkTS 語法設計一套極簡的 DSL 以及豐富的 UI 組件完成跨設備的界面開發。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;那麼 ArkUI 是如何實現這一套聲明式開放框架的呢？本文將通過分析開源的 HarmonyOS 渲染引擎 AceEngine 代碼以及配套工程能力來進行詳細解讀。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;margin-top: 8px;margin-bottom: 8px;min-height: 24px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本篇文章僅先針對響應式和工程化進行淺談。&lt;/span&gt;&lt;/p&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052168&quot; data-ratio=&quot;0.3161764705882353&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/a0fdf3aa-4f25-4560-b8b9-722feaf0a594.png&quot; data-type=&quot;png&quot; data-w=&quot;408&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;&quot;&gt;響應式&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;&quot;&gt; 
  &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h4_1&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;從一個示例來看響應式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;下面是筆者通過 DevEcoStudio 開發者工具模板實例化出來的一個 HelloWorld 實例，從這個簡單的片段中我們可以看出來結構體中的&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;message&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;就是驅動數據，在&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;onClick&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;事件中更改值時，會觸發界面發生更新。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;typescript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Entry&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__meta&quot;&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;struct Index {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__meta&quot;&gt;@State&lt;/span&gt; message: &lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;code-snippet__string&quot;&gt;&#39;Hello World&#39;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  build() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Row() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Text(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          .fontSize(&lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          .fontWeight(FontWeight.Bold)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      .width(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      .onClick(&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Test Reactive&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    .height(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;ArkUI 這套 DSL 封裝了很多註解,讓開發者可以專注在這套聲明式的框架內，不用去關心數據驅動視圖變更的細節。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;為了更加深入瞭解背後的細節，筆者尋找到了這些註解語法糖編譯後的產物，來進行更進一步的分析。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;build/default/cache/default/default@CompileArkTS/esmodule/debug/entry/src/main/ets/pages/Index.js&lt;/span&gt;&lt;/code&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt; 
   &lt;ne-clipboard source=&quot;https%3A%2F%2Faliyuque.antfin.com%2Fdisheng.zzy%2Fvu6t3m%2Feohz6eyfi6wimzf7%3FsingleDoc%23&quot; style=&quot;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);letter-spacing: normal;text-align: start;text-wrap: wrap;&quot;&gt;&lt;/ne-clipboard&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_2&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;產物分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通過產物可以看到更多語法糖背後的實質操作：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;首先可以清晰看到，在編譯後的產物中有針對數據源值的操作，利用重寫&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;Componet&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;屬性描述器&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;get set&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;劫持&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;message&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;的讀寫操作，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;message&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;操作最終落入到了&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;ObserverdPropertySimplePU&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中。因此可以看出 ArkUI 的響應式和 Vue 還是非常相似的，都是通過來 Magic Function 追蹤屬性的讀取。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__class&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;Index&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;ViewPU&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;constructor&lt;/span&gt;(parent, params, __localStorage, elmtId = -&lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;super&lt;/span&gt;(parent, __localStorage, elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.__message = new ObservedPropertySimplePU(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;Hello World&#39;&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;message&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.setInitiallyProvidedValue(params);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }    &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt; message() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.__message.&lt;span class=&quot;code-snippet__keyword&quot;&gt;get&lt;/span&gt;();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt; message(newValue) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.__message.&lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(newValue);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  initialRender() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation((elmtId, isInitialRender) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Row.create();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Row.height(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Row.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation((elmtId, isInitialRender) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column.create();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column.width(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Column.onClick(() =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message = &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Test Reactive&quot;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Column.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation((elmtId, isInitialRender) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Text.create(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.message);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Text.fontSize(&lt;span class=&quot;code-snippet__number&quot;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      Text.fontWeight(FontWeight.Bold);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        Text.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Text.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Column.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    Row.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_3&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;追蹤依賴的過程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在數據被讀取的過程中，將當前正在渲染的元素加入到&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;dependentElmtIdsByProperty_&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中去。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cs&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;   * during &#39;get&#39; access recording take note of the created component and its elmtId&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;   * and add this component to the list of components who are dependent on this property&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__comment&quot;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;recordPropertyDependentUpdate&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;&lt;/span&gt;) : &lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; elmtId = &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.getRenderingElmtId();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dependentElmtIdsByProperty_.addPropertyDependency(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;回看產物代碼中的初始函數，每個節點的構建都形成了一個閉包函數並傳入到&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;observeComponentCreation&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.observeComponentCreation(&lt;span class=&quot;code-snippet__function&quot;&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;elmtId, isInitialRender&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            ViewStackProcessor.StartGetAccessRecordingFor(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Row.create();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            Row.height(&lt;span class=&quot;code-snippet__string&quot;&gt;&#39;100%&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!isInitialRender) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                Row.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            ViewStackProcessor.StopGetAccessRecording();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        });&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;同時在&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;observeComponentCreation&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中又維護了&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;renderEletIdStack&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;，並且將&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateFunc&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;關聯元素存儲上。整個過程基本和&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;Vue&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;創建&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;Effect&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;和維護 Dep 的過程類似。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; observeComponentCreation(compilerAssignedUpdateFunc: UpdateFunc): void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; updateFunc = (elmtId: number, isFirstRender: boolean) =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.currentlyRenderedElmtIdStack_.push(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      compilerAssignedUpdateFunc(elmtId, isFirstRender);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.currentlyRenderedElmtIdStack_.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; elmtId = ViewStackProcessor.AllocateNewElmetIdForNextComponent();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.updateFuncByElmtId.&lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(elmtId, { updateFunc: updateFunc });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    UINodeRegisterProxy.ElementIdToOwningViewPU_.&lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(elmtId, new WeakRef(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      updateFunc(elmtId, &lt;span class=&quot;code-snippet__comment&quot;&gt;/* is first render */&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;catch&lt;/span&gt; (error) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__comment&quot;&gt;// avoid the incompatible change that move set function before updateFunc.&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.updateFuncByElmtId.delete(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      UINodeRegisterProxy.ElementIdToOwningViewPU_.delete(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;throw&lt;/span&gt; error;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;雖然 ArkUI 與 Vue 在某些方面存在相似性，但它們之間有一個顯著的差異點。自 Vue 2.x 版本以後，Vue 對響應式綁定的處理變得更加粗獷，限制了更新的精細程度到組件層級，並且融入了 VDOM 的概念以及組件級 DIFF。相比之下，ArkUI 作為聲明式 UI 框架，卻採取了一種更為「傳統」的路徑，直接聚焦於細粒度的屬性更新綁定，從而在機制上與 Vue 的這一演變形成對比。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_4&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;為什麼 ArkUI 要拋棄 DIFF？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;回顧 ArkUI 官網的描述，它進一步證實了筆者從源碼分析中的發現：ArkUI 採取了一種策略，從 VDOM DIFF 「回撤」到細粒度的更新，以此來優化性能。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;ArkUI 選擇繞過傳統的 DIFF 算法，部分原因可能在於 VDOM 可能帶來的內存消耗及更新延遲問題。它追求更細粒度的更新管理，以提升性能和響應速度。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-backh=&quot;172&quot; data-backw=&quot;578&quot; data-imgfileid=&quot;503052171&quot; data-ratio=&quot;0.2972222222222222&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1c4a87a-eec8-4a93-aa63-a7e3a2d72b2e.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 100%;height: auto;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;讓我們從 js-framework-benchmark 中挑選若干典型框架的測試結果，以此來深入瞭解 VDOM DIFF 技術與其他技術路徑在內存佔用和響應時間上的性能差異。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;內存佔用&lt;/span&gt; 
   &lt;/section&gt;&lt;p&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;從下圖中可以看到 Vue 和 React 在內存佔用上明顯落後 SolidJS 和 Svelte：&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503052172&quot; data-ratio=&quot;0.8385093167701864&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/e1a3bfd1-dcc9-4b13-a8e6-0cbaa1a936a5.png&quot; data-type=&quot;png&quot; data-w=&quot;483&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;響應時間&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);font-size: 15px;letter-spacing: 1px;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;儘管 Vue 的 DIFF 過程歷經眾多策略與細節優化，但在響應時間上，與一些未採用 DIFF 機制的框架相比較，仍存在差異。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503052173&quot; data-ratio=&quot;1.2161339421613395&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/934b60d7-7bee-4c15-953b-3343880ca704.png&quot; data-type=&quot;png&quot; data-w=&quot;657&quot; style=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;Vue2.x 選用 VDOM 是否明智？&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;從性能和跨平台的角度審視，Vue2.x 採用虛擬 DOM（VDOM）的決策似乎缺乏充分理由。特別是考慮到 Vue3.x 的實驗性版本 Vue Vapor Mode（無虛擬 DOM 模式），它在性能上已展現出不亞於 VDOM 的表現，這進一步引發了 VDOM 必要性的討論。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-imgfileid=&quot;503052174&quot; data-ratio=&quot;5.781512605042017&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/ba529f98-8590-48f0-8346-dc9140c544a2.png&quot; data-type=&quot;png&quot; data-w=&quot;119&quot; style=&quot;width: 91px;height: 526px;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_5&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;為什麼&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;要將聲明式的語法平鋪？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;我們先來看看 SolidJS 的產物。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;xml&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;code-snippet__attr&quot;&gt;onClick&lt;/span&gt;=&lt;span class=&quot;code-snippet__string&quot;&gt;{increment}&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;     &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;123&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{count() + 1}&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;{count()}&lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__tag&quot;&gt;&amp;lt;/&lt;span class=&quot;code-snippet__name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;ruby&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;var _el$ = _tmpl$(),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$2 = _el$.firstChild,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$3 = _el$2.firstChild,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$4 = _el$3.nextSibling,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      _el$5 = _el$2.nextSibling;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    _el$.$$click = increment;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;_&lt;/span&gt;$insert(_el$4, () =&amp;gt; count() + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__number&quot;&gt;_&lt;/span&gt;$insert(_el$5, count);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; _el$;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;SolidJS 選擇了在棧上即時創建較多的臨時變量，而非增加堆棧深度，以此來優化運行時性能。它的語法設計允許直觀地表達 UI 結構的嵌套，但實質上並不導致因語法嵌套而引起的堆棧過深問題，從而避免了因堆棧層次過多而導致的不必要的上下文創建與性能開銷。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;這種做法與 ArkUI 有相似之處，提示我們在編程實踐中應謹慎設計，以減少不必要的抽象層級，防止堆棧深度無謂增加。然而，ArkUI 採取了一種不同的策略，它通過堆棧的入棧和出棧來跟蹤節點的層次和嵌套結構。值得注意的是，ArkUI 為每個組件創建節點時都應用了&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;observeComponentCreation&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;進行包裹，甚至包括那些未使用變量符號標記的節點。從優化角度看，這一做法可能存在過度包裝的問題，筆者認為有進一步精簡和優化的空間。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;span id=&quot;OSC_h4_6&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;響應式更新&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;對於響應式的更新，ArkUI 就做的比較簡單。下面兩段是比較核心的代碼：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;set&lt;/span&gt;(newValue: T): void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; oldValue = &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.wrappedValue_;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.setValueInternal(newValue)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      TrackedObject.notifyObjectValueAssignment(&lt;span class=&quot;code-snippet__comment&quot;&gt;/* old value */&lt;/span&gt; oldValue, &lt;span class=&quot;code-snippet__comment&quot;&gt;/* new value */&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.wrappedValue_,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.notifyPropertyHasChangedPU,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.notifyTrackedObjectPropertyHasChanged, &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;protected&lt;/span&gt; notifyPropertyHasChangedPU() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.owningView_.viewPropertyHasChanged(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.info_, &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dependentElmtIdsByProperty_.getAllPropertyDependencies());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }  &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;viewPropertyHasChanged(varName: PropertyInfo, dependentElmtIds: Set&amp;lt;number&amp;gt;): void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.markNeedUpdate();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; elmtId of dependentElmtIds) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dirtDescendantElementIds_.add(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在關聯的屬性變化後 ArkUI 會將當前組件標記為髒組件，並且將屬性依賴收集到的&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;dependentElmtids&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;維護到組件的&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;dirtDescendantElementIds_&lt;/span&gt;&lt;/code&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在筆者從這裏來 AkrUI 的升級並未完全到位，它仍然將響應式流程與組件緊密綁定在一起，未能在框架側落地無組件（NoComponent）的設計理念。&lt;strong&gt;一般而言，節點與組件的綁定是為了給 DIFF 過程設定界限，從而縮小比較範圍，提高效率。然而，在當前場景下，這種綁定顯得多餘。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateDirtyElements&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;消費髒節點，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;UpdateElement&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中獲取到&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateFuncs&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中存儲的更新函數。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;kotlin&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; updateDirtyElements() {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      dirtElmtIdsFromRootNode.forEach(elmtId =&amp;gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.hasRecycleManager()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.UpdateElement(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.recycleManager_.proxyNodeId(elmtId));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        } &lt;span class=&quot;code-snippet__keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;          &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.UpdateElement(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dirtDescendantElementIds_.delete(elmtId);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;      });&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;.dirtDescendantElementIds_.size);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;而&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;updateDirtyElements&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;被 Native 的&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;JSView&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;關聯的 Node 持有。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;markdown&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;auto updateFunction = [&lt;span class=&quot;code-snippet__string&quot;&gt;weak = AceType::WeakClaim(this)&lt;/span&gt;](&lt;span class=&quot;code-snippet__link&quot;&gt;&lt;/span&gt;) -&amp;gt; void {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        auto jsView = weak.Upgrade();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        if (!jsView-&amp;gt;needsUpdate_) {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;            return;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        jsView-&amp;gt;needsUpdate_ = false;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;        jsView-&amp;gt;jsViewFunction_-&amp;gt;ExecuteRerender();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__code&quot;&gt;    };&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;customNode-&amp;gt;SetUpdateFunction(std::move(info.updateFunc));&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;上文中説到的組件&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 16px;&quot;&gt;markNeedUpdate&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最終也會調用到&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 16px;&quot;&gt;JSView&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;背後的 Node 的方案。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt; ViewPartialUpdateModelNG::MarkNeedUpdate(&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; WeakPtr&amp;lt;AceType&amp;gt;&amp;amp; node)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    customNode-&amp;gt;MarkNeedUpdate();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最終會將 Node 註冊進入渲染管線&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;background-color: rgb(247, 247, 247);font-size: 15px;&quot;&gt;PipelineContext&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;中的髒節點集合中。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; CustomNodeBase::MarkNeedUpdate()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; context = PipelineContext::GetCurrentContext();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    context-&amp;gt;AddDirtyCustomNode(AceType::DynamicCast&amp;lt;UINode&amp;gt;(Claim(&lt;span class=&quot;code-snippet__keyword&quot;&gt;this&lt;/span&gt;)));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;最終渲染管線在接受到系統的 vSync 信號回調後清理髒節點。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; PipelineContext::FlushVsync(&lt;span class=&quot;code-snippet__keyword&quot;&gt;uint64_t&lt;/span&gt; nanoTimestamp, &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint32_t&lt;/span&gt; frameCount){&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  FlushBuild();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;php&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;void PipelineContext::FlushDirtyNodeUpdate()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (!dirtyNodes_.&lt;span class=&quot;code-snippet__keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; auto&amp;amp; node : dirtyNodes) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (AceType::InstanceOf&amp;lt;NG::CustomNodeBase&amp;gt;(node)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                auto customNode = AceType::DynamicCast&amp;lt;NG::CustomNodeBase&amp;gt;(node);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                node-&amp;gt;needRebuild_ = &lt;span class=&quot;code-snippet__keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (node-&amp;gt;updateFunc_) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    node-&amp;gt;updateFunc_();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;至此，一個基本的響應式流程得以完成。不難發現，ArkUI 的響應式架構及其更新機制，都展現了與市面上成熟響應式框架相似的特質。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;pre style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &amp;quot;Helvetica Neue&amp;quot;, Helvetica, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;code&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;visibility: visible;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052175&quot; data-ratio=&quot;0.3056872037914692&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/4a924c03-206a-40ca-94b8-fba0150afd41.png&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);visibility: visible;line-height: normal;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;工程化&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_7&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;color: rgb(0, 17, 255);-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;TypeScript 超集&quot;ohos-typescript&quot;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;/h4&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通過逆向分析 DevEcoStudio 中的多種插件 Jar 包，我們發現 ArkUI 巧妙地對現有各類語言的插件進行了定製改造，從而在研發環節實現了這一功能的集成。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;聲明式語法（&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;struct&lt;/span&gt;&lt;/code&gt;&amp;nbsp;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;關鍵詞，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;@Builder&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;,&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Component Inside&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&amp;nbsp;) 研發側實現即將符合條件的詞法節點轉成擴展的語法樹,其中擴展了&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;StructDeclartion&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;EtsComponentExpression&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;font-size: 15px;&quot;&gt;，&lt;/span&gt;&lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;ComponentState&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;等一系列類型 (Intellij 中的 PSI ElementType)。IDE 便能得到一個經過精心調整的抽象語法樹（AST），為代碼導航、語法高亮等高級功能奠定了堅實基礎，也解決了開發者對於這門超集語言研發側的問題。&lt;/span&gt;&lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;如&lt;/span&gt;&lt;code style=&quot;font-size: var(--articleFontsize);letter-spacing: 0.034em;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;strcut 結構&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;, ArkUI 即重寫了 JavaScriptParser 來實現自身的語法分析。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;java&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;structDeclaration&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(PsiBuilder b, &lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; l)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (JavaScriptParserUtil.recursion_guard_(b, l, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;structDeclaration&quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; r2 = r &amp;amp;&amp;amp; structDeclaration_1(b, l + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; r3 = r2 &amp;amp;&amp;amp; JavaScriptParserUtil.consumeTokens(b, &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;code-snippet__keyword&quot;&gt;new&lt;/span&gt; IElementType[]{JavaScriptTypes.STRUCT, JavaScriptTypes.IDENTIFIER});&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;boolean&lt;/span&gt; r4 = r3 &amp;amp;&amp;amp; etsStructClassBlock(b, l + &lt;span class=&quot;code-snippet__number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; r4 || r3;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;DevEcoStudio 的 LSP 服務其實是繼承 TypeScriptLanguageServer 進行的，在其中又拓寬了一些自定義的 ESLint 規則。整體架構基本和 Idea 原生 JavaScript 插件保持一致,通過新起一個 Node 進程構建 LSP 協議的通信。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;總結來看，在研發側不管是語言插件還是 LSP 服務，ArkUI 利用許多原有的 TypeScript 生態能力來包裝完成。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_8&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;語法糖處理過程&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;通過上文對於產物的分析，在瞭解 ArkTS 的編譯鏈路時筆者看到下面的處理方式也就不足為奇，ArkTS 的打包整體由 Rollup 完成，其中核心 ets 文件的 loader 也是直接複用了 ts compiler 邏輯，注意這裏的 ts 指&amp;nbsp;ohos-typescript,利用 loader before 的 hook 提前處理好語法糖以及響應式相關的包裝。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;properties&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-snippet__string&quot;&gt;result: ts.TranspileOutput = ts.transpileModule(newContent, {&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;compilerOptions&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;compilerOptions,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;fileName&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;id,&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__attr&quot;&gt;transformers&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;{ before: [ processUISyntax(null) ] }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__attr&quot;&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;&quot;&gt;同時 ohos-typescript 中還提供擴展了&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&amp;nbsp;&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;ts.isStructDeclaration,ts.isEtsComponentExpression&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;節點判斷函數的輔助解析這棵超集樹。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;下面舉兩個轉換的例子：&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;1.&amp;nbsp;&lt;/span&gt; 
  &lt;code style=&quot;font-size: var(--articleFontsize);letter-spacing: 0.034em;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;struct Index&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;轉變為&lt;/span&gt; 
  &lt;code style=&quot;font-size: var(--articleFontsize);letter-spacing: 0.034em;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;class Index extends ViewPU&lt;/span&gt;&lt;/code&gt; 
 &lt;/section&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;bash&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (ts.isStructDeclaration(node)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__built_in&quot;&gt;return&lt;/span&gt; ts.factory.createClassDeclaration(ts.getModifiers(node), node.name,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                                           node.typeParameters, updateHeritageClauses(node, &lt;span class=&quot;code-snippet__built_in&quot;&gt;log&lt;/span&gt;), memberNode);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;} &lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;ts.factory.createHeritageClause(&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  ts.SyntaxKind.ExtendsKeyword,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  [ts.factory.createExpressionWithTypeArguments(ts.factory.createIdentifier(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;ViewPU&quot;&lt;/span&gt;), [])]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;2. 嵌套語法的平鋪過程&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本質是一個語法樹的遞歸的遍歷過程，通過維護頂層的 Statements 按需塞入，來實現平鋪。&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;javascript&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__function&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;code-snippet__title&quot;&gt;processNormalComponent&lt;/span&gt;(&lt;span class=&quot;code-snippet__params&quot;&gt;node: ts.ExpressionStatement,.....&lt;/span&gt;): &lt;span class=&quot;code-snippet__title&quot;&gt;void&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; newStatements: ts.Statement[] = [];&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; res: CreateResult = createComponent(node, COMPONENT_CREATE_FUNCTION);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  newStatements.push(res.newNode);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; etsComponentResult: EtsComponentResult = parseEtsComponentExpression(node);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; componentName: string = res.identifierNode.getText();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (etsComponentResult.etsComponentNode.body &amp;amp;&amp;amp; ts.isBlock(etsComponentResult.etsComponentNode.body)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    processComponentChild(etsComponentResult.etsComponentNode.body, innerCompStatements, log,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                          {&lt;span class=&quot;code-snippet__attr&quot;&gt;isAcceleratePreview&lt;/span&gt;: &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;line&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;column&lt;/span&gt;: &lt;span class=&quot;code-snippet__number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;code-snippet__attr&quot;&gt;fileName&lt;/span&gt;: &lt;span class=&quot;code-snippet__string&quot;&gt;&#39;&#39;&lt;/span&gt;}, isBuilder, parent, &lt;span class=&quot;code-snippet__literal&quot;&gt;    &lt;/span&gt;,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                          isGlobalBuilder, &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;, builderParamsResult);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;span id=&quot;OSC_h4_9&quot;&gt;&lt;/span&gt; 
 &lt;h4 data-lake-id=&quot;ca6fa186228ff7efaa653334195896c8&quot; data-wording=&quot;true&quot; style=&quot;margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;▐&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;visibility: visible;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;&quot;&gt;調適能力&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;&quot;&gt;ArkTS 語言的調試功能依託於&lt;/span&gt;&amp;nbsp;&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;arkcompiler_ets_runtime&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;letter-spacing: 1px;&quot;&gt;&amp;nbsp;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;&quot;&gt;虛擬機來實現，與傳統依賴「插樁」等技術的調試方式不同，解釋器虛擬機往往採取了一種更為輕量級的處理策略。具體到實現細節，讓我們深入瞭解其如何巧妙地幹預字節碼操作符執行以實現斷點功能。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在虛擬機運行的核心流程&lt;/span&gt; 
  &lt;code style=&quot;font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace;background-color: rgba(0, 0, 0, 0.06);border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.08);border-radius: 2px;padding-right: 2px;padding-left: 2px;&quot;&gt;&lt;span style=&quot;font-size: 15px;letter-spacing: 1px;&quot;&gt;RunInternal&lt;/span&gt;&lt;/code&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;方法內部，當系統處於調試模式下，會轉向一個特殊的調度表。這一轉換旨在讓原本的操作符執行路徑受一個新的、專為調試設計的路由控制。在此機制下，系統不僅能靈活地管理操作符的執行流向，還會檢查當前操作符是否觸發了預設的斷點條件，從而精確控制程序的暫停與繼續執行，整個過程流暢而高效。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; EcmaInterpreter::RunInternal(JSThread *thread, &lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint8_t&lt;/span&gt; *pc, JSTaggedType *sp)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint8_t&lt;/span&gt; opcode = READ_INST_OP();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; *dispatchTable = instDispatchTable.data();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__comment&quot;&gt;// 在調試模式下切換到一張新的 OP Debug 路由表&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    CHECK_SWITCH_TO_DEBUGGER_TABLE();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;goto&lt;/span&gt; *dispatchTable[opcode];&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;DEBUG_HANDLE_OPCODE(LDNAN)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    NOTIFY_DEBUGGER_EVENT();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    REAL_GOTO_DISPATCH_OPCODE(EcmaOpcode::LDNAN);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;DEBUG_HANDLE_OPCODE(LDINFINITY)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    NOTIFY_DEBUGGER_EVENT();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    REAL_GOTO_DISPATCH_OPCODE(EcmaOpcode::LDINFINITY);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;不同於其他虛擬機通常將調試模塊內置, ArkTS 選擇把調試模塊利用 napi(ets_runtime 的擴展註冊機制) 注入進入虛擬機中，將調試交互協議的具體實現放在&amp;nbsp;arkcompiler_toolchain&amp;nbsp;項目，讓 ets_runtime 也可以輕裝上陣。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;發起 BreakCommand&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;即開發者在面板側選擇某一行進行斷點，這一信息會被記錄在虛擬機容器中。&lt;/span&gt;&lt;/strong&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;在這裏筆者還發現 ets_runtime 調試模塊，原生支持&amp;nbsp;Chrome Debug Protocol&amp;nbsp;協議，為了適配 Intellij 生態做了一層 DAP 和 CDP 的協議交換，可能最初的設計是面向其他研發的場景。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;int&lt;/span&gt; DebuggerClient::BreakCommand()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;PtJson&amp;gt; request = PtJson::CreateObject();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    request-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;id&quot;&lt;/span&gt;, id);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    request-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;method&quot;&lt;/span&gt;, &lt;span class=&quot;code-snippet__string&quot;&gt;&quot;Debugger.setBreakpointByUrl&quot;&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;PtJson&amp;gt; params = PtJson::CreateObject();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    params-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;columnNumber&quot;&lt;/span&gt;, breakPointInfoList_.back().columnNumber);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    params-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;lineNumber&quot;&lt;/span&gt;, breakPointInfoList_.back().lineNumber);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    params-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;url&quot;&lt;/span&gt;, breakPointInfoList_.back().url.c_str());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    request-&amp;gt;Add(&lt;span class=&quot;code-snippet__string&quot;&gt;&quot;params&quot;&lt;/span&gt;, params);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; message = request-&amp;gt;Stringify();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    session-&amp;gt;ClientSendReq(message)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt; JSDebugger::SetBreakpoint(&lt;span class=&quot;code-snippet__keyword&quot;&gt;const&lt;/span&gt; JSPtLocation &amp;amp;location, Local&amp;lt;FunctionRef&amp;gt; condFuncRef)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;unique_ptr&lt;/span&gt;&amp;lt;PtMethod&amp;gt; ptMethod = FindMethod(location);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; [_, success] = breakpoints_.emplace(location.GetSourceFile(), ptMethod.release(),&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        location.GetBytecodeOffset(), Global&amp;lt;FunctionRef&amp;gt;(ecmaVm_, condFuncRef));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;ul class=&quot;list-paddingleft-1&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;width: 577.422px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);min-height: 24px;visibility: visible;line-height: 1.75em;&quot;&gt; 
  &lt;li style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);letter-spacing: 1px;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;&quot;&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;&quot;&gt;落入 Break&lt;/span&gt; 
   &lt;/section&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;strong&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;運行字節碼映射到設置的節點。&lt;/span&gt;&lt;/strong&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;br&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;ets_runtime 遇到斷點映射到操作符會讓虛擬機進入一種「空轉」狀態，期間不斷接收並執行新的調試指令，這一機制與其他虛擬機的實現方法相似。&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section class=&quot;code-snippet__fix code-snippet__js&quot;&gt; 
  &lt;pre class=&quot;code-snippet__js&quot; data-lang=&quot;cpp&quot;&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; JSDebugger::BytecodePcChanged(JSThread *thread, JSHandle&amp;lt;Method&amp;gt; method, &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint32_t&lt;/span&gt; bcOffset)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!HandleStep(method, bcOffset)) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            HandleBreakpoint(method, bcOffset);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt; &lt;span class=&quot;code-snippet__keyword&quot;&gt;bool&lt;/span&gt; JSDebugger::HandleBreakpoint(JSHandle&amp;lt;Method&amp;gt; method, &lt;span class=&quot;code-snippet__keyword&quot;&gt;uint32_t&lt;/span&gt; bcOffset)&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; breakpoint = FindBreakpoint(method, bcOffset);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (hooks_ == &lt;span class=&quot;code-snippet__literal&quot;&gt;nullptr&lt;/span&gt; || !breakpoint.has_value()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    JSPtLocation location {method-&amp;gt;GetJSPandaFile(), method-&amp;gt;GetMethodId(), bcOffset,&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        breakpoint.value().GetSourceFile()};&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    hooks_-&amp;gt;Breakpoint(location);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;span class=&quot;code-snippet__keyword&quot;&gt;void&lt;/span&gt; ProtocolHandler::ProcessCommand()&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;{&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    &lt;span class=&quot;code-snippet__keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::unique_lock&amp;lt;&lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::mutex&amp;gt; queueLock(requestLock_);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (requestQueue_.empty()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                &lt;span class=&quot;code-snippet__keyword&quot;&gt;if&lt;/span&gt; (!waitingForDebugger_) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                    &lt;span class=&quot;code-snippet__keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;                requestQueueCond_.wait(queueLock);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            requestQueue_.swap(dispatchingQueue);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        isDispatchingMessage_ = &lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (!dispatchingQueue.empty()) {&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;code-snippet__built_in&quot;&gt;string&lt;/span&gt; msg = &lt;span class=&quot;code-snippet__built_in&quot;&gt;std&lt;/span&gt;::move(dispatchingQueue.front());&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            dispatchingQueue.pop();&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            [[maybe_unused]] &lt;span class=&quot;code-snippet__function&quot;&gt;LocalScope &lt;span class=&quot;code-snippet__title&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;code-snippet__params&quot;&gt;(vm_)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            &lt;span class=&quot;code-snippet__keyword&quot;&gt;auto&lt;/span&gt; exception = DebuggerApi::GetAndClearException(vm_);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            dispatcher_.Dispatch(DispatchRequest(msg));&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;            DebuggerApi::SetException(vm_, exception);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        }&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;        isDispatchingMessage_ = &lt;span class=&quot;code-snippet__literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;    } &lt;span class=&quot;code-snippet__keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;code-snippet__literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span class=&quot;code-snippet_outer&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;pre style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);visibility: visible;&quot;&gt;&lt;code&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;text-wrap: wrap;text-align: center;visibility: visible;color: rgb(34, 34, 34);line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052176&quot; data-ratio=&quot;0.3056872037914692&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;422&quot; src=&quot;https://oscimg.oschina.net/oscnet/401fb380-f9b4-4028-970d-59cfcf545668.png&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;&lt;p style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;text-wrap: wrap;text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;結語&lt;/span&gt;&lt;/p&gt;&lt;/code&gt;&lt;/pre&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;本文通過對 HarmonyOS ArkUI 的介紹與分析，探討了其作為聲明式開放框架的核心特性和實現機制。而 ArkUI 作為 HarmonyOS 的聲明式 UI 框架，通過獨特的設計思路與實現方式，旨在為開發者提供高效、靈活的跨平台界面開發解決方案。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;503052177&quot; data-ratio=&quot;0.328125&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/592a6e75-6320-400a-aba1-ed9557c5d4bb.png&quot; data-type=&quot;png&quot; data-w=&quot;256&quot; style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;font-family: system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;&quot;&gt;團隊介紹&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;我們是淘天集團-商家&amp;amp;開放平台技術前端團隊，本團隊負責商家平台建設並圍繞淘寶電商 B2C 業務，提供商家應用開放能力，為阿里小程序開發者生態提供高生產力工程化技術產品，打造面向 B 端的桌面/IoT 小程序基礎設施，助力商家規模化增長。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section data-role=&quot;outer&quot; label=&quot;Powered by 135editor.com&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;&quot;&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;&quot;&gt; 
   &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;¤&lt;/strong&gt;&lt;/span&gt; 
   &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;&amp;nbsp;拓展閲讀&amp;nbsp;&lt;/strong&gt;&lt;/span&gt; 
   &lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;color: rgb(0, 17, 255);&quot;&gt;&lt;strong style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;¤&lt;/strong&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &amp;quot;PingFang SC&amp;quot;, Cambria, Cochin, Georgia, Times, &amp;quot;Times New Roman&amp;quot;, serif;text-align: center;line-height: 1.75em;&quot;&gt; 
   &lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;&quot;&gt; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect&quot; textvalue=&quot;3DXR 技術&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;3DXR 技術&lt;/a&gt;&amp;nbsp;|&amp;nbsp; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect&quot; textvalue=&quot;終端技術&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;終端技術&lt;/a&gt;&amp;nbsp;|&amp;nbsp; 
   &lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect&quot; textvalue=&quot;音視頻技術&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;音視頻技術&lt;/a&gt; 
  &lt;/section&gt; 
  &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect&quot; textvalue=&quot;服務端技術&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;服務端技術&lt;/a&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;letter-spacing: 0.544px;&quot;&gt;&amp;nbsp;|&amp;nbsp;&lt;/span&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect&quot; textvalue=&quot;技術質量&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;技術質量&lt;/a&gt;&amp;nbsp;|&amp;nbsp;&lt;a target=&quot;_blank&quot; href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect&quot; textvalue=&quot;數據算法&quot; linktype=&quot;text&quot; imgurl=&quot;&quot; imgdata=&quot;null&quot; tab=&quot;innerlink&quot; data-linktype=&quot;2&quot; style=&quot;outline: 0px;color: var(--weui-LINK);cursor: pointer;&quot;&gt;數據算法&lt;/a&gt;&lt;/p&gt; 
  &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;PingFang SC&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;&quot;&gt;&lt;/p&gt; 
  &lt;section class=&quot;mp_profile_iframe_wrp&quot; style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 24px;outline: 0px;&quot;&gt; 
   &lt;mp-common-profile class=&quot;custom_select_card mp_profile_iframe js_wx_tap_highlight&quot; data-pluginname=&quot;mpprofile&quot; data-id=&quot;MzAxNDEwNjk5OQ==&quot; data-headimg=&quot;http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;amp;wxfrom=19&quot; data-nickname=&quot;大淘寶技術&quot; data-alias=&quot;AlibabaMTT&quot; data-signature=&quot;大淘寶技術官方賬號&quot; data-from=&quot;2&quot; data-index=&quot;0&quot; data-origin_num=&quot;748&quot; data-isban=&quot;0&quot; data-biz_account_status=&quot;0&quot; data-weui-theme=&quot;light&quot; data-is_biz_ban=&quot;0&quot;&gt;&lt;/mp-common-profile&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: transparent;margin-bottom: 0px;outline: 0px;&quot;&gt;&lt;br style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-family: &amp;quot;PingFang SC&amp;quot;, system-ui, -apple-system, &amp;quot;system-ui&amp;quot;, &amp;quot;Helvetica Neue&amp;quot;, &amp;quot;Hiragino Sans GB&amp;quot;, &amp;quot;Microsoft YaHei UI&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;min-height: 24px;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: transparent;outline: 0px;font-size: 15px;visibility: visible;letter-spacing: 1px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;br&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公眾號 - 大淘寶技術（AlibabaMTT）。&lt;br&gt;如有侵權，請聯繫 support@oschina.cn 刪除。&lt;br&gt;本文參與「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源創計劃&lt;/a&gt;」，歡迎正在閲讀的你也加入，一起分享。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4662964/blog/15526100</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/15526100</guid>
            <pubDate>Fri, 06 Sep 2024 09:02:03 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Visual Studio Code 1.93 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#333333&quot;&gt;Visual Studio Code 1.93 已&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;&lt;span style=&quot;color:#333333&quot;&gt;，具體更新內容如下：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_new-profiles-editor&quot; target=&quot;_blank&quot;&gt;Profiles editor&lt;/a&gt;&amp;nbsp;- 從一個地方切換和管理你的配置文件。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新的 Profiles 編輯器現在可在 Visual Studio Code 中全面使用。此體驗包括創建新配置文件、編輯和刪除現有配置文件以及導入和導出配置文件以與他人共享。有關更多信息，可參閲 Profiles&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fdocs%2Feditor%2Fprofiles&quot; target=&quot;_blank&quot;&gt;文檔&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;316&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2a086557321282bf470f71d9a22b9b40263.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_django-unit-test-support&quot; target=&quot;_blank&quot;&gt;Django 單元測試支持&lt;/a&gt;&amp;nbsp;- 從 Test Explorer 發現並運行 Django 單元測試。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;228&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ca96116b93a29f7cc55df3db6423499c18a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_full-project-intellisense-and-package-typings-on-vscodedev&quot; target=&quot;_blank&quot;&gt;vscode.dev 上的 IntelliSense&lt;/a&gt;&amp;nbsp;- 使用 IntelliSense 提升 vscode.dev 中的 JS 和 TS 編碼效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Chrome、Microsoft Edge 和 Firefox 支持 Package typings 和完整的&amp;nbsp;project IntelliSense。Safari 尚不受支持，因為它未實現&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FReadableByteStreamController&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;ReadableByteStreamController&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;238&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-641f233044b5da52c79fe59fd6cdd82d74d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;248&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6ec2f4fb24aab147d91611ed3c5c4e86d7e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_show-or-hide-unchanged-cells-in-the-diff-view&quot; target=&quot;_blank&quot;&gt;Notebook diff viewer&lt;/a&gt;&amp;nbsp;- 通過摺疊未更改的單元格有效地查看 Notebook 中的更改。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;372&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-76ebecab6acf719c4cc1e7db48d60991721.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_resize-table-columns-via-the-keyboard&quot; target=&quot;_blank&quot;&gt;通過鍵盤調整列大小&lt;/a&gt;&amp;nbsp;- 通過鍵盤可以更輕鬆地調整 VS Code 中的表列大小。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;新命令&lt;code&gt;list.resizeColumn&lt;/code&gt;可讓你使用鍵盤調整列大小。觸發此命令時，選擇要調整大小的列並提供要設置的寬度百分比。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;201&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-766a2d825318281862b47bd49dac2db700d.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_source-control-graph-view&quot; target=&quot;_blank&quot;&gt;Source Control Graph&lt;/a&gt;&amp;nbsp;- 輕鬆隱藏、摺疊或移動 Source Control Graph。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#333333&quot;&gt;將上一個里程碑啓用的 history graph 從 Source Control 視圖移至名為&amp;nbsp;&lt;strong&gt;Source Control Graph &lt;/strong&gt;的新視圖。這減少了主視圖的信息過載，並使用户能夠根據需要隱藏/摺疊/移動新視圖。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;314&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6743ba13f410b4294788d41d98628adac13.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_github-copilot-override&quot; target=&quot;_blank&quot;&gt;GitHub Copilot&lt;/a&gt;&amp;nbsp;- 在快速聊天中添加上下文，改進測試生成和聊天曆史記錄。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;209&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-981bbe092c211c0d13779571d456dbd1d94.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93%23_code-generation-instructions&quot; target=&quot;_blank&quot;&gt;實驗性：自定義 Copilot 指令&lt;/a&gt;&amp;nbsp;- 為 Copilot 定義特定的代碼生成指令。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a5c932a26ee41e6e21562543b47177e1bac.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;更多詳情可&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_93&quot; target=&quot;_blank&quot;&gt;查看發佈公告&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310721/vs-code-1-93-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310721/vs-code-1-93-released</guid>
            <pubDate>Fri, 06 Sep 2024 07:50:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenBMC 成服務器固件發展的「事實標準」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;近年來隨着雲計算、大數據特別是大模型的快速發展，數據中心規模不斷擴張，產生了更多的服務器管理需求。&lt;/p&gt; 
&lt;p&gt;傳統 BMC 雖然可以實現部分管理，但是在快速迭代的當今尤其是在 AI 技術的驅動下，存在開發週期長、交付困難、應用單一等難題，並且由於其代碼閉源也會導致隱藏的安全漏洞無法及時識別，限制了用户定製開發。&lt;/p&gt; 
&lt;p&gt;OpenBMC 憑藉領先的開源理念、可擴展的軟件架構，被大型互聯網廠商廣泛應用，並帶動了產業連上下游共同探索，逐步成為服務器固件發展的「事實標準」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://static.oschina.net/uploads/img/202409/06151327_gW9s.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在日前召開的 2024 開放計算中國峯會上，來自阿里雲、字節跳動、浪潮信息和英特爾等公司的專家分享了各自在 OpenBMC 方面的最新進展及未來規劃。&lt;/p&gt; 
&lt;p&gt;阿里雲自 2020 年逐步採用 OpenBMC 產品，通過四年的探索與實踐，已經在 x86 和 ARM 平台中實現 OpenBMC 替代，並計劃未來支持 RISC-V 等多元芯片平台。&lt;/p&gt; 
&lt;p&gt;字節跳動通過加強對固件運行時軟硬件狀態的深入觀察和理解，大幅提升問題定位分析效率。&lt;/p&gt; 
&lt;p&gt;浪潮信息發佈基於 OpenBMC 的 InBry 管理固件平台，為用户提供開放、穩定、可靠的 BMC 管理固件。浪潮信息更提出「分層解耦」的理念，實現多元化技術賦能。&lt;/p&gt; 
&lt;p&gt;英特爾持續推動 OpenBMC 技術創新，為客户提供接口實現功能上的定製化需求，同時優化安全性和能耗管理。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310712</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310712</guid>
            <pubDate>Fri, 06 Sep 2024 07:13:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>KDE 發佈 2023 年度報告：再次虧損</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;KDE 2023 年年度報告現已&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkde.org%2Fannouncements%2Freport_2023%2F&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;，對過去一年所取得的成就、以及資金的籌集與花費等內容進行了總結。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;KDE 是一個國際技術團隊，產品包括適用於 Linux 和 UNIX 平台的現代桌面系統、全面的辦公生產力和羣件套件以及數百種軟件，涵蓋互聯網和網絡應用程序、多媒體、娛樂、教育、圖形和軟件開發等多個類別。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;報告指出，KDE 在 2023 年的工作重點主要集中在構建 Plasma 6 方面，完成了很多出色的軟件開發工作。在 5 月份的一場會議中，Plasma 團隊討論了向 KF6 的過渡及其對 KDE 框架內依賴管理的影響。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中一個重大變化是重組了 colour scheme classes，以減少對&lt;code&gt;Qt::Widgets&lt;/code&gt;的不必要依賴，特別是對於基於 QML 的移動應用程序。這種重組提高了效率並減少了軟件包的大小--尤其是對於 Android APK 而言，它們可以佔到軟件包總大小的 20-25%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;但值得一提的是，KDE 在&amp;nbsp;2023 年的年收入仍略低於預期；總成本高於前幾年，主要原因是人員費用和活動相關費用。細分來看，企業支持和個人捐款仍然是其重要的收入來源，其中個人捐款增長尤為顯著。但一些傳統來源（如 Google Summer of Code）的收入略有下降。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;387&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5cf262499217ee79a5e626a9630aa1af7ba.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;具體來説，2023 年期間 KDE 的收入為 349,332.65 歐元，支出總額為 457,071.31 歐元。僅人事費用就花費了 31.7 萬歐元，另外 4.3 萬歐元用於 Akademy 會議，1.2 萬歐元用於 springs，2 萬歐元用於其他活動，2.2 萬歐元用於税收/保險，以及 1.7 萬歐元用於基礎設施。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2022 年，KDE 的收入為 285 495.97 歐元，支出為 384 604.78 歐元。而在 2021 年，KDE 的收入為 238,929.67 歐元，支出僅為 218,396.75 歐元。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 2024 年，KDE&amp;nbsp;的預算計劃重點是在不大幅擴張的情況下保持現有的活動水平。目標是進一步增加收入，同時控制支出增長，將儲備金消耗率降低 18% 或更高。長期目標是在幾年內實現預算平衡（收支平衡），及時保留充足的儲備金，確保組織的可持續發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「總而言之，2023 年是 KDE eV 穩步增長和精心規劃的一年。展望未來，我們的重點仍然是確保我們的財務策略支持我們的使命和 KDE 社區的持續工作。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310699/kde-report-2023</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310699/kde-report-2023</guid>
            <pubDate>Fri, 06 Sep 2024 06:30:27 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>vim 裏自動縮進 tabstop 的問題</title>
            <description>&lt;h1 class=&quot;header article-title&quot;&gt;
                    &lt;a href=&quot;https://www.oschina.net/question/7101932_2333612&quot;&gt;vim 裏自動縮進 tabstop 的問題,一次用 vim?&lt;/a&gt;
                                            &lt;div class=&quot;ui red label horizontal&quot; data-tooltip=&quot;置頂&quot;&gt;頂&lt;/div&gt;
                                                                            &lt;/h1&gt;

                &lt;div class=&quot;extra ui horizontal list meta-wrap&quot;&gt;
                    &lt;div class=&quot;item&quot;&gt;
                        &lt;a href=&quot;https://my.oschina.net/u/7101932&quot; class=&quot;__user&quot;&gt;&lt;span&gt;Codigger 官方&lt;/span&gt;&lt;/a&gt; 發佈於，今天 11:54
                    &lt;/div&gt;
                    &lt;div class=&quot;item&quot;&gt;閲讀 168&lt;/div&gt;
                    &lt;div class=&quot;item collect-btn &quot; data-id=&quot;2333612&quot; data-user-id=&quot;7101932&quot; data-obj-type=&quot;2&quot; data-max=&quot;99&quot; data-tag-required=&quot;&quot; data-current-user-id=&quot;&quot; data-recommend-tags=&quot;&quot;&gt;&lt;i class=&quot;star outline icon&quot;&gt;&lt;/i&gt; 收藏 &lt;span data-collect-count=&quot;&quot; data-id=&quot;2333612&quot; data-obj-type=&quot;2&quot;&gt;0&lt;/span&gt;&lt;/div&gt;
                    &lt;div class=&quot;item comment-count&quot;&gt;&lt;a href=&quot;https://www.oschina.net/question/7101932_2333612#comments&quot; class=&quot;normal&quot;&gt;&lt;i class=&quot;comment outline icon&quot;&gt;&lt;/i&gt; 答案 &lt;span data-article-reply-count=&quot;&quot;&gt;0&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;
                                                                                
                                                        &lt;/div&gt;

                                
                                
                                &lt;div class=&quot;content&quot; id=&quot;articleContent&quot;&gt;
                                                                &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#252933&quot;&gt;vim 裏自動縮進 tabstop 的問題,&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#252933&quot;&gt;一次用 vim，開啓了 c 語言的自動縮進 cindent，默認的 tabstop 是 8 空格，太長了，我把 tabstop 也設置成了 2，在 vim 下面顯示正常，可是程序保存之後用 txt 打開自動縮進還是 8，直接複製粘貼了還是這樣，下面該腫麼辦？&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;

                                &lt;div class=&quot;poll-wrap&quot;&gt;
                                    &lt;/div&gt;

                                &lt;div class=&quot;additional-remarks&quot;&gt;
                    

                &lt;/div&gt;

                                &lt;div class=&quot;ui basic center aligned segment action&quot;&gt;
                    &lt;div class=&quot;ui big buttons&quot;&gt;
                        &lt;a class=&quot;ui basic button collect-btn hover&quot; data-id=&quot;2333612&quot; data-user-id=&quot;7101932&quot; data-obj-type=&quot;2&quot; data-max=&quot;99&quot; data-tag-required=&quot;&quot; data-current-user-id=&quot;&quot; data-recommend-tags=&quot;&quot;&gt;&lt;i class=&quot;star outline icon&quot;&gt;&lt;/i&gt;收藏 (&lt;span data-collect-count=&quot;&quot; data-id=&quot;2333612&quot; data-obj-type=&quot;2&quot;&gt;0&lt;/span&gt;)&lt;/a&gt;
                        &lt;div class=&quot;ui basic dropdown share button osc-share dropdown-share&quot; data-tag=&quot;share-question&quot;&gt;
                            &lt;i class=&quot;share icon&quot;&gt;&lt;/i&gt; &lt;span&gt;分享&lt;/span&gt;
                            &lt;div class=&quot;menu&quot;&gt;
                                &lt;a class=&quot;item&quot; data-platform=&quot;weibo&quot; data-value=&quot;weibo&quot;&gt;&lt;i class=&quot;weibo icon&quot;&gt;&lt;/i&gt;微博&lt;/a&gt;
                                &lt;a class=&quot;item&quot; data-platform=&quot;qq&quot; data-value=&quot;qq&quot;&gt;&lt;i class=&quot;qq icon&quot;&gt;&lt;/i&gt;QQ&lt;/a&gt;
                                &lt;a class=&quot;item&quot; data-platform=&quot;wechat&quot; data-value=&quot;wechat&quot;&gt;&lt;i class=&quot;weixin icon&quot;&gt;&lt;/i&gt;微信&lt;/a&gt;
                            &lt;/div&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;ui basic segment&quot;&gt;
                        &lt;a class=&quot;ban&quot; ban-report=&quot;&quot; data-id=&quot;2333612&quot; data-obj-type=&quot;2&quot; data-url=&quot;https://www.oschina.net/question/7101932_2333612&quot;&gt;
                            &lt;i class=&quot;flag red icon&quot;&gt;&lt;/i&gt;舉報&lt;/a&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            </description>
            <link>https://www.oschina.net/question/7101932_2333612</link>
            <guid isPermaLink="false">https://www.oschina.net/question/7101932_2333612</guid>
            <pubDate>Fri, 06 Sep 2024 04:23:00 GMT</pubDate>
        </item>
        <item>
            <title>蘋果批准了 iOS 版微信本週提交的更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;9 月 6 日，據彭博社報道，蘋果已經批准了騰訊本週提交的 iOS 系統微信更新，為雙方就&lt;strong&gt;應用內購費用&lt;/strong&gt;問題的持續談判贏得了更多時間。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cbe924a36238e3f21abac1446e659d7022c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-09-06%2Fapple-clears-wechat-for-iphone-16-as-talks-persist-over-app-fees&quot; target=&quot;_blank&quot;&gt;https://www.bloomberg.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在此之前，App Store 上的微信已經有兩個多月沒有發佈更新。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0906/121242_3F4c_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;據知情人士透露，&lt;strong&gt;蘋果本週批准了 iOS 版微信更新&lt;/strong&gt;，新版本在朋友圈和直播功能方面進行了優化。這一決定有望平息中國市場對蘋果與騰訊就應用商店費用爭議可能升級的猜測。&lt;/p&gt; 
&lt;p&gt;雙方分歧的焦點在於微信小遊戲平台。&lt;strong&gt;報道稱蘋果要求騰訊屏蔽小遊戲中的外部支付鏈接，並停止開發者利用平台內置消息功能引導用户使用其他支付渠道，從而保證能夠抽成 30%&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;蘋果還要求騰訊完全禁用遊戲內消息傳遞，但騰訊以過於激烈為由拒絕了這一要求。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;知情人士稱，騰訊仍在與蘋果討論後續更新的潛在方案。蘋果代表拒絕置評，而騰訊則沒有回覆通過電子郵件發送的詢問。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/307168&quot; target=&quot;_blank&quot;&gt;據此前報道&lt;/a&gt;，對於「蘋果税」，騰訊管理層在 8 月舉行的 2024 年第二季度財報會上曾進行回應：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「目前我們並未通過應用內交易在 iOS 上實現小程序的貨幣化。&lt;/p&gt; 
 &lt;p&gt;我認為，如果這種貨幣化能夠實現，這不僅符合我們的利益，也符合蘋果的利益，更符合遊戲開發者和用户的利益。&lt;strong&gt;但我們希望能在經濟上可持續且公平的條件下實現這一目標&lt;/strong&gt;。&lt;/p&gt; 
 &lt;p&gt;因此，這個討論正在進行中，我們希望能達成一個積極的結果，因為這將是一個三贏的局面。」&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310676</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310676</guid>
            <pubDate>Fri, 06 Sep 2024 04:05:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>deepin 實現多架構適配的背後，我們做了什麼？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-multi-architecture-compatibility%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;* 全文引述 longlong 在 WHLUG 上的演講，故存在口語化表達。本文僅代表個人觀點和立場。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin 23 作為 deepin 20 的後繼版本，最大的改變之一就是添加了多架構支持：從原本只支持 AMD64 架構，到目前支持 AMD64、RISC-V、LoongArch（新世界）、ARM64 多個 CPU 架構平台。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;目前 deepin 23 已經發布了 AMD64 架構的 Stable 鏡像，其他 CPU 架構的鏡像還處於生態建設的 Preview 版本階段，直到我們認為其質量滿足正式版發版標準，才會發佈 Stable 版本。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;ARM64&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;ARM64 架構是 deepin 23 最早導入支持的架構，當 23 開始正式構建倉庫的時候，其就作為主要架構支持目標，現在看來也是除了 x86 架構之外生態最好的架構。我們對於 ARM64 架構的支持也獲得了合作伙伴：飛騰和此芯科技的支持。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;主力構建集&lt;/strong&gt;&lt;strong&gt;羣&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我們在做 deepin 23 適配的時候，只有一台 FT2000/64 服務器，當我們系統軟件包增加到 3000+ 的時候，這樣的構建規模遠遠不足以支撐構建。而且市面上也不是很好購買 ARM64 服務器。所以我們發揮了主觀能動性，在公司庫房尋寶，最後被我找來了一台鯤鵬 920 服務器，和五台盤古 w510 台式機，作為構建集羣。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;幾乎不存在的生態屏障&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;ARM64 的 Linux 生態，幾乎是比肩 x86 ,無需擔心軟件是否適配的問題，幾乎在 x86 上能構建的軟件包在 ARM64 上都能正常編譯。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;通用啓動的攔路虎&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;ARM64 初期的應用場景主要是嵌入式設備，所以用 U-Boot 的較多。但是 U-Boot 在啓動 deepin 23 的時候就會有一系列問題，比如需要針對不同的設備使用不同的設備樹二進制文件（dtb），這對我們 deepin 23 的主線化帶來了挑戰。所以目前我們的設備也僅適配了能支持 UEFI 的飛騰 D2000/D3000、鯤鵬 920 和此芯科技的新品。對於其他的 ARM64 設備可能只能提供有限度的支持，因為針對不同開發板的板形做不同的適配，對於我們的人力物力都是一個巨大的挑戰。但是也歡迎更多的 ARM64 開發板和設備廠商與我們合作，我們盡力適配好。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;LoongArch&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;LoongArch（新世界）最初並不在 deepin 23 的目標支持架構範圍內，但在 2022 年前後，隨着龍芯大力推進新世界發行版生態的進程，我們決定嘗試適配 LoongArch 系統。這一決定的契機源於 Revy 老師寄來的兩台 LA50007A2000 機器。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在我們決定開發新世界發行版之初，便面臨着一個問題：硬件從哪裏來？當時龍芯發佈的新世界支持硬件僅有龍芯 3A5000 和 7A2000。由於新世界剛剛推出，7A2000 的橋片狀態並不穩定，時常發生假死情況（即內核仍在運行，但不響應輸入輸出）。我們最初並不知情，直到 Revy 老師贈送給我們一台龍芯 3A5000 7A2000 新世界主機，並附帶了一份長達三頁的 PDF 文檔，詳細説明瞭龍芯硬件的各種問題，這讓我們感到擔憂。我也在 Revy 的影響下購買了一台 3A5000 主板，幸運的是，這塊主板並未出現類似的問題。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;從 Loong Arch Linux 到 deepin Linux&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;我們決定站在巨人肩膀上，選擇成熟度較高的 LoongArch Linux 作為基礎，而不是使用尚不完善的 qemu 手動製作 rootfs。在此基礎上，我們構建了 rootfs 並啓動了 OBS worker ，進而獲得了 LoongArch （新世界）的構建能力。同時，龍芯的固件也在不斷改進，假死情況有所改善。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Loongson 3C5000 Power！&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;本着「靠着大樹好乘涼」的原則，我們去找我們的兄弟部門友好交流之後，借來了兩台四路 Loongson 3C5000L 服務器，這也是我們最強的構建主力服務器。不過，在一開始的時候，它們沒有新世界固件的支持。後來，我們找龍芯的人要了一份固件，才得以使用（當然，陣列卡依然沒法在新世界下正常運行）。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;而我們社區自己購買的 3C5000LL 雙路服務器則出了一點意外：它出廠就自帶新世界固件和 BMC，但在通電之後會以最高轉速發出「龍鳴」，其聲音之大一度蓋過我們機房所有的服務器，並且其運行也不是很穩定，幾乎每天都會死機。這讓我們感到無奈，只得求助於武漢龍芯的工程師的協助。在他們的幫助下，我們弄清了龍芯服務器發出「龍鳴」的原因：「其主板提供了 8 個風扇 4pin 的插座，新的 BMC 會檢測 1，2，3，4 位的插座是否連接正常。如果連接不正常，BMC 會讓風扇以最大功率運行，導致機器過熱。但是，我們購買的主機廠商並不知道這回事，風扇並沒有按照順序插在 1，2，3，4 位上，導致了此現象的產生。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;更多的 3C5000：後來，我們通過 UOS 獲取了更多的龍芯 3C5000，極大地增強了我們的構建資源。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;deepin loong64 啓動!&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在一切準備完善後。我們手搓了 rootfs ，將 DDE 打包完成，並且做出了第一版的鏡像。在龍芯 3a5000 上成功運行，不過由於第一版本我們並不熟悉龍芯內核的特調，所以是從隔壁的 Loong Arch Linux 借用的內核。而系統軟件包層面，基本是我們自己打包的系統源，也有部分是從&amp;nbsp;Revy 老師那「偷」的軟件包。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;3A6000 性能飛昇&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;2024 年初，龍芯發佈了 3A6000，Revy 老師又第一時間贊助了一塊 3A6000 主板給我們。正如他之前給我們的那些早期樣品一樣，這塊主板遇到了各種問題：開機即死機、系統假死、PCIe 不穩定等。不過，隨着後期我們購入的 3A6000 主板和華碩的 3A6000 主板問題逐步得到緩解，系統的穩定性有了很大提升。當然，還是得吐槽一下龍芯的 7A2000 橋片自帶的 GPU，因為缺乏穩定和功能完整的驅動，其早期表現非常不穩定，尤其是在外接 4K 顯示器時，幾乎無法顯示，後續我們會和龍芯合作，使用官方驅動解決這一問題，盡情期待。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;生態建設&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在生態建設方面，龍芯的新世界生態可以説是從零開始。UOS 等基於龍芯舊世界的成果無法直接遷移到新世界上，雖然 AOSC 的 libLoL 出現緩解了部分問題。為了推進龍芯的生態，我們也要求第一方應用必須能在 loong64 上編譯通過。所以，現在大家可以看到，deepin 的 unioncode（IDE） 已經能夠在 Loong 上正常運行，這無疑為龍芯的開發者生態帶來了極大的好處。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;然而，我們仍面臨一些問題，比如上游對 Loong 補丁的傲慢態度，導致如 neovim 等軟件無法在 loong64 上運行。為瞭解決這個問題，deepin 自主維護了相關補丁，使得 luajit 能夠在 Loong 上順利運行。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;目前，我們與各個新世界發行版社區保持着良好的關係，方便獲取最新的技術成果並解決疑難問題。比如 23 預裝了 libLoL 和在舊世界機器上啓動新世界系統的的支持。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;何時 Stable？&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;阻擋我們將 loong64 架構的鏡像 stable 的問題在於：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;1、目前應用商店還只是一個空殼，作為一個目標就是開箱即用的發行版來説，這個肯定達不到發版本的標準。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;2、目前構建資源還是匱乏，沒辦法做到和 ARM64 同等的構建資源支持，我們目前還在大量使用龍芯台式機作為構建的基礎設施。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;3、穩定性不滿足發版本要求，因為龍架構無論是硬件軟件固件都在一個相對快的迭代過程中，很難在某一個時間點去 stable 一個版本，而要求這個版本能穩定的向用户提供服務，所以我們不發 stable 版本，咱一起滾動更新（let‘s roll！）&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;RISC-V&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;對於 RV 架構，其實作為個人我參與的不多，deepin 對於 RV 架構的支持，主要在我們的楊同學完成，此時她還在杭州的 RV 峯會上和各位大佬交換意見。那我就代為介紹我們的 RV 適配情況。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;板子？食之無味，棄之可惜&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;我們對 RV 架構的支持實際是早於 loong64 的，中科院 PLCT 團隊在我們做主線化支持之前就已經做好了一套非常早期的版本，並且可以啓動到桌面，然而那時我們獲得的硬件是全志 D1，當時我拿了一個回去玩，跑起了 Linux 之後就再也不想動它，讓它吃灰去了，因為性能實在是太弱了，和同樣價格的 rk3566 相比，無論是性能，生態，都遠遠不及。為啥我們要做 RV，可能是因為創吧。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;其實我們一開始拿到的開發板也不止全志 D1 還有 TH1520：只能説是能用，但是用不了一點。性能依然堪憂。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;所以在我們只有板子的狀態下，也沒法去做適配，只能用 qemu 手搓 rootfs ，跑起來了內核和 tty，但是全功能的 dde 由於性能問題，是跑不起來的（吐槽：就算適配了看全志 D1 這個樣子，似乎也跑不動 dde)&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Sg2042 中式暴力美學的 RV 處理器&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;後來 Revy 給我們弄來了兩台 Sg2042 的機器，每一個 Sg2042 使用的是 64 個平頭哥 C910 核心，而這個核心同樣用在 TH1520 的板子上。雖然單核很弱，但是耐不住它核心多啊。咱就靠堆核，也做到和 PC 級別的性能，至少我們可以在 sg2042 上插一個 AMD 信創神卡了：DDE 啓動！&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;因為 sg2042 的出現，我們已經大概夠上了批量構建的門檻了，兩台 2042 在機房日夜不休的構建下，我們的 rv 生態幾乎追平 ARM64。因為 RISC-V 在上游接受度普遍較高，即使沒有比較強的硬件出現，rv 依舊被 Debian 的主線支持，這也極大的方便了我們進行適配。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;從筆記本到遙控車：探索 RV 的更多形態&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;而後我們接觸到更多的 RV 設備，（再次感謝各位 RV 廠商的投餵）包括且不限於筆記本，平板，甚至是遙控車這類稀奇古怪的玩意。這樣我們接觸的設備就不僅限於 EVB 了。這些設備雖然五花八門然而使用的無非那麼幾種核心，各有各的毛病，現在也還沒有一個設備能符合我們測試組的要求的。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;GPU：RV 生態的攔路虎&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;我們對於 RV 生態的構建，其實是非常具有信心的，但是在桌面的支持上我們始終無法忽略 GPU 這個因素。因為 RV 大部分廠商一直以來，未來也將持續把重心放在嵌入式領域，有 PCIE 插槽的設備寥寥可數，寄希望於插一塊 AMD 亮機卡就能帶動桌面的打算基本上泡湯了。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;於是擺在我們面前的問題就是 RV 的板載 GPU，它不僅不支持桌面的 GL，只支持 GLES，還沒有開源驅動，只有魔改版 mesa，要我們適配它，意味着我們要往系統裏面塞一坨不受包管理的髒東西。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;於是後來我們便修復了 RV llvmpipe 試圖先扔掉這個殘廢 GPU 直接使用軟件渲染，奈何效果不佳，畢竟 DDE 主打的一個特效好看，關閉特效之後完全沒法用。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;最後在高人指點下，我們採用了 GLVND 方案實現了開源驅動和閉源驅動的依賴共存，勉強地把它們都納入到了包管理，這才有了我們現在稍微正常一些的桌面體驗。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;嵌入式的侷限性&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;在當前的 RV 設備適配領域，我們所接觸的大多數產品依然是以開發板的形式存在。這可能是因為對於 RV 技術來説，桌面應用的普及尚處於早期階段。因此，這種嵌入式設備的設計理念一直影響着我們的適配工作，使得適配過程充滿了挑戰。這段經歷讓我們深刻認識到，為了推動 RV 技術在桌面環境中的應用，我們需要與廠商更緊密地合作，共同探索和解決適配過程中遇問題。同時，也需要行業內的共同努力，以促進 RV 技術的成熟和廣泛應用。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;以上便是本文所有內容了，&lt;strong&gt;感謝所有在 deepin 適配道路提供支持和幫助的老師和夥伴們。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;相關閲讀：&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Findex.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;deepin 全版本鏡像下載（含 deepin V15）&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;deepin RISC-V 架構鏡像（LicheePi 44A、VisionFive2 等）&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.deepin.org%2Fzh%2F02_%25E7%25A1%25AC%25E4%25BB%25B6wiki%2F01_%25E8%25AE%25BE%25E5%25A4%2587%25E9%2580%2582%25E9%2585%258D%25E5%2588%2597%25E8%25A1%25A8%2Fdeepin%25E5%25A4%259A%25E6%259E%25B6%25E6%259E%2584%25E9%2580%2582%25E9%2585%258D%25E6%259C%25BA%25E5%259E%258B%25E6%25B8%2585%25E5%258D%2595&quot; target=&quot;_blank&quot;&gt;deepin 多架構適配機型清單&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310660</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310660</guid>
            <pubDate>Fri, 06 Sep 2024 02:39:06 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>1-7 月我國軟件業務收入 73429 億元，同比增長 11.2%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;工信部&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fgxsj%2Ftjfx%2Frjy%2Fart%2F2024%2Fart_858cc76215b74c98b8d2a52f8a5dc366.html&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;公告指出，1-7 月我國軟件和信息技術服務業（以下簡稱「軟件業」）運行態勢良好，軟件業務收入和利潤保持兩位數增長，工業軟件、基礎軟件等重點軟件產品增長較快，軟件業務出口增速持續向好，西部、東北地區軟件業收入增速小幅提升。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;一、總體運行情況&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;軟件業務收入保持平穩增長。1－7 月，我國軟件業務收入 73429 億元，同比增長 11.2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-51c3097c097ed6e7f402503ee70e7e3a69b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;利潤總額保持兩位數增長。1－7 月，軟件業利潤總額 8754 億元，同比增長 12%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ca63e6fc000e638545cee7079a01c0a396a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;軟件業務出口增速持續向好。1－7 月，軟件業務出口 307.7 億美元，同比增長 2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;252&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a407dd3adc6595b614cad80b4904071415c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;二、分領域運行情況&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;軟件產品收入穩定增長。1－7 月，軟件產品收入 16524 億元，同比增長 8.9%，佔全行業收入比重為 22.5%。其中工業軟件產品收入 1564 億元，同比增長 10.5%；基礎軟件產品收入 1029 億元，同比增長 11.1%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;信息技術服務收入持續兩位數增長。1－7 月，信息技術服務收入 49501 億元，同比增長 12.2%，在全行業收入中佔比為 67.4%。其中，雲計算、大數據服務共實現收入 7606 億元，同比增長 11.1%，佔信息技術服務收入的比重為 15.4%；集成電路設計收入 2054 億元，同比增長 14.8%；電子商務平台技術服務收入 6287 億元，同比增長 6.5%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;信息安全收入增長放緩。1－7 月，信息安全產品和服務收入 1088 億元，同比增長 7.5%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;嵌入式系統軟件收入穩步增長。1－7 月，嵌入式系統軟件收入 6317 億元，同比增長 10%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;240&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fd163adc5ee011c0405ad005cd05d746910.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;三、分地區運行情況&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;西部、東北地區軟件業收入增速小幅提升。1－7 月，東部地區完成軟件業務收入 61261 億元，同比增長 11.4%，增速較上半年回落 0.5 個百分點；中部地區完成軟件業務收入 3484 億元，同比增長 12.9%，增速較上半年回落 0.3 個百分點；西部地區完成軟件業務收入 7032 億元，同比增長 9.3%，增速較上半年提升 1.1 個百分點；東北地區完成軟件業務收入 1651 億元，同比增長 10%，增速較上半年提升 0.3 個百分點。4 個地區軟件業務收入在全國軟件業務總收入中的佔比分別為 83.4%、4.7%、9.6% 和 2.2%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;245&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3040dac188c517f9c9f544c1042671aa325.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;京津冀、長三角地區軟件業務收入穩中有升。1－7 月，京津冀地區完成軟件業務收入 18814 億元，同比增長 14.3%，增速高出全國水平 3.1 個百分點；長三角地區完成軟件業務收入 20415 億元，同比增長 8.2%，增速較上月提升 0.6 個百分點。兩個地區軟件業務收入在全國總收入中的佔比分別為 25.6%、27.8%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;主要軟件大省業務收入持續向好。1－7 月，軟件業務收入居前 5 名的省份中,北京、廣東、山東、江蘇、上海軟件收入分別為 16671 億元、12880 億元、8169 億元、8022 億元和 6685 億元，同比分別增長 14%、12.3%、12.2%、8% 和 11%，5 省 (市) 合計軟件業務收入 52428 億元，佔全國比重為 71.4%，佔比較去年同期提高 0.5 個百分點。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;240&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-016436d02e887507d7438b59c69c48172e9.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;中心城市軟件業務收入穩步增長。1－7 月，全國 15 個副省級中心城市實現軟件業務收入 35464 億元，同比增長 10.1%，佔全國軟件業務收入比重為 48.3%，佔比較去年同期回落 0.5 個百分點。其中，大連、寧波、廈門、深圳、瀋陽、武漢和成都等 7 個城市軟件業務收入增速超過全國平均增速。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#070707; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;243&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7cafa2274add03a942a02ec163306067e8c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310655</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310655</guid>
            <pubDate>Fri, 06 Sep 2024 02:25:06 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>面壁智能發佈 MiniCPM3-4B 基座模型，「端側 ChatGPT 時刻到來」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;面壁智能官方&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FaxYQOKjYUZKbQnO7UTkjSQ&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;，面壁「小剛炮」系列進化為全新 MiniCPM 3.0 基座模型，以 4B 參數，帶來超越 GPT-3.5 的性能，並表示「端側 ChatGPT 時刻到來」。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-28fadcaab3332f759f570d8acc12dd8149c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;面壁智能表示，MiniCPM 3.0 僅以 4B 參數，在包括自然語言理解、知識、代碼、數學等多項能力上對 GPT-3.5 實現趕超，在 Qwen2-7B、 Phi-3.5、GLM4-9B、LLaMa3-8B 等一眾中外知名模型脱穎而出。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-56bd4ba90ed6c013df4204f10797159d5c0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此外，MiniCPM 3.0 還擁有端側最強 Function calling 性能 ，在權威評測榜單 Berkeley Function-Calling Leaderboard 上，其性能接近 GPT-4o，並超越 Llama 3.1-8B、Qwen-2-7B、GLM-4-9B 等眾多模型。&lt;/p&gt; 
&lt;p&gt;開源地址：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenBMB%2FMiniCPM%3Ftab%3Dreadme-ov-file&quot; target=&quot;_blank&quot;&gt;https://github.com/OpenBMB/MiniCPM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fopenbmb%2FMiniCPM3-4B&quot; target=&quot;_blank&quot;&gt;https://huggingface.co/openbmb/MiniCPM3-4B&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310654/minicpm-3-0-4b</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310654/minicpm-3-0-4b</guid>
            <pubDate>Fri, 06 Sep 2024 02:19:06 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>SIG 成果！openKylin RISC-V 版本成功編譯運行 Godot 4.3</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;近期，在社區 RISC-V SIG、Godot SIG 和 FAQ SIG 的共同努力下，&lt;strong&gt;成功實現 Godot 開源遊戲引擎在 openKylin 2.0 RISC-V 版本上的原生編譯與流暢運行&lt;/strong&gt;，進一步擴展 openKylin RISC-V 遊戲生態。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-487df50cee10b267b5f0a7e2cf952fe693a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;br&gt; &lt;span style=&quot;color:#888888&quot;&gt;openKylin 2.0 RISC-V SpacemiT K1&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;以下為編譯指南，在這裏，特別感謝 Github 開發 MBCX 的 RISC-V 交叉編譯方法，為 SIG 工作開展提供幫助和參考！&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;1 基礎準備&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;編譯 Godot 至少需要 4G 內存，如果不足請開始 swap，文中演示設備是 8G 內存。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;前往 openKylin 官網下載安裝 openKylin 2.0 RISC-V 鏡像，此處演示使用的是 SpacemiT K1（進迭時空 Muse Book），&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;請大家下載安裝對應板卡的鏡像&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;2 克隆源代碼&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;克隆 Godot 4.3 源代碼：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;sudo apt &lt;span style=&quot;color:#ca7d37&quot;&gt;install&lt;/span&gt; git&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;git &lt;span style=&quot;color:#ca7d37&quot;&gt;clone&lt;/span&gt; https://github.com/godotengine/godot.git -b &lt;span style=&quot;color:#0e9ce5&quot;&gt;4.3&lt;/span&gt;-stable &lt;em&gt;--depth=1&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;3 安裝編譯依賴&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;安裝 Godot 編譯依賴：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;sudo&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;apt update&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;sudo&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;apt install -y \&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  build-essential \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  pkg-config \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libx11-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libxcursor-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libxinerama-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libgl1-mesa-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libglu1-mesa-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libasound2-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libpulse-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libudev-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libxi-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libxrandr-dev \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;  libwayland-dev&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中，openKylin 2.0 的 build-essential 中 gcc 和 g++版本默認是 12，需要使用 update-alternatives 修改默認版本，切換到 gcc-13 和 g++-13。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;# 安裝 gcc-13 g++-13&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo apt &lt;span style=&quot;color:#ca7d37&quot;&gt;install&lt;/span&gt; gcc&lt;span style=&quot;color:#0e9ce5&quot;&gt;-13&lt;/span&gt; g++&lt;span style=&quot;color:#0e9ce5&quot;&gt;-13&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo &lt;span style=&quot;color:#ca7d37&quot;&gt;update&lt;/span&gt;-alternatives &lt;em&gt;--install /usr/bin/gcc gcc /usr/bin/gcc-12 100&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo &lt;span style=&quot;color:#ca7d37&quot;&gt;update&lt;/span&gt;-alternatives &lt;em&gt;--install /usr/bin/gcc gcc /usr/bin/gcc-13 100&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;

&lt;code&gt;&lt;span&gt;&lt;em&gt;# 輸入 gcc-13 對應的數字序號&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo &lt;span style=&quot;color:#ca7d37&quot;&gt;update&lt;/span&gt;-alternatives &lt;em&gt;--config gcc&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;

&lt;code&gt;&lt;span&gt;&lt;em&gt;# g++也是相同的步驟。&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo &lt;span style=&quot;color:#ca7d37&quot;&gt;update&lt;/span&gt;-alternatives &lt;em&gt;--install /usr/bin/g++ g++ /usr/bin/g++-12 100&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo &lt;span style=&quot;color:#ca7d37&quot;&gt;update&lt;/span&gt;-alternatives &lt;em&gt;--install /usr/bin/g++ g++ /usr/bin/g++-13 100&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;

&lt;code&gt;&lt;span&gt;&lt;em&gt;# 輸入 g++-13 對應的數字序號&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo &lt;span style=&quot;color:#ca7d37&quot;&gt;update&lt;/span&gt;-alternatives &lt;em&gt;--config g++&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c30b9a9a2d999e40dbdbab3f8f7758c17bf.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;切換到 GCC-13&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Godot 項目使用 SCons 構建，SCons 是一個開放源代碼、以 Python 語言編寫的自動化構建工具，在 openKylin 使用 pip 包安裝程序安裝 SCons。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;sudo&lt;/span&gt; apt install python3-pip&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;sudo pip install scons -i https://pypi.tuna.tsinghua.edu.cn/simple --&lt;span style=&quot;color:#0e9ce5&quot;&gt;break&lt;/span&gt;-system-packages&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;檢查 SCons 版本：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;openkylin@openkylin&lt;span style=&quot;color:#dd1144&quot;&gt;:~/godot&lt;/span&gt;$ scons -v&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;SCons by Steven Knight et al.:&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;SCons:&lt;/span&gt; v4.&lt;span style=&quot;color:#0e9ce5&quot;&gt;8.0&lt;/span&gt;.&lt;span style=&quot;color:#0e9ce5&quot;&gt;7&lt;/span&gt;c688f694c644b61342670ce92977bf4a396c0d4, Sun, &lt;span style=&quot;color:#0e9ce5&quot;&gt;07&lt;/span&gt; Jul &lt;span style=&quot;color:#0e9ce5&quot;&gt;2024&lt;/span&gt; &lt;span style=&quot;color:#0e9ce5&quot;&gt;16&lt;/span&gt;&lt;span style=&quot;color:#dd1144&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;52&lt;/span&gt;&lt;span style=&quot;color:#dd1144&quot;&gt;:&lt;/span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;07&lt;/span&gt; -&lt;span style=&quot;color:#0e9ce5&quot;&gt;0700&lt;/span&gt;, by bdbaddog on M1Dog2021&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt; SCons &lt;span style=&quot;color:#dd1144&quot;&gt;path:&lt;/span&gt; [&lt;span style=&quot;color:#dd1144&quot;&gt;&#39;/usr/local/lib/python3.12/dist-packages/SCons&#39;&lt;/span&gt;]&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;Copyright (c) &lt;span style=&quot;color:#0e9ce5&quot;&gt;2001&lt;/span&gt; - &lt;span style=&quot;color:#0e9ce5&quot;&gt;2024&lt;/span&gt; The SCons Foundation&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;安裝 mold 和 Clang-17：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;sudo&lt;/span&gt; apt install mold clang-&lt;span style=&quot;color:#0e9ce5&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;檢查 Clang 版本，並確保編譯器後端為 GCC13，應該有如下輸出：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Selected&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;GCC installation: /usr/bin/../lib/gcc/riscv64-linux-gnu/13&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#afafaf&quot;&gt;openkylin@openkylin&lt;/span&gt;:&lt;span style=&quot;color:#dd1144&quot;&gt;~/godot$ clang -v&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Openkylin&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;clang version 17.0.6 (9ok4)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Target&lt;/span&gt;: &lt;span style=&quot;color:#dd1144&quot;&gt;riscv64-unknown-linux-gnu&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;model: posix&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;InstalledDir&lt;/span&gt;: &lt;span style=&quot;color:#dd1144&quot;&gt;/usr/bin&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Found&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;candidate GCC installation: /usr/bin/../lib/gcc/riscv64-linux-gnu/12&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Found&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;candidate GCC installation: /usr/bin/../lib/gcc/riscv64-linux-gnu/13&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Found&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;candidate GCC installation: /usr/bin/../lib/gcc/riscv64-linux-gnu/8&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;Selected&lt;/span&gt; &lt;span style=&quot;color:#dd1144&quot;&gt;GCC installation: /usr/bin/../lib/gcc/riscv64-linux-gnu/13&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;4 開始構建&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;cd 進入源碼目錄構建：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#ca7d37&quot;&gt;cd&lt;/span&gt; godot&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;指定目標架構為`rv64`，啓用 Clang 作為 LLVM 編譯器前端，指定鏈接器為`mold`（GNU ld 無法正確鏈接）並同時禁用鏈接時優化。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;arch&lt;/span&gt;=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;rv64&quot;&lt;/span&gt; use_llvm=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; linker=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;mold&quot;&lt;/span&gt; lto=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;none&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;啓用 fb 文本服務器後端（Godot 有兩種文本後端，fb 和 adv）：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;module_text_server_fb_enabled&lt;/span&gt;=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時可以禁用一些在 RISC-V 設備可能沒法正常工作的 Godot 模塊。構建腳本會自動禁用，所以此步驟非必要。&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;# 禁用 Theora 視頻編碼支持&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;module_theora_enabled&lt;/span&gt;=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;# 禁用去噪模塊&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;module_denoise_enabled&lt;/span&gt;=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;# 禁用光線投射模塊&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;module_raycast_enabled&lt;/span&gt;=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;em&gt;# 禁用 Xatlas 紋理展開模塊&lt;/em&gt;&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;module_xatlas_unwrap_enabled&lt;/span&gt;=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;使用以下命令構建 Godot 編輯器：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;scons&lt;/span&gt; -j8 arch=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;rv64&quot;&lt;/span&gt; use_llvm=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; linker=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;mold&quot;&lt;/span&gt; lto=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;none&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     target=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;editor&quot;&lt;/span&gt; platform=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;linux&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     precision=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;single&quot;&lt;/span&gt; module_text_server_fb_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_theora_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_denoise_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_raycast_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_xatlas_unwrap_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;使用以下命令構建 Debug 導出模板：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;scons&lt;/span&gt; -j8 arch=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;rv64&quot;&lt;/span&gt; use_llvm=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; linker=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;mold&quot;&lt;/span&gt; lto=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;none&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     target=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;template_debug&quot;&lt;/span&gt; platform=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;linux&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     precision=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;single&quot;&lt;/span&gt; module_text_server_fb_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_theora_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_denoise_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_raycast_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_xatlas_unwrap_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;使用以下命令構建 Release 導出模板:&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;scons&lt;/span&gt; -j8 arch=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;rv64&quot;&lt;/span&gt; use_llvm=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; linker=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;mold&quot;&lt;/span&gt; lto=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;none&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     target=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;template_release&quot;&lt;/span&gt; platform=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;linux&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     precision=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;single&quot;&lt;/span&gt; module_text_server_fb_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;yes&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_theora_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_denoise_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_raycast_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt; \&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;     module_xatlas_unwrap_enabled=&lt;span style=&quot;color:#dd1144&quot;&gt;&quot;no&quot;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5b869b6ba671c87a25bf01f57326718321c.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;編譯 Godot&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;5 運行 Godot&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;cd 進入 bin 目錄:&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#ca7d37&quot;&gt;cd&lt;/span&gt; bin&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;運行 Godot 編輯器，openKylin 2.0 鏡像默認使用 wlcom（基於 Wayland 協議），IMG 的 GPU 可以使用 GLES，因此需要加上啓動參數：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffdddd&quot;&gt;--display-driver wayland opengl_es3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;如果設備可以外接 AMD GPU 可以嘗試用 GL（比如 SG2042）：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;color:#0e9ce5&quot;&gt;chmod&lt;/span&gt; +x godot.linuxbsd.editor.rv64.llvm&lt;/span&gt;&lt;/code&gt;&lt;code&gt;&lt;span&gt;./godot.linuxbsd.editor.rv64.llvm --display-driver wayland opengl_es3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fdee6479fcec0a7fef1d03203a92173dd56.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;運行 Godot&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-275c64664e17a720f8b41463bda7d357019.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;項目管理器&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;06 設置項目啓動參數&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;在調試項目時，Godot 仍會使用默認的軟渲染管線，因此需要將參數添加到項目設置：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffdddd&quot;&gt;--display-driver wayland opengl_es3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;7 演示&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3cbe23da481204ee65863e485b0c066f4d4.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;3D 項目&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6d7da57c1c0dcda9102bc50297244b03d27.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;2D 項目&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1080&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-820b6b0a4996e1255e7cd716998189fd355.png&quot; width=&quot;1920&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:center&quot;&gt;&lt;span style=&quot;color:#888888&quot;&gt;代碼編輯器&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;strong&gt;結語&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通過本文的介紹，相信大家已經對如何在 openKylin 2.0 RISC-V 設備上編譯和運行 Godot 有了初步的瞭解。隨着 RISC-V 技術的不斷成熟和普及，越來越多的開發者加入 RISC-V 生態建設，相信未來會有更多的創新和突破，為遊戲開發者帶來更多的機遇和挑戰。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，由&lt;strong&gt;Godot Hub 社區與 openKylin 社區&lt;/strong&gt;聯合舉辦&lt;strong&gt;Godot x openKylin 開發大賽&lt;/strong&gt;正在火熱進行中。大賽以 Godot 遊戲引擎為核心編程工具，旨在激發創新活力，推動遊戲開發技術的蓬勃發展，歡迎感興趣的小夥伴積極參賽。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310648</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310648</guid>
            <pubDate>Fri, 06 Sep 2024 01:58:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源日報 | Qwen 在 GitHub 上顯示 404；KK 預測人工智能三大趨勢；IBM 敗走中國；智譜 AI 又融資了；OpenBMC 成服務器固件發展的「事實標準」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.9.5&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310448/qwenlm-github-repo-404&quot;&gt;阿里通義千問全系列大模型被 GitHub 下架，所有倉庫頁面「404」&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p&gt;9 月 5 日早上，有開發者在社交平台上稱在 GitHub 上打開阿里雲 Qwen 頁面後顯示 404。&lt;/p&gt; 
 &lt;p&gt;阿里高級算法專家林俊暘在社交媒體上表示：「GitHub 因未知原因標記了我們的組織，我們正在嘗試與他們聯繫以尋求解決方案。」&lt;/p&gt; 
 &lt;p&gt;直到當天下午，阿里通義千問全系列大模型的開源代碼倉庫恢復正常訪問。&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FQwenLM&quot; target=&quot;_blank&quot;&gt;https://github.com/QwenLM&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0905/175943_6ZHA_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/310410/01-ai-yi-coder&quot;&gt;零一萬物開源 Yi-Coder 系列編程助手模型&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;零一萬物正式開源了 Yi-Coder 系列編程模型。Yi-Coder 系列模型專為編碼任務而生，提供 1.5B 和 9B 兩種參數。其中，Yi-Coder-9B 的表現號稱 「優於其他 10B 參數以下的模型」，如 CodeQwen1.5 7B 和 CodeGeex4 9B，甚至能夠 「與 DeepSeek-Coder 33B 相媲美」。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Yi-Coder 能夠處理最長 128K tokens 的上下文內容，適用於複雜項目級代碼的理解和生成。Yi-Coder 還支持 52 種主要編程語言。&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtcuQJ56sxH8dL_2NJ3sUiw&quot; target=&quot;_blank&quot;&gt;微軟在 Windows 11 集成中國開源大模型架構 RWKV、裝機量近 5 億&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2024 年 9 月 ，RWKV 社區成員發現：Office 系統在自動更新後（版本 2407 及以後）已自帶 RWKV 運行庫。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;在 Windows 系統的&amp;nbsp;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;C:\Program Files\Microsoft Office\root\vfs\ProgramFilesCommonX64\Microsoft Shared\OFFICE16&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;目錄，可以找到一系列&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;rwkv&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;dll（動態鏈接庫） 文件。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;RWKV dll in Windows&quot; src=&quot;https://oscimg.oschina.net/oscnet/RWKV-dll-in-windows-os.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;由於正版 Windows 大多預裝了 Office 365，因此，全球大多數 Windows 10 和 11 機器現已搭載 RWKV，包括線下商店中售賣的 Windows 機器。這意味着 RWKV 的裝機量可達幾億台。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;RWKV 是真正的開源架構（目前在&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flfaidata.foundation%2Fprojects%2Frwkv%2F&quot; target=&quot;_blank&quot;&gt;Linux Foundation 旗下&lt;/a&gt;），遵循 Apache 2.0 協議，可用於商業，歡迎大家在各個項目使用。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;RWKV 的最新架構為 RWKV-6，且 RWKV-7 即將公佈。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/news/310590&quot; target=&quot;news&quot;&gt;著名未來學家凱文·凱利（KK）預測人工智能三大趨勢&lt;/a&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;2024 Inclusion・外灘大會今天在上海黃浦世博園區開幕。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;著名未來學家、《連線》雜誌創始主編、《5000 天后的世界》作者凱文・凱利（Kevin Kelly，「KK」）在開幕主論壇上的演講中指出，當人工智能深刻影響經濟和文化，必將湧現三大趨勢：&lt;strong&gt;全球主義、創新加速和 AI 驅動生成&lt;/strong&gt;。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-971603e73b5d38d489dc052d6f0f031beb7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxueqiu.com%2F3261990793%2F303707299&quot; target=&quot;_blank&quot;&gt;大魚吃小魚!AI 芯片初創公司，前景不妙 &lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;p&gt;從谷歌的 TPU、蘋果的 M1 和 M2、微軟 Maia 100 和 Cobalt 100、Meta 的 MTIA、亞馬遜的 Trainium 和 Inferentia、特斯拉的 Dojo，到英特爾的 FPGA 系列、AMD 的 MI300 系列……巨頭們一次次衝擊着英偉達的帝國圍牆。&lt;/p&gt; 
        &lt;p&gt;而在 AI 競速的大時代裏，湧現了一大批初創 GPU、AI 芯片公司，這些從業者和科技廠商們無不在找尋突破口。全球初創企業如今正試圖證明它們可以在某些應用領域提供比行業巨頭英偉達更好的芯片解決方案。雖然英偉達的 GPU 繼續主導人工智能（AI）領域，但 AI 初創企業認為，GPU 的高能耗和龐大的設計留下了市場空隙，供新興企業填補，希望分享 AI 技術繁榮帶來的利益。&lt;/p&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;&lt;span&gt;- &lt;strong&gt;半導體產業縱橫&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1658606840%2FOvw3582XP%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;RWKV.cpp 是底層 C++實現通過傳統 C 接口暴露帶 Python 調用入口的 loader&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;所以 RWKV 是基於 RNN 但達到 Transformer 性能的模型架構，而這個 RWKV.cpp 是底層 C++實現通過傳統 C 接口暴露帶 Python 調用入口的 loader。特點就是可以在 CPU 上通過 SSE 啊 NEON 啊這些指令集跑得飛快，當然也兼容 GPU，所以低耗高效。好的好的，C++項目我喜歡，不管三七二十一先 fork 一個先&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;wingc&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2Fttarticle%2Fp%2Fshow%3Fid%3D2309405075207596671014&quot; target=&quot;_blank&quot;&gt;第一個 100% 開源的 MoE 大模型，7B 的參數，1B 的推理成本&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;訓練代碼、中間 checkpoint、訓練日誌和訓練數據都已經開源。&lt;/p&gt; 
    &lt;p&gt;儘管大語言模型 (LM) 在各種任務上取得了重大進展，但在訓練和推理方面，性能和成本之間仍然需要權衡。&lt;/p&gt; 
    &lt;p&gt;對於許多學者和開發人員來説，高性能的 LM 是無法訪問的，因為它們的構建和部署成本過高。改善成本 - 性能的一種方法是使用稀疏激活混合專家 (MoE)。MoE 在每一層都有幾個專家，每次只激活其中的一個子集（參見圖 2）。這使得 MoE 比具有相似參數量的密集模型更有效，因為密集模型為每個輸入激活所有參數。&lt;/p&gt; 
    &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;機器之心&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F7825731473%2FOvtOXuNy0&quot; target=&quot;_blank&quot;&gt;LakeSoul 提供了原生的 Python 接口&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
     LakeSoul 提供了原生的 Python 接口，可以很方便地將數據湖的數據跟模型訓練進行掛鈎；LakeSoul 也支持向量檢索，對外會提供一個融合檢索服務層，支持向量檢索、sql 檢索、文件檢索於一體的多模態融合檢索，能極致賦能大模型在行業應用的落地。
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;朱亞東-數元靈&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.com.cn%2Farticle_6192937794_17120bb4202002b75s.html&quot; target=&quot;_blank&quot;&gt;IBM 敗走中國&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt; 
       &lt;p&gt;在過去二十年間，IBM 犯了一系列戰略錯誤，包括在雲計算領域的佈局起步較晚，錯過利用開源生態系統構建其產品和服務的機遇；傳統業務市場被雲計算和現代化服務替代者搶佔；備受期待的人工智能平台 Watson 商業化應用不達預期。&lt;/p&gt; 
       &lt;p&gt;2012 年開始，IBM 全年營收開始逐年下降，2013 年營收跌破千億。到 2023 年，IBM 營收僅有 618 億美元。&lt;/p&gt; 
       &lt;p&gt;業績下滑原因系傳統硬件業務銷售下滑，雲計算和軟件業務逐漸成為 IBM 的核心收入來源，新興業務雖然增長迅速，但未能完全彌補傳統業務下滑的影響。&lt;/p&gt; 
       &lt;p&gt;而在中國，IBM 要面臨更為複雜的境況。&lt;/p&gt; 
       &lt;p&gt;美國對中國的技術出口限制、對中國企業的制裁，導致外企在中美之間的研發合作、技術轉移和跨境數據流動變得比以往更加困難。在移動互聯網興起的十年前，人們認為世界會越來越「平」，隨着信息高速流通，國家之間的鴻溝將被逐漸彌合。但十年後的今天，全球化開始退潮，「地球村」的暢想已成明日黃花。&lt;/p&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;-&amp;nbsp;&lt;strong&gt;界面新聞&lt;/strong&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cd4fMakARr&quot; target=&quot;_blank&quot;&gt;智譜 AI，又融資了&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;今日，伴隨中關村科學城公司通過公眾號宣佈以投前 200 億元估值，領投智譜新一輪融資，方才塵埃落定。&lt;/p&gt; 
  &lt;p&gt;對於投後估值以及更多融資信息，智譜官方未給予置評。而這也是智譜，連續兩年，年內被曝完成 3 輪融資。去年至今，該公司已完成 6 輪融資。&lt;/p&gt; 
  &lt;p&gt;值得一提的是，智譜先後獲得阿里、騰訊、美團、小米等諸多互聯網大廠押注，以及紅杉、高瓴、君聯、順為等知名機構的投資，在 AI 大模型公司中，可謂一枝獨秀。&lt;/p&gt; 
  &lt;p&gt;成立至今，智譜一直是市場上炙手可熱的存在。早在 2019 年 8 月，成立僅 2 個月，華控基金、中科創星等就已火速入股。2021-2021 年，該公司則先後在 9 月份獲得 A、B 輪融資。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;獵雲網&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.prnasia.com%2Fstory%2F459676-1.shtml&quot; target=&quot;_blank&quot;&gt;阿里雲、字節、浪潮信息、英特爾、電標院：OpenBMC 成服務器固件發展的「事實標準」&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;傳統 BMC 雖然可以實現部分管理，但是在快速迭代的當今尤其是在 AI 技術的驅動下，存在開發週期長、交付困難、應用單一等難題，並且由於其代碼閉源也會導致隱藏的安全漏洞無法及時識別，限制了用户定製開發。OpenBMC 憑藉領先的開源理念、可擴展的軟件架構，被大型互聯網廠商廣泛應用，並帶動了產業連上下游共同探索，逐步成為服務器固件發展的&quot;事實標準&quot;。&lt;/p&gt; 
 &lt;p&gt;在日前召開的 2024 開放計算中國峯會上，來自阿里雲、字節跳動、浪潮信息、英特爾以及電子標準院的專家，從自身探索和實踐的角度，現身説法各家在 OpenBMC 方面的最新進展及未來規劃。&lt;/p&gt; 
 &lt;div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   &lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt; 
   &lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;美通社&lt;/span&gt;&lt;/strong&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcj.sina.com.cn%2Farticles%2Fview%2F2853016445%2Faa0d937d02000ztnm&quot; target=&quot;_blank&quot;&gt;通信效率超 98%！壁仞科技實現中國首個三種異構芯片混訓技術&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;為瞭解決用户需求和技術挑戰，壁仞科技團隊攻堅異構 GPU 訓練難點，自主研發出原創異構 GPU 協同訓練方案 HGCT，通過異構調度、異構通信、異構拆分三層架構，實現了一套統一方案支持多種不同型號、不同廠商的 GPU，業界首次支持 3 種及以上異構 GPU 混合訓練同一個大模型。&lt;/p&gt; 
 &lt;p&gt;壁仞科技表示，這一異構 GPU 協同訓練方案對於行業端有兩個意義：1、該方案最終價值實現了國產 GPU 和英偉達 GPU 的異構共存，突破異構算力孤島難題，加快國產 GPU 的落地遷移，助力國產大模型落地；2、該方案賦能整個算力產業發展，壁仞 HGCT 方案具備普適性、易用性、兼容性，助力最終客户實現多種異構算力聚合，最大化異構 GPU 集羣利用效率。&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt; &lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;鈦媒體&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F19LhsTqTbrK4mlnnBB6JHA&quot; target=&quot;_blank&quot;&gt;「稚暉君」 停更這一年：想贏下人形機器人，要像運營大公司那樣去創業&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;「在學校裏學習更多是自底向上，先打好基礎然後做上層應用，出了校園之後更多是自頂向下，以項目導向，缺啥學啥。」 彭志輝説。聊到時間管理方法，他説是 「操作系統中的搶佔式調度」，動態調整任務優先級，允許打斷，但是任何時間都專注於當前的任務。&lt;/p&gt; 
   &lt;p&gt;他不喜歡 「天才少年」 的稱呼，他覺得教科書中那些能改變人類發展進程的科學家才是天才。&lt;/p&gt; 
   &lt;p&gt;相比過去用幾個月就能獨自完成的小型項目，參與創辦一家公司開發成功的產品要難得多。他要從單兵作戰走向帶團隊協作，做出來的東西不能只是酷，還要能賺錢。這是一場新的、更復雜的學習。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;晚點 LatePost&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/15671421&quot; target=&quot;news&quot;&gt;深入理解 Babel - 微內核架構與 ECMAScript 標準化&lt;/a&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;隨着瀏覽器版本的持續更新，瀏覽器對 JavaScript 的支持越來越強大，Babel 的重要性顯得較低了。但 Babel 的設計思路、背後依賴的 ECMAScript 標準化思想仍然值得借鑑。&lt;/p&gt; 
   &lt;p&gt;本文涉及的 Babel 版本主要是 V7.16 及以下，截至發文時，Babel 最新發布的版本是 V7.25.6，未出現大版本更新，近 2 年也進入了穩定迭代期，本文的分析思路基本適用目前的 Babel 設計。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F98boIfNzaXHKZpvBC8Wt_g&quot; target=&quot;_blank&quot;&gt;Vue 3.5「天元突破紅蓮螺巖」正式發佈&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：還在用 vue2.x， 也挺好&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：上月入職一公司。我之前學了 vue3，但公司項目是 vue2，寫的我真難受，很不習慣&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtL1KN4cMEUcGcMzwDy1KcA&quot; target=&quot;_blank&quot;&gt;阿里通義千問 (QwenLM) 全系列大模型被 GitHub 下架，訪問 repo 顯示「404」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：已經快 5 年不用 github 了，中心化的東西一蹦全癱瘓了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：應該是美國當局懷疑大模型背後有暗門，當心他們本國用户下載使用後被標記定位或外傳數據，他們自己的大模型可是嚴格管控的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：嚇得我立刻備份 github 所有私有庫&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310600</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310600</guid>
            <pubDate>Thu, 05 Sep 2024 11:53:54 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>著名未來學家凱文·凱利（KK）預測人工智能三大趨勢</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;2024 Inclusion·外灘大會今天在上海黃浦世博園區開幕。&lt;/p&gt; 
&lt;p&gt;著名未來學家、《連線》雜誌創始主編、《5000 天后的世界》作者凱文·凱利（Kevin Kelly，「KK」）在開幕主論壇上的演講中指出，當人工智能深刻影響經濟和文化，必將湧現三大趨勢：&lt;strong&gt;全球主義、創新加速和 AI 驅動生成&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-971603e73b5d38d489dc052d6f0f031beb7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;全球主義&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;全球正在共同構建一個基於技術的「超級有機體」，將全球的設備連接成巨大的計算系統，所有數字技術包括人工智能都運行在這個新平台上。&lt;/li&gt; 
 &lt;li&gt;全球主義推進推動了新興的全球文化，人們的生活方式和穿着逐漸趨同，底層需求達成一致。&lt;/li&gt; 
 &lt;li&gt;人工智能將實現真正的「實時翻譯」，打破全球語言障礙，加上增強現實（VR）技術，全球化「勞動力」將第一次出現。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;創新加速&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI 技術加速了創新的步伐，體現在新發明和新思想傳播速度加快，通過增強現實（AR）和虛擬現實（VR）技術提高學習效率，AI 通過機器及其他傳感器感知世界，以及 ChatGPT 等人工智能工具加快人們學習速度。&lt;/li&gt; 
 &lt;li&gt;當答案易得時，提出正確問題和掌握正確思維方式變得更有價值，「學會如何學習」將成為未來畢業生的核心技能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;AI 驅動生成&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;人工智能能幫助人們擺脱機械、枯燥的工作，完成無法獨立完成的任務，甚至生成超乎人類想象的全新事物。&lt;/li&gt; 
 &lt;li&gt;人工智能系統正在生成新事物且不斷完善，人工智能是多樣的，將填補許多智能領域。&lt;/li&gt; 
 &lt;li&gt;從人工智能工具中獲益最多的是表現一般或較差的員工，人工智能工具能幫助他們更好地完成工作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;回答中國網友提問：人類正在通過人工智能重塑文明&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在 2024 外灘大會開幕之前，凱文·凱利通過外灘大會官方微信，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpIyyX-CR3HQs51Ot90H1TQ&quot; target=&quot;_blank&quot;&gt;向中國讀者徵集了關於 AI 的問題&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;5 日，外灘大會官方公佈了凱文·凱利的回答。&lt;/p&gt; 
&lt;p&gt;對於&lt;strong&gt;人工智能是不是人類的下一個進化階段&lt;/strong&gt;，凱文·凱利給出了肯定的答案，他認為，人工智能的重要性不亞於火、印刷術和工業革命，這將是廣泛而巨大的變革。但至少需要一個世紀的時間來實現，甚至可能更長，不可能一蹴而就。&lt;/p&gt; 
&lt;p&gt;「人類正在通過人工智能重塑文明。」凱文·凱利説，也許一百萬年來，我們一直是這個星球上唯一的智慧物種。但如今，我們正在創造人造「外星人」，就像他們來自遙遠的星球，前來拜訪我們一樣。這些「外星人」的思想將被引入我們的世界，從而創造出一種新的文化。&lt;/p&gt; 
&lt;p&gt;對於&lt;strong&gt;如何確保人工智能帶來的未來是有益的，而不是加劇不平等&lt;/strong&gt;，凱文·凱利表示，我們有理由對任何新技術保持謹慎，人工智能也不例外。「我認為，未來最大的問題之一可能會源自人工智能。但我們今天所擔心的許多問題，或許並不是最難解決的，那些問題是可以應對的。真正的挑戰可能是我們還未曾想象到的未知問題。」&lt;/p&gt; 
&lt;p&gt;他認為，首先要利用技術去引導它的發展，要實現我們期望的由人工智能驅動的未來，最好的途徑之一就是積極參與其中，而不是試圖禁止它或將其排斥在外。其次，應儘可能推動人工智能技術的開源化。開源模式賦予更多人蔘與的機會，形成一種更具包容性的技術生態系統。&lt;/p&gt; 
&lt;p&gt;在回答&lt;strong&gt;「未來哪些工作不會被人工智能取代」&lt;/strong&gt;時，凱文·凱利表示，正如當今就像幾乎沒有工作是不需要使用某種能源一樣，未來幾乎所有的工作都會使用某種程度的人工智能，但這並不意味着它們會被人工智能完全取代。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310590</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310590</guid>
            <pubDate>Thu, 05 Sep 2024 10:43:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>深入理解 Babel - 微內核架構與 ECMAScript 標準化｜得物技術</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;em&gt;隨着瀏覽器版本的持續更新，瀏覽器對 JavaScript 的支持越來越強大，Babel 的重要性顯得較低了。但 Babel 的設計思路、背後依賴的 ECMAScript 標準化思想仍然值得借鑑。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;本文涉及的 Babel 版本主要是 V7.16 及以下，截至發文時，Babel 最新發布的版本是 V7.25.6，未出現大版本更新，近 2 年也進入了穩定迭代期，本文的分析思路基本適用目前的 Babel 設計。&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;一、Babel 簡介&lt;/h1&gt; 
&lt;h2&gt;Babel 是什麼&lt;/h2&gt; 
&lt;p&gt;Babel 是 JavaScript 轉譯器，通過 Babel，開發者可以自由使用下一代 ECMAScript 語法。高版本 ECMAScript 語法將被轉譯為低版本語法，以便順利運行在各類環境，如低版本瀏覽器、低版本 Node.js 等。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Babel 是轉譯器，不是編譯器。下面是轉譯和編譯的區別:&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;編譯，一般指將一種語言轉換為另一種語法和抽象程度等都不同的語言，常見的比如 gcc 編譯器。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;轉譯，一般指將一種語言轉換為不同版本或者抽象程度相同的語言，比如 Babel 可以把 ECMAScript 6 語法轉譯為 ECMAScript 5 語法。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;利用 Babel，開發者可以使用 ECMAScript 的各種新特性進行開發，同時花極少的精力關注瀏覽器或其他 JS 運行環境對新特性的支持。甚至，開發者可以根據自身需要，創造屬於自己的 JavaScript 語法。&lt;/p&gt; 
&lt;p&gt;Babel 在轉譯的時候，會對源碼進行以下處理: 語法轉譯 (Syntax) 和添加 API Polyfill。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/01_1725449415228.jpg&quot; alt=&quot;01.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;語法 (Syntax) 部分 Babel 支持識別高版本語法，並通過插件將源碼從高版本語法轉譯為低版本語法，如:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;箭頭函數 () =&amp;gt; {} 轉為普通函數 function() {}。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;const / let 轉譯為 var&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;API Polyfill&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;有些運行時相關的 API，語法轉譯無法解決它們對低版本瀏覽器等環境的兼容性問題，因此 Babel 通過與 core-js 等工具的配合，實現 API 部分對目標環境 (通常是低版本瀏覽器等) 的兼容。&lt;/p&gt; 
&lt;p&gt;例如[1, 2, 3].include、Promise 等 API，Babel 在處理時，如果目標環節可能不支持原生的 include / Promise 的話，Babel 會在轉譯結果中嵌入 include / Promise 的自定義實現。&lt;/p&gt; 
&lt;p&gt;有多種方式可以使用 Babel，如: 命令行 (babel-cli、babel-node)、瀏覽器 (babel-standalone)、API 調用 (babel-core)、webpack loader(babel-loader) 等。&lt;/p&gt; 
&lt;h2&gt;轉譯過程&lt;/h2&gt; 
&lt;p&gt;和多數轉譯器相同，Babel 運行的生命週期主要是 3 個階段: 解析、轉換、代碼生成。&lt;/p&gt; 
&lt;p&gt;這個過程涉及抽象語法樹:&lt;/p&gt; 
&lt;p&gt;抽象語法樹 (Abstract Syntax Tree，AST)，或簡稱語法樹 (Syntax tree)，是源代碼語法結構的一種抽象表示。&lt;/p&gt; 
&lt;p&gt;AST 是樹形對象，以結構化的形式表示編程語言的語法結構，樹上的每個節點都表示源代碼中的一種結構。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/02_1725514960565.jpg&quot; alt=&quot;02.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;源碼字符串需要經轉譯器生成 AST，轉譯器有很多種，不同轉譯器，生成的 AST 對象格式細節可能有差異，但共同點為: 都是樹形對象、該樹形對象描述了節點特徵、各節點之間的關係（兄弟、父子等）。&lt;/p&gt; 
&lt;p&gt;以下是 Babel 生命週期的三個過程:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;解析 (Parsing): Code1 ==&amp;gt; 抽象語法樹 1 解析過程包括 2 個環節: 詞法解析、語法解析，最終生成抽象語法樹。 詞法解析階段，代碼字符串被解析為 token 令牌數組，數組項是一個對象，包括: 代碼字符碎片的值、位置、類型等信息。 token 數組是平鋪式的數組，沒有嵌套的結構信息，它是為語法解析階段做準備的。 語法解析階段，token 令牌數組被解析為結構化的抽放語法樹對象 (AST)。 babel-parser 完成該階段的主要功能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/03_1725515016480.jpg&quot; alt=&quot;03.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;轉換 (Transformation): AST1 ==&amp;gt; AST2 Babel 生成 AST 後，會對 AST 進行遍歷，遍歷過程中，各類插件對原 AST 對象進行增刪改查等操作，AST 結構被修改。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/04_1725515063201.jpg&quot; alt=&quot;04.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;代碼生成 (Generation): AST2 ==&amp;gt; Code2 Babel 將修改後的 AST 對象轉目標代碼字符串。 babel-generator 完成該階段的主要功能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/05_1725515093407.jpg&quot; alt=&quot;05.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;二、Babel 微內核架構&lt;/h1&gt; 
&lt;h2&gt;微內核架構&lt;/h2&gt; 
&lt;p&gt;Babel 採用微內核架構，其內核保留核心功能，其餘功能利用外部工具和插件機制實現，也體現了&quot;開放-封閉&quot;的設計原則。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/06_1725515126255.jpg&quot; alt=&quot;06.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;除了微內核設計架構，Babel 的模塊設計也可以做如下分類:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/07_1725515157896.jpg&quot; alt=&quot;07.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;轉譯模塊&lt;/h2&gt; 
&lt;p&gt;轉譯模塊位於 Babel 微內核架構的&quot;微內核&quot;部分，該部分主要負責代碼轉譯，也就是上面提到的&quot;解析-轉換-代碼生成&quot;過程。&lt;/p&gt; 
&lt;p&gt;該模塊主要包括: babel-parser、babel-traverse、babel-generator。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;babel-parser 負責將代碼字符串轉為 AST 對象。 有 2 點值得一提:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;babel-parser 本身並不會對 AST 做轉換操作，只是負責解析出 AST。AST 轉換部分交由各類 plugins 和 presets 處理。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;babel-parser 內置了對 ESNext/TypeScript/JSX/Flow 最新版本語法的支持，但很多默認是不開啓的，目前沒有開放插件機制擴展新語法。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-traverse 在轉譯過程中，babel-traverse 負責遍歷 AST 節點，並根據配置的 plugins/presets，在遍歷過程中，對各個 AST 節點進行增刪改查的操作。 AST 是一個樹形對象，遍歷 AST 對象的過程也是一個深度優先遍歷的過程。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-generator 負責將 AST 節點，轉為代碼字符串，同時也可以生成 source-map。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;插件模塊&lt;/h2&gt; 
&lt;p&gt;插件模塊包括 plugins、presets。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;plugins 豐富的插件，幫助 Babel 成為一個非常成功的轉譯工具。 對 AST 的遍歷、轉換是 Babel 轉譯的核心功能，但 Babel 本身並不參與該過程，將這些功能作為插件引入到運行時。 具體來説，babel-core 作為核心工具，不提供對 AST 的修改邏輯，通過調用各類插件，實現對 AST 的修改。 Babel 的插件分為語法插件和轉換插件。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;語法插件，值得注意的是，babel-parser 負責將 JavaScript 代碼解析出抽象語法樹 (AST)，它支持全面識別 ESNext/TypeScript/JSX/Flow 等語法，目前由 Babel 團隊開發維護，不支持插件化。 Babel 插件生態中的語法插件，其功能就是作為&quot;開關&quot;，配置是否開啓 babel-parser 的某些語法轉譯功能。 語法插件在 Babel 源碼中，以 babel-plugin-syntax 開頭。 舉個例子:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;babel-plugin-syntax-decorators 負責開啓 babel-parser 對裝飾器的語法支持。&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;babel-plugin-syntax-dynamic-import 負責開啓 babel-parser 對 import 語句的語法支持。&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;babel-plugin-syntax-jsx 負責開啓 babel-parser 對 jsx 語法的支持。&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;轉換插件，轉換插件就是社區裏常説的 Babel 插件，負責轉換 AST 節點。 在介紹 babel-traverse 時提到，它負責遍歷 AST 對象，每個 AST 節點會被訪問到，等待轉換，轉換的部分，由&quot;轉換插件&quot;負責。 轉換插件會提供一個叫做&quot;Visitor&quot;的對象，該對象的 Key 為節點名稱，Value 部分提供進入該節點時、離開該節點時的回調函數，在回調函數裏，可以對該節點進行一系列操作。 &quot;Visitor&quot; 又稱為 &quot;訪問者&quot;。&lt;/p&gt; &lt;p&gt;// plugin 提供 visitor，在 visitor 中對 AST 節點操作 const visitor = { Program: { enter() {}, exit() {}, },&lt;/p&gt; &lt;pre&gt;&lt;code&gt;CallExpression: {
    enter() {},
    exit() {},
},

NumberLiteral: {
    enter() {},
    exit() {},
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;}; traverse(ast, visitor);&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;轉換插件在 Babel 源碼中，以 babel-plugin-transform 開頭。&lt;/p&gt; 
&lt;p&gt;舉個例子:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-plugin-transform-strict-mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;該插件攔截 Program 節點，也就是整個程序的根節點，添加 &quot;use strict&quot;指令。&lt;/p&gt; 
&lt;p&gt;visitor 節點值為函數時，是 enter 回調的快捷方式。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    name: &quot;transform-strict-mode&quot;,

    visitor: {
      Program(path) {
        const { node } = path;

        for (const directive of node.directives) {
          if (directive.value.value === &quot;use strict&quot;) return;
        }

        path.unshiftContainer(
          &quot;directives&quot;,
          t.directive(t.directiveLiteral(&quot;use strict&quot;)),
        );
      },
    },
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-plugin-transform-object-assign&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;該插件負責攔截函數調用表達式節點 CallExpression，將 Object.assign 轉為 extends 寫法。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    name: &quot;transform-object-assign&quot;,

    visitor: {
      CallExpression(path, file) {
        if (path.get(&quot;callee&quot;).matchesPattern(&quot;Object.assign&quot;)) {
          path.node.callee = file.addHelper(&quot;extends&quot;);
        }
      },
    },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Presets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Babel 插件的功能是細粒度的，大部分插件承擔了單一功能。&lt;/p&gt; 
&lt;p&gt;而在實際開發過程中，往往需要支持對各類語法的支持。此時，有兩種做法:&lt;/p&gt; 
&lt;p&gt;A. 需要支持哪些特性，就分別引入支持該特性的插件&lt;/p&gt; 
&lt;p&gt;B. 直接引入一個插件集合，涵蓋所需的各類插件功能&lt;/p&gt; 
&lt;p&gt;很顯然，第一種做法是相對麻煩的。針對第二種做法，Babel 提供了插件集 preset。&lt;/p&gt; 
&lt;p&gt;preset 在 Babel 源碼中，以 babel-preset 開頭。&lt;/p&gt; 
&lt;p&gt;例如，Babel 已經提供了幾種常用的 preset 供開發者使用:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;babel-preset-env&lt;/li&gt; 
 &lt;li&gt;babel-preset-react&lt;/li&gt; 
 &lt;li&gt;babel-preset-flow&lt;/li&gt; 
 &lt;li&gt;babel-preset-typescript&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;插件運行順序&lt;/strong&gt; Babel 配置項中，plugins 和 presets 均以數組的形式配置，執行時有先後順序。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;plugins 在 presets 之前運行&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;plugins 按照數組正序執行&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;presets 按照數組倒序執行&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/08_1725519262475.jpg&quot; alt=&quot;08.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;工具模塊&lt;/h2&gt; 
&lt;p&gt;工具模塊提供 Babel 相關模塊所需的各類工具，以下一一簡要介紹:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;babel-core babel-core 對外提供了 Babel 多項功能的 API，如轉譯文件、轉譯代碼、創建/獲取配置等，在 Babel 官方文檔介紹的比較詳細，不再贅述。 值得注意的是，轉譯類的 API 均提供了同步和異步版本，如 transformSync/transfomAsync、parseSync/parseAsync。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-cli Babel 的命令行工具，可以直接轉譯文件夾/文件，它也提供了很多配置項做其他工作，官方文檔介紹的比較詳細，感興趣的同學可以去 Babel 官網查看詳細配置。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-standalone Babel 對外服務的很多包是基於 node 環境下使用的，babel-standalone 提供了瀏覽器下轉譯的方案。 babel-standalone 內置了所有 Babel 插件，所以體積還是比較大的，而且在瀏覽器端轉譯需要時間，比較適合開發、學習使用，不適合在生產環境使用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;舉個例子:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;test babel-standalone&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;https://unpkg.com/@babel/standalone/babel.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&quot;text/babel&quot;&amp;gt;
      const arr = [1, 2, 3];
      console.log(...arr);
&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;在瀏覽器運行該 html，可以看到，頁面結構變成了:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&quot;utf-8&quot; /&amp;gt;
    &amp;lt;title&amp;gt;test babel-standalone&amp;lt;/title&amp;gt;
    &amp;lt;script src=&quot;https://unpkg.com/@babel/standalone/babel.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&quot;text/babel&quot;&amp;gt;
      const arr = [1, 2, 3];
      console.log(...arr);
&amp;lt;/script&amp;gt;
    &amp;lt;script&amp;gt;
      &quot;use strict&quot;;
      var _console;
      var arr = [1, 2, 3];
      (_console = console).log.apply(_console, arr); //# sourceMappingURL=data:application/json;charset=utf-8;base64...
&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-node 提供在命令行執行高級語法的環境。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;例如:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// index.js 裏可以使用高級語法     
babel-node -e index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;index.js 文件以及被其引入的其他文件均可以使用高級語法了。和 babel-cli 不同的是，babel-cli 只負責轉換，不在 node 運行時執行；babel-node 會在 node 運行時執行轉換，不適合生產環境使用。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-register&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在源文件中，引入 babel-register，如 index.js:&lt;/p&gt; 
&lt;p&gt;index.js&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;require(&#39;babel-register&#39;);     
require(&#39;./run&#39;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;run.js&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import fs from &#39;fs&#39;;     
console.log(fs);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;執行 node index 時，run.js 就不需要被轉碼了。&lt;/p&gt; 
&lt;p&gt;babel-register 通過攔截 node require 方法，為 node 運行時引入了 Babel 的轉譯能力。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-loader&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;babel-loader 是利用 babel-core 的 API 封裝的 webpack loader，用於 webpack 構建過程。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-types&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;babel-types 是一個非常強大的工具集合，它集成了節點校驗、增刪改查等功能，是 Babel 核心模塊開發、插件開發等場景下不可或缺的工具。&lt;/p&gt; 
&lt;p&gt;例如:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const t = require(&#39;@babel/types&#39;);
const binaryExpression = t.binaryExpression(&#39;+&#39;, t.numericLiteral(1), t.numericLiteral(2));
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-template&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;模板引擎，負責將代碼字符串轉為 AST 節點對象。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    import { smart as template } from &#39;@babel/template&#39;;
    import generate from &#39;@babel/generator&#39;;
    import * as t from &#39;@babel/types&#39;;

    const buildRequire = template(      var %%importName%% = require(%%source%%);    );

    const ast = buildRequire({
        importName: t.identifier(&#39;myModule&#39;),
        source: t.stringLiteral(&quot;my-module&quot;),
    });

    const code = generate(ast).code

    console.log(code)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;運行結果:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;var myModule = require(&quot;my-module&quot;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-code-frame&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;負責打印出錯的代碼位置，例如:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const { codeFrameColumns } = require(&#39;@babel/code-frame&#39;);

const testCode = `
class Run {
    constructor() {}
}
`;

const location = {
    start: {
        line: 2,
        column: 2,
    }
};

const result = codeFrameColumns(testCode, location);

console.log(result);

  1 | class Run {
&amp;gt; 2 |     constructor() {}
    |  ^
  3 | }
  4 |
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;babel-highlight&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;向控制枱輸出有顏色的代碼片段。該工具可以識別 JavaScript 中的操作符號、標識符、保留字等類型的詞法單元，並在終端環境下顯示不同的顏色。&lt;/p&gt; 
&lt;h2&gt;運行時相關模塊&lt;/h2&gt; 
&lt;p&gt;Babel 配合其插件可以對靜態代碼進行轉譯，但有一些遺漏點:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;對於運行時涉及的一些高版本 API，並沒有提供兼容目標環境的 Polyfill。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;轉譯產物代碼可能有些臃腫。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;為此，運行時模塊 (runtime) 關注的是轉譯產物的運行時環境，對運行時提供 API polyfill、代碼優化等，該模塊涉及幾個子包:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;babel-preset-env&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-plugin-transform-runtime&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-runtime&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-runtime-corejs2/3&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;core-js&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;接下來以案例解釋 runtime 模塊的作用。&lt;/p&gt; 
&lt;p&gt;源碼文件 index.js 的內容:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;const a = 1; // const 為語法部分
class Base {} // class 為語法部分
new Promise() // Promise 為 API 部分
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;這段源碼包含了語法和 API 部分:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;const、class 為語法部分&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Promise 為 API 部分&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;如果希望這段源碼轉為 ES5 版本，使構建產物可以運行在不支持 ES6 和 Promise 的環境裏，該怎麼做呢？&lt;/p&gt; 
&lt;p&gt;用 babel 命令行執行轉譯，其中源文件為 index.js，轉譯產物文件為 index-compiled.js。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx babel index.js --out-file index-compiled.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;需要配置.babelrc 幫助 Babel 完成語法和 API 部分的轉譯:&lt;/p&gt; 
&lt;p&gt;.babelrc:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{
    &quot;presets&quot;: [
        [ 
            &quot;@babel/preset-env&quot;
        ]
    ],
    &quot;plugins&quot;: [
        [
            &quot;@babel/plugin-transform-runtime&quot;,
            {
                &quot;corejs&quot;: 3
            }
        ]
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;簡要解釋下該配置的原理:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;babel-preset-env 可以完成語法部分轉譯，即 const 轉譯為 var 但構建產物中，有些輔助代碼如 _classCallCheck 是以硬編碼的形式直接寫入轉譯產物的:&lt;/p&gt; &lt;p&gt;&quot;use strict&quot;;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(&quot;Cannot call a class as a function&quot;); } }

  var a = 1;

  var Base = function Base() {
      _classCallCheck(this, Base);
  };

  new Promise();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這樣的後果就是構建產物比較臃腫。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;babel-plugin-transform-runtime 可以將上述 _classCallCheck 置於通用包中，以引用的形式寫入轉譯產物:&lt;/p&gt; &lt;p&gt;&quot;use strict&quot;;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  var _interopRequireDefault = require(&quot;@babel/runtime/helpers/interopRequireDefault&quot;);

  var _classCallCheck2 = _interopRequireDefault(require(&quot;@babel/runtime/helpers/classCallCheck&quot;));

  var a = 1;

  var Base = function Base() {
      (0, _classCallCheck2[&quot;default&quot;])(this, Base);
  };

  new Promise();
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;babel-plugin-transform-runtime 的配置參數 corejs 用於轉譯 API 部分，如 Promsie&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  &quot;use strict&quot;;

  var _interopRequireDefault = require(&quot;@babel/runtime-corejs3/helpers/interopRequireDefault&quot;);

  var _promise = _interopRequireDefault(require(&quot;@babel/runtime-corejs3/core-js-stable/promise&quot;));

  var _classCallCheck2 = _interopRequireDefault(require(&quot;@babel/runtime-corejs3/helpers/classCallCheck&quot;));

  var a = 1;

  var Base = function Base() {
      (0, _classCallCheck2[&quot;default&quot;])(this, Base);
  };

  new _promise&quot;default&quot;;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Babel 轉譯過程的運行時優化是一個繁瑣的過程，為此將單獨用一章講解運行時優化，感興趣的同學可以直接閲讀 &quot;Babel Runtime&quot; 章節詳細瞭解。&lt;/p&gt; 
&lt;h1&gt;三、標準化&lt;/h1&gt; 
&lt;p&gt;Babel 生態涉及的一些標準化組織。無論是 JavaScript、HTML、DOM、URL 等領域，均需要統一的標準，才能在不同的運行環境下有統一的表現。Babel 轉譯也需要遵循這些標準，包括 ECMAScript、web 標準等。&lt;/p&gt; 
&lt;h2&gt;ECMAScript&lt;/h2&gt; 
&lt;h3&gt;JavaScript 誕生&lt;/h3&gt; 
&lt;p&gt;1995 年，JavaScript 的第一個版本發佈。用時間線的方式描述 JavaScript 的誕生過程會更清晰:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/09_1725519904874.jpg&quot; alt=&quot;09.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;ECMAScript 發佈&lt;/h3&gt; 
&lt;p&gt;1996 年，微軟模仿 JavaScript 實現了 JScript 並內置在 IE3.0，隨後，Netscape 公司着手推動 JavaScript 標準化。&lt;/p&gt; 
&lt;p&gt;這裏涉及幾個組織:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ecma International Ecma International 是一家國際性會員制度的信息和電信標準組織。1994 年之前，名為歐洲計算機製造商協會（European Computer Manufacturers Association）。因為計算機的國際化，組織的標準牽涉到很多其他國家，因此組織決定改名錶明其國際性。 Ecma International 的任務包括與有關組織合作開發通信技術和消費電子標準、鼓勵準確的標準落實、和標準文件與相關技術報告的出版。 Ecma International 負責多個國際標準的制定:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;CD-ROM 格式（之後被國際標準化組織批准為 ISO 9660）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;C# 語言規範&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;C++/CLI 語言規範&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;通用語言架構（CLI）&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Eiffel 語言&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;電子產品環境化設計要素&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Universal 3D 標準&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;OOXML&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Dart 語言規範&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;ECMAScript 語言規範（以 JavaScript 為基礎）ECMA-262 其中就包括 JavaScript 標準語言規範 ECMAScript。 cma International 擁有 ECMAScript 的商標。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ECMA TC39 「TC39」全稱「Technical Committee 39」譯為「第 39 號技術委員會」，是 Ecma International 組織架構中的一部分。 TC39 負責迭代和發展 ECMAScript，它的成員由各個主流瀏覽器廠商的代表組成，通常每年召開約 6 次會議來討論未決提案的進展情況，會議的每一項決議必須得到大部分人的贊同，並且沒有人強烈反對才可以通過。 TC39 負責:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;維護和更新 ECMAScript 語言標準&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;識別、開發、維護 ECMAScript 的擴展功能庫&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;開發測試套件&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;為 ISO/IEC JTC 1 提供標準&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;評估和考慮新添加的標準&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ISO&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;國際標準化組織（英語: International Organization for Standardization，簡稱: ISO）成立於 1947 年 2 月 23 日，制定全世界工商業國際標準的國際標準建立機構。&lt;/p&gt; 
&lt;p&gt;ISO 的國際標準以數字表示，例如: &quot;ISO 11180:1993&quot; 的 &quot;11180&quot; 是標準號碼，而 &quot;1993&quot; 是出版年份。&lt;/p&gt; 
&lt;p&gt;ISO/IEC JTC 1 是國際標準化組織和國際電工委員會聯合技術委員會。其目的是開發、維護和促進信息技術以及信息和通信技術領域的標準。JTC 1 負責了許多關鍵的 IT 標準，從 MPEG 視頻格式到 C++ 編程語言。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/10_1725520572128.jpg&quot; alt=&quot;10.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMAScript 發展過程中的關鍵節點&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/11_1725520594519.jpg&quot; alt=&quot;11.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;ECMAScript 各版本&lt;/h3&gt; 
&lt;p&gt;ECMAScript 經歷了多個版本，每個版本有自己的特點，簡單列舉如下:&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/12_1725520728091.jpg&quot; alt=&quot;12.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/13_1725520738100.jpg&quot; alt=&quot;13.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;ECMAScript 迭代過程&lt;/h3&gt; 
&lt;p&gt;一個 ECMAScript 標準的製作過程，包含了 Stage 0 到 Stage 4 共 5 個階段，每個階段提交至下一階段都需要 TC39 審批通過。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/14_1725520848631.jpg&quot; alt=&quot;14.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/15_1725520864402.jpg&quot; alt=&quot;15.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;特性進入 Stage-4 後，才有可能被加入標準中，還需要 ECMA General Assembly 表決通過才能進入下一次的 ECMAScript 標準中。&lt;/p&gt; 
&lt;h2&gt;如何閲讀 ECMAScript&lt;/h2&gt; 
&lt;h3&gt;ECMAScript 文檔結構&lt;/h3&gt; 
&lt;p&gt;ECMAScript 的規格，可以在 ECMA 國際標準組織的官方網站免費下載和在線閲讀。&lt;/p&gt; 
&lt;p&gt;查看 ECMAScript 不同版本的地址：&lt;em&gt;++&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fecma-international.org%2Fpublications-and-standards%2Fstandards%2Fecma-262%2F%2B%2B&quot; target=&quot;_blank&quot;&gt;https://ecma-international.org/publications-and-standards/standards/ecma-262/++&lt;/a&gt;&lt;/em&gt;。&lt;/p&gt; 
&lt;p&gt;截至 2023 年底，已發佈的版本如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262 5.1 edition, June 2011&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F5.1%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/5.1/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 6th edition, June 2015&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F6.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/6.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 7th edition, June 2016&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F7.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/7.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 8th edition, June 2017&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F8.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/8.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 9th edition, June 2018&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F9.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/9.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 10th edition, June 2019&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F10.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/10.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 11th edition, June 2020&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F11.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/11.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 12th edition, June 2021&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F12.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/12.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 13th edition, June 2022&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F13.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/13.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ECMA-262, 14th edition, June 2023&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F14.0%2Findex.html%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/14.0/index.html）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;每個版本有獨立的網址，格式為: &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F%7Bversion%7D%2F%EF%BC%8C%E6%AF%94%E5%A6%82&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/{version}/，比如&lt;/a&gt; ECMAScript 14.0 版本的網址為 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F262.ecma-international.org%2F14.0%2F%E3%80%82&quot; target=&quot;_blank&quot;&gt;https://262.ecma-international.org/14.0/。&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;從章節數量上，ECMAScript 6.0、ECMAScript 7.0 有 26 章，之後的版本有 27-29 章，雖然章節數量不同，規格章節的分佈是保持一定規律的，以 ECMAScript 11.0 版本為例:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Introduction: 介紹部分&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;該章節簡要描述了: JavaScript 和 ECMAScript 的發展歷史、不同 ECMAScript 規格的主要更新內容。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;第 1 章到第 3 章: 描述了規格文件本身，而非語言&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;第 1 章用一句話描述了該規格的描述範圍。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;第 2 章描述了基於規格的&quot;實現&quot;的一致性要求:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;&quot;實現&quot;必須支持規格中描述的所有類型、值、對象、屬性、函數以及程序的語法和語義&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;&quot;實現&quot;必須按照 Unicode 標準和 ISO/IEC 10646 的最新版本處理文本輸入&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;&quot;實現&quot;如果提供了應用程序編程接口（API），那麼該 API 需要適應不同的人文語言和國家差異，且必須實現最新版本的 ECMA-402 所定義的與本規範相兼容的接口&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;&quot;實現&quot;可以支持該規格中沒有提及的類型、值、對象、屬性、函數、正則表達式語法以及其他編程寫法&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;&quot;實現&quot;不能實現該規格中禁止的寫法&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 3 章描述了該規格的一些參考資料:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;ISO/IEC 10646&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;ECMA-402&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;EMCA-404 JSON 數據交換格式規範&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 4 章: 對這門語言總體設計的描述。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 5 章到第 8 章: 語言宏觀層面的描述。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 6 章介紹數據類型。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 7 章介紹語言內部用到的抽象操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 8 章介紹代碼如何運行。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第 9 章到第 27 章: 介紹具體的語法。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;一般而言，除非寫編譯器，開發者無需閲讀 ECMAScript 的規格，規格的內容非常多，如無必要也無需通讀。只是在遇到一些奇怪的問題時，閲讀官方規格，是最穩妥的辦法。&lt;/p&gt; 
&lt;h3&gt;通過閲讀規格解決一些問題（以 ECMAScript 11.0 為例）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;識別關鍵詞和保留字，並高亮 Babel 工具集中的 babel-highlight，可以實現在終端對代碼塊中的目標字符單元顯示不同的顏色。這裏需要識別不同字符單元的類型，如關鍵字、保留字、標識符、數字、字符串等。 標識符、數字、字符串都很好理解和識別，但哪些字符應該被識別為關鍵字、保留字，而不是標識符呢？ 此時可以閲讀 ECMAScript 規格了，ECMAScript 11.0 規格的 11.6.2 節介紹了關鍵詞和保留字列表。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;關鍵詞（keywords） 關鍵詞首先是標識符，同時有語義，包括 if、while、async、await...，個別關鍵詞是可以用作變量名的。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;保留字（reserved word） 保留字首先是標識符，但不能用作變量名。 部分關鍵詞是保留字，但部分不是: if、while 是保留字；await 只有在 async 方法和模塊中才是保留字；async 不是保留字，它可以作為普通的變量名使用。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;保留字列表&lt;/p&gt; &lt;p&gt;await break case catch class const continue debugger default delete do else enum export extends false finally for function if import in instanceof new null returns uper switch this throw true try typeof var void while with yield&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;讀完上述規格，也就知道哪些字符單元是需要識別為保留字與關鍵詞，並高亮的了。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;識別全局對象，並高亮，繼續使用 babel-highlight 實現代碼塊中的全局對象高亮，那麼，我們需要知道哪些是規格中描述的全局變量。 規格的 18 章介紹了全局對象，通過該章的描述，可以知道:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;全局屬性，全局屬性有: globalThis、Infinity、NaN、    。&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;全局方法，全局方法有: eval(x)、isFinite、isNaN、parseFloat、parseInt、decodeURIComponent、encodeURIComponent 等。&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;全局構造函數，全局的構造函數有:&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;p&gt;Array ArrayBuffer BigInt BigInt64Array BigUnit64Array Boolean DataView Date Error EvalError Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Number Object Promise Proxy RangeError ReferenceError RegExp Set SharedArrayBuffer String Symbol SyntaxError TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array URIError WeakMap WeakSet&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;其他的全局屬性 Atomics、JSON、Math、Reflect。 很顯然，當字符單元的名稱是上述名稱中的一員時，我們可以對其進行高亮處理了（若上下文中無重新定義的同名變量）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;自定義 Error babel-loader 自身維護了私有的 LoaderError 對象，該對象繼承自原生 Error 類，並且訂製了部分實例屬性。代碼如下:&lt;/p&gt; &lt;p&gt;class LoaderError extends Error { constructor(err) { super();&lt;/p&gt; &lt;pre&gt;&lt;code&gt;      const { name, message, codeFrame, hideStack } = format(err);

      this.name = &quot;BabelLoaderError&quot;;

      this.message = ${name ? ${name}: ` : &quot;&quot;}${message}\n\n${codeFrame}\n`;

      this.hideStack = hideStack;

      Error.captureStackTrace(this, this.constructor);
  }
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;}&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;可以看到，babel-loader 自定義了錯誤實例的 name、message、hideStack 屬性，那麼，問題是，原生的 Error 類有哪些屬性和方法，哪些是開發者可以自定義的呢？&lt;/p&gt; 
&lt;p&gt;規格的 19.5 章節，詳細介紹了 Error 的各類規範:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Error 作為函數被調用時（Error(...)），表現和 new Error(...) 一致，均會創建並返回 Error 的新實例&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Error 可以被繼承，比如通過 extends 的方式，子類必須提供 constructor 方法，且該方法內必須提供 super() 調用&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Error 構造函數必須有 prototype 屬性&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Error.prototype 屬性需有以下屬性：&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt; &lt;p&gt;Error.prototype.constructor: 指向構造函數&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Error.prototype.message: 描述錯誤信息，默認是空字符串&lt;/p&gt; &lt;/li&gt; 
     &lt;li&gt; &lt;p&gt;Error.prototype.name: 描述錯誤名稱，默認值是 Error&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;從 LoaderError 的源碼可以看到，LoaderError 做了以下幾件事情:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;LoaderError 繼承自 Error&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;實例自定義了 name、message 屬性，明確 babel-loader 的信息&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;實例自定義的 hideStack 屬性是非標準屬性，用於 babel-loader 內部&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;web 標準&lt;/h2&gt; 
&lt;p&gt;是在解決 API Polyfil 的時候，Babel 配合使用的 core-js 除了提供 ECMAScript 標準下的 JavaScript API 實現，也提供了 DOM/URL 等實現。而 DOM/URL 所屬的 web 標準，由 W3C/WHATWG 制定。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/16_1725521927064.jpg&quot; alt=&quot;16.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;經過多年發展，WHATWG 和 W3C 目前是合作關係，其中，WHATWG 維護 HTML 和 DOM 標準，W3C 使用 WHATWG 存儲庫中的 HTML 和 DOM 標準描述，W3C 在 HTML 部分的工作集中在 XHTML/XML 上。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/17_1725521957624.jpg&quot; alt=&quot;17.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h1&gt;總結&lt;/h1&gt; 
&lt;p&gt;本文介紹了 Babel 的概述/微內核架構/ECMAScript 標準化方面的設計思想和部分實現原理。&lt;/p&gt; 
&lt;p&gt;上述內容其實在很早之前就已經成型了，筆者也查看了 Babel 最近的迭代內容，發現並沒有太大的變化。至於代碼轉譯領域，目前是 Babel 還是其他工具哪個更有優勢，不在本文的討論範圍內。除了比較社區哪些工具更好而言，&quot;Babel 的設計思路、其與標準規範是怎麼配合的&quot;等也是很值得學習的地方，也是這篇文章的產生背景。&lt;/p&gt; 
&lt;p&gt;希望本文對你有所幫助！&lt;/p&gt; 
&lt;p&gt;*&lt;strong&gt;文 / hoperyy&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本文屬得物技術原創，更多精彩文章請看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F&quot; target=&quot;_blank&quot;&gt;得物技術&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未經得物技術許可嚴禁轉載，否則依法追究法律責任！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5783135/blog/15671421</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/15671421</guid>
            <pubDate>Thu, 05 Sep 2024 07:49:12 GMT</pubDate>
            <author>得物技術</author>
        </item>
        <item>
            <title>《中國 MaaS（模型即服務）平台市場概覽報告》發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;OSCHINA 發佈了《中國 MaaS（模型即服務）平台市場概覽報告》。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1540&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0905/150111_ySdv_2720166.png&quot; width=&quot;2728&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;主要內容包括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;國內 MaaS 平台在互聯網平台的聲量對比&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;開發者對 MaaS 平台的關注度與需求分析&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;中國主流 MaaS 平台營銷活動形式&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#16a085&quot;&gt;&lt;strong&gt;報告亮點速覽&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;我們發現，當前 MaaS 平台的主要用户羣體是開發者和技術負責人，他們的關注點集中在平台的技術創新性、使用門檻、算力資源支持以及實際的開發應用能力上。&lt;/p&gt; 
&lt;p&gt;搜索關鍵詞分析則進一步強化了這一點，用户普遍關心的是 MaaS 平台的先進技術、資源配備以及實際的應用價值。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2024/0905/150702_R0dY_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/jljf6vr8m1tlk9m/maa_s_dAgI0VpoJH.pdf&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;在線閲讀地址&lt;/em&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;div&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;該報告已上傳至開源中國 APP，歡迎前往&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#27ae60&quot;&gt;「開源中國 APP - 報告模塊」&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;查看更多深度內容。&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;img height=&quot;1426&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0905/151256_svsk_2720166.png&quot; width=&quot;2540&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p style=&quot;text-align:center&quot;&gt;「開源中國 APP」下載地址：&lt;br&gt; &lt;a href=&quot;https://www.oschina.net/app&quot; target=&quot;_blank&quot;&gt;https://www.oschina.net/app&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/310487</link>
            <guid isPermaLink="false">https://www.oschina.net/news/310487</guid>
            <pubDate>Thu, 05 Sep 2024 07:28:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
    </channel>
</rss>