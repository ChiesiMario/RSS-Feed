<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - news - 繁體中文（香港）</title>
    <link>https://www.oschina.net/news/project</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-hk</language>
    <lastBuildDate>Tue, 02 Sep 2025 02:44:54 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>R8 疑難雜症分析實戰：外聯優化設計缺陷引起的崩潰</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;一、背景&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;R8 作為谷歌官方的編譯優化工具，在編譯階段會對字節碼進行大規模修改，以追求包體優化和性能提升。但是 Android 應用開發者數量太過龐大，無論測試流程多麼完善，終究難以避免在一些特定場景下出現問題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;近期我們在升級項目的 AGP，遇到了一個指向系統 SurfaceTexture 類的 native 崩潰問題。經反編譯分析發現問題最終指向了 smali 字節碼中多餘的一行 new-instance 指令。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//c5f08cf575756e08466c223dc6283005.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//1c03aaa90c06e347c22e752eeb0ccb1d.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;該指令創建了一個 SurfaceTexture 對象，但是並未調用其&amp;lt;init&amp;gt;方法，這意味着構造方法沒有執行，但是這個類重寫了 finalize 方法，後續被 gc 回收時會調用其中的 nativeFinalize 這個 JNI 方法，最終在 native 層執行析構函數時觸發了 SIGNALL 11 的內存訪問錯誤.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//d639c13a4be57106726e6ea52ee6c3f4.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//2210f4a541d54e36690a7e1fbfb16627.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;二、復現問題&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;我們注意到多出來的 new-instance 指令下面緊接着的是對 a0.e 類中的靜態方法 i() 的調用，其內部實現就是 SurfaceTexture 的構造方法。這是典型的代碼外聯操作，即一段相同的代碼在工程中多次出現，則會被抽出來單獨作為一個靜態函數，原先的調用點則替換成該函數的調用，這樣可以減小代碼體積，是常見的編碼思路。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;例如：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;class&amp;nbsp;Activity{
&amp;nbsp; &amp;nbsp;&amp;nbsp;void&amp;nbsp;onCreate(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;String&amp;nbsp;a = xx.xxx();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;String&amp;nbsp;b = xx.xxx();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;Log.e("log",a+b);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;//...
&amp;nbsp; &amp;nbsp; }


&amp;nbsp; &amp;nbsp;&amp;nbsp;void&amp;nbsp;onReusme(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;String&amp;nbsp;a = xx.xxx();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;String&amp;nbsp;b = xx.xxx();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;Log.e("log",a+b);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;//...
&amp;nbsp; &amp;nbsp; }


}&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;class&amp;nbsp;Activity{
&amp;nbsp; &amp;nbsp;&amp;nbsp;void&amp;nbsp;onCreate(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;Activity$Outline.log();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;//...
&amp;nbsp; &amp;nbsp; }


&amp;nbsp; &amp;nbsp;&amp;nbsp;void&amp;nbsp;onReusme(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// ...
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;Activity$Outline.log();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;//...
&amp;nbsp; &amp;nbsp; }
}
//外聯生成的類
class&amp;nbsp;Activity$Outline{
&amp;nbsp; &amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;log(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;String&amp;nbsp;a = xx.xxx();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;String&amp;nbsp;b = xx.xxx();
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;Log.e("log",a+b);
&amp;nbsp; &amp;nbsp; }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;我們根據這個生成類的類名可以知道是 R8 中 ApiModelOutline 功能生成了這個類。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//832dad3a1078a82298590ae249e4c937.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;我們進到 R8 工程中檢索下相關的關鍵字，再加上 demo 多次嘗試，可以確認滿足以下條件能夠必現該問題:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;使用了高於當前 minSdkVersion 的系統函數/變量（僅限系統類，自己寫的無效）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;用 synchronized 或者 try 語句塊包裹了該調用，或者給該函數傳參時有任何計算行為（除了傳局部變量）。例如：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;ol&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new SurfaceTexture( getParmas() )&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new SurfaceTexture( if(enable) 1 : 2)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new SurfaceTexture ( (boolean) enable )&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;三、問題分析&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在確認復現條件之後，我們帶着幾個問題來逐個分析。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;ApiModel 外聯是什麼？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;R8 中的優化大多數跟包體優化有關，代碼外聯也是其中一種，但是外聯的前提是代碼重複的次數滿足一定閾值，但是 ApiModel 會對所有調用了高版本系統 API 的代碼做外聯，包括只調用一次的場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;ApiModel 並非為了包體優化，我們通過 R8 工程的 issueTracker&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;（https://issuetracker.google.com/issues/333477035）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;檢索到了相關的信息：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//5020bee9863c252049d9f1d8f055c200.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;譯：AGP 新增的 ApiModel 功能是為了防止在低版本設備上不可能執行的代碼引起類驗證錯誤，從而降低 App 啓動耗時。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;從這篇介紹 ART 虛擬機類驗證的文檔&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;（https://chromium.googlesource.com/chromium/src/+/HEAD/build/android/docs/class_verification_failures.md#chromium_s-solution）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;就能夠理解上面這句話的含義：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;ART 虛擬機會在 APK 安裝之後立刻執行 AOT class verification，即對 dex 文件中所有的類進行驗證，如果驗證成功則後續運行時將不需要再進行驗證，反之若失敗，則該 class 會被 ART 打上&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#e5e5e5"&gt;RetryVerificationAtRuntime&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3e3e3e"&gt;的標記，後續運行時還得重新執行類驗證。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;同時這些失敗的類也將無法被 dex2oat 優化成 oat 格式的優化字節碼（oat 字節碼的加載和執行速度更快）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//5d3b99565c562dff751ba4ac636da574.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;如果是在 MainActivity，啓動任務中使用了這些高版本 API，那麼在低版本設備 App 啓動時就必須額外執行一次類驗證（比較耗時，有的類能到 8ms&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;&amp;nbsp;https://issues.chromium.org/issues/40574431&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;），而 ApiModel 外聯則是相當於將這些肯定驗證失敗的函數的調用單獨抽到一個生成類中，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;這樣運行時就能將類驗證失敗問題徹底隔離在生成類中，從而規避運行時的類驗證耗時。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;//安裝 apk 後驗證失敗，運行時驗證失敗，但是能正常執行
class&amp;nbsp;MainActivity{
&amp;nbsp; &amp;nbsp;&amp;nbsp;void&amp;nbsp;onCreate(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;if(android.sdk&amp;nbsp;&amp;gt;&amp;nbsp;26){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;new&amp;nbsp;SurfaceTexture(false);
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;ApiModel 後&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;class&amp;nbsp;MainActivity{
&amp;nbsp; &amp;nbsp;&amp;nbsp;void&amp;nbsp;onCreate(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;if(android.sdk &amp;gt;&amp;nbsp;26){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; a0.b();&amp;nbsp;//這樣類驗證就能成功
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; }
}
//生成的外聯類，類驗證會失敗，但是運行時不可能走到，不影響
class&amp;nbsp;a0{
&amp;nbsp; &amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;b(){
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;new&amp;nbsp;SurfaceTexture(false);
&amp;nbsp; &amp;nbsp; }
}&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;更多關於 ApiModel 的詳細介紹，見這篇文章：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;https://medium.com/androiddevelopers/mitigating-soft-verification-issues-in-r8-and-d8-7e9e06827dfd&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;為什麼會多生成一個&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;new-instance 指令?&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;介紹完 ApiModel 之後，我們已經知道了為什麼&amp;lt;init&amp;gt;方法的調用被替換成了一個生成函數的調用，接下來我們再分析下導致崩潰的罪魁禍首 new-instance 指令是如何出現的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;我們先來瞭解下 java 文件在編譯過程中的格式轉換過程，因為 ApiModel 是基於 IRCode 格式（R8 自定義的格式）來做外聯。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;文件轉換&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;javac&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;javac 將 java 文件編譯成 class 文件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;值得一提的是 sychronized 語句塊在 javac 編譯之後會為其內部代碼生成 try-catch，這是為了確保在語句塊拋異常時能夠正常釋放鎖，因此和問題有關的是 try-catch 語句塊，和 synchronized 無關。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//36889c510c4d4a88957306d93cdf7d59.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;D8&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#ffffff"&gt;目前 R8 已經整合 D8，因此輸入 class 文件之後就會先通過 D8 轉為 dex 格式，並持有在內存中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;轉換之後的指令基本和 class 字節碼基本類似。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//876e7cf561f3a8aa1ee57005986ae7f0.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;IRcode&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;為了做進一步的優化，會將 dex 格式的代碼轉化成 R8 自定義的 IRcode 格式，其特點是代碼分塊。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;案例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//b04a46ddb675fd3446029e19aa3fc632.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;問題根因&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在 R8 工程裏檢索 ApiModel 關鍵字，最終定位到針對構造函數生成外聯函數和指令替換的代碼：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#e5e5e5"&gt;InstanceInitializerOutliner-&amp;gt;rewriteCode&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;執行此方法之前的指令如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;java：
new&amp;nbsp;SurfaceTexture(false);&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;dex：
:&amp;nbsp;-1:&amp;nbsp;NewInstance &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;v1&amp;nbsp;&amp;lt;- &amp;nbsp;android.graphics.SurfaceTexture
: -1: ConstNumber &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;v2(0) &amp;lt;- &amp;nbsp;0 (INT)
: -1: Invoke-Direct &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;v1,&amp;nbsp;v2(0); method:&amp;nbsp;void&amp;nbsp;android.graphics.SurfaceTexture.&amp;lt;init&amp;gt;(boolean)&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;對整個方法中所有的指令從上往下進行遍歷，第一次遍歷主要是：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;檢索 &amp;lt;init&amp;gt;方法調用的指令&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;判斷該方法的 androidApiLevel 是否高於 minSDK&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;生成包含完整構造函數指令的外聯函數，並替換&amp;lt;init&amp;gt;函數調用為外聯函數調用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;執行完替換邏輯，就記錄信息到 map 中，key 是&amp;lt;init&amp;gt;對應的 new-instance 指令，value 是前一步中替換的新指令。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;經過這一步，字節碼會變成這樣：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//e6b105ab1ca583830e11bee8baafc4e5.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;具體替換邏輯如下（可以參考註釋理解）：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//c919c6ad05e651de339fb13da747bfaa.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;第二次遍歷則是對 new-instance 指令的處理：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;找到 new-instance 指令&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;查詢 map，確認&amp;lt;init&amp;gt;方法已完成替換&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;根據&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;canSkipClInit&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;方法返回的結果分為兩種場景：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;無類初始化邏輯：直接移除 new-instance 指令，不影響原代碼的語義。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//f1f56bfb61c5396de49e85cc7eec3a7e.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;有類初始化邏輯：生成外聯函數，只包含該 new-instance 指令，和前一次遍歷一樣進行指令替換。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//1959f35cfade28f57d11667c652bea3e.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;具體替換邏輯:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//fac201236889edc5ad19870621442c23.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;問題重點就在於&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;canSkipClInit&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;這個函數的實現。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;它會檢查 new-intance 指令和 invoke &amp;lt;init&amp;gt;指令之間是否存在任何局部變量聲明以外的指令，如果存在，他會認為這些指令是這個類初始化的邏輯，因此為了保留源代碼的執行順序，這種情況下就是需要額外執行一次 new-instance 指令來觸發類初始化。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//9fe3bbc584708c6a61e6b7a0d4e808bd.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;但是實際上，如果在調用這個構造函數傳參時執行了任何運算（和類加載無關），都會生成相關的指令插在中間，例如：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;java 寫法&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new-intance 和 invoke &amp;lt;init&amp;gt;指令之間的指令&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new SurfaceTexture( getParmas() )&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;invoke-virtual &amp;nbsp; v2 &amp;lt;-; method: void xx.xx.xx&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new SurfaceTexture( if(enable) 1 : 2)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;StaticGet &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;v3 &amp;lt;- ; field: boolean &amp;nbsp;xxx.xxx.xx&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;new SurfaceTexture ( (boolean) enable )&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;: -1: CheckCast &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;v5 &amp;lt;- v3; java.lang.Boolean&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;: -1: Invoke-Virtual &amp;nbsp; &amp;nbsp; &amp;nbsp; v6 &amp;lt;- v5; method: boolean java.lang.Boolean.booleanValue()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;從作者留下的 todo 也能看出，後續準備擴展這個方法，實現對這些夾在中間的指令的判斷，如果是對類初始化無影響的入參計算邏輯，則也將正常移除 new-intance 指令。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//fa19a3d661f5f19c0bf5fdb01d8c8aba.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;值得一提的是，我們最終 APK 裏 new-intance 指令並沒有被外聯，這是因為 SurfaceTexture 這個類本身在安卓 21 之前的版本就已經存在，只是入參為 bool 類型的構造方法是在安卓 26 新增的，所以他其實是被外聯之後又被內聯回到了調用處，因此看起來像是沒有被外聯。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//48f375f6e8c147cd435c140b6c8864ba.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;小結&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;至此，我們就明白了多出來一個看似無用的 new-intance 指令，實際上是為了保全源代碼的語義，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;觸發類加載&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;用的，但是作者沒有考慮到這些被優化的類可能重寫了 finalize 方法來釋放一些本就不存在的資源。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;而且不侷限於調用 native 函數，只要是重寫了 finalize，並在裏面訪問一些在構造函數中初始化的成員變量，一樣可能造成 NPE 等崩潰。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;R8 是如何計算出 API 的版本？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//d58a071ec92ca506d6e4f3e1ab4c7122.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;R83.3 版本開始，它編譯時會下載一個.ser 格式的數據庫文件，裏面記錄了所有系統 API、變量與安卓版本號的映射信息，在運行時通過行號和偏移量來尋找各自的版本號。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//9842b0b5f78805c080d71cbda30f1c44.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;為什麼 try-catch&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;也會導致該問題？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;前面解釋了在構造函數入參中添加函數調用等寫法導致的字節碼異常原因，但是實際上這次我們遇到的崩潰場景是在 sychronized 裏 new 了一個 SurfaceTexture。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//cec26da2ccbd01a385a47d0914cbd615.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;前文中已經解釋過，sychronized 在編譯成 class 後會生成 try-catch 語句塊，這段代碼改成用 try-catch 語句塊包裹，一樣會復現崩潰，因此我們跟蹤 try-catch 在文件轉換過程中對字節碼的影響即可。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;回到 class 文件轉 dex 文件的階段，我們發現 try 語句塊中的每一行指令，都會在其後生成一條 FALLTHROUGH 指令。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;dex 格式：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//dc87199452140addbab0d7de45794ad8.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;FALLTHROUGH 是什麼指令，他是做什麼的？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;FALLTHROUGH 指令表示指令自然流轉，沒有實際含義，它主要是為了幫助優化器識別哪些指令是可達的。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;例如下面這種寫法，case1 沒有寫 break，這樣會接着執行 case2 的代碼：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;switch&amp;nbsp;(value) {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;case&amp;nbsp;1:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.out.println("One");
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// 故意不寫 break
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;case&amp;nbsp;2:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.out.println("Two");
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;break;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;case&amp;nbsp;3:
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; System.out.println("Three");
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;break;
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;其字節碼如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;正常有 break 的話，會對應一條 GOTO 指令跳轉到 switch 語句塊最後一行，但是沒寫 break 的話，就會出現：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在 12 行執行 goto 13 跳轉到 13 行的指令，這種指令毫無意義，且運行時會消耗性能，因此可以替換成 FALLTHROUGH 指令，這樣最終在生成 dex 文件時會被移除掉，從而避免浪費性能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;public&amp;nbsp;static&amp;nbsp;void&amp;nbsp;switchWithFallthrough(int);
&amp;nbsp; Code:
&amp;nbsp; &amp;nbsp; stack=2, locals=1, args_size=1


&amp;nbsp; &amp;nbsp;&amp;nbsp;// 加載參數
&amp;nbsp; &amp;nbsp;&amp;nbsp;0: iload_0


&amp;nbsp; &amp;nbsp;&amp;nbsp;// 檢查 case 1
&amp;nbsp; &amp;nbsp;&amp;nbsp;1: iconst_1
&amp;nbsp; &amp;nbsp;&amp;nbsp;2: if_icmpne&amp;nbsp;13&amp;nbsp; &amp;nbsp;&amp;nbsp;// 如果不等於 1，跳轉到 case 2
&amp;nbsp; &amp;nbsp;&amp;nbsp;5: getstatic #2&amp;nbsp; &amp;nbsp;&amp;nbsp;// Field java/lang/System.out:Ljava/io/PrintStream;
&amp;nbsp; &amp;nbsp;&amp;nbsp;8: ldc #3&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// String One
&amp;nbsp; &amp;nbsp;&amp;nbsp;10: invokevirtual #4&amp;nbsp;// Method java/io/PrintStream.println:(Ljava/lang/String;)V
&amp;nbsp; &amp;nbsp;&amp;nbsp;12:&amp;nbsp;goto&amp;nbsp;13


&amp;nbsp; &amp;nbsp;&amp;nbsp;// case 2 (fallthrough 目標)
&amp;nbsp; &amp;nbsp;&amp;nbsp;13: iconst_2
&amp;nbsp; &amp;nbsp;&amp;nbsp;14: if_icmpne&amp;nbsp;28&amp;nbsp; &amp;nbsp;// 如果不等於 2，跳轉到 case 3
&amp;nbsp; &amp;nbsp;&amp;nbsp;17: getstatic #2&amp;nbsp; &amp;nbsp;// Field java/lang/System.out:Ljava/io/PrintStream;
&amp;nbsp; &amp;nbsp;&amp;nbsp;20: ldc #5&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// String Two
&amp;nbsp; &amp;nbsp;&amp;nbsp;22: invokevirtual #4&amp;nbsp;// Method java/io/PrintStream.println:(Ljava/lang/String;)V
&amp;nbsp; &amp;nbsp;&amp;nbsp;25:&amp;nbsp;goto&amp;nbsp;40&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;// 跳轉到 switch 結束


&amp;nbsp; &amp;nbsp;&amp;nbsp;// case 3
&amp;nbsp; &amp;nbsp;&amp;nbsp;28: iconst_3
&amp;nbsp; &amp;nbsp;&amp;nbsp;29: if_icmpne&amp;nbsp;40&amp;nbsp; &amp;nbsp;// 如果不等於 3，跳轉到結束
&amp;nbsp; &amp;nbsp;&amp;nbsp;32: getstatic #2&amp;nbsp; &amp;nbsp;// Field java/lang/System.out:Ljava/io/PrintStream;
&amp;nbsp; &amp;nbsp;&amp;nbsp;35: ldc #6&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;// String Three
&amp;nbsp; &amp;nbsp;&amp;nbsp;37: invokevirtual #4&amp;nbsp;// Method java/io/PrintStream.println:(Ljava/lang/String;)V


&amp;nbsp; &amp;nbsp;&amp;nbsp;// switch 結束
&amp;nbsp; &amp;nbsp;&amp;nbsp;40:&amp;nbsp;return&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;既然沒用為什麼還要加這個指令？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;class 文件是通過 Exception table 來指定異常處理的指令範圍，而 dex 文件則是通過為每一行可能產生 throwable 的指令後面添加 FALLTHROUGH 指令來實現 try-catch。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;這裏會把每一行可能崩潰的指令都鏈接到 catch 指令所在的 block 中，確保任意位置的崩潰都能正常走到 catch 中。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//144f461c63929a79f8346da8a6731ecb.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;問題根因&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在 R8 4.0.26 版本，IRCode 翻譯器新增了對 FALLTHROUGH 指令的處理，即新建一個 block 並&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;生成一條 GOTO 指令指向新的 block。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//941934987c5518db50e697aacc04d794.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;根據前文的結論，GOTO 指令一樣會被認為是類初始化相關的邏輯，因此 try-catch 語句塊一樣會導致最終多出來一個 new-instance 字節碼。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;為什麼只升級 AGP 會導致&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;R8 功能出問題？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;我們在數個版本之前就已經單獨升級了 R8，正好涵蓋了 ApiModel 這個變更，但是直到近期才升級了 AGP。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;可以看到從 AGP7.3-beta 版本開始，才默認打開 ApiModel 功能，這就解釋了為什麼升級 AGP 之後才出現此崩潰。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//09bde1db3ff6dd55f96188f2c6337b24.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_4"&gt;&lt;/span&gt; 
&lt;h1&gt;四、解決方案&lt;/h1&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;禁用 ApiModel&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;ApiModel 通過犧牲些微包體，換來啓動階段類驗證耗時，但是從他覆蓋的類範圍來看，對啓動速度的收益微乎其微，因此可以直接通過配置開關關閉整個功能。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;System.setProperty("com.android.tools.r8.disableApiModeling",&amp;nbsp;"1")&lt;/code&gt;&lt;/pre&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;雖説這是個實驗中的功能，且邏輯相對獨立，但是考慮到後續還有內聯優化等操作，貿然關閉整個功能無法評估影響面，潛在的穩定性風險較高。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;官方修復&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;該問題反饋給 R8 團隊後，官方提供了臨時規避的方案，即確保高版本 API 在單獨的函數中調用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;https://issuetracker.google.com/issues/441137561&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//358c6b1b9714ab22bdff45c27378289c.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;隨後不久就提了 MR 針對 SurfaceTexture 這個類禁用了 ApiModel，並未徹底解決此問題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;https://r8-review.googlesource.com/c/r8/+/109044&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//403f68ae953ddd19b67dc90602d69475.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;官方的修復方案比較權威，且影響面較小，但是並未徹底解決問題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;自行修復&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;如果要修復此問題，關鍵是要將多餘的 new-instance 指令替換成一個合適的觸發類加載的指令，根據 java 官方文檔裏的介紹，只有 new 對象，訪問靜態的成員變量或者函數的指令才能安全的觸發類加載，比較理想的方案是改成訪問靜態變量，但是很多類並沒有靜態變量，比如 SurfaceTexture 就沒有。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;em&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-5.html#jvms-5.5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//168eeaad61d7b9e162730708773e256d.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;因此我們可以考慮結合 getStatic 指令和掃描 finalize 的方式來解決該問題：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//baa3977f849ce680a7684f38a4d68176.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;雖説可以通過打印日誌來約束此改動的影響面，但畢竟要自行修改並編譯 R8 的 jar 包，且需要自行長期維護，整體影響面還是偏大，對穩定性要求高的 App 不建議採用該方案。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span style="background-color:#ffffff"&gt;業務改造（推薦）&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在前文中提到的外聯函數生成處打印日誌，即可感知到工程中有哪些類受 ApiModel 影響，如果數量不多，分別讓業務改造其相關的寫法，確保傳參時是局部變量且無 try-catch/synchronized 語句塊即可。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://oscimg.oschina.net/oscnet//a7fd6ee2c6b96d340b89116b8a76d5d5.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;考慮到 App 整體的穩定性，最終我們採用了業務改造的方式繞過了此問題，並在 R8 異常代碼處添加了日誌告警來預防後續增量問題，並仿照官方 MR 中的寫法補充了類的黑名單，用於應對無法編輯的三方庫引入此問題的場景。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_5"&gt;&lt;/span&gt; 
&lt;h1&gt;五、總結&lt;/h1&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;在 Android 開發中，即使是 AGP、R8 這樣的官方工具鏈升級，也要保持足夠的警惕。畢竟 Android 生態太過複雜，再加上開發者們千奇百怪的代碼寫法，不論多麼完善的測試流程都無法規避這類特定場景的 bug。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;這次的 ApiModel 外聯優化問題就是一個很好的例子——它只在特定條件下才會暴露，但一旦出現就是必現的 native 崩潰。所以對於這種影響面無法評估的重大升級，還是需要經過足夠長時間的獨立灰度驗證，才能合入主幹分支。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:24px; margin-right:24px; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#ffffff"&gt;&lt;span style="background-color:#5caae9"&gt;往期回顧&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;1.&amp;nbsp;可擴展系統設計的黃金法則與 Go 語言實踐｜得物技術&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;2.&amp;nbsp;得物新商品審核鏈路建設分享&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;3.&amp;nbsp;營銷會場預覽直通車實踐｜得物技術&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;4.&amp;nbsp;基於 TinyMce 富文本編輯器的客服自研知識庫的技術探索和實踐｜得物技術&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:16px; margin-right:16px"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#6a6a6a"&gt;&lt;span style="background-color:#e9faff"&gt;5.&amp;nbsp;AI 質量專項報告自動分析生成｜得物技術&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;文 / 永樂&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;關注得物技術，每週更新技術乾貨&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;要是覺得文章對你有幫助的話，歡迎評論轉發點贊～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;&lt;span style="background-color:#ffffff"&gt;未經得物技術許可嚴禁轉載，否則依法追究法律責任。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/5783135/blog/18690286</link>
      <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18690286</guid>
      <pubDate>Tue, 02 Sep 2025 02:30:37 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>跨平台遊戲引擎 Axmol-2.8.0 發佈</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;em&gt;Axmol 2.8.0 版本是一個以錯誤修復和功能改進為主的次要 &lt;code&gt;LTS&lt;/code&gt; 長期支持版本，發佈時間: 2025 年 9 月 1 日&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;🙏感謝所有對 axmol 項目的貢獻者，包括財務贊助者：@scorewarrior、@peterkharitonov、@duong、@thienphuoc、@bingsoo、@asnagni、 @paulocoutinhox 以及 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsponsors%2Faxmolengine" target="_blank"&gt;歷史贊助者&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;倉庫地址&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub (官方): &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol" target="_blank"&gt;https://github.com/axmolengine/axmol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gitee (鏡像): &lt;a href="https://gitee.com/simdsoft/axmol"&gt;https://gitee.com/simdsoft/axmol&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;錯誤修復&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;修復 #2669：由於 DriverGL 初始化失敗，Windows 11 上的 Windows UWP 無法運行，由 @halx99 修復。&lt;/li&gt; 
 &lt;li&gt;修復 #2655：在 Android 場景包含 ImGui 圖層時多點觸控不起作用，由 @halx99 修復。&lt;/li&gt; 
 &lt;li&gt;修復 #2674：Linux 上最終應用未鏈接 OpenSSL，由 @halx99 修復（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2675%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2675）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修復從普通模式切換到 SDF 時標籤渲染的 FontAtlas 錯誤，由 @halx99 修復（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2629%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2629）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修復 wasm 中 Device::getTextureDataForText 處理空白文本時拋出異常，由 @halx99 修復。&lt;/li&gt; 
 &lt;li&gt;修復 Linux 上當 LabelType 為 STRING_TEXTURE 時標籤顏色不正確的問題，由 @halx99 修復。&lt;/li&gt; 
 &lt;li&gt;修復錯誤的 fmt::format_to 用法，由 @halx99 修復（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2612%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2612）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修復 genbindings.ps1 中 LLVM 版本截取邏輯問題，由 @halx99 修復。&lt;/li&gt; 
 &lt;li&gt;修復 Label 的 SDF 在字體縮放時的渲染問題及其他相關錯誤，由 @halx99 修復（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2625%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2625）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修復項目包含 Swift 代碼時的編譯錯誤，由 @halx99 修復（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2632%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2632）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修復 wasm Downloader 以錯誤權限打開文件（#2666），由 @AlexandreK38 修復（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2666%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2666）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;修復在 CMake 4.1 以 Windows 為目標時「找不到彙編器」的構建失敗問題，由 @halx99 修復。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;功能改進&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;改進 Apple iOS 平台的渲染視圖創建，由 @halx99 提交（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2600%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2600）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;將 GLView 重命名為 RenderView，由 @halx99 提交（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2602%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2602）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;在 2.6.0 版本發佈説明中增加 emsdk 降級提示，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;改進 wasm 開發環境配置説明，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;將 &lt;code&gt;GLContextAttrs&lt;/code&gt; 重命名為 &lt;code&gt;GfxContextAttrs&lt;/code&gt;，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;更新 pull_request_template.md，作者 @aismann（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2609%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2609）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;改進 UTF-8 字符計數，移除 strlen 調用，作者 @halx99（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2614%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2614）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;改進 UTF-8 文本處理，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;移除 sprintf/snprintf 存根，作者 @halx99（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2615%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2615）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;改進 Android SDK 設置，Axmol 指定的 Android SDK 目錄優先級：&lt;code&gt;android project local properties&lt;/code&gt; &amp;gt; &lt;code&gt;ANDROID_HOME&lt;/code&gt; &amp;gt; &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; &amp;gt; &lt;code&gt;axmol/tools/external/adt/sdk&lt;/code&gt;，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;更多頭文件使用 pragma once，作者 @halx99（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2616%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2616）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;新增窗口尺寸限制設置支持，作者 @NgVThangBz（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2618%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2618）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;將 cpp-tests 中「Node: Label - New API」重命名為「Node: Label」，作者 @aismann（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2627%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2627）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;更新 ImGui 多視口提示信息，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;改進測試（統一 cpp-/lua- 測試中的菜單項命名），作者 @aismann（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2640%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2640）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;將 SIMD 可用性檢測移入獨立的 CMake 文件，作者 @j-jorge（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2642%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2642）。&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;將 CMAKE_MSVC_DEBUG_INFORMATION_FORMAT 設為 Embedded，以解決 PDB 體積過大問題，作者 @halx99。&lt;/li&gt; 
 &lt;li&gt;改進 NuGet 包管理，作者 @halx99（PR：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fpull%2F2671%25EF%25BC%2589%25E3%2580%2582" target="_blank"&gt;https://github.com/axmolengine/axmol/pull/2671）。&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SDK 和工具更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;AGP: 8.11.0 =&amp;gt; 8.11.1&lt;/li&gt; 
 &lt;li&gt;gradle: 8.14.3 =&amp;gt; 9.0.0&lt;/li&gt; 
 &lt;li&gt;cmake: 4.0.3 =&amp;gt; 4.1.1&lt;/li&gt; 
 &lt;li&gt;webview2 (msedge): 1.0.992.28 =&amp;gt; 1.0.3045.78&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;三方庫更新&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;curl: 8.13.0 =&amp;gt; 8.15.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;發佈文件 MD5 校驗值&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;axmol-2.8.0.zip&lt;/code&gt;: 0100b8b0a73d25b0fb020590fc2e8a54&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;axmol-bs-2.8.0.zip&lt;/code&gt;: 114afdb56e2f507c831163e6cd6385e8&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;下載&lt;/h2&gt; 
&lt;h3&gt;GitHub&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;國內用户可嘗試複製鏈接使用迅雷下載&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Freleases%2Fdownload%2Fv2.8.0%2Faxmol-2.8.0.zip" target="_blank"&gt;axmol-2.8.0.zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Freleases%2Fdownload%2Fv2.8.0%2Faxmol-bs-2.8.0.zip" target="_blank"&gt;axmol-bs-2.8.0.zip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;百度網盤&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpan.baidu.com%2Fs%2F1-gWTCIqU8psNrgaLWNFqeg%3Fpwd%3Dj7p7" target="_blank"&gt;axmol-2.8.0.zip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpan.baidu.com%2Fs%2F1fBdSZZuctwLsEmJH4QgLMg%3Fpwd%3D3bbk" target="_blank"&gt;axmol-bs-2.8.0.zip&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;SourceForge&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fprojects%2Faxmol-engine.mirror%2Ffiles%2Fv2.8.0%2F" target="_blank"&gt;Axmol-2.8.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;本版亮點詳解&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;NuGet 包管理優化&lt;/strong&gt;&lt;br&gt; 本版本對 NuGet 包管理進行了改進：Axmol 依賴的 Microsoft Edge WebView2 和 CppWinRT 包將在 CMake 配置階段統一下載至 &lt;code&gt;&amp;lt;AX_ROOT&amp;gt;/cache/packages&lt;/code&gt; 目錄。&lt;br&gt; 這樣，即使刪除 &lt;code&gt;build&lt;/code&gt; 目錄，這些依賴包也無需重新下載。此前版本會將依賴下載到 &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;，導致清理構建目錄後需重複下載。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Axmol 項目最新動態&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;分支管理優化&lt;/strong&gt;&lt;br&gt; 為了讓開發者更直觀地選擇適合生產環境的分支，倉庫分支結構進行了調整：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;原 &lt;code&gt;dev&lt;/code&gt; 分支更名為 &lt;code&gt;release/2.x&lt;/code&gt;，作為 &lt;strong&gt;2.x LTS&lt;/strong&gt; 穩定維護與發佈分支&lt;/li&gt; 
   &lt;li&gt;原 &lt;code&gt;wip-v3&lt;/code&gt; 分支更名為 &lt;code&gt;dev/v3&lt;/code&gt;，並設為默認開發分支（尚未正式發佈，雖處於開發階段，但依託 CI 持續集成，確保構建與運行始終可用）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;目錄結構優化（dev/v3）&lt;/strong&gt;&lt;br&gt; 將引擎核心代碼目錄 &lt;code&gt;core&lt;/code&gt; 重命名為 &lt;code&gt;axmol&lt;/code&gt;，並統一替換引擎代碼中的 include 語句為 &lt;code&gt;#include "axmol/xxx/xxx.h"&lt;/code&gt;，以簡化頭文件引用路徑。&lt;br&gt; 此調整不僅使代碼結構更清晰，還能更方便地與其他代碼庫協同使用，減少頭文件命名衝突的風險。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;渲染後端重構（dev/v3）&lt;/strong&gt;&lt;br&gt; &lt;code&gt;dev/v3&lt;/code&gt; 分支對渲染後端進行了重構，新增 &lt;strong&gt;D3D11 渲染支持&lt;/strong&gt;。在 Windows 平台上，相比原 GLES API，性能提升約 &lt;strong&gt;13.6%&lt;/strong&gt;。&lt;br&gt; 同時，&lt;code&gt;axmol/renderer/backend&lt;/code&gt; 目錄已重命名並遷移至 &lt;code&gt;axmol/rhi&lt;/code&gt;，詳細説明可參考 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Faxmolengine%2Faxmol%2Fwiki%2FAbout-RHI-in-axmol-v3" target="_blank"&gt;About-RHI-in-axmol-v3&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;clang-format 增強（dev/v3）&lt;/strong&gt;&lt;br&gt; 為保持引擎核心代碼格式統一與規範，增強並完善了 &lt;code&gt;clang-format&lt;/code&gt; Lint CI，對每個 PR 自動檢查代碼格式是否符合規範。&lt;br&gt; 同時新增 &lt;code&gt;/clang-format&lt;/code&gt; 機器人評論指令：在 PR 評論中發送該指令，機器人將自動修正代碼格式並推送至 PR 原分支（需確保提交 PR 時勾選「允許維護者編輯」選項）。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369794</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369794</guid>
      <pubDate>Tue, 02 Sep 2025 02:25:41 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>我國智能算力規模達 788 百億億次/秒</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;人民日報北京 9 月 1 日電 &amp;nbsp;（記者劉温馨、鄭洋洋）截至今年 6 月底，我國在用算力中心機架總規模達 1085 萬標準機架，智能算力規模達 788 百億億次/秒 (EFLOPS)；存力規模超過 1680 艾字節 (EB)，相比 2023 年增長約 40%；已發佈 1509 個大模型，在全球位居前列。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="334" src="https://oscimg.oschina.net/oscnet/up-f7c4902ec7cb7f48c81c629fb38170914e5.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;近日，中國算力平台完成山西、遼寧、上海、江蘇、浙江、山東、河南、青海、寧夏、新疆 10 個省份分平台接入工作，實現「平台、主體、資源、生態、場景」全面貫通。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;作為國家級綜合性算力服務平台，中國算力平台集「供、需、服」於一體，可實現不同系統、平台和工具之間的兼容性和互操作性。截至 7 月底，平台運營層註冊企業用户超 1000 家，入駐算力服務商逾 100 家，上架優質算力產品 110 餘項，接入主流基礎大模型和垂類模型 90 餘個，累計沉澱數十億條算力監測大數據。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369793</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369793</guid>
      <pubDate>Tue, 02 Sep 2025 02:23:37 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>智譜上線 Claude Code 專屬包月套餐，月費低至 20 元</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;智譜&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FJKSKSrjw3aqUODEN_LzRMg" target="_blank"&gt;宣佈&lt;/a&gt;，自 9 月 1 日起推出 Claude Code 專屬「GLM Coding Plan」限時套餐，月費低至 20 元。&lt;/p&gt; 
&lt;p&gt;該套餐適用於智譜最新旗艦模型 GLM-4.5 及 GLM-4.5-Air。用户可通過掃描活動海報二維碼，或者登錄智譜開放平台&amp;nbsp;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbigmodel.cn%2Fclaude-code" target="_blank"&gt;bigmodel.cn&lt;/a&gt;，直接購買並獲取詳細使用攻略。&lt;/p&gt; 
&lt;p&gt;首期主推 Claude Code，未來將拓展到更多 Coding 工具。目前，GLM-4.5 已接入包括 Claude Code、Cline、Gemini CLI、Grok CLI、CodeGeeX、Kilo Code、Roo Code、Trae 在內的多款主流編程工具，全面支持日常開發流程。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0902/101910_Nw8D_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369792</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369792</guid>
      <pubDate>Tue, 02 Sep 2025 02:20:37 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>騰訊開源 Hunyuan-MT-7B 翻譯模型</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;騰訊&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrKcf7jXAYlCKcwan0o756Q" target="_blank"&gt;宣佈&lt;/a&gt;開源在國際機器翻譯比賽拿下 30 個第 1 名的翻譯模型 Hunyuan-MT-7B，除了中文、英語、日語等常見語種，也包含捷克語、馬拉地語、愛沙尼亞語、冰島語等小語種。&lt;/p&gt; 
&lt;p&gt;Hunyuan-MT-7B 總參數量僅 7B，支持 33 個語種、5 種民漢語言/方言互譯，是一個能力全面的輕量級翻譯模型。&lt;/p&gt; 
&lt;p&gt;&lt;img height="293" src="https://oscimg.oschina.net/oscnet/up-dfbb59995d2db0c828e006ce4d0041931a0.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;同時開源的還有一個翻譯集成模型 Hunyuan-MT-Chimera-7B （奇美拉），是業界首個翻譯集成模型，它能夠根據原文和多個翻譯模型給出的不同內容，再生成一個更優的翻譯結果，不僅原生支持 Hunyuan-MT-7B，也支持接入 deepseek 等模型，對於一些有專業翻譯需求的用户和場景，可以提供更加準確的回覆。&lt;/p&gt; 
&lt;p&gt;公告稱，在業界常用的翻譯能力測評數據集 Flores200 上，騰訊混元 Hunyuan-MT-7B 模型也有卓越的效果表現，明顯領先於同尺寸模型，與超大尺寸模型效果對比也不遜色。&lt;/p&gt; 
&lt;p&gt;取得全面領先的成績，離不開技術上的全面突破，針對翻譯場景，騰訊混元提出了一個完整的翻譯模型訓練範式，覆蓋從預訓練、到 CPT 再到監督調參、翻譯強化和集成強化全鏈條，使得模型的翻譯效果達到業界最優。&lt;/p&gt; 
&lt;p&gt;&lt;img height="188" src="https://oscimg.oschina.net/oscnet/up-66e18aed212fea1e14be8e0b31d401ea4a1.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Hunyuan-MT-7B 的特點在於僅用少量的參數，就達到甚至超過了更大規模模型的效果，這也為模型的應用帶來了眾多優勢。&lt;/p&gt; 
&lt;p&gt;首先是計算效率，7B 模型的推理速度明顯快於大型模型，在相同硬件條件下能夠處理更多的翻譯請求，並且，基於騰訊自研的 AngelSlim 大模型壓縮工具對 Hunyuan-MT-7B 進行 FP8 量化壓縮，推理性能進一步提升 30%。&lt;/p&gt; 
&lt;p&gt;其次是部署友好性，Hunyuan-MT-7B 能夠在更多樣化的硬件環境中部署，從高端服務器到邊緣設備都能良好運行，並且模型的部署成本、運行成本和維護成本都相對更低，在保證翻譯質量的前提下，為企業和開發者提供了更具吸引力的解決方案。&lt;/p&gt; 
&lt;p&gt;目前，騰訊混元翻譯模型已經接入騰訊多個業務，包括騰訊會議、企業微信、QQ 瀏覽器、翻譯君翻譯、騰訊海外客服翻譯等，助力產品體驗提升。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369791</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369791</guid>
      <pubDate>Tue, 02 Sep 2025 02:17:37 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>DeepSeek 公開模型原理與訓練方法説明</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;DeepSeek 發佈官方説明，披露了其大語言模型的訓練原理、數據來源等信息。DeepSeek 表示其線上服務基於深度神經網絡大模型，採用「預訓練—優化訓練」兩階段流程。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0902/100812_xXNj_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;在預訓練階段，模型通過大規模自監督學習獲取通用語言能力；在優化訓練階段，則使用有監督微調（SFT）或強化學習（RL）對模型進行任務適配；最終部署的模型以自迴歸方式實時生成文本，而非簡單的信息檢索。&lt;/p&gt; 
&lt;p&gt;數據來源方面，預訓練語料由互聯網公開信息和第三方合作數據組成，不主動收集個人信息。優化訓練階段的數據由研究團隊自建問答對，少量樣本可能源自用户輸入，但均經過了去標識化、加密及匿名化處理，併為用户提供了退出機制。&lt;/p&gt; 
&lt;p&gt;完整內容查看：&lt;em&gt;https://cdn.deepseek.com/policies/zh-CN/model-algorithm-disclosure.html&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369790</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369790</guid>
      <pubDate>Tue, 02 Sep 2025 02:09:37 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>🚀 AI + 低代碼引擎發佈 0.13.15: 全面支持 vue-i18n 國際化，完善企業級應用開發能力</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;領先的開源 AI 低代碼引擎&lt;strong&gt;VTJ.PRO&lt;/strong&gt;正式發佈&lt;strong&gt;v0.13.15&lt;/strong&gt;版本。該版本重點推出了對&lt;strong&gt;vue-i18n&lt;/strong&gt;國際化的深度集成支持，標誌着 VTJ.PRO 已完成對企業級應用核心能力的全面構建。繼先前版本支持應用&lt;strong&gt;全局配置&lt;/strong&gt;、&lt;strong&gt;Swagger API 一鍵導入&lt;/strong&gt;等功能後，VTJ.PRO 現已具備讓開發者快速構建現代化、標準化、國際化企業應用的所有關鍵要素。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//c947b7a3962c53110b6db614f002ca41.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;完善企業級開發「最後一公里」&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;在企業數字化轉型浪潮中，應用開發不僅要求高效快速，更需要符合規範、易於維護並支持全球業務。VTJ.PRO 自誕生之初便致力於為開發者提供高性能、高自由度的低代碼開發體驗。本次更新可視為其邁向&lt;strong&gt;成熟企業級解決方案&lt;/strong&gt;的關鍵一步。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;最新支持的 vue-i18n 國際化功能，允許開發者在可視化設計器中輕鬆管理多語言詞條，綁定動態文本，並實現一鍵切換語言環境，極大地簡化了多語言應用的開發流程。&lt;/p&gt; 
&lt;h2&gt;本次版本核心更新亮點&lt;/h2&gt; 
&lt;h3&gt;🌍 內置國際化（i18n）支持&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;可視化詞條管理：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;無需手動編寫語言文件，在設計器中即可輕鬆完成詞條的添加、翻譯和維護。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;無縫組件集成：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;所有 VTJ.PRO 組件均支持國際化屬性綁定，UI 與邏輯徹底分離。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;實時預覽切換：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在設計階段即可實時預覽不同語言下的效果，極大提升開發調試效率。=&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;符合開發規範：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;完全基於社區標準的 vue-i18n 庫構建，開發者原有經驗和習慣可無縫遷移。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔗 此前版本的企業級功能積澱&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;應用全局配置：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;支持統一設置主題、網絡請求、權限等全局參數，保障應用風格和行為的一致性。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Swagger API 導入：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;可一鍵導入 Swagger 接口文檔，自動生成 TypeScript 類型聲明和調用代碼，極大提升了前後端協作效率。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;企業級權限與控制：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;提供精細化的路由守衞和功能權限控制，滿足企業內部系統的安全要求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;為開發者創造真正價值&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;VTJ.PRO 始終秉持「&lt;strong&gt;降低複雜度，不降低自由度&lt;/strong&gt;」的理念。它不是將開發者禁錮在封閉的系統中，而是通過提供一系列開箱即用的高端能力（如基於 Vite + Vue 3 + TypeScript 的現代開發棧），將開發者從繁瑣的配置和重複勞動中解放出來，讓其能更專注於業務邏輯和創新。&lt;/p&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;「v0.13.15 版本的發佈，對 VTJ.PRO 而言是一個里程碑。」項目核心貢獻者表示，「&lt;strong&gt;國際化是許多成熟產品走向世界的必經之路&lt;/strong&gt;。現在，從基礎的項目搭建、全局配置，到接口聯調、權限管理，再到最後的國際化，VTJ.PRO 已經為企業級應用開發提供了一條完整、流暢的高效生產線。&lt;/p&gt; 
&lt;h2&gt;未來展望&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;隨着企業級開發能力的完善，VTJ.PRO 團隊接下來的重點將轉向進一步提升&lt;strong&gt;AI 輔助開發&lt;/strong&gt;的體驗，探索通過自然語言生成組件、業務邏輯甚至完整頁面的可能性，持續踐行其作為「AI 低代碼引擎」的願景。&lt;br&gt; &lt;img alt="" src="https://oscimg.oschina.net/oscnet//42bb2f3b02fe382d897f4263a6e72838.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;體驗與瞭解更多&lt;/h2&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;VTJ.PRO 是一個開源項目，開發者可以免費使用並參與貢獻。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;立即在線體驗：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvtj.pro%2F" target="_blank"&gt;https://vtj.pro&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Gitee 開源地址：&lt;a href="https://gitee.com/newgateway/vtj" target="_blank"&gt;https://gitee.com/newgateway/vtj&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;關於 VTJ.PRO：&lt;/h3&gt; 
&lt;p style="color:#3c3c43; margin-left:0; margin-right:0; text-align:start"&gt;VTJ.PRO 是一款開源 AI 低代碼引擎，基於 Vite + Vue 3 + TypeScript 技術棧構建。它通過可視化設計器與底層代碼的雙向驅動，幫助開發者快速構建 Web、H5、UniApp 等多端企業級應用，在金融、電商、中後台管理系統等領域有廣泛應用前景。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369771</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369771</guid>
      <pubDate>Mon, 01 Sep 2025 00:38:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>🚀 Xinference v1.9.1 強勢來襲！Qwen-Image 系列重大升級！！！速覽！！！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Xorbits Inference（Xinference）是一個，性能強大且功能全面的，分佈式，推理框架。可用於大語言模型（LLM），語音識別模型，多模態模型等各種模型的推理。通過 Xorbits Inference，你可以輕鬆地，一鍵部署你自己的模型或內置的前沿開源模型 - &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxorbitsai%2Finference" target="_blank"&gt;https://github.com/xorbitsai/inference&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;無論你是研究者，開發者，或是數據科學家，都可以通過 Xorbits Inference 與最前沿的 AI 模型，發掘更多可能。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Xinference 的功能和亮點有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌟 模型推理，輕而易舉：大語言模型，語音識別模型，多模態模型的部署流程被大大簡化。一個命令即可完成模型的部署工作。&lt;/li&gt; 
 &lt;li&gt;⚡️ 前沿模型，應有盡有：框架內置眾多中英文的前沿大語言模型，包括 baichuan，chatglm2 等，一鍵即可體驗！內置模型列表還在快速更新中！&lt;/li&gt; 
 &lt;li&gt;🖥 異構硬件，快如閃電：通過 ggml，同時使用你的 GPU 與 CPU 進行推理，降低延遲，提高吞吐！&lt;/li&gt; 
 &lt;li&gt;⚙️ 接口調用，靈活多樣：提供多種使用模型的接口，包括 OpenAI 兼容的 RESTful API（包括 Function Calling），RPC，命令行，web UI 等等。方便模型的管理與交互。&lt;/li&gt; 
 &lt;li&gt;🌐 集羣計算，分佈協同：支持分佈式部署，通過內置的資源調度器，讓不同大小的模型按需調度到不同機器，充分使用集羣資源。&lt;/li&gt; 
 &lt;li&gt;🔌 開放生態，無縫對接：與流行的三方庫無縫對接，包括 LangChain， LlamaIndex， Dify，以及 Chatbox。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🚀 Xinference v1.9.1 更新日誌&lt;/p&gt; 
&lt;p&gt;✅ 本次亮點&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🖼️ Qwen-Image 系列重大升級&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Qwen-Image：新增，文生圖 / 圖生圖 / 局部重繪（inpainting）&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Qwen-Image-Edit：增強圖片編輯體驗&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Lightning LoRA 加速支持（&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finference.readthedocs.io%2Fzh-cn%2Flatest%2Fmodels%2Fmodel_abilities%2Fimage.html%23lightning-lora-support%25EF%25BC%2589" target="_blank"&gt;https://inference.readthedocs.io/zh-cn/latest/models/model_abilities/image.html#lightning-lora-support）&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 4 步或 8 步生圖&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 H20 上，生圖速度從 35 秒降到 3 秒&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;模型性能基本保持不變&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧠 新增前沿模型支持&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wan 2.2&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Seed-OSS-36B&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;DeepSeek-V3.1 量化與工具調用&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌐 社區版更新&lt;/p&gt; 
&lt;p&gt;📦 安裝方式&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;pip 安裝：pip install 'xinference==1.9.1'&lt;/li&gt; 
 &lt;li&gt;Docker 使用：拉取最新版鏡像，或在容器中使用 pip 更新&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🆕 新模型支持&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qwen-Image-Edit&lt;/li&gt; 
 &lt;li&gt;Wan 2.2&lt;/li&gt; 
 &lt;li&gt;Qwen-Image-Lightning&lt;/li&gt; 
 &lt;li&gt;Seed-OSS-36B&lt;/li&gt; 
 &lt;li&gt;DeepSeek-V3.1 Quantized&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ 新特性&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qwen-Image：支持文生圖 / 圖生圖 / inpainting&lt;/li&gt; 
 &lt;li&gt;Qwen-Image 與 Qwen-Image-Edit：支持 Lightning LoRA 加速&lt;/li&gt; 
 &lt;li&gt;UI：圖像模型支持 gpu_count 配置&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🛠 功能增強&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;音頻模型新增零樣本 &amp;amp; 聲音克隆能力&lt;/li&gt; 
 &lt;li&gt;Qwen3 Reranker 支持 vLLM 模板&lt;/li&gt; 
 &lt;li&gt;llama.cpp 支持 chat_template_kwargs&lt;/li&gt; 
 &lt;li&gt;cosyvoice2 依賴升級&lt;/li&gt; 
 &lt;li&gt;兼容 xllamacpp 0.2.0&lt;/li&gt; 
 &lt;li&gt;清理 Docker 構建遺留緩存&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🐞 Bug 修復&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;當 GPU 計算能力 &amp;lt; 8.0 時禁用 flash_attention&lt;/li&gt; 
 &lt;li&gt;修復 rerank 模型創建問題&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📚 文檔更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更新自定義模型説明&lt;/li&gt; 
 &lt;li&gt;新增多模態文檔中圖片數量限制説明&lt;/li&gt; 
 &lt;li&gt;更新模型列表與 README&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🏢 企業版更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;本次版本企業版日常，穩定性與 Bug 修復優化。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我們感謝每一位參與的社區夥伴對 Xinference 的幫助和支持，也歡迎更多使用者和開發者參與體驗和使用 Xinference。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;歡迎您在 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxorbitsai%2Finference" target="_blank"&gt;https://github.com/xorbitsai/inference&lt;/a&gt; 給我們一個，星標，這樣你就可以在 GitHub 上及時收到每個新版本的通知。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369751/xinference-1-9-1-released</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369751/xinference-1-9-1-released</guid>
      <pubDate>Sun, 31 Aug 2025 15:04:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>飛致雲開源社區月度動態報告（2025 年 8 月）</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;自 2023 年 6 月起，中國領先的開源軟件公司飛致雲以月度為單位發佈《飛致雲開源社區月度動態報告》，旨在向廣大社區用户同步飛致雲旗下系列開源軟件的發展情況，以及當月主要的產品新版本發佈、社區運營成果等相關信息。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;飛致雲開源運營數據概覽（2025 年 8 月）&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;&lt;span style="color:#3e3e3e"&gt;2025 年 8 月飛致雲開源軟件運營數據概覽（統計時間為 2025.8.1～2025.8.29）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="648" src="https://oscimg.oschina.net/oscnet/up-a8b0c9bef3a9289564d711fa8af1360d845.png" width="1070" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;strong&gt;&lt;span style="color:#3370ff"&gt;2025 年 8 月產品發佈事件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ SQLBot 智能問數系統&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月 7 日，DataEase 開源項目組發佈 SQLBot 開源項目（&lt;/span&gt;&lt;em&gt;&lt;span style="color:#010101"&gt;github.com/dataease/SQLBot&lt;/span&gt;&lt;/em&gt;&lt;span style="color:#010101"&gt;）。SQLBot 是一款基於大語言模型（Large Language Model，LLM）和 RAG（Retrieval Augmented Generation，檢索增強生成）的智能問數系統。藉助 SQLBot，用户可以實現數據的即問即答，快速提煉獲取所需的數據信息及可視化圖表，並且支持進一步的智能數據分析。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-a6f1da9e1e9331e8fdb267c8384b41b0bfd.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ DataEase 開源 BI 工具&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月 19 日，人人可用的開源 BI 工具 DataEase 正式發佈 v2.10.12 LTS 版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;這一版本的功能變動包括：圖表方面，圖表提示框的背景顏色支持配置透明度，桑基圖提示信息中支持配置總數佔比顯示項，線面圖的縱軸軸值自動分檔時可以根據實際使用的數據自動計算最小刻度，堆疊條形圖/柱狀圖可以設置圖例排序，基礎條形圖/柱狀圖支持點擊陰影部分執行下鑽、聯動、跳轉操作；查詢組件方面，下拉組件 Tag 支持自定義背景顏色；儀錶板/數據大屏方面，圖片組支持設置刷新頻率；數據源方面，API 數據源接口參數可以調用已創建的接口參數。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;X-Pack 增強包的功能變動包括：同步管理方面，增量同步設置支持指定正負偏移量，新增支持 CTE（Common Table Expression，通用表表達式）查詢；數據填報方面，批量上傳的內容增加單條記錄的提交信息；外觀設置方面，增加是否顯示 Slogan 的配置項。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MaxKB 開源企業級智能體平台&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月 7 日，MaxKB 開源企業級智能體平台正式發佈 v2.0.2 版本。在 MaxKB v2.0.2 版本中，社區版方面，高級編排應用新增會話變量功能，適用於用户在多次對話中進行數據暫存、邏輯判斷的場景，能夠有效增強系統的邏輯處理能力。X-Pack 增強包方面，在對話用户登錄時，MaxKB 新增企業微信、釘釘、飛書等第三方平台掃碼登錄支持；在系統資源管理中，新增支持系統管理員對系統內所有工作空間的應用、知識庫、工具、模型等資源進行統一管理。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月 21 日，MaxKB 開源企業級智能體平台正式發佈 v1.10.10 LTS 版本。這一版本在知識庫方面，針對數據量較大的複雜場景，提升了知識庫檢索性能；問答頁面方面，支持用户直接發送文件或者圖片進行提問。此外，MaxKB 開源項目組還進行了一些問題修復的工作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ JumpServer 開源堡壘機&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月 21 日，廣受歡迎的開源堡壘機 JumpServer 發佈了 v4.10.5 LTS 版本。在這一版本中，JumpServer 的新增功能包括添加報表以支持可視化數據分析和導出、改進命令記錄和過濾功能以及支持 Proxmox 雲主機同步等，另外，JumpServer 項目組還進行了 3 項功能優化和問題修復工作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月 28 日，JumpServer 開源堡壘機正式發佈 v3.10.19 LTS 版本。在這一版本中，Lion 組件在連接 Windows 資產時新增會話分享功能，JumpServer 新增用户與授權規則的默認過期時間設置，同時優化了授權規則、端點規則等功能，提升了運維管理的便捷性。此外，這一版本還增強了 Ansible 任務超時設置和 SSO 用户登錄的 MFA 校驗機制，進一步強化了系統的安全性與穩定性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 1Panel 開源面板&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;2025 年 8 月，現代化、開源的 Linux 服務器運維管理面板 1Panel 持續迭代，發佈了多個新版本。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;在網站管理方面，1Panel 新增 HTTPS 防竄站功能；計劃任務方面，支持任務一鍵導入/導出，計劃任務報告頁新增日誌追蹤和下載功能，同時還新增了任務分組功能；SSH 管理方面，1Panel 增強了 SSH 密鑰管理功能，進一步提升遠程運維的安全性和易用性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span style="color:#010101"&gt;此外，1Panel 開源項目組還完成了超過 60 項功能優化與問題修復，持續提升產品的穩定性和使用體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;strong&gt;&lt;span style="color:#3370ff"&gt;其他重要事件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ MaxKB 在企業環境中實現 AI 落地的具體場景盤點&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;目前，「DeepSeek+MaxKB」的組合正在被包括高等教育院校和中小學教育機構在內的用户羣體所深度使用。在教育行業，MaxKB 擁有廣泛的用户基礎，並且持續獲得認可。近期，MaxKB 新增的教育行業用户包括：浙江師範大學、上海應用技術大學、廣西外國語學院、廣東醫科大學、張家口職業技術學院機電工程學院、天津商業大學、河南醫藥健康技師學院、湖南大學非洲研究院和常州信息職業技術學院。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;高等院校主要將 MaxKB 用於在本地部署的大模型之上構建 AI 助手或智能體，使用場景包括行政辦公、校園服務、教學科研、技能培訓、就業指導等，與已有的統一身份認證體系進行對接，面向校內師生提供服務。在此基礎上，MaxKB 開始被一些院校應用在國際化辦學與合作領域。同時，MaxKB 正在被越來越多的高校及中小學教師用於教學科研，有多篇教研文章公開發表。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 1Panel 漏洞通知&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;2025 年 8 月 1 日，1Panel 開源項目組發佈 CVE 編號為 CVE-2025-54424 的漏洞通知及修復方案。請用户儘快將 1Panel 升級至 v2.0.6 及以後的版本。1Panel V1 版本不受影響。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;strong&gt;&lt;span style="color:#00355d"&gt;■ 1Panel 應用商店下載趨勢及下載排名情況&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;為了方便廣大用户快捷安裝部署相關軟件應用，1Panel 特別開通應用商店，精選各類高質量的開源工具和應用軟件，為用户的應用安裝與升級操作提供便利。目前，1Panel 應用商店已經上架了超過 190 款精品軟件並且定期更新維護，基本涵蓋了大部分用户的裝機需求。&lt;strong&gt;&lt;span style="color:#ff8124"&gt;2025 年 8 月，1Panel 應用商店軟件下載量達到 229,212 次。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="938" src="https://oscimg.oschina.net/oscnet/up-334a20f906cd0fceeedc245cf7870c724a5.png" width="1380" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲圖 1 1Panel 應用商店月下載總量統計&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;img alt="" height="1008" src="https://oscimg.oschina.net/oscnet/up-2281427408194ff8bc02b05441ac04ac373.png" width="1454" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:start"&gt;&lt;span&gt;▲圖 2 1Panel 應用商店軟件下載排名 Top 20（2025 年 8 月）&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4736111/blog/18690227</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/18690227</guid>
      <pubDate>Sun, 31 Aug 2025 11:34:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>「世界最輕量網站」阿部寬官網將採用 HTTPS</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;以 「網頁加載速度極快」 聞名的日本演員阿部寬官方網站，近日因一則技術變更預告，意外在社交平台引發廣泛討論。&lt;/p&gt; 
&lt;p&gt;這個被網友親切稱作 「阿部寬的首頁」 的網站，設計極度簡潔復古，圖片稀少，風格宛如回溯至 1990 年代網絡初期，也正因如此，它在任何網絡環境下都能瞬間載入，還被譽為 「世界最輕量的網站」。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1856" src="https://static.oschina.net/uploads/space/2025/0901/191845_J1jw_2720166.png" width="3360" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;http://abehiroshi.la.coocan.jp/&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;不過，支撐該網站的託管商 Nifty LaCoocan 日前宣佈，為強化安全防護，將從今年 10 月 1 日起支持 https 加密連接，且預計在 2026 年 7 月後全面強制轉換。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;這意味着，未來所有訪問舊版 「http://」 網址的請求，都將自動跳轉至新的 「https://」 頁面。 &amp;nbsp;儘管 https 化能顯著提升網頁瀏覽的安全性，卻也讓網友們既熱議又惋惜。過去，不少人會利用這個仍採用 http 協議的網站，測試老舊電腦、PDA，或是 PlayStation 2、3DS 等不支持 https 的遊戲機能否正常連網。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;如今網站即將切換至 https，這個獨特的 「網絡聯機測試頁」 也將正式退出歷史舞台。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;消息傳開後，網絡上迅速湧現大量討論。有網友感慨：「沒想到阿部寬的首頁也要跟上時代浪潮了，舊設備用户要哭了」。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;與此同時，這次事件也讓許多人首次認識到這個特別的網站，有人忍不住讚歎：「居然還有純 HTML 打造的網站，速度是真的快」「這種簡約風格放在現在看，反而有種新潮感」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369726</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369726</guid>
      <pubDate>Sun, 31 Aug 2025 11:21:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>開源直播與錄製工具 OBS Studio 32.0.0 Beta 1 發佈</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;開源直播與錄製工具 OBS Studio 32.0.0 發佈了首個 Beta 版本。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-10826241a616eb32ba0bb33e2d41eab5851.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;主要更新內容如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;基礎插件管理器：&lt;/strong&gt;引入了一個內建的插件管理器，簡化了插件的安裝、更新與管理流程，避免以往需手動複製文件的繁瑣操作。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;可選自動崩潰日誌上傳（僅 Windows/macOS）：&lt;/strong&gt;用户可選擇自動將崩潰日誌上傳，幫助開發團隊更快識別並修復問題。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;NVIDIA RTX 新音頻和視覺功能&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;語音活動檢測（VAD）優化 RTX 噪聲抑制&lt;/strong&gt;，僅在檢測到語音時才啓用，從而提升通話和直播的音質。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;RTX 效果優化&lt;/strong&gt;：提升整體性能與效果表現。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;背景移除中的移除椅子功能&lt;/strong&gt;：在使用 RTX 背景移除時自動去除椅子，實現更乾淨的背景效果。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hybrid MOV 容器支持&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;在 macOS 上支持 &lt;strong&gt;ProRes&lt;/strong&gt; 視頻編碼。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;所有平台統一支持 &lt;strong&gt;HEVC / H.264 視頻編碼&lt;/strong&gt;，以及 &lt;strong&gt;PCM 音頻&lt;/strong&gt;，增強跨平台視頻處理的兼容性&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;其他改進與修復（摘選）&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;休止加載為未來版本構建的插件，以避免兼容性問題。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;引入自定義 OBS widgets，為未來更大的 UI 更新做鋪墊。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;針對 Linux 的 PipeWire 視頻捕獲格式選擇進行了改進。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;AWS Metal 渲染器支持的準備。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;優化了音頻去重複邏輯，避免嵌套場景或多個畫布中音頻重複播放；還防止「監視與輸出」模式中因捕獲監視設備而導致的重複音頻輸出。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;更新 AMD 編碼器默認設置，提升編碼質量；改進 Hybrid MP4/MOV 中章節標記的準確性；修復 macOS 上編輯字段光標問題；增強 PipeWire 視頻捕獲格式處理。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;包含多項 Bug 修復，包括 macOS 窗口操作崩潰、SRT 錯誤 URL 導致崩潰、多視圖顯示空白、焦點設置問題、滾動條可見性、HEVC 幀優先級設置錯誤、編碼延遲、Qt 舊版兼容問題等。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;下載地址：&lt;em&gt;https://github.com/obsproject/obs-studio/releases/tag/32.0.0-beta1&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369722</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369722</guid>
      <pubDate>Sun, 31 Aug 2025 11:02:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>GTK 4.20 發佈，跨平台開源圖形工具包</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;GTK 4.20 已發佈，新版本在 Wayland、渲染器兼容性、跨平台支持、無障礙以及視頻與圖形處理方面進行了多項重大更新，確保 GTK 在 Linux、macOS、Android 與 Windows 上擁有更穩定、一致的用户與開發體驗，同時為即將上線的 GNOME 49 桌面環境提供技術基礎。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;GTK (GIMP Toolkit) 是一套跨多種平台的圖形工具包，最初為 GIMP 而寫，GIMP 是指 GNU 圖像處理程序 (GNU Image Manipulation Program)，GIMP 擁有幾乎所有圖象處理所需的功能，號稱 Linux 下的 Photoshop。GTK 後來發展成為 Linux 下開發圖形界面應用的主流開發工具。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Wayland 支持提升&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;增加對 &lt;strong&gt;wl_seat v10 協議&lt;/strong&gt;的支持。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 &lt;strong&gt;tablet protocol v2&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;引入 &lt;strong&gt;server-side 鍵重複&lt;/strong&gt;機制。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改善自然滾動處理等功能。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;跨平台增強&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vulkan 渲染器&lt;/strong&gt;在 macOS 上得到修復與優化，並增強整體 Vulkan 渲染代碼的穩定性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;macOS 平台新增 &lt;strong&gt;窗口貼靠（window snapping）&lt;/strong&gt; 和改進的 &lt;strong&gt;窗口菜單支持&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;功能與渲染改進&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;視頻播放組件新增 &lt;strong&gt;YUV 格式支持&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;增加 &lt;strong&gt;會話管理 portal&lt;/strong&gt; 支持，強化跨桌面環境一致性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;改善符號圖標（symbolic icons）的渲染質量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持 &lt;strong&gt;CSS 媒體查詢&lt;/strong&gt;，讓主題在色彩方案與對比度上具備更細緻的響應式表現。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在 OpenGL 渲染路徑中增加對，多平面紋理（multi-plane textures）的支持。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;繼續推進無障礙訪問（accessibility）方面的改進，如對輸入框、文件選擇器等組件的輔助功能增強。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;與 GNOME 生態系統同步&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GTK 4.20 正式作為穩定版本發佈，且及時在 GNOME 49 發佈週期前推出，可預見將被 GNOME 49 默認採用。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;詳情查看&amp;nbsp;&lt;em&gt;https://gitlab.gnome.org/GNOME/gtk/-/blob/main/NEWS&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369720</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369720</guid>
      <pubDate>Sun, 31 Aug 2025 10:47:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>用 deepin 的人，也是吃上好的了</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;p&gt;deepin 搞了個 AI 助手，叫 UOS AI。&lt;/p&gt; 
&lt;p&gt;應該沒有人不知道 deepin （&lt;span&gt;&lt;span&gt;深度操作系統&lt;/span&gt;&lt;/span&gt;）吧？&lt;span&gt;&lt;span&gt;它是中國第一個具備國際影響力的&lt;span&gt;&amp;nbsp;Linux&amp;nbsp;&lt;/span&gt;發行版本，支持全球&lt;span&gt;33&lt;/span&gt;種語言，在國際&lt;span&gt;&amp;nbsp;Linux&lt;/span&gt;&amp;nbsp;發行版排行榜中穩居前十。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;你是不是也跟我一樣好奇，搞操作系統的，為什麼也要來搞 AI 助手？&lt;/p&gt; 
&lt;p&gt;跟其他大部分只會聊天、寫文章，最多生成 PPT 文件相比的 AI 小助手相比，UOS AI&amp;nbsp;有什麼不一樣，是不是會有更多系統級別的能力？&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;答案就是當然有 ！這就是搞操作系統的人搞 AI 的優勢了。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;目前大部分的 AI 助手，能回答問題，寫文章、生成圖片，但它動不了我們的電腦——想整理文件、調個設置、裝個軟件，還是得自己動手，它始終活聊天框裏。&lt;/p&gt; 
&lt;p&gt;而 UOS AI，像是這個電腦系統的大管家。它長在了系統裏，擁有其他 AI 助手所沒有的權限，你動動嘴，它就能直接動手幫你操作。&lt;/p&gt; 
&lt;p&gt;比如，你想批量整理系統文件，只需打開 UOS AI 助手，跟它説「把項目資料文件夾的所有文件，命名為 UOS 項目資料，按數字順序排好」，UOS MCP 立刻識別文件，幾秒鐘就能完成批量重命名。&lt;/p&gt; 
&lt;p&gt;或者你説「把屏幕調亮點兒，再幫我連一下藍牙音箱」，它不用教、不用你動手，幾秒鐘就能直接幫你搞定。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;簡單説，最大的不一樣就是：別的 AI 是説説而已，UOS AI 可以説到做到。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;就算是複雜操作，也能完成。這都是因為 deepin 開發了系統級的 MCP 服務器，高達 120+ 項系統控制，一鍵就能完成系統設置、應用管理、文件管理、聯網搜索等。&lt;/p&gt; 
&lt;p&gt;此外，UOS AI 還支持快速接入第三方 MCP 工具或智能體，不管是想用它辦公、學習，還是娛樂都可以。&lt;/p&gt; 
&lt;p&gt;總之就是別人有的，它也有了。&lt;/p&gt; 
&lt;p&gt;比如，你想要續寫文檔，根本不需要打開文檔，對 UOS AI 説「續寫桌面上的 AI 技術報告第三章，要 3 個分論點」，它就能順着前文風格生成邏輯連貫的內容，直接保存到文檔。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;也是沒想到，用 deepin 系統的人吃得這麼好！&lt;/strong&gt;感興趣的朋友可以，前往官網下載最新版 deepin 體驗：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank"&gt;https://www.deepin.org/index/zh&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;另外，我們也想探究一下， UOS AI 的 AI 能力是怎麼實現的？以後還會有哪些令人期待的地方？&lt;/p&gt; 
&lt;p&gt;9 月 5 日晚，開源中國將邀請 UOS AI 產品負責人姜琬瑩，做客《技術領航》欄目直播間，跟大家分享&amp;nbsp;UOS AI 的能力及實現。&lt;br&gt; &lt;br&gt; &lt;img height="740" src="https://oscimg.oschina.net/oscnet/up-210deaf87c39f1459061b78f9bfd676f627.jpg" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;strong&gt;直播福利：&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;福袋抽獎：直播中將有 5 輪抽獎，參與就有機會獲得 OSC T 恤、馬建倉蛇年公仔（限量版）、代碼聖盃、馬克杯、冰箱貼、前沿技術書籍等。&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="up-d0ddd08ceeff2b5526d3def6537a6ac649b.png" height="253" src="https://oscimg.oschina.net/oscnet/up-d0ddd08ceeff2b5526d3def6537a6ac649b.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;hr&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《技術領航》是開源中國 OSCHINA 推出的一檔直播欄目，旨在為&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;開源軟件、商業產品、前沿技術、知名品牌活動等各類項目&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供一個展示平台，基本上每週五晚上開播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;欄目邀請項目的創始人、核心團隊成員或資深用户作為嘉賓，通過路演式直播分享項目的亮點和經驗，有助於提高項目的知名度，吸引更多的用户和開發者關注。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你手上也有好的項目，想要跟同行交流分享，歡迎聯繫我，欄目隨時開放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"&gt;&lt;img height="537" src="https://oscimg.oschina.net/oscnet/up-4dd54c1b0b817689ceefa15aa66d79cfae8.png" width="400" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/3859945/blog/18690242</link>
      <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18690242</guid>
      <pubDate>Sun, 31 Aug 2025 10:40:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>Firecrawl 將於 9 月 8 日開源 AI 適應性檢測工具</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;網頁抓取與數據處理解決方案提供商 Firecrawl &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FCalebPeffer%2Fstatus%2F1962183698306179345" target="_blank"&gt;宣佈&lt;/a&gt;將於 2025 年 9 月 8 日開源其 AI 適應性檢測工具。&lt;/p&gt; 
&lt;p&gt;主要功能&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;符合 LLMs.txt 規範&lt;/li&gt; 
 &lt;li&gt;AI 可讀的內容質量&lt;/li&gt; 
 &lt;li&gt;合理的站點地圖結構&lt;/li&gt; 
 &lt;li&gt;以及 10 多項其他檢查&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0901/183141_3H9U_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，該工具通過 12 項技術指標診斷網站的 AI 搜索生態適配度，涵蓋 LLMs.txt 規範、站點地圖完整性和移動端響應效率等維度。&lt;/p&gt; 
&lt;p&gt;Firecrawl 專注於 AI 時代網站基礎設施優化，其工具可識別索引失效問題並生成 SEO 優化建議，支持 React 和 Django 等開發框架。行業認為其開源策略將降低企業應對 AI 搜索變革的技術門檻，解決傳統 CMS 語義化支持不足等痛點。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369714</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369714</guid>
      <pubDate>Sun, 31 Aug 2025 10:32:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>宇樹科技推出數字孿生機器人運動控制技術</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;杭州宇樹科技股份有限公司申請的專利 「一種基於數字孿生的機器人運動控制方法和電子設備」 於近日正式公佈。這項新技術旨在通過數字孿生技術提升機器人在舞台表演中的靈活性和適應性，進而實現複雜而精彩的舞蹈表演。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="331" src="https://oscimg.oschina.net/oscnet/up-185be11f97770d6539d0801b40b9ac9b5b0.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;這項發明的核心在於構建了多個功能模塊，包括環境採集模塊、地圖處理模塊、數字舞台孿生模塊、舞蹈動作設計模塊、軌跡規劃模塊以及舞蹈合成模塊。這些模塊通過數據交互和功能協同，有效提升了機器人的舞蹈設計和執行能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;首先，環境採集模塊能夠實時收集舞台環境的信息，確保機器人及時瞭解周圍的變化。接着，地圖處理模塊則將這些信息進行處理和分析，為機器人的運動提供精確的背景數據。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;數字舞台孿生模塊是這項技術的關鍵，它能夠創建舞台的數字化模型，幫助機器人更好地理解和適應環境。舞蹈動作設計模塊則讓藝術家能夠設計出更為複雜和富有表現力的舞蹈動作，而軌跡規劃模塊則負責將這些動作與實時環境相結合，確保機器人的舞蹈表演與舞台環境的完美匹配。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;通過舞蹈合成模塊，所有的舞蹈動作得以整合，形成一套完整且流暢的表演。這種高效、可擴展的舞蹈設計方案，不僅確保機器人在表演時能夠精準感知和適應環境的變化，還避免了機器人動作與環境脱節的問題。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369713</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369713</guid>
      <pubDate>Sun, 31 Aug 2025 10:32:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>UJCMS 9.9.0 發佈，Java CMS 網站內容管理系統</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;h2&gt;更新日誌&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;新增表單對象標籤&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;優化數據庫備份功能&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;前台全文檢索可以搜索圖片集名稱和描述&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Dockerfile 優化&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;cnb 流水線優化&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;修復文章審核時，文章數據權限的問題&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;修復區塊項無法排序的問題&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;簡介&lt;/h2&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;UJCMS 是一款基於 Java 的企業級網站內容管理系統（Java CMS），採用 SpringBoot、MyBatis、Spring Security、Vue3、Vite、ElementPlus 等前沿技術開發，支持&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;無頭 CMS&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;架構。&lt;/p&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;系統提供&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;模板 + 標籤&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;和&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;Vue (React) + API&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;兩種開發模式，適用於傳統模板渲染和現代化前後端分離場景，為網站的建設、管理與維護提供高效、靈活、可靠的解決方案。&lt;/p&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;使用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;code&gt;Apache-2.0&lt;/code&gt;&lt;span style="background-color:#ffffff; color:#40485b"&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;開源協議，可免費用於商業用途。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;演示站前台：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2F" target="_blank"&gt;https://demo.ujcms.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;演示站後台：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdemo.ujcms.com%2Fcp%2F" target="_blank"&gt;https://demo.ujcms.com/cp/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;官方網站：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ujcms.com%2F" target="_blank"&gt;https://www.ujcms.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;安裝包下載：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ujcms.com%2Fchannels%2Fdownloads%2F" target="_blank"&gt;https://www.ujcms.com/channels/downloads/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;後端技術&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Spring Boot：提供了對 Spring 開箱即用的功能。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Spring MVC：MVC 框架。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Spring Security：安全組件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;MyBatis：持久化框架。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Lucene：全文檢索組件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Flowable: 工作流引擎。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Liquibase: 數據庫表結構版本管理組件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Freemarker: 模板引擎。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;前端技術&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Vue3：JavaScript 框架。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;ElementPlus：Vue 3 UI 框架。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Vite: 下一代前端開發與構建工具。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;TypeScript: JavaScript 的一個超集。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Tailwind CSS: 功能類優先的 CSS 框架。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Pinia: Vue 狀態管理庫。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;VueRouter: Vue 路由組件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;VueI18n: Vue 國際化組件。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;ECharts: 可視化圖表庫。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;Tinymce: 富文本編輯器。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;技術及功能亮點&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;strong&gt;自定義字段&lt;/strong&gt;：提供拖拽式可視化設計工具，支持所見即所得的操作體驗。所有自定義字段均支持查詢功能，顯著增強系統靈活性。&lt;/p&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;參數化查詢&lt;/strong&gt;：只需在前台傳遞參數（如：Q_title=abc，Q_user-username=test），即可實現任意字段及關聯表查詢，無需編寫後台代碼，大幅提升開發效率。前後台均支持參數化查詢，幾乎滿足所有查詢需求。&lt;/p&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;地址 SEO 優化&lt;/strong&gt;：默認動態 URL 前綴為 /channel 和 /article，支持自定義修改（如 /categories 和 /archives）。多站點支持目錄形式（www.example.com/abc）或次級域名形式（abc.example.com），優化搜索引擎友好。&lt;/p&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;清理垃圾附件&lt;/strong&gt;：自動識別未使用的圖片和附件，支持一鍵清理，避免資源浪費。&lt;/p&gt; 
&lt;p style="color:#1f2328; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;主副表拆分&lt;/strong&gt;：針對高查詢量的複雜表，採用主副表拆分策略，顯著提升大數據場景下的性能表現。&lt;/p&gt; 
&lt;h2&gt;前台模板&lt;/h2&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="1934" src="https://oscimg.oschina.net/oscnet/up-80a0ebd93df8b45fee97e5ee120780e5c78.jpg" width="1351" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h2&gt;後台界面&lt;/h2&gt; 
&lt;p style="color:#24292e; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img alt="" height="713" src="https://oscimg.oschina.net/oscnet/up-cfe14e42ecbeb17974c201494ee2c931758.jpg" width="1367" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369708</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369708</guid>
      <pubDate>Sun, 31 Aug 2025 10:15:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>SQLE 4.2508.0 正式版發佈！智能 SQL 調優上線！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-788158a10768c12ea269efce421a1b84dd3.png" width="893" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span&gt;智能 SQL 調優&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;🔗&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;企業版獲取&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;span&gt;可通過文末海報中的小程序進行商務諮詢或預約演示&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;&lt;strong&gt;🔥&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;strong&gt;《SQLE 小課堂》&lt;/strong&gt;&lt;span&gt;系列視頻，火熱更新中……&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#2584b5"&gt;&lt;span&gt;&lt;span&gt;🎈 新功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;u&gt;🚀&lt;/u&gt;&lt;/span&gt;&lt;span&gt;&lt;u&gt;&amp;nbsp;&lt;/u&gt;&lt;/span&gt;&lt;span&gt;&lt;u&gt;SQL 性能問題終結者！&lt;/u&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;&lt;u&gt;一鍵調優，讓你的查詢飛起來！&lt;/u&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;你是否也曾被下面這些場景困擾？&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="1096" src="https://oscimg.oschina.net/oscnet/up-ea7625b0b86e30efcf4c51afe47b844cfbd.png" width="844" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;如果你對上面的場景感同身受，那麼本次發佈的新功能 ——&amp;nbsp;&lt;/span&gt;&lt;strong&gt;智能 SQL 調優&lt;/strong&gt;&lt;span&gt;，就是為你量身打造的！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;核心價值：不止是建議，我們直接給你結果！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;span&gt;&lt;span&gt;我們這次來點最實際的。新功能最核心、最強大的地方在於：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;它會直接生成一條優化後的、可以立即使用的新 SQL！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;是的，你沒看錯！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="333" src="https://oscimg.oschina.net/oscnet/up-f7705ef8759cfa41c9f70a57ebe0f83d644.png" width="851" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;一鍵獲得最優 SQL&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;你只需要把有問題的 SQL 交給我們，系統就會自動分析、診斷，併為你 「手寫」 出一條性能更優的新 SQL。你只需複製、粘貼、執行，就能立即看到效果！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="922" src="https://oscimg.oschina.net/oscnet/up-67f308a7ec137ddc963307e8ea4d8978093.png" width="1984" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;功能效果圖 A&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;span&gt;&lt;strong&gt;告別不確定性&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;：我們不僅提供優化後的 SQL，還會用詳盡的執行計劃對比數據告訴你，它為什麼更快，性能提升了多少。讓你的每一次優化都有據可依，充滿信心。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="1122" src="https://oscimg.oschina.net/oscnet/up-0449cf030768182d6ae1d861ce499153c0b.png" width="1654" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;功能效果圖 B&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt; &lt;span&gt;&lt;strong&gt;人人都是 SQL 大師&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;即使你不是數據庫專家，也能輕鬆完成複雜的 SQL 性能優化。這個功能讓你瞬間擁有資深 DBA 的調優能力，把時間和精力聚焦在業務邏輯上。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" height="1251" src="https://oscimg.oschina.net/oscnet/up-2d6d01f3ba81a4a26215c47f20174f7529e.png" width="1638" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;功能效果圖 C&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;strong&gt;三步搞定，輕鬆上手！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;使用這個強大的功能非常簡單，只需要幾步：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;發起調優&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;方法一：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在 「SQL 分析」 頁面，如果發現有性能問題的 SQL，直接點擊旁邊的【SQL 調優】按鈕。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img alt="" height="435" src="https://oscimg.oschina.net/oscnet/up-3a4859587bb575bafafa83e52c0303c7521.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;功能發起方式一&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;方法二：&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;也可以從主菜單的【快捷操作】入口，主動創建一個調優任務，把你想優化的 SQL 粘貼進去就行。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;img alt="" height="423" src="https://oscimg.oschina.net/oscnet/up-34d4df99c89249fbf0cf0e2aa70951d9547.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; &lt;p&gt;&lt;span&gt;&lt;span&gt;功能發起方式二&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;稍等片刻&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;讓我們的智能引擎飛一會兒，它正在幕後為你進行成千上萬次的計算和分析。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;查看結果&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;調優完成後，你會看到一份清晰的報告，包含了：性能提升對比、優化建議、調優前後的執行計劃差異等。所有信息都一目瞭然，讓你輕鬆做出決策！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;br&gt; &lt;span&gt;&lt;span&gt;我們相信，這個功能將極大地解放你的生產力，讓你從繁瑣的 SQL 調優工作中解脱出來，把更多精力投入到更有創造性的業務開發中。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;現在就去試試吧！你有沒有哪條一直讓你頭疼的 「慢 SQL」？快用我們的新功能給它 「診斷」 一下，然後來社區和我們分享你的 「調優戰果」 吧！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h2&gt;&lt;span style="color:#2584b5"&gt;&lt;span&gt;📜 版本日誌&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;span&gt;社區版&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;優化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/dms/issues/509] 項目列表、用户列表新增模糊搜索組件&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/dms/issues/503] 用户名不應允許存在空格&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Bug 修復&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[/issues/3097] 修復，工單上線後沒有郵件通知問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/dms/issues/515] 修復特定用户名稱訪問工作台失敗問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;span&gt;&lt;strong&gt;&lt;strong&gt;&lt;span&gt;企業版&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;新特性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2498] SQLE 對接 SQLFlash&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/dms-ee/issues/642] 支持 OB（MySQL 模式）數據導出功能&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/dms-ee/issues/597] 數據導出工單支持郵件消息推送&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;優化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2496] 審批流程模版指定審批人上限調整&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2490] JAVA 應用 SQL 抓取版本兼容&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/dms-ee/issues/648] 項目業務增加/篩選優化&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;Bug 修復&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2519] 修復 SQL 分析禁止下發真實的 SQL&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2516] 修復審計管理員看不到 SQL 導出記錄的問題&amp;nbsp;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2514] 修復 OB（Oracle 模式），SQL 管控 TOP SQL 採集，存在的審核異常提示&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2495] 修復角色管理列表頁在切換可用區後再重新進入會報錯問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2494] 修復在配置 IDEA 插件的時候，獲取數據源信息的時候報權限不足問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;[actiontech/sqle-ee/issues/2477] 修復 SQL 管控：TD MySQL 監控庫採集採集週期內採集的 SQL 過多導致採集超時問題&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span style="color:#2584b5"&gt;&lt;span&gt;🧩 版本選擇&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;&lt;span style="color:#3da742"&gt;&lt;span&gt;社區版：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;輕量級 MySQL 開發治理工具，滿足個人和小團隊的基礎 SQL 開發需求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;專業版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;多數據源開發治理平台，為中小團隊提供更豐富的數據庫變更管控能力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;企業版：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;企業級數據資產合規平台，滿足大型企業的數據安全與管控要求。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="684" src="https://oscimg.oschina.net/oscnet/up-4d74eb074098be0586db43d12d6a54823e7.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;🤗 我們為&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3da742"&gt;&lt;strong&gt;&lt;span&gt;社區版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;和&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;span&gt;企業版&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;準備了在線體驗環境，歡迎體驗。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:center"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span style="color:#010101"&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style="color:#3da742"&gt;&lt;span&gt;社區版：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#010101"&gt;&lt;span&gt;http://demo.sqle.actionsky.com/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;span style="color:#ffa900"&gt;&lt;strong&gt;&lt;span&gt;企業版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;http://demo.sqle.actionsky.com:8889/&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#010101; margin-left:0; margin-right:0"&gt;&lt;span&gt;🙋‍♂️&lt;/span&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;用户名：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;admin&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#010101; margin-left:0; margin-right:0"&gt;&lt;span&gt;&lt;span&gt;🔑&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;密 &amp;nbsp; 碼：&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;admin&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0"&gt;&lt;span style="color:#010101"&gt;&lt;span&gt;👉&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style="color:#3daad6"&gt;&lt;strong&gt;&lt;span&gt;專業版：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;調填寫調研問卷（掃碼或點擊&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;原文鏈接&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;）獲取安裝包。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="300" src="https://oscimg.oschina.net/oscnet/up-7b0100862020c9608a047c7a815f6d1e7fb.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;SQLE 4.2508.0&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;專業版（20250902 18:00 更新）&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;🔗&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;企業版獲取：&lt;/span&gt;&lt;/strong&gt;&lt;span style="color:#000000"&gt;&lt;span&gt;可通過海報下方的小程序進行商務諮詢或預約演示。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1800" src="https://oscimg.oschina.net/oscnet/up-21046b7d6705f50a144cff70ed4094d512b.png" width="1080" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369704/sqle-4-2508-0-ga</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369704/sqle-4-2508-0-ga</guid>
      <pubDate>Sun, 31 Aug 2025 10:10:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>微軟 Copilot Labs 上線「音頻表達式」功能</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;微軟在 Copilot Labs 上線了名為「音頻表達式（Audio Expression）」的實驗性功能，用户可輸入提示並讓 AI 以不同語音風格朗讀文本，該功能僅限文本轉語音。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1856" src="https://static.oschina.net/uploads/space/2025/0901/180307_ik24_2720166.png" width="3360" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;https://copilot.microsoft.com/labs/audio-expression&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，Copilot Audio Expressions 的功能是讓輸出的音頻更接近真人，並可根據需求加入創意潤色。用户無需註冊即可直接體驗，並可下載 MP3 格式音頻，方便在任何設備播放。&lt;/p&gt; 
&lt;p&gt;該工具目前提供 Emotive（情感表達）和 Story（故事創作）兩種模式。&lt;/p&gt; 
&lt;p&gt;在 Emotive 模式下，生成的音頻不僅朗讀了文字，還自動增添細節、調整措辭，讓表達更生動。單段音頻最長 59 秒，支持十餘種聲音與風格組合。在 Story 模式下，系統自動選擇音色和風格，用户僅需提供主題提示。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369702</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369702</guid>
      <pubDate>Sun, 31 Aug 2025 10:07:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>WhisperLiveKit - 實時、完全本地語音轉文</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;實時、完全本地語音轉文本，支持説話人識別。實時語音轉錄直接發送到你的瀏覽器，帶有可立即使用的後端+服務器和簡單的前端。&lt;/p&gt;

&lt;p&gt;&lt;img height="272" src="https://static.oschina.net/uploads/space/2025/0828/135735_EKWx_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;架構&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height="175" src="https://static.oschina.net/uploads/space/2025/0828/135747_DGD3_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;p style="text-align:start"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;em&gt;後端支持多個併發用户。語音活動檢測功能可在未檢測到語音時減少開銷。&lt;/em&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;安裝和快速啓動&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt;
&lt;/div&gt;

&lt;div style="text-align:start"&gt;
&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span style="background-color:#f6f8fa"&gt;&lt;span&gt;&lt;span&gt;pip install whisperlivekit&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;span&gt;&lt;strong&gt;需要 FFmpeg&lt;/strong&gt;，必須在使用 WhisperLiveKit 之前安裝&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; box-sizing:border-box; color:#59636e; display:block; font-family:-apple-system,BlinkMacSystemFont,&amp;quot;Segoe UI&amp;quot;,&amp;quot;Noto Sans&amp;quot;,Helvetica,Arial,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;; font-size:16px; font-style:normal; font-variant:tabular-nums; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="border-color:#d1d9e0"&gt;OS&lt;/th&gt;
&lt;th style="border-color:#d1d9e0"&gt;How to install&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Ubuntu/Debian&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;code&gt;sudo apt install ffmpeg&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;MacOS&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;&lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Windows&lt;/td&gt;
&lt;td style="border-color:#d1d9e0; border-image:none 100% / 1 / 0 stretch; border-style:solid; border-width:0.666667px"&gt;Download .exe from&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://ffmpeg.org/download.html"&gt;https://ffmpeg.org/download.html&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;and add to PATH&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/whisperlivekit</link>
      <guid isPermaLink="false">https://www.oschina.net/p/whisperlivekit</guid>
      <pubDate>Sun, 31 Aug 2025 09:55:00 GMT</pubDate>
    </item>
    <item>
      <title>具身智能高質量合成數據集開源發佈</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;span style="color:#000000"&gt;國家數據局發文&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FSi6YQUzRwOgNjN29YaOQqg" target="_blank"&gt;宣佈&lt;/a&gt;，具身智能靈巧手多樣抓取仿真數據集（DexonomySim）已開源發佈。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;具身智能靈巧手多樣抓取仿真數據集（DexonomySim）是在國家數據局數字科技和基礎設施建設司指導下，由銀河通用介紹發佈。DexonomySim 專為具身智能機器人靈巧抓取任務設計，包含超過 950 萬條高質量抓取姿態，覆蓋超 1 萬個物體與 31 種常用抓握類型，涵蓋人類抓握分類法中約 94% 的類型，是當前具身智能領域開源的最大規模靈巧手操作高質量合成數據集。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;該數據集適用於多指靈巧手在高自由度操作場景下的模型訓練與算法驗證，其生成方式基於高效優化的物理仿真，具有數據格式規範統一、真實可溯、內容優質、模型適配性高等優勢，且多樣性與規模均遠超已有數據集，有效滿足模型泛化需求，助力人形機器人實現對外形不規則或需精細操作物體的穩定、多樣化抓取，提升複雜環境下的操作適應性與任務成功率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="191" src="https://oscimg.oschina.net/oscnet/up-087f340a737ec99d0fd59df16c8f689f257.png" width="700" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;具身智能高質量合成數據集的開源，將為全球研究者和產業開發者提供關鍵的基礎設施和生產要素支撐，加速推動人形機器人在商超零售、工業分揀、家庭服務、醫療康養等多元場景落地應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;此次成果的開源，體現出行業企業在高質量數據集建設上的積極探索，也為推動數據要素價值釋放提供了鮮活實踐。下一步，國家數據局將持續推進高質量數據集建設，推動人工智能與具身智能等前沿領域加速發展，助力新質生產力培育與應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;具身智能靈巧手多樣抓取仿真數據集開源鏈接可查看&lt;/span&gt;&lt;span style="color:rgba(0, 0, 0, 0.9)"&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdisk.pku.edu.cn%2Fanyshare%2Fzh-cn%2Flink%2FAA126F20CCF8EC44DC819FFB494FFD96AD%3F_tb%3Dnone%26expires_at%3D2045-08-30T23%253A56%253A30%252B08%253A00%26item_type%3Dfolder%26password_required%3Dfalse%26title%3D%25E5%2585%25B7%25E8%25BA%25AB%25E6%2599%25BA%25E8%2583%25BD%25E7%2581%25B5%25E5%25B7%25A7%25E6%2589%258B%25E5%25A4%259A%25E6%25A0%25B7%25E6%258A%2593%25E5%258F%2596%25E4%25BB%25BF%25E7%259C%259F%25E6%2595%25B0%25E6%258D%25AE%25E9%259B%2586%25EF%25BC%2588DexonomySim%25EF%25BC%2589%26type%3Danonymous%26verify_mobile%3Dfalse" target="_blank"&gt;此處&lt;/a&gt;&lt;/span&gt;&lt;span style="color:#000000"&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/369688</link>
      <guid isPermaLink="false">https://www.oschina.net/news/369688</guid>
      <pubDate>Sun, 31 Aug 2025 09:28:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
