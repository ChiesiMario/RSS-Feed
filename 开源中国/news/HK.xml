<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Thu, 29 Aug 2024 14:39:22 GMT</lastBuildDate>
        <ttl>180</ttl>
        <item>
            <title>開源日報 | 微軟發佈新開源字體；GitHub 新病毒；OpenAI 估值超 1000 億美元；無需數據庫的開源動態 CMS；Wireshark 4.4 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.29&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/309386/wireshark-4-4-released&quot;&gt;Wireshark 4.4 發佈，最強開源網絡數據包分析器&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;此版本支持自動切換配置文件，這樣可以將顯示過濾器與一個配置文件關聯，當打開匹配過濾器的捕獲文件時，將自動切換到該配置文件。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Wireshark 4.4 還改進了其&amp;nbsp;I/O 圖表、Flow 圖表 / VoIP 調用、TCP Stream 圖表和其他 UI 對話框。此外還支持 Lua 5.3/5.4、改進的顯示過濾器、支持與 zlib-ng 構建，幷包含許多其他改進。&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ce77c52a3301e6e47cf0bb9e7f25d863a28.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#d83931&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/309405/microsoft-cascadia-next&quot;&gt;微軟推出「Cascadia Next」開源字體&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;微軟宣佈推出&amp;nbsp;Cascadia Code 開源字體的下一代演變 ——&amp;nbsp;Cascadia Next，其字體設計師已經為 Cascadia Next 設計了簡體中文、繁體中文和日文三種字體。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-271af2f7f021169817ec12bdae0a28a5076.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/309417/openai-new-funding-round-100b-valuation&quot;&gt;OpenAI 洽談新一輪融資，估值超 1000 億美元&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;p&gt;《華爾街日報》消息稱，OpenAI 正在洽談籌集大量資金，由之前的支持者 Thrive Capital 領投，估值超過 1000 億美元。這大大高於 OpenAI 之前 860 億美元的估值，是迄今為止所有 AI 初創公司中估值最高的。&lt;/p&gt; 
  &lt;p&gt;知情人士透露，Thrive 將投入約 10 億美元，微軟也有望參與其中。這筆融資將成為 OpenAI 自 2023 年 1 月微軟投資近 100 億美元以來最大的外部資本注入。&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.xlab.qianxin.com%2Fmore_ddos_details_on_steam_cn%2F&quot; target=&quot;_blank&quot;&gt;《黑神話：悟空》發行平台遭 DDoS 攻擊的更多細節 (公開版)&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;XLAB 大網威脅感知系統對最近的 DDoS 攻擊事件進行了深入觀察。我們注意到，此次攻擊涉及了近 60 個殭屍網絡主控節點，這一規模遠超過常規殭屍網絡的控制範圍。這些主控節點協同指揮了大量被感染的 bots，以波次方式發起了攻擊。&lt;/p&gt; 
    &lt;p&gt;攻擊的目標包括 Steam 在全球 13 個地區的服務器 IP，包括中國、美國、新加坡、瑞典、德國、奧地利、西班牙、英國、日本、韓國、澳大利亞、智利和荷蘭。值得注意的是，除了 Steam 自身的服務器外，國內完美世界代理的 Steam 服務器也被列為攻擊目標。總計，有 107 個服務器 IP 遭到了攻擊。&lt;/p&gt; 
    &lt;p&gt;攻擊行動主要分為四個波次，攻擊者似乎有意選擇在各個時區的遊戲玩家在線高峯時段發起攻擊，以實現最大的破壞效果。&lt;/p&gt; 
    &lt;p style=&quot;text-align:right&quot;&gt;&lt;span&gt;- &lt;strong&gt;奇安信 X 實驗室&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2Fcsj%2F2024-07-29%2Fdoc-incfukxf1004469.shtml&quot; target=&quot;_blank&quot;&gt;誰會成為人形機器人第一城？&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;今年 4 月份以來，人形機器人創新中心在各大省市密集成立。&lt;/p&gt; 
    &lt;p&gt;4 月 16 日，廣東省具身智能機器人創新中心在深圳落地；4 月 18 日，成都人形機器人創新中心正式營業；同一天，浙江人形機器人創新中心落地寧波；7 月 19 日，安徽人形機器人創新中心也在合肥落户。&lt;/p&gt; 
    &lt;p&gt;可以看到，以創新中心為牽引，各省、市圍繞着人形機器人產業的一張大網已經徐徐拉開。&lt;/p&gt; 
    &lt;p&gt;那麼，當城市的標籤被搬上桌面，誰又會成為人形機器人第一城呢？&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;產業象限&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOum5TkZVF&quot; target=&quot;_blank&quot;&gt;GitHub 新病毒&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;使用 GitHub 的朋友請注意了，現在有一種新的病毒正在流行！這種病毒會在 GitHub Issues 中偽裝成「技術響應」。下載後，它會控制你的計算機並黑入你的 GitHub 帳户，對你發佈的倉庫、星標的倉庫等發起更多攻擊。&lt;/p&gt; 
  &lt;p&gt;目前已有許多用户和存儲庫遭到了黑客攻擊。在 GitHub 上衝浪的時候，也請不要太過於相信陌生人，不要點擊可疑的鏈接、或者下載可疑的開源庫！&lt;/p&gt; 
  &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-90cd0d6eee7e68eeda7f069779a5f028325.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1655747731%2FOuwnQ5lH4%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;CUDA 用最爛的語言之一糊出了軟件史上最高的商業價值&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    編程語言紅利期過去了，解決實際問題比較重要。CUDA 用最爛的語言之一糊出了軟件史上最高的商業價值。
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;有個梨 GPT&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6444741184%2FOum1auWJr&quot; target=&quot;_blank&quot;&gt;無需數據庫的開源動態 CMS&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;GitBase 是一套新人友好，完全無需數據庫，卻有管理後台，可以動態更新網站內容的開源 CMS。&lt;/p&gt; 
  &lt;p&gt;你可以快速基於這套代碼，一鍵部署到 Vercel ，上線自己的博客網站或者導航網站。&lt;br&gt; 這套代碼還可以在接入 AI 之後，實現讓 AI 自動更新網站內容，甚至自動修改網站代碼，增加新功能。&lt;/p&gt; 
  &lt;p&gt;地址:&amp;nbsp;https://github.com/qiayue/GitBase&lt;/p&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;林亦 LYi&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1808634410883194244%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;工信部：發展壯大基礎軟件、工業軟件，全力推動軟件產業高質量發展&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#262626; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;金壯龍表示，工業和信息化部將深入貫徹習近平總書記關於軟件產業發展的重要指示精神，落實黨的二十屆三中全會改革部署，完善政策體系，加強公共服務，建好應用場景，優化產業生態，發展壯大基礎軟件、工業軟件，推進開源體系建設，全力推動軟件產業高質量發展。堅持「兩個毫不動搖」，堅持服務和管理並重、發展和幫扶並舉，加快構建促進專精特新中小企業發展壯大機制，加強與企業的常態化交流，幫助企業解決實際困難，不斷提升核心競爭力。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;第一財經&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cRDKjvgllH&quot; target=&quot;_blank&quot;&gt;美國科技，重大突發&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;就在英偉達引發美國科技股大跌之際，另一場爭端也已開啓。美國加州對人工智能的監管努力在科技界引起了巨大分歧。加州的新法案將要求人工智能開發人員在開發模型之前遵守某些規則。該法案已在州參議院獲得通過，州議會必須在 8 月 31 日之前批准該法案，然後提交給州長加文·紐森（Gavin Newsom）。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;證券時報&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1808638565080544408%26wfr%3Dspider%26for%3Dpc&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;AI 文生視頻開始幫美圖賺錢了，上半年調整後淨利同比增長 80%&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;美圖發佈 2024 年上半年財報，數據顯示，美圖上半年總收入 16.2 億元，同比增長 28.6%。經調整後淨利潤 2.7 億元，同比增長 80.3%。美圖方面稱，總收入與淨利潤增長主要得益於生成式 AI 持續提升產品效果，以付費訂閲為主的影像與設計產品收入保持快速增長。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;科創板日報&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F5953466483%2F162dab07301901aw58&quot; target=&quot;_blank&quot;&gt;8 個月融 15 億，創始人跑了仨&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;如果非要選一個最火熱的賽道，在 2024 年，它一定是 AI。這條賽道上擠滿了背景亮眼的創業者，身家億萬的富豪或者他們的家辦，還有鼎鼎有名的投資人。一些有趣的現象也正在發生，今天想講的就是，越來越多的創始人因為這樣或那樣的原因選擇了離開自己曾發誓要改變世界的公司。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;投中網&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.163.com%2Fdy%2Farticle%2FJAN9EVAS05568DNC.html&quot; target=&quot;_blank&quot;&gt;AI Agent，下一個爆款級 AI 應用？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;與 ChatGPT 等 AI 應用相比，AI Agent 像一位更具象的全能員工，被視為人工智能機器人的初級形態，軟硬件兼顧的智能體能夠如同人類一般觀察周圍的世界、做出決策並自動採取相應的行動。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#222222&quot;&gt;極智 GeeTech&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cR8l8o4NN8&quot; target=&quot;_blank&quot;&gt;中金公司：具身智能研發端開源平台漸起，人形機器人本體企業快速落地&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;中金公司發表研報稱，工業機器人企業積極尋找應用突破口，嘗試與 AI 大模型融合;但考慮到訓練成本與準確率，AI 賦能工業機器人應用場景落地尚需時日，但模型發展成熟或為工業機器人應用打開藍海市場。本次展會多家官方區域性創新中心首次亮相，湧現愈多本體一級企業，硬件設計迭代速度較快，各家差異化佈局;企業逐漸注重大模型開發，但短期受限於訓練數據量與算力。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;智通財經 APP&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLibrePCB%2FLibrePCB&quot; target=&quot;_blank&quot;&gt;LibrePCB/LibrePCB&lt;/a&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img height=&quot;180&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-baaddaae80fc0ab1a1a49820d2f165fe85c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLibrePCB%2FLibrePCB&quot; target=&quot;_blank&quot;&gt;https://github.com/LibrePCB/LibrePCB&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;LibrePCB 是一款免費的 EDA 套件，可用於在 Windows、Linux 和 MacOS 上開發印刷電路板。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/meituantech/blog/15344283&quot; target=&quot;_blank&quot;&gt;信息流廣告預估技術在美團外賣的實踐&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;本文整理自美團技術沙龍第 81 期《美團在廣告算法領域的探索及實踐》(B 站視頻)。文章首先介紹了美團信息流廣告業務以及預估技術的現狀，然後重點分享了信息流廣告預估在美團的具體實踐，圍繞決策路徑、超長超寬建模和全還原建模等多個維度進行了分享，最後是一些總結和展望，希望能對大家有所幫助或啓發。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;135&quot; src=&quot;https://oscimg.oschina.net/oscnet/a8dc4131af681d98aee50dd673058981529846.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FMO8ymSxagbr_5BTimlKdSg&quot; target=&quot;_blank&quot;&gt;微軟旗下開源.NET 框架 Mono 正式「易主」&lt;span&gt;——&lt;/span&gt;由負責「Windows 應用兼容層」的 Wine 接手&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：wine 接手，這個牛啊，越來越有指望了&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：我不是很理解，wine 為什麼接手這個&lt;/span&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：wine 要運行.net 程序本來就要 mono 啊。正好有需求就給它了唄。&lt;/span&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：問題來了，unity 什麼時候徹底切換到 dotnet core&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：Unity 遷移 CoreCLR 的內部工作看樣子基本快完成了，目前內部版本的 Unity 已經完全跑在了 .NET 8 上，並且徹底把 mono 刪了。就是不知道什麼時候能用上了。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：.net 開放後用 mono 的越來越少了，也越來越沒人在乎了。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：monodevelop 也停止開發了，rocky linux9 已經裝不上 monodevelop&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：wine 把 linux .NET gui 搞起來吧&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：這個 mono 是以前.net framework 時代的老 mono 吧，和新的 mono 不是同一個&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：dotnet/runtime 跨平台完成，mono 沒啥用了。&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ff1OWZi4-adHvM5oFIrmz9A&quot; target=&quot;_blank&quot;&gt;接私活碰上「睿智」甲方，説我們程序員是社會底層人士&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：猜測甲方是想要多設備登錄態管理和審計方案。但是這個問法有找茬或者騙方案嫌疑&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：這樣罵拉低自己修養沒必要，直接開源和開盒讓大家避坑好了，都靈活用工了管它啥保密和安全……&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：有沒有大佬講講這個使用場景，到底如何實現比較好？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：你是真來學技術的&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：有沒有大佬説一下不能用 jwt 以及 redis 只能存一條的需求背景有哪些呀？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：其實可以用不叫 jwt 的 jwt&lt;img alt=&quot;😂&quot; src=&quot;https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif&quot; referrerpolicy=&quot;no-referrer&quot;&gt;，領導就是要用 jwt，只不過他搞不清楚 jwt，或者叫 accesstoken&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：用户都被偷緩存了，也就是系統都在別人手上了。 這不是前後端該解決的問題。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：雖然甲方千不該萬不該，但做項目本來就是命題作文，權衡和取捨很有必要&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/309236/notion-exits-russia&quot; target=&quot;_blank&quot;&gt;Notion 宣佈將退出俄羅斯市場&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點：準備出一個產品來替代 notion，然後推往俄羅斯，如何？&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309453</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309453</guid>
            <pubDate>Thu, 29 Aug 2024 11:13:58 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>【贈書福利】做難而正確的事情，成為技術書裏的「黑神話」</title>
            <description>恭喜張彥飛老師出版第二本新書：《深入理解 Linux 進程與內存》。 開源中國為各位讀者準備了粉絲專屬福利~</description>
            <link>https://mp.weixin.qq.com/s/zBjp_N1hiToaZo2YP3MPPg</link>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s/zBjp_N1hiToaZo2YP3MPPg</guid>
            <pubDate>Thu, 29 Aug 2024 10:46:00 GMT</pubDate>
        </item>
        <item>
            <title>飛輪科技《新一代實時分析數據倉庫解決方案》榮獲 HICOOL 2024 全球創業大賽二等獎</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;HICOOL 2024 全球創業者峯會於 2024 年 8 月 23 日 -25 日，在中國國際展覽中心（順義館）成功舉行，峯會以「新質引領，創新共融」為主題，聚焦技術創新、產業融合、新質共享與國際合作四大要素。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;在 8 月 23 日晚的峯會開幕式上，舉行 HICOOL 2024 全球創業大賽頒獎盛典，共頒發一等獎 12 個、二等獎 36 個、三等獎 68 個、優勝獎 84 個。&lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.selectdb.com%2F%3Futm_source%3DOSCHINA%26utm_medium%3D1%26utm_campaign%3Dpost&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;北京飛輪數據科技有限公司&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;（簡稱：飛輪科技）所申報的 《新一代實時分析數據倉庫解決方案》項目，經過 200 余天的激烈比拼，從全球 124 個國家和地區的 7406 個創業項目中脱穎而出，榮獲二等獎。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img alt=&quot;HICOOL 2024 全球創業者峯會&quot; src=&quot;https://oscimg.oschina.net/oscnet/hicool_f84b40d7c4.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;從 7000 餘項目脱穎而出&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;HICOOL 全球創業大賽創辦五年以來，共匯聚了全球 145 個國家和地區的 24171 個創業項目、32001 名創業者熱情參與，至今已誕生 720 個獲獎項目，覆蓋人工智能、虛擬現實、醫藥健康、新一代信息技術、高端裝備、新能源、新材料、文化創意、農業科技和食品科技等賽道，培育孵化 16 家獨角獸企業、127 家專精特新企業，獲獎項目賽後新融資額超 360 億元人民幣，持續引領新質生產力發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;HICOOL 2024 全球創業大賽熱度未減，共吸引來自 124 個國家和地區的 7406 個參賽項目和 9700 名人才報名參賽，報名數量較去年相比增長近 30%。今年大賽獲獎席位也從 140 個增加至 200 個，設置一等獎名額 12 個，單個項目獎金為 200 萬元；二等獎名額 36 個，單個項目獎金為 100 萬元；三等獎名額 68 個，單個項目獎金為 50 萬元；優勝獎名額 84 個，單個項目獎金為 20 萬元。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;在眾多參賽項目中，飛輪科技所提交的 《新一代實時分析數據倉庫解決方案》受到知名投資機構一線高管、資深產學研專家等資深評委的一致認同，最終從全球 124 個國家和地區的 7406 個創業項目中脱穎而出，榮獲二等獎。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt;
 &lt;span&gt;&lt;/span&gt; 
 &lt;div&gt; 
  &lt;div&gt;
   &lt;img alt=&quot;飛輪科技榮獲二等獎&quot; src=&quot;https://oscimg.oschina.net/oscnet/_e220a9e04e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;span&gt;&lt;/span&gt;
&lt;/div&gt; 
&lt;h3&gt;&lt;span&gt;關於飛輪科技&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;作為國內領先的企業級實時數據倉庫產品供應商，飛輪科技自成立以來，積極投身 Apache Doris 開源社區建設的同時，自主研發了現代化實時數據倉庫 SelectDB，面向全球提供多種部署形態的實時數據倉庫產品 SelectDB 與相關解決方案，滿足大規模實時數據場景下的極速查詢分析需求，為工業界構建全新的實時數據分析通用標準。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;與此同時，飛輪科技已與兆芯、飛騰、海光信息、統信軟件、中科可控、麒麟軟件、新華三、超聚變、中國電子雲等行業內超 40 家企業達成生態合作，核心產品 SelectDB 與國產主流信創產品均完成兼容適配，包括麒麟、統信、歐拉、飛騰、海光、鯤鵬等，覆蓋從芯片、服務器到操作系統的多款國產化信創產品，在產品層面具備完整的信創能力。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;截至目前，飛輪科技已服務全球上千家金融、電信、製造、能源、汽車、物流、政務等中大型企業，並基於豐富的行業經驗，沉澱了實時報表與分析、用户畫像與行為分析、湖倉一體、日誌存儲與分析等成熟的解決方案。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;未來，飛輪科技在持續引領技術創新的同時，將不斷深化國產化生態佈局，並進一步加強與產業鏈上下游企業的緊密合作，共同推動信息技術應用創新產業的繁榮發展。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309451</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309451</guid>
            <pubDate>Thu, 29 Aug 2024 10:35:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>信息流廣告預估技術在美團外賣的實踐</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;blockquote&gt; 
 &lt;p&gt;本文整理自美團技術沙龍第 81 期《美團在廣告算法領域的探索及實踐》(B 站視頻)。文章首先介紹了美團信息流廣告業務以及預估技術的現狀，然後重點分享了信息流廣告預估在美團的具體實踐，圍繞決策路徑、超長超寬建模和全還原建模等多個維度進行了分享，最後是一些總結和展望，希望能對大家有所幫助或啓發。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c9b66697b3d3c5c5c1bd4e30693b6268028.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;1 信息流廣告業務及預估技術現狀&lt;/h2&gt; 
&lt;h3&gt;1.1 信息流廣告業務特點&lt;/h3&gt; 
&lt;p&gt;目前，美團外賣的廣告主要包括信息流廣告、搜索廣告、營銷廣告、展示廣告等等。外賣業務都有着典型的業務特點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;用户行為連貫性強&lt;/strong&gt;：用户用餐意圖明確，一般在 10 分鐘內完成，UV 成單率較高。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;展示信息豐富&lt;/strong&gt;：卡片信息覆蓋了評分、評價、優惠、配送等多種信息，對用户的決策影響較強。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文本信息多&lt;/strong&gt;：在電商場景中，商品作為候選圖片往往佔據很大的決定因素，而在外賣場景下，商家作為候選更加複雜，商户名稱、評價、熱銷菜品等文本信息能夠影響用户做出決策。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/2f465d302f7d7b53f27e334fa7a9cfe01815373.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;1.2 技術概況及演進階段&lt;/h3&gt; 
&lt;p&gt;這裏先來介紹一下預估技術的現狀。從技術層面，下圖展示了廣告投放系統的整體的流程：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/a8dc4131af681d98aee50dd673058981529846.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;總的來説，外賣廣告系統跟我們在業界的搜推廣系統是比較相似的，召回、粗排、精排以及各種機制。但外賣廣告和業界場景區別較大的地方在於召回，因為它是基於位置服務（LBS）的，這個過程本身帶有一定的約束。因此，我們會在精排和機制層面投入更多的算力和資源，以期給整體鏈路帶來最大化的提升。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/5e8fe3fee5ea1ea169d2f8ce91dd8230473133.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在過去六七年中，到家廣告預估算法歷經了三個發展階段，第一個階段就是樹模型，包括連續特徵、交叉統計等等，當時的模型擬合能力是比較受限的。第二個階段是從 2017 年開始到 2020 年，在這個階段 DNN 模型開始爆發，我們進行了特徵升級，也開始緊隨業界步伐，引入更加複雜的模型，不斷提升業務效果。第三個階段就是 2021 年至今，我們主要方向是稀疏大模型+超長序列，進一步實現業務效果的提升。&lt;/p&gt; 
&lt;h3&gt;1.3 預估技術現狀&lt;/h3&gt; 
&lt;p&gt;在信息流廣告預估技術層面，主要探索方向為用户方向、鏈路方向以及 NLP 方向（如下圖所示）。當然，如果這張圖更全面一些，還會包括交叉方向，還有多場景多目標等等。而沒有選擇其他方向，主要是因為就交叉方向而言，我們發現隨着互聯網行業的不斷發展，用户的行為會越來越多且更加複雜，而交叉方向僅僅能帶來 Context 級別的深度學習能力，也就無法持續的成為效果的來源。另一個方面，雖然交叉技術也在發展，但發展方向上也是從 ID matching 到 Sequence Matching，單純平鋪類類別特徵的交叉模型能力發展有限。綜合多方面的因素，我們並沒有將交叉作為一個長期的方向進行迭代。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/ba5428b3be2a7232d9abe5f9ce124935649348.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;還有一個是多場景方向，其實此前我們在這個方向也做過一些迭代帶來了一波效果，但是後來我們發現，這種技術更加適合多個小場景的鏈接。如果你所服務的業務僅僅只有 1~2 個比較大的場景，這些場景本身的用户需求差異性、展示形態、候選供給差別又不大，就不太能發揮這個方向的技術能力及作用。&lt;/p&gt; 
&lt;p&gt;我們整體的思路是從用户的元素匹配、頁面匹配，到路徑匹配，最後到長期的興趣匹配。本質上都是在做不同層面的用户匹配相關的工作。其中，元素匹配、頁面匹配歸到了鏈路方向。原因是鏈路方向更多的都是在解決&quot;看不見的問題&quot;，然後再通過這些&quot;被看見&quot;的信息去做相應建模，所以我們將鏈路方向單獨列了出來。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在用户方向，我們也大概經歷了三個階段，第一個階段，要從原始單點、單入口的行為，向全行為、全入口進行擴張；第二個階段，是在已有的輸入的情況下，去探索更多的行為模式；第三個階段，我們主要是做一些自動化模式提取，或者説網絡自動擬合行為的能力做到更強。&lt;/li&gt; 
 &lt;li&gt;在鏈路方向，主要關注兩件事，一個是頁面還原，一個是卡片還原，通過算法和工程能力來還原用户&quot;所見&quot;到模型決策中。&lt;/li&gt; 
 &lt;li&gt;在 NLP 方向，過去我們還有一個方向叫多模態，但是客觀來講，隨着 LLM 的火爆，外界的技術也給我們更多的輸入，因此我們將 LLM IN CTR 單獨列出來作為一個主要的技術方向。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;2 信息流廣告在美團的實踐&lt;/h2&gt; 
&lt;h3&gt;2.1 用户建模思路概覽&lt;/h3&gt; 
&lt;p&gt;用户方向整體又拆解為三個反向，第一個是時間線，第二個是空間線，第三個是時間和空間共同作用下的行為模式。當時我們在拆解的時候，也參考了業界學界主要迭代的方法，包括 Session 建模、超長行為建模、多行為建模、長短期建模等。以學界和業界為基礎，結合業務問題、特點，將技術和業務結合的更好，有了以下的技術拆解。&lt;/p&gt; 
&lt;p&gt;在時間線上，我們認為長短期的多 Level 融合更加重要。一方面是用户興趣在不同級別&quot;片段&quot; 上關注點有顯著差異，比如頁面傾向比較、路徑上的興趣更連續、用户會連續吃一段時間輕食等，我們需要將這種在不同級別片段上的用户行為模式提取出來。因此，一方面我們通過更多頁面和路徑的方式將短期和長期進行聯合；同時，我們通過增加日、周級別的中期興趣，將短中、短長進行交互，增強時間線行為上的連接。另一方面，在模型上增加一些端到端的方式，自動化的將行為規律挖掘出來。這是時間線要解決的關鍵問題。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/b370246254c06dcc2fcd05b27e8298a6768373.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在空間線上，真實物理空間維度下，我們面對的問題比較明確，在不同的位置下，比如上班的時候和在家的時候，人的興趣其實是不完全一樣的，我們根據空間的位置為大家進行推薦。在虛擬空間下，比如用户在使用美團 App 和大眾點評 App 等不同入口，人的興趣和意圖也會發生較大變化。一個顯著的例子是，用户在首頁和會員入口上對優惠的關注區別較大。空間線解決的問題是結合真實空間、虛擬空間，去判斷用户的真實的意圖或者行為模式。&lt;/p&gt; 
&lt;p&gt;第三條線，就是跟業務進行結合，比如用户在 App 上進行了一些操作（領取了紅包），那麼這個行為會對點餐有什麼影響。本質上是模型在理解用户進行了一些操作行為後，會對接下來的行為產生哪些影響，進而模型能學習到不同的用户行為模式、更好的預測用户的行為。以上就是我們用户建模的整體思路。&lt;/p&gt; 
&lt;h4&gt;2.1.1 決策路徑建模&lt;/h4&gt; 
&lt;p&gt;本部分會介紹一下決策路徑建模，第一個核心的問題就是，DIN 單點匹配忽略了什麼？單點匹配，我們認為是忽略了前序行為對用户後續行為的一個影響。對絕大多數電商業務來説，用户在一段時間內的行為是具備一定的連貫性的，我們可以根據用户的歷史行為數據，對接下來的行為做出預測。這裏有兩個挑戰，第一，如何構建核心路徑；第二，如何解決路徑本身的噪聲、稀疏性、匹配等問題。我們的解法主要有三點：&lt;/p&gt; 
&lt;p&gt;第一，Path Enhance Module（PEM）提取核心路徑。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;判斷前置路徑和候選（歷史路徑為點擊）的相關性，建模路徑置信度。&lt;/li&gt; 
 &lt;li&gt;對原始進行全連接的 MLP 激活+Softmax Top K 結合原始表示作為核心路徑表達。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;第二，Path Augment Module（PAM）擴充路徑。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用用户的增廣路徑作為正樣本、其他用户的路徑作為負樣本，引入對比學習 Loss，提升路徑表示學習能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;第三，Path Matching Module（PMM）路徑+點雙層匹配。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;基於 PEM 表示，構建路徑匹配 Attention，進一步對歷史路徑取 Top K，去除掉無關路徑影響提升候選點匹配精度。&lt;/li&gt; 
 &lt;li&gt;進一步引入點（item）匹配，完成雙層匹配。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/860d53133357e2b2bae58dceed56622f540933.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;2.1.2 用户行為超長超寬建模&lt;/h4&gt; 
&lt;p&gt;相信很多同學都知道超長建模，基本上是通過聚類、局部 hash 等近似技術來進行實現。要引入超寬建模，本質上是因為我們需要將所有的輸入都放到一起，所以需要一個更大更復雜的模型去把事情給處理了。不過，在實際中我們沒有完全實現，因為目前的算力還是無法支持的。我們做了一個折中，長度是 1000（Length）的級別，寬度我們目前做到 10+這個級別，離線可以支持到更大的規模、到萬級別效果也有較大提升，但是迭代效率、線上壓力都會有較大限制。&lt;/p&gt; 
&lt;p&gt;這裏也面臨 2 個問題：第一個問題就是 SIM/ETA 為什麼沒有帶來效果？這個方向，最早是電商平台提出來的，SIM 主要是 Hard 過濾，比如通過用户在網站瀏覽鞋相關的行為時，他們也會看其他各種各樣的東西，它通過硬過濾，能夠把跟「鞋」相關的產品能過濾出來，過濾掉和鞋無關的噪音，學習到用户在鞋上的偏好。點外賣相對不太一樣，對一個候選漢堡來講，通過漢堡品類過濾掉和漢堡無關的行為，這會損失較多用户口味信息。這是業務差異性帶來的。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/5a50ab84e70be7d1e251c2f88f2972e7602873.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;第二個問題是，擬合 DIN Score 是否是長序列的終局？之前業界有一篇文章認為 DIN Score 是基準，把它線性擴展就能帶來效果，進一步擴展到萬級別或者十萬級別把效果推到最大化。但是通過實驗，我們的 CTR 場景線性擴展到超長級別並沒有持續帶來效果，反而到一定長度有所下降。我們認為 DIN 網絡本身的去噪能力不是很強，或者説它去提取出 Label 結果的結構能力並不夠強。如果它不是一個特別強的網絡，做更大的擴展的時候，它所能容納的信息是比較有限的。&lt;/p&gt; 
&lt;p&gt;我們可以把 CTR 理解成一個去噪任務，本質上是根據用户歷史和當前場景 Match 用户和候選的過程。我們發現，如果能預測出精準或者去除掉所有噪聲，比如拿穿越信息 Label POI 與 Target 進行匹配，使用簡單的網絡也可以有很高的 AUC。因此，我們認為完美的 CTR 網絡應該是一個強預測網絡+弱匹配網絡的組合。預測網絡應該是一個能力非常強的網絡，能夠進行多層的疊加，把信息進行萃取得到一個預測更加精準的結果，來與 Target 進行匹配。所以我們設計了一個多層的 Decoder，每一層的 Decoder 都能做信息的整合。通過不斷的選取有效矩陣、反覆疊加有效信息，來使得信息更加精準。這裏我們做了一組 Scaling Law 實驗，通過疊加多輪網絡來驗證結果的有效性。可以看到隨着輪數的增加，網絡學習用户行為的能力（AUC 逐層提升）也有所增加。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/6015fd3cd58d51cdf13abfe3097488e6818857.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;2.2 全還原建模&lt;/h3&gt; 
&lt;p&gt;首先，什麼是全還原建模？我們給的一個定義是還原用户所見所得。CTR 任務是根據用户看到的信息來判斷用户是否點擊，最重要的一點是將看見的信息全部納入到模型之中，過往簡單的通過 ID 表示建模忽略了上下文及展示的信息，帶來了較大的信息 GAP。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/f7cb5f3514a2b196376b99dc7b52276c1804018.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;第一個視角，上下文卡片無法獲得。上下文信息對當前候選、當前卡片的 CTR 相當重要。有的同學可能會認為重排可以搞定這個事情，但我們始終認為，上下文信息屬於鏈路信息，我們認為每個模塊都需要去學習上下文信息，當然每個模塊可能學習的重點不一樣，而且實際上都能帶來一定的效果。第二個視角，我們從算力的角度，因為預估側的算力比較高，其影響的範圍會更大，實際上也能夠帶來更多的效果空間。&lt;/p&gt; 
&lt;p&gt;再看左下角的圖，從鏈路視角來説，對於預估模塊、廣告模塊模塊存在兩個無法獲取。第一個是廣告的後鏈路信息無法獲取，這裏包括了展示的配送信息、配送費、準確的優惠信息等；第二個是自然的信息無法獲取，這裏包括了自然的上下文。因此，還原從另一個角度説是，如何打破鏈路的束縛來使用穿越信息。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/b5aded1dcba3fd6748ce11b88a4eb1551740674.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這就是全還原建模所面臨的一些問題，實際上可以概括成兩個方向，一個是卡片還原，一個是頁面還原。在早期我們做了個空間判斷，我們把卡片、頁面信息完完整整的放進來，觀測 AUC 的提升來判斷整體空間，結果表明頁面信息有百分點級別、卡片信息有大幾個千分點。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;整體解決思路&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這裏把頁面還原和卡片還原展開。首先，從思路上講，我們主要從算法、工程兩個維度去解。在算法層面，第一個就是去猜頁面，最大化利用前鏈路信息猜頁面；第二個是猜元素，創意鏈路前置，創意優選結果輸出給精排。在工程層面，第一個是存頁面，引入近線系統，基於旁路系統的 Side Model 端到端預測最終展現信息，最大化利用後鏈路視野。第二個是存元素，引入近線系統+高維 KV，提升元素獲取覆蓋率至+100%、準確率 70%+。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/5940163c24e14e9f9dd99a3d84903eb11537133.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;前文也提到，上下文信息對最終的點擊有較大影響，因 CTR 模塊無法拿到上下文過去的解決方式是引入重排對小範圍隊列進行建模，這樣降低了上下文鏈路信息的影響。接下來，我們面臨的挑戰就是：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;上下文包括了集合和序兩個部分，如何構建上下文預測模塊?&lt;/li&gt; 
 &lt;li&gt;Simulated 上下文與候選如何進行交互?&lt;/li&gt; 
 &lt;li&gt;如何進一步通過蒸餾提升 Simulated Page 的準確性?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/11a1ad473caa6a2ffeb7d1f9438243e9745126.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;我們的解法是：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Context Simulation Center（CSC）&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;曝光網絡學習集合：通過曝光概率預估網絡來建模哪些-item 最可能曝光給用户，輸入為千級別自然隊列。&lt;/li&gt; 
 &lt;li&gt;排序網絡學習序：對曝光網絡輸出的結果進行排序，目標位最終展現的位置，通過 NDCG 來衡量。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Context Modeling Transformer （CMT）&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Context Encoder/Decoder：使用 Transformer 對帶位置編碼的上下文進行編碼。引入候選通過 MLP 網絡與 Encoder 輸出作為 Decoder 輸入，得到最終的 Context 表達。&lt;/li&gt; 
 &lt;li&gt;真實曝光蒸餾：引入 Simulated Page 是一個強信號，但是依然存在與真實曝光 page 的差距。因此構建 Simauted Page 作為輸入的 Student 網絡來蒸餾學習基於 Real Page 的 Teacher 網絡進一步去除噪音。（注：直接蒸餾無信號無法學習）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我們引入了緩存的和預測配置策略，加上真實的蒸餾，就幫助我們進一步地去提升效果，這屬於頁面還原的部分。&lt;/p&gt; 
&lt;p&gt;卡片還原這部分整體的思路分為三部分：第一個部分，能夠拿到卡片信息；第二部分，組成用户看到的卡片；第三部分，通過卡片來做歷史興趣匹配。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;卡片方案思考&lt;/strong&gt;：由於搜推廣系統的模塊串並行原因，有一部分數據我們是無法獲取的，前期我們一直在思考有沒有&quot;終極方案&quot;。早期我們就是純平鋪（純 ID）的方式來還原用户所看到的信息，但是有沒有更好的方式呢？比如直接將用户看到的圖片引入進來。但是，當前的技術能力不太支持將整個圖片完成的記錄下來、更不支持圖片信息完整準確的建模表達。最終，我們選擇了通過矩陣的方式來組成卡片，模擬用户看到的信息。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;矩陣化表達、Patch 級別建模&lt;/strong&gt;：首先，我們使用了矩陣化的表達來組成卡片的形狀，並構建和用户所見所得的上下元素關係。表示層面，不同的矩陣構建方式對結果會有一定的影響，具體不在這裏展開。第二個方面，我們也借鑑了圖像領域的一些思想，引入了 Patch 的概念，來幫助我們將圖片化作 Token 進一步學好不同展示元素之間的相互影響。在實踐的過程中，我們也需要調整一些參數，比如 Patch 到底是 2*2 的，還是 3*3。包括 stride，我們發現 stride 設置的越短，確實能夠帶來更好的效果。我們在整個 patch 級別匹配的過程中，也做了很多次的實驗，初步的結論是，單位置 Patch 和全局 Patch 的匹配，最終的效果比較好。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;關注順序建模&lt;/strong&gt;：順序建模是在用户關注哪些元素基礎上，進一步模擬用户瀏覽順序。按道理説，我們沒有眼部監測實際上是拿不到這部分數據的。這裏，我們做了一個小 Trick，將這 4 個 Patch 的矩陣進行了全排列，將用户的所有 Patch 級別的路徑都列了出來，讓模型自己來學習不同排列組合的隱式分數。激活分數最高的的 Patch 順序組合，通過 Encoder 聚合成關注順序表達來進一步和 Target 的 POI 的關注順序組合來進行匹配。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/0165258f2d9c9d7fcf6783a0b59874ca624710.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;2.3 LLM in CTR&lt;/h3&gt; 
&lt;p&gt;最後分享一下大模型在 CTR 的應用。我們做了一些初步的調研，發現目前很多技術團隊整體的思路是差不多的。下圖展示了 CTR 任務跟 NLP 任務的對比，可以看到從輸入到模型架構，再到學習模式和任務模式，都有較大區別。NLP 任務是自然語言做 Token + 大規模 Transformer + 理解及推理能力，CTR 任務是 ID 輸入+ 人工設計網絡 + 強記憶能力。同時對於 CTR，大部分業務只用了自身業務數據，是缺乏外部知識和全任務的理解能力的。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/4e5bcd7f81b409446270f64beaa307d1590034.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;所以基於以上幾個方面，我們做了三方面的工作：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;第一層，知識注入，就是要把外部的、真實的、當前 CTR 缺乏哪些知識放到模型中，這部分工作很多公司都在做，這塊主要要求的是 Prompt 工程能力。因為生成的結果，不一定是 CTR 需要的，我們就需要做好適配工作。根據 CTR 的特點，就可以將高頻詞和低頻詞區分出來，同時也需要做一些 Prompt 融合相關的後處理工作來提升和 CTR 任務的匹配度。&lt;/li&gt; 
 &lt;li&gt;第二層，思維注入，就是要把大模型的結構能力給引入進來，或者説將大模型判斷過程的引入進來。&lt;/li&gt; 
 &lt;li&gt;第三層，範式迭代，最近，Meta 似乎給生成式推薦指出了一條路。我們去年在探索這個方向的時候，主要的思路是把輸入的形式進行變化，換成了更小規模的 Token，大概可能只有幾萬的規模，來解決大規模 Softmax 問題。然後通過 Transform 疊加的方式，結合聚合語義，從模型融合到端到端自迴歸，讓數據能夠跑通。我們發現如果噪音特別高的輸入，Transformer 並不能處理得很好，但一個相對來講語義比較明確的信息，Transformer 對上下文理解的性能還不錯，因此我們先做了一層語義聚合來降低輸入 Token 序列的噪音。總的來説，我們通過小規模 Token，加上語義聚合，結合 Transformer 的架構，給業務效果帶來了一波提升。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/196efba3e3c47c7f83857edc59edb55a639344.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;總結一下，本質上是要把 CTR 不具備的能力通過大模型進行補齊。我們將 CTR 目前不具備的能力，劃分成了知識能力、泛化能力和推理能力。對應的，我們也列舉了一些我們嘗試的結果如下圖所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/590129c0a111e27dd71bc8f9b39eea10338022.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;03 總結和展望&lt;/h2&gt; 
&lt;p&gt;總的來説，預估的本質上還是要發掘用户的真實需求，我們一方面參考業界，另一方面深入業務，去挖掘更多的用户行為模式，也在探索有沒有更自動化的方式將各種用户問題解決掉。還原建模是算法和工程的聯合聚力帶來的提升，歸根結底算法工程的相互結合才能帶來更大的改變。&lt;/p&gt; 
&lt;p&gt;大模型與推薦的結合越來越得到大家的關注，但是客觀地講，這依然是屬於一個偏長期的工作，這個時候還是要找到一條可行的路徑，不斷去優化和提升，如果完全指望用一個&quot;大招&quot;去解決掉所有的問題，會非常困難。端到端推薦大模型是大家共同的期望，但是在這個基礎上，我們認為輸入規模是效果的保障，算力是以上兩者的保障。只有軟件和硬件的強強聯合，才能贏得未來。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;|&lt;/strong&gt; 在美團公眾號菜單欄對話框回覆【2023 年貨】、【2022 年貨】、【2021 年貨】、【2020 年貨】、【2019 年貨】、【2018 年貨】、【2017 年貨】等關鍵詞，可查看美團技術團隊歷年技術文章合集。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/b0364d579285ab22aa6235bd100d7c22178175.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;| 本文系美團技術團隊出品，著作權歸屬美團。歡迎出於分享和交流等非商業目的轉載或使用本文內容，敬請註明&quot;內容轉載自美團技術團隊&quot;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=mailto%3A%E3%80%82%E6%9C%AC%E6%96%87%E6%9C%AA%E7%BB%8F%E8%AE%B8%E5%8F%AF%EF%BC%8C%E4%B8%8D%E5%BE%97%E8%BF%9B%E8%A1%8C%E5%95%86%E4%B8%9A%E6%80%A7%E8%BD%AC%E8%BD%BD%E6%88%96%E8%80%85%E4%BD%BF%E7%94%A8%E3%80%82%E4%BB%BB%E4%BD%95%E5%95%86%E7%94%A8%E8%A1%8C%E4%B8%BA%EF%BC%8C%E8%AF%B7%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6%E8%87%B3tech%40meituan.com%E7%94%B3%E8%AF%B7%E6%8E%88%E6%9D%83%E3%80%82&quot; target=&quot;_blank&quot;&gt;。本文未經許可，不得進行商業性轉載或者使用。任何商用行為，請發送郵件至 tech@meituan.com 申請授權。&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/meituantech/blog/15344283</link>
            <guid isPermaLink="false">https://my.oschina.net/meituantech/blog/15344283</guid>
            <pubDate>Thu, 29 Aug 2024 08:34:33 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>OpenAI 洽談新一輪融資，估值超 1000 億美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;《&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wsj.com%2Ftech%2Fai%2Fopenai-in-talks-for-funding-round-valuing-it-above-100-billion-4f0550c5%3Fmod%3Dlatest_headlines&quot; target=&quot;_blank&quot;&gt;華爾街日報&lt;/a&gt;》消息稱，OpenAI 正在洽談籌集大量資金，由之前的支持者 Thrive Capital 領投，估值超過 1000 億美元。這大大高於 OpenAI 之前 860 億美元的估值，是迄今為止所有 AI 初創公司中估值最高的。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;289&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d3ddca63e752441f06fd95a3ffa559b602a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;知情人士透露，Thrive 將投入約 10 億美元，微軟也有望參與其中。這筆融資將成為 OpenAI 自 2023 年 1 月微軟投資近 100 億美元以來最大的外部資本注入。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年年初，該公司的年收入已超過 34 億美元。然而，《The Information》預計 OpenAI 截至年底將虧損近 50 億美元&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fwhy-openai-could-lose-5-billion-this-year&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;，&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前該公司已經在 AI 培訓和人員配備上耗費了 85 億美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenAI、微軟和 Thrive Capital 尚未回應置評請求。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309417/openai-new-funding-round-100b-valuation</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309417/openai-new-funding-round-100b-valuation</guid>
            <pubDate>Thu, 29 Aug 2024 08:00:33 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>認識 deepin en Español：deepin 社區全球大家庭重要成員</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-en-espanol-introduction%2F&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;查看原文&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;我們始終相信，deepin 操作系統的優勢不僅在於其優秀的功能，更在於多個充滿活力的 deepin 海外社區。其中，deepin 西班牙語社區 deepin en Español 佔有重要地位。多年來，西班牙語社區在將 deepin 操作系統帶給全球西班牙語用户方面發揮了不可或缺的作用，在該社區建設過程中，充分體現了協作、創新和包容的精神。今天，我們想將 deepin en Español 介紹給大家，並對他們持續的奉獻表示誠摯的感謝。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;strong&gt;deepin&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&amp;nbsp;en Español 社區的起源和成長&lt;/strong&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin en Español 社區成立於 2015 年初，最初是一個小型的開源項目。由於成員們的熱情和努力，它很快成長為西班牙語 deepin 用户的官方社區。該社區的旅程始於 Google+羣組，在那裏它迅速獲得了關注者，併成為西班牙和拉丁美洲 deepin 用户的重要平台。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;隨着社區的發展壯大，其影響力也不斷擴大。到 2016 年，deepin en Español 已成為 deepin 社區全球最重要的分支社區之一，為 deepin 的開發做出了貢獻，並確保西班牙語使用者能夠輕鬆使用 deepin 操作系統。社區成員通過加入 deepin 內部測試小組，並在其中提供重要的 issues 和寶貴的建議，幫助 deepin 操作系統在開發過程中更好地滿足國際用户的需求。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;這一階段最顯著的成就之一是西班牙語社區參與將 deepin 操作系統翻譯成西班牙語。這項努力最終促成了 deepin 西班牙語官方網站（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxn--deepinenespaol-1nb.org%2F&quot; target=&quot;_blank&quot;&gt;https://xn--deepinenespaol-1nb.org/&lt;/a&gt;）的建立，使數百萬西班牙語地區的用户能夠更輕鬆地使用 deepin。此外，deepines 存儲庫（後來演變為 deepines 商店）的創建標誌着社區發展歷程中的另一個重要里程碑。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;402&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/Cloud-Illuminated-By-Neon-Light_%E5%AE%98%E7%BD%91.jpg&quot; width=&quot;944&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;strong&gt;deepin&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;&amp;nbsp;en Español&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;strong&gt;主要項目&lt;/strong&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;1、deepines 商店：增強西班牙語用户的軟件下載體驗&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepines 商店是 deepin en Español 社區最重要的貢獻之一。deepines 應用商店在 deepin 官方應用商店之外，給西班牙語用户們提供了更多他們常用應用的下載機會。deepines 商店中的每個軟件包都由社區開發團隊管理，經過嚴格測試以確保與 deepin 操作系統兼容。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;自推出以來，deepines 商店已成為西班牙語社區用户的重要資源，為用户提供了 280 多個軟件包，包括流行和小眾應用程序。商店的界面易於使用，其內容不斷更新以滿足西班牙語社區用户們不斷變化的需求，並提供豐富的軟件體驗。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;369&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/%E5%9B%BE%E7%89%873.png&quot; width=&quot;1108&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;2、西班牙語 deepin 鏡像和鏡像站：提升系統使用體驗和下載速度&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;意識到西班牙、拉丁美洲和歐洲其他地區的用户對可訪問性和更快的下載速度的需求，deepin en Español 社區建立了自己的鏡像站和倉庫。該鏡像每天與中國官方 deepin 服務器同步兩次，確保用户能夠訪問最新的內容。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;西班牙語 deepin 鏡像已被證明是社區的重要資源，其性能可與全球最高效的服務器相媲美。它不僅可以作為官方存儲庫的可靠備份，還為用户了提供詳細的説明，以解決他們在安裝或更新過程中可能遇到的任何問題。這一舉措反映了社區致力於改善整體用户體驗並確保 deepin 可供所有人使用的承諾。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;791&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/%E5%9B%BE%E7%89%874.png&quot; width=&quot;1159&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;3、西班牙語翻譯團隊：彌合語言差距&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin 之所以被西班牙語用户廣泛接受，deepin&amp;nbsp;en Español 中的西班牙語翻譯團隊發揮了重要作用。從翻譯用户界面和桌面環境到確保所有 deepin 官方出版物都提供西班牙語版本，該團隊讓西班牙語用户真正做到了無語言交流障礙地使用 deepin。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;他們的工作範圍不僅限於操作系統本身，還包括 deepin 官方網站和相關文檔。通過 Transifex 等平台積極參與翻譯過程，團隊確保 deepin 操作系統的每項更新和新功能都能被及時翻譯，讓用户能夠不受語言障礙地體驗最新的更新。西班牙語翻譯團隊的持續貢獻促進了西班牙語地區 deepin 用户羣的增長。此外，團隊還建立了一個&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxn--deepinenespaol-1nb.org%2Fwiki%2Fglosario%2Ftraducciones-al-espanol%2F&quot; target=&quot;_blank&quot;&gt;詞彙表&lt;/a&gt;，可以更好地協調短語。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;4、deepinLatin Code 開發團隊&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;西班牙語社區的開發團隊 deepin&amp;nbsp;Latin Code 一直處於 deepin&amp;nbsp;en Español 社區創新的前沿。這些團隊為那些專門由 deepin 發行版量身定製的原生軟件的開發做出了貢獻。團隊的項目範圍從創建增強操作系統功能的自定義應用程序到開發社區驅動的計劃，以滿足西班牙語用户的獨特需求。deepin&amp;nbsp;Latin Code 的貢獻不僅豐富了 deepin 生態系統，還為用户提供了滿足其特定需求的工具和功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1015&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/%E5%9B%BE%E7%89%875.png&quot; width=&quot;1157&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;5、其他項目&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin&amp;nbsp;en Español 的貢獻遠不止於以上項目。deepin&amp;nbsp;en Español 團隊創建了每月更新的播客，他們會在播客上討論各種各樣有意思的技術內容。另外，社區官網上包含一個新聞和技術博客，社區官方定期在上面分享最新的新聞和科學技術，幫助用户瞭解更多關於推動現代世界發展的科技趨勢。為了幫助用户使用 deepin 操作系統，社區還建立了西班牙語 deepin Wiki，其中提供了 800 多篇技術指導文章。除了各種的項目之外，deepin&amp;nbsp;en Español 還成立了西班牙語 deepin 論壇，官方成員在論壇中貢獻有關 GNU/Linux 的主題併發布新聞，用户可以參與其中並討論有關 deepin 的問題。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0px; margin-right:0px; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1032&quot; src=&quot;https://www.deepin.org/wp-content/uploads/2024/08/%E5%9B%BE%E7%89%876.png&quot; width=&quot;1184&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;&lt;strong&gt;結語&lt;/strong&gt;&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;回顧 deepin en Español 的發展歷程，我們被 deepin 西班牙語社區的不懈貢獻打動。從 Google+ 的早期發展到成為 deepin 生態系統的關鍵參與者，這個社區的成員始終表現出他們的熱情和奉獻精神。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;deepin en Español 的成就證明瞭協作的力量以及一個專注的社區對 deepin 操作系統的全球影響。在此，我們向 deepin en Español 社區的所有成員致以衷心的感謝，特別是那些為推進 deepin 項目貢獻時間、專業知識和支持的人們。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;隨着 deepin 23 的發佈，我們很高興能繼續與 deepin en Español 社區合作。我們將共同在他們建立的堅實基礎上再接再厲，進一步提升全球用户的 deepin 體驗，開啓旅程的下一篇章。&lt;/p&gt; 
&lt;h1&gt;&lt;strong&gt;相關閲讀：&lt;/strong&gt;&lt;/h1&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（1）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdownload%2F&quot; target=&quot;_blank&quot;&gt;deepin 23 鏡像體驗&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（2）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdistrowatch.com%2Ftable.php%3Fdistribution%3Ddeepin&quot; target=&quot;_blank&quot;&gt;&amp;nbsp;deepin 歷史鏡像獲取（含 deepin V15）&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（3）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxn--deepinenespaol-1nb.org%2F&quot; target=&quot;_blank&quot;&gt;deepin en Español &amp;nbsp;&lt;/a&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;（4）&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.me%2Fdeepinenespanol&quot; target=&quot;_blank&quot;&gt;deepin en Español &amp;nbsp; TG 羣組&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309407</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309407</guid>
            <pubDate>Thu, 29 Aug 2024 07:19:06 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>微軟推出「Cascadia Next」開源字體</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;微軟宣佈推出&amp;nbsp;Cascadia Code 開源字體的下一代演變 ——&amp;nbsp;Cascadia Next，其字體設計師已經為 Cascadia Next 設計了簡體中文、繁體中文和日文三種字體。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;簡體中文：ASCII、GB2312 擴展&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;繁體中文：ASCII、BIG5+&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;日語：ASCII、Joyo、JIS1、JIS2&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次預發佈的 Cascadia Next 版本尚未包含阿拉伯語、希伯來語或 NerdFonts 支持。更多詳情可查看&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fcascadia-code%2Freleases%2Ftag%2Fcascadia-next&quot; target=&quot;_blank&quot;&gt;此處&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;203&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-271af2f7f021169817ec12bdae0a28a5076.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Cascadia Code 是微軟在 2019 年開源的一套專為終端和代碼編輯器設計的等寬字體，與 Windows Terminal 捆綁開發，現在也是 Visual Studio 中的默認字體。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;相關閲讀：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/294449/cascadia-code-2404-23&quot; target=&quot;news&quot;&gt;微軟對開源字體 Cascadia Code 進行重大更新&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309405/microsoft-cascadia-next</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309405/microsoft-cascadia-next</guid>
            <pubDate>Thu, 29 Aug 2024 06:51:06 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Wireshark 4.4 發佈，最強開源網絡數據包分析器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Wireshark 4.4 已正式發佈。&lt;/p&gt; 
&lt;p&gt;此版本支持自動切換配置文件，這樣可以將顯示過濾器與一個配置文件關聯，當打開匹配過濾器的捕獲文件時，將自動切換到該配置文件。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ce77c52a3301e6e47cf0bb9e7f25d863a28.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Wireshark 4.4 也改進了其&amp;nbsp;I/O 圖表、Flow 圖表 / VoIP 調用、TCP Stream 圖表和其他 UI 對話框。此外還支持 Lua 5.3/5.4、改進的顯示過濾器、支持與 zlib-ng 構建，幷包含許多其他改進。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.wireshark.org%2Farchives%2Fwireshark-announce%2F202408%2Fmsg00001.html&quot; target=&quot;_blank&quot;&gt;詳情查看 release notes&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;下載地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wireshark.org%2Fdownload.html&quot; target=&quot;_blank&quot;&gt;https://www.wireshark.org/download.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關閲讀：&lt;a href=&quot;https://www.oschina.net/news/249672/wireshark-25yr&quot; target=&quot;_blank&quot;&gt;Wireshark 誕生 25 週年，最強開源網絡數據包分析器&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309386/wireshark-4-4-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309386/wireshark-4-4-released</guid>
            <pubDate>Thu, 29 Aug 2024 04:17:33 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>我國網民規模近 11 億人，互聯網普及率達 78.0%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;中國互聯網絡信息中心（CNNIC）發佈第 54 次《中國互聯網絡發展狀況統計報告》。截至 2024 年 6 月，我國網民規模近 11 億人（10.9967 億人），較 2023 年 12 月增長 742 萬人，互聯網普及率達 78.0%——&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;我國新增網民 742 萬人，以 10-19 歲青少年和「銀髮族」為主&lt;/strong&gt;。其中，青少年佔新增網民的 49.0%，50—59 歲、60 歲及以上羣體分別佔新增網民的 15.2% 和 20.8%。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在新增網民中，&lt;strong&gt;娛樂社交需求最能激發網民上網&lt;/strong&gt;，在該羣體首次使用的互聯網應用中，短視頻應用佔比達 37.3%。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;上半年以舊換新消費、在線服務消費成為消費亮點。數據顯示，&lt;strong&gt;最近半年參與「以舊換新」消費活動的網民中，68.8% 的用户選擇線上參與&lt;/strong&gt;。其中手機數碼、洗衣機等傳統大家電「以舊換新」消費比例最高，分別佔相關消費用户的 28.8% 和 23.7%。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;隨着在線服務場景的日益豐富，越來越多的用户通過在線方式享受生活服務便利。&lt;strong&gt;截至 6 月，在網上購買過外賣、到店餐飲、電影及休閒娛樂等在線服務的用户，分別佔網民的 50.3%、20.7% 和 17.3%&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;老年羣體移動支付服務不斷完善。&lt;strong&gt;截至 6 月，我國 60 歲以上網民網絡支付的使用率已達 75.4%&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;針對外籍來華人員的「外包內用」和「外卡內綁」等移動支付創新服務，持續優化外籍來華人員支付便利。&lt;strong&gt;上半年，超 500 萬入境人員使用移動支付，同比增長 4 倍；交易 9000 多萬筆，金額 140 多億元，均同比增長七倍&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;隨着微短劇行業引導政策陸續出台，微短劇創作生產走向規範化。&lt;strong&gt;截至 6 月，微短劇用户佔網民整體的 52.4%&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;短視頻平台用户黏性不斷提升，短視頻電商業務穩步發展，&lt;strong&gt;截至 6 月，短視頻用户佔網民整體的 95.5%&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;長視頻行業提質趨勢延續，&lt;strong&gt;截至 6 月，長視頻用户佔網民整體的 65.2%&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309358</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309358</guid>
            <pubDate>Thu, 29 Aug 2024 02:11:22 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>萬雍科技加入 openKylin，共推社區開源生態發展</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;近日，上海萬雍科技股份有限公司（簡稱「萬雍科技」）簽署了 openKylin 社區 CLA（Contributor License Agreement 貢獻者許可協議），正式加入 openKylin 開源社區。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1079&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e84b5d6d9ecbd6f5bb2b1cc1464b2ae785f.png&quot; width=&quot;829&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;萬雍科技成立於 2005 年，是上海市松江區&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;國投集團&lt;/span&gt;&lt;span&gt;&lt;span&gt;參投企業，多年來一直專注於網絡安全運營服務和&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;數字化產品&lt;/span&gt;&lt;span&gt;研發，旗下人臉識別數據安全保護系統等產品完成了驗證和適配，並在安全合規、安全運營、安全開發、數據安全等領域具有豐富的經驗。同時，通過以專家工作站為主導的核心技術團隊，在數字化及網絡安全領域的研發沉澱，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;萬雍科技&lt;/span&gt;&lt;/span&gt;已形成具有多項自主專利技術的人工智能安全產品和安全智能感知的數字化產品。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;410&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-141ea15270d70314b2b0754bbceafefaf5e.png&quot; width=&quot;940&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;萬雍科技秉持與 openKylin 社區相契合的開源、開放及協作理念，全力推動開源技術的蓬勃發展。加入 openKylin 社區後，萬雍科技將與優秀的開發者、企業和科研機構一起，共同研發和創新 Linux 開源技術，共享資源和成果，推動操作系統生態的完善，實現技術和產品的雙重進步，同時也為中國信息技術產業的發展做出貢獻。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309348</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309348</guid>
            <pubDate>Thu, 29 Aug 2024 01:28:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源日報 | 微軟「易主」Mono 給 Wine；IBM 中國研發部裁員內幕；地鐵數據庫；70 本經典程序員書單</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.28&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/news/309189/ms-gives-mono-to-wine&quot;&gt;&lt;span&gt;微軟將開源 .NET 框架 Mono 捐贈給 Wine&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;根據 Mono 官網的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mono-project.com%2Fnews%2F&quot; target=&quot;_blank&quot;&gt;最新公告&lt;/a&gt;，該項目已被移交給&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.winehq.org%2F&quot; target=&quot;_blank&quot;&gt;WineHQ 組織&lt;/a&gt;，後者是負責管理開源項目 Wine 的團隊。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;公告寫道，WineHQ 組織將在&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.winehq.org%2Fwine-mono%2Fmono&quot; target=&quot;_blank&quot;&gt;wine-mono / Mono&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;&amp;nbsp;倉庫中接管 Mono 項目上游的管理工作。現有&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmono%2Fmono&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;mono/mono&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;和其他 repos 中的源代碼仍可繼續使用，但 repos 可能會被歸檔。其中二進制文件的可用期長達四年。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;Mono 最初是 Xamarin 公司主導的自由開源項目，由 Xamarin 聯合創始人 Miguel de Icaza 發起。其作為跨平台的 .NET 框架開源實現，讓開發者能夠在非 Windows 平台上運行 .NET 應用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;微軟在 2016 年收購 Xamarin 後擁有了 Mono 項目，併成為 Mono 的管理者。 但隨着 .NET 框架支持 Linux 等非 Windows 平台，Mono 項目對微軟已經沒有多少意義了。 Mono 上一次大版本更新是在 2019 年 7 月，之後都是補丁版本之類的小更新，上一次發佈補丁版本是在 2024 年 2 月。&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FayU9J7vSvPooftUl8x1zew&quot; target=&quot;_blank&quot;&gt;CogVideoX：5B 開源，2B 轉為 Apache 協議&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p&gt;智譜 AI 官方宣佈，已開源 CogVideoX-5B 視頻生成模型，相比此前開源的 CogVideoX-2B，官方稱其視頻生成質量更高，視覺效果更好。&lt;/p&gt; 
   &lt;p&gt;官方表示大幅度優化了模型的推理性能，推理門檻大幅降低，可以在 GTX 1080Ti 等早期顯卡運行 CogVideoX-2B ，在 RTX 3060 等桌面端「甜品卡」運行 CogVideoX-5B 模型。&lt;/p&gt; 
   &lt;p&gt;CogVideoX 是一個大規模 DiT（diffusion transformer）模型，用於文本生成視頻任務。&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1443568.htm&quot; target=&quot;_blank&quot;&gt;IBM 中國研發部裁員內幕：要求員工去印度，否則離職&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;近日有不少網友發帖稱，IBM 突然關閉了中國研發部門，涉及員工數量超過 1000 人。隨後，IBM 中國回應稱：IBM 會根據需要調整運營，為客户提供最佳服務，這些變化不會影響我們為客户提供支持的能力。不過現在有相關員工曝光了本次裁員的內幕，真的是讓人唏噓。&lt;/p&gt; 
&lt;p&gt;相關網友直言：「IBM 底關閉中國研發中心， 人員要不辭退，要不 relocate 到印度班加羅爾 (就是變相逼你離職，夠狠)，之前微軟也把在華研發部門和人員遷往美國，一個時代結束了。」&lt;/p&gt; 
&lt;p&gt;當然了，有這樣的決定也不奇怪了，IBM 的現任 CEO Arvind Krishna 是一位印度人，他在 2020 年上任後不久便在全球範圍內進行了多輪裁員。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-20cd3fb3f1bcdcee148b3e65bd0d743945f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6120606636%2FOtM7WrzBi&quot; target=&quot;_blank&quot;&gt;理工科的大一新生，不妨先學一下《託馬斯微積分》&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    理工科的大一新生，如果英語基礎還可以，不妨先學一下《託馬斯微積分》。這本教材的內容結構十分科學合理，適合自學。國內有高教版的影印本，可以考慮嘗試啃下來。第 13 版的 PDF 文件鏈接在這裏：http://t.cn/A6R5ZlR4（GitHub）
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;p style=&quot;text-align:right&quot;&gt;&lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;夏星繁&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1706699904%2FOuaNGlyNo%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;知名黑客 George Hotz 成立 AI 硬件公司 tiny corp&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;知名黑客 George Hotz 成立的 AI 硬件公司 tiny corp，主營業務：攢 AI 計算機。&lt;/p&gt; 
  &lt;p&gt;紅色版：6 個 7900XTX；32 核 AMD EPYC；售價 15000 美元。&lt;/p&gt; 
  &lt;p&gt;綠色版：6 個 4090 ；32 核 AMD EPYC；售價 25000 美元。&lt;/p&gt; 
  &lt;p&gt;目前在 San Diego 提供自提服務，並向美國大陸各州發貨。&lt;/p&gt; 
  &lt;p&gt;George Hotz 説：它非常強大（約 2 倍 H100），可聯網，並且安靜到可以在辦公室中運行。我希望能消除「數據中心」機器學習，硬件大約 3 倍的溢價。&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;i 陸三金&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5198011111%2FOud6awa3Z&quot; target=&quot;_blank&quot;&gt;地鐵數據庫&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;可以查看我國大部分城市地鐵的詳細數據，包括開通地鐵數、開通總里程、開通地鐵線路、在建地鐵線路、最新客流彙總和運營站點數量。&lt;/p&gt; 
     &lt;p&gt;此外，還可以在頁面右上角的城市地鐵客流量查詢功能中，選擇特定的城市來查看詳細數據。數據也都是通過可視化圖形來展現出來的，非常直觀。&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;班叔&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5703921756%2FOu3X84DbV%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;Meta 祭出三篇最詳盡 Llama 微調指南！千字長文，0 基礎小白必備&lt;/a&gt;&lt;/h4&gt; 
  &lt;p&gt;開源，就要開的徹徹底底。&lt;br&gt; 這不，Meta 一連放出三篇技術文章，從大模型適配方法出發，介紹瞭如何使用特定領域數據微調 LLM，如何確定微調適配自己的用例，以及如何管理良好訓練數據集的經驗法則。&lt;br&gt; 馬住 http://t.cn/A6RVimjf&lt;/p&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;新智元&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2194035935%2FOulvltPJp%3Fpagetype%3Dprofilefeed&quot; target=&quot;_blank&quot;&gt;70 本經典程序員書單&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;div&gt;
       70 本經典程序員書單。如果書籍是開源或開放獲取的，同時列出了書籍的下載鏈接，大概 10 來本。
       &lt;br&gt; http://t.cn/A6RMlImm
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;蟻工廠&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwap.stockstar.com%2Fdetail%2FIG2024082800030260&quot; target=&quot;_blank&quot;&gt;阿里巴巴雲計算入股 AI 平台 Dify&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p style=&quot;color:#262626; margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;天眼查 App 顯示，近日，蘇州語靈人工智能科技有限公司發生工商變更，新增浙江阿里巴巴雲計算有限公司、蘇州元之芯貳期創業投資合夥企業（有限合夥）為股東，同時，公司註冊資本由約 115.79 萬人民幣增至約 143.63 萬人民幣。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;天眼查&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.cj.sina.com.cn%2Farticles%2Fview%2F6192937794%2F17120bb4202002ayf2&quot; target=&quot;_blank&quot;&gt;專訪朱嘯虎：AI 應用裏才能找到新的「滴滴、小紅書」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在大模型公司融資最狂熱的時候，作為金沙江創投主管合夥人，朱嘯虎最早用行動和言論給它降温。他認為五年後不會有獨立的大模型公司，他也只投 AI 應用類的項目。這個判斷至今沒有變過，甚至更自洽了。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;界面&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcaifuhao.eastmoney.com%2Fnews%2F20240827175137529218870&quot; target=&quot;_blank&quot;&gt;從短視頻到 AIGC，快手字節重開一局&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通用大模型方面，快手有快意，字節有豆包；AI 圖片創作快手有可圖，字節有星繪；視頻生成大模型，快手有可靈，字節用即夢相對，此外在 AI 音樂、剪輯工具、社交產品、特效製作等多個領域，快手和字節都有相應的 AIGC 產品形成競對。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;洞見新研社&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaijiahao.baidu.com%2Fs%3Fid%3D1808532960948958497&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;英媒：美科技巨頭何以變得更大更強？&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;無疑，科技巨頭的圍牆總有一天會被打破——要麼是被強硬的政府，要麼是被新形式的競爭。本月，在美國聯邦法院裁定谷歌非法壟斷後，司法部可能會對谷歌進行拆分，這表明反托拉斯機構已經出來尋找獵物了。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;參考消息&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.myzaker.com%2Farticle%2F66cdde69b15ec075255a45e9&quot; target=&quot;_blank&quot;&gt;IBM，一次匆忙的「離開」&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#3b3b3b&quot;&gt;近年來 IBM 的業務的確不如往昔紅火，部分員工也有山雨欲來之感。在市場人士看來，陪伴中國走過 30 年的 IBM 如此景況多少令人惋惜，但這也是 IT 服務、大數據行業市場競爭的結果，無論是走是留，市場的打法與邏輯早已悄然改變。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;北京商報&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn816815774%3FserialId%3D6edf354c6153c70579bac88aeae40c25&quot; target=&quot;_blank&quot;&gt;LLM 取代的第一個編程語言竟是 SQL？網友吵翻天&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;人工智能及機器學習研究商 Abacus.AI 首席執行官 Bindu Reddy 表示：「LLM 用英語取代的第一個編程語言是 SQL，SQL 生成準確率超過 95%，超過了人類 SQL 程序員（準確率為 92%）的平均水平，大多數數據庫產品已經提供了一個 chatbox 接口來查詢數據」。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;機器之心&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://gitee.com/WeBank/Exchangis&quot; target=&quot;_blank&quot;&gt;WeBank/Exchangis&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img height=&quot;251&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-57a3bf494289be16717ea3c3f8b6d43df60.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://gitee.com/WeBank/Exchangis&quot;&gt;https://gitee.com/WeBank/Exchangis&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Exchangis 是微眾銀行開源的輕量級數據交換平台，用於數據在不同存儲介質中快速傳遞，並解決數據交換過程中面臨的複雜性、兼容性等問題。設計上採取微服務架構形態，上下層服務松耦合，易於進行個性化的，高拓展性的迭代開發。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/4939618/blog/15525788&quot; target=&quot;_blank&quot;&gt;百度搜索的 RLHF 性能優化實踐&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;RLHF 目前已經發展出多種算法，本文將談一談 RLHF 的性能優化問題，我們以 PPO 為例來討論 RLHF 的性能優化。PPO 優化過程同預訓練有顯著不同，且較為複雜，因此比較適合用來討論 RLHF 的性能優化。最近學術界也開始湧現出一批使用監督微調的對齊方式，從而簡化對齊過程，如 DPO 算法等，但是其優化手段可被囊括在 PPO 優化手段之內。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;圖片&quot; height=&quot;284&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a365738c77e993ce2c584310f7e81e86bc0.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FFIDIeMi9pxfGd0r7aJ34xg&quot; target=&quot;_blank&quot;&gt;「開源版 PS」GIMP 公佈 3.0 最新進展，説了 N 久的「今年發佈」真的來了？&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：看年齡段，基本肯定都是真愛了，感覺在勉強用愛發電，所以我們不必強求人家，哈哈&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：然鵝，gtk4 已發佈近 4 年&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：2 到 3 的改動很大，移植難度高，4 跟 3 的區別不大，估計能很快移植&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：基本都是大佬。&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：開源世界的常見情況是吧，大佬和小白中的小白，然後普通的事情沒有人做！😅因為這些事情小白不會做然後大佬沒有興趣做。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：很期待 GIMP 將來能移植到 gtk4&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：這個消息要重點期待，製圖屆屬於重磅。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：熱愛讓生活更有樂趣和更沉靜，程序員的人生因計算機世界的無限廣闊而擁有一顆不死之心！看到國外這些髮量被某些人嘲笑的程序員的照片，知道了什麼才叫真正的程序員，心裏油然而生敬意！計算機的 01 不輸中國文化裏的道生萬物。中國有做類 PS 的程序員嗎？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：裏面的 AI 功能做好了嗎？之前裝了好幾次插件都用不起了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：個人覺得 krita 更好用呢…也是 gpl 協議。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：2025 還是有希望的&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FcBPunnfsZe9ZLlfs9vSliQ&quot; target=&quot;_blank&quot;&gt;Zen 瀏覽器&lt;span&gt;——&lt;/span&gt;號稱是「開源版 Arc」、輕如鴻毛、快如閃電、已經有近 1 萬開發者為它打 call&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：真心希望基於火狐內核的瀏覽器再多點，不然火狐就抗不下去了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：我試了下在我這台 10900x，128g 內存，系統盤是 pcie4 nvme 的 Windows 上，冷啓動需要 12s，而 chrome 只需要 2s，令人髮指&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：你確認下 chrome 有沒有後台常駐？edge 這些為了加快啓動都是開機就佔個後台程序 warm up。這玩意基於 firefox 魔改的，我 7945hx 開 firefox 基本也就兩三秒，再慢確實有點離譜了。&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：Zen Browser 的安裝包體積小到令人難以置信，只有 70M 左右。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：FireFox 換皮&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：剛好 windows 上想弄個新瀏覽器玩&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：我覺得老牌瀏覽器剛開始時也是這麼輕，後來功能逐漸增加，也越臃腫&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：有 arc 那個截不同網站的區域做個儀錶板的功能嗎&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 9：做桌面端嵌入瀏覽器用？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 10：不知道有沒有一款瀏覽器，只要能保住網頁排版，可以不加載拖慢速度的內容？&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 11：除了皮膚，沒感覺到和 firefox 有啥不同和進步&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 12：Firefox 越來越不行了，有時突然就佔用好多內存，把電腦都能卡死&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fb7UgeyEpZ0_exvo-viHSug&quot; target=&quot;_blank&quot;&gt;看了《黑神話：悟空》員工的薪資，他們真的是為愛發電&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：3A 遊戲有開發週期在此，最晚到了今年年底發獎金的時候估計就不可想象的數字了&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：我就是員工之一，35 萬獎金&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：為愛發電的結果是被「人民企業家」收割。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：沒 C# 所以這個工資是假的&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：遊戲行業工資有點像券商，大頭在獎金和效益分紅&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：遊戲定價跟歐美看齊，薪資卻不看齊，差價都被收割&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309285</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309285</guid>
            <pubDate>Wed, 28 Aug 2024 11:36:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>百度搜索的 RLHF 性能優化實踐</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;strong&gt;導讀&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本文大語言模型在未經標註的大量文本上進行預訓練後，可能產生包含偏見、泄露隱私甚至對人類構成威脅的內容。OpenAI 最先提出了基於人類反饋的強化學習算法 (Reinforcement Learning fromHuman Feedback, RLHF)，將人類偏好引入到大模型的對齊過程中，從而讓大語言模型能夠生成符合人類預期的輸出。筆者長期在搜索領域應用大模型提升搜索質量，發現 RLHF 在搜索結果的相關性、準確性和無害性等方面均有顯著的提升，同時也觀察到由於 RLHF 流程相比預訓練以及 SFT 更加複雜，導致在訓練效率上，其系統吞吐率遠低於預訓練或者 SFT，這嚴重製約了 RLHF 的應用與發展。當前業界和學界在預訓練階段和推理部署階段的性能優化進展非常豐富，但在強化學習尤其是 RLHF 性能優化的公開資料較少。我們注意到，RLHF 和預訓練共享大多數分佈式訓練技術，因此在優化手段上，RLHF 既要吸收預訓練的方法，也要結合自身的特點做針對性地優化。&lt;/p&gt; 
&lt;p&gt;RLHF 目前已經發展出多種算法，本文將談一談 RLHF 的性能優化問題，我們以 PPO 為例來討論 RLHF 的性能優化。PPO 優化過程同預訓練有顯著不同，且較為複雜，因此比較適合用來討論 RLHF 的性能優化。最近學術界也開始湧現出一批使用監督微調的對齊方式，從而簡化對齊過程，如 DPO 算法等，但是其優化手段可被囊括在 PPO 優化手段之內。&lt;/p&gt; 
&lt;p&gt;我們的優化手段包括文本生成速度優化、動態顯存優化、系統並行優化等。經過優化後，我們的方案能夠保證效果的同時，大幅提升性能。我們也針對搜索業務場景需求對業界主流方案進行了對比測試，性能大幅優於其他方案。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;01 PPO 算法流程&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;PPO 優化流程涉及四個不同的模型，分別是 Actor、Critic、Reward 和 Reference，是一個典型的多角色多階段的過程，大致流程如下&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-46c9f920a71107846dbf6d4103a9e1354e9.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;PPO 的訓練階段同預訓練幾乎一樣，都是先前向計算損失函數，而後進行反向傳播。唯一不同的是 PPO 訓練涉及兩個模型。PPO 的採樣階段是預訓練沒有的，採樣階段只有純粹的前向推理計算，包括文本生成和獎勵計算等。由於逐 token 生成的特性，文本生成的效率一直是業界關注的焦點，在 PPO 流程中更是超過訓練時間而成為整個系統的瓶頸。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;02 軟硬件配置與基線吞吐率分析&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;為簡化討論，本文以下表中所列的軟硬件配置為基準進行討論。但是本文所提到的優化手段並不受限於下述條件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.1 基礎配置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6e1d6a9e86458770984a7101806eb47d81a.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.2&amp;nbsp;訓練配置&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-77548fd567705ce1c352645fd13f2bb502d.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;其中：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;prompt_length 是 prompt 數據集的最大長度，prompt 的長度分佈應該較為均勻，其平均長度也應該接近這個值；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;generate_lenght 是生成文本的最大長度，當生成超過這個閾值時文本會被截斷；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;generate_batch_size 是生成文本時的 batch_size，這個值越大則 GPU 利用率越高，但同時會帶來更高的顯存佔用；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;global_batch_size 和 micro_batch_size 最初由梯度累積概念引入，詳情可在網上搜索，這裏需要重點説明的是，micro_batch_size 是決定系統吞吐率以及顯存佔用最關鍵的參數，global_batch_size 理論上同系統吞吐率以及顯存佔用關係不大，也就是説可以無限制的擴大。但如果處理不好，梯度聚合過程也可能導致大量的顯存消耗，從而導致 global_batch_size 無法連續調節，後面會有一個案例具體説明；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;ppo_iter 指的是 ppo 算法每輪在全量採樣數據上迭代幾次。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.3 顯存分配方式&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;全參微調條件下，至少需要 1280G(2*8*80G) 顯存，典型的顯存分配方式如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a365738c77e993ce2c584310f7e81e86bc0.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這種分配方式的好處如下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;計算負載均衡——除了文本生成階段只有 actor 參與以外，其他時間兩機的計算大致相同；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;顯存負載均衡；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;actor 和 refer 共享初始熱啓 checkpoint、critic 和 reward 共享初始 checkpoint，每台機器只需存儲一份熱啓 checkpoint&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2.4 系統關鍵部分耗時&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-26bf00c4715ff8ff67d49532d9a609dd290.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.5 吞吐率計算&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;系統各關鍵部分全部為串行執行，一次 ppo 迭代的耗時為： &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8866cd0a5a00053b4011a05a41e7cf75f80.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;可以計算得到系統吞吐率為 256 sample / 1376 s / 16 gpu = 0.012 sample / gpu / s。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;03 文本生成速度優化&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;文本生成大約佔了百分之八十左右的耗時，根據阿姆達爾定律：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-df1fc7d8900bac1014b238304650b445587.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如果能夠加速兩倍，整個系統就能夠取得接近 1.67 倍的提速，這是非常可觀的。目前業界成熟的大模型應用範式是先在訓練框架上進行模型訓練，然後再使用專門的推理框架進行模型推理服務，推理加速往往是推理框架重點關注的問題。對於訓練框架，一方面在功能上推理往往只起輔助作用，比如校驗當前訓練結果等，另一方面訓練框架大多針對訓練特性做優化，很難同時兼容推理的一些優化特性。因此，本項目中引入英偉達的 TRT-LLM 進行文本生成階段的加速，不過在討論 TRT-LLM 之前，先來探討一下文本生成速度慢的一些可能原因。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.1 文本生成速度慢可能的原因&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1. 為避免重複計算，文本生成接口均採用 kv cache 機制，這種機制將文本生成切分成兩個階段，既 context 階段和 decode 階段。其中 context 階段就是對 prompt 計算 kv，因此該階段也被稱作 prefill 階段。decode 階段則是逐 token 生成的過程，由於 kv cache 大大減少了計算量，該階段變成訪存密集型任務，GPU 計算單元的利用率較低。且 kv-cache 需要額外消耗大量的顯存，限制了 batch_size 的大小，這又進一步降低了 GPU 計算單元的利用率；&lt;/p&gt; 
&lt;p&gt;2. 無效生成——由於 batch 內 prompt 長短不齊，簡單的文本生成策略會從最短的 prompt 長度位置開始，造成大量的無效生成。當 batch 內某個句子生成結束後，仍然會跟隨 batch 內其他未結束的句子一起繼續生成，又會造成大量的無效生成；&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-0c0ac3437121888063289d279420ebc14c6.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;3. 大模型由於參數量過大，單顯卡的顯存往往無法匹配訓練時的顯存需求，類 Megatron-LM 的訓練框架使用模型並行將顯存需求分散到多張顯卡。模型並行包括張量並行和流水並行兩種機制，在推理時，這兩種機制都會引入的額外通信開銷。如果使用 pp，還會引入空泡，導致生成效率進一步下降。實際上推理所需的顯存遠低於訓練，10B 左右的模型完全可以放在單卡上做推理，從而避免模型並行帶來的開銷。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.2&amp;nbsp;TRT-LLM 為什麼可以提高文本生成速度&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;對於問題 1，TRT-LLM 通過引入 paged attention 機制優化顯存佔用，從而提高 batch_size，改善吞吐率；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;對於問題 2，TRT-LLM 通過引入 inflight batching 機制替換已完成的生成任務，大大減少了無效生成，對於序列長度分佈極不均勻的場景，甚至觀察到了 5 倍左右的吞吐率提升；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;對於問題 3，部署 TRT-LLM 可以無需遵照訓練時的模型切分方式，因此也可以降低模型切分帶來的開銷。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;3.3&amp;nbsp;引入 TRT-LLM 後帶來的問題&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.3.1&amp;nbsp;額外的顯存佔用&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;很顯然，TRT-LLM 也需要消耗顯卡的計算和存儲資源，不過由於文本生成和訓練在時間上是錯開的，可以通過 offload 的方式錯峯使用顯存，使得訓練和文本生成在顯卡使用上互不影響。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.3.2 參數更新&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;TRT-LLM 以獨立進程的方式部署，由於 Actor 的每輪更新，必須同步更新相應的 TRT-LLM 模型，簡單的參數更新方法如下&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.3.2.1 naive 方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.actor 保存 checkpoint 到磁盤（訓練框架所支持的格式）；&lt;/p&gt; 
&lt;p&gt;2.再 t 轉換為 HuggingFace 格式的 checkpoint；&lt;/p&gt; 
&lt;p&gt;3.將 HuggingFace 格式的 checkpoint 轉換成 trtllm 格式的 checkpoint；&lt;/p&gt; 
&lt;p&gt;4.將 TRT-LLM 格式的 checkpoint 轉換為 TensorRT engine；&lt;/p&gt; 
&lt;p&gt;5.TRT-LLM Runtime 從磁盤中加載 TensorRT engine。&lt;/p&gt; 
&lt;p&gt;上述幾個步驟涉及多次磁盤 IO，由於模型參數量極大（23GB，參數格式為 bf16），總耗時超過 15 分鐘。如果是離線部署，這個方案是可以接受的，且框架有自帶的轉換腳本，無需額外的開發工作。但是強化學習需要在線更新，15 分鐘的更新時間會嚴重拖慢系統速度。幸運的是 TensorRT 提供了在線更新的接口。另外觀察到上述的多次轉換是由各個框架格式不兼容造成的，需要手動實現參數轉換功能。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.3.2.2 refit 方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;前置條件&lt;/p&gt; 
&lt;p&gt;TRT engine 需開啓 refit 選項（開啓方法可參考 TRT-LLM 文檔，此選項會導致 dump 的 TensorRT engine 大 10M 左右，但不會影響性能）&lt;/p&gt; 
&lt;p&gt;主要步驟&lt;/p&gt; 
&lt;p&gt;1.（訓練進程）將 Actor 模型的參數轉換成 TensorRT engine 的參數格式，並拷貝到共享內存中（逐 Tensor 轉換和拷貝，主要涉及到一些 Tensor 的拆分、合併以及轉置操作等）；&lt;/p&gt; 
&lt;p&gt;2.（訓練進程）將 Actor 模型的參數和優化器狀態等固定顯存佔用 unload 到 cpu 內存中（為 TRT-LLM 推理騰退顯存，可 unload 部分參數），通知（RPC 方式）TRTLLM 進程加載最新參數；&lt;/p&gt; 
&lt;p&gt;3.（TRT-LLM 進程）加載 cpu 內存中保存的 TensorRT engine；&lt;/p&gt; 
&lt;p&gt;4.（TRT-LLM 進程）遍歷共享內存中的參數並改寫 TensorRT engine （逐 Tensor 改寫）&lt;/p&gt; 
&lt;p&gt;整個過程消除了磁盤 IO，更新時間優化到 20s 左右；另外如果考慮使用單卡部署 TRT-LLM，從而消除不必要的通訊開銷以及空泡（PP），還可以使用共享內存+NCCL 通訊的方式更新參數，如下圖所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1fd2e1ec9bda1882dcdc7b20e0e5072056e.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;相比於共享內存，顯卡間的 NCCL 通訊速度極快，參數拷貝時間幾乎可以忽略不計。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3.4 &lt;strong&gt;吞吐率改進狀況&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. 系統關鍵部分耗時&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1df535b2d84e8da914243344b96fb155b4c.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;從耗時統計中可以看出，TRT-LLM 對文本生成速度提升了超過 30 倍，大大超出預期。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. 吞吐率計算&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;系統各關鍵部分全部為串行執行，一次 ppo 迭代的耗時時間為：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8a436153804510296dc8f584b28d468b04b.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;可以計算得到系統吞吐率為 256 sample / 456 s / 16 gpu = 0.035 sample / gpu / s，相較於基線吞吐率提升了將近 192%。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_4&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;04 動態顯存優化&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;RLHF 訓練過程中顯存常常是緊缺資源，顯存會造成兩個問題，一是訓練過程中突然出現的 OOM 警告，使得跑了很長時間的任務失敗；二是為了避免 OOM 刻意調小 batch_size，使得顯卡計算單元的利用率下降，訓練時間延長。大模型訓練過程中的顯存佔用分為固定顯存佔用以及動態顯存佔用。固定顯存主要包括參數、梯度和優化器狀態，對於類 Megatron-LM 框架來説，固定顯存通過模型並行切分之後，繼續優化的空間較小，因此需要開發人員關注的是動態顯存優化。動態顯存主要包括前向的激活以及臨時變量等，下面將介紹這兩種顯存的優化方法。另外對於推理框架來説，激活和臨時變量相比 kv cache 幾乎可以忽略不計，而通過引入 paged attention 技術，kv cache 顯存佔用已經得到了很好的優化，因此這裏不多做討論。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.1&amp;nbsp;選擇性激活重算 + 序列並行&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在反向傳播過程中，需要前向過程中的激活參與計算，因此需要保存這部分結果。激活所佔的顯存比例隨着模型規模、batch_size 以及序列長度的增加而逐步增加。對特定的模型，當需要增加 batch_size 以提升訓練速度或者需要適配長文本訓練任務時，顯存會成為最棘手的問題。可通過重算技術來減小激活顯存消耗，也就是隻保存少部分中間激活，剩餘的部分在需要時重新計算。重算對激活顯存的優化效果是立竿見影的，但是同時也導致了速度的嚴重退化。最新的重算技術選擇激活顯存佔用小同時計算較慢的算子作為檢查點，而顯存佔用大並且計算較快的算子的中間結果則被丟棄，這種選擇性重算技術雖然在激活顯存優化能力上有所下降，但是能夠保證速度退化不至於過於嚴重。&lt;/p&gt; 
&lt;p&gt;另一種激活顯存優化技術是序列並行，這個技術由 Megatron-LM 引入，其核心思想仍然是使用通訊換取顯存。具體而言，Megatron-LM 的作者觀察到那些 TP 無法切分的區域，在序列軸的維度上是相互獨立的，因此可以在序列軸上進行切分，如下圖所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cd0d861291440eac169a3070dc88c9634f0.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;實驗中觀察到，在 PP=8 的條件下，使用序列並行+選擇性重算能夠優化掉 50% 左右的激活顯存，但是會帶來 20% 左右的速度退化。可以將 batch_size 提升至原先的兩倍，最終的訓練速度相比之前提升接近 15%。同時對於更長的文本，預期會有更大的改進。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.2&lt;/strong&gt; &lt;strong&gt;按照 micro_batch 進行 padding&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這部分以及後面的臨時顯存優化是一些編程上的注意事項，並無太多的理論。具體而言，當編寫訓練部分的代碼時為圖省事，或者不經意間，會對 global_batch 進行 padding，實際進行前向和反向計算時是以 micro_batch 為單位的，當 global_batch 內長度分佈極不均勻時，由 padding 導致的計算時間大大增加。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1c2acc0c43679812d057019b3c4070948d4.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.3 臨時顯存優化&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;臨時顯存優化的兩大原則：&lt;/p&gt; 
&lt;p&gt;1.&amp;nbsp;儘早釋放&lt;/p&gt; 
&lt;p&gt;2. 避免申請過大的顯存資源&lt;/p&gt; 
&lt;p&gt;以推理過程中 next_logp 計算的優化為例，優化前 global_batch_size 無法開大，對於訓練效果和訓練效率均會造成一定影響。下面以 gbs=64，mbs=2 為例説明：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-a074e4dd1436cf3ffd99295ec855c3e7e7c.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過提前計算 mbs，儘早釋放中間顯存，可以將峯值顯存從 gbs * N 優化到 mbs * N。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-83a8159522c3bd3ce2a0491404baf231066.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;對 mbs 的計算中也申請了一塊 2GB 左右的顯存，通過將計算的粒度控制在單條樣本，還可以進一步降低峯值顯存佔用，代價是計算效率會有所降低，這點需要權衡。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4.4&amp;nbsp;吞吐率改進狀況&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;由於優化了顯存，系統可以使用更大的 global_batch_size，降低了流水並行的空泡率（如果開 PP 的話），從而提高了訓練速度。按照 micro_batch 進行 padding 由於節省了計算，又進一步提升了訓練速度。總的提升大約在 10% 左右。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.系統關鍵部分耗時&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-41b5294b5c5f7d6a47e8de87b896f2fbb33.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.吞吐率計算&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;系統各關鍵部分全部為串行執行，一次 ppo 迭代的耗時時間為： &lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f7343f353a282b99ab9b7e1b29ad751231a.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;可以計算得到系統吞吐率為 256 sample / 432 s / 16 gpu = 0.037 sample / gpu / s，相較於基線吞吐率提升了將近 208%。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_5&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;05 系統並行優化&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;5.1 優化方法&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PPO 是一個典型的多階段流程，所包含的步驟中有些有前後依賴關係，需要串行執行，也有一些步驟則沒有依賴關係，可以並行執行，如下圖所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8e191c1594b47fc992a1c6a22076b6f6e87.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Actor 的訓練和 Critic 的訓練任務在不同節點並且相互獨立時，可以很容易進行並行計算。ref_logp 和 logp 的計算任務雖然相互獨立，但由於在同一節點需要共享顯卡，且單個任務既可打滿利用率，此時任務並行的意義不大（雖然 cuda 通過 stream 機制很容易支持併發任務）。觀察到對於 ref_logp 計算這種僅做推理的任務，將其移動到 critic 所在的節點也幾乎沒有影響，之後便可以進行並行計算 ref_logp 和 logp。比較複雜的是文本生成與 reward 計算之間的並行，兩者雖分佈在不同的節點，但是任務之間存在依賴關係，即 reward 計算所需要的句子是文本生成的結果。觀察到文本生成按照 batch 計算並返回，可以通過下述方法重疊兩者的計算。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2b33d50c9b81e4cbd174b1ae7b2356c932e.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;優化後的系統如下所示：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7f7e01b08bbab79d4f9d6655c9da6817406.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;系統中還存在其他一些可以並行的部分，例如 actor 模型的加載/卸載，共享內存拷貝和 TRT-LLM 模型的卸載/加載與 refit_engine 等，其優化方法與上述提到的思想大同小異，這裏不再詳細介紹。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5.2&amp;nbsp;吞吐率改進狀況&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1.系統關鍵部分耗時&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-96b4a4caa4cf384779a546c38ab5db7f75d.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2.吞吐率計算&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;系統各關鍵部分全部為串行執行，一次 ppo 迭代的耗時時間為&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-5bd08db50649b557622769887da19e0f963.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;可以計算得到系統吞吐率為 256 sample / 275s / 16 gpu = 0.054 sample / gpu / s，相較於基線吞吐率提升了將近 350%。&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_6&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;06 其他開源框架對比&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;實驗設置：&lt;/p&gt; 
&lt;p&gt;全參數 RLHF 訓練，採用 16*A100(80G) 訓練。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1ff87e661f95098b758511809000e7b0cd6.png&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_7&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;strong&gt;07 總結&lt;/strong&gt;&lt;/h1&gt; 
&lt;p&gt;綜上，我們在廣泛實驗、對比和學習了業界主流框架的情況下，通過分析 RLHF 任務的特點並採用先進的大模型預訓練及推理性能優化手段，使得 RLHF 任務性能大幅提升，能夠以相對少的資源支持了業務的快速迭代和發展，取得了良好的業務效果。&lt;/p&gt; 
&lt;p&gt;————END————&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;推薦閲讀&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247595490%26idx%3D1%26sn%3D80480c7c7edb9d53df0a4be4300605bc%26chksm%3Dc03f459ef748cc889548f1ac5be8dbbb49a2f5c91e111b194806b763ae11a4fb849acd827689%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;基於飛槳框架實現 PCA 的人臉識別算法&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247593849%26idx%3D1%26sn%3D4e43485b376edff67ada50780bf29262%26chksm%3Dc03f5f05f748d6134a309aadff38fbe8ac2ba2f8319f329d6d424852912503eca7a3dfe328c4%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;統一多場景自動編譯加速——支持動態 shape 場景，一套架構搞定訓推需求&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592926%26idx%3D1%26sn%3D55ec68a8addd48988e323d2a36dba7f4%26chksm%3Dc03f5ba2f748d2b4acd9fb1ad9aa1f22d146702e9f6d261a1e2a35083c2a2cc366d9e6947d32%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;基於飛槳框架的稀疏計算使用指南&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592895%26idx%3D1%26sn%3Da1963501c0f63ff70d5fa457680a0ba7%26chksm%3Dc03f5bc3f748d2d51f25900ca7f31b0a565431f95af0d5c1e34fa7c889ebd160ac46917acee4%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;雲高性能計算平台 CHPC 讓企業的傳統 HPC 玩出新花樣&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5MjU0NTI5OQ%3D%3D%26mid%3D2247592870%26idx%3D1%26sn%3D4356bf3d908eaf1a5457e2c05f06992c%26chksm%3Dc03f5bdaf748d2cc5bf279bf3a406c26cdd9a3c8e4f807c618768a9ebc1207c0809e2c7e539b%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;Embedding 空間中的時序異常檢測&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4939618/blog/15525788</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4939618/blog/15525788</guid>
            <pubDate>Wed, 28 Aug 2024 08:51:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Notion 宣佈將退出俄羅斯市場</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Notion &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.notion.so%2Fhelp%2Frestrictions-for-customers-based-in-russia&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;將退出俄羅斯市場，並終止與該國用户相關的所有工作區和賬户。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;公告稱，此舉是因為美國政府針對軟件服務供應商出台了限制政策，禁止俄羅斯任何人訪問某些軟件產品和服務。因此從 2024 年 9 月 9 日起，Notion 將不再向位於俄羅斯的用户提供該平台的訪問權限。具體包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;阻止用户在俄羅斯訪問 Notion 的服務。工作區中從未與俄羅斯產生過賬單的用户一旦離開俄羅斯，即可重新訪問 Notion。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;如果與工作區相關的任何賬單信息目前或之前與俄羅斯有關，則該工作區將被終止。這是遵守制裁的必要條件，更新帳户的賬單信息不會改變限制。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;終止所有已確認有與俄羅斯相關的賬單信息（歷史或當前）的計劃的訂購付款。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img height=&quot;301&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0d246733860addf28233159ddb99be98a39.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Notion 是一款流行的生產力工具，它將筆記記錄、文檔創建、任務管理、數據庫和各種實時協作工具整合在一個平台下。截至 2024 年，其全球用户數已達 3000 萬人次。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;受影響的用户可在 9 月 8 日之前訪問他們的工作區提取數據。有關如何從 Notion 導出內容或整個工作區的説明可查看此&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.notion.so%2Fhelp%2Fexport-your-content&quot; target=&quot;_blank&quot;&gt;官方幫助頁面&lt;/a&gt;，涵蓋 PDF、HTML 和 CSV 格式。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309236/notion-exits-russia</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309236/notion-exits-russia</guid>
            <pubDate>Wed, 28 Aug 2024 07:03:42 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>微軟將開源 .NET 框架 Mono 捐贈給 Wine</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;根據 Mono 官網的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mono-project.com%2Fnews%2F&quot; target=&quot;_blank&quot;&gt;最新公告&lt;/a&gt;，該項目已被移交給&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.winehq.org%2F&quot; target=&quot;_blank&quot;&gt;WineHQ 組織&lt;/a&gt;，後者是負責管理開源項目 Wine 的團隊。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img height=&quot;1400&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0828/102114_2OKJ_2720166.png&quot; width=&quot;844&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;公告寫道，WineHQ 組織將在&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.winehq.org%2Fwine-mono%2Fmono&quot; target=&quot;_blank&quot;&gt;wine-mono / Mono&lt;/a&gt;&amp;nbsp;倉庫中接管 Mono 項目上游的管理工作。現有&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmono%2Fmono&quot; target=&quot;_blank&quot;&gt; mono/mono &lt;/a&gt;和其他 repos 中的源代碼仍可繼續使用，但 repos 可能會被歸檔。其中二進制文件的可用期長達四年。&lt;/p&gt; 
&lt;p&gt;此外，微軟在&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fruntime%2Ftree%2Fmain%2Fsrc%2Fmono&quot; target=&quot;_blank&quot;&gt; dotnet/runtime&lt;/a&gt; repo 中維護着 Mono 運行時的現代化分支，並一直在逐步將工作負載轉移到該分支。這項工作現已完成，官方建議 Mono 的活躍用户和基於 Mono 的應用程序框架的維護者遷移到包含該分支的 .NET。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e569731a99c63a5465016ebe9c705fca246.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Mono 是開源的 .NET 框架實現，它允許開發者在非 Windows 平台上運行 .NET 應用程序。&lt;/p&gt; 
&lt;p&gt;Mono 最初是由 Xamarin 公司主導的自由開源項目。該項目的目標是創建一系列符合 ECMA 標準（Ecma-334 和 Ecma-335）的 .NET 工具，包括 C# 編譯器和通用語言架構。&lt;/p&gt; 
&lt;p&gt;微軟在 2016 年收購了 Xamarin，Xamarin 是 Mono 和其他 Xamarin 項目背後的開發者。Mono 最初由 Miguel de Icaza 及其團隊在 Ximian 下啓動，Ximian 在 20 年前被 Novell 收購，然後 SUSE 在 2011 年將 Mono 的控制權交給了 Xamarin。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309189/ms-gives-mono-to-wine</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309189/ms-gives-mono-to-wine</guid>
            <pubDate>Wed, 28 Aug 2024 02:47:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>何小鵬宣佈小鵬自研圖靈芯片已流片成功</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;8 月 27 日晚，小鵬汽車宣佈正式升級為小鵬 AI 汽車公司。小鵬汽車董事長何小鵬在小鵬 MONA M03 上市發佈會上透露，小鵬自研的圖靈芯片已於今年 8 月 23 日成功流片。這一里程碑式的成就標誌着圖靈芯片成為全球首顆同時應用於 AI 汽車、AI 機器人和飛行汽車上的 AI 芯片。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;339&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-a3021be263c410063d5eba75516897ac047.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;據詳細介紹，小鵬圖靈芯片是專為 L4 級自動駕駛而設計，併為 AI 大模型量身定製。該芯片配備了 40 核處理器、2 個獨立的圖像 ISP 以及 2xNPU 自研神經網站處理大腦，其強大性能可支持最高達 30B 參數的大模型運行。這一系列技術突破為小鵬汽車在智能駕駛和 AI 領域的發展奠定了堅實基礎。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;何小鵬表示，與現在使用的芯片相比，圖靈芯片一顆性能與三顆一樣。他稱，這是因為絕大多數芯片設計時考慮多樣性通用性。圖靈芯片針對行車場景進行了深度優化，內置獨立安全島設計，能實現全車範圍內的實時無盲點監測。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在談及未來規劃時，何小鵬表示，小鵬汽車將在未來十年內專注於 AI 和大製造領域的發展，包括 AI 機器人、AI 汽車和飛行汽車等前沿技術的研發與應用。公司期望成為 AI 汽車公司的代表，並在全球範圍內推廣其創新產品。在出海戰略上，小鵬汽車將優先考慮歐洲市場。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;何小鵬預計，未來 10 年剩下的主流汽車品牌只剩 7 家，「未來 10 年年銷 100 萬輛，將成為 AI 汽車決賽入場券。小鵬汽車將有一半銷量將來自海外，從歐洲起步，以科技為導向將中國的智能化帶往全球。」&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309179</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309179</guid>
            <pubDate>Wed, 28 Aug 2024 02:11:48 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>對話 Linux 之父！openKylin 核心開發者受邀參與內核頂會</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;2024 年 8 月 21 日-23 日，由雲原生計算基金會（CNCF）和&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;Linux 基金會&lt;/span&gt;&lt;span&gt;聯合主辦的 KubeCon + CloudNativeCon + Open Source Summit + AI_dev China 2024 大會在香港舉行。此次盛會涵蓋&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;主題演講、技術會議、圓桌討論和展覽展示等&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;多個環節，吸引了全球 30 多個國家和地區的技術專家、企業代表以及開源社區的積極參與者。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;openKylin 內核核心開發者、Linux 內核資深專家唐葛亮&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;受邀參與&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;Linux 內核維護者閉門交流會—Linux Kernel Maintainer Meetup&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;。&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;在最新的 Linux 6.10 版本內核和 Linux 6.9 版本內核中，唐葛亮&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;patch&lt;/span&gt;&lt;span&gt;（代碼補丁）貢獻數量排名華人第一。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3accc4891a23bee3f25ed0ae046b43d6d2a.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;span style=&quot;color:#7f7f7f&quot;&gt;Linux 內核維護者閉門交流會合影&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;&lt;span&gt;Linux 基金會執行董事 Jim Zemlin、Linux 與 Git 的創始人&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;Linus Torvalds&lt;/span&gt;&lt;span&gt;、Linux 基金會研究員 Greg Kroah-Hartman 等 200 多位國際演講嘉賓親臨現場，分享各自領域的深刻見解和寶貴經驗。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;span&gt;本次聚會彙集了全球核心 Linux 內核開發人員，&lt;/span&gt;&lt;strong&gt;&lt;span&gt;唐葛亮作為 Linux 內核 MPTCP (Multipath TCP) Maintainer，就 MPTCP 社區開發和中國 Linux 發行版等相關話題與社區領袖 Linus 和&lt;/span&gt;&lt;span style=&quot;color:var(--weui-LINK)&quot;&gt;Greg&lt;/span&gt;&lt;span&gt;進行了交談。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:center&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;637&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0a232bb2d3351cb36679bb3f8e6844b5aaa.bmp&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#7f7f7f&quot;&gt;唐葛亮（右一）對話 Linus（右三）和 Greg（右二）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin 作為我國領先的開源操作系統根社區，積極參與國際開源生態建設，與 Linux 內核社區等全球開源力量保持密切合作。後續，openKylin 將持續參與國際開源社區交流與合作，進一步提升在國際開源技術社區的影響力，構建技術話語權。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;關於 openKylin Kernel SIG&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;openKylin Kernel 是 openKylin 社區維護的 Linux 內核，其源於上游 Linux Kernel 社區，並在此基礎上，合入眾多廠商關於新特性、新硬件架構支持、性能優化、可靠性增強等相關補丁。&lt;span style=&quot;color:#000000&quot;&gt;openKylin&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;Kernel SIG 組致力於提供功能更豐富、質量更穩定、更安全、更可靠的內核基座，讓 openKylin 不同架構廠商及 OS 衍生發行版廠商減少在內核上的重複投入，更聚焦自身業務發展，更快的拓展 OS 生態。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;SIG 主頁：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#0052ff&quot;&gt;https://gitee.com/openkylin/community/tree/master/sig/kernel&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309177</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309177</guid>
            <pubDate>Wed, 28 Aug 2024 02:10:48 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>案例研究丨 MaxKB+Ollama：深圳市公共信用中心探索信用服務創新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#000000; text-align:start&quot;&gt;深圳市公共信用中心隸屬於深圳市市場監督管理局，主要負責對外提供深圳市企業公共信用信息報告查詢和深圳市企業註冊登記檔案查詢等服務。作為深圳市信用信息的權威發佈機構，深圳市公共信用中心一直致力於為公眾提供準確、及時的信用信息服務。&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1112&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9d21641af277f0c7ec95817322167f4cb8d.jpg&quot; width=&quot;1668&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;深圳信用網（&lt;em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;www.szcredit.org.cn&lt;/span&gt;&lt;/em&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;）是深圳市公共信用中心重點建設的以「信用」為核心的服務平台，提供包括信用信息查詢、政法法規公示等服務。深圳信用網包含信用動態、政策法規、信用服務、聯合獎懲等功能板塊，旨在推動和促進深圳社會信用體系的建設。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;為什麼需要知識庫問答系統？&lt;/h1&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;隨着社會的發展和科技的進步，公共信用信息的透明度和易獲取性變得越來越重要。在信息化和大數據時代，信用信息能夠被及時地、準確和便捷地獲取對於社會經濟活動和個人行為而言均具有重要意義。作為一直以來以「便民、利民」為宗旨的公共信用服務平台，深圳信用網也希望能夠面向公眾提供智能化的問答服務。深圳信用網希望推出知識庫問答服務主要出於以下幾方面的需求：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 提高服務效率，減少用户等待時間&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;深圳信用網每年的訪問量高達 1000 萬次，是公眾獲取信用信息的主要渠道之一。深圳市公共信用中心多年來一直致力於提升信用信息的公開性和服務質量，以滿足公眾日益增長的需求。然而，面對海量的訪問量和多樣化的信息查詢需求，傳統的服務模式逐漸顯得力不從心；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 緊跟政務事實，保證內容時效性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;作為深圳信用服務門户，深圳信用網不僅需要確保信息信息的準確性，也需要跟隨相關政策法規的變化保證信息查詢的時效性。當新的政策推出後，信用服務門户需要能夠及時更新並回復內容，以確保官方答案的權威性。在傳統的服務模式下，服務人員需要花時間獲取、理解新政策內容，並且組織回覆語言，這在某種程度上影響了回覆的時效性，也影響了用户的使用體驗；&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 確保回答內容的規範性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;作為問答服務的提供方，深圳信用網希望在提供信用服務的同時，通過持續收集用户的反饋，優化回覆內容，從而給用户帶來更好的使用體驗。過去傳統的服務模式在問答環節產生的答案因服務人員而異，平台龐大的業務量以及用户對同一問題往往採用不同的提問方式，使得後台系統對問答的分類和篩選變得尤為困難，不利於規範化回答內容的形成。&lt;/span&gt;&lt;/p&gt; 
&lt;h1&gt;MaxKB 開源知識庫問答系統的引入&lt;/h1&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;隨着人工智能技術的快速發展和應用普及，智能問答系統已經成為各類機構提升公共服務質量和效率的重要工具。在這一背景下，針對深圳信用網當前的需求，深圳市公共信用中心響應省市「人工智能+」的戰略部署，積極探索大語言模型的應用落地，致力於將這些前沿的創新技術融入到信用服務中，以提高服務的智能化水平和用户的體驗。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;MaxKB 是一款基於 LLM 大語言模型的開源知識庫問答系統，它能夠將大語言模型的強大功能與知識庫相結合，提供精準的智能問答服務。MaxKB 的核心優勢在於其高效的知識管理、知識檢索和自然語言理解能力，能夠將用户提出的問題與知識庫中的相關信息進行匹配，生成準確的回答。MaxKB 還能記錄和查看每次對話內容，收集用户反饋，為回答的持續優化提供依據。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;2024 年 5 月，深圳市公共信用中心引入了 MaxKB 作為自身知識庫問答系統的核心繫統，並結合 Ollama 搭建的本地私有大模型，構建了 AI 工具——即「信用 AI 助手」，並創新性地將「信用 AI 助手」嵌入到深圳信用網的頁面中，為用户提供更加智能、便捷的信用信息查詢服務。&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span style=&quot;color:#3e3e3e&quot;&gt;藉助「信用 AI 助手」，用户可以在深圳信用網上直接提出與信用相關的問題，系統會根據用户的提問自動匹配答案，為用户提供即時、準確、詳盡的回答。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;904&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-76939983e72496fd2c345661924a01e6b06.png&quot; width=&quot;947&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;▲附圖，深圳信用網「信用 AI 助手」問答窗口&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;經過實際的部署和調試，深圳市公共信用中心認為 MaxKB 在知識庫問答方面的優勢包括：&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 智能問答&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;MaxKB 的智能問答功能是該系統的核心能力。MaxKB 能夠將用户的自然語言通過向量模型總結出關鍵詞，從知識庫中檢索相關內容，並將碎片化的答案整理成條理分明的回覆內容，為用户輸出準確細緻的回答。使用 MaxKB 搭建的「信用 AI 助手」在深圳信用網落地應用後，能夠顯著提升信用服務門户問答服務的響應速度，有效減少用户的等待時間，提高了服務效率；&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 信息管理&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;MaxKB 不僅僅是一個智能問答系統，它還具備強大的信息管理能力。知識庫功能的各個模塊集中且高效地管理了深圳市公共信用中心的各類公開法規和信用資料。知識庫建成後，深圳市公共信用中心定期對知識庫內容進行審核和更新，設置敏感詞，加入新的政策法規、信用信息以及常見問題的解答，確保知識庫內容的時效性和權威性，24 小時不間斷地為來訪用户提供全面的問題解答；&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 用户互動與反饋&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;MaxKB 提供的對話日誌功能可以自動記錄用户每一次訪問的對話內容。用户在與「信用 AI 助手」交互後，可以對小助手當前回答內容進行評價，評價結果與對話內容將在對話日誌中呈現，提高了問答系統的用户評價收集能力。深圳市公共信用中心可以將日誌中記錄的對話和用户評價作為系統改進和持續優化的依據。&lt;/p&gt; 
&lt;h1&gt;MaxKB 的應用成果&lt;/h1&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;「信用 AI 助手」在深圳信用網的嵌入，顯著提升了該網站接待訪客的智能化能力和服務水平。用户在查詢信用信息時，無需再排隊等待人工回覆，只需要通過與智能問答系統交互，就可以即時獲得所需的信息，大大提升了用户的體驗感和滿意度。MaxKB 開源知識庫問答系統在深圳信用網所取得的應用成果具體體現在以下幾方面：&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 服務效率提升&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;引入 MaxKB 開源知識庫問答系統後，深圳信用網的服務效率得到了大幅提升。過去，用户需要等待人工客服或者前往櫃面諮詢，而現在大多數問題可以直接通過「信用 AI 助手」即時解決。用户在短時間內就可以獲得準確的答案，大大提高了服務效率和用户體驗；&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 準確性和權威性提升&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;MaxKB 依託先進的 LLM 大語言模型和優秀的自然語言歸納提取能力，可以從大量數據中提取和生成準確的回答。深圳市公共信用中心在系統中內置了大量的權威數據和政策信息，確保用户獲取的回答既準確又具備權威性。同時，通過後期不斷地更新和維護知識庫，進一步提高系統的回答質量；&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#5a55fa&quot;&gt;■ 服務羣體擴大&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;自 MaxKB 知識庫問答系統在深圳信用網上線後，網站的訪問量持續增長。如此新穎便捷的信用信息獲取模式，吸引了更多的用户到網站進行信息查詢和互動。「信用 AI 助手」在信用服務領域的創新性應用，增加了民眾對政務服務的參與度，實現了網站服務羣體規模的擴大，提高了企業和個人的信用意識，為構建誠信社會提供了有力的支持和保障，進一步提升了深圳市在社會信用體系建設上的成效。&lt;/p&gt; 
&lt;h1&gt;未來展望&lt;/h1&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;MaxKB 開源知識庫問答系統在深圳市公共信用中心落實「強基工程」工作需求的過程中扮演着重要的角色。通過上線「信用 AI 助手」，深圳市公共信用中心將信用服務推進至一個全新的階段，在保障數據安全的同時釋放創新技術的生產力。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;通過「信用 AI 助手」，深圳信用網可以更加高效地處理大量的用户諮詢業務，減少人工服務的工作量，並且有效提高服務的響應速度和準確性。通過不斷的技術創新和服務升級，深圳市公共信用中心可以為公眾提供更加優質的信用信息服務，促進社會的誠信體系建設並助力經濟發展。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#000000; text-align:start&quot;&gt;&lt;span&gt;&lt;span style=&quot;color:#000000&quot;&gt;未來，深圳市公共信用中心將繼續優化和完善知識庫問答系統，提高系統的智能化水平，以便更好地滿足公眾的信用服務需求。同時，該中心還將進一步探索大語言模型技術的應用，將技術創新切實轉化為新質生產力，為打造「信用深圳」品牌做出更多貢獻。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309122</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309122</guid>
            <pubDate>Tue, 27 Aug 2024 13:11:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>開源日報 | FreeBSD 獲得近 70 萬歐元投資；英偉達員工百萬財富卻煩惱；馬斯克「背刺」硅谷；微軟撤回棄用控制面板的聲明</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#ff9900&quot;&gt;&lt;strong&gt;# 2024.8.27&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日要聞&lt;/span&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;span style=&quot;color:#245bdb&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/309018/sovereign-tech-fund-to-invest-e686400-in-freebsd&quot;&gt;FreeBSD 獲得來自 STF 的近 70 萬歐元投資&lt;/a&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;德國主權技術基金 Sovereign Tech Fund (STF) 已同意向 FreeBSD 項目&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffreebsdfoundation.org%2Fblog%2Fsovereign-tech-fund-to-invest-e686400-in-freebsd-infrastructure-modernization%2F&quot; target=&quot;_blank&quot;&gt;投資&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;686,400 歐元，以推動基礎設施、安全性、法規合規性和開發人員體驗的改善。&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;254&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9d43dd75f8cc30d071361ae9779d741c92c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此前，STF 已陸續為 GNOME、PHP、Rustls、Coreutils uutils 等其他開源項目提供了資金。以及宣佈&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/297782/stf-lower-limit&quot;&gt;面向小額開源項目開放投資&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;，&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/305160/stf-fellowship-for-maintainers&quot; target=&quot;_blank&quot;&gt;為個人開源維護者設立獎學金計劃&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Futm_XtxsGaPy-Rd-zmkLOw&quot; target=&quot;_blank&quot;&gt;微軟撤回了棄用控制面板的聲明&lt;/a&gt;&lt;/h3&gt; 
&lt;div&gt; 
 &lt;p&gt;上週媒體廣泛報道稱，微軟準備棄用有幾十年歷史的控制面板。微軟在其 System configuration tools in Windows 支持頁面中聲明，控制面板即將被棄用，取而代之的是「設置（Settings）」應用，它提供了更現代、更簡化的體驗。但現在微軟又修改了相關文字，撤回了棄用控制面板的聲明，改為「控制面板中的許多設置正遷移到設置應用」。&lt;/p&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8fc8d8c8f1332e6f497a55b9839d5171eac.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnbeta.com.tw%2Farticles%2Ftech%2F1443630.htm&quot; target=&quot;_blank&quot;&gt;Linux 系統份額史上首次逼近 4.5％，明年有望超 5％&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;市調機構 StatCounter 發佈了 2024 年 7 月份的全球操作系統份額數據，Linux 取得歷史性突破，首次接近了 4.5％！目前，Linux 系統份額為 4.44％，創造歷史新高，而在一年前還是 3.12％，兩年前還是 2.76％。&lt;/p&gt; 
&lt;p&gt;今年 2 月，Linux 份額第一次突破 4％，之後兩個月短暫跌回 3.9％，隨之反彈，6 月份達到 4.05％，最近一個月又增加了 0.39 個百分點。&lt;/p&gt; 
&lt;p&gt;從歷史趨勢看，Linux 份額有望在 2025 年 2 月份突破 5％！相對來説，這依然是個很小的數字，但是對 Linux 來説卻是實實在在的突破，尤其是在政企領域。&lt;/p&gt; 
&lt;p&gt;與此同時，Windows 份額為 72.1％，穩中有增，macOS 份額為 14.92％，穩中有降，ChromeOS 份額為 1.41％，穩中有降。&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;今日觀察&lt;/span&gt;&lt;/h2&gt; 
&lt;div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;社交觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1862172703%2FOud5mC2HL%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;我們距離真正的開源人工智能還有很長的路要走&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt;
    開源人工智能是過去一年最令人驚訝的科技之一。隨着 OpenAI 和谷歌 (Google) 等公司投入數十億美元打造更強大的人工智能，開發人員可以免費使用和調整的「開放」模型縮小了性能差距。開源人工智能的支持者還需要更好地論證其安全性。這樣一種強大、通用技術的發佈，任何人都可以使用，理所當然地引起了廣泛的關注
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div style=&quot;text-align:right&quot;&gt;
      &lt;span&gt;- 微博&amp;nbsp;&lt;strong&gt;集微網官方微博&lt;/strong&gt;&lt;/span&gt;
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5722964389%2FOu4Kfg9z4&quot; target=&quot;_blank&quot;&gt;實時高保真換臉的開源 AI 工具：ReHiFace-S&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;p&gt;無需訓練，僅需提供一張照片，即可一鍵將視頻中的人臉替換為你選擇的人物形象，而且在 1080Ti 這些低配置的顯卡上就能實時運行！&lt;/p&gt; 
   &lt;p&gt;GitHub：github.com/GuijiAI/ReHiFace-S&lt;/p&gt; 
   &lt;p&gt;具有如下特點：&lt;/p&gt; 
   &lt;p&gt;- 可在 NVIDIA GTX 1080Ti 上實時運行；&lt;br&gt; - 無需用户額外訓練，即可進行實時換臉；&lt;br&gt; - 通過神經網絡預測和重建高分辨率細節，實現高保真換臉；&lt;br&gt; - 支持 ONNX 和，實時攝像頭模式；&lt;br&gt; - 支持超分辨率和色彩矯正；&lt;br&gt; - 支持使用面部分割 Xseg 模型，即便人臉被遮擋也能輕鬆應對；&lt;br&gt; - 提供 Gradio 交互界面，在瀏覽器中直接操作，無需編寫代碼。&lt;/p&gt; 
  &lt;/div&gt; 
  &lt;p style=&quot;text-align:right&quot;&gt;- 微博&amp;nbsp;&lt;strong&gt;&lt;span&gt;GitHubDaily&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOudvQBGzF&quot; target=&quot;_blank&quot;&gt;英偉達員工百萬財富卻煩惱&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;p&gt;據彭博社報道，英偉達的員工雖然有能力輕鬆購買豪車和豪宅，但漫長的工作時間、頻繁的會議依然壓得他們喘不過氣。&lt;/p&gt; 
    &lt;p&gt;看來老黃此前説的「I don&#39;t fire staff，I torture them into greatness.」（我不開除員工，但我會把他們折磨到變強大）並非玩笑。&lt;/p&gt; 
    &lt;p&gt;儘管如此，難以割捨的股票收益就像「黃金手銬」一樣，使得英偉達員工的流失率遠低於行業平均水平。&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div style=&quot;text-align:right&quot;&gt;
   - 微博 
   &lt;strong&gt;量子位&lt;/strong&gt;
  &lt;/div&gt; 
  &lt;h4&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F6105753431%2FOu28riPHK%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;開源 AI 提示工程師&lt;/a&gt;&lt;/h4&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p&gt;最近，Weavel 團隊受斯坦福 DSPy 項目啓發，推出了 Ape（AI prompt engineer)。&lt;/p&gt; 
     &lt;p&gt;它能自動優化你的提示詞，大大節省你編寫提示詞的時間。&lt;/p&gt; 
     &lt;p&gt;Ape 優化提示詞的步驟如下：&lt;/p&gt; 
     &lt;p&gt;- 分析你的提示詞和數據集生成評估代碼&lt;br&gt; - 運行這些評估代碼，以批量測試提示效果&lt;br&gt; - 從測試結果中獲取反饋意見&lt;br&gt; - 使用貝葉斯優化等統計方法找出最佳提示詞&lt;br&gt; - 結合人類反饋意見，得到最終的提示詞結果&lt;/p&gt; 
     &lt;p&gt;而具體的使用方法也很簡單，感興趣的小夥伴可以查看官網 Ape 手冊：https://weavel.ai/docs/ape&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;p style=&quot;text-align:right&quot;&gt;- 微博 &lt;strong&gt;量子位&lt;/strong&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;媒體觀察&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn816617158%3FserialId%3D8626a75dcd4541f90f2af8f41b896433&quot; target=&quot;_blank&quot;&gt;以人工智能技術應對氣象災害&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;p&gt;總體來看，人工智能技術的特點使其在氣象領域，尤其是應對氣象災害方面有着強大能力優勢和廣闊應用前景。在超強算力下，人工智能可以直接從氣象觀測數據中計算並輸出預報結果；在自主學習下，人工智能可以熟練掌握天氣氣候機理理論，提升預測準確率。正是由於潛力突出，世界氣象組織近年來高度看重對人工智能技術的應用，在其 2024 年至 2027 年的戰略計劃中，將人工智能技術作為推動氣象科技發展的重要力量，特別是計劃推出一個基於人工智能技術的短臨預報示範項目，支持全民早期預警。&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;經濟日報&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Fjjxw%2F2024-08-27%2Fdoc-incmaiqk5922439.shtml&quot; target=&quot;_blank&quot;&gt;「AI 脱衣」圍獵女網紅，專家稱應積極推廣照片防偽技術&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;近年來，AI 技術逐漸走入更多人的生活，但也被一些動了歪心思的人看到商機。新京報貝殼財經記者調查發現，目前，黑灰產平台上存在不少售賣網紅、女星的「AI 脱衣」照片羣組。黑灰產從業者口中，5 元可以「去衣」，20 元實現「視頻換臉」。這條產業鏈上，還有從業者通過吸睛照片引流，再以「會員羣」服務牟利。此外，B 站、小紅書等平台還有視頻作者以「AI 脱衣教程」等標題吸睛。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;貝殼財經&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Froll%2F2024-08-26%2Fdoc-inckyrev9481978.shtml&quot; target=&quot;_blank&quot;&gt;人形機器人的冷與熱：多方入局新賽道，「商用元年」言之過早&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「量產和需求就是雞和蛋的問題，無論是企業還是消費者都對價格很敏感，在技術持續演進的情況下，實現真正的大規模應用還需要有一段時間的博弈。」孟慶虎認為，目前有關人形機器人的初創公司眾多，技術路線、產品形態各異，未來一定會經歷一個大浪淘沙的階段，實現技術集成。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;21 世紀經濟報道&lt;/strong&gt;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2F2024-08-27%2Fdetail-incmaiqi4051154.d.html&quot; target=&quot;_blank&quot;&gt;馬斯克「背刺」硅谷！支持「搞連坐」的加州 AI 監管法案&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
  &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;馬斯克在 X 上發帖聲援，稱這一呼籲十分令人為難且會使一些人沮喪，但是加州應該通過 SB-1047 法案。馬斯克聲稱，過去 20 年間，他一直在推動針對人工智能的立法，就像監管其他技術領域一樣。&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;strong&gt;財聯社&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fishare.ifeng.com%2Fc%2Fs%2F8cMoFn8LV3A&quot; target=&quot;_blank&quot;&gt;1.5 萬人大裁員 Intel 資深 CPU 架構師創業！入局 RISC-V&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 Intel 宣佈規模高達 1.5 萬人的裁員計劃之際，一批擁有豐富經驗的資深 CPU 架構師選擇離開另起爐灶，共同創立了一家名為 AheadComputing 的 RISC-V 初創公司。AheadComputing 由 Debbie Marr、Mark Dechene、Jonathan Pearce 和 Srikanth Srinivasan 四位聯合創始人共同成立，他們此前在 Intel 的工作經驗合計超過 80 年。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;- &lt;/span&gt;&lt;strong&gt;&lt;span&gt;快科技&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F3g.k.sohu.com%2Ft%2Fn816673061%3FserialId%3Da194aecaf61a8f8cd759d5ae3691c1d5&quot; target=&quot;_blank&quot;&gt;「人形機器人+」的未來已來&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;縱然存在諸多難關，「人形機器人+」已是大勢所趨。從政策上看，人形機器人無疑是被重點關注的新賽道。如去年 10 月，工業和信息化部轉發出台指導意見，指出人形機器人有望成為繼計算機、智能手機、新能源汽車後的顛覆性產品，並在關鍵技術突破、產品培育、場景拓展等方面作出系統部署。從技術上看，得益於「腦力」的升級、算力的提高，以及產業鏈的加速形成，機器人的「成人之路」將越走越寬。從產業上看，雖然起步相對較晚，但中國坐擁全球最大機器人應用市場，產業生態豐富，除了在工業製造、危化品生產等領域優先落地，人形機器人「入户」同樣潛力巨大。&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;margin-left:0px; margin-right:0px; text-align:right&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;南方日報&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;開源項目&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKong%2Finsomnia&quot; target=&quot;_blank&quot;&gt;Kong/insomnia&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;299&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bfb38823fbdb7cfb97adc2f1544af002175.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FKong%2Finsomnia&quot; target=&quot;_blank&quot;&gt;https://github.com/Kong/insomnia&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;Insomnia 是一款開源、跨平台 API 客户端，適用於 GraphQL、REST、WebSockets、Server-sent events (SSE)、gRPC 和其他任何 HTTP 兼容協議。&lt;/span&gt;&lt;/p&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;每日一博&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://my.oschina.net/u/5783135/blog/15527256&quot; target=&quot;_blank&quot;&gt;淺析 JVM invokedynamic 指令和 Java Lambda 語法&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Lambda 表達式語言特性引入 Java 語言後，賦予了 Java 語言更便捷的函數式編程魔力 (相對匿名內部類)，同時也讓其更簡潔，畢竟 Java 代碼寫起來囉嗦這點一直被開發者們廣泛詬病。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;本文將從 JVM 和 Java 兩個層面着手，和大家一起深入解析 Lambda 表達式。&lt;/p&gt; 
 &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img alt=&quot;02.jpg&quot; height=&quot;254&quot; src=&quot;https://oscimg.oschina.net/oscnet/02_1724742846495.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
 &lt;hr&gt; 
 &lt;div&gt; 
  &lt;h2&gt;&lt;span style=&quot;color:#27ae60&quot;&gt;&lt;strong&gt;開源之聲&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;&lt;span style=&quot;color:#ffffff&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ff9900&quot;&gt;用户觀點&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FHsZZ3XuZlrlBDRQjesvOQw&quot; target=&quot;_blank&quot;&gt;IBM 中國內部正式通知：關閉部分研發業務；員工訴求 2N 賠償與 6 個月緩衝期&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：曾經有一個轉行的機會，我沒有珍惜，直到 20 年後才會後悔莫及。 // 來自本科在校生&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：緩衝期是啥？&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：可能是類似，帶薪，在崗，不安排工作。目的是給員工找新工作的時間&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：至少有 N+1&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：IBM 這些年發展的也不怎麼樣， 不説以前了，就説現在吧，雲掉隊了，買了紅帽，也並未給自己多少血液，所以看着什麼都是包袱。大膽設想，IBM 在全球還會有很多的這方面的動作的。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 6：IBM 中國哪有什麼研發? 全部都是測試！所謂的搞研發的都是去養老混日子的！&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 7：CDL 只有 1000 多人了嗎&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 8：昨天下雨中午沒去 IBM 食堂吃飯，難道就快要吃不到廣式燒臘了？&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Futm_XtxsGaPy-Rd-zmkLOw&quot; target=&quot;_blank&quot;&gt;微軟收回「40 米砍刀」&lt;span&gt;——&lt;/span&gt;「控制面板」不會被「設置」取代&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：只有控制面板沒有咖喱味了&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：就那垃圾設置有多難用，折騰了小十年一堆高級功能還是得調 win32 入口。&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：你的好友「microsoft」撤回了一把大刀&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 4：控制面板都要失控了哈哈&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 5：只是延長了取代的時間罷了&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FQN1R0JMPgdBaMoWATOoH-g&quot; target=&quot;_blank&quot;&gt;上海電信「崩了」：大量用户反饋寬帶斷網&lt;/a&gt;&lt;/strong&gt;&lt;/h4&gt; 
 &lt;blockquote&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 1：這回和挖掘機，裁員都沒關係吧&lt;/span&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 2：不裁員能崩？今年崩的幾個哪個敢説跟裁員沒關係？&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;觀點 3：會不會是 pcdn 導致的？&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;---END---&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;最後，歡迎掃碼下載「開源中國 APP」，閲讀海量技術報告、程序員極客分享！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d27cc3636c021c266537f4729dc0f84fdc3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309108</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309108</guid>
            <pubDate>Tue, 27 Aug 2024 11:30:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>828 B2B 企業節 2024 於數博會開幕，為數智化供需「架橋鋪路」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;margin-left:0.0001pt; margin-right:0px&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;8 月 27 日，在 2024 中國國際大數據產業博覽會上，第三屆 828 B2B 企業節正式開幕，旨在融通數智供需，加速企業智改數轉，助推中國數智產業實力再升級。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家數據局黨組書記、局長劉烈宏，以及中共貴州省委副書記、貴州省人民政府省長李炳軍出席開幕式並發表致辭。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;284&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c237389f9dbeae0f320bc8e95dd1b0388fb.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;劉烈宏指出，以數字技術為基礎的產業數字化、以企業為載體的數字化成功轉型，對數字經濟創新發展至關重要。國家數據局大力推動企業數字化轉型工作，鼓勵企業加強技術創新和應用落地，構建開放、協同、共享的數據生態體系，不斷為高質量發展注入新動能新活力。828 B2B 企業節聯接產品提供方、企業需求方、產業及行業機構、媒體等，打造企業數字化供需對接、聯合創新、融通發展新模式，為數字產業健康快速發展作出了重要貢獻。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;華為公司常務董事、華為雲 CEO 張平安表示，華為雲在基礎設施、AI 領域持續投入，做好「黑土地」，助力千行萬業數字化、智能化，而 828 B2B 企業節正是「把最合適的產品、經由最短的路徑、以最合理的模式，供給最需要的場景」，為中國企業數字化、智能化構築企業一站式服務平台。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;本屆 828 B2B 企業節由華為與中軟國際、軟通動力、偉仕佳傑、神州數碼、拓維信息、祥雲科技、致遠互聯、百勝軟件、贊奇科技、黑湖科技、歐電雲、玄武雲、賽意信息、用友、金蝶、萬户網絡、萬騰科技 17 傢伙伴聯合發起，聯動全社會 B2B 企業和機構共同參與。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;&lt;strong&gt;萬餘款數智化產品、千餘場全國行動，為企業數智化提供全方位支持&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;華為公司副總裁、華為雲中國區總裁張修徵介紹，本屆 828 B2B 企業節聚焦商機促進、優品優惠、技術聯創、專業服務、人才培養、品牌提升六個維度，攜手夥伴共同推出萬餘款數智化產品，在全國範圍內開展千餘場線上線下行動，覆蓋企業數智化全階段和全場景，助推更多企業實現降本增效和創新發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;508&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fc0d827767ff060a4614622495d5c79eb76.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;今年，圍繞企業快速上雲、數轉達標必備、AI 升級、行業應用四大需求，828 企業應用一站購平台將推出近 600 款精選產品與解決方案，包括 30 多款「小快輕準」產品、400 多款數轉達標必備產品、100 多款 AI 應用以及 50 多款熱門場景解決方案，覆蓋企業數智化全階段、全場景。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中最熱銷的產品和解決方案，包含華為雲 Flexus 系列雲服務、中軟國際企業上雲遷移服務解決方案、軟通動力企業上雲服務解決方案、依柯力新能源汽車 MOM 解決方案、歐電雲 SRP 大中台系列軟件、致遠協同管理軟件、贊奇超高清設計師雲工作站等，更好滿足企業數智化發展所需。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;據透露，未來一個月，828 B2B 企業節將累計在全國開展 1000 多場線上線下行動，包括企業數轉加速、產業生態創新、中企出海、企業快成長、企業服務專屬月五大行動，讓數智化供需雙方充分對接。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，828 B2B 企業節期間，華為和夥伴還將為企業提供數字化諮詢服務、金融服務、人才培訓計劃、綜合服務、品牌提升等多重服務，加速企業快成長；同時，在華為雲官網和雲商店，華為雲和夥伴將推出更多優惠政策、限時折扣、免費試用等活動，助力企業輕鬆上雲、用雲。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;為幫助企業更高效地獲取所需的數智化產品和解決方案，今年，828 企業應用一站購平台，全面升級了「搜-薦-比-試-詢」智能導購和專家服務，更好輔助企業應用採購決策，促成更多好生意。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;張平安表示，中國的數字經濟發展和技術創新，仍需跨越一道道技術鴻溝，數字產業大花園的繁茂，仍需要更多的灌溉。依託政、產、學、研等各個維度的持續投入，華為期待與業界攜手共建智能時代的創新技術新生態，為企業數智化供需「架橋」「鋪路」，為中國企業的數字化轉型持續貢獻力量。&lt;/span&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;&lt;strong&gt;聯合貴州推出「8+4」產業生態創新行動，助力數智產業發展&lt;/strong&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;作為主賓省份，貴州省政府深度參與今年 828 B2B 企業節的打造，聯動數博會、投入本地資源，力促數字生態企業與本地企業的合作交流。貴州省大數據發展管理局局長景亞萍出席開幕式，與華為雲及華為生態夥伴共同發起貴州「8+4」產業生態創新行動。現場還達成了 AI 場景、旅遊大模型等多項簽約，落實「8+4」，助力貴州數智產業繁榮發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;282&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-10a79b8a6b3030150178edbc520f4b46f00.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;基於行動，貴州省政府與華為及生態夥伴共同築巢引鳳，針對貴州省昇騰算力生態、行業大模型生態、人工智能人才生態展開深入合作，在 8 個重要行業（醬酒、煤礦、化工、新材料、鋼鐵、有色、電力、建材）和 4 個重要領域（城鎮智慧化改造、鄉村數字化建設、旅遊場景化創新、政務便捷化服務），共同推進人工智能應用的孵化和落地，打造「8+4」產業，推進人工智能在貴州的全面發展。未來，行動每年將支持 150 家企業完成昇騰適配、4 個行業大模型落地、20 個開源大模型國產化適配，每年培養至少 5000 名人工智能人才。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;margin-left:.0001pt; margin-right:0; text-align:justify&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;張平安表示，華為雲在貴州佈局了全球最大的數據中心，助力貴州成為人工智能算力高地、AI 生態基地和數據生態基地。通過「8+4」行動，雙方將共同推進人工智能應用的孵化和落地，加速人工智能在貴州省的全面發展。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/309092</link>
            <guid isPermaLink="false">https://www.oschina.net/news/309092</guid>
            <pubDate>Tue, 27 Aug 2024 09:42:50 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>淺析 JVM invokedynamic 指令和 Java Lambda 語法</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;h1&gt;一、導語&lt;/h1&gt; 
&lt;p&gt;儘管近年來 JDK 的版本發佈愈發敏捷，當前最新版本號已經 20+，但是日常使用中，JDK8 還是佔據了統治地位。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/01_1724742677064.jpg&quot; alt=&quot;01.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;++你發任你發，我用 Java8：【Jetbrains】2023 開發者生態系統現狀 - &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Flp%2Fdevecosystem-2023%2Fjava%2F%2B%2B&quot; target=&quot;_blank&quot;&gt;https://www.jetbrains.com/zh-cn/lp/devecosystem-2023/java/++&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;JDK8 如此旺盛的生命力，與其優異的兼容性、穩定性和足夠日常開發使用的語言特性有極大的關係，這其中最引人矚目的語言特性莫過於 Lambda 表達式。&lt;/p&gt; 
&lt;p&gt;Lambda 表達式語言特性引入 Java 語言後，賦予了 Java 語言更便捷的函數式編程魔力 (相對匿名內部類)，同時也讓其更簡潔，畢竟 Java 代碼寫起來囉嗦這點一直被開發者們廣泛詬病。&lt;/p&gt; 
&lt;p&gt;本文將從 JVM 和 Java 兩個層面着手，和大家一起深入解析 Lambda 表達式。&lt;/p&gt; 
&lt;h1&gt;二、Java 和 JVM 的關係&lt;/h1&gt; 
&lt;p&gt;JVM 是 HLLVM(高級語言虛擬機)，其參考物理計算機體系架構，設計、實現了一套特定領域虛擬指令集，即：字節碼指令。利用上述虛擬指令集作為中間層，將上層高級語言和底層體系架構解耦以規避繁瑣、複雜的平台兼容性問題，以實現【一次編譯，處處運行】。&lt;/p&gt; 
&lt;p&gt;Java 是基於 JVM 提供的虛擬指令集，設計、實現的一種供開發者使用的高級語言。通過配套的編譯器和標準庫，將文本格式的 Java 代碼編譯成符合 JVM 指令集規範的二進制文件，交付到 JVM 執行。&lt;/p&gt; 
&lt;p&gt;Java 是一種運行在 JVM 平台上的高級語言，但是 JVM 平台絕不是隻能運行 Java 語言。任何人都可以設計自己的語言語法，只要能按 JVM 規範編譯成合法的 JVM 字節碼，即可在 JVM 上運行 (用 Java 命令)。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;++計算機科學領域的任何問題，都可以通過增加一箇中間層來解決。++&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/02_1724742846495.jpg&quot; alt=&quot;02.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;沒有無源之水，Java 語言層面的特性，除非是純語法糖，不然一定離不開特定 JVM 特性的支撐。Lambda 是 Java8 語言特性，那支撐它的便是 JVM invokedynamic 指令。&lt;/p&gt; 
&lt;h1&gt;三、JVM 指令：invokedynamic&lt;/h1&gt; 
&lt;p&gt;在 Java7 之前，JVM 提供瞭如下 4 種【方法調用】指令：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/03_1724742871274.jpg&quot; alt=&quot;03.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上述 4 種字節碼指令各自有不同的使用場景，但是有一個共同的特點：&lt;strong&gt;目標方法一定需要在【編譯期】確定&lt;/strong&gt; 。如下圖，編譯後 4 種指令的參數都指定了目標方法所在的類和簽名以供&lt;strong&gt;運行時鏈接、動態分派&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/04_1724742905513.jpg&quot; alt=&quot;04.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/05_1724742911749.jpg&quot; alt=&quot;05.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這個特點一方面保證了 JVM 語言類型安全，另一方面也限制了 JVM 平台對動態類型高級語言的支持。比如想讓 JavaScript、Python 等動態語言代碼編譯成 JVM 字節碼運行在 JVM 平台上的開銷會比較大，性能也會比較差。&lt;/p&gt; 
&lt;p&gt;為瞭解決上述問題， Java7 引入了一條新的虛擬機指令：&lt;strong&gt;invokedynamic&lt;/strong&gt; 。這是自 JVM 1.0 以來&lt;strong&gt;第一次引入新的虛擬機指令&lt;/strong&gt; ，invokedynamic 與其他 invoke*指令不同的是它允許由&lt;strong&gt;應用級的代碼&lt;/strong&gt;來決定方法解析 (鏈接、分派)。&lt;/p&gt; 
&lt;p&gt;所謂的【應用級的代碼來決定方法解析】需要對照之前的 invoke&lt;em&gt;指令來理解。之前的 4 種 invoke&lt;/em&gt; 指令，在編譯期就必須要明確目標方法並 hardcode 到字節碼中，JVM 在運行時直接解析、鏈接、動態分派硬編碼指定的目標方法。而 invokedynamic 指令通過&lt;strong&gt;回調機制&lt;/strong&gt;來獲取需要調用的目標方法。即先調用業務自定義回調方法做方法決策 (解析、鏈接)，再調用其返回的目標方法。筆者稱之為**【兩階段調用】**。&lt;/p&gt; 
&lt;p&gt;偽代碼對比如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/06_1724742972009.jpg&quot; alt=&quot;06.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;MethdoHandle 為示意，後文有詳述。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/07_1724742995622.jpg&quot; alt=&quot;07.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;偽字節碼&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;++invokevirtual 指令直接調用目標方法，invokedynamic 直接調用回調方法，再調用回調方法返回的方法句柄。++&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;傳統的 invoke*指令直接調用字節碼中指定的目標方法，如 Son.testMethod1，invokedynamic 指令在調用時，先調用字節碼中指定的回調方法，如 Son.dynamicMethodCallback，然後再調用回調方法 (hook) 返回的方法引用。&lt;/p&gt; 
&lt;p&gt;而上述 dynamicMethodCallback 即為【&lt;strong&gt;應用級的代碼或者我們常説的業務代碼&lt;/strong&gt;】，可以在不影響性能的前提下，靈活的幹預 JVM 方法解析、鏈接的過程。&lt;/p&gt; 
&lt;p&gt;總結來説，所謂應用級的代碼其實也是一個方法，在這裏這個方法被稱為&lt;strong&gt;引導方法（Bootstrap Method）&lt;/strong&gt; ，簡稱 &lt;strong&gt;BSM&lt;/strong&gt;。invokedynamic 執行時，BSM 先被調用並返回一個 CallSite(調用點) 對象，這個對象就和 invokedynamic 鏈接在一起。以後再執行這條 invokedynamic 指令都不會創建新的 CallSite 對象。CallSite 就是一個 MethodHandle(方法句柄) 的 holder，方法句柄指向一個調用點真正執行的方法。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;一階段&lt;/strong&gt;：調用引導方法確定並緩存 CallSite(MethodHandle)&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;二階段&lt;/strong&gt;：調用 CallSite(MethodHandle) 字節碼指令比較 low level，除字節碼業務插樁場景外，字節碼指令序列的構造、編排一般都由【高級語言編譯器】來根據語言語法規則自動完成，如 javac。 某種意義上有點類似 Java【動態代理】機制，都是通過調用橫切來動態橋接、靈活決策目標方法。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;四、方法句柄：MethodHandle&lt;/h1&gt; 
&lt;p&gt;前面我們知道 invokedynamic 指令支持通過業務層面自定義的 BSM 來靈活的決策被調用的目標方法，也就是上述的【一階段】。BSM 方法的返回值就是【二階段】調用的方法。&lt;/p&gt; 
&lt;p&gt;但是和 C、Python 等語言不同，Java 中方法/函數不是一等公民，也就是在 Java 中無法將【方法變量】作為方法返回值。&lt;/p&gt; 
&lt;p&gt;為瞭解決這個問題，Java 標準庫提供了一個新的類型 MethodHandle，用於實現類似 C 語言中的方法指針、JavaScript/Python 中方法變量的能力。該 API 和反射 API 呈現的能力相似，但是性能更好。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/08_1724743157173.jpg&quot; alt=&quot;08.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上述為 MethodHandle API 的基本使用，該課題展開又是一篇長文。總之，我們可以用 MethodHandle 來作為【方法變量】，變相的將【Java 方法】提升為【一等公民】，從而可以在 BSM 中用 Java 代碼實現動態編排、決策，返回合適的方法指針。這也是上述&lt;strong&gt;invokedynamic+BSM 機制&lt;/strong&gt;能夠成立的一個基礎。&lt;/p&gt; 
&lt;p&gt;詳見：++&lt;em&gt;秒懂 Java 之方法句柄 (MethodHandle) （&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.csdn.net%2FShuSheng0007%2Farticle%2Fdetails%2F107066856%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://blog.csdn.net/ShuSheng0007/article/details/107066856）&lt;/a&gt;&lt;/em&gt;++&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;段落引用上述【一階段】調用的本質就是得到一個特定的 MethodHandle(方法指針/方法引用)，【二階段】調用就是調用這個 MethodHandle。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;五、Lambda 表達式簡介&lt;/h1&gt; 
&lt;p&gt;Java 的 Lambda 表達式，是傳統的【匿名內部類】特性在特定場景下的平替特性。所謂的特定場景，即我們熟知的 FunctionalInterface。&lt;/p&gt; 
&lt;p&gt;當【匿名內部類】匿名實現的是一個 FunctionalInterface 時，可以用 Lambda 表達式平替。&lt;/p&gt; 
&lt;p&gt;示例如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/09_1724743253473.jpg&quot; alt=&quot;09.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;函數式接口 (Functional Interface) 就是一個有且僅有一個抽象方法，但是可以有多個非抽象方法的接口。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Java 不會強制要求你使用 @FunctionalInterface 註解來標記你的接口是函數式接口，然而，作為 API 作者，你可能傾向使用@FunctionalInterface 指明特定的接口為函數式接口，這只是一個設計上的考慮，可以讓用户很明顯的知道一個接口是函數式接口。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Java Lambda 表達式在語法層面有兩種形式：行內代碼塊、方法引用。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/10_1724743756205.jpg&quot; alt=&quot;10.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;但是在編譯產物中，行內 Lambda 最終會被提取到獨立的靜態方法中。也就是説，在字節碼層面只有【方法引用】一種 Lambda 形式。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/11_1724743772127.jpg&quot; alt=&quot;11.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/12_1724743778785.jpg&quot; alt=&quot;12.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如上圖反編譯結果，兩個行內 Lambda 中的代碼在編譯後被提取到兩個自動生成的方法 lambda$main$0、lambda$main$1，&lt;strong&gt;後續 Lambda 表達式的處理流程都可以收斂，無需區分對待&lt;/strong&gt;。&lt;/p&gt; 
&lt;h1&gt;六、Lambda 表達式實現&lt;/h1&gt; 
&lt;p&gt;Lambda 表達式具體的實現涉及類文件結構、字節碼指令結構、標準庫等多個方面的內容，千頭萬緒。也想不出來什麼通俗易懂的敍述角度，只能是枯燥的對照着字節碼分析了。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/13_1724743813738.jpg&quot; alt=&quot;13.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如上圖，mian 方法中聲明瞭 3 個 Lambda 表達式，反編譯字節碼可以看到字節碼指令流如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/14_1724743830679.jpg&quot; alt=&quot;14.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; 0 iconst_3
 1 istore_1
 2 iconst_3
 3 newarray 10 (int)
 5 dup
 6 iconst_0
 7 iconst_1
 8 iastore
 9 dup
10 iconst_1
11 iconst_2
12 iastore
13 dup
14 iconst_2
15 iconst_3
16 iastore
17 invokestatic #2 &amp;lt;java/util/stream/IntStream.of : ([I)Ljava/util/stream/IntStream;&amp;gt;
20 invokedynamic #3 &amp;lt;applyAsInt, BootstrapMethods #0&amp;gt;
25 invokeinterface #4 &amp;lt;java/util/stream/IntStream.map : (Ljava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;&amp;gt; count 2
30 iload_1
31 invokedynamic #5 &amp;lt;applyAsInt, BootstrapMethods #1&amp;gt;
36 invokeinterface #4 &amp;lt;java/util/stream/IntStream.map : (Ljava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;&amp;gt; count 2
41 invokedynamic #6 &amp;lt;applyAsInt, BootstrapMethods #2&amp;gt;
46 invokeinterface #4 &amp;lt;java/util/stream/IntStream.map : (Ljava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;&amp;gt; count 2
51 invokeinterface #7 &amp;lt;java/util/stream/IntStream.sum : ()I&amp;gt; count 1
56 istore_2
57 return
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;3 個 lambda 表達式對應 3 條 invokedynamic 指令：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/15_1724743882041.jpg&quot; alt=&quot;15.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;第一個 lambda 表達式比較簡單且典型，後續我們以其為抓手展開分析。&lt;/p&gt; 
&lt;h2&gt;invokedynamic 指令參數&lt;/h2&gt; 
&lt;p&gt;invokedynamic 指令參數結構如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/16_1724743908290.jpg&quot; alt=&quot;16.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;++jvms-6.5.invokedynamic++ &lt;em&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.oracle.com%2Fjavase%2Fspecs%2Fjvms%2Fse8%2Fhtml%2Fjvms-6.html%23jvms-6.5.invokedynamic%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-6.html#jvms-6.5.invokedynamic）&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;invokedynamic 指令需要指定其期待&lt;strong&gt;BSM 返回的方法特徵&lt;/strong&gt; (出入參類型) 和&lt;strong&gt;BSM 方法引用&lt;/strong&gt;。該參數以 CONSTANT_InvokeDynamic_info 結構存放在類文件的常量池結構中，invokedynamic 用兩個 byte 寬度的常量池索引號指定。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;CONSTANT_InvokeDynamic_info {
    u1 tag;
    u2 bootstrap_method_attr_index;
    u2 name_and_type_index;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/17_1724743974289.jpg&quot; alt=&quot;17.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;對照字節碼我們可知，Lambda1 相關的 invokedynamic 指定的 CONSTANT_InvokeDynamic_info 序號為 3，得到如下內容：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/18_1724743987856.jpg&quot; alt=&quot;18.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/19_1724743994269.jpg&quot; alt=&quot;19.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;期望的方法名稱和描述符&lt;/h2&gt; 
&lt;p&gt;該 invokedynamic 指令期望 BSM0 方法返回一個如下特徵的方法引用：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IntUnaryOperator anyName()；
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;沒有入參，返回值類型為 IntUnaryOperator 的 MethodHandle。&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;為什麼是返回 IntUnaryOperator 類型呢？因為 IntStream 的 map 方法需要的參數是 IntUnaryOperator 類型。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/20_1724744047712.jpg&quot; alt=&quot;20.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;換句話説，該 invokedynamic 指令希望相應的 BSM 返回一個 IntUnaryOperator 的工廠方法句柄，然後 invokedynamic 指令再調用這個方法句柄，創建出一個 map 方法需要的 IntUnaryOperator 類型的參數。&lt;/p&gt; 
&lt;h2&gt;BSM 方法序號&lt;/h2&gt; 
&lt;p&gt;BSM 方法序號指定了當前 invokedynamic 指令使用的 BSM 方法在 BSM 方法表中的索引。&lt;/p&gt; 
&lt;p&gt;通俗來説，類文件中有一個數組，數組名稱叫 BootstrapMethods。其結構如下：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;BootstrapMethods_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 num_bootstrap_methods;
    {   u2 bootstrap_method_ref;
        u2 num_bootstrap_arguments;
        u2 bootstrap_arguments[num_bootstrap_arguments];
    } bootstrap_methods[num_bootstrap_methods];
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/21_1724744106369.jpg&quot; alt=&quot;21.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/22_1724744122269.jpg&quot; alt=&quot;22.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/23_1724744133955.jpg&quot; alt=&quot;23.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;該 invokedynamic 指令指定的 BSM 為 BSM 數組中的第一個 BSM。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/24_1724744151213.jpg&quot; alt=&quot;24.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;BSM 方法&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/25_1724744176669.jpg&quot; alt=&quot;25.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/26_1724744186111.jpg&quot; alt=&quot;26.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;BSM 方法參數&lt;/h2&gt; 
&lt;p&gt;該 BSM 數據結構指定了 3 個編譯期固定的、靜態的 BSM 方法參數：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/27_1724744236346.jpg&quot; alt=&quot;27.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;第一、第三個參數指定了預期的函數式接口 (FunctionInterface) 的特徵：入參為 int、出參為 int。即上述 IntUnaryOperator。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/28_1724744251042.jpg&quot; alt=&quot;28.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;第二個參數是一個靜態方法引用。如上述，Lambda 表達式在編譯時會被提取到一個自動生成的方法中。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/29_1724744267916.jpg&quot; alt=&quot;29.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/30_1724744278881.jpg&quot; alt=&quot;30.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;至此，invokedynamic 指令具有的發起【一階段調用】的上下文如下&lt;/strong&gt;：&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;具體的一階段調用的 BSM 方法：java.lang.invoke.LambdaMetafactory#metafactory&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;IntStream.map 方法需要的參數類型：IntUnaryOperator&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;編譯器 (javac) 編譯產生的包含 Lambda 表達式代碼內容的靜態方法：lambda$main$0(I)I&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;接下來就是調用 java.lang.invoke.LambdaMetafactory#metafactory 方法，傳遞上述必要的上下文參數，接受 metafactory 方法返回的 IntUnaryOperator applyAsInt() 類型的 MethodHandle 並調用該 MethodHandle，繼而得到 IntStream.map 方法需要的參數：IntUnaryOperator。&lt;/p&gt; 
&lt;h2&gt;LambdaMetafactory# metafactory&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/31_1724744434670.jpg&quot; alt=&quot;31.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如上述，invokedynamic 指令調用上述 metafactory 方法，對照字節碼信息，可以得到如下具體參數表格：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/32_1724744454840.jpg&quot; alt=&quot;32.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;LambdaMetafactory 根據上述上下文，使用 ASM 庫，動態生成了一個如下所示的 IntUnaryOperator 適配類，用於橋接 Lambda 表達式代碼塊到 IntUnaryOperator 類型。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;添加&lt;/em&gt; -Djdk.internal.lambda.dumpProxyClasses=.&lt;em&gt;啓動參數，JDK 會將生成的適配函數式接口的類源碼輸出到工作目錄中。&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;構造 CallSite&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/33_1724744501505.jpg&quot; alt=&quot;33.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;java.lang.invoke.InnerClassLambdaMetafactory#buildCallSite&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;生成 FunctionalInterface 適配類後，基於適配類創建 MethodHandle。該 MethodHandle 體現的代碼邏輯類似如下 Java 代碼：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/34_1724744535719.jpg&quot; alt=&quot;34.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;至此，invokedynamic【一階段】調用已經完成，invokedynamic 指令獲取到了由 LambdaMetafactory#metafactory 作為 BSM 動態決策、動態生成的 IntUnaryOperator&lt;strong&gt;適配類的【工廠方法】(以 CallSite 包裝的 MethodHandle 的形式)&lt;/strong&gt;。&lt;/p&gt; 
&lt;h2&gt;二階段調用&lt;/h2&gt; 
&lt;p&gt;【一階段調用】已經完成，返回了動態決策產生的 CallSite 對象，getTarget 方法可以獲取上述的 IntUnaryOperator 適配類的【工廠方法】。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/35_1724744571147.jpg&quot; alt=&quot;35.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;至此，invokedynamic 指令可以通過如下偽代碼，創建 IntStream.map 方法需要的 IntUnaryOperator 實例。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;IntUnaryOperator intUnaryOperator = (IntUnaryOperator)callSite.getTarget().invoke()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lambda1 的整個運行時解析、鏈接流程完成。&lt;/p&gt; 
&lt;h1&gt;七、Lambda 表達式性能&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/36_1724744627080.jpg&quot; alt=&quot;36.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;經過上述分析我們可以知道，&lt;strong&gt;Lambda1&lt;/strong&gt; 這種&lt;strong&gt;無狀態的、沒有捕獲外部變量 (閉包&lt;/strong&gt;) 的 Lambda 表達式的開銷是很小的，只會在第一次調用時動態生成橋接的適配類，實例化後就通過 ConstantCallSite 緩存。後續所有的調用都不會再重新生成適配類、實例化適配類。&lt;/p&gt; 
&lt;p&gt;但是，&lt;strong&gt;Lambda2&lt;/strong&gt;則不同，因為 Lambda 捕獲、依賴了 (閉包) 外部變量 num，那麼這個表達式就是有狀態的。雖然同樣只是會在第一次調用時動態生成橋接的適配類，但是每一次調用都會使用 num 變量重新實例化一個新的適配類實例。這種場景下，其在性能和形式上就已經和傳統的【匿名內部類】沒有太大差別了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Lambda3&lt;/strong&gt; 本質上和&lt;strong&gt;Lambda1&lt;/strong&gt;一樣，只不過不需要 Java 編譯器在編譯時將 Lambda 代碼語句抽取成獨立的方法。&lt;/p&gt; 
&lt;h1&gt;八、Lambda 表達式和 final 變量&lt;/h1&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/37_1724744716699.jpg&quot; alt=&quot;37.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;當 Lambda 表達式閉包捕獲的局部變量 num 在方法內可變時，編譯器會提示編譯錯誤。這不是 JVM 的限制，而是 Java 語言層面的限制。筆者認為，這種限制沒有技術上的原因，而是 Java 語言設計者刻意的藉助編譯器在阻止你犯錯。&lt;/p&gt; 
&lt;p&gt;假設沒有這個限制，那麼&lt;strong&gt;Lambda 表達式就變成了重構不友好的【位置相關】的代碼塊&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;換句話説，下面兩種代碼執行結果是不一樣的：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/38_1724744763675.jpg&quot; alt=&quot;38.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Lambda 捕獲的 num 的值為 5；&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/39_1724744781066.jpg&quot; alt=&quot;39.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Lambda 捕獲的 num 的值為 3；&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;如果沒有類似的編譯約束，當我們有心或無意的在複雜的業務邏輯中進行了類似的代碼調整時，極易出錯且難以排查。&lt;/p&gt; 
&lt;p&gt;筆者個人見解，歡迎指正。&lt;/p&gt; 
&lt;h1&gt;九、總結&lt;/h1&gt; 
&lt;p&gt;提筆的時候立意高遠，想着要儘可能通俗詳盡的寫清楚所有涉及的技術點，但是越寫越覺得事情不簡單，最後只能是把博客標題從【深入剖析】修改為【淺析】。這塊內容牽涉的面太廣，筆者沒有能力也沒有精力介紹到事無鉅細、面面俱到，只能為大家拋磚引玉，大家可以配合後文【參考資料】多梳理、多實驗，同時在評論區批評指正。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;invokedynamic 指令不是業務開發者使用的。invokedynamic 指令可以用來實現 Lambda 語法，但是它不是隻能用來實現 Lambda 語法。這個指令對於 JVM 語言開發者比如 Kotlin、Groovy、JRuby、Jython 等會比較重要。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;沒有捕獲外部變量 (閉包) 的 Lambda 表達式性能和直接調用沒有差別。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;捕獲外部變量 (閉包) 的 Lambda 表達式性能理論上和【匿名內部類】範式一樣，每次調用都會創建一個對象 (&lt;strong&gt;最壞情況&lt;/strong&gt;)。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;本文使用的反編譯工具為：jclasslib Bytecode Viewer&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplugins.jetbrains.com%2Fplugin%2F9248-jclasslib-bytecode-viewer%EF%BC%89&quot; target=&quot;_blank&quot;&gt;https://plugins.jetbrains.com/plugin/9248-jclasslib-bytecode-viewer）&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;h1&gt;十、附錄&lt;/h1&gt; 
&lt;h2&gt;自動生成的 Lambda2 適配類&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;// $FF: synthetic class
final class LambdaTest$$Lambda$2 implements IntUnaryOperator {
    private final int arg$1;

    private LambdaTest$$Lambda$2(int var1) {
        this.arg$1 = var1;
    }

    private static IntUnaryOperator get$Lambda(int var0) {
        return new LambdaTest$$Lambda$2(var0);
    }

    [@Hidden](https://my.oschina.net/u/437850)
    public int applyAsInt(int var1) {
        return LambdaTest.lambda$main$1(this.arg$1, var1);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;自動生成的 Lambda3 適配類&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;// $FF: synthetic class
final class LambdaTest$$Lambda$3 implements IntUnaryOperator {
    private LambdaTest$$Lambda$3() {
    }

    [@Hidden](https://my.oschina.net/u/437850)
    public int applyAsInt(int var1) {
        return LambdaTest.add(var1);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;參考&lt;/strong&gt;：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Oracle-Java 虛擬機規範 (JDK8)&lt;/strong&gt;--&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.oracle.com%2Fjavase%2Fspecs%2Fjvms%2Fse8%2Fhtml%2F&quot; target=&quot;_blank&quot;&gt;https://docs.oracle.com/javase/specs/jvms/se8/html/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Oracle-Java 語言規範 (JDK8)&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.oracle.com%2Fjavase%2Fspecs%2Fjls%2Fse8%2Fhtml%2Findex.html&quot; target=&quot;_blank&quot;&gt;https://docs.oracle.com/javase/specs/jls/se8/html/index.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;JVM 系列之:JVM 是怎麼實現 invokedynamic 的? | HeapDump 性能社區&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fheapdump.cn%2Farticle%2F3573623&quot; target=&quot;_blank&quot;&gt;https://heapdump.cn/article/3573623&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Java 虛擬機：JVM 是怎麼實現 invokedynamic 的？（上）&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.tencent.com%2Fdeveloper%2Farticle%2F1787369&quot; target=&quot;_blank&quot;&gt;https://cloud.tencent.com/developer/article/1787369&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Java 虛擬機：JVM 是怎麼實現 invokedynamic 的？（下）&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.tencent.com%2Fdeveloper%2Farticle%2F1787371&quot; target=&quot;_blank&quot;&gt;https://cloud.tencent.com/developer/article/1787371&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;【stackoverflow】What is a bootstrap method?&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstackoverflow.com%2Fquestions%2F30733557%2Fwhat-is-a-bootstrap-method&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/questions/30733557/what-is-a-bootstrap-method&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Java 中普通 lambda 表達式和方法引用本質上有什麼區別？&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F51491241%2Fanswer%2F126232275&quot; target=&quot;_blank&quot;&gt;https://www.zhihu.com/question/51491241/answer/126232275&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;理解 invokedynamic&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F6844903503236710414&quot; target=&quot;_blank&quot;&gt;https://juejin.cn/post/6844903503236710414&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cnblogs.com%2Fwade-luffy%2Fp%2F6058087.html&quot; target=&quot;_blank&quot;&gt;https://www.cnblogs.com/wade-luffy/p/6058087.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;09 | JVM 是怎麼實現 invokedynamic 的？（下）-深入拆解 Java 虛擬機-極客時間&lt;/strong&gt;-&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftime.geekbang.org%2Fcolumn%2Farticle%2F12574&quot; target=&quot;_blank&quot;&gt;https://time.geekbang.org/column/article/12574&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;*&lt;strong&gt;文/ 羊羽&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本文屬得物技術原創，更多精彩文章請看：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F&quot; target=&quot;_blank&quot;&gt;得物技術&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;未經得物技術許可嚴禁轉載，否則依法追究法律責任！&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5783135/blog/15527256</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/15527256</guid>
            <pubDate>Tue, 27 Aug 2024 08:58:50 GMT</pubDate>
            <author>原創</author>
        </item>
    </channel>
</rss>