<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Tue, 01 Apr 2025 07:37:54 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>自增主鍵去哪了？--- 一次開發過程中的思考</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;作者：京東零售，王光&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前情提要：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最近新接了一個需求，需要去創建兩張表，其中有一張表需要根據業務 id 和業務類型建立唯一索引，對數據唯一性進行約束。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為涉及到業務嘛，表結構就進行縮略了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;表結構示例如下：

&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CREATE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TABLE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;example_table&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;bigint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;20&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AUTO_INCREMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;自增主鍵&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;bigint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;20&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;業務 ID&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_type&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;tinyint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;業務類型，&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;del&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;tinyint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;刪除標識，0 表示未刪除，1 表示刪除&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;creator&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;varchar&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;50&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;創建人 PIN&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;modify_date&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;datetime&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ON&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;UPDATE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;更新時間&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;create_date&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;datetime&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;創建時間&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
     &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;PRIMARY&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
     &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;UNIQUE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;uk_business_id_and_type&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_type&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ENGINE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;InnoDB&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AUTO_INCREMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CHARSET&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;utf8mb4 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;示例表&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;既然表建立好，那麼就是發揮我們編碼能力的時候了...此處省略一堆編碼時間。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;編碼結束，自測結束，信心滿滿的找前端同學進行聯調。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為聯調嘛，mock 了很多同樣的 business_id 和 bussiness_type 的數據，結果到了數據庫，因為唯一索引的約束，報了一堆錯誤，插入都失敗了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;終於調整了一下 mock 數據，插入成功了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但是發生了一個比較神奇的現象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//78bf408eae380fb0b81825c61211bced.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//338c271c292e1a1eb9649b1fbe1425b8.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主鍵不是連續自增的了~~ 中間丟失的自增主鍵去哪了??&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;關於自增主鍵&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f1f1f&quot;&gt;自增主鍵是我們&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#040c28&quot;&gt;在設計數據庫表結構時經常使用的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;主鍵生成策略&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f1f1f&quot;&gt;，主鍵的生成可以完全依賴數據庫,在新增數據的時候，我們只需要將主鍵設置為 null，0 或者不設置該字段，數據庫就會為我們自動生成一個主鍵值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;首先,我們要知道，自增主鍵保存在哪裏~&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不同的引擎對於自增值的保存策略不同&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.MyISAM 引擎的自增值保存在數據文件中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.InnoDB 引擎的自增值，在 MySQL5.7 及之前的版本，自增值保存在內存裏，並沒有持久化。每次重啓後，第一次打開表的時候，都會去找自增值的最大值 max(id)，然後將 max(id)+步長（建表語句中的指定步長）作為這個表當前的自增值。在 MySQL8.0 版本，將自增值的變更記錄在了 redo log 中，重啓的時候依靠 redo log 恢復重啓之前的值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;瞭解了自增主鍵的保存機制，再瞭解一下主鍵這個&quot;自增&quot;邏輯~&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//e8fd21e0666df00de3f15e2102fb28d8.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;插入一條語句分配自增主鍵 id 值的流程如圖所示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;自增主鍵不連續的情況&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;細心的小夥伴一定發現了~咦，這個 ID=聲明值的話，ID 就可以能被隨意指定了，那麼 ID 就可能存在不是自增的情況了！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;是的，這其實就是第一種自增主鍵不連續的情況。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二種不連續的情況就是我們在聯調中遇到的問題了&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;簡單來做個測試,目前數據就像一開始的圖一樣,id 自增到了 24,下一個插入的應該是 25,那麼執行一條 sql&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;111&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//942a91e603961954b723a3052dfa45fa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;插入成功了一條數據,主鍵是連續自增的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那麼我們模擬一條錯誤的 sql 呢 (`creator`字段指定錯類型)~：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;112&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;mock&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;果然，執行 sql 的時候報出異常：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//087aa0531188ff7876f819f8854c5c7a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;繼續執行一條正確的正常的 sql，插入結果：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//37dc344bca29c059081e3db9b5809d57.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主鍵還是連續自增的。這個發生錯誤為什麼自增主鍵還是連續的呢。我們模擬一下之前聯調遇到的情況，插入一條 sql：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;112&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為 id=26 的數據 buiness_id 和 bussiness_type 跟新插入的這條數據一樣，那麼肯定會因為唯一索引插入不成功，果然，執行結果如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//fb09e9f2a63d4ad434c5fa794a6115a3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那麼，我們修改一下 sql 繼續插入呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;113&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//7537f463e7de6952f74bd8c2bc5f1071.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主鍵發生了&quot;斷代&quot;,27 的主鍵跑丟了...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;明明都是 sql 插入的時候錯誤，為什麼結果會有差異呢，有的時候主鍵會丟失，有的時候主鍵不會丟失呢，想要弄明白這個問題，就需要先明白一下一條 sql 的執行過程：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//d05eab6fd6ae0d3e943ba03f27ca9dda.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏只是針對本文需要關注的點（相信小夥伴對這個執行過程肯定也是非常瞭解的😏）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;所以説，主鍵有沒有丟失的核心關鍵就是有沒有走到，執行引擎有沒有去分配主鍵。一旦走到了分配主鍵就不會進行回滾。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;既然一旦分配了主鍵就不會回滾，那是不是事務回滾之後主鍵也不會回滾至之前的值呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第三種就是這樣，事務回滾也會導致主鍵「丟失」：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;舉個栗子：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;114&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//7d7550262a81f277d811e270818b05c2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;回滾這條語句。並繼續執行上面那條語句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//480441f1e34d00af38d6e43a5f0ff92a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;29 這個 id 就「丟失」了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有好奇的小夥伴就會問了，問什麼 mysql-innodb 不提供一種回滾主鍵 id 的機制呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我理解的是，1、沒有必要 ；2、影響性能；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;自增主鍵鎖並不是一個事務鎖，而是每次申請完就馬上釋放，以便允許別的事務再申請。但在 MySQL5.0 版本的時候，自增鎖的範圍是語句級別。也就是説，如果一個語句申請了一個表自增鎖，這個鎖會等語句執行結束以後才釋放。MySQL5.1.22 版本引入了一個新策略，新增參數 innodb_autoinc_lock_mode，默認值是 1。 1.這個參數設置為 0：表示採用之前 MySQL5.0 版本的策略，即語句執行結束後才釋放鎖。 2.這個參數設置為 1：普通 insert 語句，自增鎖在申請之後就馬上釋放。批量插入數據的語句，自增鎖還是要等語句結束後才被釋放。 3.這個參數設置為 2：所有的申請自增主鍵的動作都是申請後就釋放鎖。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們假設一個場景主鍵 id 是可以回滾的，根據上面的自增主鍵鎖的規則。事務 A 申請了一個自增主鍵 id=29，事務 B 申請了一個自增主鍵 id=30，在申請了之後就會被釋放，如果這個時候事務 A 進行了回滾，事務 B 執行完畢，這個時候就需要將 id 回滾到 29，但是 id30 已經存在表中了。那麼肯定會需要一個類似現在的 redolog,undolog 的&quot;存儲單元&quot;去存儲主鍵 id 的分配情況，如果再有一個事務 C 過來申請主鍵 id，這個時候就會出現很多種情況去考慮，1：我要申請的主鍵 id 是否已經分配出去了。如果已經沒有還好，如果有的話，需要去找到一個允許我插入的最小的 id（這個最小的成本就會比目前直接選擇最大的 id 性能要查很多。）2：我是批量插入，我需要申請一批 id，這種情況想想就很抓馬，因為這一批次中的 id 可能存在多個已經存在的情況。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;而且就算主鍵 id 可以回滾，那麼我插入數據的順序，跟 id 的大小就存在悖論關係了，在業務層面就不能根據 id 去做一些判斷了，這也無疑增加了業務層面的複雜性。所以主鍵 id 是可以回滾是一個 ROI 極低的方案了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在上面的説到的自增主鍵的分配策略也可以想到：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第四種不連續的情況：批量申請的主鍵 id，如果出現沒有使用完，或者批量插入出現問題導致的主鍵 id 不連續。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當然這裏説的批量插入不是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert into example_table values (null,111,1,0,&#39;mock&#39;,now(),now()),(null,112,1,0,&#39;mock&#39;,now(),now());&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這樣的語句，因為這種語句在 sql 解析的時候就可以明確需要插入多少條目，id 也就會直接進行分配到具體的條目。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但是對於 insert...select 這種批量插入語句，因為大部分都是執行多表操作，所以實際操作的條數是不可確定的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在進行分配主鍵 id 的時候，會有一個策略：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;語句執行過程中，第一次申請自增 id，會分配 1 個； &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1 個用完以後，這個語句第二次申請自增 id，會分配 2 個；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2 個用完以後，還是這個語句，第三次申請自增 id，會分配 4 個；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;依此類推，同一個語句去申請自增 id，每次申請到的自增 id 個數都是上一次的兩倍。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;
create table `example_table_2` like `example_table`;
#使用批量插入語句，從 example_table 中讀取數據, 往 example_table_2 中插入數據
insert into example_table_2 select null, business_id, business_type, del, creator, modify_date, create_date from example_table;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這個時候的執行結果如圖:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//68ddf5dc52f04b58075eafa07c7dd343.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那麼按照預期，第一次分配 id=1,第二次分配 id 是[2,3],第三次分配 id 區間是[4,7],第四次分配區間是[8,15]，那麼執行下面語句：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#插入一條數據，預期主鍵 id 應該是 16
insert into example_table_2  values (null,200,1,0,&#39;mock&#39;,now(),now());&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//a834acbb4e615f5e4488152ec66c9cb7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;果然執行結果符合預期結果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這個語句在實際業務中使用的很少，mysql 在這個語句裏面還是有很多設計的，大家可以看看官方文檔詳細的瞭解一下&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F8.0%2Fen%2Finsert-select.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://dev.mysql.com/doc/refman/8.0/en/insert-select.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;還有一種情況是主鍵 id 設置的步長不為 1&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這種情況一般都是發生在表的設計初期，所以出現不自增的話也是符合預期的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;寫在最後&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;MySQL 是作為大家都經常接觸的 DB，相信大家都會有一定的認知，自增主鍵不連續大家肯定也遇到過，這次在聯調過程中遇到這個情況，在跟別的小夥伴分享的時候，突然就想寫一篇文章，文章裏面如果有不正確或者不準確的地方也歡迎大家斧正~説實話，作為一名交易端的研發人員，業務開發任務壓力真的蠻大的，我也迷茫過，如何在這個過程中成長，珍惜我們遇到的問題，將遇到的問題記錄在冊，深追問題，你會發現有很多問題其實真的是因為我們某些知識的薄弱點造成的。然後將我們覺得值得分享的利用碎片時間整理成文章分享出來，其實這篇文章從我開始寫到到最後成稿也歷時 11 天之久，但是不管怎麼樣，只要我們從中有收穫就可以了~最後，希望大家都可以成為自己心目中的技術達人。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;To enjoy is to be young，To enjoy is to be your own goal!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4090830/blog/18043736</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18043736</guid>
            <pubDate>Tue, 01 Apr 2025 07:35:53 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>達闥董事長回應「欠薪」傳聞：的確遇到困難，在戰略調整</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;近期有傳聞稱，人形機器人領域知名獨角獸企業達闥機器人正陷入危機，過去一年陸續出現欠薪，裁員狀況。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;達闥於 2015 年創立，全球總部位於上海，並在北京、成都等地設立分支機構。資料顯示，2023 年，達闥獲得超 10 億元人民幣 C 輪融資。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c9bf85394836549d71df5198f43b88e753c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;針對上述傳聞，達闥創始人、董事長兼 CEO 黃曉慶對 21 世紀經濟報道記者表示，公司業務的確遇到很大困難，為此進行了人員縮減，同時戰略調整，聚焦人形機器人和雲端大腦等業務，目前正在積極融資，拓展業務，並努力解決前員工的「欠薪」問題。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶承認，2024 年開年，公司確實遇到很多困難，科技行業整體融資壓力越來越大，對此公司在 2024 年將發展戰略調整為聚焦人形機器人，並做了一些戰略性的優化和裁減，對北京、上海和深圳各地分公司都進行了一些減員。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「在這樣的情況下面，我們的工作也確實受到很多影響。所以你們看到的很多情況，也代表目前我們公司的員工沒有過去多了。」黃曉慶表示。他稱，公司過去員工數在最多的時候有 800 多人，現在正式的員工有 150 多人，加上顧問有 200 多人，主要分佈在北京、成都等 3 個地方，另外目前正在全面佈局建設的天津基地，已與天津津南區簽署產業投資落地協議，落地「具身機器人云腦操作系統平台」，建設「雲端機器人應用訓練場」，打造「人形機器人公版機總裝線」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶表示，「我們對前員工還是有非常密切的聯繫，我們一定會在一定時間內、在來逐步解決離職補償問題」，「現在真的就是需要時間解決，既要保證公司經營發展，又要逐步解決問題，絕大部分員工都非常理解。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;對於資金鍊斷裂，黃曉慶回應道，2024 年開年，達闥遇到很多困難。「在三年疫情期間，公司都沒有減員。我們在疫情之後遇到的融資困難，很大程度上是因為有一些融資未及時到位和銀行抽貸。當時的融資等外部環境都不太好，加上被美國實體清單後很多美元基金也無法投資，造成了我們那時候的現金流困境。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;最近幾天，產業和市場就被朱嘯虎「正批量退出人形機器人」的消息攪起軒然大波。「我認為今天的人形機器人的產業，類似於 2007 年、2008 年的智能手機產業，屬於黎明時期。並不是要退場的時候，而是要積極進場的時候。」黃曉慶直言。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在黃曉慶看來，朱嘯虎並不明白雲端機器人的概念，「他沒有想到，如果機器人裝上了雲端大腦，配置強大的 AGI 能力的智能體，加上強大的視覺模型，是我們物理世界的鏡像。我認為雲端智能機器人是達到人類智能的核心問題，如果實現了，我認為朱嘯虎會改變觀點。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶對記者透露，「2024 年儘管現金流很緊張，我們通過開拓市場也實現了 6 億元的收入，今年到 2 月底，我們待簽約和準備簽約的訂單金額也達到了 2-3 億元。這足以證明我們達闥機器人還在積極努力，正常營業，不斷進取。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶稱，「達闥只是中國眾多科技創新民營企業的一個縮影，也是人形機器人產業的先行者，科技創新的道路不會是一帆風順的，有坎坷很正常，只要持續努力，砥礪前行，一定會成功。最後由衷期待社會各界能給予幫助、關心和愛護。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342256</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342256</guid>
            <pubDate>Tue, 01 Apr 2025 07:18:51 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 宮鬥內幕曝光</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;近日，基奇·哈吉即將出版的新書《樂觀主義者：山姆·阿爾特曼、OpenAl 與開創未來的競賽》曝光了 OpenAl 董事會在 2023 年解僱首席執行官阿爾特曼的新細節。&lt;/p&gt; 
&lt;p&gt;據報道，時任 OpenAl 首席科學家蘇茨克沃秘密發送給 OpenAI 董事兩封針對阿爾特曼和 OpenAI 總裁布羅克曼的 PDF。其中列舉了數十條涉嫌撒謊或失當行為的例子，最終導致了阿爾特曼被罷免。&lt;/p&gt; 
&lt;p&gt;PDF 中針對阿爾特曼的指控，蘇茨克沃都附上了相關聊天記錄截圖。 &amp;nbsp;其中，最具爆炸性的一條是 OpenAI 首席技術官米拉·穆拉提（Mira Murati）質疑 GPT-4 Turbo 的安全審批是否通過，阿爾特曼回應稱「法務部確認不需通過」。穆拉提查證後發現，公司法務部根本沒説過這話。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1212&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/151009_XrfL_2720166.png&quot; width=&quot;1276&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;OpenAI 原本被設定為一個「不同」的科技公司，它由非營利性董事會管理，使命不是滿足股東，而是確保人工智能為人類利益服務。&lt;/p&gt; 
&lt;p&gt;然而，在實際運營中，董事會逐漸發現，阿爾特曼幾乎擁有對 OpenAI 無可撼動的控制力，董事會越來越擔心阿爾特曼的獨斷專行，一系列信任危機早已產生。&lt;/p&gt; 
&lt;p&gt;例如，在面對董事會要求加強 AI 安全審查、增補專家時，阿爾特曼與布羅克曼採取了拖延戰術。&lt;/p&gt; 
&lt;p&gt;2022 年冬天，董事會正在權衡如何發佈 GPT-4 三項頗具爭議的功能時，阿爾特曼聲稱這三項增強功能均已獲得聯合安全委員會的批准。可當董事會要求審查記錄時，發現實際上只有一項獲得通過。&lt;/p&gt; 
&lt;p&gt;一次董事會會議後，一名 OpenAI 員工在走廊上向獨立董事透露：微軟正在印度測試尚未發佈的 GPT-4，而這一測試並未獲得公司內部聯合安全委員會的批准，更未告知董事會。&lt;/p&gt; 
&lt;p&gt;又如，OpenAI 啓動的創業投資基金原本應歸 OpenAI 管理，但某位董事在一次晚宴中偶然得知，該基金實際由阿爾特曼本人持有，雖然他未從中獲利，這種安排依舊令人震驚。&lt;/p&gt; 
&lt;p&gt;穆拉提也向董事會透露，阿爾特曼和布羅克曼的管理風格已嚴重阻礙她履行職責。布羅克曼表面上向她彙報，卻一有爭議就越過她去找阿爾特曼，讓她在公司的每一天都是「在夾縫中生存」。&lt;/p&gt; 
&lt;p&gt;蘇茨克沃的 PDF 文件加速了事態發展。那天晚上，四位董事與蘇茨克沃一同投下了震撼科技世界的一票，決定解僱阿爾特曼，並將布羅克曼逐出董事會。他們並沒有事先告知微軟，也沒有通知員工。&lt;/p&gt; 
&lt;p&gt;幾小時後，OpenAI 官網發佈了那則短短的聲明：阿爾特曼因「未始終對董事會保持坦誠」被解職。&lt;/p&gt; 
&lt;p&gt;整個硅谷譁然，OpenAI 高層幾近分裂，員工們在混亂中震驚不已——他們沒有得到任何解釋，只知道，「山姆不再擔任 CEO」。&lt;/p&gt; 
&lt;p&gt;穆拉提被任命為臨時 CEO。但她很快意識到，董事會根本沒做好準備——沒有繼任計劃，沒有溝通戰略，甚至沒有和微軟商量。她開始質疑自己是否被當作棋子來使用，並最終站到了阿爾特曼一方。&lt;/p&gt; 
&lt;p&gt;隨後，高管層集體施壓董事會，要求公開解僱理由，否則就一起辭職。僅僅 48 小時，一封員工聯名信已收集到近 800 個簽名，幾乎全員威脅辭職。甚至連穆拉提與蘇茨克沃，也簽了名字。&lt;/p&gt; 
&lt;p&gt;顯然，蘇茨克沃等董事因權力旁落髮起的這場「政變」以失敗告終。他們原本以為，揭露阿爾特曼的管理問題會獲得員工的理解與支持；但現實卻是，一家公司，即便以「人類」為使命，一旦沒有共同信任的基礎，也將瞬間陷入混亂與失控。&lt;/p&gt; 
&lt;p&gt;幾天後，阿爾特曼復職，布羅克曼歸位，風波暫息。而蘇茨克沃和穆拉提隨後也離開了公司，創辦了自己的公司。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;回顧&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired&quot; target=&quot;news&quot;&gt;OpenAI 董事會內訌，CEO 兼創始人 Sam Altman 被逐出公司&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267013/openai-greg-brockman-quit&quot; target=&quot;news&quot;&gt;OpenAI 總裁 Greg Brockman 辭職&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267101/openai-board-discussions-with-sam-altman-return-as-ceo&quot; target=&quot;news&quot;&gt;OpenAI 董事會與 Sam Altman 討論重返 CEO 崗位事宜&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267200&quot; target=&quot;news&quot;&gt;Altman 以訪客身份回到 OpenAI，和公司高管會面談判&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267256/openai-twitch-ceo-shear&quot; target=&quot;news&quot;&gt;Altman 迴歸失敗，OpenAI 董事會聘請 Twitch 前高管擔任 CEO&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267272&quot; target=&quot;news&quot;&gt;OpenAI 前 CEO 和總裁 Sam Altman &amp;amp; Greg Brockman 加入微軟&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267364&quot; target=&quot;news&quot;&gt;OpenAI 超 700 名員工簽署聯名信，要求董事會集體辭職&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267591/sam-altman-returns-ceo-open-ai&quot; target=&quot;news&quot;&gt;Sam Altman 重返 OpenAI 擔任首席執行官&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/268788/altman-returns-as-ceo-openai-has-a-new-initial-board&quot; target=&quot;news&quot;&gt;OpenAI 正式宣佈 Sam Altman 迴歸擔任 CEO&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342255</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342255</guid>
            <pubDate>Tue, 01 Apr 2025 07:16:51 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>英特爾 CEO 陳立武：將剝離非核心資產、需補充流失的人才</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;英特爾首席執行官陳立武表示，該芯片製造商將剝離對公司願景非核心的資產，開發包括定製半導體在內的新產品，以更好地匹配客户需求。陳立武稱，&lt;strong&gt;英特爾需要補充流失的工程人才，改善資產負債表，更好地調整生產流程，以滿足潛在客户的需求&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;週一在拉斯維加斯舉行的英特爾願景大會上，陳立武首次以首席執行官身份公開露面。他沒有具體説明他認為英特爾的哪些業務將不再是其未來的核心。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-50854310c86ed823f44b847f53dfbf57e42.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;「我們還有很多艱苦的工作要做」，他對台下的英特爾客户説。「在有些方面，我們沒有達到你們的期望。」&lt;/p&gt; 
&lt;p&gt;這位在半導體領域經驗豐富的高管正試圖幫助這家曾稱霸行業數十年之久的公司重返榮光。其領導層面臨的一個關鍵問題是，重振英特爾究竟是該保持公司的完整性，還是分拆其關鍵產品和製造業務。&lt;/p&gt; 
&lt;p&gt;陳立武沒有發出他將尋求剝離哪一塊業務的信號。相反，他強調了他需要解決的問題，以便讓這兩個部門都能有更出色的表現。他説，英特爾用於數據中心、特別是人工智能相關的芯片還不夠好。&lt;/p&gt; 
&lt;p&gt;「我們在創新方面落後了」，這位首席執行官説。「我們適應和滿足你們的需求太慢了。」&lt;/p&gt; 
&lt;p&gt;現年 65 歲的陳立武於 3 月 18 日上任，他的任命最初引發了樂觀情緒，並吸引一些投資者重返該股。但此後，隨着科技股的普遍下跌，該公司股價也隨之走低。陳立武發表演講後，英特爾在盤後交易中下跌約 1.2%。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342250</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342250</guid>
            <pubDate>Tue, 01 Apr 2025 07:02:51 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>國家天文台基於通義千問打造國際首個太陽大模型「金烏」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家天文台聯合阿里雲&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fh4eaYrUsKDRHGgYr-kwatA&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;國際首個太陽大模型——「金烏」。「金烏」基於通義千問系列開源模型打造，目前在 M5 級太陽耀斑預報上準確率超 91%，為該級別太陽預報最高水平。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;277&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-98bad688a4b6cb4612ebb30baa4e83c954b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據介紹，基於 Qwen-VL 等模型，「金烏」太陽大模型以超過 90 萬張太陽衞星圖像為樣本完成微調訓練。通過輸入上一時段的太陽物理參數及對應的觀測圖像，「金烏」可預測未來 24h 的耀斑爆發情況。同時，「金烏」可推測出下一時段的物理參數，通過調用擴散模型生成下一時段的太陽模擬圖像。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家天文台懷柔觀測基地主任林佳本表示：「通義大模型在中英文等多語言和圖像識別能力上表現出色，非常適合太陽預報。作為科研機構，相比從頭訓練大模型，基於已有的基模去發展科學模型，是更高效、更具可行性的選擇。未來，‘金烏’太陽大模型還將用於解答‘太陽磁場起源’等‘未解難題’，為我國太陽研究作出貢獻。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此前，中國科學院（簡稱「中科院」）國家天文台「星語」大模型、中科院青藏高原研究所的全球首個水能糧大模型「洛書」以及中科院南海所珊瑚礁多模態大模型「瑤華」，均基於阿里通義千問系列模型打造。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342244</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342244</guid>
            <pubDate>Tue, 01 Apr 2025 06:40:51 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>廣東：每年擇優支持一批開源社區和開源生態中心，每個給予最高 800 萬元資助</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《廣東省推動人工智能與機器人產業創新發展若干政策措施》（以下簡稱《若干政策措施》）新聞發佈會於今日召開，宣佈出台 12 條措施，推動人工智能與機器人產業創新發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中，支持創建國家級、省級人工智能與機器人領域製造業創新中心，省財政按規定分別給予最高 5000 萬元、1000 萬元的資金支持；推動廣州、深圳數據交易所打造國家級數據交易場所。據透露，2024 年廣東人工智能核心產業規模超過 2200 億元，全省人工智能核心企業超過 1500 家。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;375&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-743523a8fadf83a082ea9e61a52125dcbfa.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《若干政策措施》以支持、服務企業為導向，立足於強化資金、人才、用地等要素供給，從支持核心技術攻關、培育優質企業、打造應用場景、培養引進人才、推進標準體系建設等方面提出了 12 條「乾貨」政策措施，匯聚最優資源、集聚最大力量，力爭實現「六個一批」，加快打造全球人工智能與機器人產業高地。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其中，將&lt;strong&gt;攻破一批關鍵核心技術&lt;/strong&gt;。積極面向全球加強協同創新，爭取更多創新資源落户廣東。實施省重點領域研發計劃「新一代人工智能」「智能機器人」等旗艦項目、重大專項，在上述領域部署攻關任務。對國家科技重大專項的人工智能與機器人領域重點項目，省財政按規定給予配套獎勵。支持創建國家級、省級人工智能與機器人領域製造業創新中心，省財政按規定分別給予最高 5000 萬元、1000 萬元的資金支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;培育一批優質企業&lt;/strong&gt;。加快培育人工智能與機器人領域單項冠軍企業、專精特新中小企業，對該領域獲評國家級單項冠軍企業、專精特新「小巨人」企業的，在省級支持的基礎上再「加碼」，鼓勵地市給予獎勵，省財政進一步按照地市獎勵資金 1：1 予以激勵。設立人工智能與機器人產業基金，引導社會資本圍繞產業鏈關鍵核心領域，加強對創新型企業的投融資支持。對重點項目開通「綠色通道」，推動重點項目建設。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;部署一批高能級平台&lt;/strong&gt;。推動現有人工智能與機器人產學研平台能級提升、聯動發展，因時因勢謀劃高能級平台，支持建設開源社區、開源生態中心和相關公共服務平台，提供技術交流共享、算力調度、數據訓練、大模型評測等服務。&lt;strong&gt;每年擇優支持一批開源社區和開源生態中心，每個給予最高 800 萬元資助。&lt;/strong&gt;推動廣州、深圳數據交易所打造國家級數據交易場所，打造廣東數據要素集聚發展區。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;打造一批典型應用場景。&lt;/strong&gt;突出人工智能、機器人在重點領域應用賦能，組織實施「人工智能+」行動，在教育、醫療、交通、民政、金融、安全等領域廣泛拓展應用。組織開展「機器人+」行動，圍繞工業、農業、城市管理、醫療、養老服務、特種作業等領域，挖掘開放應用場景。依託重點產業集羣開展人工智能賦能新型工業化試點，每年擇優支持工業領域大模型和應用解決案例，每個給予最高 800 萬元獎勵。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在引進培育優秀人才方面，把吸聚人工智能與機器人產業所需人才作為「百萬英才匯南粵」行動計劃的重中之重，圍繞人工智能與機器人產業的發展需求和重點任務，支持企業引進&lt;strong&gt;培育一批創新領軍人才、青年拔尖人才&lt;/strong&gt;。在粵港澳大灣區博士博士後創新創業大賽、「創客廣東」大賽、「越來越好」國際設計大賽中設立人工智能與機器人有關專項賽，以賽促新、以賽促創，通過大賽選拔人才，強化技術交流合作。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此外，廣東將&lt;strong&gt;完善一批標準法規制度&lt;/strong&gt;。積極推進標準體系建設，對主導制定人工智能與機器人產業國際標準、國家標準、行業標準的，分別給予資助。探索創新人工智能與機器人「監管沙盒」等包容審慎監管模式，加快建設粵港澳大灣區生成式人工智能安全發展聯合實驗室。加快推動人工智能領域立法，為人工智能產業發展提供製度保障。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342239</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342239</guid>
            <pubDate>Sun, 23 Mar 2025 06:27:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>《生成式人工智能全棧技術專利分析報告》發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;工信部電子知識產權中心&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FNtSh5E23wFGQpKWvFnrxVQ&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;了《2024 生成式人工智能全棧技術專利分析報告》，闡析了生成式人工智能全棧技術創新的新發展新突破，並圍繞模型能力的最新拓展，由算力芯片和軟件框架構成的基礎層、大模型打造的模型層協同提升算力效能的新範式，以及以智能體為標誌的應用創新全面發展，從專利視角去理解、發現生成式人工智能全棧技術創新當前的最新發展態勢，旨在為突破現有短板和尋求創新路徑提供借鑑。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;一是我國生成式人工智能技術棧基礎層（智能芯片和軟件框架）、模型層、應用層深度融合、協同發展，形成了「需求牽引技術、技術賦能場景」的發展格局。生成式人工智能基礎層與模型層技術的創新突破為應用場景的拓展提供了基座支撐和新的解決方案，另一方面應用領域的複雜需求又倒逼、激勵基礎層、模型層的算力升級與算法優化，帶動了我國生成式人工智能全棧技術的創新發展。2017 年至 2024 年間，我國生成式人工智能全棧公開專利共 167,634 項，專利申請年均複合增長 31.6%，專利申請人數量從 2,257 家擴張至 13,075 家，年均增長 24.6%，展現出在國家戰略引領、地方政策助推、技術創新的全面支持下，人工智能技術變革式的創新發展態勢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;264&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-60b12888503c9ab03c5b0cab6e02b555554.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;圖 1 生成式人工智能中國專利申請與授權態勢分析&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;二是我國創新主體更加註重專利質量，以企業為主體的自主創新與產業生態正在形成。《報告》顯示，百度、華為、浪潮、騰訊和阿里巴巴等專利申請數量排名前十的企業類創新主體，其專利申請量之和佔總申請量的 10%，正成為技術突破、效率提升與場景應用的關鍵力量。特別是百度、華為等科技領軍企業實現了從底層算力、模型研發到應用落地的全鏈條創新佈局，構建了智能芯片、深度學習框架、基座大模型、垂直模型和智能體等全棧式產品矩陣，能夠發揮「基礎設施」的稟賦，為經濟建設貢獻更有價值的創新力量。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;表 1 生成式人工智能中國專利申請與授權 Top10 創新主體（企業）&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;213&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ea0f167f86b7c77aeb72caf267a14e32bfc.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;三是生成式人工智能全棧發展呈現出技術創新驅動、應用場景牽引與生態系統支撐的三位一體、協同演進的發展模式，其中代表性創新主體展現了價值傳導、創新引領的核心作用。為解析生成式人工智能技術創新、產業應用和生態支撐三方面互為支點的發展格局，《報告》基於 20 餘項專利指標，探索構建了「AI 專利高質量發展能力測算指標體系」，藉此研判代表性創新主體推動核心技術研發、打造應用場景落地、培育可持續自主生態的梯次性發展戰略。如下圖所示，百度依託基礎層的飛槳框架與崑崙芯片深度適配、模型層的文心繫列大模型，為智能體等產業應用提供動力引擎，形成了自主的技術創新生態，並在 AI 專利高質量發展能力評測中建立了良好的儲備和領先優勢。華為、騰訊和阿里巴巴等企業也已構築了研發、應用和生態互為支撐的穩定發展體系。之江實驗室作為新型研究機構，則展現了基礎研究與應用創新協同、快速推進的發展態勢。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;277&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0eab2e859b58c0a807a328b5b9f8f895b85.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;圖 2 生成式人工智能主要創新主體 AI 專利高質量發展能力分佈&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;四是多模態及推理技術專利的加速申請，印證了 2024 年生成式人工智能模型技術正逐漸具備理解真實世界、進行復雜決策的能力，使我們在通往通用人工智能（AGI）的道路上又進一步。2025 年 1 月，我國 AI 初創公司深度求索發佈的 DeepSeek R1 以技術路徑、成本控制與開源策略的全面創新，為 AI 研發提供了新範式。3 月百度發佈的文心大模型 X1 在性能對齊的情況下，進一步將 API 調用價格降至 R1 的一半。人工智能普惠應用的「大航海時代」即將來臨。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《報告》認為「人工智能+」專項行動的深入推進將進一步加速生成式人工智能作為通用技術的賦能作用，應持續用力生成式人工智能應用創新和開發，併發揮新型舉國體制優勢向科技創新的上游突破，努力追趕基礎算力、基本算法、結構化基礎數據的創新路徑，加快形成新質生產力。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;《報告》建議建立長期多元的戰略規劃，加強國家級基礎算力、高質量數據供給，加強產業創新集羣培育，打造「產學研一體化」「頭雁企業+專精特新」雁陣格局，形成標杆性垂直領域的創新產業集羣。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年國家政府工作報告同時提出「發展新質生產力」和「人工智能+」行動計劃，奠定了生成式人工智能的戰略基礎地位。2025 年政府工作報告繼續提出，持續推進「人工智能+」行動，將數字技術與製造優勢、市場優勢更好結合起來，支持大模型廣泛應用，大力發展智能網聯新能源汽車、人工智能手機和電腦、智能機器人等新一代智能終端以及智能製造裝備。在此之上，生成式人工智能技術創新將更廣泛的與應用場景深度融合，為產業經濟和人們生活賦能。生成式人工智能技術創新與廣泛應用正步入發展的新篇章。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342223</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342223</guid>
            <pubDate>Sun, 23 Mar 2025 05:44:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>百度「文小言」更新：整合最文心大模型 X1 &amp; 4.5、升級全新語音大模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;3 月 31 日，新一期百度 AI Day 上，百度 AI App「文小言」正式宣佈完成品牌煥新與功能升級。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9466c71b41e7ebbebf66064d6748dcb4761.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;主要變化如下：&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1、支持多模型調度&lt;/strong&gt;，整合了最新的文心大模型 X1、文心大模型 4.5 等模型能力，尤其擅長推理計算，推理後不僅能輸出圖文混合內容，還能調用工具完成連續任務的處理；此外還提升多模態理解能力，着重升級圖片理解能力；&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/120215_sXZt_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2、升級全新語音大模型&lt;/strong&gt;：基於全新互相關注意力（cross attention）的端到端語音語言大模型，支持方言對話、複雜知識問答及隨時打斷等，用户可進行語音知識問答或趣味角色扮演。&lt;/p&gt; 
&lt;p&gt;據介紹，此次升級的語音大模型具備構建多垂類助手，DeepQA，RAG 和情感聊天等服務的能力。 模型具備極低的訓練和使用成本，極快的推理響應速度。語音交互時，可將用户等待時長從行業常見的 3-5 秒降低至 1 秒左右；在電話語音頻道的語音問答場景中，調用成本較行業均值下降約 50%-90%。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3、圖片問答能力提升&lt;/strong&gt;：支持多場景文字、語音提問，並進行深度解析。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/120450_a32a_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前，文小言 App 已完成上述功能更新。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342201</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342201</guid>
            <pubDate>Sun, 23 Mar 2025 04:05:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>分佈式數據一致性場景與方案處理分析</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;strong&gt;一、引言&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在經典的 CAP 理論中一致性是指分佈式或多副本系統中數據在任一時刻均保持邏輯與物理狀態的統一，這是確保業務邏輯正確性和系統可靠性的核心要素。在單體應用單一數據庫中可以直接通過本地事務 (ACID) 保證數據的強一致性。&lt;/p&gt; 
&lt;p&gt;然而隨着微服務架構的普及和業務場景的複雜化，原來的原子性操作會隨着系統拆分而無法保障原子性從而產生一致性問題，但業務實際又需要保障一致性，為此 BASE 理論提出了最終一致性來解決這類問題。那麼如何在跨服務、跨數據庫的事務中保證數據最終一致性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;二、CAP 理論與 BASE 理論&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在經典的 CAP 理論中提到一個分佈式系統中，&lt;strong&gt;一致性 (C)&lt;/strong&gt;、&lt;strong&gt;可用性 (A)&lt;/strong&gt;、&lt;strong&gt;分區容錯性 (P&lt;/strong&gt;) 最多隻能同時實現兩點，不可能三者兼顧。實際上這是一個偽命題，必須從 A 和 C 選擇一個和 P 組合，更進一步基本上都會選擇 A，相比一致性，系統一旦不可用或不可靠都可能會造成整個站點崩潰，所以一般都會選擇 AP。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b42ffb0eb9c9333e12a8443adda3349b56e.jpg&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;BASE 理論源於對大規模互聯網分佈式系統實踐的總結，作為 CAP 定理中一致性與可用性矛盾的實踐性補充逐步演化形成。該理論主張在無法保證強一致性的場景下，系統可基於業務特性靈活調整架構設計，通過基本可用性保障、允許短暫中間狀態等機制，&lt;strong&gt;確保數據最終達成一致性狀態&lt;/strong&gt;，從而在分佈式環境中實現可靠服務能力與業務需求的平衡。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;三、一致性失效場景及其解決方案&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;這裏有一個簡化的倉庫上架的流程（在實際業務中可能還會涉及到履約，倉儲庫存等等），體現分佈式系統中可能出現的一致性問題，在分佈式系統中的處理流程可能如下所示：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;1.操作員操作商品倉庫上架&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp; &amp;nbsp;商品在倉儲系統 (WMS) 中上架，寫入倉儲數據庫&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp; &amp;nbsp;倉儲系統通知中央庫存系統 (SCI) 添加可用庫存&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&amp;nbsp; &amp;nbsp;倉儲系統通知交易該商品可以進行售賣&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href=&quot;https://oscimg.oschina.net/oscnet/up-f521737fe2209dfffd38944e4d8a8a58adf.jpg&quot; title=&quot;多服務寫作交互實例&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f521737fe2209dfffd38944e4d8a8a58adf.jpg&quot; alt=&quot;多服務寫作交互實例&quot; title=&quot;多服務寫作交互實例&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;簡化代碼示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@Transactional
public void upper(upperRequest request) {

    // 1. 寫入倉儲數據庫
    UpperDo upperDo = buildUpperDo(request);
    wmsService.upper(upperDo);

    // 2. 調用 rpc 添加中央庫存系統庫存
    SciAInventoryRequest sciInventoryRequest = buildSciAInventoryRequest(request);
    sciRpcService.addInventory(sciInventoryRequest)

    // 3. 發送商品可以售賣的消息
    TradeMessageRequest tradeMessage = buildTradeMessageRequest(request);
    sendMessageToDealings(tradeMessage);

    // 4. 其他處理
    recordLog(buildLogRequest(request))
    return;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;整個時序邏輯拆解到事務層面執行流程如下：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-87eccb1590378bc9970fbd257fa613989fc.jpg&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在第 5 步添加 sci 庫存之前任意一步出現問題，事務都會回滾，對其他系統的影響為 0，所以不存在一致性問題。&lt;/p&gt; 
&lt;p&gt;但是，在此之後出現問題都有可能會出現事務問題。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;調用寫 RPC&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;在分佈式系統中，調用 RPC 一般可以分為着兩類：&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;1.讀 RPC&lt;/strong&gt;：當前數據結構不完整，需要通過其他服務補充數據，&lt;strong&gt;對其他服務無影響。&lt;/strong&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;2.寫 RPC&lt;/strong&gt;：當前業務操作、數據變更需要通知其他服務，&lt;strong&gt;對其他服務有影響。&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;調用寫 RPC 添加 sci 可用庫存可能出現的問題：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;調用處理成功，返回成功。【數據一致】&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;調用處理成功，返回失敗。【數據不一致】&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;對於這種情況，最簡單的做法是&lt;strong&gt;直接操作重試&lt;/strong&gt;，但是需要&lt;strong&gt;下游冪&lt;/strong&gt;等處理，保證同樣的請求效果一致。這裏重試的方式，即重新操作上架，此外也可以直接在 rpc 方法中異步重試機制（這種方式不會阻塞整體流程，但是增大了數據不一致的風險）。如果重試失敗可能需要研發介入排查具體失敗的原因（對於寫 RPC 的接口超時問題，需要研發關注，配置告警或拋出特定異常等）。&lt;/p&gt; 
&lt;p&gt;針對 RPC 方法重試，可以考慮採用本地消息表的方式實現，具體參考&lt;strong&gt;3.3.本地消息表。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;消息發送&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;寫 RPC 調用成功後，會給 trade 服務發送消息，而後提交事務，整個流程結束。&lt;/p&gt; 
&lt;p&gt;Rocket 消息發送有多種方式，不同的方式適用場景不一，一般業務邏輯使用同步發送消息配合重試機制即可，對於一致性要求高的場景，可以考慮事務消息確保消息與本地事務的原子性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-89143ab767ff6f2ebec27f6b20aad114923.jpg&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;同步消息+重試&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;同步消息比異步消息更可靠，比事務消息性能更高是一種廣泛採用的方式。&lt;/p&gt; 
&lt;p&gt;同步消息通過 confirm 機制能保證消息發送成功：生產者發送同步消息後，等待 Broker 返回確認結果（SendResult）。如果 Broker 成功接收並存儲消息，返回成功狀態；否則返回失敗狀態。消息發送失敗時，Rocket 默認自動重試 2 次，支持手動設置，提高消息發送的可靠性。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;DefaultMQProducer producer = new DefaultMQProducer(&quot;ProducerGroup&quot;);
producer.setRetryTimesWhenSendFailed(3); // 設置重試次數為 3 次
producer.start();
Message msg = new Message(&quot;TopicTest&quot;, &quot;TagA&quot;, &quot;Hello RocketMQ&quot;.getBytes());
SendResult sendResult = producer.send(msg); // 同步發送
if (sendResult.getSendStatus() == SendStatus.SEND_OK) {
    log.info(&quot;Send Success: &quot; + sendResult);
} else {
    log.warn(&quot;Send Failed: &quot; + sendResult);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;同步消息+重試機制能儘可能的保證消息成功發送，但是在這種情況下仍可能出現一致性問題：消息成功發送，在提交事務之前，依然可能出現問題（第 8 步出現問題），導致事務回滾，但是下游的消息是無法回滾的。&lt;/p&gt; 
&lt;p&gt;為此在 RocketMQ 中提供了事務消息作為一種解決方案。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;RocketMQ 事務消息&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;RocketMQ 的分佈式事務消息功能，在普通消息基礎上，支持二階段的提交能力。&lt;strong&gt;將二階段提交和本地事務綁定，實現全局提交結果的一致性。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-94083fd5509e83f88ee9f5cc9fb89227c42.jpg&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Rocket 的事務消息可以確保消息和本地事務的原子性，但是實現起來很複雜，性能也比較低，特別是需要實現回查本地事務狀態，這是一個比較複雜的問題，需要&lt;strong&gt;case by case，每一個消息都需要單獨寫邏輯&lt;/strong&gt;，還必須確保&lt;strong&gt;消息體中的數據支持回查本地事務狀態&lt;/strong&gt;，對代碼入侵度較高。&lt;/p&gt; 
&lt;p&gt;在筆者的瞭解中我司事務消息的使用情況不多，對於低併發且強一致性的場景可以考慮使用這種方式。在這個業務場景中使用事務消息可以解決 3.2.1 中出現的消息發送成功但事務回滾的問題，但是這個場景使用這種方式並不太合適。最終結果可能是整體數據一致性提升 2%-3%，但是業務性能下降 20%-30%。&lt;/p&gt; 
&lt;p&gt;spring 提供給了一種事件發佈-訂閲機制可以解決事務回滾但消息依然發送成功的問題，並且性能損失幾乎可以忽略。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;事務事件+同步消息&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;事務事件是指在事務執行的不同階段觸發的事件。這些事件通常用於處理次要邏輯，例如發送領域事件、消息或者郵件等。&lt;/p&gt; 
&lt;p&gt;spring 通過事務管理&lt;code&gt;@Transactional&lt;/code&gt;和事件發佈機制&lt;code&gt;ApplicationEventPublisher&lt;/code&gt;，可以實現類似事務事件的功能。事件發佈後事件廣播器（&lt;code&gt;SimpleApplicationEventMulticaster&lt;/code&gt;）接收事件，根據事件類型匹配所有的監聽者（&lt;code&gt;getApplicationListeners&lt;/code&gt;）。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@Service
public class wmsService {
    @Autowired
    private ApplicationEventPublisher eventPublisher;

    @Transactional
    public void upper(upperRequest request) {

        // 1. 寫入倉儲數據庫
        UpperDo upperDo = buildUpperDo(request);
        wmsService.upper(upperDo);

        // 3. 發佈上架事件
        UpperFinishEvent upperFinishEvent = buildUpperFinishEvent(request)
        eventPublisher.publishEvent(upperFinishEvent);
        return;
    }
}

@Component
public class upperFinishEventListener {
    @TransactionalEventListener(phase = TransactionPhase.AFTER_COMMIT)
    public void handleUpperFinishEvent(UpperFinishEvent event) {
        // 處理事件

        // 1. 調用 rpc 添加中央庫存系統庫存
        SciAInventoryRequest sciInventoryRequest = buildSciAInventoryRequest(event);
        sciRpcService.addInventory(sciInventoryRequest)


        // 2. 發送商品可以售賣的消息
        TradeMessageRequest tradeMessage = buildTradeMessageRequest(event);
        sendMessageToDealings(tradeMessage);

        // 2. 其他處理
        recordLog(buildLogRequest(event))
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;上述流程在寫完 DB，調用寫 RPC 之後，發佈上架完成的事件並提交事務。&lt;code&gt;upperFinishEventListener&lt;/code&gt;訂閲上架完成的事件，併發送可以售賣的消息。&lt;/p&gt; 
&lt;p&gt;通過這種方式可以在事務提交之後再發送消息。通過事務事件保證事務提交，通過重試機制和 confirm 機制確保生產者發送消息成功。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;本地消息表&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;在上述過程中我們選擇使用事務事件+同步消息可以來替代事務消息，但是事務事件對 RPC 調用並不太友好，本地事務提交之後，調用寫 RPC 就一定要成功，不然一致性問題就無法保證。&lt;/p&gt; 
&lt;p&gt;為此可以考慮使用本地消息表這個方案：將需要分佈式處理的事件通過本地消息日誌存儲的方式來異步執行，通過異步線程或者自動 Job 發起重試，確保上下游一致。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-033bc8e919b36504785e9a6d4a50063244d.jpg&quot; alt=&quot;圖片&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;將上述流程抽象為代碼可以實現一個一致性框架，通過註解實現無侵入、策略化、通用性和高複用性的能力。然後本地消息表的方式仍然存在一些問題：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;高併發場景不適用，寫本地消息會帶來延遲可能出現數據積壓，影響系統的吞吐量。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;業務邏輯過程會長時間的佔用事務，造成大事務問題。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;本地消息報文巨大，難以存儲等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;四、總結&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;本文分析的場景都是解決生產者端的一致性問題。結合部分場景探討不同方式的優缺點。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;事務事件+普通消息&amp;amp;重試&lt;/strong&gt; ：適合對實時一致性要求不高、需要異步處理的場景、適合高併發場景，可靠性一般，實現簡單但需手動處理重試和冪等性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;事務消息&lt;/strong&gt; ：適合一致性要求較高的場景（如金融交易），性能較低，實現複雜但能確保消息與事務的原子性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;本地消息表&lt;/strong&gt; ：適合跨服務事務、異步任務處理和最終一致性場景，高併發場景可能出現數據積壓，實現簡單且可靠性高，但存在延遲性和資源佔用問題。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;在分佈式系統中，很難有能 100% 保證一致性的方案，正如《人月神話》中説的「&lt;strong&gt;沒有不存在缺陷的軟件，只是尚未發現缺陷&lt;/strong&gt;」。&lt;/p&gt; 
&lt;p&gt;在上面提到的各種方案中，筆者所在團隊高併發場景很少，所以一般都採用本地詳細表的方式來處理一致性問題，這既可以處理寫 RPC 的調用問題，也能通過消息狀態顯示的統一失敗情況，統一進行重試。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;往期回顧&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;1.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538302%26idx%3D1%26sn%3Df85057dbe21821f68f9d9cd3b72fb8cb%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;從對話到自主行動：AI 應用如何從 Chat 進化為 Agent？開源項目源碼深度揭秘｜得物技術&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;2.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538265%26idx%3D1%26sn%3D46126305e017551fce1c548a0d482d52%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;得物技術部算法項目管理實踐分享&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;3.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538263%26idx%3D1%26sn%3D78e7e307da19e903656c2de2afb96dc9%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;商家域穩定性建設之原理探索｜得物技術&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;4.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538237%26idx%3D1%26sn%3D47a37918d6e1a0123644ea690f7bdaad%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;得物 Android Crash 治理實踐&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;5.&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkxNTE3ODU0NA%3D%3D%26mid%3D2247538099%26idx%3D1%26sn%3Db973a4052f5460509f2bd25ed888995e%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;基於 ANTLR4 的大數據 SQL 編輯器解析引擎實踐｜得物技術&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;文 / 勇者&lt;/p&gt; 
&lt;p&gt;關注得物技術，每週一、三更新技術乾貨&lt;/p&gt; 
&lt;p&gt;要是覺得文章對你有幫助的話，歡迎評論轉發點贊～&lt;/p&gt; 
&lt;p&gt;未經得物技術許可嚴禁轉載，否則依法追究法律責任。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/5783135/blog/18049604</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/18049604</guid>
            <pubDate>Sun, 23 Mar 2025 03:39:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>想讓你多愛自己一些的開源計時器</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//4bfe54bbf29b84acea0df9f2e25ed23c.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;我用過 Pomotroid、Reminders MenuBar、Timer 等眾多優秀、開源的番茄時鐘和計時工具，它們幫我更高效地管理時間，讓我更專注地投入工作。&lt;/p&gt; 
&lt;p&gt;但有一個問題始終困擾着我：&lt;strong&gt;每當計時結束時，我總是習慣性地忽略休息提醒，繼續沉浸在手頭的事情中，直到第二天身體不適才追悔莫及&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;最近，我發現了一款特別貼心的開源計時工具------Catime。它體積小巧、設計簡潔，最大的亮點是支持自定義計時結束後的動作，比如鎖定屏幕強制休息。當然，你也可以設置到點自動關機，但這有些太狠了😅。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//17938bac6b8ef4ef9e99a6cf36f7ab9c.gif&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;GitHub 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvladelaina%2FCatime&quot; target=&quot;_blank&quot;&gt;github.com/vladelaina/Catime&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;我非常喜歡 Catime，因為它總是在提醒我&quot;停下來&quot;，對自己好一點。這種温暖的感覺讓我想起我的老媽：&lt;strong&gt;別人關心你飛得高不高，而媽媽只在意你累不累&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;在與項目作者 vladelaina 聊完 Catime 背後的故事後，我更加確信這是一個充滿愛的開源項目。讓我們一起走進這個「希望你多愛自己一點」的暖心計時器------Catime。&lt;/p&gt; 
&lt;h2&gt;一、介紹&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//e1573ad1f931db02e00af29b8cd436a4.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Catime 是一款輕巧易用的 Windows 計時工具，集時鐘、倒計時和番茄時鐘於一體，支持透明界面和豐富的自定義選項，讓你的時間管理更簡單、更高效。&lt;/p&gt; 
&lt;h3&gt;特點&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;極簡設計&lt;/strong&gt;：界面透明、點擊穿透、任意拖拽縮放、無複雜設置，使用起來輕鬆無負擔。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;靈活計時&lt;/strong&gt;：支持快速預設、自定義時間輸入，提供當前時間、倒計時、正計時和番茄時鐘多種模式。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;超時動作&lt;/strong&gt;：計時結束後可自動執行鎖屏、打開文件/軟件、訪問指定網站、關機或重啓等操作。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;豐富自定義&lt;/strong&gt;：內置 47 種字體和 15 種預設顏色，支持自定義顏色值及調色板選色，實時預覽效果，滿足個性化需求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;操作方式簡單便捷，所有配置均可通過託盤圖標點擊完成：左鍵點擊快速管理時間，右鍵點擊設置選項，一目瞭然。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//d88f03b244e5505e70823b795a4d0974.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;二、來自用户的愛&lt;/h2&gt; 
&lt;p&gt;Catime 擁有如此豐富的功能，並非一蹴而就。&lt;/p&gt; 
&lt;p&gt;最初，作者只是想找到一種方式，來對抗自己&quot;停不下來&quot;的工作節奏，提醒自己定時離開電腦，稍作休息，以實現工作和健康的平衡。（🤨我懷疑，他的靈感可能來自一次遊戲後的反思）&lt;/p&gt; 
&lt;p&gt;因此，Catime 最早的設計非常簡單：&lt;strong&gt;倒計時結束後自動鎖屏&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//f5ac9d000f790f89d2f9a16e9709cfca.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這個小小的功能卻帶來了意想不到的效果：當屏幕突然變黑、需要重新輸入密碼時，用户會自然而然地停下來思考------是不是該趁這機會站起來活動一下？這種温和的&quot;強制中斷&quot;，既不會引起反感，又有效地打破了持續工作的慣性。&lt;/p&gt; 
&lt;p&gt;原本以為軟件做到這裏就足夠了。然而，隨着項目開源和第一個演示視頻的發佈，Catime 意外地收穫了大量用户的奇思妙想、建設性反饋和熱情的支持。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//4fcd913a7d1e7513eeaac1327ff88fe2.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在接下來的四個月中，作者不斷吸收反饋、持續迭代優化，最終將 Catime 打造成了能夠滿足多種場景需求的計時工具。&lt;/p&gt; 
&lt;h3&gt;2.1 工作場景&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;距離下班還有多久？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;只需簡單輸入下班時間即可快速開啓倒計時。例如，18:00 下班，只要輸入 &lt;code&gt;18t&lt;/code&gt; 後回車，Catime 就會實時顯示距離下班還有多久。&lt;/p&gt; 
&lt;p&gt;不僅如此，你還可以將超時後的動作設置為正計時模式，讓時間到達後自動切換為加班計時，直觀記錄加班時長。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//e762aed9c1b6aea988575b81c6db6011.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;PPT 演示計時&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;適用於彙報、演講或會議限時等場景，幫助你精準掌控時間，還不會干擾演示畫面。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//fdef22a30a42611d907fb18b80c533e0.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;2.2 娛樂場景&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;遊戲時間管理&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;全屏遊戲時無需頻繁切換窗口，即可隨時掌握當前時間，避免&quot;玩過頭&quot;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;遊戲時長統計&lt;/strong&gt;：正計時模式實時記錄遊戲持續時間，幫助你合理掌控遊戲時間。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;休息提醒&lt;/strong&gt;：自定義遊戲時長，到點自動提醒，防止沉迷。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;超時強制措施&lt;/strong&gt;：甚至可以設置超時後自動關機，實現真正的&quot;強制下線&quot;。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//80489a1152837b51bd17a5484e98fe32.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;定時訪問網站&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;設置定時打開指定網站，避免遺忘錯過重要時刻，比如，每月 28 日準時打開 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhellogithub.com%2F&quot; target=&quot;_blank&quot;&gt;HelloGitHub 網站&lt;/a&gt;瞭解最新開源動態。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;發佈會提醒&lt;/strong&gt;：活動開始前自動跳轉到發佈頁面，不錯過任何精彩瞬間。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;直播提醒&lt;/strong&gt;：關注的直播 19:30 開始？到點自動打開直播頁面，無需手動操作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//376981f2b82ee21664afcd4e996f0478.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;三、對技術的熱愛&lt;/h2&gt; 
&lt;p&gt;Catime 的作者目前才剛上大二，只會 C 語言。他憑藉對技術的熱愛，用盡所學知識想把 Catime 做好。&lt;/p&gt; 
&lt;p&gt;他選擇基於 Windows API（Win32）和 C 語言開發 Catime，其核心是一個無邊框透明窗口，能夠靈活顯示倒計時、正計時或當前時間。他精心設計了底層實現，既確保了輕量級的特性，又提供了豐富的視覺效果和良好的交互體驗。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//3f955e4cb1367a3fc0bfe6108d98d08b.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;3.1 窗口創建與樣式&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;// 創建特殊樣式的無邊框窗口
HWND hwnd = CreateWindowEx(
    WS_EX_LAYERED | WS_EX_TOOLWINDOW,  // 擴展樣式：分層窗口+工具窗口
    &quot;CatimeWindow&quot;, &quot;Catime&quot;,
    WS_POPUP,  // 彈出窗口樣式（無邊框）
    CLOCK_WINDOW_POS_X, CLOCK_WINDOW_POS_Y,
    CLOCK_BASE_WINDOW_WIDTH, CLOCK_BASE_WINDOW_HEIGHT,
    NULL, NULL, hInstance, NULL
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.2 窗口置頂&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;void SetWindowTopmost(HWND hwnd, BOOL topmost) {
    CLOCK_WINDOW_TOPMOST = topmost; 
    // 獲取當前窗口樣式
    LONG exStyle = GetWindowLong(hwnd, GWL_EXSTYLE);
    
    if (topmost) {
        // 置頂模式處理
        exStyle &amp;amp;= ~WS_EX_NOACTIVATE; 
        SetParent(hwnd, NULL);   
        SetWindowLongPtr(hwnd, GWLP_HWNDPARENT, 0);
        SetWindowPos(hwnd, HWND_TOPMOST, 0, 0, 0, 0,
                    SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE | SWP_FRAMECHANGED);
    } else {
        // 非置頂模式處理
        exStyle |= WS_EX_NOACTIVATE;
        // ... 查找桌面窗口的代碼 ...
        if (hDesktop != NULL) {
            SetParent(hwnd, hDesktop);
        } else {
            SetWindowPos(hwnd, HWND_BOTTOM, 0, 0, 0, 0,
                        SWP_NOMOVE | SWP_NOSIZE | SWP_NOACTIVATE);
        }
    }  
    
    // 應用新窗口樣式並更新
    SetWindowLong(hwnd, GWL_EXSTYLE, exStyle);
    SetWindowPos(hwnd, NULL, 0, 0, 0, 0,
                SWP_NOMOVE | SWP_NOSIZE | SWP_NOZORDER | SWP_FRAMECHANGED);  
    WriteConfigTopmost(topmost ? &quot;TRUE&quot; : &quot;FALSE&quot;);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.3 系統託盤集成&lt;/h3&gt; 
&lt;pre&gt;&lt;code class=&quot;language-c&quot;&gt;void InitTrayIcon(HWND hwnd, HINSTANCE hInstance) {
    // 創建託盤圖標數據結構
    NOTIFYICONDATA nid = {0};
    nid.cbSize = sizeof(NOTIFYICONDATA);
    nid.hWnd = hwnd;
    nid.uID = TRAY_ICON_ID;
    nid.uFlags = NIF_ICON | NIF_MESSAGE | NIF_TIP;
    nid.uCallbackMessage = CLOCK_WM_TRAYICON;  // 自定義消息
    nid.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1));
    strcpy(nid.szTip, &quot;Catime&quot;);
    
    // 添加圖標到系統託盤
    Shell_NotifyIcon(NIM_ADD, &amp;amp;nid);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;所有代碼均已開源，篇幅有限，這裏僅展示核心代碼片段。&lt;/p&gt; 
&lt;h2&gt;四、來自陌生人的温暖&lt;/h2&gt; 
&lt;p&gt;Catime 作者（vladelaina）是一名普通的大二學生，因為熱愛開源，他犧牲了玩耍的時間開發 Catime 開源計時器，併為此傾注了全部熱愛。&lt;/p&gt; 
&lt;p&gt;我相信&lt;strong&gt;充滿愛的開源項目，一定會被更多人所喜愛&lt;/strong&gt;。果不其然，Catime 收穫了許多來自陌生人的關注和支持，幫助它取得了如今的成就（900+ Star、21 位貢獻者）。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//46f02f5d143659a19947d04138158f63.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;特別感謝果核剝殼、it 學無止境、HelloGitHub、玄離 199、_不言不厭、小眾軟件等大佬的推薦。&lt;/li&gt; 
 &lt;li&gt;同時感謝為 Catime 提供精美 Logo 的畫師：貓屋敷梨梨 Official。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//ebfaaf7522924a2674c8447fb8ce804f.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;五、回到夢開始的地方&lt;/h2&gt; 
&lt;p&gt;感謝你耐心讀到這裏，在結束前，我想分享一句 Catime 作者 vladelaina 特別喜歡的話，出自於李笑來的《斯坦福大學創業成長課》：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果你想要的東西還不存在，那就親自動手將它創造出來。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;最初，vladelaina 非常喜歡一款名為 Easy-Cat-Timer（C#）的開源軟件，但遺憾的是它已經 6 年未更新。於是他決定用開源的方式延續這個項目的生命。vladelaina 不止一次大方地承認，Catime 最初的設計靈感正是源於對 Easy-Cat-Timer 的魔改，這也是 Catime 名字的由來，以此向原作者絮醬醬致敬！他再三向我強調，Easy-Cat-Timer 是他夢開始的地方！&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//7337b8cd59084dc4b4ffd2c76485c163.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;GitHub 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxujiangjiang%2FEasy-Cat-Timer&quot; target=&quot;_blank&quot;&gt;github.com/xujiangjiang/Easy-Cat-Timer&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;也是因為 Catime 計時器，vladelaina 有幸與絮醬醬建立了聯繫。絮醬醬是一個非常堅強的女孩子，讓我們一起祝福她早日康復！&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//f7de422046257f9ceeccbbb1f500c2c6.jpg&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;最後，在與 vladelaina 的溝通中，我真切地感受到他對開源那份純粹的熱愛，這正是 HelloGitHub 一直在尋找的「有温度、有故事的開源項目」。也正是因為這份熱愛，Catime 一路走來，才會有無數素未謀面的人用愛為它充值。這一切都是意料之中的，因為 &lt;strong&gt;Catime 生於熱愛，也在傳遞愛！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet//e6d21b2eef0d6b46bc1f09bca323b811.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;GitHub 地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvladelaina%2FCatime&quot; target=&quot;_blank&quot;&gt;github.com/vladelaina/Catime&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;HelloGitHub 不僅分享有趣的開源項目，也希望挖掘開源背後的熱情與故事。我們期待通過代碼與文字，凝聚一羣純粹、有愛的小夥伴，共同打造一個有趣、有温度的開源社區！&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/HelloGitHub/blog/18049135</link>
            <guid isPermaLink="false">https://my.oschina.net/HelloGitHub/blog/18049135</guid>
            <pubDate>Sun, 23 Mar 2025 03:21:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Linux 基金會維護的 Redis 分支 —— Valkey 8.1 發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;自 Linux 基金會及其合作伙伴&lt;a href=&quot;https://www.oschina.net/news/285265/linux-foundation-open-source-valkey&quot;&gt;宣佈 Valkey 作為 Redis 的分支&lt;/a&gt;以來，已經超過一年了。在九月份發佈了 Redis 8.0 之後，Valkey 8.1 今天正式發佈。&lt;/p&gt; 
&lt;p&gt;Valkey 8.1 作為 Redis 分支的小升級剛剛發佈。與 Valkey 8.0 相比，它在性能、可靠性和可用性方面都有所提升。&lt;/p&gt; 
&lt;p&gt;Valkey 8.1 的新性能提升之一是&lt;strong&gt;通過使用 x86 SIMD 指令優化了 bitcount 命令的性能&lt;/strong&gt;。這主要是通過高級向量擴展 2（AVX2）來加速 bitcount。&lt;/p&gt; 
&lt;p&gt;添加 AVX2 優化 bitcount 命令的&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvalkey-io%2Fvalkey%2Fpull%2F1741&quot;&gt;PR&lt;/a&gt;&amp;nbsp;展示了在較大數值上的顯著速度提升：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-7ab6a08fc9e66e97a9217c0f567ff2927b8.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Valkey 8.1 還包含其他性能改進，例如使用新的內存高效哈希表來存儲鍵、使用 TLS 和 I/O 線程，以及其他優化。&lt;/p&gt; 
&lt;p&gt;有關 Valkey 8.1 GA 版本的下載和更多詳細信息，請訪問&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvalkey-io%2Fvalkey%2Freleases%2Ftag%2F8.1.0&quot;&gt;GitHub&lt;/a&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342188/valkey-8-1-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342188/valkey-8-1-released</guid>
            <pubDate>Sun, 23 Mar 2025 03:08:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>比爾蓋茨：醫生和教師是最可能被 AI 取代的兩個職業</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;近期，比爾蓋茨在 The Tonight Show 節目上，與主持人 Jimmy Fallon 談及「AI 未來在人類社會中的意義」，其中比爾蓋茨語出驚人：十年內，AI 將解放很多職業內容。&lt;/p&gt; 
&lt;p&gt;比爾蓋茨在談論中指出，醫生和教師是最可能被 AI 取代的兩個職業。但他也表示「這對社會是有益的」：未來十年內，藉助 AI 的力量，智力或將變得普遍，甚至免費，包括優秀的醫療評估和優秀的學習輔導。此外，比爾蓋茨還表示，在勞動力方面的問題，隨着時間推移也將通過 AI 得到解決。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-054879c0032d8488ec1894c375a0a622af1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;對於 AI 的未來前景，比爾蓋茨則保持樂觀的心態看待，其認為「哪怕現在從零創業」，他依然選擇以 AI 為核心的初企，他解釋「只要有資金，任何人都能從一個小點子進行 AI 領域創業」。同時，比爾蓋茨也鼓勵年輕人，在 AI 領域勇敢一點，其還調侃表示，「因為你們能以比我更新鮮的視角應對這個問題」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342186/bill-gates-says-ai-replace</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342186/bill-gates-says-ai-replace</guid>
            <pubDate>Sun, 23 Mar 2025 02:58:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>2025 年全球 GenAI 支出將達到 6440 億美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Gartner 公司&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2025-03-31-gartner-forecasts-worldwide-genai-spending-to-reach-644-billion-in-2025&quot; target=&quot;_blank&quot;&gt;預測&lt;/a&gt;，2025 年全球生成式人工智能 (GenAI) 支出預計將達到 6440 億美元，相較 2024 年增長 76.4%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;報告指出，硬件將佔據 2025 年生成式 AI 支出的大頭，預計將佔到 80%。具體來説，設備支出將達到 3983 億美元，增長率高達 99.5%；服務器的支出將達到 1806 億美元，增長率為 33.1%；軟件支出則相對較少，僅為 372 億美元，但增長率仍高達 93.9%；服務支出預計為 278 億美元，增長幅度更是達到 162.6%。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;241&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c26e2c800306d582ba2fdf5198e44a94b23.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Gartner 分析師 John Lovelock 表示，設備市場的迅猛增長主要是由供應方驅動，而非需求方。儘管消費者和企業並不急於尋求 AI 設備，製造商卻積極推出相關產品。他預測到 2027 年，幾乎所有的個人電腦都將是 AI 驅動的。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;雖然硬件在生成式 AI 支出中佔據主導地位，Lovelock 指出，隨着市場的發展，這一比例可能會繼續加大。未來，生成 AI 功能將越來越多地嵌入現有軟件中，企業需要重新評估其技術預算和基礎設施規劃。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;然而，Gartner 的報告也指出，許多企業內部的生成式 AI 項目未能如預期那樣成功。造成這一現象的主要原因有三：數據質量不足、員工在使用新技術上存在困難以及項目無法帶來足夠的投資回報。這些問題揭示了企業在推進生成 AI 時面臨的挑戰，更多的是組織內部的準備情況，而非技術本身的侷限。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 2025 年，企業預計將從雄心勃勃的內部項目轉向更加成熟的商業解決方案，以求得更可靠的實施和回報。技術領導者們應優先考慮那些將生成式 AI 功能嵌入到現有系統中的供應商解決方案，而非從頭開始開發定製應用程序。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;隨着生成式 AI 支出向 6440 億美元的加速發展，成功的關鍵不在於支出量的增加，而在於投資與組織準備的協調，克服主要的失敗因素，從而最大化這一快速發展的技術領域所帶來的價值。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342183/genai-spending-644-billion-2025</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342183/genai-spending-644-billion-2025</guid>
            <pubDate>Sun, 23 Mar 2025 02:53:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>朱嘯虎再談 AI：所有 AI 應用都是「套殼」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;3 月 31 日下午，2025 中關村論壇年會「AI 未來論壇：創新投資全球化」會議上，在爭議之下的朱嘯虎發表演講。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;982&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/104238_OtlY_2720166.png&quot; width=&quot;2522&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;朱嘯虎表示，反思中國互聯網和創投過去 20 年的歷史，互聯網 20 年經歷過很多風口，當年進入泡沫期，然後被嘲笑。如今，AI 產業也是如此，在「死亡谷當中又孕育着希望」，雖然蘋果然很酷很快很炫，但是商業化做得非常不好，而微軟卻做得很好。&lt;/p&gt; 
&lt;p&gt;「確實，今年底層模型成熟以後，我們發現，很多 AI 應用公司的收入開始爆發性增長，過去 6 個月，中國有非常多的創業公司，每週有差不多環比增長 10% 以上，月環比增長 20% 以上。」朱嘯虎稱，雖然今天數字還比較小，但是增長速度類似於當年團購早期增長速度，「這是非常讓我興奮的」。他還認為，所有的 AI 應用都是套殼應用，關鍵是如何建立長期壁壘，深度整合工作流/編輯工具；專有硬件/IP 和數據。必須人工交付的苦活累活。AIGC 應用重要的不是生成能力，而是編輯能力，交付結果的能力。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;948&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/104305_kATw_2720166.png&quot; width=&quot;2508&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/104354_6bnq_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;朱嘯虎表示，DeepSeek 完全不考慮商業化，甚至把用户都讓給生態，才能讓合作伙伴迅速堅決地全力擁抱 DeepSeek。所以這是為什麼騰訊全力擁抱 DeepSeek，騰訊是 DeepSeek 開源的最大受益者。這也符合科技投資的特點，就是科技沒成熟之前，很難商業化，但是科技成熟之前，迅速平權，要思考科技平權之後誰會受益。&lt;/p&gt; 
&lt;p&gt;「騰訊就迅速的超越了以前的所有的大模型，騰訊確實有很大優勢。所以我們一直建議，創業公司不要浪費一分錢去訓練底層模型，全力擁抱開源模型，全力擁抱 DeepSeek。」朱嘯虎稱。他強調，「AI 應用就是沒有壁壘，説有壁壘是忽悠人的，要在非 AI 能力上建立壁壘。」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342180</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342180</guid>
            <pubDate>Sun, 23 Mar 2025 02:44:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Runway 發佈 AI 視頻生成模型 Gen-4</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;AI 初創公司 Runway 發佈了其最新研發的 &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frunwayml.com%2Fresearch%2Fintroducing-runway-gen-4&quot; target=&quot;_blank&quot;&gt;AI 視頻生成模型 Gen-4&lt;/a&gt;&lt;/u&gt;。該公司聲稱，&lt;strong&gt;這是目前為止保真度最高的 AI 驅動視頻生成工具之一&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/103349_lgfa_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;新發布的 Gen-4 模型現已開始向 Runway 的個人及企業客户推送。據 Runway 介紹，&lt;strong&gt;該模型的核心優勢在於能夠在不同的視頻場景中保持角色、地點和物體的高度一致性，維持「連貫的世界環境」&lt;/strong&gt;，並且能夠從場景內的不同視角和位置重新生成元素。&lt;/p&gt; 
&lt;p&gt;Runway 在其官方博客文章中指出：「Gen-4 能夠有效利用視覺參考資料，並結合用户的文本指令，創造出風格、主體、地點等要素保持一致的新圖像和視頻，整個過程無需進行模型微調或額外的專門訓練。」&lt;/p&gt; 
&lt;p&gt;Runway 公司獲得了包括 Salesforce、谷歌和英偉達在內的知名投資機構的支持，專注於提供包括 Gen-4 在內的一系列 AI 視頻創作工具。然而，在 AI 視頻生成這一競爭激烈的賽道上，Runway 面臨着來自 OpenAI 和谷歌等科技巨頭的強勁挑戰。為了在市場中脱穎而出，Runway 採取了差異化競爭策略，不僅與一家好萊塢大型電影製片廠達成了合作協議，還特別撥出數百萬美元資金，用於資助那些運用 AI 生成視頻技術進行創作的電影項目。&lt;/p&gt; 
&lt;p&gt;具體到 Gen-4 的功能，Runway 表示，用户只需提供角色的參考圖像，模型便能在不同的光照條件下生成外觀持續一致的角色。在構建具體場景時，用户可以上傳主體的圖像，並輔以文字描述，明確説明希望生成的鏡頭構圖要求。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e634fb78715253367d10f9b09090553ffa0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Runway 在博客中進一步強調：「Gen-4 在生成具有高度動態感和逼真運動效果的視頻方面表現卓越，同時在主體、物體和風格的一致性、對用户指令的精準遵循度以及對現實世界規律的理解方面，均達到了同類頂尖水平。」公司還宣稱，「Runway Gen-4 的發佈，也標誌着視覺生成模型在模擬真實世界物理規律的能力方面取得了一個重要的里程碑。」&lt;/p&gt; 
&lt;p&gt;如同當前所有的視頻生成模型一樣，Gen-4 也是通過對海量的視頻數據進行訓練而成的。通過學習這些數據中的模式，模型得以生成全新的合成視頻片段。然而，Runway 方面拒絕透露其訓練數據的具體來源，部分原因是出於保護商業競爭優勢的考量，但也因為訓練數據的細節往往是潛在知識產權訴訟的敏感地帶。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342172/runway-gen-4</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342172/runway-gen-4</guid>
            <pubDate>Sun, 23 Mar 2025 02:35:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 宣佈將開源推理模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;今日凌晨，OpenAI CEO Sam Altman &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fsama%2Fstatus%2F1906793591944646898&quot; target=&quot;_blank&quot;&gt;正式宣佈&lt;/a&gt;&lt;/u&gt;，將在未來幾個月內推出一款具備推理能力的強大開放權重語言模型，並期待與開發者共同探索如何最大化其潛力。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;3425&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/102526_AIW4_2720166.png&quot; width=&quot;1289&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;據 Altman 透露，這是自 GPT-2 以來 OpenAI 首次計劃發佈開放權重語言模型。他坦言，雖然這一想法已醖釀許久，但此前其他優先事項佔據了主導地位。如今，發佈這款模型的時機變得尤為重要。&lt;/p&gt; 
&lt;p&gt;作為參考，開放權重（open weight）是指將 AI 模型（尤其是神經網絡）的訓練參數（即權重）公開，供公眾使用、檢查或進一步開發。用户可以在這些權重的基礎上進行修改，並將修改後的權重重新分發。雖開放權重不能完全等同於開源，但它是開源理念在 AI 領域的一種延伸和部分實現，包括此前宣稱開源的 DeepSeek V3/R1 同樣只開放了權重。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-55e590a06855f01c15be650dd11cf6c5773.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在正式發佈前，OpenAI 將依據其「準備框架」對模型進行評估，確保其安全性與可靠性。考慮到模型發佈後可能被修改，團隊還將開展額外測試與優化工作。為進一步完善開發流程，OpenAI 計劃舉辦一系列開發者活動，以收集反饋並展示早期原型：首場活動將於數週後在舊金山啓動，隨後在歐洲和亞太地區陸續展開。&lt;/p&gt; 
&lt;p&gt;Sam Altman 剛剛還發文表示：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;我們不會做任何愚蠢的事情，比如説我們的平台月活用户超 7 億後，就不能使用我們的開源模型。我們希望每個人都使用它。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;此外，當地時間 3 月 31 日，&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/news/342164/openai-raises-40b&quot;&gt;OpenAI 宣佈完成了一輪規模巨大的私募融資&lt;/a&gt;&lt;/u&gt;，融資金額高達 400 億美元（約合 2902 億人民幣），公司估值在融資完成後達到 3,000 億美元。這被認為是有史以來規模最大的私募融資輪之一。&lt;/p&gt; 
&lt;p&gt;據 OpenAI 官方信息顯示，此次融資由軟銀集團領投。此外，微軟、Coatue、Altimeter 和 Thrive 等公司也參與了本輪投資。而據 CNBC 援引知情人士消息稱，本次融資中有 180 億美元將用於 OpenAI 的 Stargate 項目基礎設施建設。&lt;/p&gt; 
&lt;p&gt;附上報名鏈接 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fopen-model-feedback&quot; target=&quot;_blank&quot;&gt;https://openai.com/open-model-feedback&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342166/openai-open-model</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342166/openai-open-model</guid>
            <pubDate>Sun, 23 Mar 2025 02:21:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 完成 400 億美元融資，投後估值達 3000 億美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenAI &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fmarch-funding-updates%2F&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;完成新一輪融資 400 億美元，投資後估值 3000 億美元。此次融資由軟銀集團領投，其他參與者還包括微軟、Coatue、Altimeter 和 Thrive 等早期投資者。這也是 OpenAI 歷史上最大規模的私募融資之一。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「這使我們能夠進一步推動 AI 研究的前沿，擴展我們的計算基礎設施，併為每週使用 ChatGPT 的 5 億用户提供日益強大的工具。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;我們很高興能與軟銀集團合作——很少有公司像他們一樣懂得如何擴大變革性技術的規模。他們的支持將幫助我們繼續構建 AI 系統，推動科學發現、實現個性化教育、增強人類創造力，併為造福全人類的 AGI 鋪平道路。」&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;337&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ac0d294218e9b370a6e96a81705d9ce7457.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;CNBC 援引一位知情人士的話稱，融資中的約 180 億美元將用於 OpenAI 雄心勃勃的星際之門（Stargate）基礎設施項目，該項目旨在在美國各地建立一個 AI 數據中心網絡。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342164/openai-raises-40b</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342164/openai-raises-40b</guid>
            <pubDate>Sun, 23 Mar 2025 02:16:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>MCP 是 USB，但 ANP 可能是 HTTP</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;MCP 火了！&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#3c3c43&quot;&gt;MCP（Model Context Protocol ，模型上下文協議）是一個&lt;/span&gt;由 Anthropic 發佈&lt;span style=&quot;background-color:#ffffff; color:#3c3c43&quot;&gt;的開放協議，使 LLM 應用能夠與外部數據源和工具無縫集成。無論是構建 AI 驅動的 IDE、增強聊天界面，還是創建自定義 AI 工作流，MCP 都提供了一種標準化方式，將 LLM 與所需的上下文連接起來。&lt;/span&gt;在模型調用工具資源方面已經成為行業事實標準。&lt;/p&gt; 
&lt;p&gt;幾天前，OpenAI&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/news/341240/openai-agents-sdk-mcp&quot;&gt;宣佈&lt;/a&gt;其智能體 ——OpenAI Agents SDK 已支持大模型上下文協議 MCP，並表示稱正在為 OpenAI API 和 ChatGPT 桌面應用程序開發 MCP 支持。有了 OpenAI 的支持，未來國內外巨頭大概率會積極跟進。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;也就是説，基本可以確定不會有第二個 MCP 了。但是要説智能體通信協議，還是有機會的。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;杭州比特智元 CEO、智能體通信協議 ANP 作者常高偉認為，&lt;span&gt;MCP 不是為智能體而設計，它是為模型連接外部資源和工具而設計的。&lt;/span&gt;而且 MCP 本身設計存在一些問題，比如複雜性問題，客户端和服務器耦合問題，分佈式身份鑑權問題等，需要解決。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;308&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6c3c8a516193a174b51b3ffdb74727a20ab.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前在&lt;strong&gt;智能體通信領域，&lt;/strong&gt;比較完備的開源項目，除了 MCP，可能就是 ANP 了。&lt;/p&gt; 
&lt;p&gt;ANP（AgentNetworkProtocol）是為智能體網絡（Agentic Web）設計的開放協議框架，實現了去中心化的身份認證，能夠讓任意兩個智能體進行連接。同時設計了一個智能體描述規範，讓智能體之間能夠進行更加高效的數據交換與協作。&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span&gt;ANP 與 MCP 與最大的區別，就在於世界觀的差異：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span style=&quot;color:#021eaa&quot;&gt;MCP 是以模型為核心（Model-Centric），整個互聯網都是它的上下文與工具。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;span style=&quot;color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span style=&quot;color:#021eaa&quot;&gt;ANP 是以智能體為核心（Agent-Centric），每個智能體具有同等的地位，組成一個去中心化的智能體協作網絡。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;ANP 不是跟風項目，已經有一年了，比 MCP 還要更早開源，可以説全球最早發佈的面向智能體的開源通信協議。&lt;/p&gt; 
&lt;p&gt;甚至有人認為，&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;MCP 是 USB，ANP 依然有成為 HTTP 的機會&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;。&lt;/span&gt;是這樣嗎？&lt;/p&gt; 
&lt;p&gt;4 月 3 日，開源中國 OSCHINA 將邀請&lt;strong&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;常高偉&lt;/span&gt;&lt;/strong&gt;做客「OSC 開源社區」視頻號直播欄目《技術領航》，聊一聊智能體通信協議 ANP，介紹 ANP 的設計與理念，以及與爆火的 MCP 的區別，並手把手教大家使用 ANP 協議以及相關的 SDK，快速的構建一個支持 ANP 的 WebAgent，讓其他智能體快速訪問。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;微信掃碼，預約直播：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;821&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-69a8c61bd54127b4e973b28e377f255b474.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;strong&gt;直播主題：&lt;/strong&gt;聊聊智能體通信協議：ANP 與 MCP&lt;/p&gt; 
  &lt;p&gt;&lt;strong&gt;時間：&lt;/strong&gt;4 月 3 日週五 19:00-20:00&lt;/p&gt; 
  &lt;p&gt;&lt;strong&gt;平台：&lt;/strong&gt;視頻號 「OSC 開源社區」&lt;/p&gt; 
  &lt;p&gt;&lt;strong&gt;嘉賓：&lt;/strong&gt;常高偉，ANP 開源技術社區發起人，智能體通信協議 ANP 作者，杭州比特智元 CEO，前阿里巴巴高級技術專家&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p&gt;&lt;strong&gt;直播亮點&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;揭秘智能體通信協議 ANP 的底層邏輯&lt;/li&gt; 
  &lt;li&gt;深度解讀：ANP 與 MCP 的核心差異&lt;/li&gt; 
  &lt;li&gt;手把手教學打造服務 AI 智能體的 WebAgent&lt;/li&gt; 
  &lt;li&gt;從協議原理到代碼落地的完整閉環&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;另外，我們還建了一個交流羣，一起聊聊自己喜歡的開源項目～～當然啦，如果你有什麼特別棒的開源項目，可以推薦過來呀～&lt;/p&gt; 
 &lt;div style=&quot;text-align:left&quot;&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0e7c43c0b0553350855a379af00c6c7c15d.jpg&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;本次直播得到了諸多社區或組織的大力支持，在此特別表示感謝：&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#021eaa&quot;&gt;&lt;strong style=&quot;color:#3451b2&quot;&gt;Agent Network Protocol&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;Agent Network Protocol (ANP) 旨在成為智能體互聯網時代的 HTTP。願景是定義智能體之間如何連接，為數十億智能體構建一個開放、安全、高效的協作網絡。&lt;strong&gt;微信&lt;/strong&gt;: flow10240&lt;/p&gt; 
  &lt;p style=&quot;color:#3c3c43; margin-left:0; margin-right:0; text-align:start&quot;&gt;官網：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fagent-network-protocol.com%2F&quot; target=&quot;_blank&quot;&gt;https://agent-network-protocol.com/&lt;/a&gt;&lt;/p&gt; 
  &lt;div style=&quot;text-align:left&quot;&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#021eaa&quot;&gt;&lt;strong&gt;Gitee&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Gitee（碼雲）是開源中國於 2013 年推出的基於 Git 的代碼託管平台、企業級研發效能平台，提供中國本土化的代碼託管服務。&lt;br&gt; 目前，Gitee 已經有超過 1350 萬名開發者，累計託管超過 3600 萬個代碼倉庫，是中國境內規模最大的代碼託管平台。同時，旗下企業級 DevOps 研發效能管理平台 Gitee 企業版已服務超過 36 萬家企業。&lt;/p&gt; 
     &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;網址：&lt;a href=&quot;https://gitee.com/&quot;&gt;https://gitee.com/&lt;/a&gt;&lt;/p&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;hr&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《技術領航》是開源中國 OSCHINA 推出的一檔直播欄目，旨在為&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;開源軟件、商業產品、前沿技術、知名品牌活動等各類項目&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供一個展示平台，每週五晚上開播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;欄目邀請項目的創始人、核心團隊成員或資深用户作為嘉賓，通過路演式直播分享項目的亮點和經驗，有助於提高項目的知名度，吸引更多的用户和開發者關注。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你手上也有好的項目，想要跟同行交流分享，歡迎聯繫我，欄目隨時開放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;537&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4dd54c1b0b817689ceefa15aa66d79cfae8.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3859945/blog/18044520</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18044520</guid>
            <pubDate>Sat, 22 Mar 2025 10:43:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>開源堡壘機 JumpServer 漏洞通知及修復方案（JS-2025.03.31）</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;2025 年 3 月 31 日，JumpServer 開源項目組&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fmq1YKV1oGIqYjpY9AR2xCg&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;&lt;/u&gt; CVE 編號為 「CVE-2025-27095」 的漏洞通知及修復方案。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;漏洞介紹：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;JumpServer 用户在連接 Kubernetes 資產時，可能存在 Kubernetes 認證信息泄漏的風險，CVE 編號為 CVE-2025-27095。&lt;/p&gt; 
&lt;p&gt;漏洞詳情：&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjumpserver%2Fjumpserver%2Fsecurity%2Fadvisories%2FGHSA-5q9w-f4wh-f535&quot; target=&quot;_blank&quot;&gt;https://github.com/jumpserver/jumpserver/security/advisories/GHSA-5q9w-f4wh-f535&lt;/a&gt;&lt;/em&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;以上漏洞影響版本為：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JumpServer v3 版本：&amp;lt;=v3.10.17 版本&lt;/li&gt; 
 &lt;li&gt;JumpServer v4 版本：v4.0.0-v4.6.0 版本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;安全版本為：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JumpServer v3 版本&amp;gt;=v3.10.18 版本&lt;/li&gt; 
 &lt;li&gt;JumpServer v4 版本&amp;gt;=v4.7.0 版本&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;修復方案&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;永久修復方案：升級 JumpServer 軟件至上述安全版本。&lt;/li&gt; 
 &lt;li&gt;臨時修復方案：取消所有用户的 Kubernetes 資產授權。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;請用户儘快將 JumpServer 升級至 v3.10.18 及以後的版本，或者 v4.7.0 及以後的版本。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342085</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342085</guid>
            <pubDate>Sat, 22 Mar 2025 10:27:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>開源堡壘機 JumpServer 發佈 4.8.1，修復多項 bug</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;開源堡壘機 JumpServer 近日發佈了 4.8.1 版本，主要變化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;解決了管理員無法從「控制枱」直接連接到資產的問題。&lt;/li&gt; 
 &lt;li&gt;修復了登錄頁面的語言切換器無法使用的問題。&lt;/li&gt; 
 &lt;li&gt;修復了「複製」資產時的操作錯誤。&lt;/li&gt; 
 &lt;li&gt;修復了「RemoteApp 主機」中的缺失協議。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;另外，在上一個版本 v4.8.0 中，JumpServer 重新設計了 PAM（特權訪問管理）功能，集成了賬户概述、管理、備份、密碼更新、風險檢測、會話和應用程序等功能，同時新增支持俄語和西班牙語，改進了前端設計以增強用户體驗。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;JumpServer 是一個開源特權訪問管理 (PAM) 工具，提供 DevOps 和 IT 團隊按需和安全地訪問 SSH、RDP、Kubernetes、數據庫和遠程應用程序終端的功能，用户通過網頁瀏覽器即可訪問。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-83bce38a1fbb9dbb9886763b8bc0a728268.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;下載地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjumpserver%2Fjumpserver%2Freleases%2Ftag%2Fv4.8.1&quot; target=&quot;_blank&quot;&gt;https://github.com/jumpserver/jumpserver/releases/tag/v4.8.1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342077/jumpserver-4-8-1</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342077/jumpserver-4-8-1</guid>
            <pubDate>Sat, 22 Mar 2025 10:15:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>