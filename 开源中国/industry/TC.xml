<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-綜合資訊</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-綜合資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Mon, 24 Mar 2025 12:40:42 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>IBM CEO：AI 短期內不會取代程序員</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;IBM 首席執行官阿爾溫德·克里希納（Arvind Krishna）表示，儘管特朗普政府曾大力抨擊全球化，但全球貿易並沒有消亡。相反，他認為美國經濟增長的關鍵恰恰在於積極擁抱國際貿易。&lt;/p&gt; 
&lt;p&gt;在 3 月 11 日 SXSW 的訪談中，克里希納表示：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「我堅信全球貿易的重要性，這個觀點其實可以追溯到 19 世紀的經濟學家。他們當時就發現，每當全球貿易額增加 10%，當地 GDP 就能提升 1%。因此，要想真正優化本地經濟增長，就必須積極參與全球貿易。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;克里希納強調，全球貿易的繁榮與人才的國際流動密不可分。他指出，美國政府和部分支持者曾主張對外國留學生和 H-1B 簽證實行更嚴格限制，聲稱這些外國勞動力會削弱美國公民的就業優勢。&lt;/p&gt; 
&lt;p&gt;對此，克里希納表示：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「我們希望全球人才帶着他們的知識和技能來到美國，同時我們也要培養自己的本地人才。然而，如果無法吸引全球頂尖的人才，讓本地人才有機會學習與成長，本地人才的培養就會受到限制。因此，美國應該成為國際人才中心，並制定與此相適應的人才政策。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;在這場內容豐富的訪談中，克里希納不僅談及了地緣政治問題，也提到了備受關注的人工智能（AI）。在他看來，AI 是一種有價值的技術，但絕不是萬能的解決方案。&lt;/p&gt; 
&lt;p&gt;克里希納對近期 Anthropic 公司 CEO 達裏奧·阿莫迪（Dario Amodei）的預測表示了不同意見。此前阿莫迪預測，在未來 3 到 6 個月內，90% 的代碼可能都會由 AI 自動生成。&lt;/p&gt; 
&lt;p&gt;而克里希納則認為：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「我覺得實際數字更可能是 20% 到 30% 的代碼會由 AI 編寫，而絕不是 90%。簡單的場景確實可能很容易由 AI 完成，但也存在大量複雜的場景，AI 根本做不到。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;克里希納進一步指出，AI 最終會提高程序員的工作效率，而非像一些 AI 批評者擔憂的那樣完全取代編程崗位：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「如果你能讓現有人員多寫 30% 的代碼，你會因此減少還是增加代碼總量呢？歷史表明，更高效的公司往往能擴大市場份額，從而生產更多產品，最終獲得更大的市場優勢。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;當然，IBM 也有理由強調 AI 對就業不構成威脅，因為該公司自身就提供各種 AI 產品和服務，包括輔助編程工具。&lt;/p&gt; 
&lt;p&gt;克里希納這番話也稍顯自相矛盾。早在 2023 年，他曾公開表示，IBM 計劃暫停後台部門的招聘工作，因為公司預計這些崗位很快就能被 AI 技術所取代。&lt;/p&gt; 
&lt;p&gt;談及 AI 取代人類工作的爭議時，克里希納將此類爭論比作早年計算器替代數學家，或 Photoshop 替代藝術家的擔憂。他承認 AI 在知識產權領域仍存在許多尚未解決的問題，但強調這項技術本質上仍是一股積極而且增強人類能力的力量：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「AI 只是一個工具。當所有人藉助這些工具做出更高質量的產品時，最終受益的是廣大消費者，因為他們能夠享受到品質更高的產品。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;他預測 AI 技術未來的成本會持續下降。儘管目前的推理模型（例如 OpenAI 的 o1 模型）需要大量算力和能源消耗，但克里希納認為，新興的技術（例如中國初創公司 DeepSeek 展示的方案）能夠極大降低 AI 能耗，使之降到當前能耗的 1% 以下：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「DeepSeek 已經向我們展示，即使是小型模型也能發揮巨大作用。當然，問題在於我們是否仍需要一些巨大的模型作為起點，這是 DeepSeek 尚未談及的地方。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;然而，雖然克里希納認為 AI 會變得越來越普遍和廉價，但他並不認為 AI 能真正幫助人類創造全新的知識，這與 Hugging Face 聯合創始人託馬斯·沃爾夫（Thomas Wolf）近期的一篇文章觀點一致。相反，克里希納認為，量子計算才是加速科學發現的真正關鍵技術，而這也正是 IBM 長期以來重金投入的領域：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「AI 所做的都是基於已有的知識、文獻、圖像等去學習，而並非探索未知。我並不相信目前這一代的 AI 能夠真正實現所謂的『通用人工智能』，也就是説，這些 AI 無法提供完全可靠的、超越愛因斯坦、奧本海默或所有諾貝爾獎得主所能回答的問題。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;值得注意的是，克里希納的這些言論與 OpenAI CEO 山姆·奧特曼（Sam Altman）的看法截然不同。奧特曼此前曾預測，人類在未來數年內就可能創造出具備超級智能的 AI，大幅加速人類創新的速度。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;轉載自&amp;nbsp;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1727858283%2FPjZwSjy2I&quot; target=&quot;_blank&quot;&gt;https://weibo.com/1727858283/PjZwSjy2I&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;閲讀更多&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/338784&quot; target=&quot;news&quot;&gt;計算機科學家吳恩達對「AI 將取代程序員」的看法&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/338372/anthropic-ceo-ai-will-be-writing-90-of-code-in-3-6-months&quot; target=&quot;news&quot;&gt;Anthropic CEO：未來 3-6 個月內，90% 的代碼將由 AI 編寫&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/337519/anthropic-mike-krieger-how-software-engineering-work-changing&quot; target=&quot;news&quot;&gt;未來三年，軟件工程師或將轉型為「AI 代碼審核員」&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/259402&quot; target=&quot;news&quot;&gt;GitHub CEO：AI 無法取代程序員&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/282381&quot; target=&quot;news&quot;&gt;李彥宏：未來可能不會存在程序員這種職業&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340717/ibms-ceo-doesnt-think-ai-will-replace-programmers-anytime-soon</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340717/ibms-ceo-doesnt-think-ai-will-replace-programmers-anytime-soon</guid>
            <pubDate>Sun, 23 Mar 2025 10:51:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>《龍架構生態白皮書（2024 年）》發佈</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FuSWFJv8T8peD9nj9b9J_xg&quot; target=&quot;_blank&quot;&gt;龍芯中科官方正式發佈了《龍架構生態白皮書（2024 年）》&lt;/a&gt;&lt;/u&gt;。官方表示，&lt;strong&gt;經過 3 年轉型發展，龍芯自主 CPU 設計已經達到國際主流水平&lt;/strong&gt;，基於龍架構的新一代產品性能倍增、成本倍降，自主優勢轉化為性價比和軟件生態優勢威力初顯。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;龍芯強調，真正的核心技術是買不來、換不來的。只能靠自力更生，才能徹底打破鎖鏈、擺脫發展受制於人的命運。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;目前，龍架構已經得到主要國際軟件開源社區及國產操作系統、基礎應用的廣泛支持，可支持運行多數主流應用，獨立於 x86 和 ARM 的第三套信息技術體系和產業生態基本建成。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-be406abfe3378e1bb9fcf57d0afe574f08e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;白皮書分為龍架構生態發展現狀、龍芯 CPU 及配套芯片介紹、龍芯基礎軟件、基於龍芯 CPU 的軟硬件產品、基於龍芯 CPU 的行業實踐案例、龍芯教育生態、龍芯生態培育與展望等章節。&lt;/p&gt; 
&lt;p&gt;白皮書最後，還附上了&lt;strong&gt;龍芯處理器路線圖，確認面向服務器的龍芯 3C6000 系列、針對移動端的龍芯 3B6000M 都將在今年發佈，適合桌面端的龍芯 3B6000 則要等到明年。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;其中，龍芯 3C6000 分為 S、Q、D 等不同版本，LA664 微架構，16/32/64 核心，主頻 2.0-2.2GHz。龍芯 3B6000M 集成最多 8 個 LA364 微架構核心，主頻 2.0-2.4GHz。&lt;/p&gt; 
&lt;p&gt;龍芯二號家族還將在明年新增龍芯 2K2500。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-68c6ab00f06494b8024a6e6e8de129f3320.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;白皮書主要內容——&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;★ 龍架構 CPU 新品：性能躍升，自主技術再突破&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;經過二十餘年的技術積累，龍芯成功構建了面向桌面和服務器、工控和終端、嵌入式專用的三大系列芯片，形成自主 CPU 研發和軟件生態建設的體系化關鍵核心技術積累。&lt;/p&gt; 
&lt;p&gt;2024 年，龍芯推出了面向移動終端、工業控制、通信設備等領域的多款處理器。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;★ 基礎軟件生態：開源共建，破局生態壁壘&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;白皮書從國際開源軟件生態、基礎軟件技術體系、操作系統發行版、龍芯平台特色軟件四大維度，全面闡述了龍芯 2024 年基礎軟件生態建設的核心成果。&lt;/p&gt; 
&lt;p&gt;同時，白皮書新增了基於開源鴻蒙社區版本開發的新型操作系統 Loonghong，以及龍芯跨平台融合方案等特色軟件。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;★ 軟硬件產品：千款產品，引領產業變革&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;龍芯與國內眾多一線品牌合作，共同推出上千款 PC、服務器、信息化一體機、網絡通信設備等軟硬件產品。這&lt;/p&gt; 
&lt;p&gt;些成果不僅彰顯了龍芯在產品化能力上的領先優勢，更標誌着國產信息技術生態實現從「可用」到「好用」的跨越發展。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;★ 行業實踐案例: 多場景落地，賦能千行百業&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;龍芯在電子政務、能源、通信、金融、交通、醫療等行業已形成成熟的應用方案，為各領域的信息化建設提供有力支撐。&lt;/p&gt; 
&lt;p&gt;白皮書新增了龍芯在稅務、先進製造、儀器儀表等領域的最新實踐案例，展現了龍芯在多元化行業場景中的創新應用能力，同時也為國產信息技術在更多領域的落地應用提供示範與借鑑。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;★ 教育生態建設：產教融合，培育創新人才&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;白皮書新增「龍芯教育生態」專章，系統闡述了龍芯在高校專業教育、基礎教育信息技術應用創新和信創特色化教育等領域的生態建設成果。&lt;/p&gt; 
&lt;p&gt;從學科競賽到「百芯」計劃，從人才認證到萬套試點，龍芯始終致力於為我國芯片產業發展培養優秀人才，實現信息技術教學「授人以魚」向「授人以漁」的轉變。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;白皮書地址：&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kdocs.cn%2Fl%2Fcay9SNLZ1m0s%3Fsessionid%3D-954285235&quot; target=&quot;_blank&quot;&gt;https://www.kdocs.cn/l/cay9SNLZ1m0s?sessionid=-954285235&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340714</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340714</guid>
            <pubDate>Sun, 23 Mar 2025 10:27:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>美團王莆中：正研發 Native AI 產品</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;自上週五美團公佈其 AI 進展後，美團核心本地商業 CEO 王莆中今日在社交媒體即刻上透露，美團正在內部的數據、場景和產業優勢做一款 NativeAI 產品，&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;他表示，這款應用的願景是「每個人都能有一個專屬的生活小祕書」。項目由王莆中發起，目前在招聘 AI 研發和產品人員。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;267&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bd91af9bf07365d323d0f1cd4e00b51eb63.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style=&quot;text-align:start&quot;&gt;&lt;a href=&quot;https://www.oschina.net/news/340605&quot; target=&quot;_blank&quot;&gt;美團王興：AI 策略是進攻而非防守，GPU 資源投入累計達數十億元&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340713</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340713</guid>
            <pubDate>Sun, 23 Mar 2025 10:12:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>LiblibAI 接入阿里通義大模型，推出 10 秒 AI 視頻生成功能</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國內 AI 圖像創作平台 LiblibAI 近日宣佈接入阿里通義系列大模型。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次接入後，基於萬相最新開源模型，LiblibAI 推出了文生視頻和圖生視頻功能。用戶只需輸入文本提示詞，或者上傳圖片，就能快速生成 10 秒短視頻。這一功能的實現，讓創意轉化為視頻內容變得更加高效便捷，無論是用於短視頻創作、創意展示還是其他場景，都極大地降低了視頻製作門檻。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;除了視頻生成功能，LiblibAI 還藉助阿里大模型 Qwen-turbo 打造了提示詞優化窗口。這個窗口能通過系統提示，幫助用戶優化輸入內容，並且支持將中文提示詞自動翻譯成模型可理解的英文提示詞。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;接入 Qwen-turbo 後，LiblibAI 提示詞優化時間縮短了超過 50%，大大提升了 AI 創作的效率和用戶體驗，讓創作者能更專注於創意表達，減少在技術操作上耗費的時間。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;336&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-db873de161757a7b20dfabf5fb583a9914e.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;作為國內首家通過國家備案的 AI 平台，LiblibAI 已積累了超 2000 萬創作者，平台上的原創模型數量超過 10 萬個。憑藉「開源模型 + 模塊化工具流」的創新平台模式，LiblibAI 構建了一個涵蓋 AI 內容創作、分享、版權管理與售賣的完整生態鏈。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340704</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340704</guid>
            <pubDate>Sun, 23 Mar 2025 09:21:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>萬字長文，帶你讀懂 Anthropic MCP</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;div&gt; 
 &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;背景&lt;/h1&gt; 
 &lt;div&gt;
   隨着大模型的快速發展，如何讓模型與企業數據、工具高效對接成為核心挑戰。傳統方式需為每個數據源/工具編寫定製化代碼，導致開發成本高、擴展性差、安全性低，形成「煙囪式開發」。 
 &lt;/div&gt; 
 &lt;div&gt;
   如何讓大語言模型與外部系統交互，已經成為 AI 系統急需解決的問題。從 2023 年到現在，業界也有過多種嘗試，我們也一起來梳理一下： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     原始時代——prompt 轉 json。大家現在回頭看看寫在代碼裏面的 prompt 是否還有大量的提示詞轉結構化數據的要求。優點就是可以很快的事項讓大模型給出符合格式的結果。缺陷也是很大，就是不可靠。常遇到的比如 json 的 key 錯誤，json 格式不對，時間格式不匹配。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     農耕時代——Plugins。2023 年 3 月份，OpenAI 官方發佈了重磅的「ChatGPT plugins」。也是大模型首次允許通過插件與外部應用交互的能力，也給了 AI 應用很大的想象。比如當前大模型都具備的實時信息檢索，也是這個時候引入的。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     鐵器時代——Function Calling。2023 年 6 月，OpenAI 在 GPT-3.5 和 GPT-4 模型中首次引入 Function Calling 機制，賦予模型調用外部函數的能力，使其能夠結合真實的數據或計算結果，而非單純依賴模型自身的推理能力，這樣不僅可以提高模型的可控性和準確性，還能讓其更適應實際業務需求。Function Calling 的意義在於讓大模型結果閉環且可控，在大模型流程中加入函數能力，讓其獲取到外部數據，不必再自行幻想出來結果，並且結構化的輸入給到大模型，輸出的結果更加穩定。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     蒸汽時代——Agent 框架 Tools。Agent 可以根據任務動態選擇 Tool 是完成任務，所以 Tool 應該是大模型能力的補充。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     電氣時代——MCP。在上一時代中的 Agent 的 Tool 誕生可以補充大模型的缺失的能力和數據，但是還需要一個大問題，一個企業或者應用面對不同的大模型不同的系統如何快速集成到一起，一個個是開發 Tools？這是一個重複且繁瑣的工作。為此本文的主角——MCP 協議誕生了。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;MCP 是什麼？&lt;/h1&gt; 
 &lt;div&gt;
   2024 年 11 月 25 日 Anthropic 發佈的文章： 
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Fnews%2Fmodel-context-protocol&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;Introducing the Model Context Protocol&lt;/a&gt; ，標誌着 MCP 協議誕生。 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img src=&quot;https://dedao.feishu.cn/space/api/box/stream/download/asynccode/?code=NDI4NzM3MTZmYTgyNTFkYTZmOGI4NjczZjU2MzBjODVfbTNtOHpRZTVjWkdaNFdrVjJMWmk2SjdTMzIxTEdBckxfVG9rZW46Q21VUmJHaURPb3RzM2l4U1JaRmN3SlNzbjllXzE3NDI3MjM2NDc6MTc0MjcyNzI0N19WNA&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   按照博文所説：MCP （Model Context Protocol，模型上下文協議）為連接 AI 系統和數據源提供了一個通用的開放標準，用單一協議取代了分散的集成。換一個説法是 
  &lt;strong&gt;以一致的方式將各種數據源、工具和功能連接到 AI 模型&lt;/strong&gt;中間協議。可以説 MCP 協議類似大家現在使用的 type-c 接口，可以讓不同的設備通過相關的接口協議連接在一起，組成不同功能的系統。更通俗的方式類比是，你拿着一個萬能翻譯器，去不同的國家和地區旅遊，可以以不同的人員通過萬能翻譯器實時對話，這個萬能翻譯器就是 MCP 協議。 
 &lt;/div&gt; 
 &lt;div&gt;
   針對 MCP 有幾點需要注意： 
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Function Calling 是大模型與外部數字世界的交互方式。MCP 是 MCP host(chatbot 或者 AI 工具) 與外部工具/資源之間的交互方式。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP 比 Plugins 規範性更好，定義了清晰的數據格式、傳輸協議、身份驗證方法等，能力也更強。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     GPTs 是 OpenAI 的應用市場，主要是給人使用的。MCP server 主要是給 AI 使用的，不直接給人用。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP 與 Agent 是合作關係，彼此有對應的關係： 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt; 
  &lt;table cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border:none; table-layout:fixed; width:500px&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Agent 能力 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        MCP 特性 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        工具（技能）調用 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Tool 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        LUI 交互 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Prompt 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        感知 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Resource（Changed Notification） 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        深度思考 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Resource（Listing/Reading Resources） 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   那為什麼需要 MCP 協議呢？下面通過一張圖來説明。 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span&gt;暫時無法在飛書文檔外展示此內容&lt;/span&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   可以看到，MCP 協議將原本 M×N 集成問題（M AI 客戶端×N 數據源）轉化為 M+N 問題-任何 MCP 兼容的 AI 客戶端都可以與任何 MCP 兼容的數據源或工具一起工作。 
 &lt;/div&gt; 
 &lt;div&gt;
   為什麼需要 MCP？ 
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP 的出現可以解決大模型的數據和能力補充問題，大模型的訓練是在大量的數據上訓練出來的，這些知識是過去的，也可能是不完整的，比如今天的天氣數據，我們團隊剛剛寫出來的產品報告，需要幫助我在餓了麼訂外賣等。這些數據和能力是大模型不具備的。有了 MCP 後大模型就可以獲取到最新的數據，擁有更多的能力補充，可以極大的降低幻覺，讓 AI 更加可靠。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP 是通用的 AI 模型集成方法。上面的圖已經説明瞭，沒有 MCP 時候，AI 模型訪問多個系統意味着要處理大量的應用編程接口、軟件開發工具包和身份驗證方法。而且服務之間的連接會隨着功能的增加出現指數式增長，必然會導致系統脆弱。MCP 用一個標準接口取代了這種複雜性，大大簡化了開發。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP 不綁定任何廠商。Anthropic 開源了 MCP 規範，並由社區驅動。當前與 AI 模型是一致的，開放性才是不斷增長的系統，大家一起努力才可以把生態構建出來。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
   總之出現 MCP，根本原因是 
  &lt;strong&gt;大模型百家爭鳴，各有所長並且數據孤島的壁壘無法打破&lt;/strong&gt;。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;MCP 可以做什麼？&lt;/h1&gt; 
 &lt;div&gt;
   MCP 作為連接 AI 模型與外部系統的標準化協議，其核心價值在於打破數據孤島、提升模型交互能力，並推動 AI 從「被動響應」向「主動執行」轉型。目前可以預知到的 MCP 的應用場景有四大核心場景。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;場景一 AI 模型治理與合規管理&lt;/h2&gt; 
 &lt;div&gt;
   軍政、金融、醫療等強監管行業需對 AI 訪問權限進行細粒度控制，例如限制模型僅讀取脫敏數據或禁止寫入關鍵系統。通過 MCP 的數據沙箱機制和權限審批流程，實現動態策略調整與操作審計，滿足 GDPR、HIPAA 等法規要求。MCP 服務器可以支持不同的訪問策略並且可以實現訪問時進行身份驗證，有效地充當 AI 模型和企業之間的門神。內部數據的獲取和響應都是通過 MCP 服務器，類似數據網關，實時監控模型行為，發現異常（如數據泄露風險）時自動觸發防護機制（如阻斷敏感 API 調用）。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;場景二，實時上下文增強與知識更新&lt;/h2&gt; 
 &lt;div&gt;
   AI 模型對過去交互的記憶有限，因此在推理時提供相關的、實時的上下文至關重要。MCP 服務器連接實時數據源（如 OS Drive、Slack、數據庫），確保 AI 響應基於最新信息（如客戶最新訂單、庫存狀態）。通過 MCP 資源功能加載專業文檔（如法律條款、產品手冊），提升 AI 在垂直領域的專業性（如法律諮詢、技術支持）。通過 MCP 服務器允許 AI 模型可以在需要的時候從指定的渠道獲取到相關的數據甚至可以進行相關的操作。比如創建一個 Excel 文檔將收集和整理好的簡歷寫入。在客服場景中，可以關聯用戶的信息（訂單、興趣、）和之前與客服的溝通內容，結合企業內的 SOP，為用戶解決問題。還有在 AI 編碼的場景也是有很好的應用，AI 模型可以通過 MCP 服務器獲取 git 倉庫的代碼和接口文檔、產品設計、方案設計甚至是編碼規範，可以為程序員提供更好的編碼提示和建議。 
 &lt;/div&gt; 
 &lt;div&gt;
   同時，使用結構化格式傳遞信息避免歧義，可以更有效地指導 AI 模型推理。更可靠的知識源，結合結構化的數據上下文，AI 模型就可以應用在要求可靠性更高的場景，比如醫療診斷。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;場景三，工具生態擴展與系統互聯&lt;/h2&gt; 
 &lt;div&gt;
   試想一下，這樣的場景。用戶反饋 APP 的一個 bug 上來後，AI 模型自動根據 Git 的 MCP 服務器，結合產品文檔需求和用戶描述，自動化實現 bug 修復並通過 CI/CD MCP 服務器實現服務上線。MCP 協議將會是 AI 模型和各個工具之間互聯互動的橋樑。MCP 如果成為了標準協議，將各個 AI 模型和豐富的工具和平台鏈接起來，打破信息孤島，讓 AI 的自動化升級為 AI 智能化。MCP 可以成為 AI 模型對工具和平台的監督和驅動大腦，讓它們協同的完成工作。 
 &lt;/div&gt; 
 &lt;div&gt;
   對於不同的企業和平台來説，MCP 可以讓不同 AI 模型的能力獲取最大化，也建議讓 AI 模型方案統一化。 
  &lt;strong&gt;AI 模型不應該只是在瀏覽器上，也不應該只是在 APP 應用上，而是應該集成到操作系統中，在系統層面獲得更大的能力&lt;/strong&gt;。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;場景四，企業級智能助手與 Agent 構建&lt;/h2&gt; 
 &lt;div&gt;
   MCP 作為企業內部 AI Agent 的「數據總線」，整合 CRM、MES 等多系統數據，例如製造業 AI Agent 通過 MCP 協調 IoT 傳感器與生產調度系統。企業部署 MCP 驅動的虛擬助手，可統一響應員工 IT 支持、審批進度查詢等需求，響應時效縮短至秒級。在醫院，可通過 MCP 構建 AI 助手，實時分析患者病史並提醒醫生藥物相互作用風險。MCP 可以讓 Agent 的構建更加強大。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h1_8&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;MCP 有什麼？&lt;/h1&gt; 
 &lt;span id=&quot;OSC_h2_9&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;組件&lt;/h2&gt; 
 &lt;div&gt;
   MCP 本質還是一種 C/S 架構，官方給出的架構圖： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img src=&quot;https://dedao.feishu.cn/space/api/box/stream/download/asynccode/?code=ZGQ4M2I3ZWQ1MDQzZjQzNjZiYTg0ZDkwMzBlN2MwNjNfZDVSUms3Y3FlTmRsMHZWaXVpMWVMNEFJd1BiNVE5N2hfVG9rZW46VXdJYWJ2NlJlb1lrWTZ4Skh4SWNubFhQbkhoXzE3NDI3MjM2NDc6MTc0MjcyNzI0N19WNA&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   MCP 由三個核心組件構成：Host、Client 和 Server。 
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP Hosts: 負責接收用戶提問並與 AI 模型交互，充當容器和協調者： 
   &lt;/div&gt; 
   &lt;ol&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       創建和管理多個客戶端實例 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       控制客戶端連接權限和生命週期 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       協調 AI/LLM 集成和採樣 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       管理 Clients 之間的上下文聚合 
     &lt;/div&gt; &lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP Clients：與服務器保持 1:1 連接的協議客戶端，將 Server 連接到的客戶端中，組成不同功能的應用： 
   &lt;/div&gt; 
   &lt;ol&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       和每個 server 建立一個有狀態的會話 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       處理協議協商和能力交換 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       雙向路由協議消息 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       管理訂閲和通知 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       維護 servers 之間的安全邊界 
     &lt;/div&gt; &lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     MCP Servers： 輕量級程序，每個程序都通過標準化模型上下文協議公開特定功能： 
   &lt;/div&gt; 
   &lt;ol&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       通過 MCP 原語暴露 resources、tools 和 prompts 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       通過 client 提供的接口請求 sampling 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       可以是本地進程或遠程服務 
     &lt;/div&gt; &lt;/li&gt; 
    &lt;li&gt; 
     &lt;div&gt;
       具備特定的功能 
     &lt;/div&gt; &lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;span id=&quot;OSC_h2_10&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;協議&lt;/h2&gt; 
 &lt;div&gt;
   MCP 的規範中協議層、傳輸層和消息類型： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     協議層處理消息框架、請求/響應鏈接和高級通信模式。具備有狀態的連接和能力協商。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     傳輸層處理客戶端和服務器之間的實際通信， 
    &lt;strong&gt;MCP 所有傳輸均使用&lt;/strong&gt; 
    &lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jsonrpc.org%2F&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;JSON-RPC&lt;/a&gt;&lt;/strong&gt; 
    &lt;strong&gt; 2.0 來交換消息&lt;/strong&gt;。 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     消息類型定義請求和響應格式和處理機制。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;span id=&quot;OSC_h3_11&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;傳輸層&lt;/h3&gt; 
 &lt;div&gt;
   MCP 目前定義了兩種標準的 client-server 通信傳輸機制：stdio（標準輸入輸出）和基於 SSE 的 HTTP。此外，客戶端和服務器也可以以可插拔的方式實現自定義傳輸機制。 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;table cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border:none; table-layout:fixed; width:500px&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        通信傳輸機制 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        部署方式 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        網絡要求 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        場景 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        應用 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Stdio transport 標準傳輸 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        本地子進程 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        無需網絡 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          本地開發 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          高效實現同機通訊 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          簡單的流程管理 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        filesystem 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        HTTP with SSE transport 帶有 SSE 傳輸的 HTTP 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        獨立服務器進程 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        需要網絡連接 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          分佈式部署、多客戶端 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          對於需要 HTTP 兼容性的場景使用 SSE 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          考慮安全影響，包括身份驗證和授權 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        search 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h3_12&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;消息類型&lt;/h3&gt; 
 &lt;div&gt;
   所有在 MCP clients 和 servers 之間的消息必須遵循 JSON-RPC 2.0 規範，基於 
  &lt;strong&gt;JSON-RPC 2.0&lt;/strong&gt;，確保消息格式結構統一。該協議定義了三種基本類型的消息： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;table cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border:none; table-layout:fixed; width:500px&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        消息類型 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        描述 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        約束 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Requests 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        用於具體操作的消息 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          必須包含唯一的 ID 和方法名稱 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          ID 不能為 null 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          請求 ID 在同一會話中不得被請求者之前使用過 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Responses 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        請求的響應 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          必須包含與請求相同的 ID 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          必須設置 result 或 error 之一。不得同時出現 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          錯誤代碼必須是整數 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Notifications 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        單向消息，不需要回復 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        不得包含 ID 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h4_13&quot;&gt;&lt;/span&gt; 
 &lt;h4&gt;Requests&lt;/h4&gt; 
 &lt;div&gt;
   Requests 可以從 Client 端或者 Server 端發起，其格式為： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  jsonrpc: &quot;2.0&quot;;
  id: string | number;
  method: string;
  params?: {
    [key: string]: unknown;
  };
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   在 MCP Server 中對請求需要做到： 
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     徹底驗證輸入，驗證 JSON-RPC 格式 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用類型安全架構 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     妥善處理錯誤 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     實施超時處置 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
   在 MCP 中定義的 requests 的業務類型： 
 &lt;/div&gt; 
 &lt;div&gt;
   表格，還在加載中，請等待加載完成後再嘗試複製 
 &lt;/div&gt; 
 &lt;div&gt;
   initialized 是非常重要的階段，是 MCP Client 和 MCPServer 之間的第一次交互。類似 HTTPS 一樣需要確認彼此協議版本的兼容性、交換和協商各自能力。Client 必須發送其支持的協議版本，如果 server 支持請求的協議版本，則必須以相同的版本進行響應。否則，server 必須以其支持的其他協議版本進行響應。這應該是 server 支持的最新版本。 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;initialized 能力協商&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   表格，還在加載中，請等待加載完成後再嘗試複製 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Prompts&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   MCP 還提供 Prompt 能力，可將重複使用的提示模板和工作流程放在 Server 以便 Client 使用。Prompts 的主要價值是對 Resource 的內容進行解釋，讓 LLMs 能夠更好的理解返回的數據，從而更好的完成任務。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h4_14&quot;&gt;&lt;/span&gt; 
 &lt;h4&gt;Responses&lt;/h4&gt; 
 &lt;div&gt;
   Responses 是對 requests 的回覆，其格式為： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  jsonrpc: &quot;2.0&quot;;
  id: string | number;
  result?: {
    [key: string]: unknown;
  }
  error?: {
    code: number;
    message: string;
    data?: unknown;
  }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   MCP 的核心就是將資源暴露給到 AI 模型，Response 的類型是多種多樣的，有文本、二進制文件、API 等等。Server 擁有的 Responses 如何讓 AI 模型知道呢？這就需要 Direct resources 直連資源，MCP Server 通過 esources/list 端點公開固定的資源列表，每個資源的屬性包含： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{  
    uri: string;           // Unique identifier for the resource  
    name: string;          // Human-readable name  
    description?: string;  // Optional description  
    mimeType?: string;     // Optional MIME type
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   如果 Server 端的 Responses 的生成是動態資源，那麼還可以通過 Resource templates 來支持。在實際中，Server 的 Resource 並不會固定不變，而是時常變化，MCP 提供了資源更新（Resource updates）機制： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;table cellspacing=&quot;0&quot; style=&quot;border-collapse:collapse; border:none; table-layout:fixed; width:500px&quot;&gt; 
   &lt;tbody&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        機制類型 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        機制描述 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        應用場景 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        核心特點 
      &lt;/div&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        資源列表變更通知 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        服務器通過 notifications/resources/list_changed 通知客戶端資源列表結構性變化 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        目錄結構變動、新增資源類型等全局性更新 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          結構化變更推送 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          客戶端需主動拉取更新 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        資源內容實時訂閲 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        客戶端通過 resources/subscribe 訂閲資源，服務器通過 notifications/resources/updated 推送變更 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        日誌文件追加、API 數據刷新等動態內容更新 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          支持實時推送 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          可隨時取消訂閲 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          客戶端主動拉取最新內容 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
    &lt;tr&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        Streamable HTTP 傳輸 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        新增流式傳輸協議，支持斷點續傳、無狀態服務器及動態 SSE 升級 
      &lt;/div&gt; 
      &lt;div&gt;
        &amp;nbsp; 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;div&gt;
        高併發場景、雲平台部署、需要兼容 CDN/API 網關的場景 
      &lt;/div&gt; &lt;/td&gt; 
     &lt;td style=&quot;border-color:#dee0e3; border-style:solid; border-width:1px; height:39px; vertical-align:top&quot;&gt; 
      &lt;ul&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          斷點續傳解決掉線問題 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          無狀態服務器降低部署成本 
        &lt;/div&gt; &lt;/li&gt; 
       &lt;li&gt; 
        &lt;div&gt;
          兼容標準 HTTP 生態 
        &lt;/div&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/td&gt; 
    &lt;/tr&gt; 
   &lt;/tbody&gt; 
  &lt;/table&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   現在 AI 模型已經知道 Server 有哪些資源了，還需要可以讀取到這麼 Resource，就需要使用 resources/read 請求。 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt;
   在 MCP Server 中對響應需要做到： 
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     對長時間操作使用進度標記，可逐步報告進度 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     使用適當的錯誤代碼，包含有用的錯誤消息和發生錯誤時清理資源 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     不要泄露敏感信息並記錄與安全相關的錯誤 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;span id=&quot;OSC_h4_15&quot;&gt;&lt;/span&gt; 
 &lt;h4&gt;Notifications&lt;/h4&gt; 
 &lt;div&gt;
   Notifications 是從 client 發送到 server 或反向發送的，不需要回復。其格式為： 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
  jsonrpc: &quot;2.0&quot;;
  method: string;
  params?: {
    [key: string]: unknown;
  };
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h3_16&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;案例&lt;/h3&gt; 
 &lt;div&gt;
   本小節以 github.com/mark3labs/mcp-filesystem-server 為例介紹 MCP 相關的消息類型。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h4_17&quot;&gt;&lt;/span&gt; 
 &lt;h4&gt;&lt;strong&gt;初始化會話：initialized&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Request&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;method&quot;: &quot;initialize&quot;,
    &quot;params&quot;: {
        &quot;protocolVersion&quot;: &quot;1.0&quot;,
        &quot;capabilities&quot;: {
            &quot;roots&quot;: {
                &quot;listChanged&quot;: true
            }
        },
        &quot;clientInfo&quot;: {
            &quot;name&quot;: &quot;test-client&quot;,
            &quot;version&quot;: &quot;1.0.0&quot;
        }
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Responses&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;result&quot;: {
        &quot;protocolVersion&quot;: &quot;2024-11-05&quot;,
        &quot;capabilities&quot;: {
            &quot;resources&quot;: {
                &quot;subscribe&quot;: true,
                &quot;listChanged&quot;: true
            },
            &quot;tools&quot;: {

            }
        },
        &quot;serverInfo&quot;: {
            &quot;name&quot;: &quot;secure-filesystem-server&quot;,
            &quot;version&quot;: &quot;0.4.1&quot;
        }
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h4_18&quot;&gt;&lt;/span&gt; 
 &lt;h4&gt;&lt;strong&gt;發現可用的工具:tools/list&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Request&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;method&quot;: &quot;tools/list&quot;,
    &quot;params&quot;: {
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Responses&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;result&quot;: {
        &quot;tools&quot;: [
            {
                &quot;description&quot;: &quot;Create a new directory or ensure a directory exists.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;path&quot;: {
                            &quot;description&quot;: &quot;Path of the directory to create&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;path&quot;
                    ]
                },
                &quot;name&quot;: &quot;create_directory&quot;
            },
            {
                &quot;description&quot;: &quot;Retrieve detailed metadata about a file or directory.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;path&quot;: {
                            &quot;description&quot;: &quot;Path to the file or directory&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;path&quot;
                    ]
                },
                &quot;name&quot;: &quot;get_file_info&quot;
            },
            {
                &quot;description&quot;: &quot;Returns the list of directories that this server is allowed to access.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;
                },
                &quot;name&quot;: &quot;list_allowed_directories&quot;
            },
            {
                &quot;description&quot;: &quot;Get a detailed listing of all files and directories in a specified path.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;path&quot;: {
                            &quot;description&quot;: &quot;Path of the directory to list&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;path&quot;
                    ]
                },
                &quot;name&quot;: &quot;list_directory&quot;
            },
            {
                &quot;description&quot;: &quot;Move or rename files and directories.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;destination&quot;: {
                            &quot;description&quot;: &quot;Destination path&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;source&quot;: {
                            &quot;description&quot;: &quot;Source path of the file or directory&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;source&quot;,
                        &quot;destination&quot;
                    ]
                },
                &quot;name&quot;: &quot;move_file&quot;
            },
            {
                &quot;description&quot;: &quot;Read the complete contents of a file from the file system.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;path&quot;: {
                            &quot;description&quot;: &quot;Path to the file to read&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;path&quot;
                    ]
                },
                &quot;name&quot;: &quot;read_file&quot;
            },
            {
                &quot;description&quot;: &quot;Recursively search for files and directories matching a pattern.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;path&quot;: {
                            &quot;description&quot;: &quot;Starting path for the search&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;pattern&quot;: {
                            &quot;description&quot;: &quot;Search pattern to match against file names&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;path&quot;,
                        &quot;pattern&quot;
                    ]
                },
                &quot;name&quot;: &quot;search_files&quot;
            },
            {
                &quot;description&quot;: &quot;Create a new file or overwrite an existing file with new content.&quot;,
                &quot;inputSchema&quot;: {
                    &quot;type&quot;: &quot;object&quot;,
                    &quot;properties&quot;: {
                        &quot;content&quot;: {
                            &quot;description&quot;: &quot;Content to write to the file&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        },
                        &quot;path&quot;: {
                            &quot;description&quot;: &quot;Path where to write the file&quot;,
                            &quot;type&quot;: &quot;string&quot;
                        }
                    },
                    &quot;required&quot;: [
                        &quot;path&quot;,
                        &quot;content&quot;
                    ]
                },
                &quot;name&quot;: &quot;write_file&quot;
            }
        ]
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h4_19&quot;&gt;&lt;/span&gt; 
 &lt;h4&gt;&lt;strong&gt;發現可用的工具:tools/call&lt;/strong&gt;&lt;/h4&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Request&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;method&quot;: &quot;tools/call&quot;,
    &quot;params&quot;: {
        &quot;name&quot;: &quot;list_allowed_directories&quot;,
        &quot;arguments&quot;: {
            &quot;path&quot;: &quot;/Users/ouerqiang/Downloads/1.txt&quot;
        }
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Responses&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;result&quot;: {
        &quot;content&quot;: [
            {
                &quot;type&quot;: &quot;text&quot;,
                &quot;text&quot;: &quot;Allowed directories:\n\n/Users/ouerqiang/project/gopath/src/github.com/mark3labs/mcp-filesystem-server (file:///Users/ouerqiang/project/gopath/src/github.com/mark3labs/mcp-filesystem-server)\n/Users/ouerqiang/Downloads (file:///Users/ouerqiang/Downloads)\n&quot;
            }
        ]
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h3_20&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;發現可用的資源：resources/list&lt;/h3&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Request&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;result&quot;: {
        &quot;content&quot;: [
            {
                &quot;type&quot;: &quot;text&quot;,
                &quot;text&quot;: &quot;Allowed directories:\n\n/Users/ouerqiang/project/gopath/src/github.com/mark3labs/mcp-filesystem-server (file:///Users/ouerqiang/project/gopath/src/github.com/mark3labs/mcp-filesystem-server)\n/Users/ouerqiang/Downloads (file:///Users/ouerqiang/Downloads)\n&quot;
            }
        ]
    }
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;Responses&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;pre&gt;&lt;code class=&quot;language-json&quot;&gt;{
    &quot;jsonrpc&quot;: &quot;2.0&quot;,
    &quot;id&quot;: 12,
    &quot;resources&quot;: [
        {
            &quot;uri&quot;: &quot;file://&quot;,
            &quot;name&quot;: &quot;File System&quot;,
            &quot;description&quot;: &quot;Access to files and directories on the local file system&quot;
        }
    ]
}&lt;/code&gt;&lt;/pre&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   其他的格式就請各位同學自行去驗證。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_21&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;服務層&lt;/h2&gt; 
 &lt;div&gt;
   MCP 服務器可以提供三種主要類型的功能： 
 &lt;/div&gt; 
 &lt;ol&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Resources：客戶端可以讀取的類似文件的數據（例如 API 響應或文件內容） 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Tools：可由 LLM 調用的函數（需經用戶批准） 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Prompts：預先編寫的模板，幫助用戶完成特定任務 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;div&gt;
   上面的三個功能並不要求 MCP Server 全部提供，可以提供一種或者多種類型的功能。 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt;
   看着也是在 MCP Server 實現了對外部服務的 API 對接給到 AI 模型，為什麼還需要多加 MCP，直接讓 AI 模型直接調用外部服務 API 不是更好嗎？這是因為，MCP 不僅實現了 API 的功能，還帶來了更高的標準化和靈活性。 
 &lt;/div&gt; 
 &lt;div&gt;
   表格，還在加載中，請等待加載完成後再嘗試複製 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_22&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;客戶端&lt;/h2&gt; 
 &lt;div&gt;
   對於大多數開發者而言，主要開發的模塊還是 MCP Server，而 MCP Client 主要面對的還是直接的用戶。客戶端可以向服務器提供以下功能： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     Sampling： 服務器發起的代理行為和遞歸交互。採樣是一個強大的 MCP 功能，它允許服務器通過客戶端請求 AI 模型完成，從而在保持安全性和隱私的同時實現複雜的代理行為。換句話説，Sampling 把 MCP Server 從給 AI 模型提供資源的服務變成一個使用 AI 模型的用戶。 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   在業界中也有很多支持 MCP 的應用程序，每個客戶端可能支持不同的 MCP 功能，從而允許與 MCP 服務器進行不同程度的集成。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h3_23&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;業界 MCP Client&lt;/h3&gt; 
 &lt;div&gt;
   https://modelcontextprotocol.io/clients 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img src=&quot;https://dedao.feishu.cn/space/api/box/stream/download/asynccode/?code=YjExNDVlZDZjNjNhMTRlN2Q3MTliYjc5MTNmZmJlMzZfVW9QNmVwa2dtZUlob0dlNkhtWHZ5R1N5ak5PM1RMSEJfVG9rZW46RlRLemJKRFQ0b0ZZWG54bnRnTmNrSkhvblI4XzE3NDI3MjM2NDc6MTc0MjcyNzI0N19WNA&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h1_24&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;MCP 實踐&lt;/h1&gt; 
 &lt;div&gt;
   本人主要使用 Golang 為主，但是官網上只提供了 Python、TypeScript、Java、Kotlin 的 SDK，並未提供 golang。我也查看了 github 庫，也親身驗證了一些框架，目前比較好的 Go MCP 框架有兩個： 
 &lt;/div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     https://github.com/metoro-io/mcp-golang 
   &lt;/div&gt; &lt;/li&gt; 
  &lt;li&gt; 
   &lt;div&gt;
     https://github.com/mark3labs/mcp-go 
   &lt;/div&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt;
   我們可以對比一下這兩個框架。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h2_25&quot;&gt;&lt;/span&gt; 
 &lt;h2&gt;對比&lt;/h2&gt; 
 &lt;span id=&quot;OSC_h3_26&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;核心功能對比&lt;/h3&gt; 
 &lt;div&gt;
   表格，還在加載中，請等待加載完成後再嘗試複製 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h3_27&quot;&gt;&lt;/span&gt; 
 &lt;h3&gt;技術選型決策矩陣&lt;/h3&gt; 
 &lt;div&gt;
   表格，還在加載中，請等待加載完成後再嘗試複製 
 &lt;/div&gt; 
 &lt;div&gt;
   從代碼的設計、使用靈活度和對外部框架的集成而言，使用 
  &lt;strong&gt;metoro-io/mcp-golang&lt;/strong&gt;是不錯的選擇。 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h1_28&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;總結&lt;/h1&gt; 
 &lt;div&gt;
   MCP 作為 Anthropic 開源的 AI 系統與數據源交互協議，憑藉其統一性、可控性和高效性在 AI 集成領域展現出潛力。該協議通過標準化工具調用、資源訪問和提示模板，解決了傳統插件或自定義工具開發的高成本問題，尤其為非技術人員提供了便捷的 AI 能力擴展途徑。例如，開發者可通過 MCP Server 快速暴露功能，供 Claude、Cursor 等客戶端直接調用，顯著提升跨系統協作的靈活性。 
 &lt;/div&gt; 
 &lt;div&gt;
   然而，MCP 仍面臨多重挑戰。協議公佈僅半年，主流編程語言（如 Go、Rust）的支持尚不完善，生態建設仍處於早期階段，可用工具數量和質量難以滿足複雜場景需求。同時，LangChain 創始人 Nuno Campos 指出，當前模型對工具的調用成功率僅約 50%，且 MCP 的雙向通信機制和本地化部署方式增加了實現複雜度，對比 IBM 新推出的 ACP 協議，其在無狀態設計、跨平台兼容性等方面可能存在劣勢。 
 &lt;/div&gt; 
 &lt;div&gt;
   儘管如此，MCP 的前景值得期待。隨着基礎模型能力的迭代優化，工具調用準確率有望提升。若協議能進一步簡化部署流程（如雲端託管）、擴大語言支持範圍，並藉助社區力量構建高質量工具生態，其有望成為連接 AI 系統與現實世界的核心橋樑。正如 Harrison Chase 所言，MCP 的核心價值在於為不可控的第三方 Agent 提供標準化接入方案，這種開放性使其在長尾場景中具備持久生命力。 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;一句話，MCP 未來可期！&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;span id=&quot;OSC_h1_29&quot;&gt;&lt;/span&gt; 
 &lt;h1&gt;附錄&lt;/h1&gt; 
 &lt;div&gt;
   https://www.anthropic.com/news/model-context-protocol 
 &lt;/div&gt; 
 &lt;div&gt;
   https://mp.weixin.qq.com/s/WndS_QSbQFalFvBcGzur4A 
 &lt;/div&gt; 
 &lt;div&gt;
   https://mp.weixin.qq.com/s/kQrltrzRk-SVLfWm_zsPoA 
 &lt;/div&gt; 
 &lt;div&gt;
   https://github.com/CherryHQ/cherry-studio/releases/tag/v1.1.7 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;notranslate&quot;&gt;
  &amp;nbsp; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/qiangmzsx/blog/17987222</link>
            <guid isPermaLink="false">https://my.oschina.net/qiangmzsx/blog/17987222</guid>
            <pubDate>Sun, 23 Mar 2025 08:53:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>AutoGluon —— 僅用 3 行代碼即可實現快速準確的 ML</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;AutoGluon 由 AWS AI 開發，可自動執行機器學習任務，使你能夠輕鬆在應用程序中實現強大的預測性能。只需幾行代碼，你就可以在圖像、文本、時間序列和表格數據上訓練和部署高精度機器學習和深度學習模型。&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AutoGluon 支持 Python 3.9 - 3.12，並且可在 Linux、MacOS 和 Windows 上使用。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;可以使用以下方式安裝 AutoGluon：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style=&quot;text-align:start&quot;&gt;
&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:var(--bgColor-muted, var(--color-canvas-subtle))&quot;&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:var(--fgColor-default, var(--color-fg-default))&quot;&gt;&lt;span style=&quot;background-color:var(--bgColor-muted, var(--color-canvas-subtle))&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;pip&lt;/span&gt; &lt;span&gt;install&lt;/span&gt; &lt;span&gt;autogluon&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p style=&quot;text-align:start&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;僅用 3 行代碼即可構建準確的端到端 ML 模型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;div style=&quot;text-align:start&quot;&gt;
&lt;pre&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:var(--bgColor-muted, var(--color-canvas-subtle))&quot;&gt;&lt;span style=&quot;color:#1f2328&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:var(--fgColor-default, var(--color-fg-default))&quot;&gt;&lt;span style=&quot;background-color:var(--bgColor-muted, var(--color-canvas-subtle))&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-keyword)&quot;&gt;from&lt;/span&gt;&lt;/span&gt; &lt;span&gt;autogluon&lt;/span&gt;.&lt;span&gt;tabular&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-keyword)&quot;&gt;import&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-variable)&quot;&gt;TabularPredictor&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;predictor&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-constant)&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-entity)&quot;&gt;TabularPredictor&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;label&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-constant)&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-string)&quot;&gt;&quot;class&quot;&lt;/span&gt;&lt;/span&gt;).&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-constant)&quot;&gt;fit&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-string)&quot;&gt;&quot;train.csv&quot;&lt;/span&gt;&lt;/span&gt;)
&lt;span&gt;predictions&lt;/span&gt; &lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-constant)&quot;&gt;=&lt;/span&gt;&lt;/span&gt; &lt;span&gt;predictor&lt;/span&gt;.&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-constant)&quot;&gt;predict&lt;/span&gt;&lt;/span&gt;(&lt;span&gt;&lt;span style=&quot;color:var(--color-prettylights-syntax-string)&quot;&gt;&quot;test.csv&quot;&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/autogluon</link>
            <guid isPermaLink="false">https://www.oschina.net/p/autogluon</guid>
            <pubDate>Sun, 23 Mar 2025 08:42:00 GMT</pubDate>
        </item>
        <item>
            <title>開源 AI Agent 工具 Browser Use 開發商融資 1700 萬美元</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F03%2F23%2Fbrowser-use-the-tool-making-it-easier-for-ai-agents-to-navigate-websites-raises-17m%2F&quot; target=&quot;_blank&quot;&gt;據 TechCrunch 報道&lt;/a&gt;&lt;/u&gt;，Browser Use 近日向已完成 1700 萬美元種子輪融資，由 Felicis 的 Astasia Myers 領投，Paul Graham、A Capital 和 Nexus Venture Partners 參投。這筆融資此前尚未被公開報道。&lt;/p&gt; 
&lt;p&gt;作為 Y Combinator2025 年冬季項目的一部分，Browser Use 專注於解決一個關鍵問題：讓網站對 AI Agent 更具&quot;可讀性&quot;。該公司由 Magnus Müller 和 Gregor Zunic 於去年通過蘇黎世聯邦理工學院的加速器創立，兩人在五週內開發出首個演示版本並選擇開源發佈。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-be00974fa2b8a4189cd652a661c93dbfd9a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;Browser Use 的核心功能是：將網站中的按鈕和界面元素解析成更易於處理、類似文本的結構化格式，以便 AI Agent 理解頁面上的各種操作選項，並自主做出決策。聯合創始人 Müller 表示：&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;span&gt;「&lt;strong&gt;現在很多 AI Agent 依賴視覺系統，通過截圖來導航網頁，但這個過程經常出錯。我們把網頁轉換成 Agent 可以理解的形式，這種方法讓我們可以用更低的成本反覆執行相同的任務。」&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/164713_0QIp_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;該公司近期聲名鵲起，部分原因是中國初創公司 Butterfly Effect 在其病毒式傳播的 Manus 工具中採用了 Browser Use 技術。目前，Y Combinator 冬季批次中已有 20 多家公司使用 Browser Use 的解決方案。&lt;/p&gt; 
&lt;p&gt;領投方 Felicis 的 Astasia Myers 表示:&quot;我們認為 Web AI Agent 是下一個真正有助於實現端到端人工任務自動化的前沿領域。Web AI Agent 是不斷變化的數字環境中以文本為中心的靜態預訓練模型之間的動態橋樑。&quot;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;閲讀更多&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/334343/omniparser-v2&quot; target=&quot;news&quot;&gt;微軟發佈 OmniParser V2，將任意 LLM 變成可操作計算機的 AI Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/331290/openai-operator&quot; target=&quot;news&quot;&gt;OpenAI 發佈首個 AI 智能體&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/p/omniparser&quot;&gt;OmniParser&lt;span&gt;&amp;nbsp;——&amp;nbsp;&lt;/span&gt;&lt;span&gt;基於 GUI Agent 的純視覺屏幕解析工具&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340695/browser-use-the-tool-raises-17m</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340695/browser-use-the-tool-raises-17m</guid>
            <pubDate>Sun, 23 Mar 2025 08:39:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>解析穩定率達 99.99%！合合信息「大模型加速器 2.0」助力 AI 打破「幻覺」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;隨着大模型在社會應用中逐漸普及，人們在享受便利的同時，也面臨着「AI 幻覺」產生的風險。訓練數據是影響大模型「認知能力」的關鍵要素，近期，上海合合信息科技股份有限公司（簡稱「合合信息」）TextIn「大模型加速器 2.0」版本正式上線，基於領先的智能文檔處理技術，對複雜文檔的版式、佈局和元素進行精準解析及結構化處理，從數據源頭降低大模型「幻覺」風險，讓大模型在與人類的溝通中「更靠譜」。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;343&quot; src=&quot;https://oscimg.oschina.net/oscnet//039f7b30e80daf08d9c6ffc4a27b71ea.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;圖説：「大模型加速器 2.0」文檔解析引擎助力知識庫理解手寫筆記示意圖&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;據悉，升級後的「大模型加速器」在複雜版面理解、表格及圖表處理、內容溯源等能力上實現新突破，可精準識別上千種文檔中的跨頁表格、合併單元格、密集表格、手寫字符及公式，解析穩定率達 99.99%，單頁處理耗時較行業可比產品降低超 30%；可「逆還原」十餘種專業圖表數據，並將其轉化為大模型可理解的結構化數據。此外，「大模型加速器 2.0」版本新增知識庫系列開源組件，助力醫療、製造、教育等行業開發者構建個性化的知識庫。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;&lt;strong&gt;文檔解析技術助力教育大模型建設&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;大模型需要不斷「吸收」正確的專業知識，才能應對實際應用問題。合合信息技術團隊成員表示，在處理年報、論文、實驗室報告等專業文檔的過程中，一個符號的解析失誤，便可能「誤導」大模型，得出與事實相悖的結論。可信性的缺失，也制約了大模型在實際應用場景中的縱深拓展。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;賽爾教育科技發展有限公司（簡稱「賽爾教育」）系「中國教育和科研計算機網 CERNET」的運營公司賽爾網絡的重要子公司，是教育國際化、教育信息化、數字化教育方案的提供商。賽爾教育 CTO、教育數字化事業部總經理楊林提到，教育行業中所涉及的文檔格式多樣，在內容上也包含了表格、公式、手寫字符、多語言文字等信息。如何高效準確地提取各類文檔中的文本信息，並非易事。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;「教育行業的大模型建設工作中，數據的數量和質量起着決定性作用。我們做了很多嘗試，模型的速度和準確性都達不到要求，嚴重影響科研工作的進展。」楊林表示，行業知識庫的構建基於大量文檔的文本信息提取，需要高效率、高準確率的工具。合合信息文檔解析技術提供了專業的技術支持和服務，有效解決了文檔處理過程中的問題。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;在「大模型加速器」的支持下，合合信息與賽爾教育共同協作，提升大模型對複雜版面、元素的「理解力」，使其按照人類正常的閲讀順序識別文檔結構，智能劃分標題、段落、表格和圖表等內容塊，幫助大模型理解版面、內容間的對應關係，減少 AI「幻覺」現象。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;342&quot; src=&quot;https://oscimg.oschina.net/oscnet//a7a308c875be2e8390b05bb0b576d463.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;圖説：圖表解析模塊將圖表還原為表格數據&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;除了複雜的版面佈局，種類繁多、空間結構複雜的圖表元素也是解析難點所在。「大模型加速器 2.0」圖表解析模塊可智能提取多種圖表中的關鍵數據點、座標軸信息、圖例説明等，在精準解析不同類型圖表數據的基礎上，將其還原為一組完整的 Excel 表格數據，作用於教育行業大模型微調，學科知識庫建設、智能審閲等環節。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;智能溯源讓大模型用得更「安心」&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;近期，多家券商機構紛紛宣佈接入大模型，幫助分析師、行業研究員等專業人士提高工作效率。為幫助用戶簡化專業文檔數據篩選和數據抽取流程，提升文檔內容解讀效率與準確率，「大模型加速器 2.0」 上線了知識庫產品組件，支持複雜文檔的智能問答、總結與檢索。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;為了讓行業「安心」使用大模型，知識庫產品推出溯源功能，通過在「投餵」給知識庫的 Markdown 及 JSON 文件中標記頁碼、座標等空間位置信息，實現對句子、段落的精確溯源，為用戶提供了一個快速檢驗的路徑。以財務分析為例，大模型在多份高達上千頁的財報文件中找到收入、利潤等關鍵數據後，券商分析師可利用溯源功能定位原表格，對信息進行復核，防止錯誤、遺漏。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;343&quot; src=&quot;https://oscimg.oschina.net/oscnet//adf6434e863fb37b3fe6b42792637cbe.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;圖説：知識庫對財報數據所在表格進行精準溯源&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;目前，知識庫組件已面向開發者開源，幫助其根據自身需要快速構建個性化行業知識庫。此前，合合信息已開源智能文檔處理「百寶箱」系列產品，解決文檔解析精度低、解析效果評估難等問題，開發者可根據研發需求靈活搭配使用。未來，「大模型加速器」將持續優化迭代，助力大模型在各行各業中「百花齊放」。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340694</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340694</guid>
            <pubDate>Sun, 23 Mar 2025 08:36:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>你敢要它就有！至強 6 新品治好選擇困難症</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;2 月下旬，英特爾新一代數據中心處理器至強 6 大家族迎來了第三波的新品發佈，主要包括代號 Granite Rapids-SP 的至強 6700/6500 性能核處理器，以及代號 Granite Rapids-D 的至強 6 系統級芯片（SoC）。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6700/6500 系列性能核處理器上市，意味着至強 6 性能核產品陣容終於「補全」，覆蓋從 8 至 128 核，得以更好地銜接第四代/第五代至強可擴展處理器產品線，與去年發佈的至強 6700 系列能效核處理器形成清晰的分工。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;417&quot; src=&quot;https://oscimg.oschina.net/oscnet//1700379bb45a4fad54c8d92d342590c3.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;至強 6 全家福&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;由於至強 6 產品家族旗下型號多，且發佈時間跨度較長，定位差異也很大，我們先簡要回顧至強 6 家族已經上市的產品線。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;2024 年 6 月，至強 6 首次亮相，發佈的是代號為 Sierra Forest-SP 的至強 6700 能效核處理器。該系列的計算單元採用英特爾 3 製造工藝，提供了 144 個能效核，主要針對高密度、橫向擴展工作負載，如雲原生、CDN、微服務等，在為這類應用帶來性能改善的同時，能效也有更為明顯的提升。至強 6700 系列能效核處理器最大功耗 350 瓦，採用 Socket E2 接口（LGA 4710），支持 8 通道 DDR5 6400MT/s，88 個 PCIe 5.0 通道及 64 個 CXL 2.0 通道。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;2024 年 9 月發佈的至強 6900 系列性能核處理器代號 Granite Rapids-AP，定位為旗艦級，適合要求嚴苛的雲、科學計算、AI（機頭）等領域，可以在同樣的空間內部署更多的性能核（單插槽可以達到 128 個性能核）、提供更大的內存帶寬（12 通道內存，並支持 MRDIMM 8800MT/s）、更多的 PCIe 5.0 通道（96 個）或 CXL 2.0 通道（64 個），以及 6 個 UPI2.0 鏈路。相應的，至強 6900 系列性能核處理器需要使用更大面積的接口 Socket BR（LGA 7529），最大功耗也增加到 500 瓦。其新的性能核前端設計有較大改進，在翻倍的內核數量和內存帶寬加持下，性能表現是至強 6 整個家族中的佼佼者，在很多主流應用負載上的性能表現都能達到上一代產品的 2-3 倍。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;360&quot; src=&quot;https://oscimg.oschina.net/oscnet//465c7b0dee584ad4af9faab4f6779f82.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;今年 2 月發佈的至強 6700/6500 系列性能核處理器代號 Granite Rapids-SP，集成了 8 到 86 個性能核，平均每核分配的末級緩存多數都在 4MB 以上，完整支持 AMX 指令集，DSA、QAT、IAA 和 DLB 等加速器也都開啓。至強 6700/6500 性能核處理器使用與至強 6700 能效核處理器相同的接口和功耗上限，PCIe、CXL 擴展能力相同，支持 8 通道 DDR5 6400MT/s，部分型號還提供了 MRDIMM 8000MT/s 的支持能力。該系列的市場定位更偏向主流的數據中心、電信基礎設施，以及企業級服務器和邊緣場景。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;在此，我們先做一個小結：至強 6 家族規劃了 AP 與 SP，以及性能核與能效核的微架構，由此交叉構成多個產品大類：AP+性能核對應至強 6900 性能核產品線（最高 128 核），負責提供這代產品目前最強性能輸出水平（內核數和內存通道），PCIe 和 CXL 擴展能力也要更強一些，使用面積更大的封裝和插座。至強 6900 性能核的 6 個 UPI2.0 鏈路全部用於雙路互聯，可以充分提升跨處理器的訪問帶寬以儘可能提高性能，但不考慮用於構建多路系統。SP+能效核及性能核，對應的產品線則分別為至強 6700 能效核（最高 144 核）與至強 6700/6500 性能核產品線（最高 86 核），更多是用於主流服務器機型的升級換代，封裝尺寸與前幾代至強保持一致。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;203&quot; src=&quot;https://oscimg.oschina.net/oscnet//85077929ba88b5bfb2ae7ad5acb4bd78.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;應用新主流：生成式 AI、結構化數據&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6700/6500 系列性能核處理器與已經發布半年多的至強 6700 系列能效核處理器可以使用相同的服務器平台，因此在發佈後可以迅速進入市場。由於過去一年 AI 需求高漲，業內一直期待性能核與能效核處理器能夠儘快形成清晰明確的分工，以完整覆蓋主流市場各種類型業務的需求：傳統業務需要降本增效，新興業務需要提質增量。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;傳統業務混合 AI 負載&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;在大模型蔚為風潮的背景下，至強 6 性能核擁有更多的內核、較大的內存帶寬，以及 AMX 這類為 AI 任務優化的加速器，不論是傳統的神經網絡推理，還是 Transformer 大語言模型推理的性能都相較上一代至強處理器有大幅提升。主流的 200 億參數以下的中、小規模的模型在至強 6 上都可以順暢運行，再得益於至強本身在通用計算領域的競爭力和積累，就使得至強 6700 性能核非常適合混合部署 AI 業務的用戶。譬如在互聯網行業中已經驗證成熟的推廣搜（廣告、推薦、搜索），企業應用中滲透率很高的自然語言處理，正在蓬勃發展的智能客服、知識助理等大模型私有部署等。這些業務都可以與傳統業務部署在同一個節點、同一個資源池當中。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;生成式 AI&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;如果説至強 6900 性能核是 AI 訓練的最佳機頭，那麼至強 6700/6500 系列性能核也有望成為 AI 推理的優秀機頭，搭配 GPU 或其他 AI 專用加速器運行以生成式 AI 為代表的，大參數、高併發的大語言模型推理任務。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;上一小節中提到了至強 6 性能核自身核心性能、內存帶寬的優勢。在至強 6700/6500 系列性能核上，還比較容易獲得內存容量的優勢。基於傳統佈局，雙路至強 6700/6500 系列性能核機型依舊可以輕鬆提供 32 條內存插槽，可以較低成本部署 2~4TB 本地內存，上限可以達到 8TB。部分型號還可以享受 MRDIMM 8000MT/s 提供的更高帶寬。除了充裕的內存容量和帶寬，充足的 PCIe 5.0 通道數有利於配置多塊 AI 加速器和高性能網卡。至強 6700/6500 系列的雙路節點可以提供 176 條 PCIe 5.0 通道，單路節點可提供 136 條。這使得在 4U 機箱內部署 8 卡不再需要依賴 PCIe Switch 板，在液冷的支持下部署更高的密度也依然遊刃有餘。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;隨着以 KTransformer 為代表的開源大語言模型推理優化框架的出現，利用 MoE 架構稀疏性的特點在 CPU 和 GPU 上實現異構分層部署推理任務逐漸引起重視。這種異構協同的方案可以充分利用算力、存儲資源，大幅降低部署門檻，顯著提升推理速度。這種模式也能讓至強 6 處理器的計算性能、內存優勢及 AMX 加速能力獲得更大的發揮空間。而且至強 6 性能核產品線中的 DSA、QAT、DLB、IAA 等加速器也全都默認開放，讓數據流的預處理、節點間交互的效率更高。尤其是 6700 性能核的高性能產品線當中，4 種加速器都各提供 4 個，能助力 CPU 卸載加密、壓縮、數據傳輸和轉換等任務。這些特性有利於改善節點內南北向、東西向數據傳輸中的消耗，在構建高並行、多節點的 AI 集羣時可進一步提升效率。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強處理器在可信或隱私計算方面較為獨到的技術特性，也在這次至強 6700/6500 系列性能核發布時得到了進一步增強。其從第四代至強可擴展處理器開始集成的 TDX（Trust Domain Extensions）技術，原本可基於硬件的可信執行環境部署信任域（TD）讓敏感數據和應用程序獲得虛擬機/容器級別的隔離，免受未經授權的訪問。這次也隨新品將機密計算的覆蓋範圍進一步增強，通過新增的 TDX Connect，可在 CPU 和 PCIe 設備之間實現高性能的加密連接，這可以更好地保護加載於主內存、CPU、加速卡全鏈路中的數據。TDX Connect 對於需要租賃彈性算力部署私有 AI 業務的用戶而言是一個非常重要的保障，畢竟在算力平權的時代，自有數據和微調的垂直模型才是企業核心競爭力的有力保障。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;向量數據庫&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;生成式 AI 帶動了業內對向量數據庫的關注。由於大語言模型的知識是在訓練和微調時固化的，遇到「超綱」的問題時，模型可能會拒絕回答或胡説八道。通過檢索增強生成（RAG）讓模型可以檢索外部數據獲取更多的信息以補充其知識盲區。對於私有化部署大語言模型的企業而言，必須通過微調強化模型在特定領域的專業度，並建議搭配向量數據庫以實現 RAG，可以充分利用私有信息並不斷更新。簡單説，參數規模決定了大語言模型的智力水平，向量數據庫決定了大語言模型的專業度、可信度，以及可持續發展。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;向量數據庫與傳統的以行或列組織信息的數據庫不同，其使用數據的高維度嵌入作為信息單元，並基於嵌入進行相似性檢索。因此在構建向量數據庫時需要通過模型對篩選、收集的文檔進行提取、格式化、切分。結構化數據庫的向量操作非常適合使用至強 6 性能核進行處理。單路的至強 6 性能核的典型應用場景是全閃存儲節點，在此基礎上部署向量數據庫能進一步發揮處理器的性能特點：適宜的處理能力和豐富的擴展性。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;內存數據庫&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;相較於至強 6900 性能核處理器和 6700 能效核處理器，至強 6700/6500 系列性能核處理器還擁有一個關鍵的特點，它們傳承了英特爾在 x86 市場的獨門絕技：可以原生擴展至 4 路和 8 路，這意味着單台服務器通過八路配置即可提供 688 個性能核以及 32TB 本地 DDR5 內存，尤其適合用於大型內存數據庫以及科學計算集羣的胖節點等。以 SAP HANA 為代表的大型內存數據庫為聯機事物處理（OLTP）等關鍵業務提供了有力支撐，將盡可能多的數據放置在內存當中有利於提高併發事務吞吐量、加快決策速度。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;另外，根據以往的經驗，頂尖的服務器廠商還會通過節點控制器進一步拓展處理器數量和內存容量。不過在至強 6 性能核上還有更簡單的內存擴展方式——CXL2.0 內存。至強 6 性能核獨有的 CXL 平面內存模式（Flat Memory Mode）可以平滑地擴展內存容量和帶寬，不需要操作系統內核或部署專用的軟件支持。平面內存模式與本地內存的配置比例是 1:1，理論上可以將服務器的內存容量翻倍，或者允許使用相對更便宜的基於 DDR4 的 CXL 內存。以配置 32TB 內存為例，如果完全使用本地內存，必須使用單條 128GB 的 DDR5 RDIMM，價格比較昂貴；而搭配 CXL 內存，本地內存就可以使用更為常見 64GB DDR5 RDIMM，從而有效降低整體成本，總帶寬還有所提升。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;產品陣容進一步解析&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6700/6500 性能核處理器規劃了非常綿密和多樣的產品線，內核數量從 8 核至 86 核，UPI 數量和啓用的加速器數量也有所差別。為了構成如此多樣的規格，英特爾設計了三種類型的封裝形態：XCC、HCC、LCC。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;■ XCC：擁有兩個計算單元（Compute Tile）和兩個 IO 單元（IO Tile），分別由 Intel 3 和 Intel 7 工藝製造。XCC 所使用計算單元與組成至強 6900 性能核的 UCC 相同，都是單芯片 44 個內核、4 通道內存控制器，區別是 UCC 使用了 3 個計算單元。XCC 的兩個計算單元提供最多 86 個內核。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;■ HCC：一個計算單元和兩個 IO 單元。HCC 的計算單元提供最多 48 個核心，以及 8 通道內存控制器。HCC 沒有考慮對 MRDIMM 的支持。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;■ LCC：一個 16 核心的計算單元和兩個 IO 單元，不支持 MRDIMM。使用 LCC 的處理器 UPI 鏈接數只有 3，這可能與其計算單元和 IO 單元之間的 EMIB 連接較少有關。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;358&quot; src=&quot;https://oscimg.oschina.net/oscnet//94050c425264ebc60705990ddea0c85e.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;從產品定位角度看，至強 6700/6500 性能核處理器可以進一步細分為高性能、主流、多路、單路等產品線。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:left&quot;&gt;&lt;strong&gt;高性能產品線&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;182&quot; src=&quot;https://oscimg.oschina.net/oscnet//d2687b6554703ad88436b795f02e77de.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;高性能產品線提供了最多 86 核的型號（6787P），多數型號的加速器全部打開。至強 6 的每個 IO 單元提供 2 個加速器模塊，每個模塊有 DSA、QAT、DLB、IAA 各 1。兩個 IO 單元就是 4 種加速器各 4 個。基於 LCC 的 6517P 和 6507P 提供的加速器是各兩個。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;高性能產品線涵蓋了 XCC、HCC、LCC 三種封裝，因此內核數量、內存支持、功耗的差異也很大。其中，以第三位數字為界，674xP 以上的 4 款均是 XCC，內核數量最多 86，LCC 末級緩存最多 336MB，均支持 MRDIMM 8000MT/s。這裏有一個特例是 6730P，它也基於 XCC，提供了 288MB 末級緩存，但不支持 MRDIMM。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;其中，6745P 以 32 核享受了多達 336MB 的末級緩存，平均每核緩存超過 10MB！它的頻率也較高，基礎頻率超過 3GHz，全核睿頻可以達到 4.1GHz，單核 4.3GHz。這種核少、高頻、大緩存的 SKU 更適合追求低內存延遲、高處理壓力的任務，譬如大數據分析、科學計算等。而核數更多的型號則更適合高並行性的任務。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;6527P、6736P、6737P 這幾個 SKU 使用的 HCC 封裝，提供 16 到 36 核的配置。HCC 理論上最多 48 核，提供 192MB 末級緩存。6737P 只使用了其中的 32 核，但享用了全部末級緩存，因此其定位略高於核數略多的 6736P（36 核）。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;6507 和 6517P 使用 LCC 封裝，核數少，基礎頻率高，可以達到 3.2GHz 以上，睿頻可以達到 4.3GHz，而功耗不到 200 瓦。LCC 給每個性能覈准備了 4.5~6MB 的末級緩存，要多於其他系列的原生設計。高頻率、大緩存有都利於在覈數相對較少的情況下提升性能。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;主流產品線&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;131&quot; src=&quot;https://oscimg.oschina.net/oscnet//3962fb6c40e6a2fce8cc6d5423615662.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;主流產品線的核數跨度在 12 個到 64 個之間，顯然也使用了三種版本的內核封裝。其中兩款 67x0P 使用 XCC，卻沒有開放 MRDIMM 的支持。不過好在二者的末級緩存都較大，平均每核心的緩存容量達到至少 5MB。相比高性能產品線，主流產品線的加速器只開放了一半，分別只有 2 個，每 CPU 的 TDX 數量也減半了。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;這一組產品的型號非常直觀，第三位數字可以與實際內核數掛鈎。譬如 6760P 的第三位是 6，核數是 64；6520P 的 2 對應 24 核。唯一的特例是 6505P，它不是 8 核而是 12 核。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;多路產品線&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;144&quot; src=&quot;https://oscimg.oschina.net/oscnet//87ceefaa506750e036c0687e85dd14ef.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;多路產品線是為 4 路、8 路服務器準備的，售價較高，均被列入 67xxP 序列。該產品線的型號也比較容易理解，第三位數字大致對應了核數多寡；第四位數字是 8 或 4，清晰體現了其原生的 UPI 直連多路支持能力。譬如 6724P 和 6714P 基於 LCC，每個插槽有 3 個 UPI 鏈接，正好可以分別直連其他 3 個插座以構成全連接的 4 路系統，或通過節點控制器實現 8 路。其餘尾數為 8 的處理器都有 4 個 UPI，可以構成典型的 8 路系統。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;271&quot; src=&quot;https://oscimg.oschina.net/oscnet//74068e41adec5507e8c5b4cc45252209.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;這些面向多路的產品都不支持 MRDIMM，即使是其中兩款基於 XCC 也是如此。其實對於多路系統而言，相鄰任意兩個處理器之間頂多隻有一條 UPI 鏈接，跨插座的內存訪問帶寬遠低於雙路產品線——作為對比，雙路旗艦 6900 性能核系列會使用全部 6 個 UPI 互聯。因此，多路系統全局訪問內存的瓶頸在於 UPI 的帶寬，很難發揮 MRDIMM 的帶寬優勢，暫時也就沒有啓用的必要。長遠看，由於 MRDIMM 有單條內存容量翻倍的潛力，未來的多路系統還是會擇機引入 MDRIMM 的。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;多路產品線中超過 16 核的 SKU 都開放了全部的加速器。6748P 是已公開的至強 6 產品線中，唯一使用了「滿血」HCC 的 SKU，提供 48 核和 192MB 末級緩存。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;8 核的 6714P 和 16 核的 6724P 基於 LCC 打造，它倆的核數較少，但設定了比高性能產品線的 6507P 和 6517P 更高的功耗和頻率。實際上，6714P 和 6724P 是整個至強 6 家族當中頻率最高的 SKU，基礎頻率甚至達到了 4GHz，不論是之前提到的高性能產品線還是後面要提到的單路產品線都沒有達到這個水平。高頻也是它們雖然基於 LCC，但依舊可以冠以 67xxP 之名的原因之一。這樣的規格雖不適合高併發的處理，但優勢在於響應速度更快，在配合某些根據內核數收取授權費的軟件使用時也可以適當降低成本。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;單路產品線&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;131&quot; src=&quot;https://oscimg.oschina.net/oscnet//7eaa780c209d0f18624bc10bc4bf5609.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6700 和 6500 性能核的單路產品線所有產品名稱的第四位數字均為 1，第三位數字與核數的對應關係也最為「整齊」，核數均為 8 的整倍數，沒有特例。單路處理器不需要使用 UPI 互聯，因此 IO 單元中原本可用作 UPI x24 的幾個 UIO 可被用作 x16 的 PCIe 或 CXL 通道。最終它們的 PCIe 通道數比雙路「同胞」們多了 48 個，達到 136 個。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;385&quot; src=&quot;https://oscimg.oschina.net/oscnet//7f29e7112dd94f5f56a3e7e5e0d7343c.png&quot; width=&quot;587&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;（圖注：性能核處理器的 IO 單元功能模塊）&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;單路至強 6 性能核處理器的加速器數量大多為 3 組，介於性能（4 組）和主流（2 組）產品線之間。80 和 64 核的單路處理器支持 MRDIMM 8000MT/s，但同樣使用 XCC 的 48 核 6741P 卻不支持 MRDIMM。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;由於當前處理器的內核數量已經足夠的多，專門規劃單路至強可以控制成本，或用於提升機箱內擴展設備的部署密度。以全閃存儲節點為例，如果 2U 前窗提供 24 個 U.2 NVMe 盤位，不依賴 PCIe Switch 或擴展卡的話，需要 96 個 NVMe 通道。單路至強 6 性能核滿足 NVMe SSD 後，還有 40 個 PCIe 5.0 通道，可分配給兩塊 100/200G IB 網卡服務存儲集羣，還有 1 塊 OCP 網卡做管理。對於並行度較高的業務，譬如雲、輕量級推理、視頻轉碼等，如果在原本雙路機箱內部署兩個單路節點，在內核數相同的前提下，可以掛載更多的 PCIe 設備用於推理、轉碼、存儲等。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;至強 6 系統級芯片、至強 6300&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;在至強 6700/6500 性能核發布同期，英特爾也正式推出了至強 6 系統級芯片與至強 6300，在這裏我們對二者也順便做一些簡要介紹。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6 系統級芯片的計算單元與 XCC、HCC、LCC 是通用的，但搭配了一個重新設計的 IO 單元。這個 IO 單元取消了 UIO，減少了 IO 模塊，僅支持較少、較低規格的 PCIe 和 CXL，主要面積用於提供 2×100Gbps 以太網、媒體加速器、vRAN 加速器等。這也從另一個角度體現了至強 6 產品家族將計算單元和 IO 單元解耦的意義。通過調整 IO 單元的規格，配置不同的擴展能力、多樣化的加速器，可以更好地適配更豐富的細分場景。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:center&quot;&gt;&lt;img height=&quot;435&quot; src=&quot;https://oscimg.oschina.net/oscnet//83c73b28d15b80db9cf648dc89604a14.png&quot; width=&quot;640&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6 系統級芯片將通用計算、AI 推理、媒體編碼、以太網等功能整合在單一封裝內，主要部署於邊緣側，如網絡安全加速器、媒體服務器、5G 虛擬基站等。目前已經公開規格的至強 6 系統級芯片最多 42 核（6726P-B），使用 BGA4368 封裝，TDP 最高 235 瓦，支持 4 通道 DDR5 6400MT/S。英特爾也透露了 72 核的存在，後續還會陸續發佈。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6300 系列定位於入門級服務器，採用的內核是 Raptor Lake，提供 8 個核心，支持雙通道 DDR5 4800MT/s ECC UDIMM。Raptor Lake 就是 13 代酷睿處理器中的性能核，只是用在至強產品線當中時沒有再用酷睿那種性能核與能效核並存，或者是大小核的設計，而是使用全性能核的設計。它還提供 ECC 內存支持，並搭配 C260 系列 PCH。同樣的內核、同樣的 LGA1700 插座，其實英特爾在 2024 年第四季度推出過至強 E-2400 系列。至強 6300 系列的出現看起來像是有意將至強 E-2400 統一到至強 6 品牌之下。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;&lt;strong&gt;至強 6 全家福成形：高低搭配，平滑過渡&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6700/6500 性能核的發佈，進一步完善了至強 6 家族產品線。整個面向主流和中高端市場的產品線覆蓋了 8 核到 144 核，提供了領先的內核數量、獨一份的內存帶寬、具有前瞻性的加速器。對於正在進入換代週期的第二、第三代至強可擴展處理器的機型用戶而言，至強 6 可以很好地承接業務遷移、升級的需求。對於保持傳統業務的用戶，至強 6 能效核可以平滑遷移並提供數倍的部署密度以及更好的能效，以改善運營成本。對於希望與時俱進，跟上 AI 浪潮的用戶，至強 6 性能核不僅僅是提供更大更多的內核，其實還提供了更適應 AI 需求的加速器，以實現 1+1＞2 的效果。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;至強 6 為旗艦與主流產品提供了不同的封裝規模。後者的封裝尺寸與第三代至強可擴展處理器以來的幾代產品保持相同，TDP 的增長也比較謹慎。這意味着對於多數用戶而言，這數年來積累的系統佈局、運維習慣可以基本保持不變。&lt;/p&gt; 
&lt;p style=&quot;color:#191919; margin-left:1.8em; margin-right:.63em; text-align:justify&quot;&gt;狂飆的內核與穩定的外形，這並非反差，而是技術前瞻性和對市場持久承諾的結合。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340693</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340693</guid>
            <pubDate>Sun, 23 Mar 2025 08:35:00 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>微信內測聊天界面內置騰訊元寶</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FGXqTLlyx6vml0QNrq8e_kQ&quot; target=&quot;_blank&quot;&gt;根據「市象」的獨家報道&lt;/a&gt;&lt;/u&gt;，騰訊似乎正在悄悄把元寶內嵌進微信體系。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/162605_tu9T_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前看，雖然披着「紅包助手」的皮，&lt;strong&gt;但功能上已經具備置頂、分享、互動等權限，形態上有點像「AI 版文件傳輸助手」&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;實測顯示，這個「元寶紅包封面助手」不僅能問答圖片、文件，還能直接總結公眾號文章和網頁鏈接，功能已經不止是簡單的對話助手，而是在朝 AI 工作流工具方向靠攏。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/162628_3MQL_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/162645_XpKg_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;閲讀更多&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/339845&quot; target=&quot;news&quot;&gt;騰訊元寶成為中國 DAU 排名第三的 AI 原生移動應用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/338559&quot; target=&quot;news&quot;&gt;騰訊元寶宣佈支持上傳、導出騰訊文檔&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/336988&quot; target=&quot;news&quot;&gt;騰訊元寶狂砸錢推廣，27 天投流近 3 億&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340690</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340690</guid>
            <pubDate>Sun, 23 Mar 2025 08:28:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Ubuntu 啓動核心工具鏈現代化改造：Rust 重寫計劃背後的技術決策</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;根據 Canonical 工程副總裁 Jon Seager 在 Ubuntu 論壇的&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fcarefully-but-purposefully-oxidising-ubuntu%2F56995&quot; target=&quot;_blank&quot;&gt;最新聲明&lt;/a&gt;&lt;/u&gt;，Ubuntu 計劃從 25.10 版本開始逐步引入基於 Rust 的&lt;code&gt;uutils&lt;/code&gt;工具集，取代沿用數十年的 GNU coreutils（包含&lt;code&gt;ls&lt;/code&gt;、&lt;code&gt;cp&lt;/code&gt;、&lt;code&gt;mv&lt;/code&gt;等經典命令）。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/161856_Pqfp_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;這一變革瞄準將於 2026 年發佈的 Ubuntu LTS 版本，目標是通過 Rust 的內存安全特性降低攻擊面，同時保持與 GNU 工具 100% 的腳本兼容性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;技術選型邏輯&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;GNU coreutils 作為 C 語言編寫的核心基礎設施，長期面臨內存管理漏洞風險（如緩衝區溢出）。根據&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2F&quot; target=&quot;_blank&quot;&gt;美國國家漏洞數據庫&lt;/a&gt;統計，2024 年 C/C++項目漏洞中，34% 與內存安全相關。而 Rust 憑藉所有權模型和編譯器強制檢查，理論上可消除此類問題。uutils 項目採用 MIT 協議，目前已實現 80% 的核心命令兼容性，開發團隊承諾「零腳本適配成本」（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fuutils%2Fcoreutils&quot; target=&quot;_blank&quot;&gt;項目 GitHub 頁&lt;/a&gt;）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;開發者遷移路徑&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Canonical 同步推出實驗工具&lt;code&gt;oxidizr&lt;/code&gt;，支持在 GNU 工具鏈與 Rust 版本間動態切換。通過命令&lt;code&gt;oxidizr toggle coreutils&lt;/code&gt;，開發者可實時對比&lt;code&gt;ls -l&lt;/code&gt;等命令的輸出差異。初期測試顯示，Rust 版工具內存佔用降低 12%-18%，但大規模部署仍需驗證邊緣案例（如&lt;code&gt;find -exec&lt;/code&gt;管道處理）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;生態影響評估&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此次替換涉及超過 100 個基礎命令，但社區已有成功先例：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;sudo-rs&lt;/code&gt;（Rust 重寫的 sudo）通過&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsecurity.googleblog.com%2F2024%2F03%2Frust-in-linux-security.html&quot; target=&quot;_blank&quot;&gt;Google 安全研究審計&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Red Hat 在 Fedora 40 中試點&lt;code&gt;coreutils-rs&lt;/code&gt;模塊&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;風險提示：雖然 uutils 承諾兼容性，但企業環境中依賴&lt;code&gt;/proc&lt;/code&gt;文件系統或 LD_PRELOAD 注入的監控工具需重新適配。建議運維團隊通過&lt;code&gt;oxidizr benchmark&lt;/code&gt;命令評估性能波動，並關注&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdimage.ubuntu.com%2Fdaily-live%2Fcurrent%2F&quot; target=&quot;_blank&quot;&gt;Ubuntu 25.10 每日構建版&lt;/a&gt;進展。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;延伸討論：&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Rust 是否將重塑 Linux 基礎設施？參考 CNCF 2024 報告，83% 的雲原生項目已引入 Rust 組件。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;（本文部分數據引用自&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fuutils.github.io%2F&quot; target=&quot;_blank&quot;&gt;uutils 技術文檔&lt;/a&gt;與&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Foxidizing-ubuntu-core-utils%2F14536&quot; target=&quot;_blank&quot;&gt;Ubuntu 論壇&lt;/a&gt;）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340686/ubuntu-should-become-more-modern-with-rust-tools</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340686/ubuntu-should-become-more-modern-with-rust-tools</guid>
            <pubDate>Sun, 23 Mar 2025 08:19:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>螞蟻回應 AI 訓練降本：基於不同芯片持續調優，將逐步開源</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;彭博社援引知情人士報道稱，螞蟻集團使用中國製造的半導體開發訓練人工智能模型的技術，可將成本降低 20%。對此，螞蟻方面回應稱：螞蟻針對不同芯片持續調優，以降低 AI 應用成本，目前取得了一定的進展，也會逐步通過開源分享。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;330&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/163214_FtR9_4252687.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;事件背景：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;螞蟻集團的 Ling 團隊近日在預印版 Arxiv 平台上發佈了題為《每一個 FLOP 都至關重要:無需高級 GPU 即可擴展 3000 億參數混合專家 LING 大模型》的技術論文，介紹了他們研發的兩款新型大語言模型:百靈輕量版（Ling-Lite）和百靈增強版 (Ling-Plus)。這兩款模型在設計上採用了多項創新，能夠在低性能硬件上高效訓練，顯著降低了成本。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;百靈輕量版的參數規模為 168 億，其中激活參數為 27.5 億。而增強版的基座模型則擁有高達 2900 億的參數，激活參數為 288 億。這兩款模型的性能均達到行業領先水平，尤其是增強版，其 3000 億參數的 MoE 模型在使用國產 GPU 的低性能設備上進行訓練時，表現與高端英偉達芯片的模型相當。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;通常，MoE 模型的訓練需要依賴昂貴的高性能 GPU，如英偉達的 H100 和 H800，這不僅成本高昂，還受到芯片短缺的限制，從而影響了其在資源有限環境中的應用。為此，螞蟻集團 Ling 團隊提出了一個全新的目標 ——「不使用高級 GPU」 擴展模型，突破了資源和預算的限制。他們的創新訓練策略包括動態參數分配、混合精度調度、以及升級的訓練異常處理機制，這些策略有效地縮短了中斷響應時間，並且優化了模型評估流程，壓縮了驗證週期超過 50%。&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在實驗中，Ling 團隊對 9 萬億個 token 進行了 Ling-Plus 的預訓練。結果顯示，使用高性能硬件配置訓練 1 萬億 token 的成本約為 635 萬元人民幣，而採用螞蟻的優化方法後，低規格硬件訓練成本降至 508 萬元左右，節省了近 20%。同時，性能與阿里通義 Qwen2.5-72B-Instruct 和 DeepSeek-V2.5-1210-Chat 相當。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340684</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340684</guid>
            <pubDate>Sun, 23 Mar 2025 08:17:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Mozilla.ai 發佈 OpenStreetMap AI 輔助工具鏈，計算機視覺提升地圖標註效率 5 倍</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Mozilla.ai 近日開源其 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.mozilla.ai%2Fmap-features-in-openstreetmap-with-computer-vision%2F&quot; target=&quot;_blank&quot;&gt;OpenStreetMap AI Helper Blueprint 項目&lt;/a&gt;，通過 YOLOv11 目標檢測模型與 Meta SAM 圖像分割模型的組合，將衞星影像自動轉換為符合 OpenStreetMap 規範的地理多邊形數據。實測顯示，游泳池等典型地物標註效率較純人工操作提升 500%&lt;/span&gt;&lt;span style=&quot;color:#000000&quot;&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;img height=&quot;420&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/161425_LmRu_3820517.png&quot; width=&quot;1332&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;技術架構&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;數據採集層&lt;/strong&gt;：整合 Mapbox 衞星瓦片服務（zoom level 18）與 OpenStreetMap Overpass API，構建帶地理座標的標註數據集&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;模型訓練層&lt;/strong&gt;：基於 Ultralytics 框架微調 YOLOv11，模型體積僅 78MB（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fmozilla-ai%2Fswimming-pool-detector&quot; target=&quot;_blank&quot;&gt;Hugging Face 倉庫&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;推理驗證層&lt;/strong&gt;：SAM 模型生成像素級掩膜後，通過 GeoJSON 座標轉換確保多邊形拓撲正確性&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;工作流創新&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;人工選定興趣區域（如西班牙加利西亞大區）&lt;/li&gt; 
 &lt;li&gt;自動下載 1km² 範圍內衞星影像並切片處理&lt;/li&gt; 
 &lt;li&gt;目標檢測模型篩選潛在特徵，分割模型生成精確輪廓&lt;/li&gt; 
 &lt;li&gt;去重校驗後通過 JOSM 編輯器提交變更集&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img height=&quot;618&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/161455_8GPg_3820517.png&quot; width=&quot;1240&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;726&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/161524_IFjw_3820517.png&quot; width=&quot;1422&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;img height=&quot;608&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/161537_PDQe_3820517.png&quot; width=&quot;1298&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;img height=&quot;626&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/161600_LYXJ_3820517.png&quot; width=&quot;1282&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;開發者接入&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持自定義地物類型訓練，需準備 200+ 標註樣本（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmozilla-ai%2Fosm-ai-helper&quot; target=&quot;_blank&quot;&gt;數據集規範&lt;/a&gt;）&lt;/li&gt; 
 &lt;li&gt;提供完整 Colab 工作流： 
  &lt;ul&gt; 
   &lt;li&gt;數據準備：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcolab.research.google.com%2Fgithub%2Fmozilla-ai%2Fosm-ai-helper%2Fblob%2Fmain%2Fdemo%2Fcreate_dataset.ipynb%3Fref%3Dblog.mozilla.ai&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;Create Dataset Colab&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;模型微調：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcolab.research.google.com%2Fgithub%2Fmozilla-ai%2Fosm-ai-helper%2Fblob%2Fmain%2Fdemo%2Ffinetune_model.ipynb%3Fref%3Dblog.mozilla.ai&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;Finetune Model Colab&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;生產部署：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcolab.research.google.com%2Fgithub%2Fmozilla-ai%2Fosm-ai-helper%2Fblob%2Fmain%2Fdemo%2Frun_inference.ipynb%3Fref%3Dblog.mozilla.ai&quot; target=&quot;_blank&quot;&gt;&lt;code&gt;Run Inference Colab&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340683/map-features-in-openstreetmap-with-computer-vision</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340683/map-features-in-openstreetmap-with-computer-vision</guid>
            <pubDate>Sun, 23 Mar 2025 08:17:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>百度秒噠全量上線，號稱國內首個對話式應用開發平台</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;百度今日宣佈，其國內首創的對話式應用開發平台「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.baidu.com%2Fproduct-s%2Fmiaoda_home&quot; target=&quot;_blank&quot;&gt;秒噠&lt;/a&gt;」已全面上線。該平台允許用戶通過自然語言直接描述需求，系統即可自動生成具備完整功能的應用代碼，標誌着無代碼開發工具領域的一大突破。&lt;/p&gt; 
&lt;p&gt;在秒噠的官方網頁上，百度強調這是他們精心打造的首款無代碼工具，旨在賦予每個人如同程序員般的創造能力，聲稱「無需編寫代碼，即可將任何創意變為現實」。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;285&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-904f0fa47a304e6b90a605da832adfe8bd5.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;百度創始人李彥宏在介紹秒噠時曾指出，無代碼編程技術依託大模型直接生成代碼，徹底顛覆了傳統編程模式，實現了零代碼門檻，任何人都能快速上手。&lt;/p&gt; 
&lt;p&gt;此外，多智能體協作功能則基於百度文心大模型的先進思考與規劃能力，能夠智能調度和編排不同的智能體，以協同完成複雜任務。至於多工具調用，則是利用文心大模型的廣泛連接性，輕鬆接入網頁檢索、iRAG、地圖 API 等多種實用工具。&lt;/p&gt; 
&lt;p&gt;「秒噠的推出預示着一個新時代的來臨——在這個時代，個人僅需憑藉創意與想法，便能驅動多個智能體協同作業，將夢想變為現實，甚至創造經濟價值。這無疑為開發者及廣大用戶開闢了一條前所未有的創新之路。」&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340681</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340681</guid>
            <pubDate>Sun, 23 Mar 2025 08:09:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Next.js 中間件曝高危漏洞 CVE-2025-29927，授權繞過風險波及全版本</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;研究人員在 Next.js 框架的中間件實現中發現嚴重安全漏洞（CVE-2025-29927），攻擊者通過偽造 &lt;code&gt;x-middleware-subrequest&lt;/code&gt; 請求頭可繞過身份驗證與路由保護機制。該漏洞影響 11.1.4 至 15.2.3 之前的所有版本，覆蓋超過 82% 的生產環境部署（依據 Next.js 官方統計面板）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;漏洞原理&lt;/strong&gt;&lt;br&gt; 當中間件檢測到 &lt;code&gt;x-middleware-subrequest&lt;/code&gt; 頭時會跳過授權邏輯，攻擊者可通過構造特定格式的請求頭（如 &lt;code&gt;pages/_middleware&lt;/code&gt; 或 &lt;code&gt;middleware:&lt;/code&gt; 重複序列）觸發該機制。該缺陷使得路由重寫、JWT 校驗等安全措施完全失效。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;影響範圍&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;11.1.4 ≤ Next.js &amp;lt; 12.2.0&lt;/li&gt; 
 &lt;li&gt;12.2.0 ≤ Next.js &amp;lt; 14.2.25&lt;/li&gt; 
 &lt;li&gt;15.0.0 ≤ Next.js &amp;lt; 15.2.3&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;修復方案&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;立即升級至安全版本： 
  &lt;ul&gt; 
   &lt;li&gt;Next.js 15.x → ≥15.2.3 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnextjs.org%2Fblog%2Fnext-15-2-3&quot; target=&quot;_blank&quot;&gt;更新日誌&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;Next.js 14.x → ≥14.2.25 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnextjs.org%2Fblog%2Fnext-14-2-25&quot; target=&quot;_blank&quot;&gt;更新日誌&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;臨時緩解措施：在 CDN/反向代理層過濾&amp;nbsp;&lt;code&gt;x-middleware-subrequest&lt;/code&gt;&amp;nbsp;頭（需注意 Nginx 配置需包含&amp;nbsp;&lt;code&gt;proxy_set_header X-Middleware-Subrequest &quot;&quot;;&lt;/code&gt;）&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#dbdbdb; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;開發者可通過運行 &lt;code&gt;npx next-info@latest&lt;/code&gt; 快速檢測項目風險狀態。Vercel 已為託管項目自動部署熱補丁，私有部署用戶需手動處理。&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzeropath.com%2Fblog%2Fnextjs-middleware-cve-2025-29927-auth-bypass&quot; target=&quot;_blank&quot;&gt;漏洞技術細節&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340680/nextjs-middleware-cve-2025-29927-auth-bypass</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340680/nextjs-middleware-cve-2025-29927-auth-bypass</guid>
            <pubDate>Sun, 23 Mar 2025 08:02:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Cloudflare 與 Vercel CEO 公開互懟</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;近日，全球互聯網基礎設施領域上演了一場罕見的「CEO 大戰」——Cloudflare CEO Matthew Prince 與 Vercel CEO Guillermo Rauch 在社交媒體 X 上展開激烈交鋒，雙方圍繞技術漏洞修復、服務穩定性與行業道德展開脣槍舌戰。&lt;/p&gt; 
&lt;p&gt;這場衝突不僅暴露了技術巨頭間的生態競爭，也為開發者技術選型提供了重要參考。&lt;/p&gt; 
&lt;h3&gt;事件導火索：Next.js 高危漏洞處置爭議&lt;/h3&gt; 
&lt;p&gt;事件始於 Next.js 框架曝出的高危身份驗證繞過漏洞（&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fadvisories%2FGHSA-f82v-jwr5-mffw&quot; target=&quot;_blank&quot;&gt;CVE-2025-29927&lt;/a&gt;&lt;/u&gt;），該漏洞允許攻擊者無需憑證即可訪問受保護路由。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/154810_K1Uz_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;作為 Next.js 的主要維護者，Vercel 被社區質疑響應遲緩，而 Cloudflare 則迅速發佈 Workers 平台補丁方案，並推出「Diverce」遷移工具（命名戲謔 Divorce+Vercel），宣稱可一鍵將 Next.js 應用從 Vercel 遷移至 Cloudflare 平台。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/154853_nrV5_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Cloudflare 這波操作把&lt;span&gt;Vercel CEO 給氣炸了，直接貼臉開懟，説 Cloudflare DDoS 是垃圾，而且服務天天故障。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0324/154918_DLMp_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;技術博弈背後的生態競爭&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;架構理念衝突&lt;/strong&gt;&lt;br&gt; Cloudflare 強調邊緣計算的性能優勢，其 Workers 無服務器平台支持在 300+城市就近處理請求；Vercel 則主張前端優先的開發體驗，通過 Next.js 實現服務端渲染與邊緣函數的深度整合。二者在「邊緣計算」定義上存在根本分歧。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;商業模式碰撞&lt;/strong&gt;&lt;br&gt; 儘管雙方都提供免費層服務（Cloudflare Workers 每日 10 萬次請求/Vercel 每月 100GB 帶寬），但盈利路徑迥異：Cloudflare 依賴企業級安全服務，Vercel 則通過 Serverless 資源超額收費。此次漏洞事件暴露了開源項目商業化過程中的責任歸屬問題。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;開發者體驗之爭&lt;/strong&gt;&lt;br&gt; Vercel 以「零配置部署」著稱，與 Next.js 深度綁定形成技術護城河；Cloudflare 則通過兼容標準（如 WinterCG）構建開放生態，支持多種框架。Diverce 工具的推出，實質是試圖打破前端部署的市場格局。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;開發者技術選型啓示&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全與響應機制評估&lt;/strong&gt;&lt;br&gt; 此次事件表明，依賴單一供應商存在風險。開發者需關注：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;漏洞響應 SLA（Cloudflare 此次 24 小時內提供緩解方案）&lt;/li&gt; 
   &lt;li&gt;漏洞賞金計劃覆蓋範圍（Vercel 未將 Next.js 納入其漏洞計劃）&lt;/li&gt; 
   &lt;li&gt;供應鏈透明度（漏洞詳情披露是否及時）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;遷移成本考量&lt;/strong&gt;&lt;br&gt; Cloudflare 提供的自動遷移工具雖降低技術門檻，但需注意：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;功能兼容性（Vercel 特有功能如 ISR 需重構）&lt;/li&gt; 
   &lt;li&gt;定價模型差異（Vercel 按訪問計費 vs Cloudflare 按請求計費）&lt;/li&gt; 
   &lt;li&gt;監控生態完整性（Vercel 提供一體化性能分析）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;社區治理模式對比&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Next.js 採用 MIT License 但由 Vercel 主導開發，關鍵決策缺乏社區參與&lt;/li&gt; 
 &lt;li&gt;Cloudflare Workers 生態基於 Apache 2.0 License，更多廠商參與標準制定，開發者需評估技術棧的鎖定風險與長期可維護性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;行業影響與趨勢展望&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;邊緣計算標準分化&lt;/strong&gt;&lt;br&gt; Cloudflare 推動的 WinterCG 標準與 Vercel 的 Next.js 私有 API 之爭，可能導致邊緣運行時碎片化。開發者需關注標準兼容性，避免過度依賴特定平台。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;開源商業化倫理討論&lt;/strong&gt;&lt;br&gt; 此次事件引發對開源項目「偽開放」的質疑——當核心基礎設施由商業公司控制時，如何平衡社區利益與企業訴求？這或推動更嚴格的開源治理規範出台。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;開發者關係管理升級&lt;/strong&gt;&lt;br&gt; CEO 親自下場辯論反映技術公司愈發重視開發者心智爭奪。預計將有更多廠商推出遷移獎勵計劃、漏洞響應承諾等開發者友好政策。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;這場巨頭之爭最終將如何影響技術生態？開發者又該如何在性能、安全與供應商鎖定之間取得平衡？歡迎在評論區分享你的見解。&lt;/em&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340676</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340676</guid>
            <pubDate>Sun, 23 Mar 2025 07:49:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Ubuntu 22.04 LTS 正式支持 NVIDIA Jetson Orin 系列，助力邊緣 AI 開發</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;Canonical 宣佈 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2025%2F03%2Fubuntu-announces-official-support-for-nvidia.jetson-ai-modules&quot; target=&quot;_blank&quot;&gt;Ubuntu 22.04 LTS 正式支持 NVIDIA Jetson Orin 系列計算模塊&lt;/a&gt;，這一合作旨在為邊緣 AI、機器學習和機器人等應用提供優化的性能和開箱即用的兼容性。通過這一支持，開發者可以在 NVIDIA Jetson 模塊上使用 Ubuntu，享受企業級的安全更新和持續支持，同時減少平台配置的麻煩，從而有更多時間專注於創新和實驗。&lt;/p&gt; 
&lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;img height=&quot;804&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/153029_YoEw_3820517.png&quot; width=&quot;1518&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;此外，Canonical 還提供了 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2025%2F03%2Fubuntu-announces-official-support-for-nvidia.jetson-ai-modules&quot; target=&quot;_blank&quot;&gt;Ubuntu Core 24 鏡像&lt;/a&gt;，專為物聯網和邊緣計算設備設計。Ubuntu Core 是一個最小化、安全且嚴格限制的 Ubuntu 版本，支持 OTA 更新和輕鬆回滾。雖然預構建的 Ubuntu Core 24 鏡像尚未提供下載，但 Canonical 提供了手動創建自定義鏡像的文檔。&lt;/p&gt; 
&lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;開發者可以從 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2025%2F03%2Fubuntu-announces-official-support-for-nvidia.jetson-ai-modules&quot; target=&quot;_blank&quot;&gt;Ubuntu 官方網站&lt;/a&gt; 下載適用於 NVIDIA Jetson 的 Ubuntu Server 22.04 鏡像，支持的模塊包括 Jetson AGX Orin 系列、Jetson Orin Nano 系列和 Jetson Orin NX 系列。這一合作標誌着在邊緣 AI 領域的重大進展，結合了 Ubuntu 的企業級可靠性和 NVIDIA 的尖端加速計算技術，使開發者能夠更輕鬆地將 AI 從概念推向生產。&lt;/p&gt; 
&lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;更多詳細信息可以參考 Canonical 的官方公告。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340672/ubuntu-announces-official-support-for-nvidia-jetson-ai-modules</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340672/ubuntu-announces-official-support-for-nvidia-jetson-ai-modules</guid>
            <pubDate>Sun, 23 Mar 2025 07:31:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>2024 年最熱門的 20 家開源初創企業</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;歐洲風險投資公司 Runa Capital 發佈了一份「&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frunacap.com%2Fross-index%2Fannual-2024%2F&quot; target=&quot;_blank&quot;&gt;2024 年最熱門的開源初創公司&lt;/a&gt;」榜單。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該公司自 2020 年以來一直運營 Runa Open Source Startup (ROSS) 指數，按照 GitHub「star」數量增長速度每季度更新一次榜單。並從 2023 年開始製作年度報告，重點介紹當年最受歡迎的商業開源初創公司。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2024 年度榜首是 Ollama，其次分別是 Zed Industries 和 Langgenius。具體榜單如下：&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;331&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d316f31d1d286ad464f916ffb9aeb59e957.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;🇨🇦&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Follama.com%2F&quot; target=&quot;_blank&quot;&gt;Ollama&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Follama%2Follama&quot; target=&quot;_blank&quot;&gt;ollama/ollama&lt;/a&gt;, 105.1K stars, 76.1new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;開發了一個本地推理平台，用於運行 Llama 3.3 和 DeepSeek-R1 等 LLM。2021 年在加拿大多倫多成立。從 Essence、Rogue、Sunflower 和 Y Combinator 籌集了 50 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzed.dev%2F&quot; target=&quot;_blank&quot;&gt;Zed Industries&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fzed-industries%2Fzed&quot; target=&quot;_blank&quot;&gt;zed-industries/zed&lt;/a&gt;, 52.1K stars, 52.1new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;提供專為人類和 AI 之間的高性能協作而設計的 Zed 代碼編輯器。2021 年成立於舊金山。從 Root、Redpoint 等公司籌集了 1250 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdify.ai%2F&quot; target=&quot;_blank&quot;&gt;Langgenius&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flanggenius%2Fdify&quot; target=&quot;_blank&quot;&gt;langgenius/dify&lt;/a&gt;, 56.7K stars, 43.4new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一個 LLM 應用開發平台，可協調從代理到複雜 AI 工作流的應用程序。2023 年在紐約成立。從 5Y、阿里雲計算、VCshare、China Growth、Delian 籌集了 140 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcomfy.org%2F&quot; target=&quot;_blank&quot;&gt;ComfyUI&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcomfyanonymous%2Fcomfyui&quot; target=&quot;_blank&quot;&gt;comfyanonymous/comfyui&lt;/a&gt;, 61.9K stars, 40.9new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一款 node-based 應用程序，用於使用生成式 AI 模型生成圖像、視頻和音頻。該公司於 2024 年在舊金山成立。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fall-hands.dev%2F&quot; target=&quot;_blank&quot;&gt;All Hands&lt;/a&gt;&amp;nbsp;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fall-hands-ai%2Fopenhands&quot; target=&quot;_blank&quot;&gt;all-hands-ai/openhands&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;, 39.6K stars, 39.6new stars&lt;/strong&gt;&lt;strong&gt;)。&lt;/strong&gt;是一款先進的軟件開發 AI 代理。2024 年在波士頓成立。從 Rebellion、Menlo、Betaworks、Pillar 等公司籌集了 500 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇨🇳&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flobehub.com%2F&quot; target=&quot;_blank&quot;&gt;LobeHub&lt;/a&gt;&amp;nbsp;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flobehub%2Flobe-chat&quot; target=&quot;_blank&quot;&gt;lobehub/lobe-chat&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;, 50.5K stars, 36.0new stars&lt;/strong&gt;&lt;strong&gt;)。&lt;/strong&gt;是一個 LLM 聊天框架，支持不同的 AI 供應商、多模態和 RAG。2023 年在中國杭州成立。&lt;/li&gt; 
 &lt;li&gt;🇬🇧&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstirlingpdf.com%2F&quot; target=&quot;_blank&quot;&gt;Stirling PDF&lt;/a&gt;（&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fstirling-tools%2Fstirling-pdf&quot; target=&quot;_blank&quot;&gt;stirling-tools/stirling-pdf&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;, 48.2K stars, 34.7new stars&lt;/strong&gt;&lt;strong&gt;）。&lt;/strong&gt;是一款本地託管的 Web 應用程序，用於編輯、轉換和管理 PDF 文件。成立於 2024 年，總部位於英國。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmaybefinance.com%2F&quot; target=&quot;_blank&quot;&gt;Maybe Finance&lt;/a&gt;&amp;nbsp;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmaybe-finance%2Fmaybe&quot; target=&quot;_blank&quot;&gt;maybe-finance/maybe&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;, 34.7K stars, 34.7new stars&lt;/strong&gt;&lt;strong&gt;)。&lt;/strong&gt;提供金融工具和見解，以實現更明智的投資。2021 年成立於阿拉巴馬州伯明翰。從 Attach、Calm Company、Invicta、Bay Wharf、Bicoastal 等公司籌集了 246 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fastral.sh%2F&quot; target=&quot;_blank&quot;&gt;Astral&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fastral-sh%2Fuv&quot; target=&quot;_blank&quot;&gt;astral-sh/uv&lt;/a&gt;, 34.1K stars, 34.1new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;提供 UV，一個速度極快的 Python 包和項目管理器。2023 年在紐約成立。從 Accel、Base Case Capital、Caffeinated 等公司籌集了 400 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fscreenshottocode.com%2F&quot; target=&quot;_blank&quot;&gt;Screenshot to Code&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fabi%2Fscreenshot-to-code&quot; target=&quot;_blank&quot;&gt;abi/screenshot-to-code&lt;/a&gt;, 66.3K stars, 33.7new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;將設計截圖轉換為代碼，簡化前端開發。2023 年在紐約成立。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmyshell.ai%2F&quot; target=&quot;_blank&quot;&gt;MyShell&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmyshell-ai%2Fopenvoice&quot; target=&quot;_blank&quot;&gt;myshell-ai/openvoice&lt;/a&gt;, 30.3K stars, 29.7new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;提供 OpenVoice，這是一種即時、多語言語音克隆工具，可對風格和情感進行細粒度控制。2023 年在舊金山成立。從 Dragonfly、INCE Capital 等公司籌集了 1680 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇨🇦&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffuel.network%2F&quot; target=&quot;_blank&quot;&gt;Fuel&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffuellabs%2Ffuel-core&quot; target=&quot;_blank&quot;&gt;fuellabs/fuel-core&lt;/a&gt;, 57.8K stars, 28.3new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一款高性能以太坊&amp;nbsp;layer-2 rollup。2019 年成立於加拿大溫哥華。從 Blockchain Capital、Stratos Technologies、CoinFund 等公司籌集了 8150 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇨🇭&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fshardeum.org%2F&quot; target=&quot;_blank&quot;&gt;Shardeum&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fshardeum%2Fshardeum&quot; target=&quot;_blank&quot;&gt;shardeum/shardeum&lt;/a&gt;, 28.1K stars, 28.1new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一個基於 EVM 的線性可擴展智能合約平台。2022 年在瑞士楚格成立。從 Blockchain Founders、Alpha、MH、TPC 等籌集了 2360 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇨🇦Puter&amp;nbsp;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fheyputer%2Fputer&quot; target=&quot;_blank&quot;&gt;heyputer/puter&lt;/a&gt;, 27.2K stars, 27.2new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一款互聯網操作系統。2022 年在加拿大溫哥華成立。&lt;/li&gt; 
 &lt;li&gt;🇨🇿&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fexcalidraw.com%2F&quot; target=&quot;_blank&quot;&gt;Excalidraw&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fexcalidraw%2Fexcalidraw&quot; target=&quot;_blank&quot;&gt;excalidraw/excalidraw&lt;/a&gt;, 88.4K stars, 27.0new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一款瀏覽器內白板工具，可幫助用戶輕鬆以手繪風格繪製圖表。2020 年在捷克布爾諾成立。&lt;/li&gt; 
 &lt;li&gt;🇨🇳&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fragflow.io%2F&quot; target=&quot;_blank&quot;&gt;RAGFlow&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Finfiniflow%2Fragflow&quot; target=&quot;_blank&quot;&gt;infiniflow/ragflow&lt;/a&gt;, 26.8K stars, 26.8new stars)。&lt;/strong&gt;是一款基於深度文檔理解的 RAG 引擎。2023 年在中國上海成立。&lt;/li&gt; 
 &lt;li&gt;🇸🇬&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frustdesk.com%2F&quot; target=&quot;_blank&quot;&gt;RustDesk&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frustdesk%2Frustdesk&quot; target=&quot;_blank&quot;&gt;rustdesk/rustdesk&lt;/a&gt;, 78.3K stars, 25.9new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一款自託管的遠程桌面應用程序。2020 年在新加坡成立。&lt;/li&gt; 
 &lt;li&gt;🇭🇺&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoolify.io%2F&quot; target=&quot;_blank&quot;&gt;Coolify&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcoollabsio%2Fcoolify&quot; target=&quot;_blank&quot;&gt;coollabsio/coolify&lt;/a&gt;, 35.9K stars, 25.9new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是 Heroku、Netlify 和 Vercel 的自託管替代方案。成立於 2022 年。&lt;/li&gt; 
 &lt;li&gt;🇺🇸&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flangchain.com%2F&quot; target=&quot;_blank&quot;&gt;LangChain&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flangchain-ai%2Flangchain&quot; target=&quot;_blank&quot;&gt;langchain-ai/langchain&lt;/a&gt;, 97.2K stars, 24.7new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;是一個用於構建複雜 AI 應用程序的框架。2023 年成立於舊金山。從 Benchmark、Sequoia 等公司籌集了 3500 萬美元。&lt;/li&gt; 
 &lt;li&gt;🇸🇬&amp;nbsp;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjan.ai%2F&quot; target=&quot;_blank&quot;&gt;Jan&lt;/a&gt;&amp;nbsp;&lt;/strong&gt;&lt;strong&gt;(&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjanhq%2Fjan&quot; target=&quot;_blank&quot;&gt;janhq/jan&lt;/a&gt;, 24.7K stars, 24.2new stars)&lt;/strong&gt;&lt;strong&gt;。&lt;/strong&gt;讓用戶直接在電腦上運行和管理 AI 模型。2023 年在新加坡成立。&lt;/li&gt; 
&lt;/ol&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340670/the-20-hottest-open-source-startups-of-2024</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340670/the-20-hottest-open-source-startups-of-2024</guid>
            <pubDate>Sun, 23 Mar 2025 07:26:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>LLVM/Clang 編譯器全面適配 AVX10.2，512 位支持成為強制要求</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;近期，英特爾發佈了更新後的&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FLLVM-Clang-AVX10.2-Always-512&quot; target=&quot;_blank&quot;&gt;AVX10 技術白皮書&lt;/a&gt;，其中一項重要決定是 AVX10.2 指令集將不再將 512 位浮點數和整數支持視為可選，而是強制要求。這一變化意味着未來的 AVX10.2 處理器將全面支持 128 位、256 位和 512 位指令集，同時取消了 256 位嵌入式舍入支持，轉而專注於 512 位支持。LLVM/Clang 編譯器此前基於英特爾最初的 AVX10 設計假設進行了開發，現在正進行調整以適應這些新變化。&lt;/p&gt; 
&lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;&lt;img height=&quot;1052&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/151103_8P78_3820517.png&quot; width=&quot;1280&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;AVX10 是英特爾推出的新一代高級向量擴展指令集，旨在提升處理器在並行計算任務中的性能。AVX10.2 作為其最新版本，強制要求 512 位支持，這不僅有助於提升性能，還簡化了編程，特別是在 x86_64 微架構特性級別方面。LLVM/Clang 作為開源編譯器基礎設施的重要組成部分，此前已經實現了對 AVX10.2 的支持。然而，隨着英特爾的最新決定，LLVM/Clang 需要進行以下調整：修正對 256 位/512 位支持的假設，取消對 AVX10.2 無 512 位支持的保護措施，移除不再需要的 256 位嵌入式舍入支持。&lt;/p&gt; 
&lt;p style=&quot;color:#262626; margin-left:0px; margin-right:0px; text-align:left&quot;&gt;這一變化對開發者來説是一個好消息。未來所有 AVX10.2 處理器都將支持 512 位指令集，這意味着開發者可以更輕鬆地編寫高性能代碼，而無需擔心底層指令集的兼容性問題。特別是在需要處理大量數據的場景中，512 位指令集將帶來顯著的性能提升。隨着 AVX10.2 指令集的普及，預計將有更多的應用和庫開始利用這一技術。LLVM/Clang 的全面支持無疑將加速這一進程，推動高性能計算領域的進一步發展。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340666/llvm-clang-avx10-2-always-512</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340666/llvm-clang-avx10-2-always-512</guid>
            <pubDate>Sun, 23 Mar 2025 07:11:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>谷歌為 Gemini 添加實時 AI 視頻功能</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2Fnews%2F634480%2Fgoogle-gemini-live-video-screen-sharing-astra-features-rolling-out&quot; target=&quot;_blank&quot;&gt;據 The Verge 報道&lt;/a&gt;&lt;/u&gt;，谷歌已經開始在 Gemini Live 上推出新的 AI 功能，可以讓人工智能「看到」用戶設備的屏幕或手機攝像頭上的內容，並根據讀取的內容來和用戶進行互動。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-38ebb095a6cb3952b06c11f505a9866c5f4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-ad27a2296e6c09d3e165f0dc731ba0852ac.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;近一年前，谷歌首次展示了「阿斯特拉計劃」 (Project Astra)——該項目為現在這些新功能奠定基礎。&lt;/p&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;谷歌公司在去年 5 月召開的 2024 年 I / O 開發者大會上，曾展示了基於 Gemini 的全新 Project Astra 項目，可以本地運行在 Pixel 手機上，被看作是對標 OpenAI GPT-4o 的最新模型。&lt;/p&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;谷歌表示 Project Astra 是最新的多模態 AI 項目，用戶打開攝像頭，該多模態項目可以直接解釋用戶畫面中物品。&lt;/p&gt; 
 &lt;p style=&quot;color:#222222; margin-left:0; margin-right:0&quot;&gt;&lt;em&gt;相關來源：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F9to5google.com%2F2025%2F03%2F22%2Fgemini-live-astra-rollout-start%2F&quot; target=&quot;_blank&quot;&gt;https://9to5google.com/2025/03/22/gemini-live-astra-rollout-start/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/340660/google-gemini-live-video-screen-sharing-astra-features</link>
            <guid isPermaLink="false">https://www.oschina.net/news/340660/google-gemini-live-video-screen-sharing-astra-features</guid>
            <pubDate>Sun, 23 Mar 2025 06:52:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>