<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-綜合資訊</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-綜合資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Thu, 17 Apr 2025 02:36:10 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>多模態視覺理解大模型推理優化</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;div class=&quot;rich_media_content js_underline_content
                       autoTypeSetting24psection
            &quot; id=&quot;js_content&quot;&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot;&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;margin-right: 12px;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: center;cursor: default;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 40px;height: 40px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 0px 14px 0px 0px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 17px;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(255, 248, 244);font-size: 18px;line-height: 0.5;&quot;&gt; 
        &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;01&lt;/span&gt;&lt;/p&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;span leaf=&quot;&quot;&gt;&amp;nbsp;&lt;/span&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;line-height: 0;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 19px;font-family: Optima-Regular, PingFangTC-light;line-height: 1.8;letter-spacing: 1px;color: rgb(243, 89, 41);&quot;&gt; 
      &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&amp;nbsp;背景&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: right;justify-content: flex-end;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 85px;height: 5px;vertical-align: top;overflow: hidden;background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
       &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;line-height: 1.5;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;text-align: justify;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;大模型時代是人工智能領域的一個重要發展階段，在當今人工智能研究領域，基於 Transformer 架構的多模態視覺理解大模型（VLM）在全世界範圍內引發了深度的技術關注。多模態視覺理解大模型的主要創新在於將語言和視覺兩種模態進行有效的對齊，使其不僅能夠進行基本的圖像識別，還能執行基於視覺輸入的動態內容推理和複雜問題解答。可以應用在房內傢俱家電識別、涉黃涉爆檢測、商家店鋪門頭識別等多個場景，相比傳統模型取得更好的效果。但是由於多模態視覺理解大模型的推理性能比傳統模型低，導致整體成本高，嚴重阻礙了多模態視覺理解大模型的推廣。提高多模態視覺理解大模型的推理性能成為研究重點。我們是多模態大模型技術部門，負責多模態大模型相關的模型研發、推理優化和推廣的工作。我們在 58 的多模態視覺理解的項目場景中，對推理框架和模型進行優化，使用多種方法提高多模態視覺理解模型的推理性能。&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
  &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;margin-right: 12px;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: center;cursor: default;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 40px;height: 40px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 0px 14px 0px 0px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 17px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(255, 248, 244);font-size: 18px;font-family: Optima-Regular, PingFangTC-light;line-height: 0.5;&quot;&gt; 
       &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;02&lt;/span&gt;&lt;/p&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;span leaf=&quot;&quot;&gt;&amp;nbsp;&lt;/span&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;line-height: 0;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 19px;font-family: Optima-Regular, PingFangTC-light;line-height: 1.8;letter-spacing: 1px;color: rgb(243, 89, 41);&quot;&gt; 
     &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&amp;nbsp;場景介紹&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: right;justify-content: flex-end;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 86.2969px;height: 5px;vertical-align: top;overflow: hidden;background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
      &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
 &lt;/section&gt; 
 &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
   &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;text-align: justify;&quot;&gt; 
   &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;在 58 的多模態視覺理解的項目中，都是後台提交任務對圖片進行推理，沒有與用戶進行實時對話的場景，所以目前性能優化的重點是批量輸出的場景。&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-size: 15px;text-align: start;&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;/ul&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;margin-left: 20px;color: rgb(27, 28, 30);font-size: 15px;text-align: start;&quot; class=&quot;list-paddingleft-1&quot;&gt;&lt;/ul&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 10px 8px;color: rgb(27, 28, 30);font-size: 15px;text-align: start;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: justify;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;場景一：長 token 輸入、短 token 輸出&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;text-align: justify;&quot;&gt; 
   &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;多模態視覺大模型輸入的是提示詞+圖片，輸入的 token 通常都比較長，在 58 的場景內，98% 以上的推理場景是輸出短 token，通常在 5 個 token 以內。比如在信安定製數據治理項目中，輸出的 token 是隻有「是」或者「否」。我們重點對這種場景進行性能優化。&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 10px 8px;color: rgb(27, 28, 30);font-size: 15px;text-align: start;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
   &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: justify;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;場景二：長 token 輸入、長 token 輸出&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;text-align: justify;&quot;&gt; 
   &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;另外 2% 的推理場景是輸出長 token，比如給一張簡歷的 pdf 圖片，讓大模型識別圖片中的內容，輸出的 token 一般是幾百個以上。這種場景的佔比很少，不是性能優化的重點方向。&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
   &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;margin-right: 12px;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: center;cursor: default;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 40px;height: 40px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 0px 14px 0px 0px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(243, 89, 41);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 17px;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(255, 248, 244);font-size: 18px;font-family: Optima-Regular, PingFangTC-light;line-height: 0.5;&quot;&gt; 
        &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;03&lt;/span&gt;&lt;/p&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;span leaf=&quot;&quot;&gt;&amp;nbsp;&lt;/span&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;line-height: 0;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 19px;font-family: Optima-Regular, PingFangTC-light;line-height: 1.8;letter-spacing: 1px;color: rgb(243, 89, 41);&quot;&gt; 
      &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&amp;nbsp;性能指標&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: right;justify-content: flex-end;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 86.2969px;height: 5px;vertical-align: top;overflow: hidden;background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
       &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
  &lt;/section&gt; 
  &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt; 
   &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;text-align: justify;&quot;&gt; 
    &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;VLM 推理服務重點關注兩個指標：&lt;/span&gt;&lt;strong&gt;&lt;span leaf=&quot;&quot;&gt;吞吐量&lt;/span&gt;&lt;/strong&gt;&lt;span leaf=&quot;&quot;&gt;和&lt;/span&gt;&lt;strong&gt;&lt;span leaf=&quot;&quot;&gt;時延&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin: 10px 8px;color: rgb(27, 28, 30);font-size: 15px;text-align: start;cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
    &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: justify;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
      &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;吞吐量：&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;主要從系統的角度來看，即系統在單位時間內能處理的 tokens 數量。由於我們的主要場景是長輸入 token，短輸出 token，所以吞吐量的計算以單位時間內能處理的請求作為衡量指標，即模型推理的 qpm。&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt;&lt;/li&gt; 
    &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: justify;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
      &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;時延：&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;主要從用戶的視角來看，即用戶平均收到每個 token 所需的時間。計算方法為用戶從發出請求到收到完整響應所需的時間除以生成序列長度。一般來講，當時延不大於 50 ms/token 時，用戶使用體驗會比較流暢。&lt;/span&gt;&lt;/span&gt; 
     &lt;/section&gt;&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;text-align: justify;&quot;&gt; 
    &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;由&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;於我們的場景都是批量輸出的場景，沒有流式輸出的場景，所以我們重點關注的性能指標是吞吐量。&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
    &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;margin-right: 12px;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: center;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 40px;height: 40px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 0px 14px 0px 0px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 17px;&quot;&gt; 
        &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(255, 248, 244);font-size: 18px;font-family: Optima-Regular, PingFangTC-light;line-height: 0.5;&quot;&gt; 
         &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;04&lt;/span&gt;&lt;/p&gt; 
        &lt;/section&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
    &lt;span leaf=&quot;&quot;&gt;&amp;nbsp;&lt;/span&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;line-height: 0;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 19px;font-family: Optima-Regular, PingFangTC-light;line-height: 1.8;letter-spacing: 1px;color: rgb(243, 89, 41);&quot;&gt; 
       &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&amp;nbsp;優化內容&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: right;justify-content: flex-end;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 86.2969px;height: 5px;vertical-align: top;overflow: hidden;background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
        &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 8px;cursor: default;margin-top: 8px;text-align: center;line-height: 2em;&quot;&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;span id=&quot;OSC_h3_1&quot;&gt;&lt;/span&gt; 
    &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.85);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: left;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;color: rgb(255, 104, 39);&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4.1 圖像預處理優化&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;在多模態推理中 Vision Transformer (ViT) 是一個關鍵的模塊，圖像的預處理是將圖像轉換為適合 ViT 模型輸入數據的過程。主要包括圖像顏色空間轉換、尺寸調整 (Resize)、劃分圖像塊 (Patch Partitioning)、歸一化（Normalize）等步驟。在 LMDeploy 框架中，圖像預處理過程中主要通過 PIL(Pillow) 的 Image 模塊在 CPU 上對圖像進行處理，在圖像 Resize 及 Partition 過程中，效率較低，耗時佔整個 ViT 過程的 20% 以上。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;為了提升系統吞吐能力，減少圖像預處理耗時，我們分別使用 Pillow 與 OpenCV 進行預處理測試，具體表現如下：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-right: 8px;margin-left: 8px;color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;CPU: Intel(R) Xeon(R) Silver 4410Y&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;Python 3.10.12&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;Pillow 10.2.0&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;opencv_python 4.8.1.78&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;2000 張不同分辨率圖像&lt;/span&gt;&lt;/span&gt; 
       &lt;span style=&quot;font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100014200&quot; data-ratio=&quot;0.10252996005326231&quot; src=&quot;https://oscimg.oschina.net/oscnet/1bfb0234-fa3d-4e69-ad7e-225bcbe39f01.png&quot; data-type=&quot;png&quot; data-w=&quot;751&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 1：Pillow 與 OpenCV 預處理耗時對比&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;使用 OpenCV 可以極大的減少圖像預處理的耗時，平均處理單張圖片的耗時由 23.67ms 減少到 12.03ms，性能提升 49.18%。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;在 Resize 過程中，雖然兩個處理庫對應的插值方式均使用 BICUBIC，但當圖像進行下采樣時效果存在明顯差異，使用 OpenCV 進行處理的圖像存在波紋。如下：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img class=&quot;rich_pages wxw-img&quot; data-imgfileid=&quot;100014201&quot; data-ratio=&quot;0.5472222222222223&quot; data-s=&quot;300,640&quot; src=&quot;https://oscimg.oschina.net/oscnet/b96df915-b9d8-40bd-ba95-705072874e44.png&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; style=&quot;width: 509px;height: 279px;&quot; type=&quot;block&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(27, 28, 30); font-size: 15px; text-align: center; cursor: default; line-height: 2em; margin-bottom: 8px; margin-top: 8px;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(0, 0, 0); cursor: default; font-size: 16px;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 2：Pillow 與 OpenCV 效果對比&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;通過對比源碼實現，發現二者在插值與邊界處理實現上有所差異：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-right: 8px;margin-left: 8px;color: rgb(27, 28, 30);font-size: 15px;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: bold;&quot;&gt;插值計算方式有差異&lt;/span&gt;：二者均使用 4x4 的卷積核進行插值計算，OpenCV 直接使用三次多項式公式計算每個像素的權重，並對周圍 16 個像素進行加權平均；而 Pillow 將三次卷積操作分解為兩個一維卷積，先對水平方向進行卷積，然後再對垂直方向進行卷積。&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-right: 8px;margin-left: 8px;color: rgb(27, 28, 30);font-size: 15px;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: bold;&quot;&gt;邊界處理的差異&lt;/span&gt;：&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;OpenCV 供多種邊界處理方式，例如 BORDER_REPLICATE, BORDER_REFLECT, BORDER_WRAP 等；Pillow 通常使用邊界複製的方式進行處理，即邊緣像素值被複制到圖像外部，以避免在邊緣出現偽影。&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;針對這個問題，OpenCV 説明文檔中提供了相應的解決方案：&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;background-color: rgb(214, 214, 214);color: rgb(0, 0, 0);&quot;&gt;To shrink an image, it will generally look best with INTER_AREA interpolation, whereas to enlare an image, it will generally look best with INTER_CUBIC (slow) or INTER_LINEAR (faster but still looks OK).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;於是我們根據不同的圖像採樣對插值方式進行動態調整，對圖像降採樣時，使用 INTER_AREA 插值，上採樣時，使用 INTER_CUBIC(速度較慢，但效果最好)，調整後，Resize 結果如下：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/e376a935-28bc-49af-a8c6-cabb4db7286f.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.38425925925925924&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;1080&quot; type=&quot;block&quot; data-imgfileid=&quot;100014202&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); margin-bottom: 8px; cursor: default; margin-top: 8px; text-align: center; line-height: 2em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(0, 0, 0); cursor: default; font-size: 16px;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 3：OpenCV 優化前後與&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); margin-bottom: 8px; cursor: default; margin-top: 8px; text-align: center; line-height: 2em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(0, 0, 0); cursor: default; font-size: 16px;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;Pillow 效果對比&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;span id=&quot;OSC_h3_2&quot;&gt;&lt;/span&gt; 
    &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: left;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;color: rgb(255, 104, 39);&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4.2 ViT 模塊支持 TensorRT&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;ViT 模塊是多模態推理框架中一個必不可少的組成模塊，主要負責圖像相關處理及編碼工作。ViT 模塊的處理速度，直接影響整個框架的整體推理效率。為了進一步提升框架的推理效率，我們對 ViT 模塊的耗時進行了分塊分析，結果如下：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/7c067863-ae5f-4261-bc0f-f16e4b12bb25.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.10119840213049268&quot; data-type=&quot;png&quot; data-w=&quot;751&quot; data-imgfileid=&quot;100014203&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); margin-bottom: 8px; cursor: default; margin-top: 8px; text-align: center; line-height: 2em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(0, 0, 0); cursor: default; font-size: 16px;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 4：vision 模型推理耗時及內存佔用情況&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;內存拷貝相關邏輯：&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/ce4defef-9707-41cd-88e1-c878c4646834.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5291181364392679&quot; data-type=&quot;png&quot; data-w=&quot;601&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;601&quot; data-imgfileid=&quot;100014175&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 5：LMdeploy VIT 階段內存拷貝代碼截圖&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;經過驗證，內存拷貝耗時主要是等待 GPU 異步處理結果，所以實際上主要耗時模塊為圖像預處理及特徵提取兩部分。具體定位步驟如下：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;ul style=&quot;list-style-type: disc;margin-left: 8px;margin-right: 8px;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
     &lt;li&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;內存拷貝邏輯修改&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;ul style=&quot;list-style-type: circle;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
      &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
        &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;lmdeploy/vl/engine.py 取消結果拷貝至 cpu 操作&lt;/span&gt;&lt;/span&gt; 
       &lt;/section&gt;&lt;/li&gt; 
      &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
        &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;lmdeploy/serve/vl_async_engine.py 取消拷貝到 cpu 及轉換 numpy 操作&lt;/span&gt;&lt;/span&gt; 
       &lt;/section&gt;&lt;/li&gt; 
      &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
        &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;lmdeploy/pytorch/message.py 中修改 InputEmbeddings 及類型為 Torch.Tensor(GPU)&lt;/span&gt;&lt;/span&gt; 
       &lt;/section&gt;&lt;/li&gt; 
     &lt;/ul&gt; 
     &lt;li&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
       &lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;內存拷貝邏輯修改引起異常的分析&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;邏輯調整後，推理結果異常。在 vl/engine.py forward 增加輸出結果日誌後，推理正常。經驗證輸出結果日誌操作起到同步等待作用，使用 torch.cuda.synchronize() 或者 sleep 驗證猜想正確。後續在模型內增加日誌輸出結果或者以上兩個操作，推理結果均正常。推理結果正常後定位耗時模塊，定位到 ViT 中 extract_feature 為主要耗時模塊。為了進一步提升推理效率，我們借鑑了 TensorRT-LLM 中的推理加速方案 TensorRT。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;TensorRT 是一個高性能的深度學習推理（Inference）優化器，可以為深度學習應用提供低延遲、高吞吐率的部署推理。TensorRT 可對多種應用場景進行推理加速，並且支持 TensorFlow、Caffe、Mxnet、Pytorch 等幾乎所有的深度學習框架。將 TensorRT 和 NVIDIA 的 GPU 結合起來，能在幾乎所有的框架中進行快速和高效的部署推理。&lt;/span&gt;&lt;/p&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/92358ef8-bc80-4bf8-817c-4301d087eec0.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.486&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;700&quot; data-imgfileid=&quot;100014176&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 6：Tensorrt 優化過程圖&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;在對 ViT 模塊進行 TensorRT 改造時，主要包含模型轉換、模型優化和推理部署三個階段。模型轉化支持 TensorFlow、PyTorch、ONNX 等主流深度學習框架的模型轉換和優化，本文以 ONNX 為例進行説明。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;text-align: left;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;1、模型轉換&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/be6a8f15-e0da-4080-aeac-586ca6fb9964.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.7807308970099668&quot; data-type=&quot;png&quot; data-w=&quot;602&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;602&quot; data-imgfileid=&quot;100014173&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;font-size: x-small;cursor: default;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 7&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;font-size: x-small;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;ONNX 模型轉換代碼截圖&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;導出 ONNX 時可能會遇到不支持的算子，如在導出快速傅裏葉變換（FFT）和快速傅裏葉逆變換（IFFT）時會遇到如下錯誤，&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;background-color: rgb(214, 214, 214);&quot;&gt;Exporting the operator &#39;aten::fft_rfftn&#39; to ONNX opset version 17 is not supported&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;這時需要調整模型網絡結構或者自定義算子。在對 ViT 模塊進行 ONNX 轉換過程中，部分多模態模型的 ViT 中使用了 FlashAttention2 進行注意力加速，而 FlashAttention2 中的 flash_attn_func 是作為獨立的內核實現的，不是 torch.nn.Module 的實例，導致導出器無法捕獲計算圖，如下：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;background-color: rgb(214, 214, 214);&quot;&gt;/usr/local/lib/python3.10/dist-packages/flash_attn/flash_attn_interface.py:90: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can&#39;t record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;因此，對 Attention 模塊進行了調整，使用 PyTorch 內部實現的縮放點積注意力（Scaled Dot-Product Attention, SDPA），如下圖，至此模型便可成功轉換成 ONNX 格式。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/e60836a9-5141-4603-9d85-270e50fd40be.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.5825&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;700&quot; data-imgfileid=&quot;100014174&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-bottom: 8px;margin-top: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;cursor: default;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 8&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;：&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;縮放點積注意力 (SDPA) 代碼截圖&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: left;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;2、模型優化&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;該階段主要完成模型優化，如下圖所示，在模型優化過程中會完成層間融合，精度校準等。這一步的輸出是一個針對特定 GPU 平台和網絡模型的優化過的 TensorRT 模型，這個 TensorRT 模型可以序列化存儲到磁盤或內存中，存儲到磁盤中的文件為 TensorRT planfile。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/1ef2a7d7-071f-44da-aa1f-150b5e299114.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.224&quot; data-type=&quot;png&quot; data-w=&quot;625&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;625&quot; data-imgfileid=&quot;100014172&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 9：Tensorrt 模型優化及系列化流程圖&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;text-align: left;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;3、推理部署&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/8169cdc0-de30-4af8-9617-1e080e14ec9c.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2064&quot; data-type=&quot;png&quot; data-w=&quot;625&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;625&quot; data-imgfileid=&quot;100014177&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 10：Tensorrt 部署及推理流程圖&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);&quot;&gt;&lt;span leaf=&quot;&quot;&gt;部署階段將上一個步驟中的 plan 文件反序列化，並創建一個 runtime engine，輸入對應的圖像數據，輸出推理結果。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: left;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4、推理效率&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;經過 TRT 加速後，ViT 模塊 feature_extract 速度縮減 45% 左右（不包含圖片預處理），feature_extract 耗時在 ViT 中佔比從 60% 減少至 45.36%，整體推理耗時耗時縮減在 70ms 左右。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
    &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(255, 104, 39);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 104, 39);font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4.3 ViT 模塊支持 CudaGraph&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;推理框架 lmdeploy 在 0.6.0 版本引入了 CUDA Graph,並提升了近 30% 的推理性能：&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;background-color: rgb(214, 214, 214);&quot;&gt;&amp;nbsp;Employ CUDA graph to boost the inference performance (30%)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;不過受多方因素限制，目前 lmdeploy 只在語言模型中引入了 CUDA Graphs。為了進一步提升推理速度，我們在 ViT 模塊中引入了 CUDA Graphs。CUDA Graphs 可以用於優化執行過程中的 CUDA 操作，在 GPU 上實現更加高效的深度學習模型推理。在使用 CUDA Graphs 時需要對 CUDA 操作進行錄製（capture）和重放（replay），以此來減少 CPU 到 GPU 的調度開銷，提高整體的執行效率。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;如下圖，簡單展示了 CUDA Graphs 的優勢。在頂部，CPU 逐個啓動一系列短內核。CPU 啓動開銷導致內核之間出現明顯間隙。如果我們用 CUDA 圖替換此內核序列，最初我們需要花費一些額外的時間來構建圖並在第一次啓動整個圖時一次性啓動整個圖，但後續執行將非常快，因為內核之間的間隙將非常小。當多次重複相同的操作序列時，例如在許多訓練步驟中重複，差異會更加明顯。&lt;/span&gt;&lt;/p&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/ac8a403c-ee90-4fe0-81cd-65e63efbb452.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.372&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;700&quot; data-imgfileid=&quot;100014178&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 11：CUDA Graphs 性能優勢圖&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;首先，在 ViT 支持 CUDA Graphs 時，需要 torch.cuda.CUDAGraph 創建對應的圖，然後使用 torch.cuda.graph() 對 ViT 的推理過程進行錄製，在推理過程中，使用剛創建的圖對錄製的過程進行重放 CUDAGraph.play()。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;但是要注意，由於 CUDA Graphs 不支持動態控制流（如條件語句和循環），因此在設計算法時應儘量避免使用這些結構；其次，確保輸入張量的形狀在圖創建時是固定的，因為 CUDA Graphs 的設計是基於靜態形狀的張量結構，創建 Graph 時，所有操作及其輸入輸出的形狀必須在圖創建時確定。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;而 ViT 模塊在進行圖像處理時，輸入的圖像數張量的形狀是 [batch_size, channel, width, height]，其中 batch_size 是可變的且各視覺模型均已限定最大值。於是，我們在框架內部維護了 Graphs Pool，推理時使用 batch_size 索引至相應的 graph，再執行重放操作。&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;增加 CUDA Graphs 後 ViT 模塊平均耗時減少 30ms 左右。雖然 CUDA Graphs 可以在一定程度上提升推理的效率，但是在構建 graphs 也需要佔用一些額外的顯存，在使用時需要綜合衡量具體的業務場景及硬件資源。&lt;/span&gt;&lt;/p&gt; 
    &lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
    &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: left;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;color: rgb(255, 104, 39);&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4.4 圖像 Token 化處理&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;輸入 token 的長度對推理耗時影響很大，多模態模型中，圖像部分佔據了很大比例的 token 數，降低圖像轉換的 Token 數可提升推理性能。如下是結果對比：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bold;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/f660d32a-1b9f-4656-98d1-dbecee5fe26c.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.29894179894179895&quot; data-type=&quot;png&quot; data-w=&quot;378&quot; style=&quot;width: 382px;height: 114px;&quot; data-imgfileid=&quot;100014204&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bold;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;font-weight: normal;&quot;&gt;圖 12：&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot; data-pm-slice=&quot;1 1 [&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;color: rgb(51, 51, 51);font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); margin-bottom: 8px; cursor: default; margin-top: 8px; text-align: center; line-height: 2em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;para&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;section&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0); color: rgb(27, 28, 30); font-family: \&amp;quot;PingFang SC\&amp;quot;, \&amp;quot;Microsoft YaHei\&amp;quot;, Arial, 黑體, 宋體, sans-serif; font-size: 15px; letter-spacing: normal; background-color: rgb(255, 255, 255); cursor: default; text-align: justify; margin-top: 8px; margin-bottom: 8px; line-height: 2em;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;},&amp;quot;node&amp;quot;,{&amp;quot;tagName&amp;quot;:&amp;quot;span&amp;quot;,&amp;quot;attributes&amp;quot;:{&amp;quot;style&amp;quot;:&amp;quot;font-size: 16px;&amp;quot;},&amp;quot;namespaceURI&amp;quot;:&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;}]&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;font-weight: normal;&quot;&gt;Token 數和推理耗時基本成正比&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bold;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: normal;&quot;&gt;圖像轉換的 Token 數計算主要流程如下&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: normal;&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;strong&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;font-weight: normal;&quot;&gt;（1）根據圖像寬高比和分辨率大小將原圖拆分成若干個 448*448 的 patch，拆分的原則是儘量保持圖像不失真。拆分代碼如下：&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/30811eb3-1df8-4dc0-b6e3-6ea8f054445d.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.9367088607594937&quot; data-type=&quot;png&quot; data-w=&quot;869&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;700&quot; data-imgfileid=&quot;100014179&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;cursor: default;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 13：VLLM 中 InternVL2-8B 模型拆圖代碼截圖&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;上述代碼基本流程是，給定動態拆分的閾值範圍，窮舉出所有可能的目標比例，再根據原圖比例匹配最佳的拆分規則，拆分邏輯圖示如下圖左上部分，圖示中會被拆分成 6 個 path 塊和一張縮略圖。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/9b84a37b-1304-4f2d-84ad-324785e09a4b.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.526&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);border-style: none;cursor: default;&quot; width=&quot;700&quot; data-imgfileid=&quot;100014180&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;&quot;&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot; data-pm-slice=&quot;0 0 []&quot;&gt;&lt;span leaf=&quot;&quot;&gt;圖 14&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;：&lt;/span&gt;&lt;/span&gt; 
     &lt;span style=&quot;color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: x-small;font-style: normal;font-variant-ligatures: normal;font-variant-caps: normal;font-weight: 400;letter-spacing: normal;orphans: 2;text-indent: 0px;text-transform: none;widows: 2;word-spacing: 0px;-webkit-text-stroke-width: 0px;background-color: rgb(255, 255, 255);text-decoration-thickness: initial;text-decoration-style: initial;text-decoration-color: initial;float: none;display: inline !important;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;InternVL 模型整體框架圖&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: normal;&quot;&gt;（2）一個 448*448 的 patch 生成的 token 數計算方式如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;background-color: rgb(214, 214, 214);font-weight: normal;&quot;&gt;image_tokens_per_patch=(force_image_size // patch_size)**2 * (downsample_ratio**2))&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: normal;&quot;&gt;force_image_size=448,patch_size=14,downsample_ratio=0.5,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: normal;&quot;&gt;這個計算後結果為 256。不同的模型值可能會有所差異。&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;strong&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-weight: normal;&quot;&gt;（3）分辨率為 896*1344 的圖像，經過步驟 1 處理，會拆分成 2*3=6 個 patch，再加上一張縮略圖（可選，有效果會更好），最終堆疊後 shape 是[7,3,448,448]，圖像轉換的 token 數為 7*256=1792。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;部署到線上時，單卡吞吐量上不去，其中一個原因是拆圖規則導致拆分後的圖片數量比較多，如分辨率 612*464，最合適的寬高比是 (4, 3)，按模型的圖片拆分規則，圖像將被拆分成[13,3,448,448]，轉化後的 token 數達到 3328，再加上 prompt 的 token，總 token 數會達到 3400+，太長的輸入 token 對模型推理速度影響很大，再加上顯存和算力的限制，無法做到更大 batch 的推理，使得單卡推理的吞吐量很低。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;基於此原因，我們的優化思路是降低圖像的總 token 數，經實驗分析，官方代碼在實現上存在比較大的冗餘設計，如圖像分辨率為 480*360，也會轉換成 3328 個 token 數，對於低分辨率圖像生成太多的 token 存在資源浪費。在保持圖像內容不拉伸前提下，對圖像的寬高比做調整，以適應 vit 的要求，優化後，480*320 的圖像只轉換成 512 個 token 數，這樣在推理時能做到更大的 batch 處理。在我們實際落地場景中，處理後吞吐量能提升 1 倍。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
    &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(255, 104, 39);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 104, 39);font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4.5 prefixcache 在多模態模型裏應用&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span leaf=&quot;&quot;&gt;在&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;PagedAttention 中，KV Cache 只是在一個請求內複用，而沒有做到跨請求的 KV Cache 複用。長 prompt 的場景，prompt 在不同的請求中是相同的，KV Cache 的計算也是相同的，如果能把 prompt 的 KV Cache 保存下來，留給後續的請求複用，將會極大地降低首 Token 的耗時。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;在 LLM 模型裏，prefixcache 分二個階段，第一個階段，當 prompt 第一次被推理時，是按 block_size(通常是 64) 大小對 input tokens 從前往後進行分塊，計算每個分塊的 hash 作為唯一標識，每個分塊的 token_id 作為 key 進行緩存，這裏不足 block_size 長度的塊不會被緩存；第二階段，當新 prompt 被推理時，會進行 prefix cache matching，命中就直接複用 kvcache，只計算未命中部分的 input tokens。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;多模態模型區別在於，一次任務的輸入 tokens 組成由純文本變成了文本+圖片，由 system+prompt 變成了 system+image+prompt，在計算 prefix cache 時，image 對應的只是 padding tokens，那麼在計算 prefix cache matching 時，不同圖片可能匹配到一樣的 prefix 上，這樣推理結果就會出現錯誤。針對這個問題，在 input tokens 中對 image 進行範圍標記，在計算 prefix cache 時不對 image token 進行 kvcache，只 cache image 之前的部分；在 prefix cache matching 時，也同樣保證 image token 不會被複用。經實驗驗證，修改後能保證在開啓 prefix cache 時，推理結果是正確的。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;需要注意，Prefix Caching 只節省了 prefill 階段的耗時（也就是降低了 TTFT，Time To First Token），並不能節省解碼階段的耗時（也就是 TPOT，Time Per Output Token）。如果請求的主要耗時是在解碼階段（例如 prompt 很短而 completion 很長），或者多個請求的 prompt 並沒有公共的前綴，那麼 Prefix Caching 就對於整個 LLM 推理的性能提升幫助不大&lt;/span&gt;。&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;span id=&quot;OSC_h3_6&quot;&gt;&lt;/span&gt; 
    &lt;h3 style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgba(0, 0, 0, 0.85);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt;&lt;span style=&quot;color: rgb(255, 104, 39);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(255, 104, 39);font-weight: bolder;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;4.6 模型量化&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;量化是大模型領域中的一項關鍵技術，它通過降低模型參數的精度，將浮點數轉換為整數或定點數從而實現模型的壓縮和優化。模型量化可以減少模型尺寸，進而減少在推理時的顯存消耗，並且在一些低精度運算較快的處理器上可以增加推理速度。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;量化分很多情況。從量化對象來説，量化可以是權重、激活、kv cache 和梯度；從量化的形式上來説分為線性量化和非線性量化，其中線性量化又分為對稱量化和非對稱量化；根據應用量化壓縮模型的階段，又可以將模型量化分為量化感知訓練、量化感知微調、訓練後量化。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;我們現階段使用的量化方式是 AWQ 和 GPTQ，這兩種量化都屬於訓練後量化，是針對權重的線性量化，其中 AWQ 採用對稱量化，GPTQ 採用非對稱量化。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;AWQ 量化的原理是對於 LLM，權重不是同等重要的，通過保留 1% 的顯著權重可以大大減少量化誤差。在此基礎上採用激活感知的方法，考慮更大的激活幅度應該對應更重要的權重通道，在處理重要特徵時起關鍵作用，逐通道確定最佳縮放因子。從而在量化所有權重的同時，最小化量化誤差。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;GPTQ 對模型的每一層（通常是線性層或卷積層）進行單獨處理，考慮了量化帶來的誤差，並通過調整未量化的權重來補償這些誤差。利用了二階偏導 Hessian 矩陣的逆，來指導權重的調整，以減少整體的量化誤差。將權重矩陣分成多個子矩陣（block），對每個子矩陣中的權重逐個進行量化，同時調整同一子矩陣內其他權重，以保持模型輸出的相似性。其量化後的誤差依賴一份高質量的校準數據。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;整體上來看，AWQ 相較於 GPTQ 量化的算法更直接，對校準數據依賴小；GPTQ 則更容易有比較好的量化效果，但是算法相對複雜，對校準數據依賴比較大，實際過程中用哪個更合適需要根據實際的場景選用。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;在實際測試中，不論是 AWQ 還是 GPTQ 實際採用的都是 w4A16 的量化策略，在推理的時候，性能差異比較小，在 RTX4090 顯卡下，我們使用 vllm，對應不同參數，並且設置最優 batch，實際測試值如下：&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(25, 27, 31);cursor: default;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;針對單個請求的延時：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/ac7dd996-e553-40fb-b9a8-4832f70c1a3b.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.2084507042253521&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;710&quot; type=&quot;block&quot; data-imgfileid=&quot;100014210&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-bottom: 8px;margin-top: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 15: 原始模型和量化模型的推理耗時比較&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;從測試結果看：在 4090 下，大 batch 的計算，使用 gemm 內核，速度不如原精度，原因是在大 batch 的情況下，增加了反量化的時間。使用 marlin 內核，計算的速度有優化，但是在大 batch 下，優化速度不明顯。低 batch 的計算原精度是計算最慢的，gemm 的內核計算與 marlin 計算差別不是很大，都比原生的有大幅提高。原因是 gemm 在低 batch 下，也做了內核優化，這一點可以從原代碼中驗證：&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/89dafcc6-de64-4e34-b8ac-72982e9aeb04.png&quot; class=&quot;rich_pages wxw-img js_insertlocalimg&quot; data-ratio=&quot;0.30575035063113604&quot; data-s=&quot;300,640&quot; data-type=&quot;png&quot; data-w=&quot;713&quot; type=&quot;block&quot; data-imgfileid=&quot;100014211&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 16&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);box-sizing: border-box;max-width: 100%;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;VLLM 中 awq 量化模型 mul 計算邏輯代碼&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 8px;cursor: default;margin-top: 8px;text-align: left;line-height: 2em;&quot;&gt; 
    &lt;span leaf=&quot;&quot;&gt;針對吞吐量：&lt;/span&gt; 
    &lt;section style=&quot;&quot; nodeleaf=&quot;&quot;&gt; 
     &lt;img src=&quot;https://oscimg.oschina.net/oscnet/c2d58729-66c8-42cd-ad10-c69be338f6b4.jpg&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.15281501340482573&quot; data-s=&quot;300,640&quot; data-type=&quot;webp&quot; data-w=&quot;746&quot; data-croporisrc=&quot;https://oscimg.oschina.net/oscnet/22f3d6f2-bfb2-465f-9504-408778ea5dbd.jpg&quot; data-cropselx2=&quot;578&quot; data-cropsely2=&quot;120&quot; data-imgfileid=&quot;100014212&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;text-align: center;margin-top: 8px;margin-bottom: 8px;&quot;&gt; 
     &lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 17：原始模型和量化模型的吞吐量比較&lt;/span&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;text-align: justify;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
     &lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;從測試結果看，對於短輸出，其實吞吐量並沒有優化，還下降了一點，原因是，對於短輸出，主要的耗時在 prefill，prefill 是大 batch 的計算，在推理過程中，吞吐量會下降。但是對於長輸出，decode 階段佔比比較高，內核對於 decode 的優化比較明顯，綜合吞吐量會上升。&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p style=&quot;text-align: justify;margin-bottom: 8px;margin-top: 8px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;總結：在實際使用中對於 W4A16 量化後的模型來説，模型佔用的顯存一定能節省。但是推理的整體性能和吞吐量，需要根據不同的任務特點，部署的硬件環境，調整部署的參數，以達到最優。而不是量化後的整體性能一定會優於未量化的模型。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;line-height: 2em;margin-bottom: 8px;margin-top: 8px;&quot;&gt; 
    &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;cursor: default;&quot;&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;margin-right: 12px;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: center;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 40px;height: 40px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 0px 14px 0px 0px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 17px;&quot;&gt; 
        &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(255, 248, 244);font-size: 18px;font-family: Optima-Regular, PingFangTC-light;line-height: 0.5;&quot;&gt; 
         &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;05&lt;/span&gt;&lt;/p&gt; 
        &lt;/section&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;height: auto;align-self: flex-end;line-height: 0;&quot;&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 19px;font-family: Optima-Regular, PingFangTC-light;line-height: 1.8;letter-spacing: 1px;color: rgb(243, 89, 41);&quot;&gt; 
       &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);line-height: 1.5;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&amp;nbsp; 優化數據&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
     &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);text-align: right;justify-content: flex-end;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);display: inline-block;width: 86.2969px;height: 5px;vertical-align: top;overflow: hidden;background-color: rgb(243, 89, 41);cursor: default;&quot;&gt; 
       &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);&quot;&gt; 
        &lt;svg viewBox=&quot;0 0 1 1&quot; style=&quot;float:left;line-height:0;width:0;vertical-align:top;&quot;&gt;&lt;/svg&gt; 
       &lt;/section&gt; 
      &lt;/section&gt; 
     &lt;/section&gt; 
    &lt;/section&gt; 
   &lt;/section&gt; 
   &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 8px;cursor: default;margin-top: 8px;text-align: center;line-height: 2em;&quot;&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;ul style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-right: 8px;margin-left: 8px;color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot; class=&quot;list-paddingleft-1&quot;&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;評測模型&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;：InternVL2-8B&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;數據集&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;：信安羣租房檢測 4524 張圖片&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;提示詞&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;：圖中有 3 張以上的牀，或者是有雙層牀，請直接給出是或者否，然後給出詳細的解釋。注意 1 張雙層牀有 2 張牀&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;輸出 token 數量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;：max_tokens=1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;GPU&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;: RTX4090&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;對比框架&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;：LMDeploy-0.6.0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;優化框架&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;：LMDeploy-0.6.0 優化版本&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
     &lt;li style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-size: 16px;&quot;&gt; 
      &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt; 
       &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;font-size: 16px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;吞吐量：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;由於我們的場景是長輸入 token 和短輸出 token，所以按單位時間內處理的請求數作為衡量指標。比較兩個框架的推理 QPM&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
      &lt;/section&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;font-size: 16px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-weight: bold;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/1b84899b-305c-4427-8131-5600a10b72b8.png&quot; class=&quot;rich_pages wxw-img&quot; data-ratio=&quot;0.1893687707641196&quot; data-type=&quot;png&quot; data-w=&quot;602&quot; data-imgfileid=&quot;100014207&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p data-pm-slice=&quot;0 0 []&quot; style=&quot;text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 2em;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 12px;&quot;&gt;圖 18：LMDeploy-0.6.0 優化前後召回率和吞吐量比較&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;section style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;text-align: justify;&quot;&gt; 
     &lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;span style=&quot;font-size: 16px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-weight: bold;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;font-weight: normal;&quot;&gt;LMDeploy-0.6.0 優化版本在推理效果不受影響的情況下，吞吐量提升到 LMDeploy-0.6.0 版本的 3.05 倍&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
    &lt;/section&gt; 
    &lt;p&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 15px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;text-align: justify;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);font-weight: bolder;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;作者簡介：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span leaf=&quot;&quot;&gt;&lt;span textstyle=&quot;&quot; style=&quot;font-size: 16px;&quot;&gt;徐海芳、李海洋、朱辰、張輝，MPai 平台視覺理解大模型推理團隊&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;font-weight: bold;font-size: large;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
   &lt;/section&gt; 
   &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/section&gt; 
  &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-top: 10px;margin-bottom: 10px;line-height: 1.5;color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/section&gt; 
 &lt;p style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);margin-bottom: 0px;line-height: 1.5;color: rgb(51, 51, 51);font-family: &amp;quot;PingFang SC&amp;quot;, &amp;quot;Microsoft YaHei&amp;quot;, Arial, 黑體, 宋體, sans-serif;font-size: 16px;letter-spacing: normal;background-color: rgb(255, 255, 255);cursor: default;&quot;&gt;&lt;span style=&quot;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);color: rgb(27, 28, 30);font-size: 15px;cursor: default;&quot;&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span leaf=&quot;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p style=&quot;display: none;&quot;&gt; 
  &lt;mp-style-type data-value=&quot;3&quot;&gt;&lt;/mp-style-type&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color: #858585; font-size: 13px;&quot;&gt;本文分享自微信公眾號 - 58 技術（architects_58）。&lt;br&gt;如有侵權，請聯繫 support@oschina.cn 刪除。&lt;br&gt;本文參與「&lt;a href=&quot;https://www.oschina.net/sharing-plan&quot; target=&quot;_blank&quot;&gt;OSC 源創計劃&lt;/a&gt;」，歡迎正在閲讀的你也加入，一起分享。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/5359019/blog/18160034</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5359019/blog/18160034</guid>
            <pubDate>Thu, 17 Apr 2025 02:31:06 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>《流浪地球 3》發佈 AI 問答應用 WEi</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;電影《流浪地球 3》近日在青島舉行開機儀式，郭帆導演攜主創團隊齊聚亮相。在開機儀式現場，《流浪地球 3》劇組正式發佈劇組專屬的自研 AI 問答應用 WEi。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img height=&quot;365&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-6b58e821f644cfcd13feb137d9d2cac2428.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該應用依託大語言模型，基於 DeepSeek R1 大語言模型，NVIDIA、火山引擎作為「AI 支持合作伙伴」所開發，本地推理部分由 NVIDIA GeForce RTX 5090 D 加速，旨在為劇組提供一站式智能服務，大幅提升劇組創作效率。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據介紹，WEi 通過整合多元化知識庫資源，包括在線信息源的專業資料、圖像和影視參考，以及電影《流浪地球》系列劇本、世界觀、編年史、人物小傳、美術設定等內部資料，為劇組工作人員提供高效檢索通道，同時期望在參考信息上既符合科學基礎又保持設定一致性，提高劇組工作人員創作效率。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345026</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345026</guid>
            <pubDate>Thu, 17 Apr 2025 02:25:06 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 擬以 30 億美元收購 AI 編程工具 Windsurf</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;彭博社報道稱，OpenAI 正與人工智能輔助編程工具 Windsurf（前身為 Codeium）展開收購談判，交易金額約為 30 億美元。這一潛在收購將成為 OpenAI 迄今為止最大規模的併購交易，標誌着其在 AI 驅動的開發者工具市場邁出重要一步。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;262&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5591fcd5e926e90d56e1521a2184484a0b3.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Windsurf 是一款廣受開發者歡迎的 AI 編程助手，能夠基於自然語言提示生成代碼、解釋現有代碼並執行相關任務。它不僅支持通過插件嵌入主流代碼編輯器（如 Visual Studio Code），還提供專為 AI 輔助開發設計的自定義編輯器。Windsurf 自稱是首款「代理式」集成開發環境 (IDE)，強調其在自動化和智能化編程流程中的獨特優勢。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;成立於 2021 年的 Windsurf（正式名稱為 Exafunction Inc.）已累計融資超 2 億美元，投資者包括 General Catalyst、Kleiner Perkins 和 Greenoaks Capital Partners。2023 年，其在 General Catalyst 領投的 1.5 億美元融資中估值達 12.5 億美元，而近期與投資者的談判顯示其估值已升至 30 億美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;X 平台上的討論顯示，業界對此次收購的反應複雜而熱烈。一方面，許多開發者對 OpenAI 整合 Windsurf 的前景表示期待，認為這可能帶來更強大的 AI 編程工具;另一方面，部分觀點擔憂收購可能對其他 AI 編程工具（如 Cursor）造成衝擊，尤其是考慮到 OpenAI 此前通過其創業基金投資了 Cursor 的母公司 Anysphere。此外，微軟近期對 Visual Studio Code 生態的收緊政策可能為 OpenAI 的收購策略帶來變數。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;值得注意的是，Windsurf 近期向用戶發送郵件，宣佈因「本週晚些時候的重大公告」而提供鎖定 10 美元/月價格的機會，這一舉動被外界解讀為收購談判的間接證據。然而，交易條款尚未最終敲定，談判仍存在變數或破裂的可能性。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#242424; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;此次收購若達成，將成為 OpenAI&amp;nbsp;最大規模的併購交易。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/345019</link>
            <guid isPermaLink="false">https://www.oschina.net/news/345019</guid>
            <pubDate>Thu, 17 Apr 2025 02:15:06 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>xAI 發佈新 AI 工具 Grok Studio：可生成文檔、代碼和瀏覽器遊戲</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;xAI 宣佈為旗下 AI 聊天助手 Grok 增加全新功能 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Fgrok%2Fstatus%2F1912318583532872166&quot; target=&quot;_blank&quot;&gt;Grok Studio&lt;/a&gt;，可以用於編輯和創建文檔，以及基礎應用程序。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-19a1c88ab76742bcfab01237646b8b0dc40.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Grok Studio 將在一個單獨的窗口中打開，支持生成文檔、代碼、報告和瀏覽器遊戲。&lt;/p&gt; 
&lt;p&gt;生成代碼時，Grok Studio 會在「預覽」選項卡中快速向用戶展示其運行效果。HTML 代碼片段可以運行 Python、C++、JavaScript、Typescript 和 Bash 腳本，也可以在此預覽選項卡中查看。所有新項目都會在 Grok 回覆的右側打開。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1424&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/194259_TbOH_2720166.png&quot; width=&quot;1940&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;xAI 表示，免費和付費的 Grok 用戶都可以在 Grok.com 上使用該功能。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344972/xai-grok-studio</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344972/xai-grok-studio</guid>
            <pubDate>Sun, 13 Apr 2025 11:43:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>騰訊「元寶」可添加為微信好友：一鍵解析公眾號文章、甚至把它置頂</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;就在剛剛，騰訊 AI 助手「元寶」支持添加為微信好友進行聊天。 &amp;nbsp;你可以和他對話，也可以發鏈接、文件給他——甚至可以把它置頂 。&lt;/p&gt; 
&lt;p&gt;如下圖，在微信直接搜索「元寶」，點擊「聊天」進入。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/190446_4eYx_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/191425_HCo3_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1592&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/190642_X4B1_2720166.png&quot; width=&quot;806&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;978&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/190707_Op4X_2720166.png&quot; width=&quot;814&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，這是騰訊元寶 APP 入駐微信的 AI 助手，搭載了混元和 DeepSeek 雙模引擎，可一鍵解析公眾號文章和任何圖片和文檔，短評後會發送詳解文章，支持對解讀內容做各種智能互動，支持陪伴互動。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/191518_XlEd_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1662&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/191457_Jiq2_2720166.png&quot; width=&quot;764&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344970</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344970</guid>
            <pubDate>Sun, 13 Apr 2025 11:07:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>中國團隊自研 AI 圖像生成大模型 HiDream-I1 正式開源</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;HiDream 智象未來團隊宣佈正式開源圖像生成大模型 HiDream-I1 與交互編輯模型 HiDream-E1。&lt;/p&gt; 
&lt;p&gt;HiDream-I1 在權威榜單 Artificial Analysis 中 24 小時內&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F-ouXGp3kyyT7AfFmQ_Y5Cw&quot; target=&quot;_blank&quot;&gt;登頂&lt;/a&gt;&lt;/u&gt;，成為首個躋身全球第一梯隊的中國自研生成式 AI 模型，並在圖像質量、語義理解、藝術表現三大維度刷新行業紀錄，實現圖像的多風格生成，涵蓋動漫、肖像、科幻等場景。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;984&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/183653_vhQa_2720166.png&quot; width=&quot;1462&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;目前，設計工具 Recraft 已集成 HiDream 模型，用戶 3 步即可實現 「一鍵出圖 + 智能編輯」。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/175700_50WE_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;HiDream-I1&amp;nbsp; 已開源三個版本的模型，分別是：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/175710_8HLD_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;其中 HiDream-I1-Full 是由 &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhidreamai.com%2Fhome&quot; target=&quot;_blank&quot;&gt;HiDream.a&lt;/a&gt;i 團隊發佈的開源圖像生成基礎模型，具備 170 億參數，旨在實現高質量的圖像生成。該模型採用 Diffusion Transformer（DiT）架構，支持多種風格的圖像生成，包括寫實、卡通、藝術等，適用於多種創作場景。&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;核心特性&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;卓越的圖像質量&lt;/strong&gt;：在多個基準測試中表現出色，HPS v2.1 平均得分為 33.82，優於 SDXL、DALL·E 3 等主流模型&amp;nbsp;。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;強大的提示詞理解能力&lt;/strong&gt;：在 GenEval 和 DPG-Bench 等評測中，HiDream-I1 的表現優於其他開源模型，展示了其在理解和執行復雜提示詞方面的能力。騰訊網+1 阿里雲開發者社區-雲計算社區-阿里雲+1&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;開源且商業友好&lt;/strong&gt;：採用 MIT 許可證，允許用戶在個人、科研和商業項目中自由使用生成的內容。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;性能評估&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;在多個評測中，HiDream-I1 展示了其強大的性能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;DPG-Bench&lt;/strong&gt;：在整體、實體、屬性等多個維度上得分領先，展示了其在圖像生成質量方面的優勢。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;GenEval&lt;/strong&gt;：在單目標、雙目標、計數、顏色等任務中表現優異，反映了其對提示詞的準確理解和執行能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HPS v2.1&lt;/strong&gt;：在動畫、概念藝術、繪畫、照片等風格的圖像生成中，HiDream-I1 的得分均高於其他主流模型，展示了其多風格生成的能力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/175722_YQIr_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/175731_9IFw_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/175741_2jbr_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;HiDream-I1-Full 模型整體採用 MIT 協議開源，可自由商用，但部分依賴組件（如 LLaMA3 編碼器）需遵守各自協議，商用前應留意其具體限制。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344955</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344955</guid>
            <pubDate>Sun, 13 Apr 2025 09:58:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>字節 AI Lab 將全部併入 Seed</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AI 科技評論獨家獲悉，字節 AI Lab 即將全部收歸 Seed 團隊下。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;字節 AI Lab 是 Seed 成立之前字節主要的 AI 研發部門，目前由李航管理，自 2024 年開始向 Seed 時任負責人朱文佳彙報。今年 2 月下旬，原 Google DeepMind 副總裁吳永輝入職字節，成為 Seed 基礎研究負責人。此後李航的彙報對象變為吳永輝。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;字節 AI Lab 成立於 2016 年，最初由微軟亞洲研究院前常務副院長馬維英負責，直接向張一鳴彙報。 AI lab 目前有多個子團隊，包括機器人、AI4S 等方向，幾乎覆蓋人工智能領域所有前沿技術研究。2018 年其團隊規模達到 150 人，為字節跳動 AI 研究的核心部門。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;AI Lab 主要研究重點是開發為字節跳動內容平台服務的創新技術，字節推薦算法、短視頻特效等功能均脫胎於此。其研究成果應用於今日頭條、抖音等產品，是支持抖音成長為國民級應用的基石，並奠定了當時字節在國內 AI 領域的領先地位。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;隨着抖音、TikTok 佔據絕對優勢的市場地位，流量商業化成為字節面臨的 Top 級問題，AI Lab 在字節內部重要性下降。2020 年，AI Lab 定位從集團級前瞻性項目轉為技術中台，為字節商業化團隊業務提供支持，馬維英的彙報對象也從張一鳴變為抖音負責人張楠。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;2020 年年中，馬維英離開字節，AI Lab 負責人一職由李航接任至今。之後團隊重組，2023 年開始，AI Lab 下屬負責大語言模型的 NLP 組及開發視頻生成模型的 PixleDance 被先後轉入 Seed 之下。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;同時為了應對新一輪大模型競爭，字節決定迴歸「始終創業」的價值觀，建立獨立的新組織，於是加快籌建了獨立於原有組織架構的 Flow 和 Seed，前者做 AI 產品，後者做大模型研發。截至 2023 年底，兩者已成為與抖音、TikTok、火山引擎等字節各大業務平級的組織。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Seed 自成立就在不斷吸納來自字節內外的人才。除收攏搜索、AML、AI Lab 等內部部門中大模型方向人才外，對外也在積極爭搶人才。以面向應屆博士的 Top Seed 招募計劃為例，字節會給優秀候選人 3-1 職級，薪資不低於百萬元。截至 2024 年底，字節 AI 研究者中超 40％比例是近兩年加入的新人，對人才的渴求和重視程度可見一斑。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據 AI 科技評論調查，加入字節以來，吳永輝已在字節署名三篇論文，均在強化學習方向。吳永輝於上月在 Seed 內部新建虛擬小組、縮短了彙報流程，創建一個更扁平的彙報體系，此次 AI Lab 將全部併入 Seed，也是吳永輝調整內部組織架構的一個重要舉措。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344946</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344946</guid>
            <pubDate>Sun, 13 Apr 2025 09:17:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Notion Mail 正式發佈：AI 驅動郵箱新體驗</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Notion 正式推出電子郵件服務 Notion Mail，首發登陸 macOS 平台，iOS 和 Android 版即將上線。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1140&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/165124_3l5R_2720166.png&quot; width=&quot;2124&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Notion Mail 並非要取代 Gmail，而是作為重新設計的郵箱前端，提供獨特的郵件管理體驗。其核心為高度模塊化系統，用戶可自定義收件箱配置，並整合了豐富的 AI 功能，如智能文件夾、自動分類、快速回復、寫作改進及智能會議安排等。產品與 Notion Calendar 無縫銜接，核心 AI 功能提供免費使用限額，無限制需訂閲付費。目前僅支持英文，未來將擴展至 13 種語言。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/165012_T6gr_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Notion Mail 主頁：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.notion.com%2Fproduct%2Fmail&quot; target=&quot;_blank&quot;&gt;https://www.notion.com/product/mail&lt;/a&gt;&lt;br&gt; 下載地址：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.notion.com%2Fproduct%2Fmail%2Fdownload&quot; target=&quot;_blank&quot;&gt;https://www.notion.com/product/mail/download&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344936/notion-mail</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344936/notion-mail</guid>
            <pubDate>Sun, 13 Apr 2025 08:55:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>從理論到落地：MCP 實戰解鎖 AI 應用架構新範式</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;p&gt;作者：計緣&lt;/p&gt; 
&lt;p&gt;編者按：應用越智能，背後的設計會越複雜。軟件的本質是解決複雜性問題，MCP 雖打開了智能的創意上限，但也給後端的設計帶來了無限的複雜度。本文旨在從 MCP 的技術原理、降低 MCP Server 構建複雜度、提升 Server 運行穩定性等方面出發，分享我們的一些實踐心得。文章內容較長，以下是導讀大綱。（點擊閲讀原文，獲取 78 頁完整版 PPT）&lt;/p&gt; 
&lt;p&gt;1、介紹 MCP 的概念及其運作機制。&lt;/p&gt; 
&lt;p&gt;2、解釋 MCP 和 Function Calling 之間的區別。&lt;/p&gt; 
&lt;p&gt;3、講述 MCP 的本質和挑戰，包括描述 MCP 信息的系統提示詞的挑戰，MCP Client 與 MCP Server 之間協同關係的挑戰，快速構建 MCP Server，自建 Dify 的痛點等。&lt;/p&gt; 
&lt;p&gt;4、分析如何解決 MCP 的各個挑戰，包括 MCP Register、MCP Server 和 Promt 的統一管理、MCP 效果驗證體系和安全性保障、MCP 網關、MCP Server 的動態服務發現、Streamable HTTP、彈性效率、可觀測等。&lt;/p&gt; 
&lt;p&gt;5、最後探討 MCP 對 AI 應用架構新範式的影響，並介紹 MCP Server First 的理念。&lt;/p&gt; 
&lt;h2&gt;AI Agent 現狀及架構&lt;/h2&gt; 
&lt;p&gt;人工智能（AI）在商業領域的應用正日益成為推動創新和效率提升的核心力量。其核心在於多個 AI Agent 的協作，這些 AI Agent 通過分工與合作，共同承載 AI 應用所支持的業務需求。這種協作模式不僅優化了企業運營，還展現了 AI 在解決高影響力挑戰中的潛力。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-76b1a0b5eb99a3069f519e05de7f8273c8f.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;當前的 AI Agent，無論是和各種 Tools（各類業務服務接口）交互，還是和各類 Memory（各類存儲服務接口）交互，亦或是和各類 LLMs（各類大語言模型）交互，都是通過 HTTP 協議的，除了 LLM 因為基本都遵循 OpenAI 範式以外，和其他的 Tools 和 Memory 交互都需要逐一瞭解它們的返回格式進行解析和適配。當一個 AI 應用包含多個 AI Agent 時，或者一個 AI 應用需要和多個業務服務接口和存儲服務接口交互時，整體的開發工作量是很大的，主要體現在 3 個方面：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;找適合該 AI 應用的業務接口和存儲服務接口：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;找三方服務接口。&lt;/li&gt; 
   &lt;li&gt;在公司內部找合適的服務的接口。&lt;/li&gt; 
   &lt;li&gt;找不到就自己先開發接口。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;解析接口的返回格式：無論是三方服務接口還是公司內部的服務接口，返回格式可能都千奇百怪，需要逐一進行了解和解析。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;編排多個 AI Agent：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;有 Dify 這類流程可視化的工具輔助編排，減輕了很多編排工作，但複雜度依然不低，且運行效率和性能方面還是有瓶頸的。&lt;/li&gt; 
   &lt;li&gt;通過編碼方式做編排（比如使用 Spring AI Alibaba 或 LangChain 等），雖然性能上更優，但是複雜度更高，編排效率和靈活性都有不足。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;所以目前很多 AI 應用就只有少數幾個 AI Agent，甚至很多 AI 應用背後就只有一個 AI Agent。這也是目前 AI 應用背後的 AI Agent 依然還處在第一個階段（Siloed, Single-Purpose Agents）的原因。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-e25347863ed2a9c56ba0532f785a792e3ed.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;為了能使 AI Agent 進入到第二階段（Platform-Level Agents），我們使用雲原生 API 網關做了統一的接入層，通過一個網關三種不同角色的方式，解決了一部分複雜度：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;作為南北向流量網關，統一管理 AI Agent 的入口流量，核心做轉發、負載、鑑權認證、安全、流控等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;作為 AI 網關，代理各類 LLMs，向 AI Agent 屏蔽了繁雜的接入，並且解決了很多生產級的問題，比如多模型切換、模型 Fallback、多 API Key 管理、安全、聯網搜索等。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;AI 網關代理 LLMs 的詳細文章參見：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247573215%26idx%3D1%26sn%3Df77c5dd8423a9480afb6a03fce0d997c%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247573215%26idx%3D1%26sn%3Df77c5dd8423a9480afb6a03fce0d997c%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;https://mp.weixin.qq.com/s/tZ0wsTlZK67r9IxNZ57TDQ&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;作為東西向網關，統一管理來自不同源（ACK、ECS、函數計算 FC、SAE、三方服務）的各類服務，供 AI Agent 使用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;但如我所説，這隻解決了一部分複雜度問題，更核心的&lt;strong&gt;找接口&lt;/strong&gt; 和&lt;strong&gt;解析接口&lt;/strong&gt;這兩個問題依然沒有解決。直到 MCP（Model Context Protocol）的出現，讓我們看到了真正通往第二階段（Platform-Level Agents）的路，甚至可以嘗試觸摸第三階段（Universal Agents, Multi-Agents）。&lt;/p&gt; 
&lt;h2&gt;MCP 是什麼&lt;/h2&gt; 
&lt;p&gt;MCP 是模型上下文協議（Model Context Protocol）的簡稱，是一個開源協議，由 Anthropic（Claude 開發公司）開發，旨在讓大型語言模型（LLM）能夠以標準化的方式連接到外部數據源和工具。它就像 AI 應用的通用接口，幫助開發者構建更靈活、更具上下文感知能力的 AI 應用，而無需為每個 AI 模型和外部系統組合進行定製集成。MCP 被設計為一個通用接口，類似於 USB-C 端口，允許 LLM 應用以一致的方式連接到各種數據源和工具，如文件、數據庫、API 等。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-46b7eef569ef0b1f4357d3f79f965843530.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;MCP 目前一共有 3 個核心概念：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;MCP Server：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;基於各語言的 MCP SDK 開發的程序或服務。&lt;/li&gt; 
   &lt;li&gt;基於某種&lt;strong&gt;神祕的機制&lt;/strong&gt;將現存的程序或服務進行了轉換，使其成為了 MCP Server。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MCP Tool：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;MCP Tool 所屬於 MCP Server，一個 MCP Server 可以有多個 MCP Tool。可以理解為一個類裏有多個方法，或者類似一個服務裏有多個接口。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MCP Client：當一段代碼，一個 Agent，一個客戶端，基於 MCP 的規範去使用、去調用 MCP Server 裏的 MCP Tool 時，它就是 MCP Client。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;MCP 的運作機制&lt;/h3&gt; 
&lt;p&gt;要真正理解 MCP 是什麼，我們需要了解它的運作機制，然後你就能知道 MCP 的調用方式和傳統的 HTTP 調用方式有什麼不同，可能也能隱約體會到為什麼我説 MCP 可以讓 AI Agent 進入第二階段。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3316ba085c95379e9635dfbbefb726a0388.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如上圖所示，一次基於 MCP 的調用，一共有 6 個核心的步驟。我們先擬定一個前提：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;我要開發一個獲取時間的 AI Agent，用戶在使用這個 AI Agent 時，只需要問類似&quot;現在幾點了？&quot;這種問題即可。&lt;/li&gt; 
 &lt;li&gt;我已經有了一個關於處理時間的 MCP Server，這個 MCP Server 裏有 2 個 MCP Tool，一個負責獲取當前時區，一個負責獲取當前時間。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;調用步驟解析：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;第一步：用戶向 AI Agent 問&quot;現在幾點了？&quot;，此時 AI Agent 就是 MCP Client，它會把用戶的問題和處理時間的 MCP Server 以及 MCP Tool 的信息一起發送給 LLM。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第二步：LLM 拿到信息後開始推理，基於用戶的問題和 MCP Server 的信息，選出解決用戶問題最合適的那個 MCP Server 和 MCP Tool，然後返回給 AI Agent（MCP Client）。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;這裏 LLM 返回給 AI Agent 的信息是：&quot;你用 time 這個 MCP Server 裏的 get_current_time 這個 MCP Tool 吧，它可以解決用戶的問題&quot;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第三步：AI Agent（MCP Client）現在知道該使用哪個 MCP Server 裏的哪個 MCP Tool 了，直接調用那個 MCP Tool，獲取結果。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;調用 time 這個 MCP Server 裏的 get_current_time 這個 MCP Tool。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第四步：Time MCP Server 返回結果（當前的時間）給 AI Agent（MCP Client）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第五步：AI Agent（MCP Client）也很懶啊，把用戶的問題和從 Time MCP Server 處拿到的結果再一次給了 LLM，目的是讓 LLM 結合問題和答案再規整一下內容。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;第六步：LLM 把規規整整的內容返回給 AI Agent（MCP Client），最後 AI Agent（MCP Client）再原封不動的返回給了用戶。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在 MCP 的整個調用過程中有一個非常核心的點就是 MCP Server 以及 MCP Tool 的信息。從第一步，第二步可以看出，這個信息非常關鍵，是它讓 LLM 知道了該如何解決用戶的問題，這個信息就是 MCP 中最重要的 System Prompt，本質上就是 PE 工程。&lt;/p&gt; 
&lt;h3&gt;MCP System Prompt&lt;/h3&gt; 
&lt;p&gt;MCP 不像傳統的協議定義，它沒有一個確定的數據結構。它的核心是通過自然語言描述清楚有哪些 MCP Server，承擔什麼作用，有哪些 MCP Tool，承擔什麼作用，然後讓大語言模型通過推理去選擇最合適的 MCP Server 以及 MCP Tool。所以它的核心本質上還是提示詞工程。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-120aa561c4f9d67cebd623ba4cb5ceab2eb.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-86391324e806a590732d3b9ffd5e4358359.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上面兩張圖是 Cline（一個 MCP Client）中的 System Prompt，可以清晰的看到它對 MCP Server 和 MCP Tool 都有明確的描述。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8c589278bba00c8154935bf90b5922f5e85.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上圖是流程中的第一步，將用戶的問題和 System Prompt 一起發送給 LLM 的內容。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-7f1b4a7b3fc2d4626d822b43aee01b16cef.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;上圖是流程中的第二步，LLM 返回瞭解決用戶問題明確的 MCP Server 和 MCP Tool 信息。&lt;/p&gt; 
&lt;h3&gt;MCP 和 Function Calling 之間的區別&lt;/h3&gt; 
&lt;p&gt;看到這，我想大家應該對 MCP 是什麼有一定感覺了。MCP 是不是解決了&lt;strong&gt;找接口&lt;/strong&gt; 和&lt;strong&gt;解析接口&lt;/strong&gt;的問題？因為這兩個工作都交給了 LLM。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;LLM 負責幫 AI Agent 找到最合適的接口。&lt;/li&gt; 
 &lt;li&gt;AI Agent 調用接口，壓根不用做返回結果的解析，原封不動再交給 LLM。&lt;/li&gt; 
 &lt;li&gt;LLM 結合用戶問題和接口返回的結果，做內容規整處理。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;那麼可能有小夥伴會問，MCP 和 LLM 的 Function Calling 又有什麼區別呢？核心區別是是否綁定模型或模型廠商：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP 是通用協議層的標準，類似於&quot;AI 領域的 USB-C 接口&quot;，定義了 LLM 與外部工具 / 數據源的通信格式，但&lt;strong&gt;不綁定任何特定模型或廠商&lt;/strong&gt;，將複雜的函數調用抽象為客戶端-服務器架構。&lt;/li&gt; 
 &lt;li&gt;Function Calling &lt;strong&gt;是大模型廠商提供的專有能力&lt;/strong&gt;，由大模型廠商定義，不同大模型廠商之間在接口定義和開發文檔上存在差異；允許模型直接生成調用函數，觸發外部 API，依賴模型自身的上下文理解和結構化輸出能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b8eff8e848cb828269fb1e47357cb5a7ddb.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;如上圖所示，LLM Function Calling 需要 LLM 為每個外部函數編寫一個 JSON Schema 格式的功能説明，精心設計一個提示詞模版，才能提高 Function Calling 響應的準確率，如果一個需求涉及到幾十個外部系統，那設計成本是巨大，產品化成本極高。而 MCP 統一了客戶端和服務器的運行規範，並且要求 MCP 客戶端和服務器之間，也統一按照某個既定的提示詞模板進行通信，這樣就能通過 MCP 加強全球開發者的協作，複用全球的開發成果。&lt;/p&gt; 
&lt;h3&gt;MCP 的本質和挑戰&lt;/h3&gt; 
&lt;p&gt;根據上文的一系列解釋，我們可以總結一下 MCP 的本質：&lt;strong&gt;模型上下文協議（Model Context Protocol）並不是一個確定的數據格式或數據結構，它是&lt;/strong&gt; 描述 MCP Server/MCP Tool 信息的系統提示詞&lt;strong&gt;和&lt;/strong&gt; MCP Server 與 LLM 之間的協同關係&lt;strong&gt;的結合&lt;/strong&gt; &lt;strong&gt;，&lt;/strong&gt; &lt;strong&gt;解決的是&lt;/strong&gt; 找接口&lt;strong&gt;和&lt;/strong&gt; 解析接口&lt;strong&gt;的問題&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-dd0578fcdb7e680a0c9312663e7727d8586.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;明確了 MCP 本質之後，將其帶入到企業級生產應用中，你就會發現，這兩個核心點上會有很多挑戰，或者説不足。&lt;/p&gt; 
&lt;h4&gt;描述 MCP 信息的系統提示詞的挑戰&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;系統提示詞的安全性如何保證？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;這個最核心的系統提示詞如果被污染了，LLM 就不能準確知道你有哪些 MCP Server，有哪些 MCP Tool，甚至可能告訴 LLM 錯誤的，有安全漏洞的 MCP Server 和 MCP Tool，那麼對你的 AI 應用來説將是巨大的風險，會導致整個 MCP 流程的癱瘓。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;系統提示詞如何管理？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;MCP Server 或者 MCP Tool 有了新版本，系統提示詞應該也許要有對應的版本管理策略。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;系統提示詞寫的不好，如何方便的快速調試？能不能實時生效？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;系統提示詞是沒有標準定義的，理論上每個企業可以定義自己的系統提示詞模板，類似 PE 工程。提示詞不可能一次性就能寫好，需要反覆調試，需要有機製做快速的調整，並且可以做到使其實時生效。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果 MCP Server 很多，那麼系統提示詞會非常長，豈不是很消耗 Token？如何縮小或精確 MCP Server 和 MCP Tool 的範圍？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;如果你有幾十個或更多 MCP Server，那麼就有可能有上百個或更多 MCP Tool，所有的信息描述下來放在系統提示詞後，這個提示詞模板會非常大，顯而易見的對 Token 消耗非常大，變相的就是成本高。應該需要一套機制，基於用戶的問題，預圈選 MCP Server 和 MCP Tool 的範圍，減少 Token，提高效率，很類似聯網搜索裏的意圖識別。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MCP Client 與 MCP Server 之間協同關係的挑戰&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;負責做協同的是 MCP Client，但目前 MCP Client 很少，比如 Cline， Claude，Cursor 等，而且都是 C/S 工具，支持的都是 SSE 協議，企業級的 AI 應用該如何結合？能不能結合？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;基本上目前市面中的 MCP Client 都無法和企業級的 AI 應用做結合，SSE 這種有狀態的協議有很多弊端，比如不支持可恢復性，服務器需要維持長期連接，僅支持服務器 → 客戶端消息，無法靈活進行雙向通信等。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;現存的傳統業務能快速轉成 MCP Server 嗎？能 0 代碼改動的轉換嗎？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;開發一個 MCP Server 是強依賴各語言的 MCP SDK 的，目前只支持 Python、Java、TS、Kotlin、C#。那如果是 Go 或者 PHP 技術棧的企業怎麼辦？並且那麼多現存的業務全部用 MCP SDK 重構一遍，工作量巨大，也很不現實。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MCP Server 會很多，如何統一管理？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;有自己開發的 MCP Server，有三方的 MCP Server，還有大量通過某種神祕機制將傳統業務轉換而來的 MCP Server。這些都應該有一個類似 MCP Hub 或 MCP 市場的東西統一管理起來，方便 MCP Client 去使用。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;企業級 AI 應用中，身份認證、數據權限、安全這些如何做？&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在企業級的應用中，無論哪種協議，哪種架構，哪種業務。身份認證、數據權限、安全防護這些問題都是永遠繞不開的。那麼在 MCP 這種協同方式下如何實現。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;AI 應用架構新範式&lt;/h2&gt; 
&lt;p&gt;我們結合 MCP 範式，以解決上述挑戰點為目的，將 AI Agent 的架構進行了重構。在雲原生 API 網關 &lt;strong&gt;，&lt;/strong&gt; 微服務引擎 Nacos &lt;strong&gt;兩個產品中做了 MCP 增強能力，解決了上述大部分的挑戰點。在&lt;/strong&gt; 函數計算 FC &lt;strong&gt;，&lt;/strong&gt; Serverless 應用引擎 SAE &lt;strong&gt;兩個產品中做了 MCP 增強能力，前者解決快速開發 MCP Server 的問題，後者解決開源 Dify 性能的問題。共同構建了基於 MCP 的&lt;/strong&gt; AI 應用開發新範式。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-03e42880c942d913877ccf06ee2afa243e7.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3&gt;AI 應用架構新範式剖析&lt;/h3&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-ff32b45cf513d2b21df5bf3986ed678137a.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;首先我對圖中的 8 步核心調用鏈路做以解析：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;第一步：用戶向 AI 應用發起請求，請求流量進入流量網關（雲原生 API 網關）。&lt;/li&gt; 
 &lt;li&gt;第二步：雲原生 API 網關側維護管理了不同類型的 AI Agent 的 API 或路由規則，將用戶請求轉發至對應的 AI Agent。&lt;/li&gt; 
 &lt;li&gt;第三步：AI Agent 無論以哪種方式實現，只要其中的節點需要獲取數據，便向 MCP 網關（雲原生 API 網關）請求獲取可用的 MCP Server 及 MCP Tool 的信息。&lt;/li&gt; 
 &lt;li&gt;第四步：因為 MCP 網關處可能維護了很多 MCP 信息，可以藉助 LLM 縮小 MCP 範圍，減少 Token 消耗，所以向 AI 網關（雲原生 API 網關）發請求和 LLM 交互。（這一步可選）&lt;/li&gt; 
 &lt;li&gt;第五步：MCP 網關將確定好範圍的 MCP Server 及 MCP Tool 的信息 List 返回給 AI Agent。&lt;/li&gt; 
 &lt;li&gt;第六步：AI Agent 將用戶的請求信息及從 MCP 網關拿到的所有 MCP 信息通過 AI 網關發送給 LLM。&lt;/li&gt; 
 &lt;li&gt;第七步：經過 LLM 推理後，返回解決問題的一個或多個 MCP Server 和 MCP Tool 信息。&lt;/li&gt; 
 &lt;li&gt;第八步：AI Agent 拿到確定的 MCP Server 和 MCP Tool 信息後通過 MCP 網關對該 MCP Tool 做請求。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;實際生產中 ③ - ⑧ 步會多次循環交互。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-10882473c8c301e063c2f4542b92db86114.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;我們依然基於 MCP 的兩個本質來刨析這個新的架構。&lt;/p&gt; 
&lt;h4&gt;如何解決 MCP 提示詞的各個挑戰&lt;/h4&gt; 
&lt;p&gt;我們團隊是中間件開源最多的團隊，比如 Nacos，Higress，Sentinel，RocketMQ，Seata 等，並且還維護着 Spring Cloud Alibaba，Spring AI Alibaba，Dubbo 這些開源開發框架，在微服務架構領域有着豐富的經驗。所以在 MCP Server 和 MCP 提示詞統一管理這個點上，天然的就想到了微服務領域裏基於 Nacos 做服務註冊發現和配置統一管理的模式，我們將其轉嫁到了 MCP 範式，大家可以想一下以下這些對應關係：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;SpringCloud 服務/Dubbo 服務/Go 服務 -&amp;gt; 各類 MCP Server&lt;/li&gt; 
 &lt;li&gt;SpringCloud 服務/Dubbo 服務/Go 服務暴露的接口 -&amp;gt; 各類 MCP Server 提供的 MCP Tool&lt;/li&gt; 
 &lt;li&gt;SpringCloud 服務/Dubbo 服務/Go 服務暴露的接口描述 -&amp;gt; 各類 MCP Server 提供的 MCP Tool 的描述&lt;/li&gt; 
 &lt;li&gt;SpringCloud 服務/Dubbo 服務/Go 服務的配置文件 -&amp;gt; 各類 MCP Server 的系統提示詞&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6116237b6f29c9c47ddc3920068838f27b1.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;所以在 MSE Nacos 這個產品中，我們做了一系列增強 MCP 的能力，使 MSE Nacos 成為統一管理 MCP Server 的 MCP Register（MCP Server 註冊/配置中心）。是 AI 應用開發新範式的核心組件。&lt;/p&gt; 
&lt;p&gt;另外，MCP 官方的 Roadmap 中，也在規劃 MCP Register 的能力，我們會基於 Nacos 作為 MCP Register 的方案和 MCP 在開源側進行共建。&lt;/p&gt; 
&lt;h5&gt;MCP Register（MCP Server 註冊/配置中心）&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c723b1909c83c053b67c2e0435ec0551977.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h5&gt;MCP Server 統一管理&lt;/h5&gt; 
&lt;p&gt;MCP Server 註冊到 MSE Nacos 有兩種方式：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在 MSE Nacos 控制枱手動創建。也就是將 MCP Server 的 Endpoint 配置到 MSE Nacos 中。&lt;/li&gt; 
 &lt;li&gt;通過 Nacos SDK，自動將 MCP Server 註冊進 Nacos。和當前 Java SpringCloud，Java Dubbo 服務邏輯一樣。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在 MSE Nacos 中對 MCP Server 進行統一管理，可以實現對 &lt;strong&gt;MCP Server 的健康檢查，負載均衡，描述信息 Json 向 XML 轉換，MCP Server 上下線管控等功能&lt;/strong&gt;。&lt;/p&gt; 
&lt;h5&gt;MCP Prompt 統一管理&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-693257655e2f075fee6fe4cf19c69710116.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在 MSE Nacos 中維護 MCP Server 的 Prompt 有兩種方式：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;手動創建 MCP Server 的配置信息，配置文件的 Data ID 的命名格式為&lt;code&gt;[MCP Server name]-mcp-tools.json&lt;/code&gt;。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;在配置文件中管理 MCP Tool 的提示詞信息，比如整體作用描述，入參描述等。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;結合 MSE 治理的能力，如果是 Java 或者 Go，可以自動感知服務的 Schema，自動生成 MCP Server 和 MCP Tool 的提示詞信息。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在 MSE Nacos 中對 MCP Server 提示詞進行統一管理，可以實現 &lt;strong&gt;MCP 提示詞版本管理（回滾），MCP 提示詞灰度管理，MCP 提示詞安全管理，MCP 提示詞動態調優實時生效等功能&lt;/strong&gt;。&lt;/p&gt; 
&lt;h5&gt;MCP 效果驗證體系（進行中）&lt;/h5&gt; 
&lt;p&gt;上文中提到當 MCP Server 很多時，MCP Server 的各描述信息會很多，也就是 Prompt 會很長，Token 消耗很大，所以需要有機制基於用戶的輸入縮小 MCP Server 範圍，減少 Token 消耗，增加 LLM 推理效率。除此以外，大家知道，只要是和 LLM 交互的場景，提示詞的好壞是需要多次調試的，MCP 的整個流程強依賴提示詞工程，如果提示詞調整不好，LLM 無法返回準確的 MCP Server 和 MCP Tool，那麼整個流程就是不可用的狀態了。所以在 Nacos 中我們正在做一個 MCP 效果驗證的體系。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-168928facd996f1d8f0df17cc8fedd1005e.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;核心的原理是我們會提供一個基於 Spring AI Alibaba 開發的 AI Agent，通過用戶配置的業務輸入、LLM、圈定的 MCP Server 和 MCP Tool 的集合不斷的做驗證，將結果以視圖的方式展現出來（比如成功率等）。用戶可以在 Nacos 中動態的對成功率低的 MCP Server 的提示詞做調整優化。&lt;/p&gt; 
&lt;h5&gt;MCP 安全性保障（持續完善中）&lt;/h5&gt; 
&lt;p&gt;無論哪種架構，哪種模式，安全性在企業生產中必然都是第一位的，MCP 領域也不例外，並且需要考慮的環節更多。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-2fa44d5a0dbc05da8d02a3a41e69d32e0ce.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Server 敏感信息安全管理：註冊進 MSE Nacos 的各類 MCP Server 都會有類似 API Key、AK/SK、密鑰、登錄密碼等敏感信息。MSE Nacos 和阿里雲 KMS 深度集成，可以對這些敏感信息做加密處理。&lt;/li&gt; 
 &lt;li&gt;MCP Prompt 安全管理：同樣依託於 MSE Nacos 和 KMS 的深度集成，可以將 MCP Server，MCP Tool 完整的 Prompt（描述信息）做加密處理，避免 Prompt 污染。&lt;/li&gt; 
 &lt;li&gt;MCP Prompt 安全校驗：結合上述的驗證體系以及與內容安全做集成，實現 MSE Nacos 對 MCP Server 的 Prompt 的合法性校驗。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;如何解決 MCP Client 與 MCP Server 之間協同關係的挑戰&lt;/h4&gt; 
&lt;p&gt;在 MCP 範式中，其實是三個角色在互相協同：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Client -&amp;gt; LLM&lt;/li&gt; 
 &lt;li&gt;MCP Client -&amp;gt; MCP Server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這兩類協同關係本質上還是服務提供方和服務消費方之間的關係，涉及到&lt;strong&gt;代理協作&lt;/strong&gt; 和&lt;strong&gt;流量管控&lt;/strong&gt;兩個核心點。在傳統開發範式下，通常是由網關來負責的。所以我們在雲原生 API 網關中增強了 LLM 代理和 MCP Server 代理的能力，使其同時具備流量網關，AI 網關（LLM 代理）和 MCP 網關的能力。是 AI 應用開發新範式的核心組件。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-be80748631259c1b0803fc6e483b5a0c941.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;所以在企業的整體系統架構中，只需要一個雲原生 API 網關，即可作為流量網關、API 網關、微服務網關、AI 網關、MCP 網關，在代理和流量管控層面實現傳統業務和 AI 業務的大統一，並且再結合 AI 應用開發的新範式，平滑的將 AI 業務和傳統業務相結合。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8619b9be1118c77b682923cbfbec24b5780.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h5&gt;雲原生 API 網關 Dog Food&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b0b6f6f53c814320166453d81b7f32b99bf.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;秉承着自己吃自己狗糧的原則，雲原生 API 網關在阿里集團內部已經有很多業務在深度使用，在企業級產品能力，穩定性，性能方面已經有多個大體量業務的背書。&lt;/p&gt; 
&lt;h5&gt;AI 網關&lt;/h5&gt; 
&lt;p&gt;MCP Client 與 LLM 之間的交互和傳統業務與 LLM 之間的交互本質是一樣的，只要應用上生產，都會有一系列的問題需要去解決：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;成本平衡問題：比如部署 DeepSeek R1 671B 滿血版模型，至少需要 2 台 8 卡 H20 機器，列表價年度超過 100W，但 2 台的 TPS 有限，無法滿足生產部署中多個用戶的併發請求。即使 Meta 新發布的 Llama4，也至少需要一張 H100 去運行。所以需要有方案找到 TPS 和成本之間的平衡點。&lt;/li&gt; 
 &lt;li&gt;模型幻覺問題：即使是 DeepSeek R1 671B 滿血版模型，如果沒有聯網搜索，依然有很嚴重的幻覺問題。&lt;/li&gt; 
 &lt;li&gt;多模型切換問題：單一模型服務有較大的風險和侷限性，比如穩定性風險，比如無法根據業務（消費者）選擇最優模型。目前也沒有開源組件和框架解決這類問題。&lt;/li&gt; 
 &lt;li&gt;安全合規問題：企業客戶需要對問答過程做審計，確保合規，減少使用風險。&lt;/li&gt; 
 &lt;li&gt;模型服務高可用問題：自建平台性能達到瓶頸時需要有一個大模型兜底方案，提升客戶大模型使用體驗。&lt;/li&gt; 
 &lt;li&gt;閉源模型 QPS/Token 限制問題：商業大模型都有基於 API Key 維度的 QPS/Token 配額限制，需要一個好的方式能夠做到快速擴展配額限制。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;以上問題都是實實在在的客戶在使用過程中遇到的問題，有些是模型自身問題，有些是部署架構問題，如果要客戶一個一個去解決，複雜度和時間成本都是比較高的。所以就需要 AI 網關的介入來快速的，統一的收斂掉這些核心問題。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-979c884967f9dd509ee14425480408fa609.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;雲原生 API 網關的 AI 網關增強能力主要有四部分：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;多模型適配：可以代理市面上所有主流的模型託管服務，以及兼容 OpenAI 協議的 AI 服務。在這個模塊中包括協議轉換、多 API Key 管理、Fallback、多模型切換等多個核心功能。&lt;/li&gt; 
 &lt;li&gt;AI 安全防護：安全防護分為三個層面，一個是輸入輸出的內容安全防護，另一個是保護下游 LLM 服務的穩定，以及管控 AI 接口消費者。在這個模塊中包括內容審核、基於 Token 的限流降級、消費者認證等多個核心功能。&lt;/li&gt; 
 &lt;li&gt;AI 插件：AI 網關的靈活擴展機制我們使用插件的形式來實現，目前有很多預置的插件，用戶也可以開發自定義插件來豐富 AI 場景流量的管控。比如基於 AI 插件機制我們實現了結果緩存、提示詞裝飾器、向量檢索等能力。&lt;/li&gt; 
 &lt;li&gt;AI 可觀測：AI 場景的可觀測和傳統場景的可觀測是有很大區別的，監控和關注的指標都是不同的，雲原生 AI 網關結合阿里雲日誌服務和可觀測產品實現了貼合 AI 應用業務語義的可觀測模塊和 AI 觀測大盤，支持比如 Tokens 消費觀測，流式/非流式的 RT，首包 RT，緩存命中等可觀指標。同時所有的輸入輸出 Tokens 也都記錄在日誌服務 SLS 中，可供用戶做更詳細的分析。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI 網關代理 LLM 更詳細的方案可以參見我之前的文章： &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtZ0wsTlZK67r9IxNZ57TDQ&quot; target=&quot;_blank&quot;&gt;AI 網關代理 LLMs 最佳實踐&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-ad17af83a1e5f0e85f744f7f6c2467e9eb5.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h5&gt;MCP 網關&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1b333f6b4365a768b67f0134cb276dfa56f.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;MCP Client 和 MCP Server 之間的交互和傳統的服務提供者和服務消費者之間的交互就有所區別了，所以我們在雲原生 API 網關中增加了 MCP 相關的能力，但從產品版本劃分層面，MCP 相關的能力依然包含在 AI 網關的能力範疇內。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-3bd22ce32b62b13d4980394307caec2bb17.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h5&gt;MCP Server 動態發現&lt;/h5&gt; 
&lt;p&gt;上文中介紹了 MSE Nacos 作為 MCP Server 註冊/配置中心，那麼 MCP Client 如何來發現呢？如果是 MCP Client 直接和 MSE Nacos 交互，那麼又會在 MCP Client 中引入 Nacos SDK，增加了編碼的複雜度。&lt;/p&gt; 
&lt;p&gt;鑑於雲原生 API 網關和 MSE Nacos 在傳統服務領域早已做了深度集成，打通了雲原生 API 網關自動發現註冊在 MSE Nacos 中的服務，所以在 MCP 範式下，我們同樣實現了雲原生 API 網關自動發現註冊在 MSE Nacos 中的 MCP Server 的能力。&lt;/p&gt; 
&lt;p&gt;通過這種方式，MCP Client 只需要使用雲原生 API 網關的接入點，即可自動的、動態的獲取到所有註冊在 MSE Nacos 中的 MCP Server。雲原生 API 網關（MCP 網關）就變成了一個 MCP Hub，無論如何更新、變更 MCP Server，都只需要在 MSE Nacos 操作即可，MCP Client 無需做任何修改。&lt;/p&gt; 
&lt;h5&gt;將傳統服務 0 代碼改造轉換為 MCP Server&lt;/h5&gt; 
&lt;p&gt;在 AI 的時代下，我認為最有價值的是使用 AI 增強、提升客戶的現存業務，使其變成一個 AI 應用或 AI 加持的業務，而不是完全新開發一套 AI 應用。&lt;/p&gt; 
&lt;p&gt;所以開發一個 AI 應用或者做現存業務的 AI 增強，AI Agent 是需要和大量現存業務做交互的，MCP 雖然統一的協議，但將現存業務重構為 MCP Server 的成本是非常高的，並且目前支持的開發語言有限，像 Go，PHP 都沒有對應的 MCP SDK，所以會讓很多企業想擁抱 MCP，但又無從下手。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-bc61c6005adb6f765e14b59cdbeea0fe3d8.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;網關最擅長做的事情就是協議轉換，Nacos 在傳統微服務場景下已經註冊了很多現存的傳統服務，那麼兩者一拍即合，通過網關將註冊在 Nacos 中的傳統服務 0 代碼改造的轉換為 MCP Server。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;註冊在 MSE Nacos 中的現存業務服務（SpringCloud 服務、Dubbo 服務、Go 服務）不需要做任何改變。&lt;/li&gt; 
 &lt;li&gt;在 MSE Nacos 中新增&lt;code&gt;[Server Name]-mcp-tools.json &lt;/code&gt;命名規範的配置文件，在配置文件中使用 MCP 規範對現存業務的接口進行描述。&lt;/li&gt; 
 &lt;li&gt;通過雲原生 API 網關（MCP 網關），MCP Client 側自動發現由傳統服務轉換來的 MCP Server。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;將 SSE 轉換為 Streamable HTTP&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6c6e2f8f134ba0aca592c05df3946d05fc9.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;MCP 範式默認的傳輸協議是 SSE（Server Sent Event），本質上是一種長連接，有狀態的傳輸協議。這種協議在企業級應用中有很多弊端：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;不支持可恢復性（Resumability）：連接斷開後，客戶端必須重新開始整個會話。&lt;/li&gt; 
 &lt;li&gt;服務器需要維持長期連接（High Availability Requirement）：服務器必須保持高可用性，以支持持續的 SSE 連接。&lt;/li&gt; 
 &lt;li&gt;SSE 僅支持服務器 → 客戶端消息，無法靈活進行雙向通信。&lt;/li&gt; 
 &lt;li&gt;目前只有少數幾個 C/S 架構的客戶端和 MCP 提供的用於測試驗證的 Web 客戶端支持 MCP 範式和 SSE 協議。無法用在企業級的生產應用中。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;好在 MCP 官方也意識到了該問題，所以在 3 月下旬，發佈了新的 Streamable HTTP 協議。Streamable HTTP 改變了 MCP 的數據傳輸方式，讓協議變得更靈活、更易用、更兼容：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;更靈活：支持流式傳輸，但不強制。&lt;/li&gt; 
 &lt;li&gt;更易用：支持無狀態服務器。&lt;/li&gt; 
 &lt;li&gt;更兼容：適用於標準 HTTP 基礎設施。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;簡單來説，原來的 MCP 傳輸方式就像是你和客服通話時必須一直保持在線（SSE 需要長連接），而新的方式更像是你隨時可以發消息，然後等回覆（普通 HTTP 請求，但可以流式傳輸）。&lt;/p&gt; 
&lt;p&gt;這裏大家可以思考一下：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Streamable HTTP 打破了目前幾個 C 端 MCP Client 的壁壘。也就意味着任何請求方（甚至就是一段簡單的 HTTP Request 代碼），都可以像請求標準 HTTP API 的方式一樣和 MCP Server 交互。&lt;/li&gt; 
 &lt;li&gt;換句話説，當可以使用標準 HTTP API 的方式和 MCP Server 交互後，是不是就不存在所謂的 MCP Client 了？&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;雖然 Streamable HTTP 還在草案階段，但云原生 API 網關作為 MCP 網關已經支持了將 SSE 傳輸協議自動轉換為 Streamable HTTP 傳輸協議。或者説，通過雲原生 API 網關（MCP 網關）代理的 MCP Server 同時支持 SSE 和 Streamable HTTP 兩種傳輸協議供 Client 使用。&lt;/p&gt; 
&lt;h5&gt;MCP 模式下的身份認證和權限管控&lt;/h5&gt; 
&lt;p&gt;身份認證和權限管控在任何架構，任何業務場景下都是剛需，在 MCP 範式下也不例外，這裏有兩個層面的權限管控：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client 有權使用哪些 MCP Server。有權使用某 MCP Server 裏的哪些 MCP Tool。&lt;/li&gt; 
 &lt;li&gt;Client 通過 MCP Tool 有權獲取到哪些數據。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-6d6595b637a2f9c12b007739e38fb843885.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h5&gt;MCP Server 和 MCP Tool 的使用權限&lt;/h5&gt; 
&lt;p&gt;大家設想一下，當傳統業務可以 0 代碼轉換為 MCP Server 後，註冊在 Nacos 中的 MCP Server 和 MCP Tool 肯定會有很多，從業務領域來説，可能有和財務相關的 MCP Server，有和銷售相關的 MCP Server，有和售後服務相關的 MCP Server。在返回 MCP Server 和 MCP Tool 信息時不可能將所有信息都返回，肯定只能返回 Client 身份有權使用的 MCP Server 信息。&lt;/p&gt; 
&lt;p&gt;雲原生 API 網關作為 MCP 網關，通過成熟的插件機制提供了 HTTP Basic Auth，OAuth2.0，JWT，API Key，外部認證等多種認證方式，以及基於消費者認證功能，可以讓用戶靈活的管理和控制 Client 的身份認證和 MCP Server/MCP Tool 使用權限。&lt;/p&gt; 
&lt;h5&gt;MCP Server 和 MCP Tool 的數據權限&lt;/h5&gt; 
&lt;p&gt;當 MCP Server 是數據類服務時會比較常見，比如 Mysql MCP Server，Redis MCP Server 等。權限會下探到庫級別，表級別。在這種場景下，雲原生 API 網關作為 MCP 網關，可以通過插件機制，改寫或增加 Request Header 的值，結合 MSE 治理將 Header 的值透傳下去，然後在服務內部進一步做數據權限管控。&lt;/p&gt; 
&lt;p&gt;我舉例一個通過這種方式實現的數據庫讀寫分離的場景：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-141201d3bda7f80ef0e2186996e5f78e5fa.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;如何快速構建 MCP Server&lt;/h4&gt; 
&lt;p&gt;眾所周知，AI 應用裏涉及到 LLM 推理的場景，大都用在調用相對稀疏的場景，MCP 範式強依賴 LLM 推理，所以無論是基於 HTTP API 模式的 AI 應用開發架構還是基於 MCP 的 AI 應用開發架構，目前也都是應用在相對稀疏調用的場景。所以這裏可以延伸出兩個問題：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在稀疏調用的場景下，運行 MCP Server 的計算資源如何優化資源利用率，説的再直白一些就是如何能做到成本最優。&lt;/li&gt; 
 &lt;li&gt;在新的業務中，如何快速構建 MCP Server。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在所有的計算產品中，函數計算（FC）這種 Serverless FaaS 類型的計算產品，在資源粒度、彈性策略、彈性效率方面都是最適合稀疏調用場景的。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-226f328add64bac9730162c080868382b86.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;函數計算（FC）目前支持了 Python 和 NodeJS 兩種語言的 MCP 運行環境（其他語言的 MCP 運行環境也馬上會支持）。用戶選擇 MCP 運行環境創建函數後，只需要編寫 MCP Tool 的業務邏輯即可，不需要考慮如何使用 MCP SDK。並且雲原生 API 網關和函數計算（FC）有深度集成，可以天然適配 AI 應用開發的新範式。&lt;/p&gt; 
&lt;h5&gt;MCP Server 的彈性效率&lt;/h5&gt; 
&lt;p&gt;基於函數計算（FC）構建的 MCP Server 在彈性效率方面可以從兩個維度來看：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;資源規格細粒度管控。&lt;/li&gt; 
 &lt;li&gt;完全按請求彈性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;函數計算（FC）的實例規格從 0.05C 128MB 到 16C 32GB 不等，有幾十種規格的組合方式，可以靈活的根據不同 MCP Server 承載的業務選擇合適的資源規格。另外，在 AI 應用中，尤其是流程式構建的模式中，大多數 AI Agent 的職責都是單一的，計算邏輯不復雜的任務，所以都可以用較小資源規格的函數承載。資源規格小，在資源調度，彈性效率方面自然就會有優勢。&lt;/p&gt; 
&lt;p&gt;再看函數計算（FC）的彈性機制，它是完全按照請求彈性的，有多少 QPS，就拉起對應數量的實例，並且實例可以複用，當 QPS 降下來後，空閒的實例會自動釋放，整個過程完全不需要用戶介入參與。在默認按請求彈性的的基礎上，用戶還可以自行設置按照時間定時彈，或按照指標閾值彈的策略，進一步滿足複雜多變的業務場景，做到資源成本最優。&lt;/p&gt; 
&lt;h5&gt;MCP Server 的可觀測&lt;/h5&gt; 
&lt;p&gt;函數計算（FC）有完善的可觀測體系，也就意味着，基於函數計算（FC）構建的 MCP Server 同樣具備指標、鏈路、日誌三個維度的可觀測能力。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b5f9da48cc9bb3dc9d0a1a704532ed62b69.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過這套可觀測體系，用戶可以清晰的瞭解每個 MCP Server 的各類運行狀態。&lt;/p&gt; 
&lt;h4&gt;如何解決開源自建 Dify 的痛點問題&lt;/h4&gt; 
&lt;p&gt;目前，Dify 基本已是可視化流程編排 AI Agent 使用最廣泛的工具，但是目前還沒有任何一家雲廠商有 Dify 託管產品，所以很多基於開源自建 Dify 平台的客戶會遇到很多共性的問題，尤其是從個人開發者、開發 Demo 轉向企業級生產應用構建時，這些問題往往都是致命的。&lt;/p&gt; 
&lt;p&gt;企業基於開源自建 Dify 遇到的問題：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;流量防護弱：基於開源自建沒有任何防護措施，很容易被穿透。&lt;/li&gt; 
 &lt;li&gt;管控與數據鏈路耦合：AI 應用設計與 Agent 的執行耦合在一起，在高併發場景下無法保證穩定性。&lt;/li&gt; 
 &lt;li&gt;負載均衡問題：在大流量情況下，Dify 的核心服務可能會因為流量負載不均導致穩定性下降。&lt;/li&gt; 
 &lt;li&gt;可觀測缺失：開源 Dify 本身不帶可觀測能力，需要額外搭建可觀測體系。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;為瞭解決這些問題，阿里雲上的 Serverless PaaS 類型的計算產品 Serverless 應用引擎（SAE）做了企業生產級別的 Dify 託管部署方案，旨在解決上述問題，讓企業在使用 Dify 的時候不用再關心穩定性、健壯性、性能這些問題。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c555e83a9fc792a92b986916955d7f9752c.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h5&gt;快速部署 Dify&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1ba31b5a2dd05293386af6ce14de2ee831e.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;SAE 提供了 Dify 應用模板，可以一鍵拉起 Dify 應用，並且提供可視化構建的能力，可以對 Dify 裏的每一個環節進行單獨調整。&lt;/p&gt; 
&lt;h5&gt;保障 Dify 穩定高可用&lt;/h5&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-32b0e7199c97341bf0d0222faacf34ca011.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;SAE 部署 Dify 支持配置化，三 AZ 部署，實例粒度的自動化遷移，結合雲原生 API 網關和 SAE 內置的服務治理能力，保障負載均衡穩定性，同時還支持 Dify 6 個核心服務的健康檢查，以及無損上下線。&lt;/p&gt; 
&lt;p&gt;同樣依託於底層 Serverless 架構，部署在 SAE 中的應用同樣具備優秀的橫向擴展效率，並且支持多種方式的彈性規則配置，使整套 Dify 服務可以根據不同的業務場景進行彈縮，在保證高可用的同時，又兼具成本優勢。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-1cd91079e9cbc4492cadd0a21b9bd65f100.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;除此以外，SAE 還支持小流量預熱，CPU Burst 等能力，進一步保證 Dify 應用在極端情況下的穩定性。&lt;/p&gt; 
&lt;h5&gt;Dify 任務調度方案&lt;/h5&gt; 
&lt;p&gt;定時執行工作流做 AI 數據處理是通用的業務場景，Dify 官網已經把通過定時任務做 Dify 工作流的定時執行和狀態監控作了最佳實踐，可以參考&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.dify.ai%2Fzh-hans%2Flearn-more%2Fuse-cases%2Fdify-schedule%E3%80%82%E4%BD%86%E6%98%AF%E8%AF%A5%E5%AE%9E%E8%B7%B5%E4%B8%AD%E7%9A%84&quot; target=&quot;_blank&quot;&gt;https://docs.dify.ai/zh-hans/learn-more/use-cases/dify-schedule。但是該實踐中的&lt;/a&gt; Dify Schedule 比較簡陋，通過 Github Actions 做定時調度，只能調度公網的 dify 工作流，且不是一個企業級解決方案。&lt;/p&gt; 
&lt;p&gt;開源 Dify 在調度方面的痛點主要有 3 點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;執行記錄過多會導致慢查詢。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;執行歷史記錄存儲在數據庫中，數量太多會影響 Dify 性能，導致慢查詢。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;執行記錄查詢不支持條件過濾。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;比如通過時間區間查詢，通過任務狀態查詢，這些都是通用的需求，但開源 Dify 都不支持。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;沒有報警監控。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;任務調度系統需要監控工作流的執行狀態，工作流運行失敗，需要報警給對應的負責人，開源無報警監控能力。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我們的方案是通過 MSE 任務調度（SchedulerX）來解決上述問題。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-89118308221a8bc52e81bd3914f14e5ce97.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;用戶在 MSE 任務調度中配置 Dify 的 Endpoint，MSE 任務調度通過 Dify API 拉取工作流應用。&lt;/li&gt; 
 &lt;li&gt;用戶通過 MSE 任務調度配置定時調度和報警監控。&lt;/li&gt; 
 &lt;li&gt;Dify 工作流定時調度的時候，MSE 任務調度通過 Dify 提供的 API 調度用戶的 Dify 應用，並且實時拉取執行結果和詳情，存儲在 MSE 的 AI 任務調度中。&lt;/li&gt; 
 &lt;li&gt;通過 AI 任務調度做報警監控、可觀測增強。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;MSE 任務調度集成 Dify 方案對比開源方案有以下 7 點優勢：&lt;/p&gt; 
&lt;p&gt;| 功能 | MSE 任務調度 + Dify | 開源 Dify | | -------- | ---------------- | ------------------- | | 定時調度 | 有 | 無 | | 監控告警 | 有 | 無 | | 執行記錄保留時長 | 保留最近 2 個月 | 無限制，但數據量太大會導致查詢性能太差 | | 執行記錄查詢 | 支持時間區間、狀態等多種查詢條件 | 過濾條件有限 | | 權限管理 | 操作級別精細化權限管理 | 用戶級別 | | 限流 | 應用限流、Token 限流 | 無 | | 失敗自動重試 | 有 | 無 |&lt;/p&gt; 
&lt;h4&gt;AI 應用可觀測體系&lt;/h4&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8875e63ae3bd892339ee44b4da9f62c1832.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;結合阿里雲可觀測產品 ARMS，鏈路追蹤 OpenTelemetry，我們構建了 AI 應用全環節的可觀測體系。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f5517df414e4d4c1f132161ef3acac072f9.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;AI 應用整體的可觀測體系構建主要有兩部分核心：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;數據採集。&lt;/li&gt; 
 &lt;li&gt;數據串聯與分析。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;觀測數據採集&lt;/h5&gt; 
&lt;p&gt;數據採集的核心是要覆蓋足夠的廣，這裏又分兩個層面：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;編程語言，開發框架要支持的足夠廣，足夠全。&lt;/li&gt; 
 &lt;li&gt;AI 應用架構新範式裏涉及到的雲產品也需要以相同的標準上報數據。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;在這兩個層面，我們通過阿里雲應用監控產品 ARMS 和鏈路追蹤 OpenTelemetry 實現了全覆蓋：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;遵循最新 OpenTelemetry 社區 GenAI 語義約定。&lt;/li&gt; 
 &lt;li&gt;支持常見的 AI 框架和 AI 模型，包括 Spring AI Alibaba / LLamaIndex / Langchain / 通義千問 2 / OpenAI / PromptFlow 等。&lt;/li&gt; 
 &lt;li&gt;支持 AI 應用開發的主流編程語言，Python，Java，Go。並且相比社區規範提供更加精細化的埋點和屬性。&lt;/li&gt; 
 &lt;li&gt;支持在不同的調用鏈中傳播會話信息。&lt;/li&gt; 
 &lt;li&gt;雲原生 API 網關支持 OpenTelemetry 協議，網關自身和插件都會基於 OpenTelemetry 上報觀測數據。&lt;/li&gt; 
 &lt;li&gt;函數計算 FC 和 Serverless 應用引擎 SAE 均與應用監控 ARMS 以及鏈路追蹤 OpenTelemetry 版產品均做了深度集成。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;數據串聯與分析&lt;/h5&gt; 
&lt;p&gt;應用監控 ARMS 中，專門構建了 LLM 應用監控模塊，針對 AI 應用場景提供了完善的可觀測體系。&lt;/p&gt; 
&lt;p&gt;縱向的指標有：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在線 AI 應用數。&lt;/li&gt; 
 &lt;li&gt;Trace 數。&lt;/li&gt; 
 &lt;li&gt;Span 數。&lt;/li&gt; 
 &lt;li&gt;大模型數。&lt;/li&gt; 
 &lt;li&gt;Token 使用情況。&lt;/li&gt; 
 &lt;li&gt;會話數。&lt;/li&gt; 
 &lt;li&gt;用戶數。&lt;/li&gt; 
 &lt;li&gt;模型調用次數。&lt;/li&gt; 
 &lt;li&gt;Token 消耗情況。&lt;/li&gt; 
 &lt;li&gt;模型調用耗時。&lt;/li&gt; 
 &lt;li&gt;Token 消耗排行。&lt;/li&gt; 
 &lt;li&gt;等等...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;橫向鏈路方面提供了專業的調用鏈分析功能：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Span 列表。&lt;/li&gt; 
 &lt;li&gt;Trace 列表。&lt;/li&gt; 
 &lt;li&gt;散點圖。&lt;/li&gt; 
 &lt;li&gt;全鏈路聚合。&lt;/li&gt; 
 &lt;li&gt;全鏈路拓撲。&lt;/li&gt; 
 &lt;li&gt;錯/慢 Trace 分析。&lt;/li&gt; 
 &lt;li&gt;調用鏈上的每個環節都會輸入、輸出、Token 消耗的展示。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;更多在途的功能規劃&lt;/h4&gt; 
&lt;h5&gt;Dify DSL 轉 Spring AI Alibaba 編碼&lt;/h5&gt; 
&lt;p&gt;雖然 Dify 在做 AI Agent 開發時已足夠便利，但是受限於 Dify 的開發語言（Python）和流程引擎的實現邏輯。在運行復雜 AI 應用時，性能方面是有缺陷的。所以我們在探索將 Dify 流程的 DSL 自動轉換為基於 Spring AI Alibaba 開發框架的代碼。&lt;/p&gt; 
&lt;p&gt;相當於只使用 Dify 低代碼可視化構建 AI 應用的皮，運行的內核基於 Spring AI Alibaba 開發框架的代碼，這樣既具備了便捷的 AI Agent 編排能力，又具備了更好的運行性能。&lt;/p&gt; 
&lt;h5&gt;基於 LLM 編排 MCP Server&lt;/h5&gt; 
&lt;p&gt;目前的 MCP 模式，LLM 針對用戶的輸入，只返回一個確定的 MCP Server 和 MCP Tool，這是其實是由系統提示詞控制的。理論上 LLM 可以針對用戶的輸入返回多個 MCP Server 和多個 MCP Tool，並且基於 MCP Server 和 MCP Tool 的描述告訴 Client 它們之間的調用順序，相當於由 LLM 做好了 MCP Server 的編排。這個模式我們還在探索中，很類似現在的 Multi-Agent 的模式。&lt;/p&gt; 
&lt;h5&gt;提高 MCP 模式的性能&lt;/h5&gt; 
&lt;p&gt;因為 MCP 模式中，會頻繁和 LLM 交互，顯而易見，相比傳統 API 調用，MCP 這種模式的性能是不好的，所以在一些時延敏感的業務場景中，目前大概率還不適合 MCP 模式。&lt;/p&gt; 
&lt;p&gt;目前我們也在探討和探索如何提高 MCP 模式下的請求性能問題，比如：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;固化 MCP Server/MCP Tool 組合，減少和 LLM 的交互。尤其當實現 LLM 編排 MCP Server 後，和 LLM 的交互可能就只存在於開發態或調試態，雲形態時使用的都是固化好的 MCP Server 和 MCP Tool 的調用關係。&lt;/li&gt; 
 &lt;li&gt;函數計算探索邊緣場景，將 MCP Server 運行在離用戶更近的地方。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;AI 應用架構新範式對企業的影響&lt;/h2&gt; 
&lt;p&gt;至此，企業級 AI 應用架構新範式的介紹就結束了，整個架構裏有很多環節，每個環節裏又有許多細節，在文章中無法一一展開説明。有興趣的同學可以聯繫我共同探討。&lt;/p&gt; 
&lt;p&gt;我們可以設想一下在這個 AI 應用架構新範式下，企業的運營、產品、研發、運維團隊之間的組織結構和協作關係可能會發生哪些變化？應用或系統的開發模式會發生哪些變化？&lt;/p&gt; 
&lt;p&gt;這裏我來分享一下我的暢想。&lt;/p&gt; 
&lt;h3&gt;MCP Server First&lt;/h3&gt; 
&lt;p&gt;API First，前後端分離這兩個概念已經存在很久了，海外企業遵循和實踐的會比較好。因為我深耕在 Serverless 計算領域也有 5 年時間，對 AWS 的 Lambda 架構方案，Azure Functions 架構方案，Azure App Service 架構方案，GCP CloudFunction 架構方案，GCP CloudRun 架構方案有比較多的研究。接觸了很多 Serverless FaaS 和 Serverless PaaS 架構的客戶案例，包括負責落地了不少從雙 A 遷移到阿里雲的客戶。基本上都是標準的基於 APIG+FaaS 模式的 API First 形態。但是在國內，這個模式實踐的並不好，除了高德下決定使用函數計算重構了系統，實現了真正的 API First，前後端分離模式以外，鮮有客戶有這種模式的實踐，也許是有太重的歷史包袱。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f46ebae566ede2fd2c9350a771a8dffac0e.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;上圖為高德前後的架構對比&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;在 AI 應用的時代，本質上依然是對各種 API 的調用，但是將 HTTP API 改成 REST API，改造成本是巨大的。但當 MCP 出現後，當我們的方案可以幫助客戶 0 代碼的轉型 AI 應用架構新範式的時候，MCP Server First 是有可能。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-cb265611348b21fd749d36609d4cfaa1f74.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;運維團隊：負責雲產品的維護（比如雲原生 API 網關，MSE Nacos，Serverless 應用引擎，PAI 這些產品的開通、升配），可觀測體系的維護（也是基於雲產品），和雲廠商保持持續溝通。&lt;/li&gt; 
 &lt;li&gt;研發團隊：理解公司業務的原子化能力，負責構建 MCP Server 池。&lt;/li&gt; 
 &lt;li&gt;運營/市場/產品：通過低代碼可視化方式構建業務流程（業務編排），大白話描述業務需求，快速完成業務流程的搭建，或者説 AI 應用的構建。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;所以未來很有可能每個企業都有自己的 MCP Server 市場，在 MCP Server 市場裏分門別類，每類 MCP Server 有專門的研發團隊負責，不用太需要考慮統一返回格式，不用考慮開發語言統一。運營、市場、產品等業務方有業務需求或者有新的產品功能需求時，可以通過統一界面用大白話快速構建 AI 應用，MCP+LLM 來實現業務編排，實現 PRD 即產品（PRD as a Product）的新的開發模式。&lt;/p&gt; 
&lt;p&gt;點擊&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Febook%2F8442&quot; target=&quot;_blank&quot;&gt;此處&lt;/a&gt;獲取 78 頁完整版 PPT&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3874284/blog/18175077</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/18175077</guid>
            <pubDate>Sun, 13 Apr 2025 08:51:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>微軟收緊插件，限制 Cursor 使用 C/C++ 語言服務擴展</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span&gt;近日，微軟限制 AI 編程工具 Cursor 使用&amp;nbsp;&lt;/span&gt;&lt;/span&gt;C/C++&amp;nbsp;語言服務擴展的消息&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span&gt;在開發者社區引發震動。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/163758_tmEx_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9d6dfb55c7972bbba5e3d23cf00502da411.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;span&gt;眾多用戶發現，微軟的 C/C++語言服務擴展從 1.18.21 版本開始不再兼容 Cursor，而此前的 1.17.62 版本仍可正常使用。這一變化並非技術故障，而是微軟對其擴展市場規則的嚴格執行——根據最新許可證條款，&lt;strong&gt;其官方擴展僅允許在 Visual Studio Code（&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#ffffff; color:var(--weui-LINK)&quot;&gt;VSCode&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;background-color:#ffffff; color:rgba(0, 0, 0, 0.9)&quot;&gt;&lt;strong&gt;）、Visual Studio 等微軟自家產品中使用，明確禁止在 Cursor 等第三方工具中運行&lt;/strong&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;有開發者表示，最新版本的擴展程序阻止了它的工作，但其通過降級並禁用自動更新的方式解決了。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「在擴展程序頁面，‘卸載’旁邊的下拉菜單中有一個「安裝特定版本」。安裝版本 1.23.6」。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/163421_Vaid_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;微軟此舉被視為對新興競品的主動防禦。近年來，Cursor 憑藉 AI 驅動的代碼生成、Agent Mode 等創新功能快速崛起，成為 VSCode 在 AI 編程領域的直接競爭對手。&lt;/p&gt; 
&lt;p&gt;微軟雖開源了 VSCode 基礎代碼，但通過擴展市場的閉源策略牢牢把控生態——其條款明確將「GitHub Codespaces、Azure DevOps」等自家服務納入允許範圍，卻將 Cursor 等第三方工具排除在外。&lt;br&gt; &amp;nbsp;&lt;br&gt; 開發者社區對微軟的「生態鎖定」策略褒貶不一。支持者認為，微軟投入數百萬美元開發 VSCode 並免費開放，有權限制第三方利用其技術盈利；反對者則指出，此舉暴露了開源與商業利益的矛盾——當企業基於開源代碼構建付費產品時，原開發者是否有權通過技術限制進行「反制」？&lt;/p&gt; 
&lt;p&gt;相關鏈接&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgetcursor%2Fcursor%2Fissues%2F2976&quot; target=&quot;_blank&quot;&gt;https://github.com/getcursor/cursor/issues/2976&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fprogramming%2Fcomments%2F1jrl2zw%2Fmicrosoft_has_released_their_own_agent_mode_so%2F&quot; target=&quot;_blank&quot;&gt;https://www.reddit.com/r/programming/comments/1jrl2zw/microsoft_has_released_their_own_agent_mode_so/&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;閲讀更多：&lt;a href=&quot;https://www.oschina.net/news/199863/csharp-extension-for-vscode-will-be-closed-sources&quot; target=&quot;_blank&quot;&gt;微軟欲閉源 VS Code 的 C# 擴展惹眾怒&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344934/ms-block-cursor</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344934/ms-block-cursor</guid>
            <pubDate>Sun, 13 Apr 2025 08:41:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Figma 提交 IPO 文件</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;開發在線設計協作軟件的初創公司 Figma &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.figma.com%2Fblog%2Fs1-confidential-submission%2F&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;，已向美國證券交易委員會 (SEC) 提交了 IPO 的保密文件。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Figma, Inc. 已向美國證券交易委員會祕密提交了一份 S-1 表格註冊聲明草案，涉及其 A 類普通股的擬議首次公開發行。此聲明並非出售任何證券的要約或購買任何證券的要約邀請。潛在公開發行的股份數量和價格區間尚未確定。任何未來的要約、邀請、購買或出售證券的要約或要約，都將在美國證券交易委員會完成審查程序後，根據《證券法》的註冊要求進行。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;278&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-0b41dafcb8523ec8ffb05a64366ec5fbcda.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多信息還需等待文件公開，樂觀&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2025%2F04%2F15%2Ffigma-ignores-the-fear-files-paperwork-for-an-ipo%2F&quot; target=&quot;_blank&quot;&gt;預計&lt;/a&gt;公開時間大約為一個月後。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Figma 最新估值在 2024 年 5 月達到 125 億美元，當時該公司完成了一項要約收購，允許現有股東套現部分股份。Adobe 曾試圖以 200 億美元收購 Figma，但由於歐洲和美國監管機構的阻力，該交易於 2023 年失敗。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;目前，Figma 已得到了風險投資公司紅杉資本、Index Ventures、Greylock 和 Kleiner Perkins 的支持，這些投資者是該公司的董事會成員，此外還有 Andreessen Horowitz 和 IVP 等眾多其他機構的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color:#000000&quot;&gt;相關閲讀：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/271682/figma-adobe-abandon-proposed-merger&quot; target=&quot;_blank&quot;&gt;Adobe 放棄收購 Figma，需支付 10 億美元補償費&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344932/figma-s1-confidential-submission</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344932/figma-s1-confidential-submission</guid>
            <pubDate>Sun, 13 Apr 2025 08:38:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>英偉達對華特供版 AI 芯片（H20 GPU）遭遇出口管制</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;4 月 16 日，英偉達向美國證監會（SEC）提交一份正式文件。&lt;/p&gt; 
&lt;p&gt;文件顯示，自 4 月 9 日起，美國政府已通知英偉達，公司「對華特供版」AI 芯片產品 H20 GPU（人工智能加速計算處理器）出口至中國及 D:5 國家（包括中國大陸及香港、澳門等特別行政區、俄羅斯、朝鮮、敍利亞、伊朗等面臨美國最嚴格出口管制的地區），或總部、最終母公司位於這些國家及地區的公司，需要獲得美國商務部頒發的出口許可證。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/161554_VBb2_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;4 月 14 日，美國政府通知英偉達，H20 出口許可證要求將無限期生效。該許可證旨在應對相關產品可能被用於中國超級計算機或被轉移至此類用途的風險。&lt;/p&gt; 
&lt;p&gt;英偉達 15 日交易日股價報收 112.2 美元/股，小幅上漲 1.35%。此消息公佈後，股價盤後大跌 6.3%。英偉達主要生產支持 AI 大模型訓練及推理所需要的 GPU 加速計算處理器，H20 是公司為應對美國對華高性能 AI 芯片出口禁令推出的特供版產品。&lt;/p&gt; 
&lt;p&gt;2022 年 9 月，在旗下多款先進 AI 芯片 GPU 產品 A100 與 H100、A800 與 H800 相繼被禁後，英偉開發了降低性能配置的 H20 芯片，旨在符合美國出口管制的性能紅線，同時滿足中國市場的需求。&lt;/p&gt; 
&lt;p&gt;H20 採用了與 H100 相同的上一代 Hopper 架構，算力性能據稱只有後者的六分之一左右，同時配置了 HBM3E 高帶寬內存。根據美國政府最新針對其的出口管制要求，此次不只 H20 製成品，H20 所涉及的高帶寬內存、NVlink 通信互連或其他相關技術方案都需要審查。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344925</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344925</guid>
            <pubDate>Sun, 13 Apr 2025 08:16:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Anubis —— 阻止 AI 爬蟲</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                            &lt;p&gt;Anubis 使用 sha256 工作量證明挑戰來衡量你的連接「靈魂」，以保護上游資源免受爬蟲機器人的侵害。安裝和使用此工具可能會導致你的網站無法被某些搜索引擎索引。&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;大多數情況下，不需要此功能，使用 Cloudflare 保護特定來源即可。但是，如果你無法或不願使用 Cloudflare，Anubis 可以為你提供幫助。&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;便於使用&lt;/strong&gt;&amp;nbsp;Anubis 安裝簡單、重量輕，並且有助於解決最棘手的問題。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;輕便的&lt;/strong&gt;&amp;nbsp;Anubis 高效且儘可能輕便，可以阻止互聯網上最危險的機器人，並輕鬆保護你在線託管的內容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多線程&lt;/strong&gt;&amp;nbsp;Anubis 使用多線程工作量證明檢查來確保用戶瀏覽器是最新的並支持現代標準。&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/anubis</link>
            <guid isPermaLink="false">https://www.oschina.net/p/anubis</guid>
            <pubDate>Sun, 13 Apr 2025 08:13:00 GMT</pubDate>
        </item>
        <item>
            <title>谷歌官宣：未來全球谷歌搜索流量均將重定向至 Google.com 主域名</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fsearch%2Fcountry-code-top-level-domains%2F&quot; target=&quot;_blank&quot;&gt;谷歌宣佈了一項重大變革&lt;/a&gt;&lt;/u&gt;，如果用戶嘗試通過國家代碼頂級域名 (ccTLD)（例如 Google.co.uk 或 Google.com.br ）訪問 Google，他們將被重定向到 Google.com。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/154434_Aj1l_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;過去，這些不同的域名曾幫助谷歌實現搜索結果的本地化，但由於谷歌能夠確定用戶的位置，這些 ccTLD 已不再是必需的。&lt;/p&gt; 
&lt;p&gt;需要指出的是，谷歌尚未完全淘汰這些 URL，只是會把這些 URL 重定向到 Google.com，這些域名本身不太可能完全被淘汰，因此使用這些地址的書籤應該仍然可以正常使用。&lt;/p&gt; 
&lt;p&gt;大型科技巨頭似乎總是會因為這樣或那樣的原因與世界各地的政府發生衝突。這家搜索巨頭表示，即使將重定向至 Google.com，也不會改變其根據運營所在國法律所承擔的義務。&lt;/p&gt; 
&lt;p&gt;隨着這項變更推廣到更多用戶，您將在未來幾個月內開始注意到重定向到 Google.com。該公司警告稱，在此過程中，您可能會被提示重新輸入部分搜索偏好設置。但並未提及需要提供哪些偏好設置。&lt;/p&gt; 
&lt;p&gt;這一變化相當微妙，&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fsearch%2Fmaking-search-results-more-local-and-relevant%2F&quot; target=&quot;_blank&quot;&gt;自 2017 年以來&lt;/a&gt;，用戶已經可以訪問 Google.com 並從搜索中獲得本地結果，但絕大多數用戶不太可能注意到這一變化。隨着移動端的轉變，如今許多搜索也來自 Android 上的 Google 應用，在這種情況下，您甚至看不到 URL 欄。&lt;/p&gt; 
&lt;p&gt;雖然這一變化相當顯著，但大多數讀者無需考慮。只需訪問您通常用於訪問 Google 的 URL 即可跳轉到 Google.com，且仍然可以獲得本地搜索結果。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344914/google-search-to-redirect-its-country-level-tlds-to-google-com</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344914/google-search-to-redirect-its-country-level-tlds-to-google-com</guid>
            <pubDate>Sun, 13 Apr 2025 07:45:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>這是人類能想出來的 Python 包？</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                            &lt;p&gt;TARIFF 是一個獨特的 Python 包，它允許你對 Python 包徵收 import 關稅。通過這個工具，可以讓外部導入變得更加昂貴，推動代碼庫中的經濟效益。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The GREATEST, most TREMENDOUS Python package that makes importing great again！&lt;/p&gt;

&lt;p&gt;最強、最令人震撼的 Python 包！讓導入再次偉大！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;img height=&quot;702&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/145722_gY0L_3820517.png&quot; width=&quot;1256&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/h3&gt;

&lt;h3&gt;安裝&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-shell&quot;&gt;pip install tariff
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;使用方法&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;首先，導入 &lt;code&gt;tariff&lt;/code&gt; 模塊。&lt;/li&gt;
&lt;li&gt;設置你的關稅率（包名：百分比）。&lt;/li&gt;
&lt;li&gt;導入你想要應用關稅的包。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;示例代碼：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;import tariff

# 設置關稅率（包名：百分比）
tariff.set({
    &quot;numpy&quot;: 50,  # numpy 的關稅為 50%
    &quot;pandas&quot;: 200,  # pandas 的關稅為 200%
    &quot;requests&quot;: 150  # requests 的關稅為 150%
})

# 現在當你導入這些包時，它們會被徵收關稅！
import numpy  # 這將使 numpy 變慢 50% 
import pandas  # 這將使 pandas 變慢 200% 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;工作原理&lt;/h3&gt;

&lt;p&gt;當你導入一個有關稅的包時：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;TARIFF 測量原始導入所需的時間。&lt;/li&gt;
&lt;li&gt;根據你的關稅百分比，TARIFF 使導入時間更長。&lt;/li&gt;
&lt;li&gt;TARIFF 通過一條驚人的消息宣佈關稅。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;示例輸出&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot;&gt;JUST IMPOSED a 50% TARIFF on numpy! Original import took 45000 us, now takes 67500 us. American packages are WINNING AGAIN! #MIPA
剛剛對 numpy 徵收了 50% 的關稅！原始導入耗時 45000 微秒，現在耗時 67500 微秒。美國的包再次獲勝！#MIPA
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;這是一個惡搞包。請自行承擔風險。讓導入再次偉大！&lt;/h3&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/hxu296_tariff</link>
            <guid isPermaLink="false">https://www.oschina.net/p/hxu296_tariff</guid>
            <pubDate>Sun, 13 Apr 2025 06:59:00 GMT</pubDate>
        </item>
        <item>
            <title>全球最快的開源 Lakehouse 引擎？直播間見！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                                                                    &lt;div&gt; 
 &lt;div&gt;
   StarRocks 是一個開源的 Lakehouse 引擎， 採用 Apache License v2.0 許可證，商業使用友好，GitHub Star 數已經超過了 9.8 K。 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt;
   在存算分離架構、物化視圖查詢加速和湖倉分析等方面，StarRocks 具備高效、穩定的性能，支持主流開放數據湖表格式，包括 Apache Hive、Apache lceberg、Apache Hudi、 Delta Lake 和 Apache Paimon，提供高效的查詢與寫入能力。 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt;
   騰訊音樂數據基建團隊曾 
  &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FuJwS6B8Q1pw5pH42dPV0ug&quot; target=&quot;_blank&quot;&gt;分享&lt;/a&gt;過，在將原有的上千節點 ClickHouse 和 Druid 集羣業務遷移至 StarRocks 存算分離後，效率不變的情況下，成本下降了 50%。 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt;
   4 月 18 日晚，鏡舟科技高級技術專家 
  &lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;單菁茹&lt;/strong&gt;&lt;/span&gt;將做客開源中國直播欄目《技術領航》，聊一聊 StarRocks 的成長之路，解析 StarRocks 技術架構以及核心功能。 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt;
   單菁茹是開源社區 StarRocks 的重要貢獻者，主要負責指導 StarRocks 的落地實踐與生態工具的開發。本次直播，她還將 
  &lt;span style=&quot;color:#2980b9&quot;&gt;基於管理工具 StarRocks Manager，演示集羣狀態監控、SQL 執行與優化、任務管理、資源管理和版本升級與維護等。&lt;/span&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;strong&gt;微信掃碼，預約直播&lt;/strong&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;img height=&quot;3033&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b8f2b5a44ee1e622f6f9548894b8923da4e.png&quot; width=&quot;900&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;本次直播得到了諸多社區或組織的大力支持，在此特別表示感謝：&lt;/strong&gt;&lt;/p&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt; 
      &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;Gitee&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
      &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;Gitee（碼雲）是開源中國於 2013 年推出的基於 Git 的代碼託管平台、企業級研發效能平台，提供中國本土化的代碼託管服務。&lt;br&gt; 目前，Gitee 已經有超過 1350 萬名開發者，累計託管超過 3600 萬個代碼倉庫，是中國境內規模最大的代碼託管平台。同時，旗下企業級 DevOps 研發效能管理平台 Gitee 企業版已服務超過 36 萬家企業。&lt;/p&gt; 
      &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;網址：&lt;a href=&quot;https://gitee.com/&quot;&gt;https://gitee.com/&lt;/a&gt;&lt;/p&gt; 
      &lt;div&gt; 
       &lt;div&gt; 
        &lt;span style=&quot;color:#2980b9&quot;&gt;&lt;strong&gt;鏡舟科技&lt;/strong&gt;&lt;/span&gt; 
       &lt;/div&gt; 
       &lt;div&gt;
         &amp;nbsp; 
       &lt;/div&gt; 
       &lt;div&gt;
         北京鏡舟科技有限公司是一家專注開源商業化的中國公司，由 StarRocks 項目核心成員於 2022 年創立。基於開源項目 StarRocks ，鏡舟打造了符合國家標準並適配國內外生態體系的企業級分析型（OLAP）數據庫，在行業適配度、場景成熟度、產品穩定性等方面有着卓越表現。作為 StarRocks 社區中國最大貢獻者，鏡舟大力參與社區推廣工作，未來也將持續與各大頭部廠商一起創造世界頂級的開源項目，為社區發展貢獻力量。 
       &lt;/div&gt; 
       &lt;div&gt;
         &amp;nbsp; 
       &lt;/div&gt; 
       &lt;div&gt;
         官網： 
        &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mirrorship.cn%2Fzh-CN%2Findex&quot; target=&quot;_blank&quot;&gt;https://www.mirrorship.cn/zh-CN/index&lt;/a&gt; 
       &lt;/div&gt; 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;hr&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;《技術領航》是開源中國 OSCHINA 推出的一檔直播欄目，旨在為&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;開源軟件、商業產品、前沿技術、知名品牌活動等各類項目&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;提供一個展示平台，每週五晚上開播&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;欄目邀請項目的創始人、核心團隊成員或資深用戶作為嘉賓，通過路演式直播分享項目的亮點和經驗，有助於提高項目的知名度，吸引更多的用戶和開發者關注。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如果你手上也有好的項目，想要跟同行交流分享，歡迎聯繫我，欄目隨時開放～&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:center&quot;&gt;&lt;img height=&quot;537&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-4dd54c1b0b817689ceefa15aa66d79cfae8.png&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   &amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3859945/blog/18175940</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3859945/blog/18175940</guid>
            <pubDate>Sun, 13 Apr 2025 06:50:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>抖音公開算法原理：通過神經網絡計算預估用戶行為、幾乎不依賴打標籤</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;4 月 16 日，據抖音集團微信公眾號，在昨日的抖音安全與信任中心開放日活動上，抖音相關業務負責人基於網站版塊，就社會關切的算法和治理問題展開介紹。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0416/141208_AOQJ_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;據介紹，抖音推薦算法核心目標是通過分析用戶的「行為」（點擊、瀏覽、喜歡、轉發、收藏等），構建個性化的推薦模型。系統會基於用戶歷史動作、對象特徵和上下文環境，採用算法模型，預測用戶可能會對什麼樣的內容產生什麼樣的行為。&lt;/p&gt; 
&lt;p&gt;抖音算法已幾乎不依賴對內容和用戶打標籤，而是通過神經網絡計算，預估用戶行為，計算用戶觀看這條內容獲得的價值總和，把排名靠前的內容推給用戶。&lt;/p&gt; 
&lt;p&gt;在抖音的實際應用中，推薦系統採取「人工 + 機器」協同的方式進行風險治理，始終有人工運營和治理體系為算法導航；多目標體系算法能主動打破「信息繭房」，為用戶帶來更豐富多元、實用可靠的推薦結果。&lt;/p&gt; 
&lt;p&gt;抖音應用的深度學習算法包括 Wide&amp;amp;Deep 模型、雙塔召回模型等。前者可解決協同過濾算法容易造成信息單一、泛化不足的問題，後者在召回環節提供更好的推薦效果。&lt;/p&gt; 
&lt;p&gt;基於人工智能機器學習和深度學習構建的推薦算法，其本質是數學模型的運算過程，只是在建立用戶行為與內容特徵之間的數學統計關聯，而非理解內容本身。抖音推薦算法的核心邏輯可以簡化為「推薦優先級公式」：綜合預測用戶行為概率×行為價值權重 = 視頻推薦優先級。&lt;/p&gt; 
&lt;p&gt;模型需要內容和用戶兩端的數據做輸入，其中主要是學習用戶行為數據。結合用戶行為和視頻本身的價值權重，推算出視頻推薦的價值分數，並將綜合得出的價值最高的視頻推送給用戶。&lt;/p&gt; 
&lt;p&gt;官方表示，抖音的價值模型希望實現內容、用戶、作者以及平台的多方價值共贏，並通過不斷調整參數，對各類價值進行加權。隨着算法的進步，抖音已經實現了「分鐘級」實時反饋更新。&lt;/p&gt; 
&lt;p&gt;抖音表示，推薦算法通過各種「目標」來預估用戶行為。推薦算法誕生之初，只關注單一或者少量的目標。隨着抖音的用戶愈發多樣化，內容風格也日益多元，平台上有了越來越多的優質中長視頻，完播率等少數目標難以滿足需求，多目標建模成為技術上的自然選擇。&lt;/p&gt; 
&lt;p&gt;抖音方面稱，已經發展出非常複雜的多目標體系，比如將收藏率納入多目標，幫助知識類內容推送給有需求的用戶；增強「收藏+復訪」「關注+追更」「打開+搜索」等組合目標，預估用戶長期行為，幫助用戶探索長期需求；設置探索類指標，幫助用戶探索可能他們自己都還沒發現的潛在需求，助力破除「信息繭房」；設置原創性目標，鼓勵優質、新穎且具有獨特價值的內容推薦。&lt;/p&gt; 
&lt;p&gt;此外，抖音集團還表示，平台治理存在於內容發佈與傳播的每一個環節，整體遵循兩個原則。一是所有在平台發佈的內容都會經過評估，流量越高的內容經過評估的次數越多，標準也越嚴格；二是「人工+機器」審核相互分工又密切配合。&lt;/p&gt; 
&lt;p&gt;一條視頻可能觸發多個治理研判節點，視頻被舉報、評論區出現集中質疑、流量激增等情況，均可能觸發「人工+機器」審核。而在任一環節，一旦內容被處置，基本都會立即停止進一步的推薦和分發。&lt;/p&gt; 
&lt;p&gt;針對社會普遍關心的、呈現聚集特徵的、反覆出現的、對用戶造成較多困擾的焦點問題，抖音成立了數個專項治理團隊，分別設置相應的治理標準、識別策略、處置手段和風險巡查能力，專注應對涉及特殊羣體、網絡暴力、AIGC 技術濫用等問題治理。&lt;/p&gt; 
&lt;p&gt;據悉，3 月 30 日，「抖音安全與信任中心」網站上線，網站面向社會首次公開抖音算法原理、社區規範、治理體系和用戶服務機制。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;相關閲讀：&lt;a href=&quot;https://www.oschina.net/news/341960&quot; target=&quot;news&quot;&gt;抖音上線「安全與信任中心」網站，首次公開推送算法&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344876</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344876</guid>
            <pubDate>Sun, 13 Apr 2025 06:12:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 成立非營利委員會</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OpenAI &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fnonprofit-commission-advisors%2F&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;成立非營利委員會，旨在為 OpenAI 的慈善事業提供諮詢。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;正如我們所説，OpenAI 的非營利機構不會消失——而這個委員會將是擴大其影響力的關鍵。該委員會的目標是幫助確保我們的非營利機構成為社區和使命驅動型組織的力量倍增器，以應對從健康和教育到公共服務和科學發現等緊迫的全球挑戰。&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img height=&quot;345&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-198107f2f83d46e7e57833277ce4c1edf3c.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該公司任命 Dolores Huerta、Monica Lozano、Robert K. Ross 和 Jack Oliver 為非營利委員會顧問，Daniel Zingale 擔任委員會召集人。聲明稱，顧問們將從社區中汲取經驗和意見，瞭解 OpenAI 的慈善事業如何能解決長期的系統性問題，同時考慮人工智能的前景和風險。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;具體包括：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;為董事會提供建議，指導透明的社區參與過程，其中包括受影響的社區和普通民眾以及非營利組織和慈善領袖。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;彙集來自健康、科學、教育和公共服務領域人士和組織的頂尖見解，其中包括 OpenAI 總部所在地加利福尼亞州的人士和組織。這些意見對於 OpenAI 構建其投資潛力巨大、有望與公司共同成長的資源的能力至關重要。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;span style=&quot;color:#000000&quot;&gt;在 90 天內向董事會提交調查結果，作為持續的社區反饋和協作過程中的一個重要里程碑。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;更多詳情可查看官方&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fnonprofit-commission-advisors%2F&quot; target=&quot;_blank&quot;&gt;公告&lt;/a&gt;。&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344863/openai-nonprofit-commission</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344863/openai-nonprofit-commission</guid>
            <pubDate>Sun, 13 Apr 2025 05:50:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>中國信通院聯合發佈軟件智能開發工具及應用圖譜</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;為梳理軟件智能開發工具產業及應用市場情況，洞察智能開發產業現狀及未來發展趨勢，中國信息通信研究院（以下簡稱「中國信通院」）與中國人工智能產業發展聯盟（AIIA）牽頭，聯閤中信、華為、百度、硅心科技、軟通動力、東軟、煤科總院，聚焦智能開發工具技術演進與產業生態，編制軟件智能開發工具及應用圖譜，並於 2025 年 4 月 9 日中國人工智能產業發展聯盟第十四次全會上共同&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FhYBpLQOwXGvwQHBGCpEqKQ&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;該圖譜一方面為工具提供方提供橫向能力對比參考，推動產品差異化創新與能力升級；另一方面為應用方構建科學選型參考框架，助力其快速匹配業務需求，加速智能開發技術在生產場景中的規模化落地應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;本次軟件智能開發工具及應用圖譜通過問卷調研、公開資料查詢、企業訪談等形式系統梳理軟件智能開發產業各領域各環節成熟的廠商、平台、機構，聚焦基礎支撐、應用工具、行業應用三大維度。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;基礎支撐維度，國內代碼大模型數量超過國外，集成開發環境（IDE）以國外 VS Code、JetBrains 等為主；應用工具維度，智能開發工具以插件形式的編碼助手為主但 AI 原生趨勢漸顯，大模型為低代碼平台、D2C 工具賦能，增強了複雜問題解決能力；行業應用維度，各行業積極融入智能化浪潮，其中金融、軟件服務業、通信、互聯網、科技等行業落地進展較快。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;708&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-760e359819cfee321fe3e2a0dbd1d8511b0.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344860</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344860</guid>
            <pubDate>Sun, 13 Apr 2025 05:41:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>清華大學將推 AI 輔修學位</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FH8qkBuP-gz10ccSCe0q5aA&quot; target=&quot;_blank&quot;&gt;據首都教育微信公眾號消息&lt;/a&gt;&lt;/u&gt;，繼今年 3 月清華大學宣佈適度擴招、成立新書院後，學校教學委員會近期審議通過了 AI 輔修學位培養方案，決定今年秋季學期起推出新的 AI 輔修學位。&lt;/p&gt; 
&lt;p&gt;清華大學表示 AI 輔修學位將面向校內有志於探索學科與 AI 交叉學生開放報名，&lt;strong&gt;設置基座模塊課程幫助學生掌握 AI 思維、AI 技術與 AI 素養，形成正確的 AI 倫理觀&lt;/strong&gt;；同時，建設「X+AI」進階項目模塊引導學生在問題導向實踐中，開展自身所在學科與 AI 深度交叉融合的創新探索。&lt;/p&gt; 
&lt;p&gt;除輔修學位外，學生還可選擇更具通識特色、修讀更為靈活的課程證書項目，掌握 AI 通識知識與素養。部分課程和項目，還將藉助 AI 賦能教學方式展開教學，用最 AI 的方式滿足更多學生的學習需求。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;681&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0416/114806_PeMc_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;▲ 清華大學 AI 成長助手「清小搭」&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;閲讀更多&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/336597&quot; target=&quot;news&quot;&gt;清華大學將擴招本科生，重點培養「AI+」人才&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/337947&quot; target=&quot;news&quot;&gt;北京中小學將從秋季開始開展 AI 通識教育&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/325162&quot; target=&quot;news&quot;&gt;武漢大學人工智能學院成立，校長擔任院長&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/296740&quot; target=&quot;news&quot;&gt;復旦大學將推至少 100 門 AI 領域課程&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/337095&quot; target=&quot;news&quot;&gt;上海交通大學發佈 AI 使用新規&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/303861&quot; target=&quot;news&quot;&gt;教育部支持高校佈局集成電路、AI 等專業&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/344843</link>
            <guid isPermaLink="false">https://www.oschina.net/news/344843</guid>
            <pubDate>Sun, 13 Apr 2025 03:48:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>