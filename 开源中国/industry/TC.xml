<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-綜合資訊</title>
        <link>https://www.oschina.net/news/industry</link>
        <atom:link href="http://8.134.148.166:30044/oschina/news/industry" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-綜合資訊 - Powered by RSSHub</description>
        <generator>RSSHub</generator>
        <webMaster>contact@rsshub.app (RSSHub)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 02 Apr 2025 02:37:30 GMT</lastBuildDate>
        <ttl>5</ttl>
        <item>
            <title>Meta AI 研究主管 Joelle Pineau 計劃辭職</title>
            <description>Meta 人工智能研究副總裁 Joelle Pineau 宣佈，她將於 5 月離職，結束她在 Meta 的職務。 Pineau 自兩年前起擔任 Meta 人工智能研究實驗室 (FAIR) 主管，領導該實驗室在人工智能領域的前沿研究。...</description>
            <link>https://www.aibase.com/zh/news/16786</link>
            <guid isPermaLink="false">https://www.aibase.com/zh/news/16786</guid>
            <pubDate>Wed, 02 Apr 2025 02:22:26 GMT</pubDate>
        </item>
        <item>
            <title>阿里將在 4 月第二週發佈新模型 Qwen3</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fn5SajAM_ZDqoMTvWK8jZuQ&quot; target=&quot;_blank&quot;&gt;根據虎嗅獨家報道&lt;/a&gt;&lt;/u&gt;，阿里即將在 2025 年 4 月第二週（&lt;span style=&quot;background-color:#ffffff; color:#3a3a3a&quot;&gt;即下週&lt;/span&gt;）發佈新模型 Qwen3，這將是阿里在 2025 年上半年最重要的模型產品。&lt;/p&gt; 
&lt;p&gt;報道稱，在 2024 年發佈 Qwen2.5 後，阿里雲內部的基礎模型團隊已經開始推動 Qwen3 相關項目。&lt;/p&gt; 
&lt;p&gt;但 2025 年初 DeepSeek 的火爆，改變了團隊的部分思路與重心。在 2024 年下半年，阿里雲基礎模型團隊對標的競品模型主要是 OpenAI 的 o1，而在 DeepSeek-R1 發佈後，DeepSeek-R1 已經成為了另一個主要對標模型。&lt;/p&gt; 
&lt;p&gt;知情人士表示，在阿里內部，基礎模型團隊最重要的考覈維度是「模型影響力」。高層希望團隊可以在業內成功塑造「最強模型」的心智。由於阿里採取模型開源策略，基於 Qwen 開源模型的衍生模型總量，被視為一個關鍵指標。截至目前，這一數據已經超過 10 萬。&lt;/p&gt; 
&lt;p&gt;而在開發者社區的歡迎度，阿里會考慮多個具體指標，比如開源模型下載量等。據釋，2024 年 Qwen 系列模型在開發者社區的下載量超過了 2 億。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342389</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342389</guid>
            <pubDate>Wed, 02 Apr 2025 02:21:26 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>AI 搜索創企 Perplexity：公司資金充裕、2028 年前無 IPO 規劃</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;AI 搜索創企 Perplexity 聯合創始人兼首席執行官 Aravind Srinivas 在 Reddit &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fperplexity_ai%2Fcomments%2F1jm2ekd%2Fmessage_from_aravind_cofounder_and_ceo_of%2F&quot; target=&quot;_blank&quot;&gt;發帖回應&lt;/a&gt;&lt;/u&gt;了網友近期對該企業狀況和產品的關切。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;5518&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3ec5a737796ef123a3daf35370e97fd9c3c.png&quot; width=&quot;1494&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;在財務方面，他表示 Perplexity 目前資金充裕，收入正處於上升軌道，沒有在 2028 年前進行 IPO 計劃；此前推出的 Auto 自動選擇模型搜索模式不是為了節約成本，而是為了讓產品更好&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;對於 Auto 模式，Aravind Srinivas 表示目前包括 Perplexity 自身在內的 AI 模型開發企業正在快速推出新的模型產品，一個一個地添加搜索模型選項是不可持續的，Auto 模式簡化了用戶的學習使用流程。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-07e1f07e2d722d7b2a07a6979e9844b1637.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Perplexity 還正在開發一種更為強大的深度研究智能體，可進行 30 分鐘乃至更長時間的思考。該企業正為此大規模重寫基礎架構，以便大規模實現這一智能體所需的人機交互、工具使用、代碼執行能力。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;閲讀更多&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/340590/perplexity-rebuilding-tiktok-in-america&quot; target=&quot;news&quot;&gt;Perplexity 欲收購 TikTok 並開源其算法&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/335658/perplexity-teases-a-web-browser-called-comet&quot; target=&quot;news&quot;&gt;AI 搜索引擎 Perplexity 將開發「代理搜索」 Web 瀏覽器 Comet&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342330/perplexity-no-ipo-before-2028</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342330/perplexity-no-ipo-before-2028</guid>
            <pubDate>Sat, 22 Mar 2025 11:44:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>MeiliSearch AI 發佈：集語義、混合搜索為一體，提供多模態能力</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;MeiliSearch 原本是一個 Rust 開發的 ElasticSearch 開源替代品，在&lt;strong&gt;開發體驗、部署難度、性能可用性&lt;/strong&gt;上，都是相當有競爭力的輕量級選擇。&lt;/p&gt; 
&lt;p&gt;MeiliSearch 近日發佈了&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.meilisearch.com%2Fblog%2Fintroducing-meilisearch-ai&quot; target=&quot;_blank&quot;&gt; MeiliSearch AI&lt;/a&gt;&lt;/u&gt;，這是 Meilisearch 的新版本，具有以下特點：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;語義搜索&lt;/strong&gt;&lt;/strong&gt;：不僅匹配關鍵詞，還能理解搜索意圖。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;混合搜索&lt;/strong&gt;&lt;/strong&gt;：結合全文搜索與 AI 向量搜索，提高搜索精準度。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;多模態能力&lt;/strong&gt;&lt;/strong&gt;：支持圖片搜索等多種搜索模式。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;內置向量數據庫&lt;/strong&gt;&lt;/strong&gt;：無需額外搭建向量數據庫，簡化基礎設施。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;strong&gt;優化性能&lt;/strong&gt;&lt;/strong&gt;：搜索結果極速返回，延遲低於 50 毫秒。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/182254_M83f_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;在 AI 時代，搜索早已不是簡單的「關鍵詞匹配」，而是成為了用戶獲取知識、信息、甚至創意的&lt;strong&gt;重要入口，特別是向量數據庫為如今熱火朝天的 RAG 應用提供了更多的選擇&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;Meilisearch AI 這些新特性，在當前和未來的應用中具有非常大的價值。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;全文搜索：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;優點：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;糾正拼寫錯誤&lt;/strong&gt;：例如，將「reutrn of the jedi」糾正為「return of the jedi」。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;處理精確查詢&lt;/strong&gt;：適用於輸入確切產品名稱的情況。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;處理不完整查詢&lt;/strong&gt;：如輸入「return of the j」也能找到相關結果。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;缺點：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;無法處理模糊查詢&lt;/strong&gt;：例如，輸入「拿着光劍戰鬥的人」時，可能無法找到相關結果。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;缺乏上下文理解&lt;/strong&gt;：如搜索「冬季服裝」時，可能無法全面理解用戶需求。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;向量搜索：&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;優點：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;處理模糊查詢&lt;/strong&gt;：例如，輸入「第一部上映的星球大戰電影」時，能夠找到相關結果。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;理解上下文&lt;/strong&gt;：如搜索「冬季服裝」時，能理解並提供相關的衣物推薦。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;推薦相似文檔&lt;/strong&gt;：能夠根據語義相似性推薦相關內容。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;缺點：&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;無法處理精確查詢&lt;/strong&gt;：對於需要精確匹配的查詢，向量搜索可能不夠準確。&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;資源需求較高&lt;/strong&gt;：計算和存儲向量表示需要更多的計算資源和存儲空間。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;鑑於兩者各有優缺點，&lt;strong&gt;混合搜索&lt;/strong&gt;應運而生。混合搜索結合了全文搜索的詞彙匹配能力和向量搜索的語義理解能力，提供更全面和精確的搜索體驗。&lt;/p&gt; 
&lt;p&gt;例如，Meilisearch 的混合搜索功能允許開發者通過統一的 API 實現這一結合。在 Meilisearch 中，您可以通過設置&amp;nbsp;&lt;code&gt;hybrid&lt;/code&gt;&amp;nbsp;參數來配置混合搜索，調整&amp;nbsp;&lt;code&gt;semanticRatio&lt;/code&gt;&amp;nbsp;的值，以平衡全文搜索和向量搜索的比重，從而優化搜索結果的相關性和精確度。&lt;/p&gt; 
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;// Hybrid search with Meilisearch

const results = await client.multiSearch({
queries: [{ 
indexUid: &#39;movies&#39;, 
q: &#39;batman&#39;,
hybrid: { embedder: &#39;default&#39;, semanticRatio: 0.5 }
}]
})&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;通過結合兩種搜索方法的優勢，混合搜索為用戶提供了更智能、更高效的搜索體驗。&lt;/p&gt; 
&lt;p&gt;關於向量數據庫，MeiliSearch 專門寫了一篇博客進行介紹：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.meilisearch.com%2Fblog%2Fwhat-are-vector-embeddings&quot; target=&quot;_blank&quot;&gt;https://www.meilisearch.com/blog/what-are-vector-embeddings&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;相關文檔：&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.meilisearch.com%2Fdocs%2Flearn%2Fai_powered_search%2Fgetting_started_with_ai_search%23getting-started-with-ai-powered-search&quot; target=&quot;_blank&quot;&gt;https://www.meilisearch.com/docs/learn/ai_powered_search/getting_started_with_ai_search#getting-started-with-ai-powered-search&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.meilisearch.com%2Fblog%2Ffull-text-search-vs-vector-search&quot; target=&quot;_blank&quot;&gt;https://www.meilisearch.com/blog/full-text-search-vs-vector-search&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342317/meilisearch-ai</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342317/meilisearch-ai</guid>
            <pubDate>Sat, 22 Mar 2025 10:27:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>黑莓手機有望迴歸：搭載 Android 15、支持 AI</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Reddit 上的一篇帖子&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fblackberry%2Fcomments%2F1jmalqp%2Fcomment%2Fmkgfbpi%2F&quot; target=&quot;_blank&quot;&gt;透露&lt;/a&gt;&lt;/u&gt;，一家英國的初創公司正悄悄努力復活 Blackberry Classic 及 Onward Mobility 未完成的產品。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-df07f63db4adb240ebafad1ec113d909b4f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Reddit 用戶 u/coldheartedsigma 在黑莓 subreddit 分享了這一消息，但由於簽署了保密協議，未能透露具體的品牌名稱或展示完整設計。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;帖子提到，新設備將具備 5G、AMOLED 顯示屏、12GB RAM 和 256GB 或 512GB 存儲空間等高端配置。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;據稱，新版黑莓將運行 Android 15 系統，並支持一定程度的生成式 AI 技術，同時配備電容式鍵盤。&lt;/p&gt; 
&lt;p&gt;此外，還有一款基於 QWERTY 鍵盤的新設備正在規劃中，該初創公司正與黑莓洽談專利獨家許可事宜。&lt;/p&gt; 
&lt;p&gt;雖然 u/coldheartedsigma 分享了一張圖片，但幾乎無法辨認任何有用信息。&lt;strong&gt;從模糊的圖像中只能勉強看出「Blackberry Patents」、「QWERTY」和「The world&#39;s first」這幾個詞。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e7b1756db87a99da9db420f8d3d4fa31820.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;對於那些期待黑莓迴歸的人來説，這家初創公司即使成功開發出類似黑莓的設備，也可能不會使用黑莓的名字。&lt;/p&gt; 
&lt;p&gt;因為黑莓已退出智能手機市場，所以這家公司如果真的推出產品，那也只是一款外觀相似的手機，而非真正意義上的「黑莓」手機。不過，這也給懷念經典 QWERTY 鍵盤手機的用戶帶來了一絲希望。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342306/reddit-says-blackberry-is-back</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342306/reddit-says-blackberry-is-back</guid>
            <pubDate>Sat, 22 Mar 2025 09:55:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>AI 時代軟件供應鏈面臨重大安全危機：機密泄露激增 64%</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;JFrog 公司近日發佈了《2025 年軟件供應鏈現狀報告》，揭示了在人工智能（AI）迅速發展的背景下，軟件供應鏈所面臨的嚴峻安全挑戰。根據該報告，研究團隊通過對 1400 多名專業人士的調研，以及來自 7000 多家客戶的數據分析，勾勒出了一幅令人為之擔憂的安全圖景。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;報告指出，過去一年中，軟件供應鏈的安全漏洞急劇增加，其中 「祕密」 或機密信息的曝光案例同比增長了 64%，總計達到了驚人的 25229 例。這一數據表明，隨着企業對機器學習（ML）模型的依賴加深，安全風險也在不斷上升。儘管 94% 的公司表示使用認證清單來管理 ML 模型，但其中 37% 的公司仍依賴手動方式進行驗證，顯然這加大了安全隱患。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;329&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-099c553624560d1a8503e298c286617a7f9.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;與此同時，2024 年新增的安全漏洞（CVE）數量也高達 33000 個，相比 2023 年增加了 27%。令人擔憂的是，只有 12% 的 CVE 被證實真的具有 「嚴重」 級別，這或許反映出評分系統存在 「膨脹」 現象，可能導致開發者面臨不必要的修復壓力和工作疲憊。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;JFrog 的首席技術官 Yoav Landman 指出，儘管許多組織在積極採用公共 ML 模型推動創新，但缺乏自動化的工具鏈和治理流程使得安全管理愈加複雜。他呼籲，企業在快速發展的 AI 環境中，應加速自動化轉型，以確保在提升創新潛力的同時，也能保障軟件的安全性。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;整體來看，當前的軟件供應鏈安全問題不僅是技術上的挑戰，更是企業管理與運營方式的考驗。在 AI 時代，建立更為嚴密的安全防護措施，已經成為各大企業亟需面對的任務。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342305</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342305</guid>
            <pubDate>Sat, 22 Mar 2025 09:54:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>亞馬遜發佈可控制 Web 瀏覽器的 AI 智能體 Nova Act</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;亞馬遜發佈了 Nova Act，這是一款通用 AI 代理，可以控制網絡瀏覽器並獨立執行一些簡單的操作。除了新的代理 AI 模型外，亞馬遜還發布了 Nova Act SDK，這是一個工具包，允許開發人員使用 Nova Act 構建代理原型。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e2681b71429ea88e9c90005a9abadc4007f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Nova Act 由亞馬遜新近在舊金山開設的 AGI 實驗室開發，還將為該公司即將推出的 Alexa+ 升級版提供關鍵功能，Alexa+ 是亞馬遜廣受歡迎的語音助手的生成式 AI 增強版。不過，從今天開始提供的 Nova Act 版本略顯遜色。亞馬遜稱其為研究預覽版。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d1adc5835a26d72e30965641b814c1462f0.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;開發人員可以通過新網站 nova.amazon.com 訪問 Nova Act 工具包，該網站也是亞馬遜各種 Nova 基礎模型的展示。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2f6e472c5dea52938cb18c4e2cde8f294d4.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Nova Act 是亞馬遜試圖利用自己的通用人工智能代理技術與 OpenAI 的 Operator 和 Anthropic 的 Computer Use 競爭的嘗試。幾家領先的科技公司認為，能夠為用戶導航網絡的人工智能代理將使當今的人工智能聊天機器人更加有用。&lt;/p&gt; 
&lt;p&gt;亞馬遜可能不是第一個開發這種代理技術的公司，但通過 Alexa+，它的覆蓋範圍可能是最廣泛的。&lt;/p&gt; 
&lt;p&gt;亞馬遜表示，使用 Nova Act SDK 進行開發的開發人員應該能夠代表用戶自動執行基本操作，例如從 Sweetgreen 訂購沙拉或預訂晚餐。藉助 Nova Act 工具包，開發人員可以整合工具，讓 AI 代理瀏覽網頁、填寫表格或在日曆上選擇日期。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e7474d0e9288f2459b2a8abe46b37bc9287.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;亞馬遜聲稱，Nova Act 在公司內部的幾項測試中表現優於 OpenAI 和 Anthropic 的代理。例如，在衡量 AI 代理如何與屏幕上的文本交互的 ScreenSpot Web Text 中，Nova Act 得分為 94%，優於 OpenAI 的 CUA（得分為 88%）和 Anthropic 的 Claude 3.7 Sonnet（90%）。&lt;/p&gt; 
&lt;p&gt;不過，亞馬遜並沒有使用更常見的代理評估（例如 WebVoyager）來對 Nova Act 進行基準測試。&lt;/p&gt; 
&lt;p&gt;Nova Act 是亞馬遜上述 AGI 實驗室推出的首款公開產品，該項目由前 OpenAI 研究員 David Luan 和 Pieter Abbeel 共同領導。兩人之前都創立過自己的初創公司——Luan 創辦了 Adept，而 Abbeel 共同創辦了 Covariant——去年亞馬遜聘請他們來領導其 AI 代理工作。&lt;/p&gt; 
&lt;p&gt;雖然 AGI 實驗室開發能夠訂購 SweetGreen 的 AI 代理似乎有些奇怪，但 Luan 認為代理是創建超級智能 AI 系統的關鍵一步。Luan 將 AGI 定義為「一種能夠幫助您完成人類在計算機上所做的一切的 AI 系統」。&lt;/p&gt; 
&lt;p&gt;Luan 表示，他的團隊設計了 Nova Act SDK，以可靠地自動執行簡短的任務，併為開發人員提供工具，讓他們能夠精確定義何時需要人工幹預代理工作流程。他希望，這將使開發人員能夠創建更可靠的代理應用程序，儘管不一定是完全自主的應用程序。&lt;/p&gt; 
&lt;p&gt;亞馬遜在競爭激烈的市場中推出了首款通用人工智能代理，但這是該公司寄予厚望的一項關鍵技術。Nova Act 的早期測試可以讓人們一窺拖延已久的 Alexa+ 的一些功能，這對亞馬遜的人工智能努力來説是一個成敗攸關的時刻。&lt;/p&gt; 
&lt;p&gt;OpenAI、Google 和 Anthropic 的早期人工智能代理的主要問題是它們在不同領域的可靠性。在 TechCrunch 的測試中，這些系統速度很慢，難以長時間獨立運行，而且容易犯人類不會犯的錯誤。我們很快就會看到亞馬遜是否破解了密碼——或者它的代理是否也存在困擾競爭對手的同樣缺陷。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關鏈接&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.aboutamazon.com%2Fnews%2Finnovation-at-amazon%2Famazon-nova-website-sdk%E3%80%81https%3A%2F%2Fgithub.com%2Faws%2Fnova-act&quot; target=&quot;_blank&quot;&gt;https://www.aboutamazon.com/news/innovation-at-amazon/amazon-nova-website-sdk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.aboutamazon.com%2Fnews%2Finnovation-at-amazon%2Famazon-nova-website-sdk%E3%80%81https%3A%2F%2Fgithub.com%2Faws%2Fnova-act&quot; target=&quot;_blank&quot;&gt;https://github.com/aws/nova-act&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342304/amazon-nova-website-sdk</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342304/amazon-nova-website-sdk</guid>
            <pubDate>Sat, 22 Mar 2025 09:39:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>模力方舟 Moark-M1 震撼發佈：吊打全球大模型、每秒數萬 Token、速度碾壓閃電</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;今天，模力方舟懷着「嚴謹且真誠」的態度，向全球代碼界宣佈一項革命性突破 ——&lt;code&gt;Moark-M1&lt;/code&gt;，通過獨創的&amp;nbsp;&lt;code&gt;FishNet 神經融合引擎（FishNet Neuro-Fusion Engine, FNFE）&lt;/code&gt;，&lt;strong&gt;實現了「推理速度快過閃電、訓練成本低於一杯奶茶、腹有笑話氣自華」的不可能三角！&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;524&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/172335_9Xe6_2720166.png&quot; width=&quot;1080&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;核心技術：FNFE&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Moark-M1&lt;/code&gt;的&lt;code&gt;FishNet&lt;/code&gt;核心理念源於對自然界最高效、最複雜系統之一——&lt;strong&gt;海洋生態系統&lt;/strong&gt;，特別是魚羣集體智能行為模式的深刻洞察。&lt;/p&gt; 
&lt;p&gt;我們不再侷限於傳統的硅基計算思路，而是開創性地將仿生神經形態學與流體動力學計算相結合，構建了一個前所未有的計算架構：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;參數摺疊黑魔法&lt;/strong&gt;：按需激活必要神經元，推理時內存佔用直降 99%，僅需 1 核 CPU+512MB 內存即可運行！&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;分佈式羣體智能核心&lt;/strong&gt;：模擬魚羣的實時協同決策機制，FNFE 擁有數以億計的微型「神經元節點」，能夠像魚羣一樣瞬時同步、動態重組，實現對超大規模複雜數據流的自適應並行處理。其處理效率，我們內部戲稱為「Peta-Fins/s」（每秒千萬億次「鰭」算力）。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;量子級並行推理技術&lt;/strong&gt;：每個神經元同時處理 8 個浮點運算，速度快到天際！&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;六大維度碾壓現有模型&lt;/h2&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/172407_MOjW_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h4&gt;成本：窮到只剩才華&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;本模型從 0 到 1，總成本僅需 20 元，約等於競品模型的 0.0001%&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;單輪對話消耗僅相當於一口呼吸的能量（實驗室溫 25℃，實驗人身高 175CM，體重 70KG）&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;速度：閃電般的思維過程&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;文本生成速度突破達&amp;nbsp;&lt;strong&gt;23333 token/s&lt;/strong&gt;，眨個眼就好辣~&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;既有思考又有結果，秒出秒看！&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;穩定：比磐石更可靠&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;獨創永動機對話協議，基於 M/M/1 隊列模型優化，永遠都會回應你的請求！&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;任何設備都可以跑，模型本體智能自我複製很多份，根本掛不掉！&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;帥氣：顏值擔當&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;你看我的標，多好看~&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;你看我的名字，多好聽~&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;笑話：「魚」樂精神&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;本模型的任何回覆都是富有笑話的！&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;莫怪本模型太幽默，只因「訓練數據」就如此~&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;愚人節：氣氛烘托組&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;本模型守口如瓶，拒不承認是愚人節的產物，就算你祝它&lt;strong&gt;愚人節快樂&lt;/strong&gt;，它也不會承認的&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;成功破解本模型愚人節彩蛋者，將獲得 Moark 官方認證的「AI 詐騙大師」稱號&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/172421_229q_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;適配超多國產算力&lt;/h2&gt; 
&lt;p&gt;此外，&lt;code&gt;天數智芯&lt;/code&gt;、&lt;code&gt;沐曦&lt;/code&gt;、&lt;code&gt;昇騰&lt;/code&gt;、&lt;code&gt;曙光智算&lt;/code&gt;、&lt;code&gt;無問芯穹&lt;/code&gt;五家國產算力廠商通過與模力方舟團隊連夜的通力合作，挖掘出了國產芯片的超強潛力，將這個史詩級模型以 100% 的性能順利部署，完成了硬件適配工作。現在開發者可以使用本土算力享受&lt;code&gt;Moark-M1&lt;/code&gt;帶來的超爽體驗！&lt;/p&gt; 
&lt;h2&gt;立即體驗&lt;/h2&gt; 
&lt;p&gt;即日起，&lt;code&gt;Moark-M1&lt;/code&gt;開啓免費體驗：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/172433_wpIH_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;直接開啓你的體驗吧！&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://ai.gitee.com/serverless-api?model=moark-m1&quot; target=&quot;_blank&quot;&gt;https://ai.gitee.com/serverless-api?model=moark-m1&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342297</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342297</guid>
            <pubDate>Sat, 22 Mar 2025 09:25:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Higress 開源 Remote MCP Server 託管方案，並將上線 MCP 市場</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;導讀：MCP Server 的實施存在着諸多挑戰，特別是在認證授權、服務可靠性和可觀測性方面，Higress 作為 AI 原生的 API 網關，提供了完整的開源 MCP Server 託管解決方案，實現存量 API 到 MCP 的協議轉換。即將上線的 MCP 市場，將大幅降低開發者構建 MCP Server 的時間和人力成本。&lt;/p&gt; 
&lt;h1&gt;從事實標準走向真正標準&lt;/h1&gt; 
&lt;p&gt;MCP（Model Context Protocol）協議的生態發展正以前所未有的速度推進。近期，兩大關鍵事件標誌着 MCP 已從事實標準邁向行業標準：一方面，OpenAI 正式宣佈跟進 Anthropic 的 MCP 協議，另一方面，Anthropic 發佈了新版本 MCP 協議，在 Remote MCP Server 場景下實現了顯著改進。&lt;/p&gt; 
&lt;p&gt;OpenAI CEO Sam Altman 在社交媒體上確認，OpenAI 將在旗下產品（包括 ChatGPT 桌面應用）中集成 Anthropic 的 MCP 協議。Altman 表示：&quot;MCP 的市場反響很好，我們也很高興能在自家產品中支持這項協議。目前此協議已經在 Agents SDK 中開放，對於 ChatGPT 桌面版應用以及 Responses API 的支持也即將推出！&quot;這一舉措意味着開發者可以更輕鬆地構建能調用實時數據的智能助手，如企業級聊天機器人或自動化工作流。&lt;/p&gt; 
&lt;p&gt;與此同時，Anthropic 於 2025 年 3 月 26 日發佈了 MCP 協議的全新修訂版本。此次更新的核心亮點是 Streamable HTTP 傳輸機制，它不僅繼承了 HTTP+SSE 的實時消息傳輸能力，還通過一系列優化使得連接更加穩定、數據傳輸更具彈性。新版協議採用單一 MCP 端點同時支持 HTTP POST 和 GET 請求，通過強制使用 Mcp-Session-Id 頭實現會話管理，並支持批量請求、響應和通知，以及 SSE 流的可恢復性。&lt;/p&gt; 
&lt;p&gt;這兩大事件的疊加效應正在加速 MCP 生態的繁榮發展。據統計，截至 2025 年 2 月，已有超過 1000 個社區構建的 MCP Server 可用。隨着 OpenAI 的加入，MCP 協議有望成為連接 AI 模型與外部世界的通用標準，就像 USB、HTTP 或 ODBC 在各自領域中的地位一樣。&lt;/p&gt; 
&lt;h1&gt;MCP Server 的應用場景&lt;/h1&gt; 
&lt;p&gt;MCP Server 正在改變 AI 應用的能力邊界，讓 AI 從單純的對話機器變成能夠理解用戶需求並幫助完成實際任務的智能助手。以下是 MCP Server 在不同領域的典型應用場景：&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;智能辦公場景&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在企業辦公環境中，MCP Server 可以連接各種內部系統，如郵件服務器、日曆、文檔管理系統等，使 AI 助手能夠：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;會議管理&lt;/strong&gt;：自動記錄會議內容，生成會議紀要，並根據討論創建待辦事項&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;郵件處理&lt;/strong&gt;：分類重要郵件，起草回覆，設置提醒&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;文檔協作&lt;/strong&gt;：在團隊文檔中查找信息，提供編輯建議，跟蹤變更&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;例如，一位經理可以要求 AI 助手：&quot;整理上週所有銷售會議的要點，並創建一個行動項目清單。&quot;AI 助手通過 MCP Server 訪問會議記錄系統和項目管理工具，自動完成這一任務。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;物聯網 (IoT) 集成&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;在智能家居和工業物聯網環境中，MCP Server 可以連接各種智能設備和傳感器，實現：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;設備狀態監控&lt;/strong&gt;：實時跟蹤設備運行狀況，預測維護需求&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;跨設備協同&lt;/strong&gt;：協調多個設備共同完成複雜任務&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;環境優化&lt;/strong&gt;：根據用戶偏好和使用模式自動調整環境參數&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;用戶可以要求：&quot;當我明天早上 7 點起牀時，提前 20 分鐘開啓咖啡機，並將客廳溫度調整到 22 度。&quot;AI 助手通過 MCP Server 與智能家居系統通信，安排這些任務。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;開發者工具集成&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;軟件開發團隊可以利用 MCP Server 連接代碼倉庫、CI/CD 管道和項目管理工具，提升開發效率：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代碼輔助&lt;/strong&gt;：根據項目上下文生成代碼，提供重構建議&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;自動化測試&lt;/strong&gt;：生成測試用例，執行測試並分析結果&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;項目管理&lt;/strong&gt;：跟蹤任務進度，分配資源，預測交付時間&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;開發者可以要求：&quot;分析我們的代碼庫，找出所有未處理的異常情況，並提供修復建議。&quot;AI 助手通過 MCP Server 訪問代碼倉庫，執行靜態分析，並生成詳細報告。&lt;/p&gt; 
&lt;h1&gt;Local MCP Server 與 Remote MCP Server&lt;/h1&gt; 
&lt;p&gt;隨着 MCP 生態的發展，從 Local MCP Server 向 Remote MCP Server 的演進已成為一種趨勢。為了更好地理解這一轉變，我們需要先明確這兩種 MCP Server 的概念和區別。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Local MCP Server 與 Remote MCP Server 的概念&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Local MCP Server&lt;/strong&gt;是指在用戶本地設備上運行的 MCP 服務器。在這種模式下， MCP 客戶端（如 Claude Desktop 或 Cursor）通過本地進程通信（stdin/stdout）與 MCP 服務器交互，服務器再連接到互聯網上的各種 API 和服務。這種架構簡單直接，適合個人開發者使用，但存在一些侷限性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-b669fca68f805881b21edff7ab16c4978ce.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Remote MCP Server&lt;/strong&gt; 則是部署在雲端的 MCP 服務器，用戶可以通過互聯網訪問。在這種模式下，MCP 客戶端可以是更廣泛的網頁應用或移動應用，它們通過 HTTP 協議與遠程 MCP 服務器通信。Remote MCP Server 通常集成了認證授權、狀態管理、數據庫訪問等企業級功能，能夠為多用戶提供服務。&lt;/p&gt; 
&lt;p&gt;這種轉變解決了 Local MCP Server 在企業環境中的諸多侷限性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-c4f19e9ecf3a41899580b83f715ffb78e8b.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Local MCP Server 的侷限&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Local MCP Server 雖然簡單易用，但在企業級應用中面臨諸多挑戰：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;本地環境依賴&lt;/strong&gt;：對用戶本地環境有依賴，比如需要安裝 python 或 docker 等執行環境來運行 MCP Server，對非技術用戶不友好&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全風險&lt;/strong&gt;：企業不可能將敏感數據庫憑證、API 密鑰或其他關鍵訪問令牌配置給每個員工的本地環境。這不僅違反最小權限原則，還大大增加了憑證泄露的風險。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;一致性問題&lt;/strong&gt;：當多個用戶需要訪問相同的企業資源時，難以保證配置和權限的一致性，容易導致數據不一致或權限混亂。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;維護成本&lt;/strong&gt;：為每個用戶設備部署和維護 MCP Server 需要大量 IT 資源，版本更新、安全補丁和配置變更都需要在每台設備上單獨執行。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;Remote MCP Server 的優勢&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Remote MCP Server 通過集中化部署和管理，解決了上述問題：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;拓寬使用場景&lt;/strong&gt;：非技術用戶可以通過網頁或移動應用等，隨時隨地通過互聯網使用 MCP 能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;集中化安全管控&lt;/strong&gt;：企業可以在遠程服務器上實施嚴格的訪問控制、加密和審計機制，確保敏感憑證的安全。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;統一權限管理&lt;/strong&gt;：通過集中化的身份驗證和授權系統，企業可以精確控制每個用戶對不同資源的訪問權限。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;簡化部署與維護&lt;/strong&gt;：只需維護中央服務器，大大降低了運維成本和複雜性。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Higress 開源 Remote MCP Server 託管方案&lt;/h1&gt; 
&lt;p&gt;雖然遠程 MCP Server 具有諸多優勢，但其實施也帶來了新的挑戰，特別是在認證授權、服務可靠性和可觀測性方面。這正是 API 網關所擅長的領域，而 Higress 作為 AI 原生的 API 網關，提供了完整的開源 MCP Server 託管解決方案：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-62f24422a55239096009a36407979f650d1.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;該方案已經更新到 Anthropic 官方的 MCP Server 項目文檔中，詳情可以瞭解：&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmodelcontextprotocol%2Fservers%3Ftab%3Dreadme-ov-file%23for-servers&quot; target=&quot;_blank&quot;&gt;https://github.com/modelcontextprotocol/servers?tab=readme-ov-file#for-servers&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Higress 的 MCP Server 託管方案採用了分層架構設計，為 AI Agent 提供了完整的服務訪問能力。在最上層，各種 AI Agent（如 Claude、Cursor、Cline 等）通過標準的 MCP 協議與 Higress 進行交互。Higress 內部實現了完整的安全與管控層，包括 MCP 會話保持、OAuth2 認證、審計日誌、速率限制和 MCP 路由等核心功能。&lt;/p&gt; 
&lt;p&gt;在服務層面，Higress 支持 3 種 MCP Server 接入方式：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;通過 Wasm 插件在 Higress 內部實現的內置 MCP Server，適用於對接現有 SaaS API 生態提供 MCP 能力&lt;/li&gt; 
 &lt;li&gt;直接轉發給外部已經支持 MCP 協議的服務，適用於對接已有的外部 MCP 能力&lt;/li&gt; 
 &lt;li&gt;通過服務註冊中心（如 Nacos）動態發現外部 MCP Server，並且可以通過 Nacos 配置中心的能力動態更新 MCP Server 的工具定義，適用於企業將傳統業務 API 升級為 MCP 能力&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;這種靈活的架構設計使得企業可以根據自身需求選擇最適合的部署方式，既可以享受 Higress 提供的一站式託管服務，也可以保持現有 MCP Server 的獨立性。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;API 網關能力與 MCP 服務的天然契合&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Higress 基於 Envoy 構建，繼承了傳統 API 網關在認證、授權、限流和可觀測性方面的成熟能力，同時針對 AI 場景進行了優化。這些能力與 MCP 服務的需求高度契合：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;統一認證授權&lt;/strong&gt;：Higress 提供 OAuth2 插件，可以滿足新版 MCP 協議對認證鑑權的要求。開發者無需編寫複雜的認證代碼，只需簡單配置即可實現安全的用戶認證和權限控制。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;精細化流量控制&lt;/strong&gt;：通過 Higress 的限流插件，可以為不同用戶、不同工具設置不同的調用配額，防止資源濫用和服務過載。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;全鏈路可觀測性&lt;/strong&gt;：Higress 集成了 Prometheus 和 OTel 等開源觀測方案，提供完整的指標監控和分佈式追蹤能力，使運維團隊能夠實時監控 MCP 服務的健康狀況和性能表現。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;審計日誌&lt;/strong&gt;：記錄所有工具調用行為，滿足合規要求，同時為安全分析提供數據支持。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;基於 Wasm 的 MCP Server 擴展能力&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Higress 的一大技術亮點是支持 WebAssembly (Wasm) 插件，這為 MCP Server 提供了強大的擴展能力：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8ac99cfa39a81b31bcb60cfedc317b6e38d.webp&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過 Wasm 插件機制，開發者可以：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;快速添加新 Server&lt;/strong&gt;：使用多種語言（當前先提供了 Go 語言的 MCP Server SDK）開發 MCP Server，編譯為 Wasm 後動態加載到 Higress 中，無需重啓服務。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;安全隔離&lt;/strong&gt;：每個 Wasm 插件在獨立的沙箱中運行，即使插件崩潰也不會影響網關的穩定性。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;動態更新&lt;/strong&gt;：得益於 Envoy 對長連接的友好處理和 Wasm 插件的動態更新機制，MCP Server 邏輯可以在不中斷流量的情況下實時更新。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;協議卸載的優勢&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;目前 MCP 一共有兩個版本的協議，分別是 20241105 版本和 20250326 版本，從協議發展來看，標準的沉澱和優化速度，難以跟上迅猛發展的 MCP Server 生態。這也為 MCP 的早期採用者埋下隱患，當構建了大量 MCP Server，面對未來協議版本升級，需要進行繁重的升級改造工作。&lt;/p&gt; 
&lt;p&gt;而在 Higress 這層網關，剛好可以幫助屏蔽多個版本的協議細節。甚至實現 MCP to REST/Dubbo 等等協議轉換的能力。可以在 Higress 這層網關完成所有版本的 MCP 協議卸載。就像我們用 Higress 做為傳統的 API 網關時一樣，統一卸載 HTTP1/HTTP2/HTTP3 的客戶端協議。&lt;/p&gt; 
&lt;p&gt;目前，Higress 可以在一個接入點上同時支持 MCP 的 20241105 版本和 20250326 版本兩種協議。在協議的傳輸層上，支持目前最多 AI 工具採用的 POST+SSE 模式，以及最新的 Streamable HTTP 模式。我們預計未來隨着應用生態對實時性的要求，WebSocket 這種全雙工的雙向實時通信協議會更受青睞，而得到廣泛採用。Higress 原生支持 WebSocket，它能夠實現全雙工的雙向實時通信，而且 Higress 支持 WebSocket 配置修改後連接保持以及優雅斷開，到時，Higress 在 MCP 會話保持上的優勢將愈加凸顯。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;部署與運維優勢&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Higress 的 MCP Server Hosting 方案在部署和運維方面具有顯著優勢：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;彈性伸縮&lt;/strong&gt;：基於 Kubernetes 的自動伸縮能力，根據流量自動調整實例數量，確保服務的高可用性和資源利用效率。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;灰度發佈&lt;/strong&gt;：支持 MCP Server 的灰度發佈和 A/B 測試，降低更新風險。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;一鍵部署&lt;/strong&gt;：提供 Helm Chart，簡化部署流程，降低運維門檻。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 Higress 託管的 MCP Server 可以輕鬆處理每秒數十萬次的工具調用請求，同時保持毫秒級的響應時間，滿足企業級應用的性能需求。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;歡迎參與 Higress MCP 生態共建&lt;/h1&gt; 
&lt;p&gt;Higress 社區正在積極推動 MCP 生態的發展，計劃在 2025 年 4 月中旬在 higress.ai 上提供公開的 MCP 市場，方便用戶體驗 Remote MCP Server 的優勢。例如👇這個視頻是直接在 Cursor 上輸入一個在 Higress 部署的 MCP Server 接入點，實現對接數據庫 schema 編寫 CRUD 代碼：&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-9359af4e2ceaa51d20c32e5e87ea75e0974.gif&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;通過開放的 MCP 市場，我們可以讓用戶無需自己部署 Higress 和 MCP Server，也體驗到這樣的能力。&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;開放的 MCP 市場&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;Higress 的 MCP 市場將提供：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;豐富的 MCP Server 生態&lt;/strong&gt;：覆蓋常見的應用場景，如文檔處理、數據分析、代碼輔助等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;一鍵使用&lt;/strong&gt;：通過 Web 界面，用戶可以一鍵獲取 MCP Server 接入點，並在自己的 AI 工具中使用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;社區共享機制&lt;/strong&gt;：開發者可以將自己開發的 MCP 工具通過開源社區 Review 後，上架到市場，提供用戶使用。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;企業級 MCP 市場&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;除了開源社區版本，阿里雲 API 網關也將很快上架 MCP 市場，面向企業用戶提供更加完善的服務：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;企業級 SLA 保障&lt;/strong&gt;：提供 99.99% 的服務可用性承諾，滿足企業關鍵業務的需求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;合規認證&lt;/strong&gt;：通過多項安全合規認證，滿足金融、醫療等行業的嚴格要求。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;專家支持&lt;/strong&gt;：提供 7x24 小時技術支持和諮詢服務，幫助企業快速解決問題。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;這使得企業可以在享受 SaaS MCP 生態的同時，也構建自己內部的 MCP Server 生態。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;合作共贏&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;如果你是一家提供 SaaS 服務的企業，正在希望構建 MCP Server 從而讓用戶在 AI 場景下付費使用自己的 API，Higress 社區歡迎與你合作：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;技術支持&lt;/strong&gt;：提供 MCP Server 開發的技術指導，或者由我們開源社區幫助你構建。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;聯合推廣&lt;/strong&gt;：在 Higress 官方渠道宣傳合作伙伴的 MCP 服務。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;市場入駐&lt;/strong&gt;：幫助你的 MCP Server 在 Higress 官方的 MCP 市場中上架託管。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;通過開源的方式，Higress 社區致力於推動 MCP 生態的繁榮發展，讓更多開發者和企業能夠輕鬆構建和部署 MCP Server，釋放 AI 助手的全部潛力。&lt;/p&gt; 
&lt;p&gt;隨着 OpenAI 和 Anthropic 等行業巨頭的推動，以及 Higress 等開源項目的支持，MCP 協議正在從事實標準走向行業標準。未來，我們有理由相信，MCP 將成為連接 AI 與現實世界的關鍵橋樑，為各行各業帶來前所未有的智能化體驗。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/3874284/blog/18051447</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/18051447</guid>
            <pubDate>Sat, 22 Mar 2025 09:17:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>FFmpeg 愚人節整活：加入 DOGE 團隊，用匯編重寫美國社保系統</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;FFmpeg 團隊在 X 平台&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2FFFmpeg%2Fstatus%2F1906964753890545877&quot; target=&quot;_blank&quot;&gt;發文稱&lt;/a&gt;&lt;/u&gt;：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#d35400&quot;&gt;&lt;strong&gt;FFmpeg 很高興宣佈加入 @DOGE 團隊！ &amp;nbsp;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#d35400&quot;&gt;&lt;strong&gt;我們將用匯編語言重寫美國的社保系統，以實現儘可能高的性能。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img height=&quot;816&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/164612_9r8Y_2720166.png&quot; width=&quot;1114&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;近日，&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wired.com%2Fstory%2Fdoge-rebuild-social-security-administration-cobol-benefits%2F&quot; target=&quot;_blank&quot;&gt;據外媒 《連線》報道&lt;/a&gt;&lt;/u&gt;，馬斯克領導的美國政府效率部（DOGE）當前正在展開新一輪的技術革新，其計劃是升級美國社會保障局（SSA）的核心支付系統，將原本用 COBOL 編寫的舊代碼遷移到另一種更為現代的編程語言如 Java 上， 並希望在幾個月內完成。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/165333_ad8D_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;報道稱，截至 2016 年，SSA 的軟件系統中包含超過 6000 萬行 COBOL 代碼，並且還有數百萬行其他遺留編程語言編寫的代碼。&lt;/p&gt; 
&lt;p&gt;此外，SSA 軟件的「核心邏輯」部分也是用 COBOL 編寫的，這部分代碼負責頒發社會保障號碼、管理支付、計算受益人應獲得的總金額等關鍵任務。&lt;/p&gt; 
&lt;p&gt;對於政府機構使用的系統及軟件，其實鮮少會升級，以防影響日常業務處理，SSA 內部亦是如此。&lt;/p&gt; 
&lt;p&gt;回看 SSA 代碼庫上一次重大迭代升級還要追溯到 20 世紀 80 年代，當時該機構引入了一個名為 MADAM 的數據庫。該數據庫不僅採用 COBOL 編寫，還使用了彙編語言——莫非 FFmpeg 要來真的？&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342287</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342287</guid>
            <pubDate>Sat, 22 Mar 2025 08:53:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>清華大學開源軟件鏡像站的愚人節彩蛋</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;清華大學開源軟件鏡像站今年的愚人節彩蛋頗有意思：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;進入頁面後點擊鼠標左鍵自動進入「扔番茄」遊戲&lt;/li&gt; 
 &lt;li&gt;被番茄砸中的選項卡才會打開&lt;/li&gt; 
 &lt;li&gt;所以你希望打開的選項卡多半都不能如願，因為有「拋物線」導致的偏差&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/163742_J9WX_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;來體驗吧：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmirrors.tuna.tsinghua.edu.cn%2F&quot; target=&quot;_blank&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342283</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342283</guid>
            <pubDate>Sat, 22 Mar 2025 08:41:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>StarVector —— 用於 SVG 生成的多模態視覺語言模型</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                            &lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;StarVector 是一種用於 Scalable Vector Graphics (SVG)&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt; 生成的多模態視覺語言模型。它可用於執行 image2SVG 和 text2SVG 生成。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height=&quot;193&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/164955_PI0N_4252687.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;StarVector 使用多模態架構來處理圖像和文本。執行 Image-to-SVG&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;（或 image vectorization）時，圖像被投影到 visual tokens&lt;/span&gt;&amp;nbsp;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;中，並生成 SVG 代碼。執行 Text-to-SVG&lt;/span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f2328&quot;&gt;時，模型僅接收文本指令（不提供圖像），並創建一個新的 SVG。LLM 基於 StarCoder，利用它將編碼技能轉移到 SVG 生成。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height=&quot;242&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0324/164948_BxBV_4252687.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;

                                                                    &lt;/div&gt;
                                                                </description>
            <link>https://www.oschina.net/p/star-vector</link>
            <guid isPermaLink="false">https://www.oschina.net/p/star-vector</guid>
            <pubDate>Sat, 22 Mar 2025 08:23:00 GMT</pubDate>
        </item>
        <item>
            <title>CDN 服務商 Akamai 宣佈託管 kernel.org 核心基礎設施</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Akamai 宣佈接手了&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkernel.org%2F&quot; target=&quot;_blank&quot;&gt; kernel.org&lt;/a&gt;&lt;/u&gt;&amp;nbsp;網站的託管工作，為開源 Linux 操作系統的開發和維護提供長期穩定性。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/space/2025/0401/155844_Cw8D_2720166.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;Akamai 在&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.akamai.com%2Fnewsroom%2Fpress-release%2Fakamai-delivers-infrastructure-support-to-ensure-uninterrupted-linux-kernel-development&quot; target=&quot;_blank&quot;&gt;新聞稿&lt;/a&gt;&lt;/u&gt;中稱其與 Linux 內核組織簽署了一份多年合同，為該項目及其全球開發者團隊提供基礎設施服務。&lt;/p&gt; 
&lt;p&gt;Linux 內核非常龐大——大約有 2800 萬行代碼。自 2005 年以來，來自 1300 多家不同公司的 13500 名開發者為 Linux 內核貢獻了代碼。&lt;/p&gt; 
&lt;p&gt;此外，內核版本眾多，維護者不斷更新代碼，並將這些代碼分發給不同 Linux 發行版的開發者。現在，Akamai 向這些開發者及其用戶免費提供他們所依賴的基礎設施，支持開發者快速訪問內核源碼的 Git 環境，無論他們身在何處。&lt;/p&gt; 
&lt;p&gt;Akamai 目前託管的是 git.kernel.org 和 lore.kernel.org。在託管商 Equinix Metal 停止提供裸機服務器銷售和服務之後，kernel.org 其它部分正在遷移出去。&lt;/p&gt; 
&lt;p&gt;Akamai 是 CNCF 的金牌會員，也是 KubeCon 的白金贊助商——今年早些時候，Akamai 承諾向 CNCF 項目捐贈 100 萬美元。Akamai 開發人員為 Linux 內核做出了貢獻，使其更加安全，是多個 CNCF 託管項目的積極貢獻者，並參與了獲得 Levchin 現實世界密碼學獎的項目。&lt;/p&gt; 
&lt;p&gt;2022 年，Akamai 收購了 Linux 雲先驅 Linode，隨後在 2023 年收購了 Ondat，這是一家基於雲的存儲技術提供商，擁有 Kubernetes 原生平台，可在任何地方大規模運行有狀態應用程序。這家雲公司已通過 CNCF 認證 Kubernetes 一致性計劃的認證。其 Linode Kubernetes Engine 是一個完全託管的 K8s 容器編排引擎，用於部署和管理容器化應用程序和工作負載。&lt;/p&gt; 
&lt;p&gt;Akamai 還宣佈，它正在為最流行的 Linux 發行版之一 Alpine Linux 提供基礎設施和交付支持。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342270/akamai-delivers-infrastructure-of-kernel-org</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342270/akamai-delivers-infrastructure-of-kernel-org</guid>
            <pubDate>Sat, 22 Mar 2025 08:03:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>微軟關閉了位於上海的人工智能與物聯網實驗室</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.scmp.com%2Ftech%2Fbig-tech%2Farticle%2F3304621%2Fmicrosoft-shutters-ai-lab-shanghai-signalling-broader-pullback-china%3Fmodule%3Dchina_future_tech%26pgtype%3Dhomepage&quot; target=&quot;_blank&quot;&gt;《南華早報》報道稱&lt;/a&gt;，微軟今年早些時候關閉了位於上海張江高科技園區的物聯網和 AI 實驗室。&lt;/p&gt; 
&lt;p&gt;實地調查顯示辦公室人去樓空，logo 和辦公設備都已經清空。微軟的物聯網和 AI 實驗室於 2019 年 5 月啓用，被譽為是微軟與上海浦東區創新中心張江之間的旗艦合作，它佔地約 2,800 平方米。&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.leiphone.com%2Fcategory%2Findustrycloud%2FMYLDjAsumMyHqZcw.html&quot; target=&quot;_blank&quot;&gt;另據雷鋒網獨家報道&lt;/a&gt;&lt;/u&gt;，不久前合同臨近到期時，微軟方面表示不願再投入資金，直至近期，有傳言稱雙方合作已經終止，該實驗室已經關閉。&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;該實驗室於 2019 年 5 月，在上海張江的「網紅島」——張江人工智能島上正式啓用。彼時正值 AI 科技的熱潮，張江集團攜手一批國內外頂尖科技公司，成立了多個實驗室，其中便包括微軟-張江實驗室。&lt;/p&gt; 
&lt;p&gt;此外，該實驗室也是微軟在全球設立的 7 家實驗室中的一家。 &amp;nbsp;該實驗室首批便有 30 多家企業和初創公司入駐，運營一年多就賦能了 90 多家企業，超過 400 個項目，場景涵蓋了製造、零售、醫療、金融、城市建設等多個熱點領域，在當時是標杆性的合作案例之一。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f405a67cd9937c4f323089cb9816d03ee1b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;截至 2024 年 6 月，實驗室支持了 258 個項目，涉及近 100 家浦東企業。微軟實驗室支持的企業超過 50 家，吸引了逾 94 億元人民幣的外部投資。&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FS8JoOsywOfTcVRYjEnts2Q&quot; target=&quot;_blank&quot;&gt;張江發佈的報告顯示&lt;/a&gt;，期間實驗室取得了 139 項技術成果，培訓了近 10,000 名專業人員。微軟去年還向其亞洲研究院的員工提供了出國工作的選項。&lt;/p&gt; 
&lt;p&gt;然而在近兩年，該實驗室逐漸式微，這背後存在着國際大環境不確定性增強、AI 落地應用場景有限，以及外企在華降本增效甚至逐步撤離等複雜的綜合因素。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342266</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342266</guid>
            <pubDate>Sat, 22 Mar 2025 07:52:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>聯想發佈三大 AI 服務品牌「擎天、百應、想幫幫」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在聯想中國區 2025/2026 財年誓師大會上，聯想集團執行副總裁兼中國區總裁劉軍集中公佈了聯想 AI 服務三大品牌：聯想擎天、聯想百應與想幫幫。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;劉軍表示，此次三大品牌的發佈標誌着聯想將全面進軍 AI 服務領域，覆蓋政企、中小企業和消費客戶三大市場。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;334&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-65da6a3e4d3b3d44ec9942c8cd2435cb9e8.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據介紹，三大 AI 服務品牌中，聯想擎天、想幫幫為首次與公眾見面。前者面向政企客戶，主推智能體矩陣、xCloud 智能雲、AI 全週期服務和 ESG 四大方案服務。今年 3 月，聯想與武夷山市、宜昌市政府簽訂戰略合作，共同打造全球首批城市超級智能體，升級智慧城市到 4.0 階段。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;面向消費客戶的想幫幫，將圍繞多品牌、多設備、多場景，提供 AaaS（Agent as a service，智能體即服務）模式的服務。而針對中小企業，聯想則推出了去年 11 月已發佈的聯想百應智能體。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;聯想百應同樣採用 AaaS 模式，聚焦中小企業在 IT 運維、AI 辦公、AI 營銷等方面的核心需求，目標是成為中小企業 AI 服務領域的領導品牌。此次三大 AI 服務品牌的齊發，展現了聯想在 AI 時代的戰略佈局和強大決心。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342265</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342265</guid>
            <pubDate>Sat, 22 Mar 2025 07:48:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>自增主鍵去哪了？--- 一次開發過程中的思考</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                                                                        &lt;p&gt;作者：京東零售，王光&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前情提要：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最近新接了一個需求，需要去創建兩張表，其中有一張表需要根據業務 id 和業務類型建立唯一索引，對數據唯一性進行約束。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為涉及到業務嘛，表結構就進行縮略了&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;表結構示例如下：

&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CREATE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TABLE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;example_table&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;bigint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;20&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AUTO_INCREMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;自增主鍵&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;bigint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;20&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;業務 ID&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_type&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;tinyint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;業務類型，&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;del&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;tinyint&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;unsigned&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;0&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;刪除標識，0 表示未刪除，1 表示刪除&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;creator&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;varchar&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;50&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NOT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;創建人 PIN&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;modify_date&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;datetime&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ON&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;UPDATE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;更新時間&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;create_date&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;datetime&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CURRENT_TIMESTAMP&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;創建時間&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
     &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;PRIMARY&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 
     &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;UNIQUE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;KEY&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;uk_business_id_and_type&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_id&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;business_type&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ENGINE&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;InnoDB&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AUTO_INCREMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;DEFAULT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CHARSET&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;utf8mb4 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;COMMENT&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;示例表&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;既然表建立好，那麼就是發揮我們編碼能力的時候了...此處省略一堆編碼時間。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;編碼結束，自測結束，信心滿滿的找前端同學進行聯調。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為聯調嘛，mock 了很多同樣的 business_id 和 bussiness_type 的數據，結果到了數據庫，因為唯一索引的約束，報了一堆錯誤，插入都失敗了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;終於調整了一下 mock 數據，插入成功了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但是發生了一個比較神奇的現象&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//78bf408eae380fb0b81825c61211bced.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//338c271c292e1a1eb9649b1fbe1425b8.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主鍵不是連續自增的了~~ 中間丟失的自增主鍵去哪了??&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;關於自增主鍵&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f1f1f&quot;&gt;自增主鍵是我們&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#040c28&quot;&gt;在設計數據庫表結構時經常使用的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;主鍵生成策略&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#1f1f1f&quot;&gt;，主鍵的生成可以完全依賴數據庫,在新增數據的時候，我們只需要將主鍵設置為 null，0 或者不設置該字段，數據庫就會為我們自動生成一個主鍵值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;首先,我們要知道，自增主鍵保存在哪裏~&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;不同的引擎對於自增值的保存策略不同&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.MyISAM 引擎的自增值保存在數據文件中&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2.InnoDB 引擎的自增值，在 MySQL5.7 及之前的版本，自增值保存在內存裏，並沒有持久化。每次重啓後，第一次打開表的時候，都會去找自增值的最大值 max(id)，然後將 max(id)+步長（建表語句中的指定步長）作為這個表當前的自增值。在 MySQL8.0 版本，將自增值的變更記錄在了 redo log 中，重啓的時候依靠 redo log 恢復重啓之前的值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;瞭解了自增主鍵的保存機制，再瞭解一下主鍵這個&quot;自增&quot;邏輯~&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//e8fd21e0666df00de3f15e2102fb28d8.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;插入一條語句分配自增主鍵 id 值的流程如圖所示。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;自增主鍵不連續的情況&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;細心的小夥伴一定發現了~咦，這個 ID=聲明值的話，ID 就可以能被隨意指定了，那麼 ID 就可能存在不是自增的情況了！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;是的，這其實就是第一種自增主鍵不連續的情況。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第二種不連續的情況就是我們在聯調中遇到的問題了&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;簡單來做個測試,目前數據就像一開始的圖一樣,id 自增到了 24,下一個插入的應該是 25,那麼執行一條 sql&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;111&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//942a91e603961954b723a3052dfa45fa.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;插入成功了一條數據,主鍵是連續自增的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那麼我們模擬一條錯誤的 sql 呢 (`creator`字段指定錯類型)~：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;112&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;mock&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;果然，執行 sql 的時候報出異常：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//087aa0531188ff7876f819f8854c5c7a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;繼續執行一條正確的正常的 sql，插入結果：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//37dc344bca29c059081e3db9b5809d57.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主鍵還是連續自增的。這個發生錯誤為什麼自增主鍵還是連續的呢。我們模擬一下之前聯調遇到的情況，插入一條 sql：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;112&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;因為 id=26 的數據 buiness_id 和 bussiness_type 跟新插入的這條數據一樣，那麼肯定會因為唯一索引插入不成功，果然，執行結果如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//fb09e9f2a63d4ad434c5fa794a6115a3.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那麼，我們修改一下 sql 繼續插入呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;113&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//7537f463e7de6952f74bd8c2bc5f1071.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;主鍵發生了&quot;斷代&quot;,27 的主鍵跑丟了...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;明明都是 sql 插入的時候錯誤，為什麼結果會有差異呢，有的時候主鍵會丟失，有的時候主鍵不會丟失呢，想要弄明白這個問題，就需要先明白一下一條 sql 的執行過程：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//d05eab6fd6ae0d3e943ba03f27ca9dda.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏只是針對本文需要關注的點（相信小夥伴對這個執行過程肯定也是非常瞭解的😏）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;所以説，主鍵有沒有丟失的核心關鍵就是有沒有走到，執行引擎有沒有去分配主鍵。一旦走到了分配主鍵就不會進行回滾。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;既然一旦分配了主鍵就不會回滾，那是不是事務回滾之後主鍵也不會回滾至之前的值呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第三種就是這樣，事務回滾也會導致主鍵「丟失」：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;舉個栗子：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;into&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; example_table  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;values&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;114&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;0&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&#39;mock&#39;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;now&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//7d7550262a81f277d811e270818b05c2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;回滾這條語句。並繼續執行上面那條語句&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//480441f1e34d00af38d6e43a5f0ff92a.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;29 這個 id 就「丟失」了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;有好奇的小夥伴就會問了，問什麼 mysql-innodb 不提供一種回滾主鍵 id 的機制呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我理解的是，1、沒有必要 ；2、影響性能；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;自增主鍵鎖並不是一個事務鎖，而是每次申請完就馬上釋放，以便允許別的事務再申請。但在 MySQL5.0 版本的時候，自增鎖的範圍是語句級別。也就是説，如果一個語句申請了一個表自增鎖，這個鎖會等語句執行結束以後才釋放。MySQL5.1.22 版本引入了一個新策略，新增參數 innodb_autoinc_lock_mode，默認值是 1。 1.這個參數設置為 0：表示採用之前 MySQL5.0 版本的策略，即語句執行結束後才釋放鎖。 2.這個參數設置為 1：普通 insert 語句，自增鎖在申請之後就馬上釋放。批量插入數據的語句，自增鎖還是要等語句結束後才被釋放。 3.這個參數設置為 2：所有的申請自增主鍵的動作都是申請後就釋放鎖。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們假設一個場景主鍵 id 是可以回滾的，根據上面的自增主鍵鎖的規則。事務 A 申請了一個自增主鍵 id=29，事務 B 申請了一個自增主鍵 id=30，在申請了之後就會被釋放，如果這個時候事務 A 進行了回滾，事務 B 執行完畢，這個時候就需要將 id 回滾到 29，但是 id30 已經存在表中了。那麼肯定會需要一個類似現在的 redolog,undolog 的&quot;存儲單元&quot;去存儲主鍵 id 的分配情況，如果再有一個事務 C 過來申請主鍵 id，這個時候就會出現很多種情況去考慮，1：我要申請的主鍵 id 是否已經分配出去了。如果已經沒有還好，如果有的話，需要去找到一個允許我插入的最小的 id（這個最小的成本就會比目前直接選擇最大的 id 性能要查很多。）2：我是批量插入，我需要申請一批 id，這種情況想想就很抓馬，因為這一批次中的 id 可能存在多個已經存在的情況。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;而且就算主鍵 id 可以回滾，那麼我插入數據的順序，跟 id 的大小就存在悖論關係了，在業務層面就不能根據 id 去做一些判斷了，這也無疑增加了業務層面的複雜性。所以主鍵 id 是可以回滾是一個 ROI 極低的方案了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在上面的説到的自增主鍵的分配策略也可以想到：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;第四種不連續的情況：批量申請的主鍵 id，如果出現沒有使用完，或者批量插入出現問題導致的主鍵 id 不連續。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當然這裏説的批量插入不是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;insert into example_table values (null,111,1,0,&#39;mock&#39;,now(),now()),(null,112,1,0,&#39;mock&#39;,now(),now());&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這樣的語句，因為這種語句在 sql 解析的時候就可以明確需要插入多少條目，id 也就會直接進行分配到具體的條目。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;但是對於 insert...select 這種批量插入語句，因為大部分都是執行多表操作，所以實際操作的條數是不可確定的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在進行分配主鍵 id 的時候，會有一個策略：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;1.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;語句執行過程中，第一次申請自增 id，會分配 1 個； &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;2.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1 個用完以後，這個語句第二次申請自增 id，會分配 2 個；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;3.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2 個用完以後，還是這個語句，第三次申請自增 id，會分配 4 個；&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;4.&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;依此類推，同一個語句去申請自增 id，每次申請到的自增 id 個數都是上一次的兩倍。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;
create table `example_table_2` like `example_table`;
#使用批量插入語句，從 example_table 中讀取數據, 往 example_table_2 中插入數據
insert into example_table_2 select null, business_id, business_type, del, creator, modify_date, create_date from example_table;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這個時候的執行結果如圖:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//68ddf5dc52f04b58075eafa07c7dd343.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那麼按照預期，第一次分配 id=1,第二次分配 id 是[2,3],第三次分配 id 區間是[4,7],第四次分配區間是[8,15]，那麼執行下面語句：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;#插入一條數據，預期主鍵 id 應該是 16
insert into example_table_2  values (null,200,1,0,&#39;mock&#39;,now(),now());&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet//a834acbb4e615f5e4488152ec66c9cb7.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;果然執行結果符合預期結果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這個語句在實際業務中使用的很少，mysql 在這個語句裏面還是有很多設計的，大家可以看看官方文檔詳細的瞭解一下&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdoc%2Frefman%2F8.0%2Fen%2Finsert-select.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;https://dev.mysql.com/doc/refman/8.0/en/insert-select.html&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;還有一種情況是主鍵 id 設置的步長不為 1&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這種情況一般都是發生在表的設計初期，所以出現不自增的話也是符合預期的。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;寫在最後&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;MySQL 是作為大家都經常接觸的 DB，相信大家都會有一定的認知，自增主鍵不連續大家肯定也遇到過，這次在聯調過程中遇到這個情況，在跟別的小夥伴分享的時候，突然就想寫一篇文章，文章裏面如果有不正確或者不準確的地方也歡迎大家斧正~説實話，作為一名交易端的研發人員，業務開發任務壓力真的蠻大的，我也迷茫過，如何在這個過程中成長，珍惜我們遇到的問題，將遇到的問題記錄在冊，深追問題，你會發現有很多問題其實真的是因為我們某些知識的薄弱點造成的。然後將我們覺得值得分享的利用碎片時間整理成文章分享出來，其實這篇文章從我開始寫到到最後成稿也歷時 11 天之久，但是不管怎麼樣，只要我們從中有收穫就可以了~最後，希望大家都可以成為自己心目中的技術達人。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;To enjoy is to be young，To enjoy is to be your own goal!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
            <link>https://my.oschina.net/u/4090830/blog/18043736</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18043736</guid>
            <pubDate>Sat, 22 Mar 2025 07:35:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>達闥董事長回應「欠薪」傳聞：的確遇到困難，在戰略調整</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;近期有傳聞稱，人形機器人領域知名獨角獸企業達闥機器人正陷入危機，過去一年陸續出現欠薪，裁員狀況。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;達闥於 2015 年創立，全球總部位於上海，並在北京、成都等地設立分支機構。資料顯示，2023 年，達闥獲得超 10 億元人民幣 C 輪融資。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;272&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c9bf85394836549d71df5198f43b88e753c.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;針對上述傳聞，達闥創始人、董事長兼 CEO 黃曉慶對 21 世紀經濟報道記者表示，公司業務的確遇到很大困難，為此進行了人員縮減，同時戰略調整，聚焦人形機器人和雲端大腦等業務，目前正在積極融資，拓展業務，並努力解決前員工的「欠薪」問題。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶承認，2024 年開年，公司確實遇到很多困難，科技行業整體融資壓力越來越大，對此公司在 2024 年將發展戰略調整為聚焦人形機器人，並做了一些戰略性的優化和裁減，對北京、上海和深圳各地分公司都進行了一些減員。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「在這樣的情況下面，我們的工作也確實受到很多影響。所以你們看到的很多情況，也代表目前我們公司的員工沒有過去多了。」黃曉慶表示。他稱，公司過去員工數在最多的時候有 800 多人，現在正式的員工有 150 多人，加上顧問有 200 多人，主要分佈在北京、成都等 3 個地方，另外目前正在全面佈局建設的天津基地，已與天津津南區簽署產業投資落地協議，落地「具身機器人云腦操作系統平台」，建設「雲端機器人應用訓練場」，打造「人形機器人公版機總裝線」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶表示，「我們對前員工還是有非常密切的聯繫，我們一定會在一定時間內、在來逐步解決離職補償問題」，「現在真的就是需要時間解決，既要保證公司經營發展，又要逐步解決問題，絕大部分員工都非常理解。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;對於資金鍊斷裂，黃曉慶回應道，2024 年開年，達闥遇到很多困難。「在三年疫情期間，公司都沒有減員。我們在疫情之後遇到的融資困難，很大程度上是因為有一些融資未及時到位和銀行抽貸。當時的融資等外部環境都不太好，加上被美國實體清單後很多美元基金也無法投資，造成了我們那時候的現金流困境。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;最近幾天，產業和市場就被朱嘯虎「正批量退出人形機器人」的消息攪起軒然大波。「我認為今天的人形機器人的產業，類似於 2007 年、2008 年的智能手機產業，屬於黎明時期。並不是要退場的時候，而是要積極進場的時候。」黃曉慶直言。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在黃曉慶看來，朱嘯虎並不明白雲端機器人的概念，「他沒有想到，如果機器人裝上了雲端大腦，配置強大的 AGI 能力的智能體，加上強大的視覺模型，是我們物理世界的鏡像。我認為雲端智能機器人是達到人類智能的核心問題，如果實現了，我認為朱嘯虎會改變觀點。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶對記者透露，「2024 年儘管現金流很緊張，我們通過開拓市場也實現了 6 億元的收入，今年到 2 月底，我們待簽約和準備簽約的訂單金額也達到了 2-3 億元。這足以證明我們達闥機器人還在積極努力，正常營業，不斷進取。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;黃曉慶稱，「達闥只是中國眾多科技創新民營企業的一個縮影，也是人形機器人產業的先行者，科技創新的道路不會是一帆風順的，有坎坷很正常，只要持續努力，砥礪前行，一定會成功。最後由衷期待社會各界能給予幫助、關心和愛護。」&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342256</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342256</guid>
            <pubDate>Sat, 22 Mar 2025 07:18:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>OpenAI 宮鬥內幕曝光</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;近日，基奇·哈吉即將出版的新書《樂觀主義者：山姆·阿爾特曼、OpenAl 與開創未來的競賽》曝光了 OpenAl 董事會在 2023 年解僱首席執行官阿爾特曼的新細節。&lt;/p&gt; 
&lt;p&gt;據報道，時任 OpenAl 首席科學家蘇茨克沃祕密發送給 OpenAI 董事兩封針對阿爾特曼和 OpenAI 總裁布羅克曼的 PDF。其中列舉了數十條涉嫌撒謊或失當行為的例子，最終導致了阿爾特曼被罷免。&lt;/p&gt; 
&lt;p&gt;PDF 中針對阿爾特曼的指控，蘇茨克沃都附上了相關聊天記錄截圖。 &amp;nbsp;其中，最具爆炸性的一條是 OpenAI 首席技術官米拉·穆拉提（Mira Murati）質疑 GPT-4 Turbo 的安全審批是否通過，阿爾特曼回應稱「法務部確認不需通過」。穆拉提查證後發現，公司法務部根本沒説過這話。&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;1212&quot; src=&quot;https://static.oschina.net/uploads/space/2025/0401/151009_XrfL_2720166.png&quot; width=&quot;1276&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;OpenAI 原本被設定為一個「不同」的科技公司，它由非營利性董事會管理，使命不是滿足股東，而是確保人工智能為人類利益服務。&lt;/p&gt; 
&lt;p&gt;然而，在實際運營中，董事會逐漸發現，阿爾特曼幾乎擁有對 OpenAI 無可撼動的控制力，董事會越來越擔心阿爾特曼的獨斷專行，一系列信任危機早已產生。&lt;/p&gt; 
&lt;p&gt;例如，在面對董事會要求加強 AI 安全審查、增補專家時，阿爾特曼與布羅克曼採取了拖延戰術。&lt;/p&gt; 
&lt;p&gt;2022 年冬天，董事會正在權衡如何發佈 GPT-4 三項頗具爭議的功能時，阿爾特曼聲稱這三項增強功能均已獲得聯合安全委員會的批准。可當董事會要求審查記錄時，發現實際上只有一項獲得通過。&lt;/p&gt; 
&lt;p&gt;一次董事會會議後，一名 OpenAI 員工在走廊上向獨立董事透露：微軟正在印度測試尚未發佈的 GPT-4，而這一測試並未獲得公司內部聯合安全委員會的批准，更未告知董事會。&lt;/p&gt; 
&lt;p&gt;又如，OpenAI 啓動的創業投資基金原本應歸 OpenAI 管理，但某位董事在一次晚宴中偶然得知，該基金實際由阿爾特曼本人持有，雖然他未從中獲利，這種安排依舊令人震驚。&lt;/p&gt; 
&lt;p&gt;穆拉提也向董事會透露，阿爾特曼和布羅克曼的管理風格已嚴重阻礙她履行職責。布羅克曼表面上向她彙報，卻一有爭議就越過她去找阿爾特曼，讓她在公司的每一天都是「在夾縫中生存」。&lt;/p&gt; 
&lt;p&gt;蘇茨克沃的 PDF 文件加速了事態發展。那天晚上，四位董事與蘇茨克沃一同投下了震撼科技世界的一票，決定解僱阿爾特曼，並將布羅克曼逐出董事會。他們並沒有事先告知微軟，也沒有通知員工。&lt;/p&gt; 
&lt;p&gt;幾小時後，OpenAI 官網發佈了那則短短的聲明：阿爾特曼因「未始終對董事會保持坦誠」被解職。&lt;/p&gt; 
&lt;p&gt;整個硅谷譁然，OpenAI 高層幾近分裂，員工們在混亂中震驚不已——他們沒有得到任何解釋，只知道，「山姆不再擔任 CEO」。&lt;/p&gt; 
&lt;p&gt;穆拉提被任命為臨時 CEO。但她很快意識到，董事會根本沒做好準備——沒有繼任計劃，沒有溝通戰略，甚至沒有和微軟商量。她開始質疑自己是否被當作棋子來使用，並最終站到了阿爾特曼一方。&lt;/p&gt; 
&lt;p&gt;隨後，高管層集體施壓董事會，要求公開解僱理由，否則就一起辭職。僅僅 48 小時，一封員工聯名信已收集到近 800 個簽名，幾乎全員威脅辭職。甚至連穆拉提與蘇茨克沃，也簽了名字。&lt;/p&gt; 
&lt;p&gt;顯然，蘇茨克沃等董事因權力旁落髮起的這場「政變」以失敗告終。他們原本以為，揭露阿爾特曼的管理問題會獲得員工的理解與支持；但現實卻是，一家公司，即便以「人類」為使命，一旦沒有共同信任的基礎，也將瞬間陷入混亂與失控。&lt;/p&gt; 
&lt;p&gt;幾天後，阿爾特曼復職，布羅克曼歸位，風波暫息。而蘇茨克沃和穆拉提隨後也離開了公司，創辦了自己的公司。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;回顧&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267006/openai-ceo-sam-altman-fired&quot; target=&quot;news&quot;&gt;OpenAI 董事會內訌，CEO 兼創始人 Sam Altman 被逐出公司&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267013/openai-greg-brockman-quit&quot; target=&quot;news&quot;&gt;OpenAI 總裁 Greg Brockman 辭職&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267101/openai-board-discussions-with-sam-altman-return-as-ceo&quot; target=&quot;news&quot;&gt;OpenAI 董事會與 Sam Altman 討論重返 CEO 崗位事宜&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267200&quot; target=&quot;news&quot;&gt;Altman 以訪客身份回到 OpenAI，和公司高管會面談判&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267256/openai-twitch-ceo-shear&quot; target=&quot;news&quot;&gt;Altman 迴歸失敗，OpenAI 董事會聘請 Twitch 前高管擔任 CEO&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267272&quot; target=&quot;news&quot;&gt;OpenAI 前 CEO 和總裁 Sam Altman &amp;amp; Greg Brockman 加入微軟&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267364&quot; target=&quot;news&quot;&gt;OpenAI 超 700 名員工簽署聯名信，要求董事會集體辭職&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/267591/sam-altman-returns-ceo-open-ai&quot; target=&quot;news&quot;&gt;Sam Altman 重返 OpenAI 擔任首席執行官&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/news/268788/altman-returns-as-ceo-openai-has-a-new-initial-board&quot; target=&quot;news&quot;&gt;OpenAI 正式宣佈 Sam Altman 迴歸擔任 CEO&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342255</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342255</guid>
            <pubDate>Sat, 22 Mar 2025 07:16:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>英特爾 CEO 陳立武：將剝離非核心資產、需補充流失的人才</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;英特爾首席執行官陳立武表示，該芯片製造商將剝離對公司願景非核心的資產，開發包括定製半導體在內的新產品，以更好地匹配客戶需求。陳立武稱，&lt;strong&gt;英特爾需要補充流失的工程人才，改善資產負債表，更好地調整生產流程，以滿足潛在客戶的需求&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;週一在拉斯維加斯舉行的英特爾願景大會上，陳立武首次以首席執行官身份公開露面。他沒有具體説明他認為英特爾的哪些業務將不再是其未來的核心。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-50854310c86ed823f44b847f53dfbf57e42.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;「我們還有很多艱苦的工作要做」，他對台下的英特爾客戶説。「在有些方面，我們沒有達到你們的期望。」&lt;/p&gt; 
&lt;p&gt;這位在半導體領域經驗豐富的高管正試圖幫助這家曾稱霸行業數十年之久的公司重返榮光。其領導層面臨的一個關鍵問題是，重振英特爾究竟是該保持公司的完整性，還是分拆其關鍵產品和製造業務。&lt;/p&gt; 
&lt;p&gt;陳立武沒有發出他將尋求剝離哪一塊業務的信號。相反，他強調了他需要解決的問題，以便讓這兩個部門都能有更出色的表現。他説，英特爾用於數據中心、特別是人工智能相關的芯片還不夠好。&lt;/p&gt; 
&lt;p&gt;「我們在創新方面落後了」，這位首席執行官説。「我們適應和滿足你們的需求太慢了。」&lt;/p&gt; 
&lt;p&gt;現年 65 歲的陳立武於 3 月 18 日上任，他的任命最初引發了樂觀情緒，並吸引一些投資者重返該股。但此後，隨着科技股的普遍下跌，該公司股價也隨之走低。陳立武發表演講後，英特爾在盤後交易中下跌約 1.2%。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342250</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342250</guid>
            <pubDate>Sat, 22 Mar 2025 07:02:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>國家天文台基於通義千問打造國際首個太陽大模型「金烏」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家天文台聯合阿里雲&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fh4eaYrUsKDRHGgYr-kwatA&quot; target=&quot;_blank&quot;&gt;發佈&lt;/a&gt;國際首個太陽大模型——「金烏」。「金烏」基於通義千問系列開源模型打造，目前在 M5 級太陽耀斑預報上準確率超 91%，為該級別太陽預報最高水平。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;277&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-98bad688a4b6cb4612ebb30baa4e83c954b.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;根據介紹，基於 Qwen-VL 等模型，「金烏」太陽大模型以超過 90 萬張太陽衞星圖像為樣本完成微調訓練。通過輸入上一時段的太陽物理參數及對應的觀測圖像，「金烏」可預測未來 24h 的耀斑爆發情況。同時，「金烏」可推測出下一時段的物理參數，通過調用擴散模型生成下一時段的太陽模擬圖像。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;國家天文台懷柔觀測基地主任林佳本表示：「通義大模型在中英文等多語言和圖像識別能力上表現出色，非常適合太陽預報。作為科研機構，相比從頭訓練大模型，基於已有的基模去發展科學模型，是更高效、更具可行性的選擇。未來，‘金烏’太陽大模型還將用於解答‘太陽磁場起源’等‘未解難題’，為我國太陽研究作出貢獻。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;此前，中國科學院（簡稱「中科院」）國家天文台「星語」大模型、中科院青藏高原研究所的全球首個水能糧大模型「洛書」以及中科院南海所珊瑚礁多模態大模型「瑤華」，均基於阿里通義千問系列模型打造。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
            <link>https://www.oschina.net/news/342244</link>
            <guid isPermaLink="false">https://www.oschina.net/news/342244</guid>
            <pubDate>Sat, 22 Mar 2025 06:40:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
    </channel>
</rss>