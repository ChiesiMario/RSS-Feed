<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（台灣）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-tw</language>
    <lastBuildDate>Mon, 18 Aug 2025 08:33:58 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>2025 年 8 月中國數據庫排行榜：雙星競入三甲榜，TDSQL 連躍位次升</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;p&gt;盛夏八月，數據庫賽道的熱度依舊不減。2025 年 8 月最新發布的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2FdbRank%3F0818" target="_blank"&gt;《中國數據庫流行度排行榜》&lt;/a&gt;如期出爐，共覆蓋 175 款數據庫產品。本月看點之一，是&lt;strong&gt;前三甲座次發生變動&lt;/strong&gt;，再次為國產數據庫競爭格局增添懸念。&lt;/p&gt; 
&lt;p&gt;接下來，小編將帶大家逐一盤點，本月排行榜前十名以及亮點數據庫產品的核心表現與技術動向。&lt;/p&gt; 
&lt;h3&gt;一、金倉位次連攀升，三甲格局起新篇&lt;/h3&gt; 
&lt;p&gt;本月排行榜最大的看點集中在前三甲位置的更替。OceanBase 持續強勢領跑，穩居榜首；GoldenDB 自 5 月以來實現連續兩位躍升，本月成功奪得榜眼；金倉數據庫憑藉技術新品和生態創新，從第四位再次挺進前三。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-fb1916210931260f8002d270ad560285fea.png" alt="" referrerpolicy="no-referrer"&gt; 圖 1:排行榜 1-3 位得分情況&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F34%3F0818" target="_blank"&gt;&lt;strong&gt;OceanBase&lt;/strong&gt;&lt;/a&gt; 以 793.36 分繼續蟬聯榜首，已連續五個月穩居第一。憑藉強大的事務處理能力、分佈式架構和高可用特性，OceanBase 廣泛應用於金融、電信等關鍵行業，成為國產數據庫的標杆產品。&lt;/p&gt; 
&lt;p&gt;近期，OceanBase 榮登 Gartner 發佈的《2025 年雲數據庫管理系統"客戶之聲"》報告，憑藉 4.8/5 的總體評分和 84% 的推薦率，連續兩年獲評"客戶之選"，並躋身全球"卓越表現者"象限。該榮譽使其與 Redis、Google Cloud Spanner 等國際頂尖產品比肩，充分彰顯了 OceanBase 在技術實力與客戶滿意度上的領先地位。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-c58fa341bbcc5e451719769c5177f66656a.png" alt="" referrerpolicy="no-referrer"&gt; &lt;em&gt;圖 2:報告顯示 OceanBase、PingCAP、騰訊雲入選亞太區"客戶之選"第一象限&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;金篆信科&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F51%3F0818" target="_blank"&gt;&lt;strong&gt;GoldenDB&lt;/strong&gt;&lt;/a&gt;本月以 632.16 分升至第二位，自 5 月以來已連續兩次排名上升。近期，其產品在運營商與金融行業持續落地：支撐河北移動賬務系統實現全面國產化，成功中標長沙銀行數據庫項目（金額超 1100 萬元）；與廣東移動聯合申報的分佈式改造方案，也連續第五年獲評"信創典型解決方案"。&lt;/p&gt; 
&lt;p&gt;在市場和行業層面，&lt;strong&gt;GoldenDB&lt;/strong&gt; 榮登賽迪顧問《2024-2025 中國平台軟件市場研究報告》分佈式事務型數據庫市場榜首，並被評為&lt;strong&gt;中國數據庫管理系統市場領導者&lt;/strong&gt; 。同時，IDC 發佈的《中國銀行業本地部署分佈式事務型數據庫市場份額（2024）》報告顯示，&lt;strong&gt;GoldenDB 蟬聯銀行分佈式數據庫本地部署市場第一，市場佔比達 28.9%&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-309f3c788168fe6774ee5c85cc6e4268933.png" alt="" referrerpolicy="no-referrer"&gt; 圖 3:報 2024 年中國銀行業本地部署分佈式數據庫市場份額&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;GoldenDB 正加速向"金融級核心系統國產替代"標杆邁進&lt;/strong&gt;，展現出強勁的發展動能與戰略潛力。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F13%3F0818" target="_blank"&gt;&lt;strong&gt;金倉數據庫&lt;/strong&gt;&lt;/a&gt;得分 624.28 分，進軍前三甲。近期，電科金倉圍繞"融合進化，智領未來"，持續推進產品技術與生態建設：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;發佈&lt;strong&gt;新一代融合數據庫產品矩陣，覆蓋 AI 融合、統一管控、一體機部署等多項核心能&lt;/strong&gt;力；&lt;/li&gt; 
 &lt;li&gt;"數據庫平替用金倉"口號發佈，實現品牌升級，強化國產替代解決方案；&lt;/li&gt; 
 &lt;li&gt;金蘭組織 2.0 戰略啓動，成員超 700 家，生態協同持續擴大...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這一系列動作不僅體現了金倉的產品競爭力，也折射出國產數據庫加速替代進程下的生態躍升。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-4e96ec6f4442aa48354140c819c4b97c39c.png" alt="" referrerpolicy="no-referrer"&gt; &lt;em&gt;圖 4:排行榜 4-10 位得分情況&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;阿里雲&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F37%3F0818" target="_blank"&gt;&lt;strong&gt;PolarDB&lt;/strong&gt;&lt;/a&gt;本月以 589.52 分位列第四，。值得一提的是，阿里雲與雲和恩墨在軟硬生態層面實現深度合作，聯合推出 zData X for PolarDB 一體機，全面適配國產芯片（ARM/x86）和操作系統（統信、麒麟、龍蜥），實現"開箱即用"的國產一體化數據庫基礎設施方案。該方案不僅優化了 PolarDB 的性能與穩定性，還顯著降低部署與運維成本，推動國產數據庫在關鍵行業的規模化落地。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F10%3F0818" target="_blank"&gt;&lt;strong&gt;達夢數據庫&lt;/strong&gt;&lt;/a&gt;以 553.14 分位列第五，排名穩定。7 月，IDC 發佈《中國金融行業集中式事務型數據庫市場份額 2024》報告，達夢以 13.48% 市場份額躍居國產廠商第一，穩坐金融行業集中式數據庫的"龍頭交椅"。此前，達夢在賽迪顧問等多份權威報告中也屢次斬獲市場份額第一，進一步驗證了其在銀行、保險等核心系統中的技術實力與市場認可度。&lt;/p&gt; 
&lt;p&gt;南大通用 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F26%3F0818" target="_blank"&gt;&lt;strong&gt;GBASE&lt;/strong&gt;&lt;/a&gt; 本月以 547.37 分排名第六。南大通用數據庫主力產品包括適用於 OLTP 的 GBase 8s 及適配大規模分析場景的 GBase 8a，構建了涵蓋交易與分析的完整產品線。&lt;/p&gt; 
&lt;p&gt;本月，GBase 8s 助力天津地鐵 4 號線北段自動售檢票系統（AFC）穩定上線，同時已服務天津軌交多條線路，體現了其在高併發、關鍵業務場景下的可靠性和行業適應力。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F50%3F0818" target="_blank"&gt;&lt;strong&gt;騰訊雲 TDSQL&lt;/strong&gt;&lt;/a&gt; 本月以 461.49 分排名上升兩位，進入第七名。根據 IDC 發佈的《2024 年中國金融行業分佈式事務型數據庫市場》報告，騰訊雲以 21.32% 的市場份額穩居行業第一，在銀行子市場更以 22.48% 佔有率蟬聯冠軍，連續兩年實現"雙料第一"。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-2140824c511a7a5be32f0482eff29a33996.png" alt="" referrerpolicy="no-referrer"&gt; &lt;em&gt;圖 5:2024 中國金融行業分佈式事務型數據庫市場主要廠商市場份額&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F20%3F0818" target="_blank"&gt;&lt;strong&gt;TiDB&lt;/strong&gt;&lt;/a&gt; 本月得分 388.14 分，排名保持第八位，繼續在新興趨勢方向上穩紮穩打。 TiDB AgentX Hackathon 近日正式啓動，鼓勵全球開發者基於 TiDB Cloud 構建 AI Agent 應用。大賽聚焦 GenAI 與數據庫融合方向，延續去年吸引來自 85 個國家、超 2000 名開發者參與的熱度。作為兼容 HTAP（混合事務與分析處理）架構的開源數據庫，TiDB 正加速擁抱 AI 發展。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F46%3F0818" target="_blank"&gt;&lt;strong&gt;GaussDB&lt;/strong&gt;&lt;/a&gt; 本月以 382.98 分位列第九，依託對 GaussDB 企業版、DWS 數據倉庫及開源 openGauss 的全面兼容，其&lt;strong&gt;生態融合能力持續增強，適配場景不斷擴展&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;在生態集成方面，NineData DevOps 平台已實現對 GaussDB 的全面對接，支持多環境統一管理；同時，最新版本的 DBdoctor 也已納入其全生命週期運維能力，支持 Oracle RAC 模式、SQL 限流等功能，進一步提升其在混合雲和企業級應用中的智能化運維水平。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F601%3F0818" target="_blank"&gt;&lt;strong&gt;openGauss&lt;/strong&gt;&lt;/a&gt; 本月得分 297.02 分，位列第十。7 月 11 日，其 7.0.0 創新版在 HyBench HTAP 基準測試中斬獲 1713.72 分的國內最高成績。&lt;/p&gt; 
&lt;p&gt;該版本在與鯤鵬平台的深度協同下，在線程池優化、NUMA 綁定與內存調度等關鍵維度實現深層調優，顯著提升了高併發處理能力，為企業構建新一代數據基礎設施提供了強有力的技術支撐。&lt;/p&gt; 
&lt;h3&gt;二、場景生態原生進，價值落地展風采&lt;/h3&gt; 
&lt;p&gt;此外，還有多款國產數據庫憑藉卓越的技術進步和應用深度實現排名提升。"&lt;strong&gt;行業場景驅動 + 社區生態 + 原生化演進&lt;/strong&gt;"三大趨勢正推動國產數據庫從"能力構建"向"價值落地"邁進。小編也摘選了本月表現突出的幾款國產數據庫點評------&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-9c4a018d0d987fe2e81ad06b9cd79d9b18b.png" alt="" referrerpolicy="no-referrer"&gt; &lt;em&gt;圖 6:8 月榜單表現亮眼數據庫&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;本月排名第 13 位的&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F87%3F0818" target="_blank"&gt;&lt;strong&gt;AnalyticDB&lt;/strong&gt;&lt;/a&gt;，&lt;strong&gt;在智能問答等場景中持續深化技術應用&lt;/strong&gt;。其 GraphRAG 技術融合知識圖譜與語義檢索，有效解決模糊提問與話題跳躍問題，已在家電診斷、醫療預問診等領域成功部署。作為阿里雲瑤池平台核心組件，AnalyticDB 正不斷提升查詢理解與推理能力。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F623%3F0818" target="_blank"&gt;&lt;strong&gt;KaiwuDB&lt;/strong&gt;&lt;/a&gt; 本月排名上升 2 位，展現穩定增長。針對工業物聯網等高頻數據場景，KaiwuDB 優化了實時數據處理和智能分析能力。同時，積極參與開源社區建設，藉助&lt;strong&gt;開放原子開發者大賽等平台，匯聚社區力量&lt;/strong&gt;，促進產品與生態的同步成長。&lt;/p&gt; 
&lt;p&gt;本月排名躍升 7 位、進入前 20 的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F912%3F0818" target="_blank"&gt;&lt;strong&gt;Apache IoTDB&lt;/strong&gt;&lt;/a&gt;，於 2025 時序數據庫大會&lt;strong&gt;發佈 2.0 版本及 Timer 3.0 大模型，集成聯邦查詢與智能分析能力&lt;/strong&gt;，提升工業監控、設備運維與預測建模等複雜場景的支持力度。結合清華大學研發的時序模型，IoTDB 正邁向智能時序平台的目標。&lt;/p&gt; 
&lt;p&gt;本月排名第 21 位的 &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F6%3F08180" target="_blank"&gt;&lt;strong&gt;DolphinDB&lt;/strong&gt;&lt;/a&gt;，繼續鞏固其在金融領域的領先地位。其 ORCA 平台支持毫秒級流處理及統一數據建模，滿足高頻交易和智能投研對實時性與可靠性的高要求。DolphinDB 正通過技術創新，持續強化金融智能系統的基礎架構。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fwiki%2F6509%3F0818" target="_blank"&gt;&lt;strong&gt;Easysearch&lt;/strong&gt;&lt;/a&gt;本月排名上升至第 33 位。v1.14.0 版本引入了文本嵌入模型、語義檢索 API 及搜索管道機制，大幅提升向量處理效率和內存利用率。作為國產輕量級中文語義搜索引擎，Easysearch 正以低成本和強適配性，拓展問答系統與企業檢索的應用邊界。&lt;/p&gt; 
&lt;h3&gt;三、智能引領變革，ACDU 蓄力前行&lt;/h3&gt; 
&lt;p&gt;隨着 2025 年 8 月《中國數據庫流行度排行榜》的發佈，國產數據庫在智能化融合、生態建設和行業應用方面展現出強勁勢頭。智能運維與 AI 技術正成為行業共識，推動數據庫管理進入新的變革階段。&lt;/p&gt; 
&lt;p&gt;在上週剛剛落幕的廣州站【&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fevent%2F935%3F0818" target="_blank"&gt;ACDU·中國行&lt;/a&gt;】活動中，我們也聚焦這一熱點，匯聚了近百名數據庫專家與從業者，共同探討國產替代與智能運維的最新實踐與未來趨勢。活動圍繞數據庫升級實戰展開，現場氣氛熱烈，嘉賓分享深入，覆蓋了金融、電信、製造等多個關鍵行業的技術應用與智能運維創新。為方便更多技術愛好者回顧學習，活動 PPT 資料已開放下載，助力行業知識傳播與交流。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PPT 下載合輯（陸續更新中）：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Ftopic%2F659757%3F0818" target="_blank"&gt;https://www.modb.pro/topic/659757&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;圖文回顧：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fdb%2F1952304613068124160%3F0818" target="_blank"&gt;https://www.modb.pro/db/1952304613068124160&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;展望未來，隨着多源異構環境的普及與 AI 能力的深度融合，國產數據庫將在智能化管理、風險控制及自動化運維等方面持續突破，推動數據庫技術邁向更高效、更安全、更智能的新階段。墨天輪社區也將於近期在武漢舉辦下一站【ACDU·中國行】活動，期待與更多行業同仁攜手共進，推動國產數據庫生態的繁榮與創新。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2FdbRank%3F0818" target="_blank"&gt;國產數據庫流行度排行榜-墨天輪&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2FdbRank%23dataSource%3F0818" target="_blank"&gt;國產數據庫流行度排名規則-墨天輪&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Ftopic%2F4704%3F0818" target="_blank"&gt;《往期國產數據庫流行度排行榜解讀》&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Ftopic%2F402751%3F0818" target="_blank"&gt;《中國數據庫行業分析報告》往期合輯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fdb%2F1930153792016756736%3F0818" target="_blank"&gt;2025 年 5 月國產數據庫中標情況一覽&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;原文鏈接&lt;/em&gt; ：&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%2Fdb%2F1953283586862362624%3F0818" target="_blank"&gt;&lt;em&gt;https://www.modb.pro/db/1953283586862362624&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;更多精彩內容盡在&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.modb.pro%3F0818" target="_blank"&gt;&lt;strong&gt;墨天輪數據社區&lt;/strong&gt;&lt;/a&gt;，圍繞數據人的學習成長提供一站式的全面服務，持續促進數據領域的知識傳播和技術創新。&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4559794/blog/18688537</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4559794/blog/18688537</guid>
      <pubDate>Mon, 18 Aug 2025 08:24:54 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>蘋果聯合創始人 Steve Wozniak：已捐贈大部分財富</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;近日，蘋果聯合創始人 Steve Wozniak（史蒂夫·沃茲尼亞克）於 75 歲生日當天，在社交網站上參與討論，回顧了自己的人生與價值觀。&lt;/p&gt; 
&lt;p&gt;他在科技資訊網站 Slashdot 的評論區&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslashdot.org%2Fcomments.pl%3Fsid%3D23765914%26cid%3D65583466" target="_blank"&gt;表示&lt;/a&gt;，自己已經把從蘋果獲得的所有財富都捐出去了，因為財富和權力不是他生活的目的。&lt;/p&gt; 
&lt;p&gt;他不知道自己有多少錢，但通過二十年各處演講，財富可能達到 1000 萬美元，外加幾棟房子，繳的綜合稅大約是 55%。他還表示「自己是最幸福的人」，人生不是為了成就，而是為了幸福，幸福就是笑容減去皺眉。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0818/155838_BVcv_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;沃茲尼亞克設計的 Apple II 被認為是個人計算機的里程碑，其集成電路設計、彩色圖形和易編程特性使電腦走進家庭和學校。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-805cbfb48f0506adafc41e91feeb5a6386b.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;沃茲尼亞克不僅是工程師，也是將計算機帶入大眾生活的重要人物。近年來，沃茲尼亞克繼續探索科技前沿，尤其關注軌道碎片問題。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;他創辦的太空可持續發展公司正在研發「共享航天器」，清理威脅衞星和未來任務的軌道垃圾，其方案強調協作與可擴展性。&lt;/p&gt; 
&lt;p&gt;如果沃茲尼亞克「僅僅」設計了早期個人電腦時代的奠基之作 Apple II，他依然足以成為計算機界的傳奇。 &amp;nbsp;但這位與喬布斯、比爾蓋茨和馬斯克不同，他更關注社區、教育和幸福感，在 80 年代中期離開蘋果，隨後協助創立了電子前哨基金會，資助了聖何塞兒童探索博物館，並將過去四十年投身於慈善事業、公開演講。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366947</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366947</guid>
      <pubDate>Mon, 18 Aug 2025 08:05:54 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Meta 「超級智能實驗室」將被拆分為四個專業團隊</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fmeta-plans-fourth-restructuring-ai-efforts-six-months" target="_blank"&gt;據 The Information 報道&lt;/a&gt;，Meta 計劃在六個月內對其 AI 業務進行第四次重大重組。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0818/155254_JNkF_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;Meta 新成立的「超級智能實驗室」（Meta Superintelligence Labs）將被拆分為四個專業團隊，其中包括一個暫時名為「TBD 實驗室」的新部門，該實驗室主要負責 Meta 旗艦大語言模型 Llama 最新版本的開發工作。&lt;/p&gt; 
&lt;p&gt;此外還將設立專門負責 Meta AI 助手等產品的團隊、基礎設施團隊，以及繼續從事長期研究的基礎 AI 研究實驗室。其中，TBD 實驗室預計將配備六位負責人，這些高管全部來自 Meta 外部的新近招聘。&lt;/p&gt; 
&lt;p&gt;據悉，前 Google 員工傑克·雷將負責預訓練工作，這是 AI 模型開發中的關鍵環節，涉及讓模型從互聯網和其他數據集收集的數萬億詞彙中學習文本預測能力。&lt;/p&gt; 
&lt;p&gt;曾在蘋果公司領導模型開發的龐若鳴將負責 TBD 實驗室的基礎設施建設，但這與更廣泛的基礎設施團隊相互獨立。前 OpenAI 員工餘家輝則將負責多媒體項目，旨在讓 AI 模型具備理解和生成文本以外內容的能力。&lt;/p&gt; 
&lt;p&gt;後訓練團隊則由前 OpenAI 的 Hongyu Ren 和前 Google 的 Pei Sun 共同負責。&lt;/p&gt; 
&lt;p&gt;在整體管理架構上，前 GitHub CEO 納特·弗裏德曼將繼續監管超級智能實驗室的產品工作，而共同創立基礎 AI 研究實驗室的羅伯特·弗格斯將繼續領導該部門。長期擔任基礎設施工程副總裁的阿帕娜·拉馬尼則將加入新組織，負責管理更廣泛的基礎設施團隊。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366942</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366942</guid>
      <pubDate>Mon, 18 Aug 2025 07:53:54 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Altman：上市後或不再擔任 OpenAI CEO</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;OpenAI 首席執行官薩姆・奧爾特曼（Sam Altman）在接受媒體採訪時透露，他對在公司上市後繼續擔任 CEO 持保留態度。儘管 OpenAI 正在推進數萬億美元級的計算基礎設施投資計劃，奧爾特曼表示自己並不確定是否適合這一角色。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="289" src="https://oscimg.oschina.net/oscnet/up-00c90d549391f31138004181e72cc2fff73.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;奧爾特曼在採訪中坦言，儘管自己主導了 OpenAI 的多項戰略項目，但他自認為缺乏作為上市公司 CEO 所需的核心管理素質和市場敏感度。他特別提到，上市企業的&lt;span&gt;領導者&lt;/span&gt;需要具備應對複雜投資者關係和監管環境的能力，而這正是他所缺乏的。他表示:「我相信公司最終會走向上市，但不確定自己是否適合執掌上市後的 OpenAI。」&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;根據外媒的報道，OpenAI 在未來幾年內計劃投入數萬億美元以構建其計算基礎設施，並探索創新的金融工具以支持公司的擴展。該戰略旨在進一步鞏固 OpenAI 在人工智能領域的全球領導地位。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，當被問及 OpenAI 的上市可能性時，奧爾特曼承認這是一個潛在的發展路徑，但仍然強調了對領導角色適配性的問題。他認為，能夠勝任這一角色的人需要具備相應的管理能力和市場應對能力，而他對此感到不確定。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366943</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366943</guid>
      <pubDate>Mon, 18 Aug 2025 07:53:54 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>OpenCat，從木頭到智能，一個機器生命的誕生</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#252933; text-align:justify"&gt;你可能聽過 OpenCat，或者在某個視頻見過它小跑的身影。今天，我想和你們聊聊，這隻小小的四足機器人，是如何從我腦海中的一個模糊念頭，一步步走到今天的公司化運營的。這不僅僅是一個創客項目，更像是一場漫長的、充滿驚喜與挑戰的造物之旅。回首這些年，有無數個挑燈夜戰的夜晚，有無數次從頭再來的挫敗，但每一次小小的突破，都像一束光，照亮了前行的路。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-27a06295e45840dd9977d4d99fc2e34e.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-27a06295e45840dd9977d4d99fc2e34e.png" width="754" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#252933; text-align:justify"&gt;&lt;strong&gt;&lt;span style="color:#e74c3c"&gt;先插入一個廣告：&lt;/span&gt;8 月 28 日，開源中國源創會（以及 IOTE 國際物聯網展會）將會舉辦&lt;span style="color:#e74c3c"&gt;，屆時 OpenCat 會在線下與大家相見，可編程機器貓將與你互動，看完本文，如果你感興趣歡迎到活動現場玩耍！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div style="text-align:left"&gt;
  ⏰活動時間：8 月 28 日 (周 4️⃣) 14:00 - 17:00
 &lt;/div&gt; 
 &lt;div style="text-align:left"&gt;
  🏠地點：深圳・國際會展中心 (寶安) 11 號館・會場五
 &lt;/div&gt; 
 &lt;div style="text-align:left"&gt;
  活動詳情：
  &lt;span&gt;&amp;nbsp;&lt;/span&gt;
  &lt;a href="https://www.oschina.net/event/8598019"&gt;https://www.oschina.net/event/8598019&lt;/a&gt;
 &lt;/div&gt; 
 &lt;div style="text-align:left"&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="301" src="https://static.oschina.net/uploads/space/2025/0818/141219_KzV4_3820517.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:start"&gt;萌芽：當「肌肉記憶」遇上微控制器——那段樹莓派與我的獨行歲月&lt;/h2&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;2016 年我 28 歲，剛剛博士和碩士畢業，在收尾一個波音的專利項目，同時尋找工作，出於「技多不壓身」的想法開始玩樹莓派。我也是在那時看到了波士頓動力的靈活的「大狗」 ，它在視頻裏展現的動態平衡和敏捷，讓我心潮澎湃，也讓我看到了一個未來的幻影。當我用樹莓派搭建起一個帶探頭的旋轉平台時，我腦子裏就升起一個簡單的念頭：能不能造一個平價版的、能像真動物一樣靈活的小機器人？&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-4bf60ae18621356ad86c91edc2b4ae49.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-4bf60ae18621356ad86c91edc2b4ae49.png" width="690" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:center"&gt;&lt;span style="color:#7f7f7f"&gt;在我發佈 OpenCat 項目之前，有人認為我的想法是不可能的&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我不想造那種笨拙的、只會重複固定動作的玩具，而是希望能像真正的小動物一樣，帶着點靈氣，甚至能「學習」的夥伴。這個念頭在我心裏生根發芽，最終凝結成了 OpenCat 的核心哲學：&lt;strong&gt;以仿生和平價的物料，通過設計巧思和算法讓機器擁有有生命感&lt;/strong&gt;。僅僅過了一個月，能東張西望，四處行走的雪糕棒機器貓就在我的單間宿舍誕生了。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-12efcc8e2d9456a4e4bb774573c8ace8.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-12efcc8e2d9456a4e4bb774573c8ace8.png" width="660" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;雖然初具雛形，但要讓機器人走得自然、優美並不簡單，想當然的公式只能勉強讓它挪動。我基於物理和算法的第一性原理，結合觀察動物視頻和自己在地板上爬行，推導出了一套可調參的步態算法，並在後來和機器人專業的朋友談起時才知道，這就是他們熟知的運動學逆解。然後，按照當時刷算法題的習慣，對這套算法進行了一系列的優化，實現更快的調用和平衡的反饋。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;這聽起來有點玄乎，但其實很簡單。就像我們走路、跑步，大腦不會實時計算每一步的肌肉收縮，而是調用那些早已固化的「模式」。我想，機器人也應該如此。把那些複雜的、週期性的運動模式預先存儲起來，讓它在需要時能瞬間調用，而不是每次都從頭計算。這種「肌肉記憶」的設計，不僅讓機器人的動作更流暢、更具生命感，更重要的是，它大大降低了對主控芯片實時計算能力的嚴苛要求，從而&lt;strong&gt;顯著降低了硬件成本&lt;/strong&gt;，讓平價的機器人也能擁有高級的運動能力。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;最初，OpenCat 就是一個基於樹莓派的學習項目，我嘗試了多進程和多線程編程，把感知、決策、運動和通信任務希望最大限度地平均分配到它的 4 個運算核心上。但樹莓派這塊小板子，雖然能處理複雜的圖像、規劃行為，但處理簡單的實時性的運動任務反而不夠快。所以光有「大腦」不夠，還需要一個能實時控制「肌肉」的「小腦」。那時候，我一個人摸索，無數次嘗試，無數次失敗，才終於找到了那個平衡點——巧妙地引入了 Arduino，讓它成為我們核心的「中央模式生成器」 。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;這種分層架構，就像是把機器人的「思考」和「行動」解耦了。樹莓派可以專注於複雜的視覺識別、路徑規劃和智能決策，而無需承擔實時計算每一個關節運動的繁重任務。而 Arduino 則能精確、低延遲地控制每一個舵機，確保動作的流暢和穩定。這種設計，在當時的我看來，是克服了無數技術難題後，才找到的兼顧性能與成本的「最優解」，它大大降低了技術和財務的門檻，讓更多人能接觸到動態四足機器人。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;經過一年的專注研發，我把所有的積蓄和精力都投入了進去，創立了 Petoi 有限責任公司。2018 年，OpenCat 的基礎代碼正式發佈，我希望它能像智能手機的 Android 操作系統一樣，成為一個開放的、人人可用的框架，鼓勵更多人蔘與到四足機器人、物聯網和人工智能的開發中來。那段日子，雖然孤獨，但每當看到代碼在機器上跑起來，就覺得一切都值了。它就像一塊畫布，等待着每一個開發者、每一個夢想家去添上自己的色彩。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:start"&gt;初啼：Nybble 的木質足跡——我的第一個「孩子」與眾籌的奇蹟&lt;/h2&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-0d985b1be9f3f6fa5112d1dfa692295d.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-0d985b1be9f3f6fa5112d1dfa692295d.png" width="804" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我的第一個產品化的「孩子」，是 Nybble。它就像一個粗糙卻充滿生命力的草圖，承載了我最初的夢想。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;Nybble 的身體是用激光切割的木頭拼起來的。選擇木頭，正是我們「平價物料」哲學的第一步。它成本低廉，易於加工，非常適合快速原型開發和早期迭代，讓更多人能以可承受的價格擁有自己的機器人。看着那些木質部件在手中慢慢拼湊成一隻貓的形狀，那種感覺，就像是賦予了它最初的骨架，充滿了儀式感。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-3b780ae2c888f526bf2767016e10714f.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-3b780ae2c888f526bf2767016e10714f.png" width="603" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:center"&gt;&lt;span style="color:#7f7f7f"&gt;NyBoard V0&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;它的「大腦」是一塊小小的 Arduino Pro Mini，和我們熟悉的 Arduino Uno 用的是同一顆 ATmega328P 芯片。別看它小（16MHz CPU, 32KB Flash, 2KB SRAM），Nybble 所有的自適應運動邏輯和 UI，都通過我刷題時練出來的奇技淫巧在這顆芯片上實現了。我給它寫了一套固件，讓它能持續監聽來自外界的「指令」。你可以通過 Arduino IDE 的串口監視器，或者藍牙模塊，甚至外接一塊樹莓派，給它發號施令。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我至今還記得，第一次給它發送「m8 30」（讓第 8 個關節轉 30 度）或者「kwkL」（讓它向左走）時，Nybble 真的動起來了！那種激動，就像是看着自己的孩子邁出了第一步。Nybble 能夠「奔跑並向用戶學習」，這證明瞭我的「肌肉記憶」設計是可行的。它雖然簡單，卻為 OpenCat 的未來奠定了堅實的基礎，也吸引了第一批志同道合的夥伴加入。那時候，我常常一個人在實驗室裏，看着它笨拙卻充滿希望的步伐，心裏充滿了對未來的憧憬。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;為了讓 Nybble 真正走向大眾，我需要資金來獲得 NyBoard 的認證並啓動大規模生產。於是，我發起了第一次眾籌。2018 年 11 月 21 日，Nybble 在 Indiegogo 上成功籌集了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;136,536 美元&lt;/strong&gt;，得到了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;585 位支持者&lt;/strong&gt;的慷慨相助。這筆資金對我們來説，簡直是雪中送炭，它不僅證明瞭我們的想法得到了認可，更讓我看到了社區的力量和這個項目巨大的潛力。&lt;/p&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:start"&gt;蛻變：Bittle 的智能飛躍——從「我」到「我們」的征程與市場的認可&lt;/h2&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;Nybble 成功了，但它也教會了我很多。木質框架雖然便宜，但不夠堅固；控制板雖然能用，但集成度不高。我深知，要讓 OpenCat 走得更遠，必須進行一次徹底的升級。於是，我開始構思 OpenCat 的下一個篇章——Bittle。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-cdc38c254c7740acbb8139d131c7f0da.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-cdc38c254c7740acbb8139d131c7f0da.png" width="790" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;在 Bittle 的開發階段，我從美國回到了國內，先是在柴火空間入駐了半年，解決了 Nybble 的本地化生產。疫情爆發後，我應供應商的邀請，搬去了他們東莞的工廠，他們提供免費的食宿。我不再是孤軍奮戰，有幸，一些志同道合的朋友加入了進來，他們被 OpenCat 的願景所吸引，也願意和我一起，把這個夢想變成現實。於是，我們的故事開始了。Bittle，對我們來説，是一次全面的技術飛躍，一次從「原型」到「藝術品」的蛻變，也是我們團隊協作，共同克服無數困難的里程碑。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;為了將 Bittle 推向市場，我們再次選擇了眾籌。2020 年 10 月，Bittle 在 Kickstarter 上成功籌集了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;567,218 美元&lt;/strong&gt;，獲得了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;2,052 位支持者&lt;/strong&gt;的鼎力相助。這次眾籌的巨大成功，不僅為 Bittle 的量產提供了充足的資金，更重要的是，它向我們證明瞭，OpenCat 的理念和產品，在全球範圍內都擁有廣闊的市場和熱情的支持者。&lt;/p&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:start"&gt;堅韌的骨骼與靈動的肌肉：從經驗中汲取的設計智慧，賦予生命感&lt;/h3&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-0fa0e996ce00d83c7d136c5718b47e03.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-0fa0e996ce00d83c7d136c5718b47e03.png" width="594" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;首先是身體。我們放棄了木頭，選擇了高強度注塑塑料。這不僅僅是為了美觀，更是為了讓它更耐用、更抗摔。Nybble 的木頭框架在多次測試中暴露出脆弱的一面，我們從這些「磨難」中吸取教訓，決定用更堅固的材料。我特別喜歡它的互鎖式 3D 拼圖設計，螺絲用得很少，組裝起來就像玩樂高，一個小時就能拼好。這種「設計巧思」不僅簡化了組裝，降低了用戶門檻，也讓它擁有了更精緻的「外殼」，更接近有生命感的寵物。它甚至能承受一個成年人的踩踏而毫髮無損（當然，別真的去試！）。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-450488e1ef94621dbb3e38fbd111dbd9.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-450488e1ef94621dbb3e38fbd111dbd9.png" width="564" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我們也為 Bittle 設計了&lt;strong&gt;彈簧加載的大腿&lt;/strong&gt;。這是個小小的巧思，卻能大大延長舵機的壽命。舵機在四足機器人裏是易損件，Nybble 時代我們沒少為它頭疼。現在，就像給關節加了減震器，緩衝了運動中的衝擊，讓它的步態更平穩、更自然。這種仿生設計，不僅保護了核心部件，也讓 Bittle 的動作更加流暢，更具「生命感」。而且，我們還設置了一些「弱鏈」 。萬一真的遇到極端情況，它會在這裏「解體」，而不是損壞昂貴的核心部件。這些「薄弱環節」很容易重新安裝或更換，成本也很低廉，這都是為了讓它更「好養活」，讓用戶能更放心地去探索。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;驅動 Bittle 運動的，是九個 P1S 舵機。八個用於行走關節，一個用於頭部平移。這些 P1S 舵機，除了速度快、控制範圍廣，還有一個關鍵的進步：它們集成了&lt;strong&gt;位置反饋&lt;/strong&gt;功能。這意味着機器人不再是‘盲目’地執行指令，它能實時‘知道’每個關節的實際位置。如果遇到障礙或者沒有達到預設位置，它能立刻感知並進行調整，這對於實現更平穩、更精確、更可靠的動態運動至關重要。想象一下，它能更精準地保持平衡，甚至在不平坦的地面上也能穩健行走，這讓它的動作更具‘生命力’。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-ab8ad0088e36dbbe303b49a575fe739c.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-ab8ad0088e36dbbe303b49a575fe739c.png" width="573" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:start"&gt;智慧的心臟：NyBoard V1 與 BiBoard 的崛起——我們對性能的極致追求與平價的平衡&lt;/h3&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;如果説 Nybble 的 Arduino Pro Mini 是個「初級大腦」，那 Bittle 的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;NyBoard V1&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;就是我們為它量身定製的「智慧心臟」。它依然基於 Atmega328P 芯片，但我們把更多功能集成到了這塊定製板上。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-9d31111bde7cee23d03e9363af05ef1a.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-9d31111bde7cee23d03e9363af05ef1a.png" width="755" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:center"&gt;&lt;span style="color:#7f7f7f"&gt;NyBoard V1&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我們給它加了 8K 的 I2C EEPROM，專門用於存儲「肌肉記憶」數據。更重要的是，我們集成了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;IMU（慣性測量單元）&lt;/strong&gt;。這就像是 Bittle 的「平衡感」，能實時感知身體的姿態、方向和加速度，這對維持它的動態平衡至關重要。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;NyBoard V1 還預留了一個 2x5 的插座，專門用於安裝樹莓派等上位機。這意味着，你可以輕鬆地給 Bittle 注入人工智能的「靈魂」，讓它能進行更復雜的感知和決策。此外，還有四個 Seeed Grove 插座，這就像是給 Bittle 留下了無限的「感官擴展」接口。它的頭部甚至設計成一個夾子，可以方便地夾住這些模塊，實現快速的傳感器集成。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-abb7aff29aef3abee792a112124858df.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-abb7aff29aef3abee792a112124858df.png" width="568" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:center"&gt;&lt;span style="color:#7f7f7f"&gt;Bittle 連接樹莓派 3 A+和相機&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;隨着項目的發展，我們對主控板的性能有了更高的追求。我們深知，要實現更復雜的智能和更流暢的動作，必須有更強大的「心臟」。於是，&lt;strong&gt;BiBoard&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;系列應運而生，它標誌着 OpenCat 硬件的又一次飛躍，也是我們團隊攻克無數技術難關的結晶。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-a0f711171e885f1c51ab57ed3d0183a7.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-a0f711171e885f1c51ab57ed3d0183a7.png" width="600" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:center"&gt;&lt;span style="color:#7f7f7f"&gt;BiBoard V0 ，基於 ESP32&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&lt;strong&gt;BiBoard V0&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;的出現是一個關鍵發展，最初作為功能性測試版本面向開發者。它基於高性能的 ESP32 芯片構建，擁有強大的 240MHz 雙核 CPU，輔以 520KB SRAM 和高達 16MB 的大容量閃存。與 NyBoard 相比，計算資源的顯著增加使得更復雜的算法和更大的代碼庫能夠直接在主板上運行。BiBoard V0 的一個關鍵進步是集成了內置的 WiFi 和藍牙模塊，以及音頻放大器和揚聲器。這意味着，許多之前需要外部模塊或樹莓派才能實現的功能，現在可以直接在主板上完成，大大簡化了硬件設置，也讓機器人更加獨立和響應迅速。這種集成度提升，在保證「生命感」所需複雜功能的同時，也進一步控制了整體成本，體現了「平價」的理念。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-1c2702512bb3106076380f91e6a13119.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-1c2702512bb3106076380f91e6a13119.png" width="670" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:center"&gt;&lt;span style="color:#7f7f7f"&gt;BiBoard V1&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;BiBoard V1 最令人興奮的特性之一，是它包含了「支持雙語多詞的獨立智能語音識別」 。這意味着，機器人現在能更細緻地理解你的語音指令，並用清晰的聲音回應你，甚至無需外部模塊就能實現複雜的語音交互。這背後是我們團隊在語音識別算法和硬件集成上付出的巨大努力，讓機器人擁有了更自然的「聽」和「説」的能力，極大地增強了它的「生命感」。此外，它還支持 4 個電容式觸摸板，增強了產品的互動性。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;儘管板載智能顯著增強，BiBoard V1 仍明確增強了對樹莓派 3A+、4 和 5 等強大外部 AI 計算平台的兼容性。這種平衡的設計策略，確保了機器人開箱即用就具備高能力，同時仍然是用於 AI 開發的靈活平台。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;以下表格對比了兩代主控板的核心技術參數：&lt;/p&gt; 
&lt;table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-color:#cccccc; border-style:solid; border-width:1px; box-sizing:border-box; color:#252933; font-family:&amp;quot;Helvetica Neue&amp;quot;,helvetica,arial,&amp;quot;Heti Hei&amp;quot;,sans-serif,&amp;quot;Apple Color Emoji&amp;quot;,&amp;quot;Segoe UI Emoji&amp;quot;,&amp;quot;Segoe UI Symbol&amp;quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.32px; margin-block:12px 24px; margin-bottom:16px; margin-inline:auto; min-width:100px; orphans:2; outline:none; table-layout:fixed; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:730px; word-break:break-word; word-spacing:0px"&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;特性&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;NyBoard V1&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;BiBoard V0 (開發者測試版)&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;BiBoard V1 (生產版)&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;控制器芯片&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;Atmega328P&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;ESP32&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;ESP32-mini&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;CPU 速度&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;16MHz&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;240MHz 雙核&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;240MHz 雙核&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;SRAM&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;2KB&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;520KB&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;520KB&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;閃存&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;32KB&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;高達 16MB&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;4MB&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;集成無線&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;無 (可加擴展模塊)&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;WiFi/藍牙&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;WiFi/藍牙&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;集成音頻&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;蜂鳴器&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;音頻放大器/揚聲器&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;高保真揚聲器&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;語音識別&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;無 (可加模塊)&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;擴展 Hat&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;板載&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;樹莓派接口&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;2x5 插座&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;留有接口&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;2x5 插座 (支持 Pi 3A+, 4, 5)&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;可擴展插座&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;4 個，板載 Grove&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;4 個擴展板上的 Grove&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;4 個板載 Grove&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;USB 端口&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;Mini-USB&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;USB Type-C&lt;/p&gt; &lt;/td&gt; 
   &lt;td colspan="1" rowspan="1" style="border-color:#cccccc; border-style:solid; border-width:1px"&gt; &lt;p style="text-align:justify"&gt;USB Type-C&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[13, 14]&lt;/code&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:start"&gt;靈動的雙眼與無限的可能：傳感器的世界——讓它感知我的世界&lt;/h3&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;IMU（慣性測量單元）作為所有主板迭代（包括 NyBoard V1 和隨後的 BiBoard 系列）的基本組件，都集成其中 。它對於維持機器人的平衡不可或缺，尤其是在動態和複雜運動期間。它的數據被積極利用來檢測機器人何時倒置，從而允許採取糾正措施，並可以微調身體角度調整和穩定性控制，讓它在各種複雜動作中都能保持優雅，這無疑是賦予它「生命感」的關鍵一步。藉助於陀螺儀的快速反饋，我們實現了機器人在單槓上的連續翻滾，從平地翻轉站上天花板，以及在舵機四足機器人上全球首次後空翻和連續後空翻。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;除了核心的 IMU，我們還為 Bittle 準備了一系列豐富的「感官」擴展，讓它能更全面地感知並與環境互動，真正融入我們的生活：&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-553b4b439848346949d556bd45a760b1.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-553b4b439848346949d556bd45a760b1.png" width="570" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;智能攝像頭模塊（MU Camera）&lt;/strong&gt;：它能利用深度學習算法識別色塊、球、人體和特定卡片。所有算法都在設備上本地處理，最大限度地減少了主控制器的延遲和計算負載，讓 Bittle 擁有了「眼睛」，能看懂它面前的世界。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;Petoi AI 視覺模塊&lt;/strong&gt;：作為視覺感知方面更先進的飛躍，它基於 Arm Cortex-M55 和 Ethos-U55 嵌入式視覺模塊構建，Ethos-U55 是一種專用的微型 NPU，提供 64 到 512 GOP/s 的強大算力。這意味着，更復雜的機器學習推理可以直接在機器人「邊緣」進行，無需依賴外部強大的電腦，讓機器人的視覺感知和響應更加實時、智能，這讓它的「生命感」更上一層樓。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;超聲波傳感器&lt;/strong&gt;：它能像蝙蝠一樣探測距離，幫助機器人避開障礙物，實現更安全的導航。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;光線傳感器&lt;/strong&gt;：讓 Bittle 能感知環境光線的強弱，甚至可以實現「追光」或「避光」的行為。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;觸摸傳感器&lt;/strong&gt;：當你的手指靠近它時，它能通過電容變化感知到，實現更自然的物理交互。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;手勢傳感器&lt;/strong&gt;：讓 Bittle 能識別你的手勢，比如「向上」、「向下」、「向左」、「向右」，甚至更復雜的多方向手勢，實現直觀的非接觸式控制。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;PIR 運動傳感器&lt;/strong&gt;：它能檢測到範圍內的運動，通常是人類的運動，讓機器人能感知到你的到來並做出反應。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;紅外距離傳感器&lt;/strong&gt;：通過反射紅外光來測量距離，特別適合物體跟蹤或循線等應用。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;語音指令模塊&lt;/strong&gt;：它讓機器人能聽懂你的聲音，無需喚醒詞，支持中英文，甚至可以自定義指令，讓交互變得無比自然和流暢。&lt;/p&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;三自由度機械爪&lt;/strong&gt;：它可以接插上述擴展模塊，並能實現在 1 秒內連續 3 次開合捕獲物體。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;這些多樣化的傳感器，讓 Bittle 不再只是一個執行命令的機器，它能更全面地感知世界，並以更自然的方式與我們互動，真正變得「有血有肉」。&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-19646698612d945ff1d9feea574a22f6.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-19646698612d945ff1d9feea574a22f6.png" width="350" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h3 style="margin-left:0; margin-right:0; text-align:start"&gt;多維度的交互與編程：讓智能觸手可及——我的堅持與分享&lt;/h3&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我們一直致力於讓 OpenCat 的控制和編程變得簡單而強大，滿足從初學者到專業開發者的所有需求。這其中，有我最初的堅持，也有團隊夥伴們共同的努力和智慧。&lt;/p&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;語音指令：讓它聽懂你的心聲&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;我一直夢想着能和機器人像和寵物一樣自然地交流。&lt;strong&gt;語音指令模塊&lt;/strong&gt;就是我們實現這一夢想的關鍵一步。我們砍掉了喚醒詞，你不用喊「嘿，Bittle」，直接説出指令它就能聽懂，這讓交互變得無比流暢和自然。&lt;/p&gt; &lt;/li&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;它支持 40 個預設的英語和中文指令，更棒的是，你還可以錄製多達 10 個自定義指令，每個最多六個音節，讓你的機器人擁有獨一無二的「口令「。&lt;/p&gt; &lt;/li&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;在 NyBoard 時代，它通過 Grove 接口連接。但隨着 BiBoard 的到來，特別是 BiBoard V1，語音識別功能已經深度集成到主板上，實現了支持雙語多詞的獨立智能語音識別，還有 10 個可由用戶錄製的開放指令。這意味着，機器人能更精準地理解你的指令，並用清晰的聲音回應你，甚至無需外部模塊就能實現複雜的語音交互，極大地增強了它的「生命感」。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;手柄與遊戲手柄：指尖的舞動&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;除了語音，我們還提供了多種物理控制方式。比如，基於 Micro:Bit 的&lt;strong&gt;遊戲手柄&lt;/strong&gt;。這個小巧的控制器集成了操縱桿和按鈕，甚至還有蜂鳴器和振動馬達，讓你能通過指尖的舞動，實時、精準地控制 Bittle 的每一個動作。這對於教學、競賽或者只是享受純粹的操控樂趣來説，都是絕佳的選擇。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-87cb64b071c1eb1e072284284d7408b4.jpg" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-87cb64b071c1eb1e072284284d7408b4.jpg" width="556" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;移動應用程序：掌上指揮中心&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;為了讓控制更便捷，我們開發了功能強大的&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Petoi 移動應用程序&lt;/strong&gt;。它就像你的掌上指揮中心，可以輕鬆完成關節校準、控制機器人執行各種姿態和步態，甚至直接在手機上進行編程。無論是 Android 還是 iOS 用戶，都能通過藍牙（BiBoard 無需加密狗）輕鬆連接，隨時隨地與你的機器人互動。你甚至可以在應用裏創建自定義命令，或者從 GitHub 導入新的技能，讓你的機器人不斷學習新花樣。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-8ef7a6c45f4f7cb9995355841aad2605.jpg" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-8ef7a6c45f4f7cb9995355841aad2605.jpg" width="540" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;桌面應用程序：專業開發者的利器&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;對於更專業的開發者和創客，我們提供了&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;Petoi 桌面應用程序&lt;/strong&gt;。它是一個功能豐富的工具集，不僅能用來上傳固件、校準關節，更重要的是，它內置了&lt;strong&gt;技能合成器&lt;/strong&gt;。你可以可視化地設計機器人的動作序列，然後導出為代碼，這大大簡化了複雜動作的創作過程。這款應用是用 Python 和 Tkinter 編寫的，而且是開源的，這意味着你可以深入瞭解它的實現細節，甚至根據自己的需求進行修改和擴展。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-522b1f21fc0e38c35ee671d0ec44a9ac.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-522b1f21fc0e38c35ee671d0ec44a9ac.png" width="611" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;ul style="list-style-type:disc"&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;編程積木：人人都是創造者&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;我們堅信，編程不應該有門檻。所以，我們投入大量精力，為 OpenCat 打造了直觀的&lt;strong&gt;編程積木環境&lt;/strong&gt;。&lt;/p&gt; 
    &lt;ul style="list-style-type:square"&gt; 
     &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;Petoi 編程積木&lt;/strong&gt;：這是一個基於 Scratch 的拖拽式編程環境，支持有線和藍牙連接，最棒的是，它能生成 Python 代碼，讓初學者在玩樂中自然過渡到文本編程。&lt;/p&gt; &lt;/li&gt; 
     &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;Codecraft&lt;/strong&gt;：TinkerGen 為 Bittle 開發的圖形化編程環境，同樣提供了免費課程，讓孩子們輕鬆學習編程。&lt;/p&gt; &lt;/li&gt; 
     &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;Mind+&lt;/strong&gt;：另一個類似 Scratch 的編程工具，可以直接對機器人硬件編程，並支持自動翻譯成 Python。它甚至能通過積木讀取攝像頭和 IMU 數據，讓圖形化編程也能玩轉高級功能。 這些積木環境，是我們為了讓更多人，特別是孩子們，能夠輕鬆進入機器人世界而付出的努力。它大大降低了學習門檻，培養他們的計算思維和解決問題的能力，真正實現了「人人都是創造者」的願景，讓每個人都能為自己的機器人注入「生命感」。&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;文本編程：深度定製與無限可能&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;當然，對於那些渴望深度定製和探索高級應用的朋友，OpenCat 也提供了強大的文本編程接口：&lt;/p&gt; 
    &lt;ul style="list-style-type:square"&gt; 
     &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;Arduino IDE (C/C++)&lt;/strong&gt;：作為 OpenCat 固件的核心開發環境，它允許我們用 C/C++ 進行低級控制和性能優化，直接與傳感器和執行器交互。我們還提供了免費的 C++ 機器人課程，幫助大家深入學習。&lt;/p&gt; &lt;/li&gt; 
     &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;Python API&lt;/strong&gt;：Python 作為機器人和 AI 領域的「膠水語言」，我們的 Python API 提供了高級控制接口，可以發送串行命令，實現多機器人連接，以及語音、視覺和深度學習等高級 AI 應用的集成。你可以用它來編排複雜的任務序列，甚至讓機器人執行無限長的任務列表。&lt;/p&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;&lt;strong&gt;課程與教育資源：知識的燈塔&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type:circle"&gt; 
   &lt;li style="list-style-type:unset"&gt; &lt;p style="text-align:justify"&gt;OpenCat 不僅僅是一個機器人，它更是一個教育平台。我們為此投入了大量資源，構建了一套從 K12 到研究生階段的&lt;strong&gt;綜合 STEM 和機器人課程體系&lt;/strong&gt;。無論是基於積木的入門課程，還是深入 C++ 和 Python 的高級編程，我們都提供了豐富的教程、視頻和項目，甚至與科羅拉多大學博爾德分校等機構合作，將 OpenCat 引入課堂。我們希望通過這些資源，點亮更多人對機器人和人工智能的興趣，培養未來的工程師和創造者。&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2 style="margin-left:0; margin-right:0; text-align:start"&gt;展望：與你同行，共創未來——我的夢想與我們的征途&lt;/h2&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div style="text-align:center"&gt;
 &lt;img alt="http://oscimg.oschina.net/AiCreationDetail/up-28fa374a2755c9946fe21379500c475a.png" height="auto" src="http://oscimg.oschina.net/AiCreationDetail/up-28fa374a2755c9946fe21379500c475a.png" width="893" referrerpolicy="no-referrer"&gt;
&lt;/div&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;從 Nybble 的木質骨架到 Bittle 的智能身軀，OpenCat 的每一步都凝聚了我們無數的心血和汗水。這七八年走來，有孤獨的探索，有團隊的並肩作戰，有成功的喜悅，也有無數次跌倒再爬起來的磨礪。它不再僅僅是一個機器人，它是一個平台，一個夢想的載體。它證明瞭，開源的力量，能夠讓複雜的機器人技術變得觸手可及。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;如今，我們的 OpenCat 機器人已經通過&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FPetoi.com" target="_blank"&gt;&lt;strong&gt;Petoi.com&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;官方商店&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;和 **Amazon（美國、加拿大、墨西哥站點）**&lt;/code&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;面向全球銷售。無論是 Bittle、Bittle X 還是 Nybble Q，以及各種配件和傳感器，我們都建立了穩定的生產線，確保這些經濟實惠的機器人套件能送達世界各地的愛好者手中&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;code&gt;[3, 37]&lt;/code&gt;。看到它們被應用於教育、研究，甚至成為家庭中的一員，我感到無比欣慰。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;我們誠摯地邀請你，造物社區的每一位成員，加入到 OpenCat 的旅程中來。無論你是代碼高手，還是創意無限的設計師，亦或是剛剛踏入機器人世界的新手，你的每一次貢獻，無論是代碼、教程、創意，還是僅僅是分享你的使用經驗，都將成為推動 OpenCat 持續發展的強大動力。因為，OpenCat 的成功，離不開每一個像你一樣，對創造充滿熱情的人。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;未來，我們看到 OpenCat 能夠集成更強大的邊緣 AI 芯片，擁有更精準的視覺和更智能的決策能力；我們夢想它能實現更精細、更仿生的運動，在各種複雜地形上自由穿梭；我們期待它能連接更多奇妙的傳感器，感知更豐富的世界。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;OpenCat 的故事，才剛剛開始。讓我們一起，用代碼和創意，繼續書寫這個關於機器生命、關於創造、關於分享的篇章。&lt;/p&gt; 
&lt;p style="color:#252933; text-align:justify"&gt;期待在社區裏與你相遇！&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p style="color:#252933; text-align:justify"&gt;&lt;strong&gt;8 月 28 日，開源中國源創會（以及 IOTE 國際物聯網展會）將會舉辦&lt;span style="color:#e74c3c"&gt;，屆時 OpenCat 會在線下與大家相見，可編程機器貓將與你互動，看完本文，如果你感興趣歡迎到活動現場玩耍！&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;div style="text-align:left"&gt;
  ⏰活動時間：8 月 28 日 (周 4️⃣) 14:00 - 17:00
 &lt;/div&gt; 
 &lt;div style="text-align:left"&gt;
  🏠地點：深圳・國際會展中心 (寶安) 11 號館・會場五
 &lt;/div&gt; 
 &lt;div style="text-align:left"&gt;
  活動詳情：
  &lt;span&gt;&amp;nbsp;&lt;/span&gt;
  &lt;a href="https://www.oschina.net/event/8598019"&gt;https://www.oschina.net/event/8598019&lt;/a&gt;
 &lt;/div&gt; 
 &lt;div style="text-align:left"&gt; 
  &lt;p style="margin-left:0; margin-right:0"&gt;&lt;img height="301" src="https://static.oschina.net/uploads/space/2025/0818/141219_KzV4_3820517.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;/blockquote&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366918</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366918</guid>
      <pubDate>Mon, 18 Aug 2025 06:31:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>這一次的源創會，不會只讓你坐着聽講</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;div&gt; 
 &lt;div&gt;
  這一次，我們不僅帶來前沿的技術分享，還準備了豐富的互動體驗環節！在現場，你不僅能聆聽專家的深度演講，還能和 
  &lt;strong&gt;機器貓、&lt;/strong&gt;
  &lt;strong&gt;機器狗&lt;/strong&gt;
  &lt;strong&gt;、&lt;/strong&gt;
  &lt;strong&gt;AI&lt;/strong&gt;
  &lt;strong&gt; 智能助手&lt;/strong&gt; 等一大波 AI 硬件設備面對面玩耍。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  ✨ 來看幾個「明星選手」：
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#245bdb"&gt;🐾 &lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt;OpenCat 仿生四足機器人&lt;/strong&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0818/140749_rMVD_3820517.gif" referrerpolicy="no-referrer"&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  基於 Arduino &amp;amp; Raspberry Pi 的開源框架，從宿舍走向世界舞台的開源寵物機器人。它的靈活動作和 STEM 教育理念，讓你看到「平價波士頓動力」的可能。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#245bdb"&gt;🐕 &lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt;靈動狗 LinkDog&lt;/strong&gt;&lt;/span&gt;
  &lt;br&gt; 
  &lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0818/141023_7bfA_3820517.gif" referrerpolicy="no-referrer"&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  通過微信小程序就能遙控的四足機器狗，能跑、能趴、還能撒嬌「伸懶腰」。更妙的是，它還能接入 AI，實現語音對話與個性化動作編程。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#245bdb"&gt;👆 &lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt;Finger Point 動態手勢交互&lt;/strong&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;img alt="" src="https://static.oschina.net/uploads/space/2025/0818/141103_4bs3_3820517.gif" referrerpolicy="no-referrer"&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  基於機器視覺的手勢追蹤技術，揮揮手就能操作 XR、電視、會議大屏，未來的人機交互就藏在你的指尖。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#245bdb"&gt;🛠️ &lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt;MeowKit —— 創客的 &lt;/strong&gt;&lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt;AI&lt;/strong&gt;&lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt; 多功能工具&lt;/strong&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;img height="1024" src="https://static.oschina.net/uploads/space/2025/0818/141134_APVv_3820517.png" width="1448" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;p&gt;一個開箱即用、完全開源的創客神器：AI 對話、機器學習實驗、硬件 DIY、桌面互動……玩到停不下來！&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#245bdb"&gt;📡 &lt;/span&gt;
  &lt;span style="color:#245bdb"&gt;&lt;strong&gt;ESP32-C6 多傳感器智能家居&lt;/strong&gt;&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;img height="716" src="https://static.oschina.net/uploads/space/2025/0818/141150_3jDq_3820517.png" width="1354" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  二氧化碳、溫濕度、雷達、氣壓、光照……各種傳感器一體化，支持 Zigbee/WiFi，輕鬆接入 Home Assistant，感受真正的「萬物皆可聯動」。
 &lt;/div&gt; 
 &lt;div&gt;
  &amp;nbsp;
 &lt;/div&gt; 
 &lt;div&gt;
  當然，不僅僅這幾個。更驚喜的是，本次活動與 
  &lt;strong&gt;IOTE 國際&lt;/strong&gt;
  &lt;strong&gt;物聯網&lt;/strong&gt;
  &lt;strong&gt;展&lt;/strong&gt; 同場舉辦，更多物聯網項目和酷炫黑科技，等你一站式體驗！
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;img height="1746" src="https://static.oschina.net/uploads/space/2025/0818/141200_t3hi_3820517.png" width="1488" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#e74c3c"&gt;⏰活動時間：8 月 28 日 (周 4️⃣) 14:00 - 17:00&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  &lt;span style="color:#e74c3c"&gt;🏠地點：深圳・國際會展中心 (寶安) 11 號館 · 會場五&lt;/span&gt;
 &lt;/div&gt; 
 &lt;div&gt;
  活動詳情：
  &lt;a href="https://www.oschina.net/event/8598019"&gt;https://www.oschina.net/event/8598019&lt;/a&gt;
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;p&gt;&lt;img height="301" src="https://static.oschina.net/uploads/space/2025/0818/141219_KzV4_3820517.png" width="300" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366915</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366915</guid>
      <pubDate>Mon, 18 Aug 2025 06:12:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>做好這幾件事，軟件公司才有可能賺錢</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;p&gt;&lt;strong&gt;這是我關於軟件公司賺錢系列的第三篇文章。前面我分別寫了&lt;/strong&gt;&lt;a href="https://my.oschina.net/easysoft/blog/18687330" target="_blank"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;《為什麼中國的軟件公司不賺錢》&lt;/strong&gt;&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;和&lt;/strong&gt;&lt;a href="https://my.oschina.net/easysoft/blog/18688181" target="_blank"&gt;&lt;strong&gt;&lt;span style="color:#337fe5"&gt;《在中國做軟件行業如何賺錢》&lt;/span&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;兩篇文章。&lt;/strong&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#39485d"&gt;這兩篇文章發佈後，贏得了眾多網友的共鳴，大家展開了熱烈的討論，這些討論也給了我很多的啓發。中國軟件公司之所以不賺錢，是因為中國的軟件公司是在非標準化的市場裏面做非標準化的事。要想賺錢，就儘量選標準化的市場，並且儘可能地提高公司軟件管理的標準化程度。&lt;/span&gt;&lt;br&gt; &lt;br&gt; &lt;span style="background-color:#ffffff; color:#337fe5"&gt;&lt;strong&gt;今天就這個話題再來展開聊聊，做好哪些事情，能夠幫助中國軟件公司賺錢呢？&lt;/strong&gt;&lt;/span&gt;&lt;span style="background-color:#ffffff; color:#39485d"&gt;關於市場定位、公司戰略方面，這篇文章裏面就不涉及了。篇幅有限，講得都是一些大框的東西，更具體的實操層面的大家可以翻翻我之前寫的一些文章。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;首先是要嚴格控制公司規模。&lt;/strong&gt;&lt;/span&gt;國外有很多規模很大的軟件公司，非常賺錢，比如微軟、甲骨文。他們擁有幾十年的技術沉澱和市場的壟斷地位，賺得是品牌和壟斷的錢。但對於絕大多數的中國軟件公司來講，很難再有機會成長為像微軟、甲骨文這樣規模的軟件公司。中國近十多年 toB 領域的投資熱了一陣，拿到投資的軟件公司都走上了規模擴張的道路。但人員規模擴展帶來的收入增加，遠遠比不上人員規模擴展帶來的成本增加，這些公司也因此陷入了中間規模的死亡地帶。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;所以如非必要，不要增加人員規模。&lt;/strong&gt;公司可以想辦法通過流程優化、工具優化、人員提升、外部合作等方式來應對業務的增長。如果確實需要增加人員，也要採取緊縮的人員配置策略。只有嚴格控制公司規模，才有可能保證公司的效率，控制住運營的成本，從而提升公司的盈利水平。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;其次是控制公司的層級。&lt;/strong&gt;&lt;/span&gt;公司層級越高，管理成本越高，溝通效率越低，響應速度越慢，競爭力越差，賺錢越不容易。在中國有很多的軟件公司，規模比不上微軟、甲骨文這樣的規模，但公司層級與之相比卻毫不遜色。一層層的管理層級下來，頭銜都很亮眼，但效率沒有了，盈利空間也被吃掉了。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;所以如非必要，不要增加管理層級，儘量保持扁平化管理。&lt;/strong&gt;我比較提倡公司選擇開放性辦公空間，管理層和員工在一起辦公，也有助於協同效率的提升。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;第三是流程。&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;公司流程不是越松越好，也不是越嚴越好，應當在中間取一個度。&lt;/strong&gt;如果流程比較寬鬆，或者就沒有明確的流程，協作主要靠開會、聊天、文檔等形式。這是大部分小規模團隊的現狀。這種協作方式容易出錯，不容易追溯，而且經驗都沉澱在個人身上，不利於組織的知識傳承。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;但流程過嚴也不好，有很多團隊上了規模之後，制定了比較嚴苛的流程規範，而且流程制定的目的不是為了協作效率，更多是為了管控留痕和責任共擔，這樣的流程會讓人反感，不僅會增加大量的不必要的成本，還會嚴重地降低協作的效率，最終會把公司的文化推向官僚主義、形式主義，這也是要不得的。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;第四就是工程。&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;工程實踐方面我的建議是越重視越好，投入越大越好。&lt;/strong&gt;因為這是一個軟件公司最終生存的根本。一大羣人花了大量的時間做出的所有努力，最終就沉澱在一行行的代碼裏面。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;如果不重視軟件工程的話，那麼代碼就是屎山，是包袱，是負債，最終的結局就是團隊被拖垮。相反如果團隊比較重視軟件工程，一直在通過各種的方法來保證代碼的可維護性，譬如重構、代碼評審、自動化測試等實踐，這樣的代碼就是資產，是能夠跟其他競爭對手逐漸拉開差距的競爭優勢。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;第五就是文化。&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;越開放、越尊重團隊的文化，越有助於公司提高盈利水平。&lt;/strong&gt;文化不是掛在牆面上的幾個詞，幾個字，這種叫做口號。一個團隊刻在骨子裏面的東西，遇到重大問題時用來做決策判斷的東西，這才是文化。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;不同的文化會直接決定一個公司的管理方式和對外發布的產品的定位、質量，也決定了產品的創新性、原創性，最終決定了產品的生命力。&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;strong&gt;國內的軟件行業匯聚了一大批優秀的人才，能在軟件行業堅守的，都是有情懷的一羣人。現階段中國的軟件行業大環境如此，公司要想實現盈利，就需要付出更多的努力。&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#39485d; margin-left:0; margin-right:0; text-align:start"&gt;&lt;span style="color:#337fe5"&gt;&lt;strong&gt;以上是我自己的一些總結和思考，與各位共勉。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/easysoft/blog/18688521</link>
      <guid isPermaLink="false">https://my.oschina.net/easysoft/blog/18688521</guid>
      <pubDate>Mon, 18 Aug 2025 05:54:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>ChatGPT 移動端收入突破 20 億美元</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;OpenAI 的 ChatGPT 移動應用正在移動端市場創造驚人的收入神話。根據應用情報提供商 Appfigures 最新分析，自 2023 年 5 月推出以來，ChatGPT 的 iOS 和 Android 應用已在全球消費者支出中達到 20 億美元，這一數字約為 Claude、Copilot 和 Grok 等競爭對手移動端終身消費總和的 30 倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;2025 年至今，ChatGPT 移動應用已創造 13.5 億美元收入，與 2024 年同期（1-7 月）的 1.74 億美元相比，同比增長高達 673%。該應用目前平均每月創造近 1.93 億美元收入，遠超去年同期的 2500 萬美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;這一表現顯著超越了最接近的競爭對手。排名第二的 Grok 今年迄今約創造 2560 萬美元收入，僅為 ChatGPT 的 53 分之一。Grok 的平均月消費者支出約為 360 萬美元，僅佔 ChatGPT 的 1.9%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;這些數據表明，其他消費級聊天機器人在移動設備上要追趕 ChatGPT 的主導地位還有很長的路要走。需要注意的是，這些數字並未提供 AI 公司整體收入的完整畫面，因為消費者、團隊和企業還可以通過網頁訂閲 AI 服務，這些公司還通過 API 等其他方式創造收入。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;&lt;img height="270" src="https://oscimg.oschina.net/oscnet/up-b4bc1ff8c60f19ece93e7fe8f9d9de508b7.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;然而，這些新數據為瞭解應用在消費者中的受歡迎程度提供了重要窗口，反映了用戶通過移動應用商店發現和付費使用這些 AI 助手的情況。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;值得注意的是，當 xAI 的 Grok 於 2023 年 11 月推出時（晚於 ChatGPT），最初並沒有獨立的 iOS 或 Android 應用。用戶只能通過 X 平台與這款 AI 聊天機器人互動。Grok 直到 2025 年 1 月初才通過自己的 iOS 應用在移動設備上提供服務，並於 3 月 4 日登陸 Google Play。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;從單次下載消費來看，ChatGPT 的終身全球單次下載支出為 2.91 美元，而 Claude 為 2.55 美元，Grok 為 0.75 美元，Copilot 僅為 0.28 美元。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在美國市場，ChatGPT 的單次下載支出更高，達到 10 美元，美國市場佔該應用迄今總收入的 38%。德國是第二大市場，佔 ChatGPT 終身總支出的 5.3%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;從下載量角度看，ChatGPT 的領先優勢同樣明顯。該應用迄今已被全球安裝約 6.9 億次，而 Grok 僅有 3950 萬次。這也為 X 平台所有者埃隆·馬斯克最近關於 App Store 涉嫌偏袒 ChatGPT 在排行榜中地位的抱怨提供了更好的背景理解。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;ChatGPT 目前全球平均月下載量約為 4500 萬次，比 2024 年 1-7 月的約 1600 萬次增長了 180%。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;2025 年至今，ChatGPT 應用已被下載 3.18 億次，是去年同期 1.13 億次的 2.8 倍。按安裝數量計算，印度是最大市場，佔終身下載量的 13.7%，而排名第二的美國佔所有下載量的 10.3%。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366909</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366909</guid>
      <pubDate>Mon, 18 Aug 2025 05:52:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>多家企業盯上谷歌 Chrome，奧特曼表態 OpenAI 或考慮收購</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;OpenAI 首席執行官山姆·奧特曼近日在接受媒體採訪時，披露了公司多項發展計劃，其中表露對谷歌 Chrome 瀏覽器的收購興趣，引發業界廣泛關注。&lt;/p&gt; 
&lt;p&gt;奧特曼在採訪中提及，ChatGPT 目前用戶增長態勢迅猛，每週觸達用戶已超 7 億，較一年前規模擴大四倍，API 流量在 48 小時內翻倍，用戶數量持續刷新紀錄。他表示，未來 ChatGPT 的用戶規模有望進一步擴大，「很快，每天都會有數十億人在使用 ChatGPT」。&lt;/p&gt; 
&lt;p&gt;關於收購 Chrome 瀏覽器的話題，&lt;strong&gt;奧特曼明確表示：「如果 Chrome 真的要出售，我們應該考慮。」&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;事實上，此前已有多家科技公司加入對 Chrome 的競逐。美國 AI 初創公司 Perplexity 已向谷歌提出 345 億美元的收購要約，其公司估值約為 180 億美元；美國 AI 搜索引擎 Search.com 也宣佈參與，提出 350 億美元的收購意向。不過，目前業界普遍認為谷歌同意出售的可能性較低。&lt;/p&gt; 
&lt;p&gt;值得注意的是，美國司法部正對谷歌提起反壟斷訴訟，其中提出包括拆分 Chrome 瀏覽器在內的多項要求，這也成為科技公司關注 Chrome 的背景因素之一。&lt;/p&gt; 
&lt;p&gt;在行業判斷上，奧特曼承認當前存在「AI 泡沫」，投資者對人工智能領域「過度興奮」，但他強調，人工智能仍是「近年來最重要的技術變革」。對於公司治理，他坦言自己未必適合領導上市公司，甚至表示三年後或許會由 AI 掌管 OpenAI。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;相關閲讀&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/349444/don-t-make-google-sell-chrom" target="news"&gt;不要讓谷歌出售 Chrome&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/346989/google-chrome-suffer-if-forced-to-sell-parisa-tabriz" target="news"&gt;谷歌認為自己是唯一能運營 Chrome 的公司，如若轉手，將「萬劫不復」&lt;/a&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366896</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366896</guid>
      <pubDate>Mon, 18 Aug 2025 04:03:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>ReiserFS 文件系統在 Linux 內核的最後殘留被移除</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;去年發佈的 Linux 6.13 正式移除了 ReiserFS 文件系統，但它的痕跡並沒有完全清除掉。SUSE 開發者 David Sterba 在內核文檔和部分工具中發現 ReiserFS 的殘留後，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20250813100053.1291961-1-dsterba%40suse.com%2F" target="_blank"&gt;提交補丁&lt;/a&gt;移除了這些內容。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0818/112840_DLss_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;儘管代碼已刪除，但&amp;nbsp;ReiserFS R5 哈希函數仍被保留，這是因為該哈希函數仍被部分內核代碼所使用，因此不能完全清除。&lt;/p&gt; 
&lt;p&gt;與 ReiserFS 相關的擴展如 Reiser4 和 Reiser5 目前仍處於 out-of-tree 狀態，已經多年無人維護。開發倉庫三年未更新，顯示這些項目已經真正走到盡頭。這標誌着 Hans Reiser 創造的 Linux 文件系統時代徹底結束，連文檔中的最後痕跡都被清理乾淨了。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366884/reiserfs-documentation-cleanse</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366884/reiserfs-documentation-cleanse</guid>
      <pubDate>Mon, 18 Aug 2025 03:33:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>我國首個法律垂直大模型「小包公」發佈</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span style="color:#000000"&gt;我國首個法律領域垂直大模型「小包公法律內容大模型」於日前發佈。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;該模型由華南師範大學法學院王燕玲教授團隊研發，已通過國家互聯網信息辦公室深度合成服務算法備案，採用「先進通用大模型+專業垂直大模型」雙引擎架構，深度整合 2 億餘份裁判文書、420 萬餘部法律法規，結合法律知識圖譜和檢索增強生成技術，可在全法律場景提供可溯源、可驗證的精準服務。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="335" src="https://oscimg.oschina.net/oscnet/up-324a218385c3269f90403dec94cebed6441.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;王燕玲介紹，該模型具備動態學習機制，能根據實踐反饋持續迭代，以法律為準繩動態幹預回答準確性，目前已在廣東、安徽等地司法實踐中廣泛應用。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在非法採礦等公益訴訟案件辦理中，系統可通過人物關係圖譜排查涉案人員；在刑事審查環節，12 類典型案件的辦案人員輸入完整卷宗後，系統能自動生成分析報告與相關文書，有效提升閲卷與量刑分析效率。現場嘉賓指出，法律 AI 的普及將緩解我國法律服務資源分佈不均問題——當前全國 70 萬名執業律師主要集中於東部發達地區，西部部分縣域無律師事務所，智能系統可成為普惠法律服務的重要補充。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;在基層司法實踐中，大模型的賦能效果已逐步顯現。據介紹，湛江市司法局引入「小包公」智能行政複議一體化系統後，在當事人材料齊全的情況下，案件焦點識別準確率達 100%，證據識別採信準確率約 95%，文書撰寫時間縮減 75%，成為全國首個在兩級司法局運用司法大模型賦能行政複議工作的城市。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:#000000"&gt;安徽懷寧檢察院自 2018 年開展認罪認罰精準量刑試點以來，運用該系統生成的量刑建議採納率超過 99%；清遠市人民檢察院藉助系統人物關係圖譜，成功識別傳統辦案中易遺漏的涉案人員，檢察官 AI 工具使用率達 100%。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366880</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366880</guid>
      <pubDate>Mon, 18 Aug 2025 03:25:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>虛引用 GC 耗時分析優化（由 1.2 降低至 0.1 秒）</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;背景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;線上應用頻繁出現超時告警（超時時間 1 s）： getUiToken 接口異常狀態碼「-1」出現 4037 次 (失敗描述:業務請求異常)，超過閾值 50，協議：http，為服務端接口。當前失敗率為 0%，當前平均響應時間為 150ms，TP50 為 2ms,TP90 為 896ms，TP99 為 1024ms,TP999 為 1152ms,MAX 為 1280ms。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;環境信息&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div&gt; 
 &lt;span style="color:#000000"&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;服務器配置為，Linux 4c8g 標配機器&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="color:#000000"&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;JVM 參數配置：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;-server -Djava.library.path=/usr/local/lib -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/export/log -Djava.awt.headless=true -Dsun.net.client.defaultConnectTimeout=60000 -Dsun.net.client.defaultReadTimeout=60000 -Djmagick.systemclassloader=no -Dnetworkaddress.cache.ttl=300 -Dsun.net.inetaddr.ttl=300 -Xms5G -Xmx5G -XX:+UseG1GC -XX:G1HeapRegionSize=4m -Xloggc:/export/log/$APP_NAME/gc_detail.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=10m -XX:MaxTenuringThreshold=15 -XX:+PrintTenuringDistribution -XX:+PrintHeapAtGC&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;div&gt; 
 &lt;span style="color:#000000"&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;接口流量情況：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//c8ebd5b4ebdc22b41187bcf663870fbd.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h1_3"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;問題排查&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;分析代碼實現，getUiToken 只是簡單的內存數據獲取並返回，沒有其他複雜操作，不存在有耗時操作&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//7d264c94f843fd53fefc04a5ec2b61cf.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;接着藉助 SGM 監控平台分析下接口耗時情況，發現方法執行的耗時都處在等待中，為什麼會有這多長的等待時間呢？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//1c5605b1f1d9d9253dc8ed6c54437413.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;業務代碼很簡單，只是內存級別的獲取，序列化和反序列化也不可能耗時這麼久， 難道是 GC 的原因 ？ 因為 JVM 之前就配置了 -Xloggc 日誌輸出，所以先分析下 GC 日誌情況，看看 GC 是否存在異常情況（工具 gcViewer）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//a9062cc1660d6f240fa4e602a7cadd85.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;果然，光看吞吐量 99.3% 和 full gc 次數 0，感覺性能好像還不錯的，但 4227 次 young gc （平均 20 多秒一次） 和 max 1.25 秒的耗時，就有點離譜，分析 GC 日誌詳情&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//c7163e4712619389f5446972e0f165f0.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;隨機搜查了一個 GC 耗時在 1s 以上的日誌，發現 1.02 s 的 gc 有 977.3 ms 是在處理 Ref Proc，為什麼這個耗時會這麼長 ？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;ref-proc 是對各種軟弱虛引用等的處理，處理 soft、weak、phantom、final、JNI 等等引用的時間&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;具體是那種引用類型的耗時長，可以通過增加 JVM 參數 -XX:+PrintReferenceGC 打印引用 GC 類型 ，重新上線一段時間後觀察 GC 日誌&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//557127b6d3daf4dcb964809775d3d0d6.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;發現耗時基本都在 PhantomReference 類型的對象上，為什麼會有這麼多這個對象？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;PhantomReference 是什麼？ 1、虛引用也稱為「幽靈引用」，它是最弱的一種引用關係。 2、如果一個對象僅持有虛引用，那麼它就和沒有任何引用一樣，在任何時候都可能被垃圾回收器回收。 3、為一個對象設置虛引用關聯的唯一目的只是為了能在這個對象被收集器回收時收到一個系統通知。 4、當垃圾回收器準備回收一個對象時，如果發現它還有虛引用，就會在垃圾回收後，將這個虛引用加入引用隊列，在其關聯的虛引用出隊前，不會徹底銷燬該對象。所以可以通過檢查引用隊列中是否有相應的虛引用來判斷對象是否已經被回收了。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;為了搞清楚 PhantomReference 具體都是哪些對象，我們需要 dump 堆文件查看對象的分佈（內存分析工具 MAT），dump 時最好將流量摘除後操作，以免影響線上。查看直方圖中的對象發現有 4340 個虛引用對象，和 GC 日誌中的數量基本對的上。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//5bdbcf18eaa7f63199e2311d76f088ab.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;那為什麼會有這麼多 ConnectionPhantomReference 對象呢 ？ 這個東西有什麼用呢 ？ 源碼如下 （mysql-connector-java 版本 5.1.44）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;// 相關的核心邏輯&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NonRegisteringDriver&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;implements&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;java.sql.Driver&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;final&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConcurrentHashMap&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;ConnectionPhantomReference, ConnectionPhantomReference&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; connectionPhantomRefs &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConcurrentHashMap&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;ConnectionPhantomReference, ConnectionPhantomReference&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;final&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ReferenceQueue&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;ConnectionImpl&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; refQueue &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ReferenceQueue&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;ConnectionImpl&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; 

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;trackConnection&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Connection&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; newConn&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionPhantomReference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; phantomRef &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionPhantomReference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionImpl&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; newConn&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; refQueue&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        connectionPhantomRefs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;put&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;phantomRef&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; phantomRef&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionImpl&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;extends&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionPropertiesImpl&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;implements&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;MySQLConnection&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionImpl&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;String&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; hostToConnectTo&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;int&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; portToConnectTo&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Properties&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; info&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;String&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; databaseToConnectTo&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;String&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; url&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;throws&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;SQLException&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NonRegisteringDriver&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;trackConnection&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;this&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
  &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過代碼發現，每次新建數據庫連接 Connection 時都會向 connectionPhantomRefs 存放一個對象，那麼已經使用 druid （版本：1.0.15）線程池為什麼還會生成這麼多新鏈接 ？ 接着查看項目中的數據庫配置，發現數據源使用的是默認配置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;# 線程池使用的默認配置
spring:
  datasource:
    url: jdbc:mysql://xxxxxxxxx?useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;allowMultiQueries=true&amp;amp;serverTimezone=GMT%2B8
    username: xxxx
    password: xxxx
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//e1d56e1b7808007139709112a2545684.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;默認配置中，線程池中的連接存活時間為 30 分鐘，最小閒置線程數為 0，因此雖使用了線程池也還是會不斷的創建新的鏈接，並增加到 connectionPhantomRefs 集合中，累計一定量之後就會影響 ref-proc 耗時。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_4"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如何解決 ？&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;既然因為它累計的量大導致 gc 時長變高，那麼我們分析下 connectionPhantomRefs 的作用到底是什麼 ？ &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;跟進 connectionPhantomRefs 引用處理對象，發現 connectionPhantomRefs 中的元素都是被 AbandonedConnectionCleanupThread 處理的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;/**
 * This class implements a thread that is responsible for closing abandoned MySQL connections,
 * i.e., connections that are not explicitly closed. 
 * There is only one instance of this class and there is a single thread to do this task. 
 * This thread's executor is statically referenced in this same class.
 *
 * 該類實現了一個負責關閉被遺棄的 MySQL 連接的線程，即未顯式關閉的連接。該類的實例只有一個，並且由單個線程執行此任務。該線程的執行器在此類中以靜態方式引用。
 */&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AbandonedConnectionCleanupThread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;implements&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Runnable&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;final&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ExecutorService&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; cleanupThreadExcecutorService&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; threadRef &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        cleanupThreadExcecutorService &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Executors&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;newSingleThreadExecutor&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ThreadFactory&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;newThread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Runnable&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; r&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; t &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"Abandoned connection cleanup thread"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                t&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;setDaemon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                t&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;setContextClassLoader&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AbandonedConnectionCleanupThread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;getClassLoader&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; threadRef &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; t&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        cleanupThreadExcecutorService&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;execute&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AbandonedConnectionCleanupThread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;run&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;for&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;try&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;checkContextClassLoaders&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Reference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;? extends ConnectionImpl&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; ref &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NonRegisteringDriver&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;refQueue&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;remove&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;5000&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ref &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;!=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;try&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionPhantomReference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; ref&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;cleanup&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;finally&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NonRegisteringDriver&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;connectionPhantomRefs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;remove&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ref&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;InterruptedException&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; e&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                threadRef &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Exception&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; ex&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;// Nowhere to really log this.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;根據 com.mysql.jdbc.AbandonedConnectionCleanupThread 類註釋信息，發現該類是 mysql 連接的兜底處理邏輯，負責關閉被遺棄的 MySQL 連接，主要有兩種情況&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1. 未顯式關閉的連接（代碼遺漏）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2. 異常未處理的連接（程序崩潰/未捕獲異常/網絡或事務超時導致的連接失效）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_5"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解決方案&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1. 優化 druid 連接池連接數配置 （按實際流量情況評估），增加連接存活時長到 59 分鐘（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;MySql wait_timeout 默認為 3600 秒&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;），最大限度減少新連接生成&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;spring:
  datasource:
    url: jdbc:mysql://xxxxxxxxx?useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;allowMultiQueries=true&amp;amp;serverTimezone=GMT%2B8
    username: xxxx
    password: xxxx
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 增加線程數
      minIdle: 4
      maxActive: 10
      initialSize: 4
      # 啓動檢測線程回收
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      validationQuery: select 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 3540000&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2. 開啓 ref-proc 並行處理：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#f3f5f9; color:#0abf5b"&gt;-XX:+ParallelRefProcEnabled&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; ，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt; G1 官網建議&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff; color:#333333"&gt;Reference Object Processing Takes Too Long Information about the time taken for processing of Reference Objects is shown in the Ref Proc and Ref Enq phases. During the Ref Proc phase, G1 updates the referents of Reference Objects according to the requirements of their particular type. In Ref Enq, G1 enqueues Reference Objects into their respective reference queue if their referents were found dead. If these phases take too long, then consider enabling parallelization of these phases by using the option &lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff; color:#ff4d4f"&gt;-XX:+ParallelRefProcEnabled.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3. 由於 connectionPhantomRefs 只是作為異常情況出現的兜底處理，我們項目中使用的線程池都會自動處理資源釋放的情況，不存在手動操作的情況，是不是可以定時清理這部分的內容或者不使用，目前使用最多的兩種方式是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;定時任務：清理虛引用列表數據&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;@Component&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;CleanPhantomRefsSchedule&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;final&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ScheduledExecutorService&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; CLEANER_EXECUTOR &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Executors&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;newSingleThreadScheduledExecutor&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;r &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; t &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;r&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"mysql-phantom-ref-cleaner"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        t&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;setDaemon&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;return&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; t&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;@PostConstruct&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;public&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;doTask&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        log&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;info&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"CleanPhantomRefsSchedule#doTask start"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;try&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Field&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; field &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NonRegisteringDriver&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;class&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;getDeclaredField&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"connectionPhantomRefs"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            field&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;setAccessible&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;// 定時輪訓&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            CLEANER_EXECUTOR&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;scheduleAtFixedRate&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;try&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Map&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?, ?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; connectionPhantomRefs &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Map&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;lt;?, ?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; field&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;get&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;// 這裏我設置的稍微大一些，對 gc 沒太大影響時不進行幹預&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                   &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;connectionPhantomRefs &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;!=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; connectionPhantomRefs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;size&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;500&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                        connectionPhantomRefs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;clear&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                        log&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;info&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"Cleared MySQL phantom references (count={})"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; connectionPhantomRefs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;size&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Exception&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; e&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                    log&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;error&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"connectionPhantomRefs clear error!"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; e&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
                &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;TimeUnit&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;HOURS&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;catch&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NoSuchFieldException&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; e&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
            &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;throw&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;IllegalStateException&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"Failed to initialize MySQL phantom refs field"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; e&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;@PreDestroy&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;shutdown&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
        CLEANER_EXECUTOR&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;shutdownNow&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;升級 mysql-connector-java 版本（8.0 以上），可以通過參數 -Dcom.mysql.cj.disableAbandonedConnectionCleanup=true 禁用虛引用生成&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;pre&gt;&lt;code&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;private&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;boolean&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;abandonedConnectionCleanupDisabled&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;Boolean&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;getBoolean&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;"com.mysql.cj.disableAbandonedConnectionCleanup"&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;

 &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;protected&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;static&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;void&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;trackConnection&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;MysqlConnection&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; conn&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;NetworkResources&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; io&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
    &lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;if&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;!&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;abandonedConnectionCleanupDisabled&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;···
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionFinalizerPhantomReference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;reference&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;=&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;new&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;ConnectionFinalizerPhantomReference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;conn&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;io&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&amp;nbsp;referenceQueue&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;connectionFinalizerPhantomRefs&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;add&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;(&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;reference&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;···&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;
&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我採用的是定時任務這種方式，因為項目升級 mysql-connector-java 版本會存在兼容性問題，其次是在虛引用量比較小的情況我希望這種兜底策略依舊可以生效，所以定時任務中只有在 connectionPhantomRefs.size() &amp;gt; 500 時才會幹預清理，而不是直接杜絕使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_6"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;驗證優化結果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;代碼及配置調整完成後再次上線，等待一天後，繼續分析 GC 日誌和堆轉儲文件 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//6440df82f8599d87cc53b61026e84e84.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//c58d0dbaaa585a67a28e5d7e697da2e7.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//5f41e588501b799ae57e534b121b6004.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;結論：上線後近 12 小時數據，GC 時間最大停頓時間由原先 1.25 降低至 0.1 秒，young gc 頻率由原先的 20 秒一次優化到 6 分鐘一次，PhantomReference 引用耗時縮減到 0.0001966 s， 持續觀察幾天，線上服務無超時告警且系統響應正常，優化符合預期結果。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18688164</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18688164</guid>
      <pubDate>Mon, 18 Aug 2025 03:08:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>360 官宣「All in Agent」戰略</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;在日前舉辦的 360 集團 20 週年榮耀慶典上，創始人周鴻禕發佈 360 集團下一階段的公司戰略：All In Agent。&lt;/p&gt; 
&lt;p&gt;周鴻禕表示，AI 的巨大機遇就在眼前，智能體將帶來個人角色和組織形態的重塑，當前正是重新出發、轉向新賽道的時刻，All in Agent 就是 360 的明確路線圖。周鴻禕勉勵全體員工要上下同心，堅定聚焦，力爭實現 「三個超級」：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;一是鼓勵 360 全員建立 AI 信仰、培養 AI 素養，思考「如何用智能體放大自身價值」，全員都要學會使用、搭建、管理、監督、領導智能體，與智能體深度協同，每個人都可以把自己打造成超級個體、超級員工；&lt;/li&gt; 
 &lt;li&gt;二是要求全公司各業務線、各部門以智能體化率衡量所有業務流程、崗位職能的進化水平，打造超級團隊、超級組織；&lt;/li&gt; 
 &lt;li&gt;三是用智能體重塑公司所有產品。在軟件開發 3.0 時代，新產品必須以智能體為範式進行功能開發，已在運營、服務的產品，必須以智能體進行重塑。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;為適配「All in Agent」戰略，360 全面升級使命、願景與價值觀：使命升級為「讓 AI 世界更安全更美好」，願景升級為「成為最安全的 AI 創新者」，核心價值觀聚焦「用戶為先、始終創業、持續創新、追求卓越、協作律己」五大維度。&lt;/p&gt; 
&lt;p&gt;&lt;img height="275" src="https://oscimg.oschina.net/oscnet/up-3c375902fe76b5eb714c9f20f3d280a7e19.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;同時，周鴻禕公佈了公司在智能體領域的技術突破：目前納米 AI 已實現 L3 級推理型智能體連續執行 100 步任務 0 出錯、單次消耗 Token100 萬、調用 100+工具，任務成功率達 98.2%。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366872</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366872</guid>
      <pubDate>Mon, 18 Aug 2025 02:58:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>2025 Gtest 全球軟件測試技術峯會售票進行中，前沿技術等你解鎖！</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                                                                                        &lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Gtest 大會，測試人的年度盛宴！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;為促進測試技術與行業應用的深度交流，2025 年 9 月 5 日-9 月 6 日，「全球軟件測試技術峯會」（簡稱：Gtest）將在北京市麗亭華苑酒店舉辦。本屆峯會將聚集超 500 位來自&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;測試、質量、大模型、開源測試工具等&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;領域的行業專家、技術負責人及一線工程師，構建多元化交流與合作平台。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="312" src="https://oscimg.oschina.net/oscnet/up-c7ebd1f7f5fb6544dff1a03652ee9ed5dc7.png" width="554" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;這是一場面向全球測試領域的頂尖技術峯會，如果您關注：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;·&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;大模型與智能測試的結合模式與落地實踐&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 銀行、保險等典型行業測試技術的趨勢與創新路徑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 證券、遊戲等行業領域從業者的實戰經驗與方法論&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 行業標杆企業的測試技術與管理案例&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 測試團隊的組織與效率優化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;本次峯會將為您提供深入交流與學習的契機。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;&lt;strong&gt;參會您將收穫&lt;/strong&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 瞭解軟件測試領域的前沿技術應用與創新趨勢&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 參考行業企業的真實業務實踐案例&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 建立與測試行業從業者及專家的專業聯繫&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;· 掌握軟件測試行業的發展動態與方向&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:justify"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;精彩議題搶先看：&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="text-align:center"&gt;&lt;img height="4618" src="https://oscimg.oschina.net/oscnet/up-2545d00b1641a0a012ed7449712f41ab33c.png" width="1712" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;時間：2025 年 9 月 5 日-9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;月&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;日&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;地點：北京麗亭華苑酒店 (北京市海淀區知春路 25 號)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;席位有限，速來鎖定你的年度技術盛會！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;立即購票&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gtest.net.cn%2Fbuy%2F" rel="nofollow" target="_blank"&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#000000"&gt;https://www.gtest.net.cn/buy/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4806939/blog/18688477</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4806939/blog/18688477</guid>
      <pubDate>Mon, 18 Aug 2025 02:53:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>馬斯克測試由 Grok 4 Mini 驅動的全新 𝕏 算法</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;&lt;span&gt;馬斯克近日&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.com%2Felonmusk%2Fstatus%2F1956580440136966203" target="_blank"&gt;透露&lt;/a&gt;，他正在測試由 Grok 4 Mini 驅動的全新 𝕏 算法，並明確表示：「它確實更好。」 &lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="732" src="https://static.oschina.net/uploads/space/2025/0818/102119_fy42_2720166.png" width="1270" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;根據他的説法，這一新算法在性能上有明顯提升，但要將其全面推廣給所有用戶，需要動用約 2 萬塊 GPU，並且會帶來更高的延遲。儘管如此，馬斯克仍認為「為了獲得更好的性能，這些代價是值得的」。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;目前尚未公開該算法的具體技術細節，如是否用於推薦系統、內容排序或 AI 生成內容優化等，但從馬斯克的表態來看，Grok 4 Mini 在 𝕏 平台的應用已進入實測階段，未來可能成為 𝕏 體驗升級的核心技術之一。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;馬斯克透露他正在測試由首次公開的 Grok 4 Mini 模型驅動的𝕏平台新算法，並表示全面推廣需要約 20,000 塊 GPU。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366866</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366866</guid>
      <pubDate>Mon, 18 Aug 2025 02:25:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>我國空間站首次應用專業領域 AI 大模型</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;據中國載人航天工程辦公室消息，北京時間 2025 年 8 月 15 日 22 時 47 分，經過約 6.5 小時的出艙活動，神舟二十號乘組航天員陳冬、陳中瑞、王傑密切協同，在空間站機械臂和地面科研人員的配合支持下，圓滿完成既定任務，出艙航天員陳冬、王傑已安全返回問天實驗艙，出艙活動取得圓滿成功。&lt;/p&gt; 
&lt;p&gt;與以往不同的是，此次神二十乘組在開展工作時有了一個新的助手，就是由天舟九號貨運飛船搭載上行的「悟空 AI」大模型。在神二十乘組第三次出艙活動的準備工作中，「悟空 AI」大模型就發揮了輔助支撐作用，同時它還為航天員在軌工作提供了智能化、專業化的支持。&lt;/p&gt; 
&lt;p&gt;「悟空 AI」基於國內開源模型開發，結合載人航天飛行任務需求，採用預訓練和指令微調技術，構建了專業領域大語言模型和以航天飛行知識規範為核心的知識庫。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;中國航天員科研訓練中心，鄒鵬飛：&lt;/strong&gt;航天員根據他的需要去詢問「悟空 AI」，比如説今天有哪些工作，在工作過程中可能有哪些操作的指南性質的、説明性質的知識。&lt;/p&gt; 
&lt;p&gt;&lt;img height="264" src="https://oscimg.oschina.net/oscnet/up-3f0d42fe3a0577cb2b09461d25dd5333bde.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;大模型技術在我國空間站首次應用驗證，構建了天地協同的智能問答支持系統，通過地面和在軌兩個模型，分別提供專業知識深度解析能力和解決重難點問題。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;中國航天員科研訓練中心，鄒鵬飛：&lt;/strong&gt;「悟空 AI」大模型為航天員在軌的複雜操作和故障處置提供快速有效的信息支持。助力航天員更有效地開展工作，豐富在軌的心理保障，也有助於天地協同效率的提高。&lt;/p&gt; 
&lt;p&gt;此外，針對載人航天飛行任務專業多元、類型複雜、數據海量等特點，「悟空 AI」大模型通過開發場景化數據處理等多種功能，確保響應快速，回答內容嚴謹正確，後續可拓展增加&lt;strong&gt;任務規劃、數據分析、智能預測&lt;/strong&gt;等功能。「悟空 AI」大模型在軌一個月運行狀態穩定，乘組航天員反饋良好，這一成果標誌着我國空間站在軌智能化應用取得重要進展。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366864</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366864</guid>
      <pubDate>Mon, 18 Aug 2025 02:18:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>阿里推出多模態深度研究智能體 WebWatcher</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;阿里巴巴自然語言處理團隊&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fwsm1OBCpYao63TPCnsnFdg" target="_blank"&gt;宣佈&lt;/a&gt;推出 WebWatcher，這是一個開源的多模態深度研究智能體，旨在突破現有閉源系統和開源 Agent 在多模態深度研究領域的侷限性。WebWatcher 通過整合網頁瀏覽、圖像搜索、代碼解釋器和內部 OCR 等多種工具，能夠像人類研究員一樣處理複雜的多模態任務，展現出強大的視覺理解、邏輯推理、知識調用、工具調度和自我驗證能力。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;WebWatcher 的開發團隊指出，儘管現有的閉源系統如 OpenAI 的 DeepResearch 在文本深度研究方面表現出色，但它們大多侷限於純文本環境，難以處理現實世界中複雜的圖像、圖表和混合內容。而現有的開源 Agent 也面臨兩大瓶頸:一類是專注於文本檢索的 Agent，雖然能夠整合信息，但無法處理圖像;另一類是視覺 Agent，雖然能夠識別圖像，但缺乏跨模態推理和多工具協同能力。WebWatcher 正是為瞭解決這些瓶頸而設計的。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;WebWatcher 的技術方案覆蓋了從數據構建到訓練優化的完整鏈路，其核心目標是讓多模態 Agent 在高難度多模態深度研究任務中具備靈活推理和多工具協作能力。為此，研究團隊設計了一個全自動多模態數據生成流程，通過隨機遊走收集跨模態知識鏈，並引入信息模糊化技術，提升任務的不確定性和複雜性。所有複雜問題樣本通過 QA-to-VQA 轉換模塊擴展為多模態版本，進一步增強了模型的跨模態理解能力。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="222" src="https://oscimg.oschina.net/oscnet/up-49fb7e96ad99da53f5c2a535d842f908428.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在高質量推理軌跡構建與後訓練方面，WebWatcher 採用了 Action-Observation 驅動的軌跡生成方法，通過收集真實的多工具交互軌跡並進行監督微調（SFT），讓模型在訓練初期快速掌握多模態 ReAct 式推理和工具調用的基本模式。隨後，模型進入強化學習階段，通過 GRPO 進一步提升多模態 Agent 在複雜環境下的決策能力。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;為了全面驗證 WebWatcher 的能力，研究團隊提出了 BrowseComp-VL，這是 BrowseComp 在視覺-語言任務上的擴展版本，旨在逼近人類專家的跨模態研究任務難度。在多輪嚴格評測中，WebWatcher 在複雜推理、信息檢索、知識整合以及聚合類信息尋優等任務上全面領先於當前主流的開源與閉源多模態大模型。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;具體來説，在人類&lt;span&gt;終極&lt;/span&gt;考試（Humanity’s Last Exam，HLE-VL）這一多步複雜推理基準上，WebWatcher 以 13.6% 的 Pass@1 分數一舉奪魁，大幅領先於 GPT-4o(9.8%)、Gemini2.5-flash(9.2%) 和 Qwen2.5-VL-72B(8.6%) 等代表性模型。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在更貼近真實多模態搜索的 MMSearch 評測中，WebWatcher 的 Pass@1 得分高達 55.3%，相比 Gemini2.5-flash(43.9%) 和 GPT-4o(24.1%) 大幅領先。在 LiveVQA 評測中，WebWatcher 的 Pass@1 成績達到 58.7%，領先於其他主流模型。在最具綜合挑戰的 BrowseComp-VL 基準上，WebWatcher 以 27.0% 的平均得分 (Pass@1)&lt;span&gt;遙遙領先&lt;/span&gt;，成績提升超過一倍。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366863</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366863</guid>
      <pubDate>Mon, 18 Aug 2025 02:10:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Zed 編輯器團隊發聲：LLM 為何無法真正構建軟件？</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;近日，開源代碼編輯器 Zed 的開發團隊發佈了一篇引人深思的博文，標題直擊要害：《為什麼 LLM 無法真正構建軟件》。這篇由 Conrad Irwin 撰寫的文章不僅在技術圈引發熱議，更是在 Hacker News 上掀起了一場關於 AI 輔助編程本質的深度討論。&lt;/p&gt; 
&lt;h2&gt;軟件工程的核心循環被 AI 誤解了？&lt;/h2&gt; 
&lt;p&gt;Irwin 在文章中提出了一個關鍵觀察：當你觀察一個熟練的軟件工程師工作時，會發現他們在不斷循環四個步驟——構建需求的心智模型、編寫代碼、理解代碼實際行為、識別差異並更新。而「區分優秀工程師的關鍵因素，是他們構建和維護清晰心智模型的能力」。&lt;/p&gt; 
&lt;p&gt;這個觀點立即引起了社區的共鳴。用戶 usrbinbash 形象地補充道：「我們不會只盯着調試器輸出想着『怎麼讓這個錯誤消失』。當遇到認證錯誤時，軟件工程師會退一步，思考整個系統，找出問題的根源。」他舉例説，可能問題根本不在認證本身，而是測試用低權限用戶調用了高權限函數——這種全局思考能力，正是 LLM 所欠缺的。&lt;/p&gt; 
&lt;h2&gt;LLM 的致命缺陷：無法維持心智模型&lt;/h2&gt; 
&lt;p&gt;文章指出，LLM 在編寫代碼時表現不錯，在更新代碼時也還可以，但它們「根本無法維持清晰的心智模型」。當測試失敗時，LLM 會陷入無休止的困惑——它們假設自己寫的代碼能工作，不知道該修復代碼還是測試，最後乾脆刪掉重來。&lt;/p&gt; 
&lt;p&gt;用戶 9cb14c1ec0 深有感觸：「我使用 Claude Code 越多，就越對這個問題感到沮喪。我不確定一個基於文本的通用 LLM 能否真正解決這個問題。」他的經歷代表了許多開發者的心聲——AI 工具在處理複雜項目時，往往會失去對整體架構的把握。&lt;/p&gt; 
&lt;p&gt;然而，並非所有人都認同這種悲觀看法。andrewmutz 反駁道：「作者不理解今天的 LLM 和編碼工具的能力。」他分享了自己使用 Cline 配合 Anthropic Sonnet 3.7 進行 TDD 開發的經驗，認為 LLM 的表現「不亞於甚至優於初級工程師」。&lt;/p&gt; 
&lt;h2&gt;記憶與理解：技術瓶頸還是架構問題？&lt;/h2&gt; 
&lt;p&gt;Irwin 深入分析了 LLM 的三個根本性問題：「上下文遺漏」（難以發現被遺漏的上下文）、「近期偏見」（過度關注最近的信息）、以及「幻覺」（憑空捏造不存在的細節）。這些問題直接影響了它們維護心智模型的能力。&lt;/p&gt; 
&lt;p&gt;「即使不斷增加上下文窗口」，文章寫道，「我們人類處理問題的方式完全不同——我們能夠臨時存儲完整上下文，專註解決問題，然後回到主線任務。我們不會簡單地不斷往上下文窗口裏塞更多詞彙。」&lt;/p&gt; 
&lt;p&gt;dlivingston 提出了一個有趣的類比：「這讓我想起 Google 的 Genie 3 只能運行約一分鐘就會失去內部狀態。我的直覺是，除非發明某種新架構——規模堪比 Transformer 的突破——允許短期上下文、長期上下文和自我調節模型權重，否則這個問題無法解決。」&lt;/p&gt; 
&lt;h2&gt;實踐者的兩極分化&lt;/h2&gt; 
&lt;p&gt;社區對 AI 編程工具的看法呈現明顯的兩極分化。chollida1 從投資者角度提供了獨特視角：「多年的投資經驗讓我形成了一個心智模型——尋找那些雖然糟糕但仍在增長的技術。90 年代的互聯網很慢、經常斷線，但人們還是在用；Twitter 經常出現失敗鯨，但人們依然用它看新聞。『永遠尋找那些雖然糟糕但人們仍在使用的技術，因為它提供了價值。』」&lt;/p&gt; 
&lt;p&gt;另一邊，懷疑者們則提出尖鋭批評。bagacrap 直言：「AI 編程愛好者總是説『你只是用錯了模型』。當沒有模型能用時，他們又説『6 個月後就會好了』。敏捷編程在複雜項目中的效用似乎永遠無法被證偽。」&lt;/p&gt; 
&lt;p&gt;最有意思的是來自 diwank 的實踐案例。他分享了一個完全由 AI 編寫的項目 steadytext：「7000 行代碼，包括 Python 庫、CLI 和 Postgres 擴展，完全由 Claude Opus 編寫和維護。我從未看過 90% 的代碼，但它有完整的測試覆蓋，通過 CI，我們在生產環境使用它！」這個案例引發了激烈討論，有人質疑其真實性，有人則認為這代表了 AI 編程的未來可能。&lt;/p&gt; 
&lt;h2&gt;工具還是革命？業界的理性聲音&lt;/h2&gt; 
&lt;p&gt;JimDabell 提供了一個更加平衡的視角：「LLM 無法構建軟件，是因為我們期望它們聽幾句話就立即開始編碼直到完成原型。如果我們讓人類工程團隊這樣做，也會得到糟糕的結果。」他建議通過可執行規範、嚴格測試、架構決策記錄等工具，讓 AI 在有界問題上完成同樣的循環。&lt;/p&gt; 
&lt;p&gt;robomartin 分享了他使用 Cursor 完成兩個項目的詳細經驗：「基於這次經驗，有一點非常清楚：『如果你不知道自己在做什麼，你就完了。』」他發現，雖然 AI 能處理 Django 中大量的樣板代碼，但代碼質量參差不齊，需要不斷手動幹預和修正。&lt;/p&gt; 
&lt;p&gt;skydhash 從更哲學的角度評論：「程序員主要是將業務規則翻譯成計算機世界中非常正式的流程執行。你需要知道規則的含義，也要知道計算機如何工作。翻譯一開始總是混亂的，這就是為什麼需要一遍遍修訂。」&lt;/p&gt; 
&lt;h2&gt;展望：不是終點，而是起點&lt;/h2&gt; 
&lt;p&gt;文章最後，Zed 團隊表達了他們的立場：「在 Zed，我們相信人類和 AI 代理可以協作構建軟件。但我們堅信，『至少現在，你還是駕駛員，LLM 只是另一個可以使用的工具。』」&lt;/p&gt; 
&lt;p&gt;這個觀點得到了許多開發者的認同。cmrdporcupine 總結道：「它迫使你退一步做規劃。你可以讓它做苦力編碼和低層分析測試，但你必須負責設計。這給了我更多時間思考大局，我喜歡這一點。」&lt;/p&gt; 
&lt;p&gt;正如 ethan_smith 所説：「真正的生產力提升不僅是打字速度，而是認知負載的轉移——儘管我們必須小心，不要因為委託實現細節而失去維護準確心智模型的能力。」&lt;/p&gt; 
&lt;p&gt;這場關於 LLM 能否真正構建軟件的討論，不僅揭示了當前 AI 工具的侷限性，更重要的是促使整個行業思考：在 AI 輔助編程的時代，什麼是軟件工程的本質？人類工程師的價值究竟在哪裏？也許答案不在於 AI 能否取代人類，而在於如何讓兩者更好地協作，各自發揮所長。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366685</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366685</guid>
      <pubDate>Sun, 17 Aug 2025 02:22:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>20 萬獎金，等你來戰！面向 openKylin 智能引擎的開源大模型推理優化賽火熱報名中</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p style="margin-left:0; margin-right:0"&gt;openKylin AI PC 版本是我國首個全開源端側操作系統智能引擎。然而，端側設備的計算資源（如 CPU/GPU/NPU）相對有限，難以原生支撐大模型的高效推理。在資源受限的端側環境中優化大模型推理效率，是推動 openKylin 智能引擎發展的關鍵所在。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;近日，由開放原子開源基金會主辦，OpenAtom openKylin（簡稱 「openKylin」）社區承辦的開放原子大賽——面向 openKylin 智能引擎的開源大模型推理優化賽（簡稱「賽事」）正式啓動，賽事以大模型推理優化為核心，匯聚前沿技術突破與工程落地能力，賦能 openKylin 智能生態，助推國產操作系統和新型計算架構的協同創新與廣泛應用。誠邀全球開發者參與。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//81ab1dacdd159d82d4bcb78ee63347fb.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;PART 一&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;賽事任務&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;本賽事涵蓋面向 openKylin 端側智能引擎的大模型推理優化的各種技術方向，包括但不限於以下重點方向：&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（&lt;strong&gt;1）大模型壓縮技術：&lt;/strong&gt;使用低比特量化、剪枝、蒸餾等方法，減少模型參數規模和計算量，加速推理需解決問題：如何定製化大模型壓縮策略以平衡推理效率和精度損失？&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;（2）大模型推理加速算法&lt;/strong&gt;：包括高效運算內核設計、並行流水線優化、緩存調度策略等，加快推理速度需解決問題：如何綜合數據並行、張量並行、管道並行、專家並行等方法，在最大化 GPU 吞吐量的同時滿足部署資源約束？&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;（3）異構協同推理&lt;/strong&gt;：探索在多種計算單元間協同調度，將任務分配到不同硬件資源上並行計算；需解決問題：如何根據推理任務特徵，動態將計算負載分配到最合適的計算單元，使各類加速器資源得以充分利用並提高能效？&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;（4）RISC-V 架構優化與支持&lt;/strong&gt;：挖掘 RISC-V 架構中向量、矩陣等 AI 加速算力，構建易於使用的 RISC-V AI 開發框架需解決問題：如何構建和優化面向 RISC-V 的大模型推理框架、算子庫和編譯器，以彌補生態不足併發揮其指令集靈活性的優勢？&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;（5）其他創新方向：&lt;/strong&gt;如針對特定模型或應用場景的專用優化、自研輕量化推理框架等（若有疑問，可詢問技術支持諮詢選題可行性）需解決問題：如何通過模型剪枝、蒸餾、低秩分解等技術，儘量保持精度的同時大幅減小大模型的計算和存儲開銷，使其適配資源受限的端側設備？最終提交的成果應包括詳細的技術方案描述、實現代碼和驗證結果，使評審者能夠復現和檢驗優化效果。詳細請見作品提交。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;PART 二&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;報名參與&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;賽事報名&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img height="" src="https://oscimg.oschina.net/oscnet//3d093f1f10ee2fac7967ee8febca1f67.png" width="200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;報名掃碼發送「智能引擎」加入羣聊諮詢&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img height="" src="https://oscimg.oschina.net/oscnet//87706cd9ca8a6fcf6b55dda407a4d174.png" width="200" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;strong&gt;&lt;span&gt;PART 三&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;獎項設置&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//f828430566a13ea64ad22bd9e71e8d68.jpeg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;PART 四&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;賽程安排&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;img src="https://oscimg.oschina.net/oscnet//800cb232b660fbe563e9ed1990abfd3e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0; text-align:center"&gt;&lt;span&gt;&lt;strong&gt;PART 五&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;賽事機制&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;1.參賽對象&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;參賽對象可以為全球高校學生、個人開發者、企業開發者。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;2.組隊報名要求&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;截止報名前，參賽隊伍需要在大賽官網進行報名。報名成功後在賽事微信羣查看比賽動態。羣中將分享比賽動態、服務接口和官方文檔等材料，併為參賽隊伍提供技術支持。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;多人蔘賽時，參賽隊伍應由 2-3 人組成，每隊需要指定一名隊長負責溝通與協調。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;3.比賽規則&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（1）初賽&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp; &amp;nbsp; 各參賽隊伍根據賽題要求進行實現，並提供技術方案描述文檔。相關幫助文件將發送至比賽交流微信羣。代碼實現在初賽不做強制要求，但是必須有完整的設計驗證説明，並確保具備最終的實現條件和演示條件。&amp;nbsp; &amp;nbsp; 初賽採用線上評審的方式根據評分結果，篩選 20 支隊伍進入最終的決賽階段。從第 20 名以後直接根據最終排名評選獎項，獲獎必須有完整的文檔、驗證和代碼提交。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（2）決賽&amp;nbsp; &amp;nbsp; 決賽採用線下競賽方式，各參賽隊伍必須根據初賽階段提交的作品，按照競賽專家組建議，進一步完善相關文檔，完成最終的設計。需要提交可運行代碼，具備可演示的運行環境，並能夠進行現場演示和講解。現場答辯根據評委的打分結果，排出最終的名次。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;4. 作品提交&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（1）參賽作品須符合本賽項及所屬賽道方向，作品名稱應能體現其主要特徵。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（2）參賽作品必須為原創作品，不得侵犯任何第三方的專利權、著作權、商標權及其他知識產權，且不得違反國家相關法律法規，否則將取消該作品的參賽資格。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（3）作品允許使用他人開源代碼，但必須在符合該代碼的開源許可基礎上，註明出處，以及與作品其它代碼的依賴關係，提交作品時，必須在分析設計文檔中明確説明作品中其他開源代碼的協議、作用及所佔比例。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（4）作品應能正常運行並可達到預期結果。作品應與設計文檔描述的功能一致，如未能實現設計文檔中描述的所有功能，應註明未實現功能及其所佔比例和重要程度。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;（5）參賽作品的代碼註釋量應足夠高，原則上不得低於代碼量的 5%。&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366615</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366615</guid>
      <pubDate>Sat, 16 Aug 2025 08:29:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>先進算力新選擇 | 2025 華為算力場景發佈會暨北京 xPN 夥伴大會成功舉辦</title>
      <description>&lt;div class="content"&gt;
                                                                                            &lt;p&gt;2025 年 8 月 15 日，以「先進算力新選擇」為主題的「2025 華為算力場景發佈會暨北京 xPN 夥伴大會」成功舉辦。眾多計算產業和相關行業精英齊聚一堂，聚焦先進算力與行業場景的深度融合，共同探討如何推動算力價值釋放；同時分享了華為在通用計算、大模型技術及 AI 應用創新等領域的最新成果，以及基於昇騰、鯤鵬體系，與夥伴在教育、政務、醫療、製造等場景的創新實踐。會上還重磅發佈了「xPN 先鋒行動」，華為將從研營銷供服全方位支撐夥伴，深耕根技術，協同夥伴打造有競爭力的產品和方案，服務千行萬業數智化升級，共贏智能化未來。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;img alt="圖片 1.png" src="https://static.oschina.net/uploads/img/202508/15232531_Y2ZT.png" referrerpolicy="no-referrer"&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;2025 華為算力場景發佈會暨北京 xPN 夥伴大會現場&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;華為商業銷售部總裁張海平帶來開場致辭，為活動拉開序幕。他談到，2024 年華為經營穩健，中國區政企業務同比增長 25%，中國區政企計算產業增長 80%，鯤鵬、昇騰平台作用關鍵，分別應用於多領域及加速 AI 技術落地。面向中小企業，華為堅持夥伴主導，2024 年鑽金銀夥伴、商業交易夥伴數量分別增長 25%、22%，並推出 APN 和 KPN 計劃深化合作。2025 年華為計算產品全面升級，開放鯤鵬模組、昇騰板卡等，鯤鵬升級工具鏈和引擎，昇騰支持夥伴開發邊端 AI 產品，已發佈眾多相關產品。兩大計劃加持下，部件夥伴業務增長翻番，已認證 APN 夥伴近 30 家、KPN 夥伴 20+家，夥伴數量和質量顯著提升。未來，華為將持續投入計算產業，堅持根技術創新，強化夥伴體系。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;img alt="圖片 3.png" src="https://static.oschina.net/uploads/img/202508/15232557_U5jD.png" referrerpolicy="no-referrer"&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;華為商業銷售部總裁，張海平&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;IDC 中國研究副總裁周震剛在演講中指出，當前數字化和智能化成為經濟增長新引擎，數字經濟蓬勃發展，中國數智化轉型支出增長顯著，智能化推動產業升級，生成式 AI 在多行業滲透。全球及中國 ICT 支出穩步增長，IT 市場進入 AI 大轉型時代，生成式 AI 帶來新的技術棧和架構變化。算力是智能化發展的支撐，全球服務器保有量和 CPU 核數提升，ARM 架構服務器增長迅速，中國市場增速更高。大模型推動下 AI 基礎架構市場高速增長，算力需求結構從訓練向推理傾斜，自主創新算力崛起，智能算力需求爆發式增長且供給部署方式多元。數智時代算力基礎設施需具備高性能多核處理器等特性，並具備面向 AI 應用的加速技術。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 4.png" src="https://static.oschina.net/uploads/img/202508/15232610_KmVB.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;IDC 中國研究副總裁，周震剛&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;在昇騰技術與實踐分享環節，嘉賓圍繞「昇騰無處不在，智能化升級新選擇」主題展開，聚焦教育、管理、醫療監護場景，展現了昇騰算力賦能智能化升級的實踐分享。&lt;/p&gt; 
&lt;p&gt;華為昇騰計算領域副總裁劉偉在演講中談到，昇騰部件及解決方案致力於做好夥伴背後的支持力量，其部件產品覆蓋 AI 全場景，部件產品從模組到標卡共 9 款，滿足夥伴開發需求，助力自主創新。2025 年下半年，昇騰將實施從低算力到高算力全面覆蓋邊端場景的策略，同時，部件產品重點投入 Atlas 300I A2 和 310 模組，以此提升產品解決方案的競爭力並完善生態豐富度。CANN 全面開源開放，架構靈活，工具鏈完備，2025 年底將完成 A2 版本開源，助力場景化創新。昇騰硬件與 CANN 形成軟硬雙引擎，賦能千行萬業，同時通過多方協同支撐夥伴發展，共同構建萬物互聯的智能世界。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 5.png" src="https://static.oschina.net/uploads/img/202508/15232625_AMg7.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;華為昇騰計算領域副總裁，劉偉&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;圖靈智感（深圳）科技有限公司北京分公司總經理王元凱分享了公司基於昇騰算力平台的自主創新 AI 應用實踐，包括癲癇病患者智能監護系統、Shine Nexus 法律系統、Cloudasis 代碼開發平台等解決方案，同時還介紹了昇騰 AIPC 產品線的智能終端產品及適老機器人等產品的規劃，展現了 AI 應用的廣闊前景。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 6.png" src="https://static.oschina.net/uploads/img/202508/15232633_1BHv.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;圖靈智感（深圳）科技有限公司北京分公司總經理，王元凱&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;軟通華方企業級產品管理部總經理鄧忠良圍繞軟通華方計算 APN 業務展開的介紹中，提及了多款核心產品及合作項目。其中，超炫 3700 液冷工作站以鯤鵬 920 和昇騰 310 處理器為基礎，不僅性能強勁、應用領域廣泛，還擁有自主知識產權。此外，軟通華方還聯合多方力量，打造了政務、應急、醫療等領域的 AI 一體機，在教育行業推行「一省一策」的發展策略，這些舉措展現了其在計算領域的技術實力與生態整合能力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 7.png" src="https://static.oschina.net/uploads/img/202508/15232655_uFiJ.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;軟通華方企業級產品管理部總經理，鄧忠良&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;北京傑創永恆科技有限公司 CTO 趙鵬翀着重介紹了昇騰教育行業 AI 教學場景應用，以啓智 01 開發者套件為核心，構建 AI 教育全鏈條，搭載立體化課程與實訓項目，推動教學與實踐結合，培養符合產業需求的昇騰 AI 人才。其擁有一站式 AI+教育社區，課程體系豐富，涵蓋多類課程與崗位任務，平台運行數據可觀。還推出多種實驗設備，包括訓推一體機、移動機器人、智能電子實驗台等，形成多學期課程體系，構建知識、工具、技能鏈。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 8.png" src="https://static.oschina.net/uploads/img/202508/15232718_yP9N.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;北京傑創永恆科技有限公司 CTO 趙鵬翀&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;鯤鵬算力場景發佈環節，圍繞「鯤鵬無處不在，通算場景新選擇」主題，嘉賓針對網安、DPI 場景，闡釋了鯤鵬算力支撐通算場景創新的路徑。&lt;/p&gt; 
&lt;p&gt;華為鯤鵬計算領域副總裁劉雲強在演講中指出，以鯤鵬為代表的 ARM 創新力量發展迅猛，算力增長率 10 倍於 x86 算力，鯤鵬已成為自主創新首選算力。鯤鵬堅持計算生態戰略，突破根技術，聚焦芯、硬、軟協同，持續開放助力夥伴創新，推出多系列模組且算力全覆蓋。同時，通過全流程工具鏈等激發行業應用創新，在多場景具備解決方案，2025 年已與 50+夥伴打造 70+款產品，KPN 體系蓬勃發展，佈局「1+N+X」全國生態支持創新中心，為算力產業自主創新發展注入澎湃動能，驅動數字經濟邁向新高度。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 9.png" src="https://static.oschina.net/uploads/img/202508/15232723_6ZNm.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;華為鯤鵬計算領域副總裁，劉雲強&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;北京樂研科技股份有限公司研發中心副總經理兼產品總監張帥介紹到，樂研深耕行業近 20 年，是網絡安全硬件平台領軍者，擁有多項專利，研發佔比超 30%，具備高效硬件定製、嚴格質量管控、快速製造及優質供應鏈整合能力。其鯤鵬產品具有明確技術路線，2024 - 2025 年推出中高階網絡安全硬件，後續將逐步拓展。隨後詳細展示了多款基於鯤鵬模組的網絡安全硬件產品參數，凸顯出樂研在網絡安全硬件領域的技術實力與發展潛力，為行業注入強勁「芯」動能。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 10.png" src="https://static.oschina.net/uploads/img/202508/15232730_cGIW.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;北京樂研科技股份有限公司研發中心副總經理兼產品總監，張帥&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;航天聯志技術有限公司產品線副總經理馬成龍重點介紹了兩款核心產品。一是 Z2551-M0，作為自研高性能一體化設備，專為大規模 DPI 場景設計，搭載鯤鵬 KP920 模組，模塊化設計且全棧優化，具備自主創新等亮點，可應用於信息安全服務、政企合規審計等領域；二是 Z2651-M0，為針對網絡安全市場的多節點模塊化計算平台，基於鯤鵬 KPN 組開發，有多種節點規格，單節點配置靈活，能為多領域提供計算解決方案，彰顯了品牌技術高度與市場競爭力。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="圖片 11.png" src="https://static.oschina.net/uploads/img/202508/15232801_kAtG.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;航天聯志技術有限公司產品線副總經理，馬成龍&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;會上，華為中國政企計算解決方案銷售總經理程龍飛、華為北京政企夥伴與商業銷售部部長公磊、華為北京政企計算解決方案銷售部部長李峯、華為北京整合營銷部部長林鵬以及 5 位夥伴代表共同發佈「xPN 先鋒行動」，華為將從研營銷供服全方位支撐夥伴，深耕根技術，旨在協同更多夥伴，打造更有競爭力的產品和方案，更好地服務千行萬業客戶數智化轉型升級。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;img alt="圖片 2.png" src="https://static.oschina.net/uploads/img/202508/15232812_ru5G.png" referrerpolicy="no-referrer"&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;「xPN 先鋒行動發佈」儀式啓動&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;從政策解讀到技術實踐，從場景分享到生態共建，大會為計算產業搭建交流合作平台，推動先進算力從技術參數轉化為行業數智化轉型動力，以算力支點撬動產業升級，繪就數智時代生態藍圖，助力千行萬業邁向數智發展新高度。未來，華為將持續深化與夥伴協同，以先進算力為引擎，驅動更多行業場景創新實踐，加速數智化轉型進程，共創數智時代新價值。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/366517</link>
      <guid isPermaLink="false">https://www.oschina.net/news/366517</guid>
      <pubDate>Fri, 15 Aug 2025 15:28:00 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
  </channel>
</rss>
