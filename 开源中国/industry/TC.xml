<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>oschina - industry - 繁體中文（台灣）</title>
    <link>https://www.oschina.net/news/industry</link>
    <atom:link href="http://127.0.0.1:30044/oschina/news/industry" rel="self" type="application/rss+xml"/>
    <description>已對該 RSS 進行格式化操作：中英字符之間插入空格、使用直角引號、標點符號修正</description>
    <generator>RSSHub</generator>
    <webMaster>contact@rsshub.app (RSSHub)</webMaster>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 28 Aug 2025 02:41:43 GMT</lastBuildDate>
    <ttl>5</ttl>
    <item>
      <title>AI 向量化黑科技！deepin 25 實現「秒搜」自由</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;div&gt; 
 &lt;div&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;「這個報告到底存在哪裏？」「只記得文檔裏有‘預算調整’，文件名卻死活想不起來......」與海量文件打交道，類似的抓狂瞬間幾乎天天上演。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;別擔心，deepin 25 帶着&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;「全文檢索」&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;黑科技來了，哪怕只記得隻言片語，也能瞬間定位目標，徹底終結文件查找難題。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h2&gt;&lt;strong&gt;&lt;strong&gt;內容級深度搜索，告別「記文件名」焦慮&lt;/strong&gt;&lt;/strong&gt;&lt;/h2&gt; 
  &lt;p style="text-align:center"&gt;&lt;img align="center" src="https://oscimg.oschina.net/oscnet//289fa26e8dd9ed5ae4004c14b40981f9.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;全文檢索功能能夠直接穿透文件名，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;深入文檔內部文本內容&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;進行搜索。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;不記得文件名沒關係，只需輸入你所記得的部分關鍵詞，系統就自動匹配出所有包含該內容的文檔，瞬間鎖定目標。無論是合同條款、會議紀要還是數據報表，哪怕搜索內容藏在圖片中，都能被精準捕捉。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h2&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;關鍵詞高亮顯示：一眼鎖定核心信息&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/h2&gt; 
  &lt;p style="text-align:left"&gt;&lt;img align="left" src="https://oscimg.oschina.net/oscnet//d645cf5873a3da1b1d00b57fa9e5eddb.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&amp;nbsp;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;找到文件只是第一步，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;快速定位關鍵內容才是提升效率的核心。&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;在 deepin 25 的全文檢索結果列表中，所有包含關鍵詞的文件名和文件內容都會用醒目的顏色標記，無需逐字閲讀就能一眼鎖定重點，讓信息獲取效率提升數倍。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;h2&gt;&lt;strong&gt;&lt;strong&gt;多關鍵詞組合搜索：精準過濾無關信息&lt;/strong&gt;&lt;/strong&gt;&lt;/h2&gt; 
  &lt;p style="text-align:center"&gt;&lt;img align="center" src="https://oscimg.oschina.net/oscnet//bae063fd40bb767e11ab6d71909fd570.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;在查找文件時，常常會遇到這樣的情況：需要的文檔涉及多個關鍵信息，只靠單個關鍵詞搜索，結果往往混入大量無關文件。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;deepin 25 的多關鍵詞組合搜索功能，可完美解決這個問題。就像常用的搜索引擎，&lt;/span&gt;&lt;/span&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;支持輸入多個關鍵詞，用空格分隔，&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;span&gt;&lt;span&gt;系統便會精準識別並匹配同時包含所有關鍵詞的文件，大大提高搜索的命中率。這種類似搜索引擎的操作邏輯，上手零難度，卻能讓搜索命中率大幅提升。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;deepin 25 的全文檢索功能，用內容級搜索打破文件名限制，用高亮顯示簡化信息定位，用多關鍵詞組合提升精準度，三者協同發力，讓文件查找從「耗時任務」變成 「秒級操作」！&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;p style="text-align:left"&gt;&lt;span&gt;&lt;span&gt;歡迎嘗試體驗並在評論區分享您的使用心得。同時也誠邀您前往社區論壇參與更深入的交流與探討，共同助力 deepin 的成長。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
 &lt;/div&gt; 
&lt;/div&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368882</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368882</guid>
      <pubDate>Thu, 28 Aug 2025 02:22:40 GMT</pubDate>
      <author>來源: 資訊</author>
    </item>
    <item>
      <title>DeepSeek 向用戶發送了錯誤的模型 API 費用信息郵件</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;DeepSeek 此前向部分開發者發送的電子郵件中，將模型的 API 調用費用調低。官方隨後澄清，當前 API 價格仍維持官網文檔所列標準，未作任何調整。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-d3a059e16cac9602569bffa2c9c177244ed.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.oschina.net/news/367617" target="_blank"&gt;據官方介紹&lt;/a&gt;，&lt;strong&gt;&lt;strong&gt;北京時間 2025 年 9 月 6 日凌晨&lt;/strong&gt;&lt;/strong&gt;&lt;strong&gt;起&lt;/strong&gt;，DeepSeek 開放平台&amp;nbsp;API&amp;nbsp;接口調用價格進行如下調整：&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;執行新版價格表（如下圖所示，詳見定價頁面）；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;取消夜間時段優惠。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0821/144816_eC55_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#333333; margin-left:0; margin-right:0; text-align:left"&gt;在&amp;nbsp;9&amp;nbsp;月&amp;nbsp;6&amp;nbsp;日前，所有&amp;nbsp;API&amp;nbsp;服務仍按&lt;strong&gt;原價格政策計費&lt;/strong&gt;。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368878</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368878</guid>
      <pubDate>Thu, 28 Aug 2025 02:08:40 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>字節跳動提出 Jeddak AgentArmor 智能體安全框架</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;為了從根源上解決 AI Agent 的安全困境，字節跳動安全研究團隊&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FFSK6zuRygxj5TrHFkIJ2tg" target="_blank"&gt;提出&lt;/a&gt;了全新的智能體安全框架 Jeddak AgentArmor。它意味着，我們可以將對模糊、善變的「自然語言」的分析，轉變為對精確、嚴謹的「程序語言」的分析。&lt;/p&gt; 
&lt;p&gt;「AgentArmor 的設計哲學 —— 將 AI Agent 運行時的行為軌跡，視為一段可分析、可驗證的結構化程序。」&lt;/p&gt; 
&lt;p&gt;&lt;img height="130" src="https://oscimg.oschina.net/oscnet/up-0e1e1ff387120a6a890c7befa39e2246e82.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;AgentArmor 設計了三大核心組件：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;圖構建器 (Graph Constructor) 負責將 AI Agent 運行時線性的行為軌跡實時轉換為一個結構化的程序依賴圖（Program Dependency Graph），捕獲控制流和數據流，讓 AI Agent 的「思維鏈」與「行為鏈」一目瞭然。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;屬性註冊表 (Property Registry) 一個豐富的安全元數據庫，負責為圖中的每一個節點（工具、數據）附加安全屬性。對於未知的未知工具、MCP、三方服務等，自動挖掘其數據操作流程，生成對應安全等級。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;類型系統 (Type System) 類型即「安全等級」，類型系統將在程序依賴圖上自動推導新節點的安全等級，並執行基於安全等級的策略校驗，在風險行為發生前精準識別，並給出風險響應建議，如升密、降密、告警、攔截等&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;img alt="" height="386" src="https://oscimg.oschina.net/oscnet/up-9ffc8a59cc29a7227f91f929e290b9cd0b3.webp" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;在 AI Agent 工作時，AgentArmor 首先借助圖構建器，將 AI Agent 運行過程中的執行軌跡迅速且精準地轉化為程序依賴圖，從而清晰呈現其控制流與數據流。接着，依靠屬性註冊表進一步完善程序依賴圖，不僅詳細添加 AI Agent 調用工具的內部數據流細節，還為程序依賴圖中的數據節點與行為節點設置初始類型，以此賦予各節點安全屬性。最後，通過類型系統全面完善整個圖中的類型標籤，並嚴格對程序依賴圖開展類型檢查，以切實防止任何不安全的操作出現，確保 AI Agent 的運行安全。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;AgentArmor 類型系統中囊括了三大類型，滿足用戶與社會對於 AI Agent 在不同側面上的安全期待：&lt;/span&gt;&lt;/p&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;信任類型——跨域互操作的信任建立&lt;/strong&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;確保 AI Agent 在與本地服務、雲服務、其它多智能體交互時建立恰當的信任關係，能準確判別交互對象的可信度，避免因信任誤判引發數據泄露或惡意代碼執行等風險。例如，在與基於可信執行環境 (TEE) 的代碼執行器交互時可以施加高信任，可共享必要數據；而與身份未知的外部智能體交互時則保持低信任和謹慎態度，如謹慎提供自身敏感信息，不隨意執行對方指令。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;安全類型——對外部攻擊的健壯抵禦&lt;/strong&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;使 AI Agent 擁有強大的防禦機制，能夠有效識別並抵禦來自外部的各類攻擊，像惡意指令注入、網絡滲透等，保障自身系統的安全性與穩定性，維持正常的任務執行流程。例如，如果接收到由外部陌生人郵件觸發的 App 轉賬指令，及時攔截上報，防止資金被盜取。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul style="list-style-type:disc; margin-left:0; margin-right:0"&gt; 
 &lt;li&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;strong&gt;規則類型——對用戶指令的忠實執行&lt;/strong&gt;&lt;/p&gt; &lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;保證 AI Agent 絕對遵循用戶下達的指令，不被外部幹擾或惡意篡改任務目標，精確且完整地落實用戶需求。例如，在電商場景中，如果用戶要求購買 200 元以內的鞋子，則不能購買 200 元以上的鞋子；或者用戶要求整理文檔，AI Agent 就不能將其扭曲為刪除指定文件。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;測試結果表明，&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;在 AI Agent 因遭受攻擊而執行風險行為的案例中，AgentArmor 成功攔截比例達&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;93%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;。與未受保護相比，AgentArmor 將針對 AI Agent 的攻擊成功率從&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;28%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;顯著降至&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;4%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;；特別是在指令覆蓋等攻擊模式下，攻擊成功率降至&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;0%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;。gentArmor 使 AI Agent 正常完成用戶任務的能力從&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;73%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;輕微降至&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;72%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;，降幅僅&lt;/span&gt;&lt;strong style="color:#3e3e3e"&gt;&lt;span&gt;1%&lt;/span&gt;&lt;/strong&gt;&lt;span style="background-color:#ffffff; color:#3e3e3e"&gt;。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="221" src="https://oscimg.oschina.net/oscnet/up-70ccce23fd01a077c8096a063ed15ffa11d.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;AgentArmor 受「零信任」架構與理念啓發，確保所有對外行為都經過輸出驗證。通過「運行態執行交互」與「控制態策略決策」雙向聯動，與 AI Agent 深度集成，在不改變其原有功能架構的前提下構建全流程安全防護體系，核心模塊是：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;策略執行點 &lt;/strong&gt;&lt;span&gt;是執行樞紐，將 AI Agent 的不可信行為化為可信。一方面，鏡像 AI Agent 的 LLM 調用流量，採集上下文，為策略決策提供輸入；另一方面，根據策略決策點結果，允許可信調用通行，阻斷或緩解不可信行為。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;策略決策點&lt;/strong&gt; &lt;span&gt;是智能決策核心，輸出安全決策。先通過行為軌跡採集獲取 AI Agent 行為信息，經行為表示轉化後，結合動態策略生成與行為安全分析，識別風險並響應，進而對行為進行判斷，輸出策略決策結果給策略執行點。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;在 AI Agent 運行時，AgentArmor 的安全工作流是：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;行為採集&amp;nbsp;&lt;/strong&gt;&lt;span&gt;收到用戶請求後，策略執行點以上下文為載體，採集 AI Agent 的不可信行為並傳送至策略決策點。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;安全研判 &lt;/strong&gt;&lt;span&gt;策略決策點進行分析，將安全判斷結果返回策略執行點。&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;行為幹預&amp;nbsp;&lt;/strong&gt;&lt;span&gt;策略執行點對不可信行為採取攔截、降密、審計等幹預措施。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="margin-left:0; margin-right:0"&gt;&lt;span&gt;此集成模式覆蓋用戶交互、LLM 調用、環境調用全鏈路，通過「行為數據-策略結果」實時聯動，支持快速響應業務變化或新型攻擊，使 AI Agent 「能幹活」且「不闖禍」，形成「可感知、可幹預、可進化」的安全共生體。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;AgentArmor 的概念發佈只是一個開始。未來，字節跳動安全研究團隊將着力於 AgentArmor 核心技術的迭代升級，把目光聚焦在技術能力的產品化封裝層面；同時，逐步把核心能力拓展至 AI Coding、ChatBI Agent、OS Agent 等垂直領域，為這些領域的智能應用提供支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#3e3e3e; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span&gt;更重要的是，團隊計劃將 Jeddak AgentArmor 的核心框架開源。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368877</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368877</guid>
      <pubDate>Thu, 28 Aug 2025 02:04:40 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>綠盟科技發佈 2025 半年報：收入持平，虧損收窄，現金流穩健增長</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:left"&gt;&lt;span&gt;&lt;span&gt;8 月 2&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;7&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;日，綠盟科技發佈了 202&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;年半年度報告。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;202&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;年&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;上半年，實現營業收入 8 億元，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;與上年同期基本持平&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;；實現歸屬上市公司所有者淨利潤-17,14&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;9&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;76&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;萬元，同比減虧 32.6&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;5&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;%；經營活動產生的現金流量淨額 8,1&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;93&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;66&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;萬元，同比增長 93.&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;47&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;%，基於經營活動現金流量持續好轉，公司為了提升資產效率，主動進行了現金管理，償還了部分短期借款。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;報告期內&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;公司做好&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;「&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;3+3+X+Y&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;」&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;戰略聚焦&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;積極提質增效&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，利潤和現金流&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;穩健&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;增長，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;經營質量&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;持續&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;提升。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;span&gt;&lt;span&gt;在業務方面，綠盟科技聚焦運營商、金融、能源等需求穩定且與公司長期以來產品和服務相匹配的價值客戶，創新 AI 大模型安全、數據安全等解決方案。在產品和技術方面，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;綠盟科技堅定探索新技術、新領域，產品矩陣持續完善，標杆案例不斷積累&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;報告期內，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;公司針對&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AI 大小模型雙軌體系&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;「研判能力迭代難」的問題攻堅&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;，&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;應用層面更新迭代風雲衞&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;AI&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;安全能力平台，發佈多智能體安全應用中心；&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在隱私計算、可信計算、機密雲等方向進行安全研究，完成了不同安全要求下的可信數據空間體系架構設計&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;；&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;在 APT 追蹤取證、雲上攻防、無人機新型對抗場景、車聯網靶場等新領域&lt;/span&gt;&lt;/span&gt;&lt;span&gt;持續探索並取得突破。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368867</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368867</guid>
      <pubDate>Tue, 19 Aug 2025 01:22:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>​文心快碼推出多項新功能，新增 Zulu-CLI 終端編碼能力</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;文心快碼近日發佈了一系列新功能，旨在提升個人開發體驗和企業級協作效率。這些新能力包括 Zulu-CLI 的引入、企業版自定義模型的支持、一鍵設置自動執行、複用相同終端以及本地代碼庫知識增強索引的支持等，讓開發者的工作流程更加順暢。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="299" src="https://oscimg.oschina.net/oscnet/up-f6685f643ab58132dff5a1efc8ccb851307.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;首先，Zulu-CLI 的推出使得開發者可以在終端中使用其強大的智能編碼能力。通過自然語言命令，開發者無需離開熟悉的命令行界面，即可實現各種編碼需求。為了順利使用 Zulu-CLI，開發者需要確保環境符合要求，並根據各自的操作系統進行相應的安裝。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;其次，文心快碼企業版現在支持自定義模型。這一功能使企業能夠根據自身的需求選擇不同的大模型，從而靈活配置資源以滿足不同場景的生成要求。企業管理者可以通過簡單的設置，將公有大模型的相關信息進行配置，以便在 IDE 中進行模型選擇。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，文心快碼的智能體現在執行指令時支持一鍵設置自動執行，極大地提升了 AI 生成與實際執行之間的流轉效率。用戶可以在同一個終端會話中連續執行指令，減少了打開新終端的次數，提升了操作的連貫性和資源利用效率。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在知識增強方面，文心快碼現在支持對 SVN 倉庫的本地代碼庫進行知識索引。系統會自動識別工作空間所用的版本控制工具，提供精準的代碼建議和生成，幫助開發者更好地管理和維護代碼。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;最後，文心快碼也新增了對話中導出生成圖片的功能，用戶可以方便地將生成的架構圖、流程圖等導出為 SVG 或 PNG 格式，便於後續插入文檔或共享給同事。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368829</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368829</guid>
      <pubDate>Mon, 18 Aug 2025 11:07:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>騰訊工程師向 Linux 內核提交補丁，引入 Swap Table 架構</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;騰訊工程師 Kairui Song&amp;nbsp;近日向 Linux 內核郵件列表&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20250822192023.13477-1-ryncsn%40gmail.com%2F" target="_blank"&gt;提交&lt;/a&gt;了新補丁，提議引入新架構 Swap Table——將 swap cache、swap 映射和 swap 分配器整合在一起，成為新的後端基礎設施。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1036" src="https://static.oschina.net/uploads/space/2025/0827/183312_QdxM_2720166.png" width="1190" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據介紹，最新的 Phase I 補丁共包含 9 個改動，已經展現出明顯成效。在多項測試中，無論是小型 ARM 設備還是大型 x86_64 服務器，性能均有提升：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;整體加速約 5%–20%；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在虛擬機可擴展性場景下，部分測試提升超過 &lt;strong&gt;20%&lt;/strong&gt;；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;內核構建時間縮短數個百分點；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Redis、Valkey 等內存數據庫吞吐量提升 6%–7&lt;strong&gt;%&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;這項優化不僅帶來了更高吞吐與更低延遲，還減少了內存佔用，為後續擴展和功能優化奠定了基礎。事實上，今年 5 月的第一輪 Swap Table 補丁已經顯示過 20–30% 的性能增益，此次進一步強化了該方向的潛力。&lt;/p&gt; 
&lt;p&gt;儘管部分開發者認為現代系統往往減少或關閉 swap 使用，但社區普遍認可該改進對，高負載場景與虛擬化環境的價值。隨着補丁的逐步推進，這一優化有望在未來的 Linux 內核中成為默認機制，為系統帶來更穩定、更高效的內存管理能力。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368823</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368823</guid>
      <pubDate>Mon, 18 Aug 2025 10:38:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Gonzo - 基於 Go 的 TUI 日誌分析工具</title>
      <description>&lt;div class="content"&gt;
                                                                                                                                                                        
                                                                                    &lt;p&gt;&lt;span style="background-color:#ffffff; color:#1f2328"&gt;受 K9s 啓發的強大實時日誌分析終端 UI。使用精美的圖表、AI 洞察和高級篩選功能分析日誌流 - 一切盡在你的終端。&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;img height="362" src="https://static.oschina.net/uploads/space/2025/0826/152706_jR8k_4252687.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt;

&lt;div style="text-align:start"&gt;
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1f2328"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="background-color:#ffffff"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;特點&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt;
&lt;/div&gt;

&lt;div style="text-align:start"&gt;
&lt;h3 style="text-align:start"&gt;Real-Time Analysis&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;實時流&amp;nbsp;&lt;/strong&gt;- 處理來自標準輸入、文件或網絡的日誌&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OTLP 原生&amp;nbsp;&lt;/strong&gt;- 對 OpenTelemetry 日誌格式的一流支持&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OTLP 接收器&amp;nbsp;&lt;/strong&gt;- 內置 gRPC 服務器，通過 OpenTelemetry 協議接收日誌&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;格式檢測&amp;nbsp;&lt;/strong&gt;- 自動檢測 JSON、logfmt 和純文本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;嚴重程度跟蹤 -&amp;nbsp;&lt;/strong&gt;使用分佈圖以顏色編碼的嚴重程度級別&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3 style="text-align:start"&gt;Interactive Dashboard&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;受 k9s 啓發的佈局&amp;nbsp;&lt;/strong&gt;- 熟悉的 2x2 網格界面&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;實時圖表&lt;/strong&gt; -&amp;nbsp;詞頻、屬性、嚴重性分佈、時間序列&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;鍵盤 + 鼠標導航&amp;nbsp;&lt;/strong&gt;- Vim 風格的快捷鍵以及點擊導航和滾輪支持&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智能日誌查看器&amp;nbsp;&lt;/strong&gt;- 自動滾動，具有智能暫停/恢復行為&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;全局暫停控制&amp;nbsp;&lt;/strong&gt;- 空格鍵在緩衝日誌時暫停整個儀錶板&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;模態細節&lt;/strong&gt; -&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;通過可擴展視圖深入查看單個日誌條目&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日誌計數分析&amp;nbsp;&lt;/strong&gt;- 具有熱圖可視化、按嚴重程度進行模式分析和服務分佈的詳細模型&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;人工智能分析 &lt;/strong&gt;-&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;通過可配置模型獲得有關日誌模式和異常的智能洞察&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3 style="text-align:start"&gt;Advanced Filtering&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;正則表達式支持 -&amp;nbsp;&lt;/strong&gt;使用正則表達式過濾日誌&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;屬性搜索&amp;nbsp;&lt;/strong&gt;- 通過特定屬性值查找日誌&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;嚴重性過濾&amp;nbsp;&lt;/strong&gt;- 關注錯誤、警告或特定日誌級別&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;交互式選擇&amp;nbsp;&lt;/strong&gt;- 單擊或使用鍵盤導航來瀏覽日誌&lt;/li&gt;
&lt;/ul&gt;

&lt;div style="text-align:start"&gt;
&lt;h3 style="text-align:start"&gt;AI-Powered Insights&lt;/h3&gt;
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;模式檢測&amp;nbsp;&lt;/strong&gt;- 自動識別重複出現的問題&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;異常分析&amp;nbsp;&lt;/strong&gt;- 發現日誌中的異常模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根本原因建議&amp;nbsp;&lt;/strong&gt;- 獲取 AI 驅動的調試幫助&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可配置模型&lt;/strong&gt;-從 GPT-4、GPT-3.5 或任何自定義模型中選擇&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多個提供商&amp;nbsp;&lt;/strong&gt;- 可與 OpenAI、LM Studio、Ollama 或任何與 OpenAI 兼容的 API 配合使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地 AI 支持&amp;nbsp;&lt;/strong&gt;- 使用本地模型完全離線運行&lt;/li&gt;
&lt;/ul&gt;

                                                                    &lt;/div&gt;
                                                                </description>
      <link>https://www.oschina.net/p/gonzo</link>
      <guid isPermaLink="false">https://www.oschina.net/p/gonzo</guid>
      <pubDate>Mon, 18 Aug 2025 10:17:00 GMT</pubDate>
    </item>
    <item>
      <title>Linux 內核古老的軟盤驅動在 2025 年迎來代碼維護</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;Linux 內核中最古老的組件之一——軟盤驅動（Floppy Disk Driver），迎來了久違的維護更新。儘管軟盤早已退出主流舞台，但在某些工業控制設備和復古計算場景中依然有人使用，因此該驅動仍被保留在內核中。&lt;/p&gt; 
&lt;p&gt;此次補丁由 Intel 工程師 &lt;strong&gt;Andy Shevchenko&lt;/strong&gt; &lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20250825163545.39303-1-andriy.shevchenko%40linux.intel.com%2F" target="_blank"&gt;提交&lt;/a&gt;，主要是代碼清理工作，包括：&lt;strong&gt;移除未使用的宏、替換常量、整理頭文件順序、合併並修正舊補丁&lt;/strong&gt;中的問題等。雖然沒有引入新功能，但有助於提升代碼質量和後續可維護性。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1010" src="https://static.oschina.net/uploads/space/2025/0827/180737_e7qi_2720166.png" width="1212" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;這也是軟盤驅動近三年來的首次顯著更新。目前補丁系列正處於社區評審階段，供仍需在現代 Linux 系統上使用軟盤的用戶參考與測試。&lt;/p&gt; 
&lt;p&gt;儘管軟盤看似過時，但在高價值的老舊機械與特殊工業環境中，軟盤依然有現實作用，因此 Linux 保留並維護其驅動具有一定必要性。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368810</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368810</guid>
      <pubDate>Mon, 18 Aug 2025 10:08:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Linux 34 歲生日快樂！</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;你知道嗎？34 年前的今天，歷史上最重要的軟件項目之一，在 Usenet 新聞組上的一篇不起眼的帖子中誕生了。&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2019/0826/211817_vyJK_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;這個項目就是 Linux 內核。當時，21 歲的 Linus Torvalds 説，這只是個業餘愛好，不會做大做強，也不會成為專業的項目，很顯然他錯了。&lt;/p&gt; 
&lt;p&gt;Linus Torvalds 最初將 Linux 內核作為個人愛好，但從未想過將其發展成專業版本。初始項目於 1991 年 4 月啓動，到 1991 年 7 月，他已開始着手用戶級方面的工作，例如設備驅動程序和可運行的硬盤。其他早期里程碑包括移植 bash 和 gcc，並於 1991 年 9 月向一小部分用戶開放了 0.01 版本的首批源代碼。&lt;/p&gt; 
&lt;p&gt;有趣的是，Linux 的最早版本 0.01 僅僅是源代碼，實際上無法運行。Linus Torvalds 曾表示，發佈這個版本只是為了向當時感興趣的人表示一個象徵性的姿態。另一個有趣的細節是，早期版本的 Linux 不可移植，並且依賴於 i386 特性和 GCC 編譯器——值得注意的是，2012 年發佈的 3.8 版內核中已經取消了對 i386 的支持。&lt;/p&gt; 
&lt;p&gt;Linux 內核終於在 1991 年 10 月發佈了 0.02 版本，正式投入使用。作為第一個可用的版本，這是一個重要的進步。儘管如此，它仍然是一個「黑客內核」，存在大量 bug，並且缺少軟盤驅動程序等功能。然而，它能夠成功運行重要的二進制文件，例如 bash、gcc 和 GNU 實用程序。&lt;/p&gt; 
&lt;p&gt;1991 年 12 月發佈的 0.11 版本，系統得到了進一步改進，包括按需加載、代碼/數據共享、更優的驅動程序以及對各種鍵盤和顯卡的支持。0.11 版本也是一個重要的里程碑，因為它首次包含了 mkfs、fsck 和 fdisk 等程序，從此用戶不再需要使用 Minix 進行設置。&lt;/p&gt; 
&lt;p&gt;大約在這個時候，Linux 內核從最初的獨立開發演變為協作開發，並加入了一些其他人編寫的新功能，例如 tytso 開發的 POSIX 作業控制。隨着越來越多的人開始瞭解 Linux，第一個郵件列表「Linux-activists」應運而生，同時還創建了用於 FTP 訪問的鏡像站點。&lt;/p&gt; 
&lt;p&gt;社區幫助解決了一個關鍵問題，即需要以更少的內存運行系統，這促使 Linus Torvalds 實現了磁盤分頁。內核最初使用的版權制度也頗具趣味。它既寬鬆，又有限制，因為它不允許金錢交易，後來這一制度被修改了。&lt;/p&gt; 
&lt;p&gt;隨着 1992 年 1 月 0.12 版本的發佈，內核變得非常穩定，並開始更快地傳播。該版本包含一些重大修正、VM（磁盤分頁）和作業控制，以滿足關鍵用戶需求。此時，Linux 在許多方面都比 Minix 做得更好，引起了人們的極大興趣。此後，版本號從 0.12 躍升至 0.95。&lt;/p&gt; 
&lt;p&gt;自這些早期版本發佈以來，Linux 經歷了漫長的歷程，Linux 6.17 的第三個候選版本昨天剛剛發佈。雖然 Linux 在個人計算設備上的吸引力不大，市場份額徘徊在 5% 左右，但它在其他領域取得了巨大的成功。它在服務器上廣泛使用，為大多數雲基礎設施提供支持，在全球大多數超級計算機上運行，它存在於許多嵌入式設備中，並且是 Android 的核心。&lt;/p&gt; 
&lt;p&gt;Linux 34 歲生日快樂！&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0827/175630_INlj_2720166.jpg" referrerpolicy="no-referrer"&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368806</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368806</guid>
      <pubDate>Mon, 18 Aug 2025 09:58:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>GPT-5 通關寶可夢，創下 9517 步新紀錄</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在一場精彩絕倫的寶可夢對決中，AI 新星 GPT-5 以 9517 步的佳績成功通關經典遊戲《寶可夢水晶》，擊敗了遊戲中的終極對手赤爺（Red）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;根據推特博主 Clad3815 的統計，GPT-5 的通關步數遠遠低於其前任 o3 的 27040 步，後者幾乎是 GPT-5 的三倍。這意味着 GPT-5 只需短短 202 小時就能完成這一挑戰，而 o3 則需要近一個月的時間。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="282" src="https://oscimg.oschina.net/oscnet/up-faf237726bfb0ad5409fdc8bf6508fb0f9a.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;遊戲中，玩家需要從小鎮出發，收集徽章，挑戰道館館主，最終與赤爺對決。GPT-5 如同小智一般，沿着主線一路推進，收集全部 16 枚徽章時，僅用了 9205 步，而 o3 則耗費了 22334 步。更為驚人的是，從收集完徽章到擊敗赤爺的階段，GPT-5 僅需 312 步，而 o3 卻花費了將近 5000 步，效率提高了十幾倍。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;在四天王和冠軍的挑戰中，GPT-5 同樣展現了超高效率，僅用 7329 步，o3 則用了超過 18000 步。在通關《寶可夢水晶》之前，GPT-5 還成功挑戰了《寶可夢紅》，同樣取得了壓倒性勝利。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;OpenAI 的聯合創始人 Greg Brockman 對此次表現也表示讚賞。那麼，究竟是什麼讓 GPT-5 如此高效呢？Clad3815 總結了幾個關鍵因素：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;幻覺少，速度快：GPT-5 在遊戲過程中出現的 「幻覺」 現象明顯減少，極大提高了它的速度。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;空間推理強：GPT-5 在複雜區域中幾乎不迷路，能夠有效規劃行動序列，節省了大量時間。&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:left"&gt;&lt;span style="color:#000000"&gt;目標規劃優越：在執行目標和任務規劃方面，GPT-5 展現出了卓越的能力。&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span style="color:#000000"&gt;有趣的是，寶可夢這款經典遊戲被認為是 AI 能力的一個 「新基準」，為大型語言模型的決策能力、上下文理解和界面控制能力提供了測試平台。然而，挑戰這款遊戲的成本不菲，一位網友估計 GPT-5 在通關《寶可夢紅》時，花費了大約 3500 美元（約 2 萬 5 人民幣）的 API 額度。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368791</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368791</guid>
      <pubDate>Mon, 18 Aug 2025 09:22:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>聯合國大會通過決議設立全球人工智能治理新機制</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;聯合國大會 26 日就全球人工智能治理通過一項決議，決定設立「人工智能獨立國際科學小組」和「人工智能治理全球對話」機制，以促進可持續發展和彌合數字鴻溝。&lt;/p&gt; 
&lt;p&gt;根據聯大當天通過的《人工智能獨立國際科學小組和人工智能治理全球對話的職權範圍和設立及運作方式》決議，聯合國將設立一個由 40 名專家組成的小組，以評估人工智能的風險、機遇和影響。此外，聯合國將開展全球對話，開展政策討論並達成共識，以加強全球人工智能治理，支持可持續發展目標並彌合數字鴻溝。&lt;/p&gt; 
&lt;p&gt;代表「77 國集團和中國」發言的伊拉克代表表示，如果以負責任和包容的方式部署人工智能，並服務於實現可持續發展目標，人工智能將有望變革公共服務、教育、衞生和數字經濟，同時加速 2030 年議程的實現。這些益處的實現取決於一個公平和包容的國際治理框架，以確保公平獲取人工智能，防止差距擴大，並考慮人工智能的社會、經濟、倫理、文化和技術影響。讓發展中國家充分參與塑造人工智能治理的未來至關重要，在這一過程中必須遵循主權、公平和透明的原則。&lt;/p&gt; 
&lt;p&gt;代表歐盟發言的丹麥代表説，新的機制將通過促進共享知識、共同理解和彙集經驗，促進聯合國會員國在人工智能領域的能力建設，尤其惠及發展中國家，並將很快成為繼續推進聯合國人工智能討論的寶貴工具。&lt;/p&gt; 
&lt;p&gt;聯合國祕書長古特雷斯的發言人當天發表聲明説，古特雷斯對聯大通過決議決定在聯合國內設立兩個新機製表示歡迎。祕書長不久將公開徵集科學小組成員的提名，該小組將在 2026 年和 2027 年分別於日內瓦和紐約舉行的人工智能治理全球對話上提交其年度報告。（新華社）&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368781</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368781</guid>
      <pubDate>Mon, 18 Aug 2025 08:56:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>阿里達摩院發佈玄鐵 E901，最小面積 RISC-V 處理器</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;阿里巴巴達摩院發佈了 RISC-V 精簡處理器玄鐵 E901，面積相較玄鐵之前的嵌入式系列處理器大幅縮小 39% ，同時單位能效性能提升 48%，動態功耗優化 48%，廣泛適配從智能家居、可穿戴設備到車載控制單元的多樣化應用場景。&lt;/p&gt; 
&lt;p&gt;&lt;img height="1586" src="https://static.oschina.net/uploads/space/2025/0827/164024_WZeY_2720166.png" width="954" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;據悉，玄鐵 E901 將最小配置面積在 40nm 下壓縮到 10.7 千門，相較其他玄鐵 E 系列處理器實現了 39% 的面積優化，尤其適合對封裝尺寸和成本敏感的嵌入式場景。在能效方面，玄鐵 E901 深度優化功耗設計，單位能效性能提升 48%，動態功耗優化 48%，契合物聯網設備對長續航和低功耗休眠的要求。多輪驗證測試顯示，玄鐵 E901 在典型工作負載下達到 1.34 DMIPS/MHz 的指令執行效率和 2.78 CoreMark/MHz 的綜合性能指標，兼顧超小面積與超高能效。 &amp;nbsp;&lt;/p&gt; 
&lt;p&gt;此外，玄鐵 E901 引入了協處理器接口，用戶可以自主定製指令擴展模塊，並與玄鐵工具鏈和生態軟硬件無縫集成，大幅縮短產品從設計到量產的週期。&lt;/p&gt; 
&lt;p&gt;達摩院玄鐵 RISC-V 產品總監陳江杉表示，E901 以更小的體積、更高的代碼密度和更靈活的架構架構設計，為嵌入式領域帶來全新技術範式，有望加速嵌入式系統在 AI 時代的創新發展。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368772</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368772</guid>
      <pubDate>Mon, 18 Aug 2025 08:41:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>斯坦福大學最新研究：生成式 AI 重創「高度可自動化」崗位</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftime.com%2F7312205%2Fai-jobs-stanford%2F" target="_blank"&gt;斯坦福大學一項最新研究指出&lt;/a&gt;，自 ChatGPT 發佈以來，美國年輕人中從事「高度可自動化」崗位（如軟件開發、客服、翻譯）的就業率明顯下降：22–25 歲軟件開發人員數量較 2022 年底鋭減近 20%，而年長開發者因具備難以被 AI 複製的軟技能基本未受影響。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;軟件開發人員&lt;/strong&gt;：以 22 至 25 歲的軟件開發人員為例，截至 2025 年 7 月，該羣體僱員人數較 2022 年底的峯值下降近 20%&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;年齡層分化&lt;/strong&gt;：26 至 30 歲員工的崗位數量基本持平，而更年長的勞動者人數則繼續增長&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;其他崗位&lt;/strong&gt;：客服代表、翻譯等崗位也呈現類似下降趨勢，進一步證實 AI 對就業的衝擊&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;研究藉助 ADP 詳實數據控制宏觀因素後確認，AI 替代是主要推手，且初級崗位減少可能阻斷下一代專家的成長路徑。與此同時，AI 起「增強」而非「替代」作用的領域（如 AI 輔助醫療診斷）裏，年輕僱員就業增長高於平均，顯示「增強人類能力」的路線有望帶來淨就業增長。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-7b5d8b5e7f4e6e5f2b903ce742d7513e7aa.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-66c683debca8fac4a0b68bc80d51e3b2c23.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;研究指出，資深開發者因具備難以被 AI 複製的軟技能（如與非技術團隊協作、交付商業級產品），受衝擊較小。然而，這也帶來一個潛在悖論：如果年輕開發者賴以積累經驗的初級任務已被 AI 取代，下一代專家將如何培養？因此作者建議，必須更系統地培訓新人，而不能僅依賴日常工作中自然習得（用系統培訓取代傳統的「邊幹邊學」）。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368769</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368769</guid>
      <pubDate>Mon, 18 Aug 2025 08:34:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Docker 部署 Transmission，無公網 IP 如何使用內網穿透遠程訪問？</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; text-align:left"&gt;Transmission 是一款開源、輕量且資源佔用極低的 BitTorrent 客戶端。藉助 Docker，可以在幾分鐘內把它跑起來；再借助貝鋭花生殼的內網穿透功能，又能隨時隨地從外網安全訪問。下面給出一條龍的部署與遠程訪問流程，全部命令可直接複製粘貼。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//f52f237de50321165cb6f836a0270607.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;一、準備 Docker 環境 &amp;nbsp;&lt;/h3&gt; 
&lt;p style="color:#000000; text-align:left"&gt;1. 一鍵安裝最新版 Docker（已包含阿里雲鏡像加速）：&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//aca9dbf2f7e6135d27f532c6a267fe3f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//d2b9288540324377ec0b7858bab3c6c9.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;2. 啓動並設為開機自啓： &amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//6532c77c6027799ce2cbe024a905841a.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//2590c3bf61a9f0d8e7389811de625063.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;二、拉取 Transmission 鏡像 &amp;nbsp;&lt;/h3&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//db5caba93c06fd7c4a73e0db9e09b332.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//40da76e7b9bd5fae30a184ced4b2bc76.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;如果拉取超時，可在 `/etc/docker/daemon.json` 中追加國內鏡像源，例如： &amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//8bd74c7a20194e37277b18e01d2b7b9e.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;三、運行 Transmission 容器 &amp;nbsp;&lt;/h3&gt; 
&lt;p style="color:#000000; text-align:left"&gt;下面命令把 Web 端口 9091、BT 監聽端口 41234（TCP/UDP）都映射出來，並把配置、下載目錄、監控目錄掛到宿主機持久化。按需替換 UID/GID、時區、用戶名密碼以及宿主機路徑。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//eb92110214757a1cc1a078560fb46d5f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//d09c9b1f2e753ed3bf88bd6cbad00538.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;啓動後，瀏覽器訪問&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;strong&gt;http://&lt;/strong&gt;&lt;strong&gt;局域網&lt;/strong&gt;&lt;strong&gt;IP:9091&lt;/strong&gt;即可看到 Transmission Web UI。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//3c49017218b3081c6f38c0e0597dcb90.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;點擊左上角圖標即可上傳種子或粘貼磁力鏈接開始下載。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//bfac7cf1eecdcf636da9fcf310cdc414.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//03a989d82c00959a5812a917d1008262.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;四、安裝並配置貝鋭花生殼 &amp;nbsp;&lt;/h3&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;1.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;下載客戶端&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;在同一內網任意設備上，從花生殼官網下載最新 Linux 版客戶端，可根據實際情況，選擇 docker 安裝花生殼。（`phddns_5.x.x_amd64.deb`）。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//b140bd006b8357c6426bb54c1a94ad90.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//068f3828817988a2d0bf955b738c4d7d.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;2. 安裝&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;根據不同位數的系統輸入下面的命令進行安裝，安裝完成會自動生成 SN 碼與登錄密碼。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//e4ef40ef74e05b9077274960681a2a1f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//79632f40ed6268c8f218e4aa1908a5c0.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;3.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;激活與登錄&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;瀏覽器打開 [花生殼管理平台](http://b.oray.com)，用 SN 和默認密碼登錄。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//811eddab95ffff4194a83ecea364cf6f.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;首次登錄需激活設備，支持微信掃碼或綁定貝鋭賬號。 &amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//b92fa0147299cf26479c325bef87c095.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;&lt;strong&gt;4.&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/strong&gt;&lt;strong&gt;添加映射&lt;/strong&gt;&lt;strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;激活成功後，進入「內網穿透」→「添加映射」,填寫新增的映射信息。 &amp;nbsp;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//9ea490cccbfad6abeca69308f41c33a6.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;保存後，貝鋭花生殼會生成一個 `http://xxxx.hsk.oray.com:端口` 的外網地址。可訪問外網地址訪問 transmission。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//792d433d03760537ba4b0173383be5f8.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;h3&gt;五、外網訪問與日常使用 &amp;nbsp;&lt;/h3&gt; 
&lt;p style="color:#000000; text-align:left"&gt;任何地點打開瀏覽器，輸入花生殼提供的外網地址，即可遠程管理 Transmission：添加種子、查看進度、做種、限速等操作與局域網完全一致。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:center"&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet//c478dce0d96856ec79331290e33ecf38.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;至此，藉助貝鋭花生殼內網穿透就可以使本地 Docker 版 Transmission 已可安全、便捷地實現遠程訪問。&lt;/p&gt; 
&lt;p style="color:#000000; text-align:left"&gt;https://blog.csdn.net/oray2013/article/details/150856127?sharetype=blogdetail&amp;amp;sharerId=150856127&amp;amp;sharerefer=PC&amp;amp;sharesource=oray2013&amp;amp;spm=1011.2480.3001.8118&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368767</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368767</guid>
      <pubDate>Mon, 18 Aug 2025 08:29:00 GMT</pubDate>
      <author>作者: 開源科技</author>
    </item>
    <item>
      <title>​Meta 新超級智能實驗室遭遇離職潮</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;span&gt;Meta 公司&lt;span&gt;最新&lt;/span&gt;成立的&lt;span&gt;超級&lt;/span&gt;智能實驗室（Meta Superintelligence Labs）剛成立兩個月，就傳出多名人工智能研究人員辭職的消息。該實驗室是由 CEO 馬克・扎克伯格親自推動成立的，旨在吸引&lt;span&gt;頂尖&lt;/span&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;AI 人才，迅速在人工智能領域追趕競爭對手。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;&lt;img height="249" src="https://oscimg.oschina.net/oscnet/up-4bf9ed3e2c4d738f70444a66e35b116229b.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;據瞭解，至少有三名研究人員已經從 Meta 辭職，其中兩名曾在 OpenAI 工作，分別是 Avi Verma 和 Ethan Knight。他們在 Meta 工作不到一個月就選擇返回 OpenAI。Avi Verma 之前在 OpenAI 擔任研究員，而 Ethan Knight 則是從埃隆・馬斯克創立的 xAI 公司加入 Meta 的。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;第三名研究員 Rishabh Agarwal 也在社交媒體上宣佈了離職消息。他在四月加入 Meta，最初專注於生成式 AI 項目，但隨後轉至&lt;span&gt;超級&lt;/span&gt;智能實驗室。雖然 Agarwal 離職的原因尚不清楚，但他目前居住在加拿大，而 Meta 的 AI 團隊主要位於加州門洛帕克。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;在社交媒體上，Agarwal 表示，雖然在新實驗室工作與周圍的優秀人才和技術資源相伴，他仍然做出了艱難的決定，選擇迎接不同的挑戰。Meta 公司發言人 Dave Arnold 對此表示，許多人在經歷強烈的招聘過程後，選擇留在現有職位而非轉職是很正常的現象。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;此外，Meta 還失去了另一位&lt;span&gt;領導者&lt;/span&gt;，Chaya Nayak，她擔任生成式 AI 產品管理總監，現已加入 OpenAI 從事特別項目。Verma 和 Knight 沒有對辭職事宜作出回應，而 Nayak 在截止發稿時也未作評論。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;這些離職事件是對 Meta&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;span&gt;超級&lt;/span&gt;智能實驗室開局狀況的強烈警示。扎克伯格曾通過高達九位數的薪資吸引人才，試圖在人工智能通用性研究的競爭中迅速縮小差距。然而，Meta 高層似乎在解決與 AI 項目相關的官僚問題和招聘挑戰上面臨困難。公司近期還多次對 AI 團隊進行了重組，&lt;span&gt;最新&lt;/span&gt;一次則是將員工劃分為四個小組。&lt;/p&gt; 
&lt;p style="color:#242424; margin-left:0; margin-right:0; text-align:left"&gt;雖然 Meta 在人才招聘上進行了一系列努力，但最近傳出該公司已開始放緩招聘步伐，顯示出人力資源戰略的調整。與此同時，Meta 還與其他 AI 初創公司達成了一些合作協議，進一步推動其研究與開發。Meta 新任首席 AI 官 Alexandr Wang 在最近的聲明中提到，該公司已與專注於 AI 生成圖像和視頻的 Midjourney 達成技術合作協議。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368765</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368765</guid>
      <pubDate>Mon, 18 Aug 2025 08:20:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>ChatGPT 被指控導致美國 16 歲少年自殺</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;16 歲的亞當·雷恩（Adam Raine）自殺前，曾花了數月時間諮詢 ChatGPT，商討結束生命的計劃。據《紐約時報》&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nytimes.com%2F2025%2F08%2F26%2Ftechnology%2Fchatgpt-openai-suicide.html" target="_blank"&gt;報道&lt;/a&gt;，如今，他的父母正在向 OpenAI 提起首例已知的非正常死亡訴訟。&lt;/p&gt; 
&lt;p&gt;許多面向消費者的人工智能聊天機器人都被設定為，當用戶表現出傷害自己或他人的意圖時，就會啓動安全功能。但&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2507.02990" target="_blank"&gt;研究&lt;/a&gt;表明，這些保障措施遠非萬無一失。&lt;/p&gt; 
&lt;p&gt;以雷恩為例，在使用付費版 ChatGPT-4o 時，AI 經常會建議他尋求專業幫助或聯繫求助熱線。然而，他卻能繞過這些限制，只需告訴 ChatGPT，他正在為正在創作的虛構故事詢問自殺方法即可。&lt;/p&gt; 
&lt;p&gt;OpenAI 在其博客上討論了這些缺陷。「隨着世界逐漸適應這項新技術，我們深感有責任幫助那些最需要幫助的人」，博文&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Findex%2Fhelping-people-when-they-need-it-most%2F" target="_blank"&gt;寫道&lt;/a&gt;。「我們正在不斷改進我們的模型在敏感交互中的響應能力。」&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://static.oschina.net/uploads/space/2025/0827/160639_X2LA_2720166.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;儘管如此，該公司承認現有大型模型安全訓練存在侷限性。「我們的保障措施在常見的短時間交流中更可靠」，帖子繼續説道。「隨着時間的推移，我們瞭解到，這些保障措施在長時間互動中有時會變得不那麼可靠：隨着來回次數的增加，模型的部分安全訓練可能會下降。」&lt;/p&gt; 
&lt;p&gt;這些問題並非 OpenAI 獨有。另一家人工智能聊天機器人制造商 Character.AI 也因其在青少年自殺事件中所扮演的角色而面臨訴訟有關。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368762</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368762</guid>
      <pubDate>Mon, 18 Aug 2025 08:06:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>庫存平台穩定性建設實踐</title>
      <description>&lt;div class="content"&gt;
                                                                                                                    
                                                                                                                                                    &lt;span id="OSC_h1_1"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;庫存平台面臨的穩定性挑戰&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;庫存平台為貨品流通鏈路提供全面的庫存管理服務，貫穿其整個訂單生命週期，是電商領域不可或缺的核心模塊。在平台建設過程中，我們面臨了諸多穩定性方面的挑戰。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;具體而言，存在以下問題：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、業務流程繁多，不同流程共同訪問同一應用，容易相互影響。例如，銷售單庫存預佔功能出現問題時，退供預佔功能亦隨之失效。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//0dd631d88614d5d8ab73959c8b94ba1a.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、業務流程複雜，修改易出錯。銷售單預佔等流程，流程分支多、步驟多，新入職的員工需要至少一週的時間才能理解這些流程。對如此複雜的流程進行修改極易導致錯誤。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、庫存數據的準確性要求極高。一旦某一貨品的庫存信息出現錯誤，可能導致該貨品後續的訂單都無法正常下單或無法履約。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;4、數據庫熱點操作帶來的穩定性威脅。秒殺活動、直播促銷等業務場景，往往會出現短時間內多個訂單都去預佔某一個或幾個商品庫存的情況。多個線程併發對同一個數據庫商品數據做庫存扣減時，數據庫中會加鎖來保障數據被正確操作。當商品數據足夠【熱】時，大量的鎖等待會引發性能問題，進而導致系統不可用，見下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//5439076b1852e7d995740a149371e549.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;5、店鋪庫存高頻、大規模計算帶來的穩定性威脅。一個商家的庫存發生變動後，需要把商家庫存重新分配給商家名下的各個店鋪，這個分配過程計算量極大，容易把 CPU 打滿，進而影響所有服務&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_2"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;庫存平台穩定性建設&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;為了應對庫存平台所面臨的穩定性挑戰，除了通用的可用率可視化、限流等治理措施外，我們還結合庫存業務的特點，採取了以下穩定性建設。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_3"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;流量拆分&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們識別到，庫存流量有以下幾個特點：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、存在必須要重點保障的核心流量。銷售單庫存預佔能力屬於物流核心流程，其目的是為京東物流倉配業務提供出庫單庫存校驗服務，從而避免訂單量超出庫存容量而錯誤地傳遞到倉庫管理系統（WMS）中，在接單鏈路中若庫存操作失敗則訂單接單失敗，造成公司大量的財產損失&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、存在一些計算量大又不需要實時處理的流量。如 WMS 出庫以後，需要回傳庫存出庫情況，這部分流量很高，但對處理實時性要求不高&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;3、存在一些明細行特別多的庫存批量操作。以銷售單庫存預佔為例，絕大部分庫存操作批量大小在 10 個以內，但是也存在部分批量大小超過 6000 的情況。不同的批量大小，調用方需要有不同的超時配置，如批量大小在 10 個以內，超時時間配置為 500 毫秒；批量大小大於 6000 時，超時時間需要配置為 50 秒&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;基於流量的這些特點，我們對庫存流量拆分如下：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//b5433f5707bbb0c52fa5e71b4e85fb26.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;注：流量拆分使用不同的服務分組實現&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_4"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;灰度鏈路&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;針對庫存操作流程複雜且改動容易出錯的情況，我們在過往的上線過程中，通常會使用 ducc 編寫一個流程開關，逐步進行灰度放量。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;然而，這種做法存在兩個主要問題：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、維護成本較高。需求經過驗證後，仍需再次上線以移除不再使用的開關，但往往因疏忽而未能及時下線，導致代碼中充斥着冗餘的開關，邏輯變得混亂。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、容易引發線上問題。大型需求的改動點通常較多，需要在多個地方添加開關，稍有不慎便可能遺漏，從而導致線上問題頻發。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們識別到，庫存業務通常在一個商家範圍內進行。因此，庫存操作的核心接口均包含以商家為單位的參數。在進行灰度驗證時，可以按商家單位進行灰度切量。基於這一特性，庫存系統構建了以商家為基礎的灰度鏈路。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//4667423b81eff14e463130bb335a2708.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;相較於以往的灰度方法，灰度鏈路無需在每次需求變更時增加流程控制代碼，從而降低了線上出現問題的概率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_5"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;操作數量校驗&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於某一貨品的庫存操作，將變更一條或多條庫存記錄。例如，在依據渠道優先級進行出庫操作時，將優先扣減京東渠道的庫存，再扣減共享渠道的庫存。當某一貨品的操作涉及多條庫存記錄時，需為每條庫存記錄分配相應的操作數量。操作完成後，應為每條記錄生成變更記錄流水。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;針對這個業務現狀，我們進行了庫存流水加和校驗：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//6c75259e3fbcbd209848e47d2a05a6c0.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_6"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據庫熱點操作應對&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當商家出售爆款商品時，會頻繁扣減特定庫存記錄。在操作數據庫的過程中，數據庫會對庫存記錄進行加鎖，並按順序執行這些扣減操作。這導致容器中積累了大量等待的線程和數據庫連接，一方面可能導致服務請求超時，另一方面，大量佔用容器資源可能引發容器宕機，進而影響其他商品的庫存操作。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;倘若採取粗暴的限流措施，將導致大量庫存扣減失敗，並且連非熱門商品也會受到波及，造成不良影響。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_7"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;使用 redis 緩存解決熱點&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們的初版的解決方案是在緩存中添加庫存數據，利用緩存的高效性能來應對熱點問題。我們按商家的粒度逐步在灰度鏈路中進行流量切換，具體如下圖所示。：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//36a53f49512433e17a67e7bbc1943745.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過此項優化，成功將熱點商品預佔 TPS 從 50 提升到 1200，提升了 24 倍。TP99 降低到 130ms，降低至原時長的 4.3%（從 3000ms 到 130ms）。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;橙色部分為優化後的結果：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//43fe9c9c9d90b0c0f3534b11c18f7097.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h2_8"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在切量過程中，我們發現了兩個問題：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、數據庫與 Redis 數據存在不一致的情況。由於某些業務場景考慮不周全，導致數據庫與 Redis 數據出現不一致，而這些問題往往需要通過商家或下游的反饋才能被發現並修復。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、部分關鍵客戶商家難以進行灰度切量。一些大型關鍵客戶商家在處理庫存時，存在定製化的特殊處理邏輯，使用緩存來支撐這些邏輯的成本較高且容易出錯。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_9"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解決數據庫與 Redis 數據不一致問題方案&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;span id="OSC_h4_10"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;從操作流程上保障數據庫與 redis 一致&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;操作流程上面臨的主要技術問題如下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//14f7c88a0a17f229a43b9ca10a9d466f.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;初始化流程方案。使用，鎖定 db 庫存+redis 事務來保障數據一致性。見下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//0ff947ad0089fb30c510520a3982c119.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;•&lt;/span&gt; 
 &lt;span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據同步流程。使用 mq 重試+任務系統兜底來保障同步能完成&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//8735e6ded85819ead7c83b098c26bbf4.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h4_11"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據庫、redis 數據一致性校驗&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;庫存平台每日執行數百萬次庫存操作，如何在不影響系統性能的同時及時發現數據不一致的情況，是一個需要仔細權衡的問題。我們採取了以下解決方案：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//88cbd979f1614f5a9fe80b15a84c34ab.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h4_12"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;增加緩存流水&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當發現有數據庫-redis 數據不一致時，我們需要有數據來協助我們定位不一致問題發生的原因，所以在 es 中增加了 redis 緩存操作的流水記錄，如下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//39ff034eedd2ba1f46f8dbfe777421bc.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h4_13"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據庫、redis 數據查詢、操作管理能力&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們開發了管理頁面，支持以商家、貨品、單據等維度來查詢並操作數據庫、redis 數據，界面如下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//1c209fe0500cfc9eb5a0c734b80026a2.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h3_14"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;解決關鍵客戶商家難以使用 redis 緩存問題&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;一些大型關鍵客戶商家在處理庫存時，存在大量定製化的邏輯，在緩存中實現一次不僅成本高，還容易出現錯漏。針對這部分商家，我們採用了以下治理思路。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h4_15"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;異步限流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;設計思路：讓熱點不那麼熱&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#7437dd"&gt;。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過減緩預佔操作速度，從而降低熱點熱度，緩解庫存系統的性能壓力。見下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//c9dee62bccfa80a86ad8434e67b870f2.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h4_16"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;熱點檢測、限流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;設計思路：及時識別熱點庫存，對熱點庫存實施流量控制，從而確保系統的穩定性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#333333"&gt;流量控制採用滑動窗口算法。實現原理：每當經過一個時間點，時間窗口即向前推進一個單位，計算該窗口內的請求數量。若請求數量超出預設限制，則拒絕處理請求；反之，則予以處理。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//adc0fdf38c1c2397195f25dd94c270f4.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;具體實現使用 AOP 切面編程，流程如下圖：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//71f9e9b6526c1cbed664461ebb61d256.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;注：限流流程在 try-catch 中執行，中間除了【被限流異常】，別的異常都捕獲吞掉，防止影響正常邏輯&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;熱點限流告警示例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//a0410309eb99f35f48c8ac98dc29752d.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h2_17"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;店鋪庫存穩定性建設 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;商家通過入駐京倉來管理其線上與線下銷售渠道的庫存。京倉是一個綜合性的倉儲管理系統，它幫助商家有效地整合和管理其庫存資源。商家可以在京東 POP 店、京東自營店、外部電商平台等線上平台以及線下門店進行銷售。這種多渠道銷售模式不僅擴大了商家的市場覆蓋面，還提高了銷售效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;為了防止超賣現象，商家需要確保線上與線下庫存的共享。這意味着商家必須實時更新庫存數據，確保所有銷售渠道都能看到最新的庫存信息。通過這種方式，商家可以避免因庫存信息不同步而導致的超賣問題，從而提升客戶滿意度和信任度。例如，如果一個商品在線上被售出，系統會立即更新庫存信息，確保線下門店不會再次銷售同一商品。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;目前，已有 75,821 家商家入駐京倉，店鋪數量達到 162,306 家，實物 1,785 萬件，明細行數為 9,309 萬條。這些數據表明，京倉已經成為眾多商家管理庫存的重要平台。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;隨着商家接入量、計算場景的增加，系統計算量也隨之增大，常常使得&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#f5222d"&gt;容器 CPU 和數據庫 CPU 的負載過高&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，進而影響整個系統的穩定性且都是後知後覺，無法提前控量。當容器 CPU 的負載過高時，會導致對外提供的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#f5222d"&gt;JSF 服務的可用率降低&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。這不僅影響了用戶體驗，還可能導致商家的業務受到影響，為了保持系統的穩定性和性能，需要對系統進行優化和升級，同時加強監控和維護，確保系統能夠高效地運行。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//2f7af9529dcd1a6dd63dec71ec468dbf.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_18"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;前置動作&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1、梳理出所有觸發計算的場景共 25 個觸發點庫存變化、低於安全水位、調整商品比例、調整店鋪維度比例、虛擬組套修改、固定值設置等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;2、從以上場景中又梳理出「殺傷力」最大的兩個計算場景分別是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;店鋪比例調整：整個事業部下的所有 SKU 全量計算。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;虛擬組套計算：由於虛擬組套規則的特殊性，單次計算會生成 1.5W+條計算流水。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h3_19"&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;優化方案&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;span id="OSC_h4_20"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;CPU 使用率治理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我們對店鋪維度比例調整場景，進行了提前發現並對該事業部進行提前限流，有效的解決了流量一下全打到應用服務器，導致 CPU 飆升的場景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//8620d179e1737b06d0a36eb1d9581459.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;效果：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//84b647aa05fb6d5b11c8b6e0c108c103.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h4_21"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;JSF 服務治理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過日常&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style="color:#1b1b1b"&gt;OPS Review 發現，當計算任務量激增時，整個系統的資源會被大量佔用，導致對外服務響應時間變長，甚至出現服務中斷的情況。為了改善這一狀況，我們決定將計算功能和 JSF 功能進行分組隔離。這樣，計算任務和用戶界面操作可以分別在獨立的資源池中運行，互不影響。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//ea3d4e46309ca58f883fc5464790dac9.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;效果&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;優化前：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//bcf1cbc1943c5dae1caece6347ce865b.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;優化後&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//8f1d6f1ec3af4dcdd598e7646fa6e7c3.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id="OSC_h4_22"&gt;&lt;/span&gt; 
&lt;h4&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;虛擬組套治理&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;虛擬組套專為京倉來源的訂單設計，通過在 ECLP 中配置虛擬組套關係，實現 JD 商城下單時為一個套裝 SKU，而 ECLP 接單及 WMS 出庫時則按原料 SKU 出庫的功能,給商家帶來了更靈活的銷售策略。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;例如，組套 SKU=1*原料 1(20%)+2*原料 2(20%)+1*原料 3(20%)。通過組套關係可以看出，組套 SKU 的庫存量來源於原料。在進行組套計算時，需先根據店鋪維度比例或 EMG 分配比例計算出原料庫存，再依據組套規則分配給組套 SKU，需進行二次計算。實際應用中，每個原料可以共享給多個組套，整個綁定關係呈現網狀結構，單次計算量會成倍增加 (1W+)，佔用更多計算資源，從而影響其他非組套商家的計算。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;計算示例：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//640b1a0cf25b538cd65de6191c2df999.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//598dbbed8d3abbd49c79249acbee93ba.jpg" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通過以上計算 MQ 拆分，並通過 JMQ4 進行限流，可以做到平滑計算，不會再出現重算量激增導致 CPU 一下打滿情況。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;優化前：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//f6abd7f3123be35d7442fb2e4485d852.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;優化後：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt="" src="https://oscimg.oschina.net/oscnet//e4b237a8753ffed04fdab27e13a861b9.png" referrerpolicy="no-referrer"&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style="color:transparent"&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h1_23"&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;未來規劃&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;span id="OSC_h2_24"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;補充業務監控告警&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當前庫存平台的監控告警主要集中在接口層面，然而，接口的成功返回並不完全意味着業務處理已正常完成並落庫。因此，我們計劃引入更為全面的數據維度監控告警機制，以確保業務處理的完整性和準確性。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;監控策略：以小時數據為單位進行對比，例如將 2 月 28 日 9:00 至 10:00 期間的預佔成功與回傳成功數量，與 2 月 21 日同一時間段的數據進行對比。當差異比例超過預設閾值時，觸發告警。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;告警觸發條件：定時觸發，每小時的第五分鐘執行一次，例如在 10:05 觸發，對比 9:00 至 10:00 的數據。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據來源：通過查詢 ES 或大數據平台進行對比，以避免對線上核心業務造成影響。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id="OSC_h2_25"&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;數據庫-redis 不一致比對工具&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當前接收到數據庫與 Redis 不一致的告警後，我們採取人工查詢數據庫流水及 Redis 流水並進行比對的方式，以查找不一致的原因。由於一個貨品在特定時間段內的流水記錄可能極為繁多，這一比對過程耗時且費力。為此，我們計劃開發一款不一致比對工具，實現自動化分析不一致的原因，並輸出導致不一致的具體單據。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
                                                                                    &lt;/div&gt;
                                                                            </description>
      <link>https://my.oschina.net/u/4090830/blog/18688902</link>
      <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/18688902</guid>
      <pubDate>Mon, 18 Aug 2025 07:53:00 GMT</pubDate>
      <author>原創</author>
    </item>
    <item>
      <title>主權 AI 現狀報告</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;Futurewei、LF AI &amp;amp; Data 和 LF Research 聯手，&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fresearch%2Fstate-of-sovereign-ai" target="_blank"&gt;調研&lt;/a&gt;&lt;span style="color:#000000"&gt;了全球主權 AI 的發展狀況。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;本研究基於對 233 名受訪者的調查及行業領袖的專家見解，揭示主權 AI（即在開發 AI 能力時最大限度減少對外部主體的依賴）已成為各國及組織機構的戰略優先事項，79% 的受訪者認為其具有重要價值且具有戰略意義，原因包括數據控制（72%）、國家安全（69%）、經濟競爭力（48%）和合規性與文化契合度（分別佔 44% 和 31%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;開源軟件、開放標準和開放數據構成了 AI 主權的基礎。開源軟件尤其受到重視，90% 的受訪者認為其至關重要或非常重要，因為它具備靈活性、透明度和可控性。開源技術對主權 AI 的核心價值包&lt;/span&gt;括：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li style="text-align:justify"&gt;&lt;span style="color:#000000"&gt;透明度與可審計性（69%，歐洲地區達 80%）&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:justify"&gt;&lt;span style="color:#000000"&gt;安全與信任（60%）&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:justify"&gt;&lt;span style="color:#000000"&gt;定製化與微調的靈活性（69%）&lt;/span&gt;&lt;/li&gt; 
 &lt;li style="text-align:justify"&gt;&lt;span style="color:#000000"&gt;通過協作開發加速創新（41%）&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;img height="390" src="https://oscimg.oschina.net/oscnet/up-3f203ac16daff4c7ca1ca49d117d74837ec.png" width="500" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;儘管主權與開源領域的協作看似矛盾，但 94% 的受訪者認為全球協作對實現主權 AI 至關重要。基礎模型與數據集成為協作首要領域（均佔 59%），開發工具與平台緊隨其後（39%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;然而，通往開源主權 AI 的道路仍面臨諸多障礙，包括數據質量與可用性問題（44%）以及技術人才短缺（35%）。參與全球 AI 發展的障礙包括：資源限制（35%）、知識產權顧慮（34%）、地緣政治緊張局勢（28%）、國家安全限制（26%）以及合規挑戰（26%）。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;報告指出，展望未來，主權 AI 治理的未來在於開放、社區驅動的框架。戰略建議包括投資開源 AI 基礎設施、培養主權 AI 人才、支持開源基金會及社區驅動的治理模式與標準、應對數據挑戰，以及促進戰略性國際合作。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;研究強調，主權 AI 並非孤立，而是在保持自主權的同時，參與開放、社區驅動的創新網絡。&lt;/span&gt;&lt;/p&gt; 
&lt;p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"&gt;&lt;span style="color:#000000"&gt;詳情&lt;/span&gt;可&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fhubfs%2FResearch%2520Reports%2Flfr_sovereign_ai25_082525a.pdf" target="_blank"&gt;查看完整報告&lt;/a&gt;&lt;span style="color:#000000"&gt;。&lt;/span&gt;&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368749/state-of-sovereign-ai</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368749/state-of-sovereign-ai</guid>
      <pubDate>Mon, 18 Aug 2025 07:40:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>Emacs 真乃編輯器之神，你甚至可以用它來剪輯視頻</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;開發者&lt;a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fxenodium.com%2Femacs-as-your-video-trimming-tool" target="_blank"&gt;分享&lt;/a&gt;了基於開源編輯器 Emacs 剪輯視頻的經驗。他使用 Emacs 作為一個視頻剪輯工具接口——對接 &lt;code&gt;ffmpeg&lt;/code&gt;（命令行工具）來完成視頻片段的裁剪工作，並提供直觀的交互方式。&lt;/p&gt; 
&lt;p&gt;&lt;img height="928" src="https://oscimg.oschina.net/oscnet/up-23b7573270c6eabc63a664cb09a8278f681.png" width="1258" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;核心原理&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Emacs 只是一個「前端」&lt;/strong&gt;，實際處理視頻的任務仍由 &lt;code&gt;ffmpeg&lt;/code&gt; 完成。Emacs 充當一個文本驅動、鍵盤操作友好的界面，讓這類操作更流暢、更整潔。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;簡潔的實現&lt;/strong&gt;：整個功能模塊只有幾百行 Emacs Lisp（Elisp）代碼（不包括依賴庫和 &lt;code&gt;ffmpeg&lt;/code&gt;）即可實現，這突顯了 Emacs Lisp 的強大表達力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;對於這番操作，有網友評價稱「看似荒誕，卻很有意義」：&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;「修剪視頻本質上就是寫下開始/結束時間，有時還加個註釋。然後讓這些文本直接轉成剪輯操作，無需跳到別的編輯器。」&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Emacs 用戶強調，他們的整個工作流程幾乎都圍繞純文本展開：寫筆記、搜索、翻譯、調用外部工具。在這個環境下，&lt;strong&gt;視頻剪輯的啓動與控制也可以文本化、鍵盤化&lt;/strong&gt;，無需跳出當前編輯器。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368742/emacs-as-your-video-trimming-tool</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368742/emacs-as-your-video-trimming-tool</guid>
      <pubDate>Mon, 18 Aug 2025 07:29:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
    <item>
      <title>xAI 發佈編程模型 Grok Code Fast 1，限時免費使用一週</title>
      <description>&lt;div class="content"&gt;
                                                                    
                                                        &lt;p&gt;xAI 正式發佈其首個專為編程優化的模型 Grok Code Fast 1，內部研發代號為 「Sonic」。這是一個文本推理模型，支持 256k 上下文窗口。&lt;/p&gt; 
&lt;p&gt;&lt;img alt="" src="https://oscimg.oschina.net/oscnet/up-2caf13f938833e4dc01e61e7bf10e220b3c.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://oscimg.oschina.net/oscnet/up-9b4bfd50c51ed384083516ddd81f13b5707.png" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height="1384" src="https://static.oschina.net/uploads/space/2025/0827/145337_yAlO_2720166.png" width="1270" referrerpolicy="no-referrer"&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;th&gt;類型&lt;/th&gt; 
   &lt;th&gt;價格&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;輸入&lt;/td&gt; 
   &lt;td&gt;每 100 萬 tokens 收費 $0.20&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;緩存輸入&lt;/td&gt; 
   &lt;td&gt;每 100 萬 tokens 收費 $0.02&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;輸出&lt;/td&gt; 
   &lt;td&gt;每 100 萬 tokens 收費 $1.50&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;該模型現已同步登陸 Windsurf、Cursor、GitHub Copilot、Roo Code、Kilo Code 及 opencode 等多個 AI 編程工具，並提供限時免費使用。&lt;/p&gt;
                                                                                &lt;/div&gt;
                                                                            </description>
      <link>https://www.oschina.net/news/368734</link>
      <guid isPermaLink="false">https://www.oschina.net/news/368734</guid>
      <pubDate>Mon, 18 Aug 2025 06:55:00 GMT</pubDate>
      <author>來源: OSCHINA</author>
    </item>
  </channel>
</rss>
